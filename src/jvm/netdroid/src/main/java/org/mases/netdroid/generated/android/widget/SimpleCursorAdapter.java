/*
 *  Copyright 2024 MASES s.r.l.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 *  Refer to LICENSE for more information.
 */

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.1.0)
*/

package org.mases.netdroid.generated.android.widget;

public final class SimpleCursorAdapter extends org.mases.jcobridge.JCListener implements  {
    public SimpleCursorAdapter(String key) throws org.mases.jcobridge.JCNativeException {
        super(key);
    }

    //@Override
    public android.content.res.Resources.Theme getDropDownViewTheme() {
        raiseEvent("getDropDownViewTheme"); Object retVal = getReturnData(); return (android.content.res.Resources.Theme)retVal;
    }
    //@Override
    public android.database.Cursor getCursor() {
        raiseEvent("getCursor"); Object retVal = getReturnData(); return (android.database.Cursor)retVal;
    }
    //@Override
    public android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence arg0) {
        raiseEvent("runQueryOnBackgroundThread", arg0); Object retVal = getReturnData(); return (android.database.Cursor)retVal;
    }
    //@Override
    public android.database.Cursor swapCursor(android.database.Cursor arg0) {
        raiseEvent("swapCursor", arg0); Object retVal = getReturnData(); return (android.database.Cursor)retVal;
    }
    //@Override
    public android.view.View getDropDownView(int arg0, android.view.View arg1, android.view.ViewGroup arg2) {
        raiseEvent("getDropDownView", arg0, arg1, arg2); Object retVal = getReturnData(); return (android.view.View)retVal;
    }
    //@Override
    public android.view.View getView(int arg0, android.view.View arg1, android.view.ViewGroup arg2) {
        raiseEvent("getView", arg0, arg1, arg2); Object retVal = getReturnData(); return (android.view.View)retVal;
    }
    //@Override
    public android.view.View newDropDownView(android.content.Context arg0, android.database.Cursor arg1, android.view.ViewGroup arg2) {
        raiseEvent("newDropDownView", arg0, arg1, arg2); Object retVal = getReturnData(); return (android.view.View)retVal;
    }
    //@Override
    public android.view.View newView(android.content.Context arg0, android.database.Cursor arg1, android.view.ViewGroup arg2) {
        raiseEvent("newView", arg0, arg1, arg2); Object retVal = getReturnData(); return (android.view.View)retVal;
    }
    //@Override
    public android.widget.Filter getFilter() {
        raiseEvent("getFilter"); Object retVal = getReturnData(); return (android.widget.Filter)retVal;
    }
    //@Override
    public android.widget.FilterQueryProvider getFilterQueryProvider() {
        raiseEvent("getFilterQueryProvider"); Object retVal = getReturnData(); return (android.widget.FilterQueryProvider)retVal;
    }
    //@Override
    public android.widget.SimpleCursorAdapter.CursorToStringConverter getCursorToStringConverter() {
        raiseEvent("getCursorToStringConverter"); Object retVal = getReturnData(); return (android.widget.SimpleCursorAdapter.CursorToStringConverter)retVal;
    }
    //@Override
    public android.widget.SimpleCursorAdapter.ViewBinder getViewBinder() {
        raiseEvent("getViewBinder"); Object retVal = getReturnData(); return (android.widget.SimpleCursorAdapter.ViewBinder)retVal;
    }
    //@Override
    public boolean areAllItemsEnabled() {
        raiseEvent("areAllItemsEnabled"); Object retVal = getReturnData(); return (boolean)retVal;
    }
    //@Override
    public boolean isEmpty() {
        raiseEvent("isEmpty"); Object retVal = getReturnData(); return (boolean)retVal;
    }
    //@Override
    public boolean isEnabled(int arg0) {
        raiseEvent("isEnabled", arg0); Object retVal = getReturnData(); return (boolean)retVal;
    }
    //@Override
    public boolean hasStableIds() {
        raiseEvent("hasStableIds"); Object retVal = getReturnData(); return (boolean)retVal;
    }
    //@Override
    public int getItemViewType(int arg0) {
        raiseEvent("getItemViewType", arg0); Object retVal = getReturnData(); return (int)retVal;
    }
    //@Override
    public int getViewTypeCount() {
        raiseEvent("getViewTypeCount"); Object retVal = getReturnData(); return (int)retVal;
    }
    //@Override
    public int getCount() {
        raiseEvent("getCount"); Object retVal = getReturnData(); return (int)retVal;
    }
    //@Override
    public int getStringConversionColumn() {
        raiseEvent("getStringConversionColumn"); Object retVal = getReturnData(); return (int)retVal;
    }
    //@Override
    public java.lang.CharSequence convertToString(android.database.Cursor arg0) {
        raiseEvent("convertToString", arg0); Object retVal = getReturnData(); return (java.lang.CharSequence)retVal;
    }
    //@Override
    public java.lang.CharSequence[] getAutofillOptions() {
        raiseEvent("getAutofillOptions"); Object retVal = getReturnData(); return (java.lang.CharSequence[])retVal;
    }
    //@Override
    public java.lang.Object getItem(int arg0) {
        raiseEvent("getItem", arg0); Object retVal = getReturnData(); return (java.lang.Object)retVal;
    }
    //@Override
    public long getItemId(int arg0) {
        raiseEvent("getItemId", arg0); Object retVal = getReturnData(); return (long)retVal;
    }
    //@Override
    public void notifyDataSetChanged() {
        raiseEvent("notifyDataSetChanged");
    }
    //@Override
    public void notifyDataSetInvalidated() {
        raiseEvent("notifyDataSetInvalidated");
    }
    //@Override
    public void registerDataSetObserver(android.database.DataSetObserver arg0) {
        raiseEvent("registerDataSetObserver", arg0);
    }
    //@Override
    public void setAutofillOptions(java.lang.CharSequence[] arg0) {
        raiseEvent("setAutofillOptions", arg0);
    }
    //@Override
    public void unregisterDataSetObserver(android.database.DataSetObserver arg0) {
        raiseEvent("unregisterDataSetObserver", arg0);
    }
    //@Override
    public void changeCursor(android.database.Cursor arg0) {
        raiseEvent("changeCursor", arg0);
    }
    //@Override
    public void setFilterQueryProvider(android.widget.FilterQueryProvider arg0) {
        raiseEvent("setFilterQueryProvider", arg0);
    }
    //@Override
    public void setDropDownViewResource(int arg0) {
        raiseEvent("setDropDownViewResource", arg0);
    }
    //@Override
    public void setDropDownViewTheme(android.content.res.Resources.Theme arg0) {
        raiseEvent("setDropDownViewTheme", arg0);
    }
    //@Override
    public void setViewResource(int arg0) {
        raiseEvent("setViewResource", arg0);
    }
    //@Override
    public void bindView(android.view.View arg0, android.content.Context arg1, android.database.Cursor arg2) {
        raiseEvent("bindView", arg0, arg1, arg2);
    }
    //@Override
    public void changeCursorAndColumns(android.database.Cursor arg0, java.lang.String[] arg1, int[] arg2) {
        raiseEvent("changeCursorAndColumns", arg0, arg1, arg2);
    }
    //@Override
    public void setCursorToStringConverter(android.widget.SimpleCursorAdapter.CursorToStringConverter arg0) {
        raiseEvent("setCursorToStringConverter", arg0);
    }
    //@Override
    public void setStringConversionColumn(int arg0) {
        raiseEvent("setStringConversionColumn", arg0);
    }
    //@Override
    public void setViewBinder(android.widget.SimpleCursorAdapter.ViewBinder arg0) {
        raiseEvent("setViewBinder", arg0);
    }
    //@Override
    public void setViewImage(android.widget.ImageView arg0, java.lang.String arg1) {
        raiseEvent("setViewImage", arg0, arg1);
    }
    //@Override
    public void setViewText(android.widget.TextView arg0, java.lang.String arg1) {
        raiseEvent("setViewText", arg0, arg1);
    }

}