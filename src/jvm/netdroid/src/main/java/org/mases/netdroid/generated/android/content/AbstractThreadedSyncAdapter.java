/*
 *  Copyright 2024 MASES s.r.l.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 *  Refer to LICENSE for more information.
 */

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.1.0)
*/

package org.mases.netdroid.generated.android.content;

public final class AbstractThreadedSyncAdapter extends org.mases.jcobridge.JCListener implements  {
    public AbstractThreadedSyncAdapter(String key) throws org.mases.jcobridge.JCNativeException {
        super(key);
    }

    //@Override
    public void onPerformSync(android.accounts.Account arg0, android.os.Bundle arg1, java.lang.String arg2, android.content.ContentProviderClient arg3, android.content.SyncResult arg4) {
        raiseEvent("onPerformSync", arg0, arg1, arg2, arg3, arg4);
    }
    //@Override
    public android.content.Context getContext() {
        raiseEvent("getContext"); Object retVal = getReturnData(); return (android.content.Context)retVal;
    }
    //@Override
    public boolean onUnsyncableAccount() {
        raiseEvent("onUnsyncableAccount"); Object retVal = getReturnData(); return (boolean)retVal;
    }
    //@Override
    public android.os.IBinder getSyncAdapterBinder() {
        raiseEvent("getSyncAdapterBinder"); Object retVal = getReturnData(); return (android.os.IBinder)retVal;
    }
    //@Override
    public void onSecurityException(android.accounts.Account arg0, android.os.Bundle arg1, java.lang.String arg2, android.content.SyncResult arg3) {
        raiseEvent("onSecurityException", arg0, arg1, arg2, arg3);
    }
    //@Override
    public void onSyncCanceled() {
        raiseEvent("onSyncCanceled");
    }
    //@Override
    public void onSyncCanceled(java.lang.Thread arg0) {
        raiseEvent("onSyncCanceled1", arg0);
    }

}