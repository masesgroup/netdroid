/*
 *  Copyright 2024 MASES s.r.l.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 *  Refer to LICENSE for more information.
 */

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.1.0)
*/

package org.mases.netdroid.generated.android.nfc;

public final class NfcAdapter extends org.mases.jcobridge.JCListener implements  {
    public NfcAdapter(String key) throws org.mases.jcobridge.JCNativeException {
        super(key);
    }

    //@Override
    public android.nfc.NfcAntennaInfo getNfcAntennaInfo() {
        raiseEvent("getNfcAntennaInfo"); Object retVal = getReturnData(); return (android.nfc.NfcAntennaInfo)retVal;
    }
    //@Override
    public boolean ignore(android.nfc.Tag arg0, int arg1, android.nfc.NfcAdapter.OnTagRemovedListener arg2, android.os.Handler arg3) {
        raiseEvent("ignore", arg0, arg1, arg2, arg3); Object retVal = getReturnData(); return (boolean)retVal;
    }
    //@Override
    public boolean isEnabled() {
        raiseEvent("isEnabled"); Object retVal = getReturnData(); return (boolean)retVal;
    }
    //@Override
    public boolean isSecureNfcEnabled() {
        raiseEvent("isSecureNfcEnabled"); Object retVal = getReturnData(); return (boolean)retVal;
    }
    //@Override
    public boolean isSecureNfcSupported() {
        raiseEvent("isSecureNfcSupported"); Object retVal = getReturnData(); return (boolean)retVal;
    }
    //@Override
    public void disableForegroundDispatch(android.app.Activity arg0) {
        raiseEvent("disableForegroundDispatch", arg0);
    }
    //@Override
    public void disableReaderMode(android.app.Activity arg0) {
        raiseEvent("disableReaderMode", arg0);
    }
    //@Override
    public void enableForegroundDispatch(android.app.Activity arg0, android.app.PendingIntent arg1, android.content.IntentFilter[] arg2, java.lang.String[][] arg3) {
        raiseEvent("enableForegroundDispatch", arg0, arg1, arg2, arg3);
    }
    //@Override
    public void enableReaderMode(android.app.Activity arg0, android.nfc.NfcAdapter.ReaderCallback arg1, int arg2, android.os.Bundle arg3) {
        raiseEvent("enableReaderMode", arg0, arg1, arg2, arg3);
    }

}