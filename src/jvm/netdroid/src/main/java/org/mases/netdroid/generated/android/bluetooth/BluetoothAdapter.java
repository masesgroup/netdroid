/*
 *  Copyright 2024 MASES s.r.l.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 *  Refer to LICENSE for more information.
 */

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.1.0)
*/

package org.mases.netdroid.generated.android.bluetooth;

public final class BluetoothAdapter extends org.mases.jcobridge.JCListener implements  {
    public BluetoothAdapter(String key) throws org.mases.jcobridge.JCNativeException {
        super(key);
    }

    //@Override
    public android.bluetooth.BluetoothDevice getRemoteDevice(byte[] arg0) {
        raiseEvent("getRemoteDevice", arg0); Object retVal = getReturnData(); return (android.bluetooth.BluetoothDevice)retVal;
    }
    //@Override
    public android.bluetooth.BluetoothDevice getRemoteDevice(java.lang.String arg0) {
        raiseEvent("getRemoteDevice1", arg0); Object retVal = getReturnData(); return (android.bluetooth.BluetoothDevice)retVal;
    }
    //@Override
    public android.bluetooth.BluetoothDevice getRemoteLeDevice(java.lang.String arg0, int arg1) {
        raiseEvent("getRemoteLeDevice", arg0, arg1); Object retVal = getReturnData(); return (android.bluetooth.BluetoothDevice)retVal;
    }
    //@Override
    public android.bluetooth.BluetoothServerSocket listenUsingInsecureL2capChannel() {
        raiseEvent("listenUsingInsecureL2capChannel"); Object retVal = getReturnData(); return (android.bluetooth.BluetoothServerSocket)retVal;
    }
    //@Override
    public android.bluetooth.BluetoothServerSocket listenUsingInsecureRfcommWithServiceRecord(java.lang.String arg0, java.util.UUID arg1) {
        raiseEvent("listenUsingInsecureRfcommWithServiceRecord", arg0, arg1); Object retVal = getReturnData(); return (android.bluetooth.BluetoothServerSocket)retVal;
    }
    //@Override
    public android.bluetooth.BluetoothServerSocket listenUsingL2capChannel() {
        raiseEvent("listenUsingL2capChannel"); Object retVal = getReturnData(); return (android.bluetooth.BluetoothServerSocket)retVal;
    }
    //@Override
    public android.bluetooth.BluetoothServerSocket listenUsingRfcommWithServiceRecord(java.lang.String arg0, java.util.UUID arg1) {
        raiseEvent("listenUsingRfcommWithServiceRecord", arg0, arg1); Object retVal = getReturnData(); return (android.bluetooth.BluetoothServerSocket)retVal;
    }
    //@Override
    public android.bluetooth.le.BluetoothLeAdvertiser getBluetoothLeAdvertiser() {
        raiseEvent("getBluetoothLeAdvertiser"); Object retVal = getReturnData(); return (android.bluetooth.le.BluetoothLeAdvertiser)retVal;
    }
    //@Override
    public android.bluetooth.le.BluetoothLeScanner getBluetoothLeScanner() {
        raiseEvent("getBluetoothLeScanner"); Object retVal = getReturnData(); return (android.bluetooth.le.BluetoothLeScanner)retVal;
    }
    //@Override
    public boolean cancelDiscovery() {
        raiseEvent("cancelDiscovery"); Object retVal = getReturnData(); return (boolean)retVal;
    }
    //@Override
    public boolean disable() {
        raiseEvent("disable"); Object retVal = getReturnData(); return (boolean)retVal;
    }
    //@Override
    public boolean enable() {
        raiseEvent("enable"); Object retVal = getReturnData(); return (boolean)retVal;
    }
    //@Override
    public boolean getProfileProxy(android.content.Context arg0, android.bluetooth.BluetoothProfile.ServiceListener arg1, int arg2) {
        raiseEvent("getProfileProxy", arg0, arg1, arg2); Object retVal = getReturnData(); return (boolean)retVal;
    }
    //@Override
    public boolean isDiscovering() {
        raiseEvent("isDiscovering"); Object retVal = getReturnData(); return (boolean)retVal;
    }
    //@Override
    public boolean isEnabled() {
        raiseEvent("isEnabled"); Object retVal = getReturnData(); return (boolean)retVal;
    }
    //@Override
    public boolean isLe2MPhySupported() {
        raiseEvent("isLe2MPhySupported"); Object retVal = getReturnData(); return (boolean)retVal;
    }
    //@Override
    public boolean isLeCodedPhySupported() {
        raiseEvent("isLeCodedPhySupported"); Object retVal = getReturnData(); return (boolean)retVal;
    }
    //@Override
    public boolean isLeExtendedAdvertisingSupported() {
        raiseEvent("isLeExtendedAdvertisingSupported"); Object retVal = getReturnData(); return (boolean)retVal;
    }
    //@Override
    public boolean isLePeriodicAdvertisingSupported() {
        raiseEvent("isLePeriodicAdvertisingSupported"); Object retVal = getReturnData(); return (boolean)retVal;
    }
    //@Override
    public boolean isMultipleAdvertisementSupported() {
        raiseEvent("isMultipleAdvertisementSupported"); Object retVal = getReturnData(); return (boolean)retVal;
    }
    //@Override
    public boolean isOffloadedFilteringSupported() {
        raiseEvent("isOffloadedFilteringSupported"); Object retVal = getReturnData(); return (boolean)retVal;
    }
    //@Override
    public boolean isOffloadedScanBatchingSupported() {
        raiseEvent("isOffloadedScanBatchingSupported"); Object retVal = getReturnData(); return (boolean)retVal;
    }
    //@Override
    public boolean setName(java.lang.String arg0) {
        raiseEvent("setName", arg0); Object retVal = getReturnData(); return (boolean)retVal;
    }
    //@Override
    public boolean startDiscovery() {
        raiseEvent("startDiscovery"); Object retVal = getReturnData(); return (boolean)retVal;
    }
    //@Override
    public boolean startLeScan(android.bluetooth.BluetoothAdapter.LeScanCallback arg0) {
        raiseEvent("startLeScan", arg0); Object retVal = getReturnData(); return (boolean)retVal;
    }
    //@Override
    public boolean startLeScan(java.util.UUID[] arg0, android.bluetooth.BluetoothAdapter.LeScanCallback arg1) {
        raiseEvent("startLeScan2", arg0, arg1); Object retVal = getReturnData(); return (boolean)retVal;
    }
    //@Override
    public int getLeMaximumAdvertisingDataLength() {
        raiseEvent("getLeMaximumAdvertisingDataLength"); Object retVal = getReturnData(); return (int)retVal;
    }
    //@Override
    public int getMaxConnectedAudioDevices() {
        raiseEvent("getMaxConnectedAudioDevices"); Object retVal = getReturnData(); return (int)retVal;
    }
    //@Override
    public int getProfileConnectionState(int arg0) {
        raiseEvent("getProfileConnectionState", arg0); Object retVal = getReturnData(); return (int)retVal;
    }
    //@Override
    public int getScanMode() {
        raiseEvent("getScanMode"); Object retVal = getReturnData(); return (int)retVal;
    }
    //@Override
    public int getState() {
        raiseEvent("getState"); Object retVal = getReturnData(); return (int)retVal;
    }
    //@Override
    public int isLeAudioBroadcastAssistantSupported() {
        raiseEvent("isLeAudioBroadcastAssistantSupported"); Object retVal = getReturnData(); return (int)retVal;
    }
    //@Override
    public int isLeAudioBroadcastSourceSupported() {
        raiseEvent("isLeAudioBroadcastSourceSupported"); Object retVal = getReturnData(); return (int)retVal;
    }
    //@Override
    public int isLeAudioSupported() {
        raiseEvent("isLeAudioSupported"); Object retVal = getReturnData(); return (int)retVal;
    }
    //@Override
    public java.lang.String getAddress() {
        raiseEvent("getAddress"); Object retVal = getReturnData(); return (java.lang.String)retVal;
    }
    //@Override
    public java.lang.String getName() {
        raiseEvent("getName"); Object retVal = getReturnData(); return (java.lang.String)retVal;
    }
    //@Override
    public java.time.Duration getDiscoverableTimeout() {
        raiseEvent("getDiscoverableTimeout"); Object retVal = getReturnData(); return (java.time.Duration)retVal;
    }
    //@Override
    public java.util.Set getBondedDevices() {
        raiseEvent("getBondedDevices"); Object retVal = getReturnData(); return (java.util.Set)retVal;
    }
    //@Override
    public void closeProfileProxy(int arg0, android.bluetooth.BluetoothProfile arg1) {
        raiseEvent("closeProfileProxy", arg0, arg1);
    }
    //@Override
    public void stopLeScan(android.bluetooth.BluetoothAdapter.LeScanCallback arg0) {
        raiseEvent("stopLeScan", arg0);
    }

}