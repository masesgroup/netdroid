/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.9.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Mtp
{
    #region MtpConstants declaration
    /// <summary>
    /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html"/>
    /// </summary>
    public partial class MtpConstants : MASES.JCOBridge.C2JBridge.JVMBridgeBase<MtpConstants>
    {
        const string _bridgeClassName = "android.mtp.MtpConstants";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public MtpConstants() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public MtpConstants(params object[] args) : base(args) { }
    
        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
    
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;
    
        // TODO: complete the class
    
    }
    #endregion

    #region MtpConstants implementation
    public partial class MtpConstants
    {
        #region Constructors
    
        #endregion
    
        #region Class/Interface conversion operators
    
        #endregion
    
        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#ASSOCIATION_TYPE_GENERIC_FOLDER"/>
        /// </summary>
        public static int ASSOCIATION_TYPE_GENERIC_FOLDER { get { if (!_ASSOCIATION_TYPE_GENERIC_FOLDERReady) { _ASSOCIATION_TYPE_GENERIC_FOLDERContent = SGetField<int>(LocalBridgeClazz, "ASSOCIATION_TYPE_GENERIC_FOLDER"); _ASSOCIATION_TYPE_GENERIC_FOLDERReady = true; } return _ASSOCIATION_TYPE_GENERIC_FOLDERContent; } }
        private static int _ASSOCIATION_TYPE_GENERIC_FOLDERContent = default;
        private static bool _ASSOCIATION_TYPE_GENERIC_FOLDERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#FORMAT_3GP_CONTAINER"/>
        /// </summary>
        public static int FORMAT_3GP_CONTAINER { get { if (!_FORMAT_3GP_CONTAINERReady) { _FORMAT_3GP_CONTAINERContent = SGetField<int>(LocalBridgeClazz, "FORMAT_3GP_CONTAINER"); _FORMAT_3GP_CONTAINERReady = true; } return _FORMAT_3GP_CONTAINERContent; } }
        private static int _FORMAT_3GP_CONTAINERContent = default;
        private static bool _FORMAT_3GP_CONTAINERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#FORMAT_AAC"/>
        /// </summary>
        public static int FORMAT_AAC { get { if (!_FORMAT_AACReady) { _FORMAT_AACContent = SGetField<int>(LocalBridgeClazz, "FORMAT_AAC"); _FORMAT_AACReady = true; } return _FORMAT_AACContent; } }
        private static int _FORMAT_AACContent = default;
        private static bool _FORMAT_AACReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#FORMAT_ABSTRACT_AUDIO_ALBUM"/>
        /// </summary>
        public static int FORMAT_ABSTRACT_AUDIO_ALBUM { get { if (!_FORMAT_ABSTRACT_AUDIO_ALBUMReady) { _FORMAT_ABSTRACT_AUDIO_ALBUMContent = SGetField<int>(LocalBridgeClazz, "FORMAT_ABSTRACT_AUDIO_ALBUM"); _FORMAT_ABSTRACT_AUDIO_ALBUMReady = true; } return _FORMAT_ABSTRACT_AUDIO_ALBUMContent; } }
        private static int _FORMAT_ABSTRACT_AUDIO_ALBUMContent = default;
        private static bool _FORMAT_ABSTRACT_AUDIO_ALBUMReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#FORMAT_ABSTRACT_AUDIO_PLAYLIST"/>
        /// </summary>
        public static int FORMAT_ABSTRACT_AUDIO_PLAYLIST { get { if (!_FORMAT_ABSTRACT_AUDIO_PLAYLISTReady) { _FORMAT_ABSTRACT_AUDIO_PLAYLISTContent = SGetField<int>(LocalBridgeClazz, "FORMAT_ABSTRACT_AUDIO_PLAYLIST"); _FORMAT_ABSTRACT_AUDIO_PLAYLISTReady = true; } return _FORMAT_ABSTRACT_AUDIO_PLAYLISTContent; } }
        private static int _FORMAT_ABSTRACT_AUDIO_PLAYLISTContent = default;
        private static bool _FORMAT_ABSTRACT_AUDIO_PLAYLISTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#FORMAT_ABSTRACT_AV_PLAYLIST"/>
        /// </summary>
        public static int FORMAT_ABSTRACT_AV_PLAYLIST { get { if (!_FORMAT_ABSTRACT_AV_PLAYLISTReady) { _FORMAT_ABSTRACT_AV_PLAYLISTContent = SGetField<int>(LocalBridgeClazz, "FORMAT_ABSTRACT_AV_PLAYLIST"); _FORMAT_ABSTRACT_AV_PLAYLISTReady = true; } return _FORMAT_ABSTRACT_AV_PLAYLISTContent; } }
        private static int _FORMAT_ABSTRACT_AV_PLAYLISTContent = default;
        private static bool _FORMAT_ABSTRACT_AV_PLAYLISTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#FORMAT_ABSTRACT_DOCUMENT"/>
        /// </summary>
        public static int FORMAT_ABSTRACT_DOCUMENT { get { if (!_FORMAT_ABSTRACT_DOCUMENTReady) { _FORMAT_ABSTRACT_DOCUMENTContent = SGetField<int>(LocalBridgeClazz, "FORMAT_ABSTRACT_DOCUMENT"); _FORMAT_ABSTRACT_DOCUMENTReady = true; } return _FORMAT_ABSTRACT_DOCUMENTContent; } }
        private static int _FORMAT_ABSTRACT_DOCUMENTContent = default;
        private static bool _FORMAT_ABSTRACT_DOCUMENTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#FORMAT_ABSTRACT_IMAGE_ALBUM"/>
        /// </summary>
        public static int FORMAT_ABSTRACT_IMAGE_ALBUM { get { if (!_FORMAT_ABSTRACT_IMAGE_ALBUMReady) { _FORMAT_ABSTRACT_IMAGE_ALBUMContent = SGetField<int>(LocalBridgeClazz, "FORMAT_ABSTRACT_IMAGE_ALBUM"); _FORMAT_ABSTRACT_IMAGE_ALBUMReady = true; } return _FORMAT_ABSTRACT_IMAGE_ALBUMContent; } }
        private static int _FORMAT_ABSTRACT_IMAGE_ALBUMContent = default;
        private static bool _FORMAT_ABSTRACT_IMAGE_ALBUMReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#FORMAT_ABSTRACT_MEDIACAST"/>
        /// </summary>
        public static int FORMAT_ABSTRACT_MEDIACAST { get { if (!_FORMAT_ABSTRACT_MEDIACASTReady) { _FORMAT_ABSTRACT_MEDIACASTContent = SGetField<int>(LocalBridgeClazz, "FORMAT_ABSTRACT_MEDIACAST"); _FORMAT_ABSTRACT_MEDIACASTReady = true; } return _FORMAT_ABSTRACT_MEDIACASTContent; } }
        private static int _FORMAT_ABSTRACT_MEDIACASTContent = default;
        private static bool _FORMAT_ABSTRACT_MEDIACASTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#FORMAT_ABSTRACT_MULTIMEDIA_ALBUM"/>
        /// </summary>
        public static int FORMAT_ABSTRACT_MULTIMEDIA_ALBUM { get { if (!_FORMAT_ABSTRACT_MULTIMEDIA_ALBUMReady) { _FORMAT_ABSTRACT_MULTIMEDIA_ALBUMContent = SGetField<int>(LocalBridgeClazz, "FORMAT_ABSTRACT_MULTIMEDIA_ALBUM"); _FORMAT_ABSTRACT_MULTIMEDIA_ALBUMReady = true; } return _FORMAT_ABSTRACT_MULTIMEDIA_ALBUMContent; } }
        private static int _FORMAT_ABSTRACT_MULTIMEDIA_ALBUMContent = default;
        private static bool _FORMAT_ABSTRACT_MULTIMEDIA_ALBUMReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#FORMAT_ABSTRACT_VIDEO_ALBUM"/>
        /// </summary>
        public static int FORMAT_ABSTRACT_VIDEO_ALBUM { get { if (!_FORMAT_ABSTRACT_VIDEO_ALBUMReady) { _FORMAT_ABSTRACT_VIDEO_ALBUMContent = SGetField<int>(LocalBridgeClazz, "FORMAT_ABSTRACT_VIDEO_ALBUM"); _FORMAT_ABSTRACT_VIDEO_ALBUMReady = true; } return _FORMAT_ABSTRACT_VIDEO_ALBUMContent; } }
        private static int _FORMAT_ABSTRACT_VIDEO_ALBUMContent = default;
        private static bool _FORMAT_ABSTRACT_VIDEO_ALBUMReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#FORMAT_ABSTRACT_VIDEO_PLAYLIST"/>
        /// </summary>
        public static int FORMAT_ABSTRACT_VIDEO_PLAYLIST { get { if (!_FORMAT_ABSTRACT_VIDEO_PLAYLISTReady) { _FORMAT_ABSTRACT_VIDEO_PLAYLISTContent = SGetField<int>(LocalBridgeClazz, "FORMAT_ABSTRACT_VIDEO_PLAYLIST"); _FORMAT_ABSTRACT_VIDEO_PLAYLISTReady = true; } return _FORMAT_ABSTRACT_VIDEO_PLAYLISTContent; } }
        private static int _FORMAT_ABSTRACT_VIDEO_PLAYLISTContent = default;
        private static bool _FORMAT_ABSTRACT_VIDEO_PLAYLISTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#FORMAT_AIFF"/>
        /// </summary>
        public static int FORMAT_AIFF { get { if (!_FORMAT_AIFFReady) { _FORMAT_AIFFContent = SGetField<int>(LocalBridgeClazz, "FORMAT_AIFF"); _FORMAT_AIFFReady = true; } return _FORMAT_AIFFContent; } }
        private static int _FORMAT_AIFFContent = default;
        private static bool _FORMAT_AIFFReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#FORMAT_ASF"/>
        /// </summary>
        public static int FORMAT_ASF { get { if (!_FORMAT_ASFReady) { _FORMAT_ASFContent = SGetField<int>(LocalBridgeClazz, "FORMAT_ASF"); _FORMAT_ASFReady = true; } return _FORMAT_ASFContent; } }
        private static int _FORMAT_ASFContent = default;
        private static bool _FORMAT_ASFReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#FORMAT_ASSOCIATION"/>
        /// </summary>
        public static int FORMAT_ASSOCIATION { get { if (!_FORMAT_ASSOCIATIONReady) { _FORMAT_ASSOCIATIONContent = SGetField<int>(LocalBridgeClazz, "FORMAT_ASSOCIATION"); _FORMAT_ASSOCIATIONReady = true; } return _FORMAT_ASSOCIATIONContent; } }
        private static int _FORMAT_ASSOCIATIONContent = default;
        private static bool _FORMAT_ASSOCIATIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#FORMAT_ASX_PLAYLIST"/>
        /// </summary>
        public static int FORMAT_ASX_PLAYLIST { get { if (!_FORMAT_ASX_PLAYLISTReady) { _FORMAT_ASX_PLAYLISTContent = SGetField<int>(LocalBridgeClazz, "FORMAT_ASX_PLAYLIST"); _FORMAT_ASX_PLAYLISTReady = true; } return _FORMAT_ASX_PLAYLISTContent; } }
        private static int _FORMAT_ASX_PLAYLISTContent = default;
        private static bool _FORMAT_ASX_PLAYLISTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#FORMAT_AUDIBLE"/>
        /// </summary>
        public static int FORMAT_AUDIBLE { get { if (!_FORMAT_AUDIBLEReady) { _FORMAT_AUDIBLEContent = SGetField<int>(LocalBridgeClazz, "FORMAT_AUDIBLE"); _FORMAT_AUDIBLEReady = true; } return _FORMAT_AUDIBLEContent; } }
        private static int _FORMAT_AUDIBLEContent = default;
        private static bool _FORMAT_AUDIBLEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#FORMAT_AVI"/>
        /// </summary>
        public static int FORMAT_AVI { get { if (!_FORMAT_AVIReady) { _FORMAT_AVIContent = SGetField<int>(LocalBridgeClazz, "FORMAT_AVI"); _FORMAT_AVIReady = true; } return _FORMAT_AVIContent; } }
        private static int _FORMAT_AVIContent = default;
        private static bool _FORMAT_AVIReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#FORMAT_BMP"/>
        /// </summary>
        public static int FORMAT_BMP { get { if (!_FORMAT_BMPReady) { _FORMAT_BMPContent = SGetField<int>(LocalBridgeClazz, "FORMAT_BMP"); _FORMAT_BMPReady = true; } return _FORMAT_BMPContent; } }
        private static int _FORMAT_BMPContent = default;
        private static bool _FORMAT_BMPReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#FORMAT_DEFINED"/>
        /// </summary>
        public static int FORMAT_DEFINED { get { if (!_FORMAT_DEFINEDReady) { _FORMAT_DEFINEDContent = SGetField<int>(LocalBridgeClazz, "FORMAT_DEFINED"); _FORMAT_DEFINEDReady = true; } return _FORMAT_DEFINEDContent; } }
        private static int _FORMAT_DEFINEDContent = default;
        private static bool _FORMAT_DEFINEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#FORMAT_DNG"/>
        /// </summary>
        public static int FORMAT_DNG { get { if (!_FORMAT_DNGReady) { _FORMAT_DNGContent = SGetField<int>(LocalBridgeClazz, "FORMAT_DNG"); _FORMAT_DNGReady = true; } return _FORMAT_DNGContent; } }
        private static int _FORMAT_DNGContent = default;
        private static bool _FORMAT_DNGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#FORMAT_DPOF"/>
        /// </summary>
        public static int FORMAT_DPOF { get { if (!_FORMAT_DPOFReady) { _FORMAT_DPOFContent = SGetField<int>(LocalBridgeClazz, "FORMAT_DPOF"); _FORMAT_DPOFReady = true; } return _FORMAT_DPOFContent; } }
        private static int _FORMAT_DPOFContent = default;
        private static bool _FORMAT_DPOFReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#FORMAT_EXECUTABLE"/>
        /// </summary>
        public static int FORMAT_EXECUTABLE { get { if (!_FORMAT_EXECUTABLEReady) { _FORMAT_EXECUTABLEContent = SGetField<int>(LocalBridgeClazz, "FORMAT_EXECUTABLE"); _FORMAT_EXECUTABLEReady = true; } return _FORMAT_EXECUTABLEContent; } }
        private static int _FORMAT_EXECUTABLEContent = default;
        private static bool _FORMAT_EXECUTABLEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#FORMAT_EXIF_JPEG"/>
        /// </summary>
        public static int FORMAT_EXIF_JPEG { get { if (!_FORMAT_EXIF_JPEGReady) { _FORMAT_EXIF_JPEGContent = SGetField<int>(LocalBridgeClazz, "FORMAT_EXIF_JPEG"); _FORMAT_EXIF_JPEGReady = true; } return _FORMAT_EXIF_JPEGContent; } }
        private static int _FORMAT_EXIF_JPEGContent = default;
        private static bool _FORMAT_EXIF_JPEGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#FORMAT_FLAC"/>
        /// </summary>
        public static int FORMAT_FLAC { get { if (!_FORMAT_FLACReady) { _FORMAT_FLACContent = SGetField<int>(LocalBridgeClazz, "FORMAT_FLAC"); _FORMAT_FLACReady = true; } return _FORMAT_FLACContent; } }
        private static int _FORMAT_FLACContent = default;
        private static bool _FORMAT_FLACReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#FORMAT_GIF"/>
        /// </summary>
        public static int FORMAT_GIF { get { if (!_FORMAT_GIFReady) { _FORMAT_GIFContent = SGetField<int>(LocalBridgeClazz, "FORMAT_GIF"); _FORMAT_GIFReady = true; } return _FORMAT_GIFContent; } }
        private static int _FORMAT_GIFContent = default;
        private static bool _FORMAT_GIFReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#FORMAT_HTML"/>
        /// </summary>
        public static int FORMAT_HTML { get { if (!_FORMAT_HTMLReady) { _FORMAT_HTMLContent = SGetField<int>(LocalBridgeClazz, "FORMAT_HTML"); _FORMAT_HTMLReady = true; } return _FORMAT_HTMLContent; } }
        private static int _FORMAT_HTMLContent = default;
        private static bool _FORMAT_HTMLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#FORMAT_JFIF"/>
        /// </summary>
        public static int FORMAT_JFIF { get { if (!_FORMAT_JFIFReady) { _FORMAT_JFIFContent = SGetField<int>(LocalBridgeClazz, "FORMAT_JFIF"); _FORMAT_JFIFReady = true; } return _FORMAT_JFIFContent; } }
        private static int _FORMAT_JFIFContent = default;
        private static bool _FORMAT_JFIFReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#FORMAT_JP2"/>
        /// </summary>
        public static int FORMAT_JP2 { get { if (!_FORMAT_JP2Ready) { _FORMAT_JP2Content = SGetField<int>(LocalBridgeClazz, "FORMAT_JP2"); _FORMAT_JP2Ready = true; } return _FORMAT_JP2Content; } }
        private static int _FORMAT_JP2Content = default;
        private static bool _FORMAT_JP2Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#FORMAT_JPX"/>
        /// </summary>
        public static int FORMAT_JPX { get { if (!_FORMAT_JPXReady) { _FORMAT_JPXContent = SGetField<int>(LocalBridgeClazz, "FORMAT_JPX"); _FORMAT_JPXReady = true; } return _FORMAT_JPXContent; } }
        private static int _FORMAT_JPXContent = default;
        private static bool _FORMAT_JPXReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#FORMAT_M3U_PLAYLIST"/>
        /// </summary>
        public static int FORMAT_M3U_PLAYLIST { get { if (!_FORMAT_M3U_PLAYLISTReady) { _FORMAT_M3U_PLAYLISTContent = SGetField<int>(LocalBridgeClazz, "FORMAT_M3U_PLAYLIST"); _FORMAT_M3U_PLAYLISTReady = true; } return _FORMAT_M3U_PLAYLISTContent; } }
        private static int _FORMAT_M3U_PLAYLISTContent = default;
        private static bool _FORMAT_M3U_PLAYLISTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#FORMAT_MP2"/>
        /// </summary>
        public static int FORMAT_MP2 { get { if (!_FORMAT_MP2Ready) { _FORMAT_MP2Content = SGetField<int>(LocalBridgeClazz, "FORMAT_MP2"); _FORMAT_MP2Ready = true; } return _FORMAT_MP2Content; } }
        private static int _FORMAT_MP2Content = default;
        private static bool _FORMAT_MP2Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#FORMAT_MP3"/>
        /// </summary>
        public static int FORMAT_MP3 { get { if (!_FORMAT_MP3Ready) { _FORMAT_MP3Content = SGetField<int>(LocalBridgeClazz, "FORMAT_MP3"); _FORMAT_MP3Ready = true; } return _FORMAT_MP3Content; } }
        private static int _FORMAT_MP3Content = default;
        private static bool _FORMAT_MP3Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#FORMAT_MP4_CONTAINER"/>
        /// </summary>
        public static int FORMAT_MP4_CONTAINER { get { if (!_FORMAT_MP4_CONTAINERReady) { _FORMAT_MP4_CONTAINERContent = SGetField<int>(LocalBridgeClazz, "FORMAT_MP4_CONTAINER"); _FORMAT_MP4_CONTAINERReady = true; } return _FORMAT_MP4_CONTAINERContent; } }
        private static int _FORMAT_MP4_CONTAINERContent = default;
        private static bool _FORMAT_MP4_CONTAINERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#FORMAT_MPEG"/>
        /// </summary>
        public static int FORMAT_MPEG { get { if (!_FORMAT_MPEGReady) { _FORMAT_MPEGContent = SGetField<int>(LocalBridgeClazz, "FORMAT_MPEG"); _FORMAT_MPEGReady = true; } return _FORMAT_MPEGContent; } }
        private static int _FORMAT_MPEGContent = default;
        private static bool _FORMAT_MPEGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#FORMAT_MPL_PLAYLIST"/>
        /// </summary>
        public static int FORMAT_MPL_PLAYLIST { get { if (!_FORMAT_MPL_PLAYLISTReady) { _FORMAT_MPL_PLAYLISTContent = SGetField<int>(LocalBridgeClazz, "FORMAT_MPL_PLAYLIST"); _FORMAT_MPL_PLAYLISTReady = true; } return _FORMAT_MPL_PLAYLISTContent; } }
        private static int _FORMAT_MPL_PLAYLISTContent = default;
        private static bool _FORMAT_MPL_PLAYLISTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#FORMAT_MS_EXCEL_SPREADSHEET"/>
        /// </summary>
        public static int FORMAT_MS_EXCEL_SPREADSHEET { get { if (!_FORMAT_MS_EXCEL_SPREADSHEETReady) { _FORMAT_MS_EXCEL_SPREADSHEETContent = SGetField<int>(LocalBridgeClazz, "FORMAT_MS_EXCEL_SPREADSHEET"); _FORMAT_MS_EXCEL_SPREADSHEETReady = true; } return _FORMAT_MS_EXCEL_SPREADSHEETContent; } }
        private static int _FORMAT_MS_EXCEL_SPREADSHEETContent = default;
        private static bool _FORMAT_MS_EXCEL_SPREADSHEETReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#FORMAT_MS_POWERPOINT_PRESENTATION"/>
        /// </summary>
        public static int FORMAT_MS_POWERPOINT_PRESENTATION { get { if (!_FORMAT_MS_POWERPOINT_PRESENTATIONReady) { _FORMAT_MS_POWERPOINT_PRESENTATIONContent = SGetField<int>(LocalBridgeClazz, "FORMAT_MS_POWERPOINT_PRESENTATION"); _FORMAT_MS_POWERPOINT_PRESENTATIONReady = true; } return _FORMAT_MS_POWERPOINT_PRESENTATIONContent; } }
        private static int _FORMAT_MS_POWERPOINT_PRESENTATIONContent = default;
        private static bool _FORMAT_MS_POWERPOINT_PRESENTATIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#FORMAT_MS_WORD_DOCUMENT"/>
        /// </summary>
        public static int FORMAT_MS_WORD_DOCUMENT { get { if (!_FORMAT_MS_WORD_DOCUMENTReady) { _FORMAT_MS_WORD_DOCUMENTContent = SGetField<int>(LocalBridgeClazz, "FORMAT_MS_WORD_DOCUMENT"); _FORMAT_MS_WORD_DOCUMENTReady = true; } return _FORMAT_MS_WORD_DOCUMENTContent; } }
        private static int _FORMAT_MS_WORD_DOCUMENTContent = default;
        private static bool _FORMAT_MS_WORD_DOCUMENTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#FORMAT_OGG"/>
        /// </summary>
        public static int FORMAT_OGG { get { if (!_FORMAT_OGGReady) { _FORMAT_OGGContent = SGetField<int>(LocalBridgeClazz, "FORMAT_OGG"); _FORMAT_OGGReady = true; } return _FORMAT_OGGContent; } }
        private static int _FORMAT_OGGContent = default;
        private static bool _FORMAT_OGGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#FORMAT_PICT"/>
        /// </summary>
        public static int FORMAT_PICT { get { if (!_FORMAT_PICTReady) { _FORMAT_PICTContent = SGetField<int>(LocalBridgeClazz, "FORMAT_PICT"); _FORMAT_PICTReady = true; } return _FORMAT_PICTContent; } }
        private static int _FORMAT_PICTContent = default;
        private static bool _FORMAT_PICTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#FORMAT_PLS_PLAYLIST"/>
        /// </summary>
        public static int FORMAT_PLS_PLAYLIST { get { if (!_FORMAT_PLS_PLAYLISTReady) { _FORMAT_PLS_PLAYLISTContent = SGetField<int>(LocalBridgeClazz, "FORMAT_PLS_PLAYLIST"); _FORMAT_PLS_PLAYLISTReady = true; } return _FORMAT_PLS_PLAYLISTContent; } }
        private static int _FORMAT_PLS_PLAYLISTContent = default;
        private static bool _FORMAT_PLS_PLAYLISTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#FORMAT_PNG"/>
        /// </summary>
        public static int FORMAT_PNG { get { if (!_FORMAT_PNGReady) { _FORMAT_PNGContent = SGetField<int>(LocalBridgeClazz, "FORMAT_PNG"); _FORMAT_PNGReady = true; } return _FORMAT_PNGContent; } }
        private static int _FORMAT_PNGContent = default;
        private static bool _FORMAT_PNGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#FORMAT_SCRIPT"/>
        /// </summary>
        public static int FORMAT_SCRIPT { get { if (!_FORMAT_SCRIPTReady) { _FORMAT_SCRIPTContent = SGetField<int>(LocalBridgeClazz, "FORMAT_SCRIPT"); _FORMAT_SCRIPTReady = true; } return _FORMAT_SCRIPTContent; } }
        private static int _FORMAT_SCRIPTContent = default;
        private static bool _FORMAT_SCRIPTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#FORMAT_TEXT"/>
        /// </summary>
        public static int FORMAT_TEXT { get { if (!_FORMAT_TEXTReady) { _FORMAT_TEXTContent = SGetField<int>(LocalBridgeClazz, "FORMAT_TEXT"); _FORMAT_TEXTReady = true; } return _FORMAT_TEXTContent; } }
        private static int _FORMAT_TEXTContent = default;
        private static bool _FORMAT_TEXTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#FORMAT_TIFF"/>
        /// </summary>
        public static int FORMAT_TIFF { get { if (!_FORMAT_TIFFReady) { _FORMAT_TIFFContent = SGetField<int>(LocalBridgeClazz, "FORMAT_TIFF"); _FORMAT_TIFFReady = true; } return _FORMAT_TIFFContent; } }
        private static int _FORMAT_TIFFContent = default;
        private static bool _FORMAT_TIFFReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#FORMAT_TIFF_EP"/>
        /// </summary>
        public static int FORMAT_TIFF_EP { get { if (!_FORMAT_TIFF_EPReady) { _FORMAT_TIFF_EPContent = SGetField<int>(LocalBridgeClazz, "FORMAT_TIFF_EP"); _FORMAT_TIFF_EPReady = true; } return _FORMAT_TIFF_EPContent; } }
        private static int _FORMAT_TIFF_EPContent = default;
        private static bool _FORMAT_TIFF_EPReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#FORMAT_UNDEFINED"/>
        /// </summary>
        public static int FORMAT_UNDEFINED { get { if (!_FORMAT_UNDEFINEDReady) { _FORMAT_UNDEFINEDContent = SGetField<int>(LocalBridgeClazz, "FORMAT_UNDEFINED"); _FORMAT_UNDEFINEDReady = true; } return _FORMAT_UNDEFINEDContent; } }
        private static int _FORMAT_UNDEFINEDContent = default;
        private static bool _FORMAT_UNDEFINEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#FORMAT_UNDEFINED_AUDIO"/>
        /// </summary>
        public static int FORMAT_UNDEFINED_AUDIO { get { if (!_FORMAT_UNDEFINED_AUDIOReady) { _FORMAT_UNDEFINED_AUDIOContent = SGetField<int>(LocalBridgeClazz, "FORMAT_UNDEFINED_AUDIO"); _FORMAT_UNDEFINED_AUDIOReady = true; } return _FORMAT_UNDEFINED_AUDIOContent; } }
        private static int _FORMAT_UNDEFINED_AUDIOContent = default;
        private static bool _FORMAT_UNDEFINED_AUDIOReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#FORMAT_UNDEFINED_COLLECTION"/>
        /// </summary>
        public static int FORMAT_UNDEFINED_COLLECTION { get { if (!_FORMAT_UNDEFINED_COLLECTIONReady) { _FORMAT_UNDEFINED_COLLECTIONContent = SGetField<int>(LocalBridgeClazz, "FORMAT_UNDEFINED_COLLECTION"); _FORMAT_UNDEFINED_COLLECTIONReady = true; } return _FORMAT_UNDEFINED_COLLECTIONContent; } }
        private static int _FORMAT_UNDEFINED_COLLECTIONContent = default;
        private static bool _FORMAT_UNDEFINED_COLLECTIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#FORMAT_UNDEFINED_DOCUMENT"/>
        /// </summary>
        public static int FORMAT_UNDEFINED_DOCUMENT { get { if (!_FORMAT_UNDEFINED_DOCUMENTReady) { _FORMAT_UNDEFINED_DOCUMENTContent = SGetField<int>(LocalBridgeClazz, "FORMAT_UNDEFINED_DOCUMENT"); _FORMAT_UNDEFINED_DOCUMENTReady = true; } return _FORMAT_UNDEFINED_DOCUMENTContent; } }
        private static int _FORMAT_UNDEFINED_DOCUMENTContent = default;
        private static bool _FORMAT_UNDEFINED_DOCUMENTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#FORMAT_UNDEFINED_FIRMWARE"/>
        /// </summary>
        public static int FORMAT_UNDEFINED_FIRMWARE { get { if (!_FORMAT_UNDEFINED_FIRMWAREReady) { _FORMAT_UNDEFINED_FIRMWAREContent = SGetField<int>(LocalBridgeClazz, "FORMAT_UNDEFINED_FIRMWARE"); _FORMAT_UNDEFINED_FIRMWAREReady = true; } return _FORMAT_UNDEFINED_FIRMWAREContent; } }
        private static int _FORMAT_UNDEFINED_FIRMWAREContent = default;
        private static bool _FORMAT_UNDEFINED_FIRMWAREReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#FORMAT_UNDEFINED_VIDEO"/>
        /// </summary>
        public static int FORMAT_UNDEFINED_VIDEO { get { if (!_FORMAT_UNDEFINED_VIDEOReady) { _FORMAT_UNDEFINED_VIDEOContent = SGetField<int>(LocalBridgeClazz, "FORMAT_UNDEFINED_VIDEO"); _FORMAT_UNDEFINED_VIDEOReady = true; } return _FORMAT_UNDEFINED_VIDEOContent; } }
        private static int _FORMAT_UNDEFINED_VIDEOContent = default;
        private static bool _FORMAT_UNDEFINED_VIDEOReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#FORMAT_WAV"/>
        /// </summary>
        public static int FORMAT_WAV { get { if (!_FORMAT_WAVReady) { _FORMAT_WAVContent = SGetField<int>(LocalBridgeClazz, "FORMAT_WAV"); _FORMAT_WAVReady = true; } return _FORMAT_WAVContent; } }
        private static int _FORMAT_WAVContent = default;
        private static bool _FORMAT_WAVReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#FORMAT_WINDOWS_IMAGE_FORMAT"/>
        /// </summary>
        public static int FORMAT_WINDOWS_IMAGE_FORMAT { get { if (!_FORMAT_WINDOWS_IMAGE_FORMATReady) { _FORMAT_WINDOWS_IMAGE_FORMATContent = SGetField<int>(LocalBridgeClazz, "FORMAT_WINDOWS_IMAGE_FORMAT"); _FORMAT_WINDOWS_IMAGE_FORMATReady = true; } return _FORMAT_WINDOWS_IMAGE_FORMATContent; } }
        private static int _FORMAT_WINDOWS_IMAGE_FORMATContent = default;
        private static bool _FORMAT_WINDOWS_IMAGE_FORMATReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#FORMAT_WMA"/>
        /// </summary>
        public static int FORMAT_WMA { get { if (!_FORMAT_WMAReady) { _FORMAT_WMAContent = SGetField<int>(LocalBridgeClazz, "FORMAT_WMA"); _FORMAT_WMAReady = true; } return _FORMAT_WMAContent; } }
        private static int _FORMAT_WMAContent = default;
        private static bool _FORMAT_WMAReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#FORMAT_WMV"/>
        /// </summary>
        public static int FORMAT_WMV { get { if (!_FORMAT_WMVReady) { _FORMAT_WMVContent = SGetField<int>(LocalBridgeClazz, "FORMAT_WMV"); _FORMAT_WMVReady = true; } return _FORMAT_WMVContent; } }
        private static int _FORMAT_WMVContent = default;
        private static bool _FORMAT_WMVReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#FORMAT_WPL_PLAYLIST"/>
        /// </summary>
        public static int FORMAT_WPL_PLAYLIST { get { if (!_FORMAT_WPL_PLAYLISTReady) { _FORMAT_WPL_PLAYLISTContent = SGetField<int>(LocalBridgeClazz, "FORMAT_WPL_PLAYLIST"); _FORMAT_WPL_PLAYLISTReady = true; } return _FORMAT_WPL_PLAYLISTContent; } }
        private static int _FORMAT_WPL_PLAYLISTContent = default;
        private static bool _FORMAT_WPL_PLAYLISTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#FORMAT_XML_DOCUMENT"/>
        /// </summary>
        public static int FORMAT_XML_DOCUMENT { get { if (!_FORMAT_XML_DOCUMENTReady) { _FORMAT_XML_DOCUMENTContent = SGetField<int>(LocalBridgeClazz, "FORMAT_XML_DOCUMENT"); _FORMAT_XML_DOCUMENTReady = true; } return _FORMAT_XML_DOCUMENTContent; } }
        private static int _FORMAT_XML_DOCUMENTContent = default;
        private static bool _FORMAT_XML_DOCUMENTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#OPERATION_CLOSE_SESSION"/>
        /// </summary>
        public static int OPERATION_CLOSE_SESSION { get { if (!_OPERATION_CLOSE_SESSIONReady) { _OPERATION_CLOSE_SESSIONContent = SGetField<int>(LocalBridgeClazz, "OPERATION_CLOSE_SESSION"); _OPERATION_CLOSE_SESSIONReady = true; } return _OPERATION_CLOSE_SESSIONContent; } }
        private static int _OPERATION_CLOSE_SESSIONContent = default;
        private static bool _OPERATION_CLOSE_SESSIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#OPERATION_COPY_OBJECT"/>
        /// </summary>
        public static int OPERATION_COPY_OBJECT { get { if (!_OPERATION_COPY_OBJECTReady) { _OPERATION_COPY_OBJECTContent = SGetField<int>(LocalBridgeClazz, "OPERATION_COPY_OBJECT"); _OPERATION_COPY_OBJECTReady = true; } return _OPERATION_COPY_OBJECTContent; } }
        private static int _OPERATION_COPY_OBJECTContent = default;
        private static bool _OPERATION_COPY_OBJECTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#OPERATION_DELETE_OBJECT"/>
        /// </summary>
        public static int OPERATION_DELETE_OBJECT { get { if (!_OPERATION_DELETE_OBJECTReady) { _OPERATION_DELETE_OBJECTContent = SGetField<int>(LocalBridgeClazz, "OPERATION_DELETE_OBJECT"); _OPERATION_DELETE_OBJECTReady = true; } return _OPERATION_DELETE_OBJECTContent; } }
        private static int _OPERATION_DELETE_OBJECTContent = default;
        private static bool _OPERATION_DELETE_OBJECTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#OPERATION_FORMAT_STORE"/>
        /// </summary>
        public static int OPERATION_FORMAT_STORE { get { if (!_OPERATION_FORMAT_STOREReady) { _OPERATION_FORMAT_STOREContent = SGetField<int>(LocalBridgeClazz, "OPERATION_FORMAT_STORE"); _OPERATION_FORMAT_STOREReady = true; } return _OPERATION_FORMAT_STOREContent; } }
        private static int _OPERATION_FORMAT_STOREContent = default;
        private static bool _OPERATION_FORMAT_STOREReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#OPERATION_GET_DEVICE_INFO"/>
        /// </summary>
        public static int OPERATION_GET_DEVICE_INFO { get { if (!_OPERATION_GET_DEVICE_INFOReady) { _OPERATION_GET_DEVICE_INFOContent = SGetField<int>(LocalBridgeClazz, "OPERATION_GET_DEVICE_INFO"); _OPERATION_GET_DEVICE_INFOReady = true; } return _OPERATION_GET_DEVICE_INFOContent; } }
        private static int _OPERATION_GET_DEVICE_INFOContent = default;
        private static bool _OPERATION_GET_DEVICE_INFOReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#OPERATION_GET_DEVICE_PROP_DESC"/>
        /// </summary>
        public static int OPERATION_GET_DEVICE_PROP_DESC { get { if (!_OPERATION_GET_DEVICE_PROP_DESCReady) { _OPERATION_GET_DEVICE_PROP_DESCContent = SGetField<int>(LocalBridgeClazz, "OPERATION_GET_DEVICE_PROP_DESC"); _OPERATION_GET_DEVICE_PROP_DESCReady = true; } return _OPERATION_GET_DEVICE_PROP_DESCContent; } }
        private static int _OPERATION_GET_DEVICE_PROP_DESCContent = default;
        private static bool _OPERATION_GET_DEVICE_PROP_DESCReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#OPERATION_GET_DEVICE_PROP_VALUE"/>
        /// </summary>
        public static int OPERATION_GET_DEVICE_PROP_VALUE { get { if (!_OPERATION_GET_DEVICE_PROP_VALUEReady) { _OPERATION_GET_DEVICE_PROP_VALUEContent = SGetField<int>(LocalBridgeClazz, "OPERATION_GET_DEVICE_PROP_VALUE"); _OPERATION_GET_DEVICE_PROP_VALUEReady = true; } return _OPERATION_GET_DEVICE_PROP_VALUEContent; } }
        private static int _OPERATION_GET_DEVICE_PROP_VALUEContent = default;
        private static bool _OPERATION_GET_DEVICE_PROP_VALUEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#OPERATION_GET_NUM_OBJECTS"/>
        /// </summary>
        public static int OPERATION_GET_NUM_OBJECTS { get { if (!_OPERATION_GET_NUM_OBJECTSReady) { _OPERATION_GET_NUM_OBJECTSContent = SGetField<int>(LocalBridgeClazz, "OPERATION_GET_NUM_OBJECTS"); _OPERATION_GET_NUM_OBJECTSReady = true; } return _OPERATION_GET_NUM_OBJECTSContent; } }
        private static int _OPERATION_GET_NUM_OBJECTSContent = default;
        private static bool _OPERATION_GET_NUM_OBJECTSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#OPERATION_GET_OBJECT"/>
        /// </summary>
        public static int OPERATION_GET_OBJECT { get { if (!_OPERATION_GET_OBJECTReady) { _OPERATION_GET_OBJECTContent = SGetField<int>(LocalBridgeClazz, "OPERATION_GET_OBJECT"); _OPERATION_GET_OBJECTReady = true; } return _OPERATION_GET_OBJECTContent; } }
        private static int _OPERATION_GET_OBJECTContent = default;
        private static bool _OPERATION_GET_OBJECTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#OPERATION_GET_OBJECT_HANDLES"/>
        /// </summary>
        public static int OPERATION_GET_OBJECT_HANDLES { get { if (!_OPERATION_GET_OBJECT_HANDLESReady) { _OPERATION_GET_OBJECT_HANDLESContent = SGetField<int>(LocalBridgeClazz, "OPERATION_GET_OBJECT_HANDLES"); _OPERATION_GET_OBJECT_HANDLESReady = true; } return _OPERATION_GET_OBJECT_HANDLESContent; } }
        private static int _OPERATION_GET_OBJECT_HANDLESContent = default;
        private static bool _OPERATION_GET_OBJECT_HANDLESReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#OPERATION_GET_OBJECT_INFO"/>
        /// </summary>
        public static int OPERATION_GET_OBJECT_INFO { get { if (!_OPERATION_GET_OBJECT_INFOReady) { _OPERATION_GET_OBJECT_INFOContent = SGetField<int>(LocalBridgeClazz, "OPERATION_GET_OBJECT_INFO"); _OPERATION_GET_OBJECT_INFOReady = true; } return _OPERATION_GET_OBJECT_INFOContent; } }
        private static int _OPERATION_GET_OBJECT_INFOContent = default;
        private static bool _OPERATION_GET_OBJECT_INFOReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#OPERATION_GET_OBJECT_PROP_DESC"/>
        /// </summary>
        public static int OPERATION_GET_OBJECT_PROP_DESC { get { if (!_OPERATION_GET_OBJECT_PROP_DESCReady) { _OPERATION_GET_OBJECT_PROP_DESCContent = SGetField<int>(LocalBridgeClazz, "OPERATION_GET_OBJECT_PROP_DESC"); _OPERATION_GET_OBJECT_PROP_DESCReady = true; } return _OPERATION_GET_OBJECT_PROP_DESCContent; } }
        private static int _OPERATION_GET_OBJECT_PROP_DESCContent = default;
        private static bool _OPERATION_GET_OBJECT_PROP_DESCReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#OPERATION_GET_OBJECT_PROP_VALUE"/>
        /// </summary>
        public static int OPERATION_GET_OBJECT_PROP_VALUE { get { if (!_OPERATION_GET_OBJECT_PROP_VALUEReady) { _OPERATION_GET_OBJECT_PROP_VALUEContent = SGetField<int>(LocalBridgeClazz, "OPERATION_GET_OBJECT_PROP_VALUE"); _OPERATION_GET_OBJECT_PROP_VALUEReady = true; } return _OPERATION_GET_OBJECT_PROP_VALUEContent; } }
        private static int _OPERATION_GET_OBJECT_PROP_VALUEContent = default;
        private static bool _OPERATION_GET_OBJECT_PROP_VALUEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#OPERATION_GET_OBJECT_PROPS_SUPPORTED"/>
        /// </summary>
        public static int OPERATION_GET_OBJECT_PROPS_SUPPORTED { get { if (!_OPERATION_GET_OBJECT_PROPS_SUPPORTEDReady) { _OPERATION_GET_OBJECT_PROPS_SUPPORTEDContent = SGetField<int>(LocalBridgeClazz, "OPERATION_GET_OBJECT_PROPS_SUPPORTED"); _OPERATION_GET_OBJECT_PROPS_SUPPORTEDReady = true; } return _OPERATION_GET_OBJECT_PROPS_SUPPORTEDContent; } }
        private static int _OPERATION_GET_OBJECT_PROPS_SUPPORTEDContent = default;
        private static bool _OPERATION_GET_OBJECT_PROPS_SUPPORTEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#OPERATION_GET_OBJECT_REFERENCES"/>
        /// </summary>
        public static int OPERATION_GET_OBJECT_REFERENCES { get { if (!_OPERATION_GET_OBJECT_REFERENCESReady) { _OPERATION_GET_OBJECT_REFERENCESContent = SGetField<int>(LocalBridgeClazz, "OPERATION_GET_OBJECT_REFERENCES"); _OPERATION_GET_OBJECT_REFERENCESReady = true; } return _OPERATION_GET_OBJECT_REFERENCESContent; } }
        private static int _OPERATION_GET_OBJECT_REFERENCESContent = default;
        private static bool _OPERATION_GET_OBJECT_REFERENCESReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#OPERATION_GET_PARTIAL_OBJECT"/>
        /// </summary>
        public static int OPERATION_GET_PARTIAL_OBJECT { get { if (!_OPERATION_GET_PARTIAL_OBJECTReady) { _OPERATION_GET_PARTIAL_OBJECTContent = SGetField<int>(LocalBridgeClazz, "OPERATION_GET_PARTIAL_OBJECT"); _OPERATION_GET_PARTIAL_OBJECTReady = true; } return _OPERATION_GET_PARTIAL_OBJECTContent; } }
        private static int _OPERATION_GET_PARTIAL_OBJECTContent = default;
        private static bool _OPERATION_GET_PARTIAL_OBJECTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#OPERATION_GET_PARTIAL_OBJECT_64"/>
        /// </summary>
        public static int OPERATION_GET_PARTIAL_OBJECT_64 { get { if (!_OPERATION_GET_PARTIAL_OBJECT_64Ready) { _OPERATION_GET_PARTIAL_OBJECT_64Content = SGetField<int>(LocalBridgeClazz, "OPERATION_GET_PARTIAL_OBJECT_64"); _OPERATION_GET_PARTIAL_OBJECT_64Ready = true; } return _OPERATION_GET_PARTIAL_OBJECT_64Content; } }
        private static int _OPERATION_GET_PARTIAL_OBJECT_64Content = default;
        private static bool _OPERATION_GET_PARTIAL_OBJECT_64Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#OPERATION_GET_STORAGE_I_DS"/>
        /// </summary>
        public static int OPERATION_GET_STORAGE_I_DS { get { if (!_OPERATION_GET_STORAGE_I_DSReady) { _OPERATION_GET_STORAGE_I_DSContent = SGetField<int>(LocalBridgeClazz, "OPERATION_GET_STORAGE_I_DS"); _OPERATION_GET_STORAGE_I_DSReady = true; } return _OPERATION_GET_STORAGE_I_DSContent; } }
        private static int _OPERATION_GET_STORAGE_I_DSContent = default;
        private static bool _OPERATION_GET_STORAGE_I_DSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#OPERATION_GET_STORAGE_INFO"/>
        /// </summary>
        public static int OPERATION_GET_STORAGE_INFO { get { if (!_OPERATION_GET_STORAGE_INFOReady) { _OPERATION_GET_STORAGE_INFOContent = SGetField<int>(LocalBridgeClazz, "OPERATION_GET_STORAGE_INFO"); _OPERATION_GET_STORAGE_INFOReady = true; } return _OPERATION_GET_STORAGE_INFOContent; } }
        private static int _OPERATION_GET_STORAGE_INFOContent = default;
        private static bool _OPERATION_GET_STORAGE_INFOReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#OPERATION_GET_THUMB"/>
        /// </summary>
        public static int OPERATION_GET_THUMB { get { if (!_OPERATION_GET_THUMBReady) { _OPERATION_GET_THUMBContent = SGetField<int>(LocalBridgeClazz, "OPERATION_GET_THUMB"); _OPERATION_GET_THUMBReady = true; } return _OPERATION_GET_THUMBContent; } }
        private static int _OPERATION_GET_THUMBContent = default;
        private static bool _OPERATION_GET_THUMBReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#OPERATION_INITIATE_CAPTURE"/>
        /// </summary>
        public static int OPERATION_INITIATE_CAPTURE { get { if (!_OPERATION_INITIATE_CAPTUREReady) { _OPERATION_INITIATE_CAPTUREContent = SGetField<int>(LocalBridgeClazz, "OPERATION_INITIATE_CAPTURE"); _OPERATION_INITIATE_CAPTUREReady = true; } return _OPERATION_INITIATE_CAPTUREContent; } }
        private static int _OPERATION_INITIATE_CAPTUREContent = default;
        private static bool _OPERATION_INITIATE_CAPTUREReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#OPERATION_INITIATE_OPEN_CAPTURE"/>
        /// </summary>
        public static int OPERATION_INITIATE_OPEN_CAPTURE { get { if (!_OPERATION_INITIATE_OPEN_CAPTUREReady) { _OPERATION_INITIATE_OPEN_CAPTUREContent = SGetField<int>(LocalBridgeClazz, "OPERATION_INITIATE_OPEN_CAPTURE"); _OPERATION_INITIATE_OPEN_CAPTUREReady = true; } return _OPERATION_INITIATE_OPEN_CAPTUREContent; } }
        private static int _OPERATION_INITIATE_OPEN_CAPTUREContent = default;
        private static bool _OPERATION_INITIATE_OPEN_CAPTUREReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#OPERATION_MOVE_OBJECT"/>
        /// </summary>
        public static int OPERATION_MOVE_OBJECT { get { if (!_OPERATION_MOVE_OBJECTReady) { _OPERATION_MOVE_OBJECTContent = SGetField<int>(LocalBridgeClazz, "OPERATION_MOVE_OBJECT"); _OPERATION_MOVE_OBJECTReady = true; } return _OPERATION_MOVE_OBJECTContent; } }
        private static int _OPERATION_MOVE_OBJECTContent = default;
        private static bool _OPERATION_MOVE_OBJECTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#OPERATION_OPEN_SESSION"/>
        /// </summary>
        public static int OPERATION_OPEN_SESSION { get { if (!_OPERATION_OPEN_SESSIONReady) { _OPERATION_OPEN_SESSIONContent = SGetField<int>(LocalBridgeClazz, "OPERATION_OPEN_SESSION"); _OPERATION_OPEN_SESSIONReady = true; } return _OPERATION_OPEN_SESSIONContent; } }
        private static int _OPERATION_OPEN_SESSIONContent = default;
        private static bool _OPERATION_OPEN_SESSIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#OPERATION_POWER_DOWN"/>
        /// </summary>
        public static int OPERATION_POWER_DOWN { get { if (!_OPERATION_POWER_DOWNReady) { _OPERATION_POWER_DOWNContent = SGetField<int>(LocalBridgeClazz, "OPERATION_POWER_DOWN"); _OPERATION_POWER_DOWNReady = true; } return _OPERATION_POWER_DOWNContent; } }
        private static int _OPERATION_POWER_DOWNContent = default;
        private static bool _OPERATION_POWER_DOWNReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#OPERATION_RESET_DEVICE"/>
        /// </summary>
        public static int OPERATION_RESET_DEVICE { get { if (!_OPERATION_RESET_DEVICEReady) { _OPERATION_RESET_DEVICEContent = SGetField<int>(LocalBridgeClazz, "OPERATION_RESET_DEVICE"); _OPERATION_RESET_DEVICEReady = true; } return _OPERATION_RESET_DEVICEContent; } }
        private static int _OPERATION_RESET_DEVICEContent = default;
        private static bool _OPERATION_RESET_DEVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#OPERATION_RESET_DEVICE_PROP_VALUE"/>
        /// </summary>
        public static int OPERATION_RESET_DEVICE_PROP_VALUE { get { if (!_OPERATION_RESET_DEVICE_PROP_VALUEReady) { _OPERATION_RESET_DEVICE_PROP_VALUEContent = SGetField<int>(LocalBridgeClazz, "OPERATION_RESET_DEVICE_PROP_VALUE"); _OPERATION_RESET_DEVICE_PROP_VALUEReady = true; } return _OPERATION_RESET_DEVICE_PROP_VALUEContent; } }
        private static int _OPERATION_RESET_DEVICE_PROP_VALUEContent = default;
        private static bool _OPERATION_RESET_DEVICE_PROP_VALUEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#OPERATION_SELF_TEST"/>
        /// </summary>
        public static int OPERATION_SELF_TEST { get { if (!_OPERATION_SELF_TESTReady) { _OPERATION_SELF_TESTContent = SGetField<int>(LocalBridgeClazz, "OPERATION_SELF_TEST"); _OPERATION_SELF_TESTReady = true; } return _OPERATION_SELF_TESTContent; } }
        private static int _OPERATION_SELF_TESTContent = default;
        private static bool _OPERATION_SELF_TESTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#OPERATION_SEND_OBJECT"/>
        /// </summary>
        public static int OPERATION_SEND_OBJECT { get { if (!_OPERATION_SEND_OBJECTReady) { _OPERATION_SEND_OBJECTContent = SGetField<int>(LocalBridgeClazz, "OPERATION_SEND_OBJECT"); _OPERATION_SEND_OBJECTReady = true; } return _OPERATION_SEND_OBJECTContent; } }
        private static int _OPERATION_SEND_OBJECTContent = default;
        private static bool _OPERATION_SEND_OBJECTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#OPERATION_SEND_OBJECT_INFO"/>
        /// </summary>
        public static int OPERATION_SEND_OBJECT_INFO { get { if (!_OPERATION_SEND_OBJECT_INFOReady) { _OPERATION_SEND_OBJECT_INFOContent = SGetField<int>(LocalBridgeClazz, "OPERATION_SEND_OBJECT_INFO"); _OPERATION_SEND_OBJECT_INFOReady = true; } return _OPERATION_SEND_OBJECT_INFOContent; } }
        private static int _OPERATION_SEND_OBJECT_INFOContent = default;
        private static bool _OPERATION_SEND_OBJECT_INFOReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#OPERATION_SET_DEVICE_PROP_VALUE"/>
        /// </summary>
        public static int OPERATION_SET_DEVICE_PROP_VALUE { get { if (!_OPERATION_SET_DEVICE_PROP_VALUEReady) { _OPERATION_SET_DEVICE_PROP_VALUEContent = SGetField<int>(LocalBridgeClazz, "OPERATION_SET_DEVICE_PROP_VALUE"); _OPERATION_SET_DEVICE_PROP_VALUEReady = true; } return _OPERATION_SET_DEVICE_PROP_VALUEContent; } }
        private static int _OPERATION_SET_DEVICE_PROP_VALUEContent = default;
        private static bool _OPERATION_SET_DEVICE_PROP_VALUEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#OPERATION_SET_OBJECT_PROP_VALUE"/>
        /// </summary>
        public static int OPERATION_SET_OBJECT_PROP_VALUE { get { if (!_OPERATION_SET_OBJECT_PROP_VALUEReady) { _OPERATION_SET_OBJECT_PROP_VALUEContent = SGetField<int>(LocalBridgeClazz, "OPERATION_SET_OBJECT_PROP_VALUE"); _OPERATION_SET_OBJECT_PROP_VALUEReady = true; } return _OPERATION_SET_OBJECT_PROP_VALUEContent; } }
        private static int _OPERATION_SET_OBJECT_PROP_VALUEContent = default;
        private static bool _OPERATION_SET_OBJECT_PROP_VALUEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#OPERATION_SET_OBJECT_PROTECTION"/>
        /// </summary>
        public static int OPERATION_SET_OBJECT_PROTECTION { get { if (!_OPERATION_SET_OBJECT_PROTECTIONReady) { _OPERATION_SET_OBJECT_PROTECTIONContent = SGetField<int>(LocalBridgeClazz, "OPERATION_SET_OBJECT_PROTECTION"); _OPERATION_SET_OBJECT_PROTECTIONReady = true; } return _OPERATION_SET_OBJECT_PROTECTIONContent; } }
        private static int _OPERATION_SET_OBJECT_PROTECTIONContent = default;
        private static bool _OPERATION_SET_OBJECT_PROTECTIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#OPERATION_SET_OBJECT_REFERENCES"/>
        /// </summary>
        public static int OPERATION_SET_OBJECT_REFERENCES { get { if (!_OPERATION_SET_OBJECT_REFERENCESReady) { _OPERATION_SET_OBJECT_REFERENCESContent = SGetField<int>(LocalBridgeClazz, "OPERATION_SET_OBJECT_REFERENCES"); _OPERATION_SET_OBJECT_REFERENCESReady = true; } return _OPERATION_SET_OBJECT_REFERENCESContent; } }
        private static int _OPERATION_SET_OBJECT_REFERENCESContent = default;
        private static bool _OPERATION_SET_OBJECT_REFERENCESReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#OPERATION_SKIP"/>
        /// </summary>
        public static int OPERATION_SKIP { get { if (!_OPERATION_SKIPReady) { _OPERATION_SKIPContent = SGetField<int>(LocalBridgeClazz, "OPERATION_SKIP"); _OPERATION_SKIPReady = true; } return _OPERATION_SKIPContent; } }
        private static int _OPERATION_SKIPContent = default;
        private static bool _OPERATION_SKIPReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#OPERATION_TERMINATE_OPEN_CAPTURE"/>
        /// </summary>
        public static int OPERATION_TERMINATE_OPEN_CAPTURE { get { if (!_OPERATION_TERMINATE_OPEN_CAPTUREReady) { _OPERATION_TERMINATE_OPEN_CAPTUREContent = SGetField<int>(LocalBridgeClazz, "OPERATION_TERMINATE_OPEN_CAPTURE"); _OPERATION_TERMINATE_OPEN_CAPTUREReady = true; } return _OPERATION_TERMINATE_OPEN_CAPTUREContent; } }
        private static int _OPERATION_TERMINATE_OPEN_CAPTUREContent = default;
        private static bool _OPERATION_TERMINATE_OPEN_CAPTUREReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#PROTECTION_STATUS_NON_TRANSFERABLE_DATA"/>
        /// </summary>
        public static int PROTECTION_STATUS_NON_TRANSFERABLE_DATA { get { if (!_PROTECTION_STATUS_NON_TRANSFERABLE_DATAReady) { _PROTECTION_STATUS_NON_TRANSFERABLE_DATAContent = SGetField<int>(LocalBridgeClazz, "PROTECTION_STATUS_NON_TRANSFERABLE_DATA"); _PROTECTION_STATUS_NON_TRANSFERABLE_DATAReady = true; } return _PROTECTION_STATUS_NON_TRANSFERABLE_DATAContent; } }
        private static int _PROTECTION_STATUS_NON_TRANSFERABLE_DATAContent = default;
        private static bool _PROTECTION_STATUS_NON_TRANSFERABLE_DATAReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#PROTECTION_STATUS_NONE"/>
        /// </summary>
        public static int PROTECTION_STATUS_NONE { get { if (!_PROTECTION_STATUS_NONEReady) { _PROTECTION_STATUS_NONEContent = SGetField<int>(LocalBridgeClazz, "PROTECTION_STATUS_NONE"); _PROTECTION_STATUS_NONEReady = true; } return _PROTECTION_STATUS_NONEContent; } }
        private static int _PROTECTION_STATUS_NONEContent = default;
        private static bool _PROTECTION_STATUS_NONEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#PROTECTION_STATUS_READ_ONLY"/>
        /// </summary>
        public static int PROTECTION_STATUS_READ_ONLY { get { if (!_PROTECTION_STATUS_READ_ONLYReady) { _PROTECTION_STATUS_READ_ONLYContent = SGetField<int>(LocalBridgeClazz, "PROTECTION_STATUS_READ_ONLY"); _PROTECTION_STATUS_READ_ONLYReady = true; } return _PROTECTION_STATUS_READ_ONLYContent; } }
        private static int _PROTECTION_STATUS_READ_ONLYContent = default;
        private static bool _PROTECTION_STATUS_READ_ONLYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#PROTECTION_STATUS_READ_ONLY_DATA"/>
        /// </summary>
        public static int PROTECTION_STATUS_READ_ONLY_DATA { get { if (!_PROTECTION_STATUS_READ_ONLY_DATAReady) { _PROTECTION_STATUS_READ_ONLY_DATAContent = SGetField<int>(LocalBridgeClazz, "PROTECTION_STATUS_READ_ONLY_DATA"); _PROTECTION_STATUS_READ_ONLY_DATAReady = true; } return _PROTECTION_STATUS_READ_ONLY_DATAContent; } }
        private static int _PROTECTION_STATUS_READ_ONLY_DATAContent = default;
        private static bool _PROTECTION_STATUS_READ_ONLY_DATAReady = false; // this is used because in case of generics 
    
        #endregion
    
        #region Static methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpConstants.html#isAbstractObject(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool IsAbstractObject(int arg0)
        {
            return SExecuteWithSignature<bool>(LocalBridgeClazz, "isAbstractObject", "(I)Z", arg0);
        }
    
        #endregion
    
        #region Instance methods
    
        #endregion
    
        #region Nested classes
    
        #endregion
    
        // TODO: complete the class
    }
    #endregion
}