/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.1.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Window
{
    #region IOnBackInvokedDispatcher
    /// <summary>
    /// .NET interface for TO BE DEFINED FROM USER
    /// </summary>
    public partial interface IOnBackInvokedDispatcher
    {
        #region Instance methods

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion

    #region OnBackInvokedDispatcher
    public partial class OnBackInvokedDispatcher : Android.Window.IOnBackInvokedDispatcher
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/window/OnBackInvokedDispatcher.html#PRIORITY_DEFAULT"/>
        /// </summary>
        public static int PRIORITY_DEFAULT { get { if (!_PRIORITY_DEFAULTReady) { _PRIORITY_DEFAULTContent = SGetField<int>(LocalBridgeClazz, "PRIORITY_DEFAULT"); _PRIORITY_DEFAULTReady = true; } return _PRIORITY_DEFAULTContent; } }
        private static int _PRIORITY_DEFAULTContent = default;
        private static bool _PRIORITY_DEFAULTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/window/OnBackInvokedDispatcher.html#PRIORITY_OVERLAY"/>
        /// </summary>
        public static int PRIORITY_OVERLAY { get { if (!_PRIORITY_OVERLAYReady) { _PRIORITY_OVERLAYContent = SGetField<int>(LocalBridgeClazz, "PRIORITY_OVERLAY"); _PRIORITY_OVERLAYReady = true; } return _PRIORITY_OVERLAYContent; } }
        private static int _PRIORITY_OVERLAYContent = default;
        private static bool _PRIORITY_OVERLAYReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/window/OnBackInvokedDispatcher.html#registerOnBackInvokedCallback(int,android.window.OnBackInvokedCallback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="Android.Window.OnBackInvokedCallback"/></param>
        public void RegisterOnBackInvokedCallback(int arg0, Android.Window.OnBackInvokedCallback arg1)
        {
            IExecute("registerOnBackInvokedCallback", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/window/OnBackInvokedDispatcher.html#unregisterOnBackInvokedCallback(android.window.OnBackInvokedCallback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Window.OnBackInvokedCallback"/></param>
        public void UnregisterOnBackInvokedCallback(Android.Window.OnBackInvokedCallback arg0)
        {
            IExecuteWithSignature("unregisterOnBackInvokedCallback", "(Landroid/window/OnBackInvokedCallback;)V", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}