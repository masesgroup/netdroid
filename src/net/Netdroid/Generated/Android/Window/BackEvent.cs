/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.1.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Window
{
    #region BackEvent
    public partial class BackEvent
    {
        #region Constructors
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/window/BackEvent.html#%3Cinit%3E(float,float,float,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="float"/></param>
        /// <param name="arg1"><see cref="float"/></param>
        /// <param name="arg2"><see cref="float"/></param>
        /// <param name="arg3"><see cref="int"/></param>
        public BackEvent(float arg0, float arg1, float arg2, int arg3)
            : base(arg0, arg1, arg2, arg3)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/window/BackEvent.html#EDGE_LEFT"/>
        /// </summary>
        public static int EDGE_LEFT { get { if (!_EDGE_LEFTReady) { _EDGE_LEFTContent = SGetField<int>(LocalBridgeClazz, "EDGE_LEFT"); _EDGE_LEFTReady = true; } return _EDGE_LEFTContent; } }
        private static int _EDGE_LEFTContent = default;
        private static bool _EDGE_LEFTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/window/BackEvent.html#EDGE_RIGHT"/>
        /// </summary>
        public static int EDGE_RIGHT { get { if (!_EDGE_RIGHTReady) { _EDGE_RIGHTContent = SGetField<int>(LocalBridgeClazz, "EDGE_RIGHT"); _EDGE_RIGHTReady = true; } return _EDGE_RIGHTContent; } }
        private static int _EDGE_RIGHTContent = default;
        private static bool _EDGE_RIGHTReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/window/BackEvent.html#getProgress()"/> 
        /// </summary>
        public float Progress
        {
            get { return IExecuteWithSignature<float>("getProgress", "()F"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/window/BackEvent.html#getSwipeEdge()"/> 
        /// </summary>
        public int SwipeEdge
        {
            get { return IExecuteWithSignature<int>("getSwipeEdge", "()I"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/window/BackEvent.html#getTouchX()"/> 
        /// </summary>
        public float TouchX
        {
            get { return IExecuteWithSignature<float>("getTouchX", "()F"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/window/BackEvent.html#getTouchY()"/> 
        /// </summary>
        public float TouchY
        {
            get { return IExecuteWithSignature<float>("getTouchY", "()F"); }
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}