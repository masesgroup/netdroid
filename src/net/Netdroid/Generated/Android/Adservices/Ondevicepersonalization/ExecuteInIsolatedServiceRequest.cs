/*
*  Copyright (c) 2024-2025 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.6.4.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Adservices.Ondevicepersonalization
{
    #region ExecuteInIsolatedServiceRequest declaration
    /// <summary>
    /// <see href="https://developer.android.com/reference/android/adservices/ondevicepersonalization/ExecuteInIsolatedServiceRequest.html"/>
    /// </summary>
    public partial class ExecuteInIsolatedServiceRequest : MASES.JCOBridge.C2JBridge.JVMBridgeBase<ExecuteInIsolatedServiceRequest>
    {
        const string _bridgeClassName = "android.adservices.ondevicepersonalization.ExecuteInIsolatedServiceRequest";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public ExecuteInIsolatedServiceRequest() { }
        /// <summary>
        /// Internal constructor: used internally from JCOBridge
        /// </summary>
        [global::System.Obsolete("This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public ExecuteInIsolatedServiceRequest(IJVMBridgeBaseInitializer initializer) : base(initializer) { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public ExecuteInIsolatedServiceRequest(params object[] args) : base(args) { }
    
        private static readonly global::System.Exception _LocalBridgeClazzException = null;
        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, out _LocalBridgeClazzException, false);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw _LocalBridgeClazzException ?? new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
    
        /// <inheritdoc/>
        public override string BridgeClassName => _bridgeClassName;
        /// <inheritdoc/>
        public override bool IsBridgeAbstract => false;
        /// <inheritdoc/>
        public override bool IsBridgeCloseable => false;
        /// <inheritdoc/>
        public override bool IsBridgeInterface => false;
        /// <inheritdoc/>
        public override bool IsBridgeStatic => false;
    
        // TODO: complete the class
        #region Builder declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/adservices/ondevicepersonalization/ExecuteInIsolatedServiceRequest.Builder.html"/>
        /// </summary>
        public partial class Builder : MASES.JCOBridge.C2JBridge.JVMBridgeBase<Builder>
        {
            const string _bridgeClassName = "android.adservices.ondevicepersonalization.ExecuteInIsolatedServiceRequest$Builder";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public Builder() { }
            /// <summary>
            /// Internal constructor: used internally from JCOBridge
            /// </summary>
            [global::System.Obsolete("This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public Builder(IJVMBridgeBaseInitializer initializer) : base(initializer) { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public Builder(params object[] args) : base(args) { }
        
            private static readonly global::System.Exception _LocalBridgeClazzException = null;
            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, out _LocalBridgeClazzException, false);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw _LocalBridgeClazzException ?? new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
        
            /// <inheritdoc/>
            public override string BridgeClassName => _bridgeClassName;
            /// <inheritdoc/>
            public override bool IsBridgeAbstract => false;
            /// <inheritdoc/>
            public override bool IsBridgeCloseable => false;
            /// <inheritdoc/>
            public override bool IsBridgeInterface => false;
            /// <inheritdoc/>
            public override bool IsBridgeStatic => true;
        
            // TODO: complete the class
        
        }
        #endregion

        #region OutputSpec declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/adservices/ondevicepersonalization/ExecuteInIsolatedServiceRequest.OutputSpec.html"/>
        /// </summary>
        public partial class OutputSpec : MASES.JCOBridge.C2JBridge.JVMBridgeBase<OutputSpec>
        {
            const string _bridgeClassName = "android.adservices.ondevicepersonalization.ExecuteInIsolatedServiceRequest$OutputSpec";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public OutputSpec() { }
            /// <summary>
            /// Internal constructor: used internally from JCOBridge
            /// </summary>
            [global::System.Obsolete("This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public OutputSpec(IJVMBridgeBaseInitializer initializer) : base(initializer) { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public OutputSpec(params object[] args) : base(args) { }
        
            private static readonly global::System.Exception _LocalBridgeClazzException = null;
            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, out _LocalBridgeClazzException, false);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw _LocalBridgeClazzException ?? new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
        
            /// <inheritdoc/>
            public override string BridgeClassName => _bridgeClassName;
            /// <inheritdoc/>
            public override bool IsBridgeAbstract => false;
            /// <inheritdoc/>
            public override bool IsBridgeCloseable => false;
            /// <inheritdoc/>
            public override bool IsBridgeInterface => false;
            /// <inheritdoc/>
            public override bool IsBridgeStatic => true;
        
            // TODO: complete the class
        
        }
        #endregion

    
    }
    #endregion

    #region ExecuteInIsolatedServiceRequest implementation
    public partial class ExecuteInIsolatedServiceRequest
    {
        #region Constructors
    
        #endregion
    
        #region Class/Interface conversion operators
    
        #endregion
    
        #region Fields
    
        #endregion
    
        #region Static methods
    
        #endregion
    
        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/adservices/ondevicepersonalization/ExecuteInIsolatedServiceRequest.html#getOutputSpec()"/>
        /// </summary>
        /// <returns><see cref="Android.Adservices.Ondevicepersonalization.ExecuteInIsolatedServiceRequest.OutputSpec"/></returns>
        public Android.Adservices.Ondevicepersonalization.ExecuteInIsolatedServiceRequest.OutputSpec GetOutputSpec()
        {
            return IExecuteWithSignature<Android.Adservices.Ondevicepersonalization.ExecuteInIsolatedServiceRequest.OutputSpec>("getOutputSpec", "()Landroid/adservices/ondevicepersonalization/ExecuteInIsolatedServiceRequest$OutputSpec;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/adservices/ondevicepersonalization/ExecuteInIsolatedServiceRequest.html#getService()"/>
        /// </summary>
        /// <returns><see cref="Android.Content.ComponentName"/></returns>
        public Android.Content.ComponentName GetService()
        {
            return IExecuteWithSignature<Android.Content.ComponentName>("getService", "()Landroid/content/ComponentName;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/adservices/ondevicepersonalization/ExecuteInIsolatedServiceRequest.html#getAppParams()"/>
        /// </summary>
        /// <returns><see cref="Android.Os.PersistableBundle"/></returns>
        public Android.Os.PersistableBundle GetAppParams()
        {
            return IExecuteWithSignature<Android.Os.PersistableBundle>("getAppParams", "()Landroid/os/PersistableBundle;");
        }
    
        #endregion
    
        #region Nested classes
        #region Builder implementation
        public partial class Builder
        {
            #region Constructors
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/adservices/ondevicepersonalization/ExecuteInIsolatedServiceRequest.Builder.html#%3Cinit%3E(android.content.ComponentName)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Content.ComponentName"/></param>
            public Builder(Android.Content.ComponentName arg0)
                : base(arg0)
            {
            }
        
            #endregion
        
            #region Class/Interface conversion operators
        
            #endregion
        
            #region Fields
        
            #endregion
        
            #region Static methods
        
            #endregion
        
            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/adservices/ondevicepersonalization/ExecuteInIsolatedServiceRequest.Builder.html#build()"/>
            /// </summary>
            /// <returns><see cref="Android.Adservices.Ondevicepersonalization.ExecuteInIsolatedServiceRequest"/></returns>
            public Android.Adservices.Ondevicepersonalization.ExecuteInIsolatedServiceRequest Build()
            {
                return IExecuteWithSignature<Android.Adservices.Ondevicepersonalization.ExecuteInIsolatedServiceRequest>("build", "()Landroid/adservices/ondevicepersonalization/ExecuteInIsolatedServiceRequest;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/adservices/ondevicepersonalization/ExecuteInIsolatedServiceRequest.Builder.html#setAppParams(android.os.PersistableBundle)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Os.PersistableBundle"/></param>
            /// <returns><see cref="Android.Adservices.Ondevicepersonalization.ExecuteInIsolatedServiceRequest.Builder"/></returns>
            public Android.Adservices.Ondevicepersonalization.ExecuteInIsolatedServiceRequest.Builder SetAppParams(Android.Os.PersistableBundle arg0)
            {
                return IExecuteWithSignature<Android.Adservices.Ondevicepersonalization.ExecuteInIsolatedServiceRequest.Builder>("setAppParams", "(Landroid/os/PersistableBundle;)Landroid/adservices/ondevicepersonalization/ExecuteInIsolatedServiceRequest$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/adservices/ondevicepersonalization/ExecuteInIsolatedServiceRequest.Builder.html#setOutputSpec(android.adservices.ondevicepersonalization.ExecuteInIsolatedServiceRequest.OutputSpec)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Adservices.Ondevicepersonalization.ExecuteInIsolatedServiceRequest.OutputSpec"/></param>
            /// <returns><see cref="Android.Adservices.Ondevicepersonalization.ExecuteInIsolatedServiceRequest.Builder"/></returns>
            public Android.Adservices.Ondevicepersonalization.ExecuteInIsolatedServiceRequest.Builder SetOutputSpec(Android.Adservices.Ondevicepersonalization.ExecuteInIsolatedServiceRequest.OutputSpec arg0)
            {
                return IExecuteWithSignature<Android.Adservices.Ondevicepersonalization.ExecuteInIsolatedServiceRequest.Builder>("setOutputSpec", "(Landroid/adservices/ondevicepersonalization/ExecuteInIsolatedServiceRequest$OutputSpec;)Landroid/adservices/ondevicepersonalization/ExecuteInIsolatedServiceRequest$Builder;", arg0);
            }
        
            #endregion
        
            #region Nested classes
        
            #endregion
        
            // TODO: complete the class
        }
        #endregion

        #region OutputSpec implementation
        public partial class OutputSpec
        {
            #region Constructors
        
            #endregion
        
            #region Class/Interface conversion operators
        
            #endregion
        
            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/adservices/ondevicepersonalization/ExecuteInIsolatedServiceRequest.OutputSpec.html#DEFAULT"/>
            /// </summary>
            public static Android.Adservices.Ondevicepersonalization.ExecuteInIsolatedServiceRequest.OutputSpec DEFAULT { get { if (!_DEFAULTReady) { _DEFAULTContent = SGetField<Android.Adservices.Ondevicepersonalization.ExecuteInIsolatedServiceRequest.OutputSpec>(LocalBridgeClazz, "DEFAULT"); _DEFAULTReady = true; } return _DEFAULTContent; } }
            private static Android.Adservices.Ondevicepersonalization.ExecuteInIsolatedServiceRequest.OutputSpec _DEFAULTContent = default;
            private static bool _DEFAULTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/adservices/ondevicepersonalization/ExecuteInIsolatedServiceRequest.OutputSpec.html#OUTPUT_TYPE_BEST_VALUE"/>
            /// </summary>
            public static int OUTPUT_TYPE_BEST_VALUE { get { if (!_OUTPUT_TYPE_BEST_VALUEReady) { _OUTPUT_TYPE_BEST_VALUEContent = SGetField<int>(LocalBridgeClazz, "OUTPUT_TYPE_BEST_VALUE"); _OUTPUT_TYPE_BEST_VALUEReady = true; } return _OUTPUT_TYPE_BEST_VALUEContent; } }
            private static int _OUTPUT_TYPE_BEST_VALUEContent = default;
            private static bool _OUTPUT_TYPE_BEST_VALUEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/adservices/ondevicepersonalization/ExecuteInIsolatedServiceRequest.OutputSpec.html#OUTPUT_TYPE_NULL"/>
            /// </summary>
            public static int OUTPUT_TYPE_NULL { get { if (!_OUTPUT_TYPE_NULLReady) { _OUTPUT_TYPE_NULLContent = SGetField<int>(LocalBridgeClazz, "OUTPUT_TYPE_NULL"); _OUTPUT_TYPE_NULLReady = true; } return _OUTPUT_TYPE_NULLContent; } }
            private static int _OUTPUT_TYPE_NULLContent = default;
            private static bool _OUTPUT_TYPE_NULLReady = false; // this is used because in case of generics 
        
            #endregion
        
            #region Static methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/adservices/ondevicepersonalization/ExecuteInIsolatedServiceRequest.OutputSpec.html#buildBestValueSpec(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <returns><see cref="Android.Adservices.Ondevicepersonalization.ExecuteInIsolatedServiceRequest.OutputSpec"/></returns>
            public static Android.Adservices.Ondevicepersonalization.ExecuteInIsolatedServiceRequest.OutputSpec BuildBestValueSpec(int arg0)
            {
                return SExecuteWithSignature<Android.Adservices.Ondevicepersonalization.ExecuteInIsolatedServiceRequest.OutputSpec>(LocalBridgeClazz, "buildBestValueSpec", "(I)Landroid/adservices/ondevicepersonalization/ExecuteInIsolatedServiceRequest$OutputSpec;", arg0);
            }
        
            #endregion
        
            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/adservices/ondevicepersonalization/ExecuteInIsolatedServiceRequest.OutputSpec.html#getMaxIntValue()"/>
            /// </summary>
            /// <returns><see cref="int"/></returns>
            public int GetMaxIntValue()
            {
                return IExecuteWithSignature<int>("getMaxIntValue", "()I");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/adservices/ondevicepersonalization/ExecuteInIsolatedServiceRequest.OutputSpec.html#getOutputType()"/>
            /// </summary>
            /// <returns><see cref="int"/></returns>
            public int GetOutputType()
            {
                return IExecuteWithSignature<int>("getOutputType", "()I");
            }
        
            #endregion
        
            #region Nested classes
        
            #endregion
        
            // TODO: complete the class
        }
        #endregion

    
        #endregion
    
        // TODO: complete the class
    }
    #endregion
}