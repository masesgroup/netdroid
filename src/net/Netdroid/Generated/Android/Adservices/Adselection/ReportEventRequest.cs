/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.10.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Adservices.Adselection
{
    #region ReportEventRequest declaration
    /// <summary>
    /// <see href="https://developer.android.com/reference/android/adservices/adselection/ReportEventRequest.html"/>
    /// </summary>
    public partial class ReportEventRequest : MASES.JCOBridge.C2JBridge.JVMBridgeBase<ReportEventRequest>
    {
        const string _bridgeClassName = "android.adservices.adselection.ReportEventRequest";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public ReportEventRequest() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public ReportEventRequest(params object[] args) : base(args) { }
    
        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
    
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;
    
        // TODO: complete the class
        #region Builder declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/adservices/adselection/ReportEventRequest.Builder.html"/>
        /// </summary>
        public partial class Builder : MASES.JCOBridge.C2JBridge.JVMBridgeBase<Builder>
        {
            const string _bridgeClassName = "android.adservices.adselection.ReportEventRequest$Builder";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public Builder() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public Builder(params object[] args) : base(args) { }
        
            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
        
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;
        
            // TODO: complete the class
        
        }
        #endregion

    
    }
    #endregion

    #region ReportEventRequest implementation
    public partial class ReportEventRequest
    {
        #region Constructors
    
        #endregion
    
        #region Class/Interface conversion operators
    
        #endregion
    
        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/adservices/adselection/ReportEventRequest.html#FLAG_REPORTING_DESTINATION_BUYER"/>
        /// </summary>
        public static int FLAG_REPORTING_DESTINATION_BUYER { get { if (!_FLAG_REPORTING_DESTINATION_BUYERReady) { _FLAG_REPORTING_DESTINATION_BUYERContent = SGetField<int>(LocalBridgeClazz, "FLAG_REPORTING_DESTINATION_BUYER"); _FLAG_REPORTING_DESTINATION_BUYERReady = true; } return _FLAG_REPORTING_DESTINATION_BUYERContent; } }
        private static int _FLAG_REPORTING_DESTINATION_BUYERContent = default;
        private static bool _FLAG_REPORTING_DESTINATION_BUYERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/adservices/adselection/ReportEventRequest.html#FLAG_REPORTING_DESTINATION_SELLER"/>
        /// </summary>
        public static int FLAG_REPORTING_DESTINATION_SELLER { get { if (!_FLAG_REPORTING_DESTINATION_SELLERReady) { _FLAG_REPORTING_DESTINATION_SELLERContent = SGetField<int>(LocalBridgeClazz, "FLAG_REPORTING_DESTINATION_SELLER"); _FLAG_REPORTING_DESTINATION_SELLERReady = true; } return _FLAG_REPORTING_DESTINATION_SELLERContent; } }
        private static int _FLAG_REPORTING_DESTINATION_SELLERContent = default;
        private static bool _FLAG_REPORTING_DESTINATION_SELLERReady = false; // this is used because in case of generics 
    
        #endregion
    
        #region Static methods
    
        #endregion
    
        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/adservices/adselection/ReportEventRequest.html#getInputEvent()"/>
        /// </summary>
        /// <returns><see cref="Android.View.InputEvent"/></returns>
        public Android.View.InputEvent GetInputEvent()
        {
            return IExecuteWithSignature<Android.View.InputEvent>("getInputEvent", "()Landroid/view/InputEvent;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/adservices/adselection/ReportEventRequest.html#getReportingDestinations()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetReportingDestinations()
        {
            return IExecuteWithSignature<int>("getReportingDestinations", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/adservices/adselection/ReportEventRequest.html#getData()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetData()
        {
            return IExecuteWithSignature<Java.Lang.String>("getData", "()Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/adservices/adselection/ReportEventRequest.html#getKey()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetKey()
        {
            return IExecuteWithSignature<Java.Lang.String>("getKey", "()Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/adservices/adselection/ReportEventRequest.html#getAdSelectionId()"/>
        /// </summary>
        /// <returns><see cref="long"/></returns>
        public long GetAdSelectionId()
        {
            return IExecuteWithSignature<long>("getAdSelectionId", "()J");
        }
    
        #endregion
    
        #region Nested classes
        #region Builder implementation
        public partial class Builder
        {
            #region Constructors
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/adservices/adselection/ReportEventRequest.Builder.html#%3Cinit%3E(long,java.lang.String,java.lang.String,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="long"/></param>
            /// <param name="arg1"><see cref="Java.Lang.String"/></param>
            /// <param name="arg2"><see cref="Java.Lang.String"/></param>
            /// <param name="arg3"><see cref="int"/></param>
            public Builder(long arg0, Java.Lang.String arg1, Java.Lang.String arg2, int arg3)
                : base(arg0, arg1, arg2, arg3)
            {
            }
        
            #endregion
        
            #region Class/Interface conversion operators
        
            #endregion
        
            #region Fields
        
            #endregion
        
            #region Static methods
        
            #endregion
        
            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/adservices/adselection/ReportEventRequest.Builder.html#build()"/>
            /// </summary>
            /// <returns><see cref="Android.Adservices.Adselection.ReportEventRequest"/></returns>
            public Android.Adservices.Adselection.ReportEventRequest Build()
            {
                return IExecuteWithSignature<Android.Adservices.Adselection.ReportEventRequest>("build", "()Landroid/adservices/adselection/ReportEventRequest;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/adservices/adselection/ReportEventRequest.Builder.html#setAdSelectionId(long)"/>
            /// </summary>
            /// <param name="arg0"><see cref="long"/></param>
            /// <returns><see cref="Android.Adservices.Adselection.ReportEventRequest.Builder"/></returns>
            public Android.Adservices.Adselection.ReportEventRequest.Builder SetAdSelectionId(long arg0)
            {
                return IExecuteWithSignature<Android.Adservices.Adselection.ReportEventRequest.Builder>("setAdSelectionId", "(J)Landroid/adservices/adselection/ReportEventRequest$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/adservices/adselection/ReportEventRequest.Builder.html#setData(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Android.Adservices.Adselection.ReportEventRequest.Builder"/></returns>
            public Android.Adservices.Adselection.ReportEventRequest.Builder SetData(Java.Lang.String arg0)
            {
                return IExecuteWithSignature<Android.Adservices.Adselection.ReportEventRequest.Builder>("setData", "(Ljava/lang/String;)Landroid/adservices/adselection/ReportEventRequest$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/adservices/adselection/ReportEventRequest.Builder.html#setInputEvent(android.view.InputEvent)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.View.InputEvent"/></param>
            /// <returns><see cref="Android.Adservices.Adselection.ReportEventRequest.Builder"/></returns>
            public Android.Adservices.Adselection.ReportEventRequest.Builder SetInputEvent(Android.View.InputEvent arg0)
            {
                return IExecuteWithSignature<Android.Adservices.Adselection.ReportEventRequest.Builder>("setInputEvent", "(Landroid/view/InputEvent;)Landroid/adservices/adselection/ReportEventRequest$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/adservices/adselection/ReportEventRequest.Builder.html#setKey(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Android.Adservices.Adselection.ReportEventRequest.Builder"/></returns>
            public Android.Adservices.Adselection.ReportEventRequest.Builder SetKey(Java.Lang.String arg0)
            {
                return IExecuteWithSignature<Android.Adservices.Adselection.ReportEventRequest.Builder>("setKey", "(Ljava/lang/String;)Landroid/adservices/adselection/ReportEventRequest$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/adservices/adselection/ReportEventRequest.Builder.html#setReportingDestinations(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <returns><see cref="Android.Adservices.Adselection.ReportEventRequest.Builder"/></returns>
            public Android.Adservices.Adselection.ReportEventRequest.Builder SetReportingDestinations(int arg0)
            {
                return IExecuteWithSignature<Android.Adservices.Adselection.ReportEventRequest.Builder>("setReportingDestinations", "(I)Landroid/adservices/adselection/ReportEventRequest$Builder;", arg0);
            }
        
            #endregion
        
            #region Nested classes
        
            #endregion
        
            // TODO: complete the class
        }
        #endregion

    
        #endregion
    
        // TODO: complete the class
    }
    #endregion
}