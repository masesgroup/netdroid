/*
*  Copyright (c) 2024-2025 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.6.4.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Ranging.Oob
{
    #region OobInitiatorRangingConfig declaration
    /// <summary>
    /// <see href="https://developer.android.com/reference/android/ranging/oob/OobInitiatorRangingConfig.html"/>
    /// </summary>
    public partial class OobInitiatorRangingConfig : Android.Ranging.RangingConfig
    {
        const string _bridgeClassName = "android.ranging.oob.OobInitiatorRangingConfig";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public OobInitiatorRangingConfig() { }
        /// <summary>
        /// Internal constructor: used internally from JCOBridge
        /// </summary>
        [global::System.Obsolete("This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public OobInitiatorRangingConfig(IJVMBridgeBaseInitializer initializer) : base(initializer) { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public OobInitiatorRangingConfig(params object[] args) : base(args) { }
    
        private static readonly global::System.Exception _LocalBridgeClazzException = null;
        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, out _LocalBridgeClazzException, false);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw _LocalBridgeClazzException ?? new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
    
        /// <inheritdoc/>
        public override string BridgeClassName => _bridgeClassName;
        /// <inheritdoc/>
        public override bool IsBridgeAbstract => false;
        /// <inheritdoc/>
        public override bool IsBridgeCloseable => false;
        /// <inheritdoc/>
        public override bool IsBridgeInterface => false;
        /// <inheritdoc/>
        public override bool IsBridgeStatic => false;
    
        // TODO: complete the class
        #region Builder declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/ranging/oob/OobInitiatorRangingConfig.Builder.html"/>
        /// </summary>
        public partial class Builder : MASES.JCOBridge.C2JBridge.JVMBridgeBase<Builder>
        {
            const string _bridgeClassName = "android.ranging.oob.OobInitiatorRangingConfig$Builder";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public Builder() { }
            /// <summary>
            /// Internal constructor: used internally from JCOBridge
            /// </summary>
            [global::System.Obsolete("This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public Builder(IJVMBridgeBaseInitializer initializer) : base(initializer) { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public Builder(params object[] args) : base(args) { }
        
            private static readonly global::System.Exception _LocalBridgeClazzException = null;
            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, out _LocalBridgeClazzException, false);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw _LocalBridgeClazzException ?? new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
        
            /// <inheritdoc/>
            public override string BridgeClassName => _bridgeClassName;
            /// <inheritdoc/>
            public override bool IsBridgeAbstract => false;
            /// <inheritdoc/>
            public override bool IsBridgeCloseable => false;
            /// <inheritdoc/>
            public override bool IsBridgeInterface => false;
            /// <inheritdoc/>
            public override bool IsBridgeStatic => true;
        
            // TODO: complete the class
        
        }
        #endregion

    
    }
    #endregion

    #region OobInitiatorRangingConfig implementation
    public partial class OobInitiatorRangingConfig
    {
        #region Constructors
    
        #endregion
    
        #region Class/Interface conversion operators
    
        #endregion
    
        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/ranging/oob/OobInitiatorRangingConfig.html#CREATOR"/>
        /// </summary>
        public static Android.Os.Parcelable.Creator CREATOR { get { if (!_CREATORReady) { _CREATORContent = SGetField<Android.Os.Parcelable.Creator>(LocalBridgeClazz, "CREATOR"); _CREATORReady = true; } return _CREATORContent; } }
        private static Android.Os.Parcelable.Creator _CREATORContent = default;
        private static bool _CREATORReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/ranging/oob/OobInitiatorRangingConfig.html#RANGING_MODE_AUTO"/>
        /// </summary>
        public static int RANGING_MODE_AUTO { get { if (!_RANGING_MODE_AUTOReady) { _RANGING_MODE_AUTOContent = SGetField<int>(LocalBridgeClazz, "RANGING_MODE_AUTO"); _RANGING_MODE_AUTOReady = true; } return _RANGING_MODE_AUTOContent; } }
        private static int _RANGING_MODE_AUTOContent = default;
        private static bool _RANGING_MODE_AUTOReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/ranging/oob/OobInitiatorRangingConfig.html#RANGING_MODE_FUSED"/>
        /// </summary>
        public static int RANGING_MODE_FUSED { get { if (!_RANGING_MODE_FUSEDReady) { _RANGING_MODE_FUSEDContent = SGetField<int>(LocalBridgeClazz, "RANGING_MODE_FUSED"); _RANGING_MODE_FUSEDReady = true; } return _RANGING_MODE_FUSEDContent; } }
        private static int _RANGING_MODE_FUSEDContent = default;
        private static bool _RANGING_MODE_FUSEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/ranging/oob/OobInitiatorRangingConfig.html#RANGING_MODE_HIGH_ACCURACY"/>
        /// </summary>
        public static int RANGING_MODE_HIGH_ACCURACY { get { if (!_RANGING_MODE_HIGH_ACCURACYReady) { _RANGING_MODE_HIGH_ACCURACYContent = SGetField<int>(LocalBridgeClazz, "RANGING_MODE_HIGH_ACCURACY"); _RANGING_MODE_HIGH_ACCURACYReady = true; } return _RANGING_MODE_HIGH_ACCURACYContent; } }
        private static int _RANGING_MODE_HIGH_ACCURACYContent = default;
        private static bool _RANGING_MODE_HIGH_ACCURACYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/ranging/oob/OobInitiatorRangingConfig.html#RANGING_MODE_HIGH_ACCURACY_PREFERRED"/>
        /// </summary>
        public static int RANGING_MODE_HIGH_ACCURACY_PREFERRED { get { if (!_RANGING_MODE_HIGH_ACCURACY_PREFERREDReady) { _RANGING_MODE_HIGH_ACCURACY_PREFERREDContent = SGetField<int>(LocalBridgeClazz, "RANGING_MODE_HIGH_ACCURACY_PREFERRED"); _RANGING_MODE_HIGH_ACCURACY_PREFERREDReady = true; } return _RANGING_MODE_HIGH_ACCURACY_PREFERREDContent; } }
        private static int _RANGING_MODE_HIGH_ACCURACY_PREFERREDContent = default;
        private static bool _RANGING_MODE_HIGH_ACCURACY_PREFERREDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/ranging/oob/OobInitiatorRangingConfig.html#SECURITY_LEVEL_BASIC"/>
        /// </summary>
        public static int SECURITY_LEVEL_BASIC { get { if (!_SECURITY_LEVEL_BASICReady) { _SECURITY_LEVEL_BASICContent = SGetField<int>(LocalBridgeClazz, "SECURITY_LEVEL_BASIC"); _SECURITY_LEVEL_BASICReady = true; } return _SECURITY_LEVEL_BASICContent; } }
        private static int _SECURITY_LEVEL_BASICContent = default;
        private static bool _SECURITY_LEVEL_BASICReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/ranging/oob/OobInitiatorRangingConfig.html#SECURITY_LEVEL_SECURE"/>
        /// </summary>
        public static int SECURITY_LEVEL_SECURE { get { if (!_SECURITY_LEVEL_SECUREReady) { _SECURITY_LEVEL_SECUREContent = SGetField<int>(LocalBridgeClazz, "SECURITY_LEVEL_SECURE"); _SECURITY_LEVEL_SECUREReady = true; } return _SECURITY_LEVEL_SECUREContent; } }
        private static int _SECURITY_LEVEL_SECUREContent = default;
        private static bool _SECURITY_LEVEL_SECUREReady = false; // this is used because in case of generics 
    
        #endregion
    
        #region Static methods
    
        #endregion
    
        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/ranging/oob/OobInitiatorRangingConfig.html#getRangingMode()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetRangingMode()
        {
            return IExecuteWithSignature<int>("getRangingMode", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/ranging/oob/OobInitiatorRangingConfig.html#getSecurityLevel()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetSecurityLevel()
        {
            return IExecuteWithSignature<int>("getSecurityLevel", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/ranging/oob/OobInitiatorRangingConfig.html#getFastestRangingInterval()"/>
        /// </summary>
        /// <returns><see cref="Java.Time.Duration"/></returns>
        public Java.Time.Duration GetFastestRangingInterval()
        {
            return IExecuteWithSignature<Java.Time.Duration>("getFastestRangingInterval", "()Ljava/time/Duration;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/ranging/oob/OobInitiatorRangingConfig.html#getSlowestRangingInterval()"/>
        /// </summary>
        /// <returns><see cref="Java.Time.Duration"/></returns>
        public Java.Time.Duration GetSlowestRangingInterval()
        {
            return IExecuteWithSignature<Java.Time.Duration>("getSlowestRangingInterval", "()Ljava/time/Duration;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/ranging/oob/OobInitiatorRangingConfig.html#getDeviceHandles()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.List"/></returns>
        public Java.Util.List<Android.Ranging.Oob.DeviceHandle> GetDeviceHandles()
        {
            return IExecuteWithSignature<Java.Util.List<Android.Ranging.Oob.DeviceHandle>>("getDeviceHandles", "()Ljava/util/List;");
        }
    
        #endregion
    
        #region Nested classes
        #region Builder implementation
        public partial class Builder
        {
            #region Constructors
        
            #endregion
        
            #region Class/Interface conversion operators
        
            #endregion
        
            #region Fields
        
            #endregion
        
            #region Static methods
        
            #endregion
        
            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/ranging/oob/OobInitiatorRangingConfig.Builder.html#build()"/>
            /// </summary>
            /// <returns><see cref="Android.Ranging.Oob.OobInitiatorRangingConfig"/></returns>
            public Android.Ranging.Oob.OobInitiatorRangingConfig Build()
            {
                return IExecuteWithSignature<Android.Ranging.Oob.OobInitiatorRangingConfig>("build", "()Landroid/ranging/oob/OobInitiatorRangingConfig;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/ranging/oob/OobInitiatorRangingConfig.Builder.html#addDeviceHandle(android.ranging.oob.DeviceHandle)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Ranging.Oob.DeviceHandle"/></param>
            /// <returns><see cref="Android.Ranging.Oob.OobInitiatorRangingConfig.Builder"/></returns>
            public Android.Ranging.Oob.OobInitiatorRangingConfig.Builder AddDeviceHandle(Android.Ranging.Oob.DeviceHandle arg0)
            {
                return IExecuteWithSignature<Android.Ranging.Oob.OobInitiatorRangingConfig.Builder>("addDeviceHandle", "(Landroid/ranging/oob/DeviceHandle;)Landroid/ranging/oob/OobInitiatorRangingConfig$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/ranging/oob/OobInitiatorRangingConfig.Builder.html#addDeviceHandles(java.util.List)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Util.List"/></param>
            /// <returns><see cref="Android.Ranging.Oob.OobInitiatorRangingConfig.Builder"/></returns>
            public Android.Ranging.Oob.OobInitiatorRangingConfig.Builder AddDeviceHandles(Java.Util.List<Android.Ranging.Oob.DeviceHandle> arg0)
            {
                return IExecuteWithSignature<Android.Ranging.Oob.OobInitiatorRangingConfig.Builder>("addDeviceHandles", "(Ljava/util/List;)Landroid/ranging/oob/OobInitiatorRangingConfig$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/ranging/oob/OobInitiatorRangingConfig.Builder.html#setFastestRangingInterval(java.time.Duration)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Time.Duration"/></param>
            /// <returns><see cref="Android.Ranging.Oob.OobInitiatorRangingConfig.Builder"/></returns>
            public Android.Ranging.Oob.OobInitiatorRangingConfig.Builder SetFastestRangingInterval(Java.Time.Duration arg0)
            {
                return IExecuteWithSignature<Android.Ranging.Oob.OobInitiatorRangingConfig.Builder>("setFastestRangingInterval", "(Ljava/time/Duration;)Landroid/ranging/oob/OobInitiatorRangingConfig$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/ranging/oob/OobInitiatorRangingConfig.Builder.html#setRangingMode(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <returns><see cref="Android.Ranging.Oob.OobInitiatorRangingConfig.Builder"/></returns>
            public Android.Ranging.Oob.OobInitiatorRangingConfig.Builder SetRangingMode(int arg0)
            {
                return IExecuteWithSignature<Android.Ranging.Oob.OobInitiatorRangingConfig.Builder>("setRangingMode", "(I)Landroid/ranging/oob/OobInitiatorRangingConfig$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/ranging/oob/OobInitiatorRangingConfig.Builder.html#setSecurityLevel(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <returns><see cref="Android.Ranging.Oob.OobInitiatorRangingConfig.Builder"/></returns>
            public Android.Ranging.Oob.OobInitiatorRangingConfig.Builder SetSecurityLevel(int arg0)
            {
                return IExecuteWithSignature<Android.Ranging.Oob.OobInitiatorRangingConfig.Builder>("setSecurityLevel", "(I)Landroid/ranging/oob/OobInitiatorRangingConfig$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/ranging/oob/OobInitiatorRangingConfig.Builder.html#setSlowestRangingInterval(java.time.Duration)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Time.Duration"/></param>
            /// <returns><see cref="Android.Ranging.Oob.OobInitiatorRangingConfig.Builder"/></returns>
            public Android.Ranging.Oob.OobInitiatorRangingConfig.Builder SetSlowestRangingInterval(Java.Time.Duration arg0)
            {
                return IExecuteWithSignature<Android.Ranging.Oob.OobInitiatorRangingConfig.Builder>("setSlowestRangingInterval", "(Ljava/time/Duration;)Landroid/ranging/oob/OobInitiatorRangingConfig$Builder;", arg0);
            }
        
            #endregion
        
            #region Nested classes
        
            #endregion
        
            // TODO: complete the class
        }
        #endregion

    
        #endregion
    
        // TODO: complete the class
    }
    #endregion
}