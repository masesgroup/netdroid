/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.2.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Animation
{
    #region BidirectionalTypeConverter
    public partial class BidirectionalTypeConverter
    {
        #region Constructors
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/animation/BidirectionalTypeConverter.html#%3Cinit%3E(java.lang.Class,java.lang.Class)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.Class"/></param>
        /// <param name="arg1"><see cref="Java.Lang.Class"/></param>
        public BidirectionalTypeConverter(Java.Lang.Class arg0, Java.Lang.Class arg1)
            : base(arg0, arg1)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/animation/BidirectionalTypeConverter.html#convertBack(java.lang.Object)"/>
        /// </summary>
        /// <param name="arg0"><see cref="object"/></param>
        /// <returns><see cref="object"/></returns>
        public object ConvertBack(object arg0)
        {
            return IExecuteWithSignature("convertBack", "(Ljava/lang/Object;)Ljava/lang/Object;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/animation/BidirectionalTypeConverter.html#invert()"/>
        /// </summary>
        /// <returns><see cref="Android.Animation.BidirectionalTypeConverter"/></returns>
        public Android.Animation.BidirectionalTypeConverter Invert()
        {
            return IExecuteWithSignature<Android.Animation.BidirectionalTypeConverter>("invert", "()Landroid/animation/BidirectionalTypeConverter;");
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion

    #region BidirectionalTypeConverter<T, V>
    public partial class BidirectionalTypeConverter<T, V>
    {
        #region Constructors
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/animation/BidirectionalTypeConverter.html#%3Cinit%3E(java.lang.Class,java.lang.Class)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.Class"/></param>
        /// <param name="arg1"><see cref="Java.Lang.Class"/></param>
        public BidirectionalTypeConverter(Java.Lang.Class arg0, Java.Lang.Class arg1)
            : base(arg0, arg1)
        {
        }

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Android.Animation.BidirectionalTypeConverter{T, V}"/> to <see cref="Android.Animation.BidirectionalTypeConverter"/>
        /// </summary>
        public static implicit operator Android.Animation.BidirectionalTypeConverter(Android.Animation.BidirectionalTypeConverter<T, V> t) => t.Cast<Android.Animation.BidirectionalTypeConverter>();

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/animation/BidirectionalTypeConverter.html#convertBack(java.lang.Object)"/>
        /// </summary>
        /// <param name="arg0"><typeparamref name="V"/></param>
        /// <returns><typeparamref name="T"/></returns>
        public T ConvertBack(V arg0)
        {
            return IExecuteWithSignature<T>("convertBack", "(Ljava/lang/Object;)Ljava/lang/Object;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/animation/BidirectionalTypeConverter.html#invert()"/>
        /// </summary>
        /// <returns><see cref="Android.Animation.BidirectionalTypeConverter"/></returns>
        public Android.Animation.BidirectionalTypeConverter<V, T> Invert()
        {
            return IExecuteWithSignature<Android.Animation.BidirectionalTypeConverter<V, T>>("invert", "()Landroid/animation/BidirectionalTypeConverter;");
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}