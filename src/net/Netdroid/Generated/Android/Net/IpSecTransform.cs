/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.6.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Net
{
    #region IpSecTransform
    public partial class IpSecTransform
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/net/IpSecTransform.html#close()"/>
        /// </summary>
        public void Close()
        {
            IExecuteWithSignature("close", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/net/IpSecTransform.html#requestIpSecTransformState(java.util.concurrent.Executor,android.os.OutcomeReceiver)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Concurrent.Executor"/></param>
        /// <param name="arg1"><see cref="Android.Os.OutcomeReceiver"/></param>
        public void RequestIpSecTransformState(Java.Util.Concurrent.Executor arg0, Android.Os.OutcomeReceiver<Android.Net.IpSecTransformState, Java.Lang.RuntimeException> arg1)
        {
            IExecute("requestIpSecTransformState", arg0, arg1);
        }

        #endregion

        #region Nested classes
        #region Builder
        public partial class Builder
        {
            #region Constructors
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/net/IpSecTransform.Builder.html#%3Cinit%3E(android.content.Context)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Content.Context"/></param>
            public Builder(Android.Content.Context arg0)
                : base(arg0)
            {
            }

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/net/IpSecTransform.Builder.html#buildTransportModeTransform(java.net.InetAddress,android.net.IpSecManager.SecurityParameterIndex)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Net.InetAddress"/></param>
            /// <param name="arg1"><see cref="Android.Net.IpSecManager.SecurityParameterIndex"/></param>
            /// <returns><see cref="Android.Net.IpSecTransform"/></returns>
            /// <exception cref="Java.Io.IOException"/>
            /// <exception cref="Android.Net.IpSecManager.ResourceUnavailableException"/>
            /// <exception cref="Android.Net.IpSecManager.SpiUnavailableException"/>
            public Android.Net.IpSecTransform BuildTransportModeTransform(Java.Net.InetAddress arg0, Android.Net.IpSecManager.SecurityParameterIndex arg1)
            {
                return IExecute<Android.Net.IpSecTransform>("buildTransportModeTransform", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/net/IpSecTransform.Builder.html#setAuthenticatedEncryption(android.net.IpSecAlgorithm)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Net.IpSecAlgorithm"/></param>
            /// <returns><see cref="Android.Net.IpSecTransform.Builder"/></returns>
            public Android.Net.IpSecTransform.Builder SetAuthenticatedEncryption(Android.Net.IpSecAlgorithm arg0)
            {
                return IExecuteWithSignature<Android.Net.IpSecTransform.Builder>("setAuthenticatedEncryption", "(Landroid/net/IpSecAlgorithm;)Landroid/net/IpSecTransform$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/net/IpSecTransform.Builder.html#setAuthentication(android.net.IpSecAlgorithm)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Net.IpSecAlgorithm"/></param>
            /// <returns><see cref="Android.Net.IpSecTransform.Builder"/></returns>
            public Android.Net.IpSecTransform.Builder SetAuthentication(Android.Net.IpSecAlgorithm arg0)
            {
                return IExecuteWithSignature<Android.Net.IpSecTransform.Builder>("setAuthentication", "(Landroid/net/IpSecAlgorithm;)Landroid/net/IpSecTransform$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/net/IpSecTransform.Builder.html#setEncryption(android.net.IpSecAlgorithm)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Net.IpSecAlgorithm"/></param>
            /// <returns><see cref="Android.Net.IpSecTransform.Builder"/></returns>
            public Android.Net.IpSecTransform.Builder SetEncryption(Android.Net.IpSecAlgorithm arg0)
            {
                return IExecuteWithSignature<Android.Net.IpSecTransform.Builder>("setEncryption", "(Landroid/net/IpSecAlgorithm;)Landroid/net/IpSecTransform$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/net/IpSecTransform.Builder.html#setIpv4Encapsulation(android.net.IpSecManager.UdpEncapsulationSocket,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Net.IpSecManager.UdpEncapsulationSocket"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            /// <returns><see cref="Android.Net.IpSecTransform.Builder"/></returns>
            public Android.Net.IpSecTransform.Builder SetIpv4Encapsulation(Android.Net.IpSecManager.UdpEncapsulationSocket arg0, int arg1)
            {
                return IExecute<Android.Net.IpSecTransform.Builder>("setIpv4Encapsulation", arg0, arg1);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}