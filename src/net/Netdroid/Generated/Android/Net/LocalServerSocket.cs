/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.6.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Net
{
    #region LocalServerSocket
    public partial class LocalServerSocket
    {
        #region Constructors
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/net/LocalServerSocket.html#%3Cinit%3E(java.io.FileDescriptor)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Io.FileDescriptor"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public LocalServerSocket(Java.Io.FileDescriptor arg0)
            : base(arg0)
        {
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/net/LocalServerSocket.html#%3Cinit%3E(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public LocalServerSocket(Java.Lang.String arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/net/LocalServerSocket.html#accept()"/>
        /// </summary>
        /// <returns><see cref="Android.Net.LocalSocket"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public Android.Net.LocalSocket Accept()
        {
            return IExecuteWithSignature<Android.Net.LocalSocket>("accept", "()Landroid/net/LocalSocket;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/net/LocalServerSocket.html#getLocalSocketAddress()"/>
        /// </summary>
        /// <returns><see cref="Android.Net.LocalSocketAddress"/></returns>
        public Android.Net.LocalSocketAddress GetLocalSocketAddress()
        {
            return IExecuteWithSignature<Android.Net.LocalSocketAddress>("getLocalSocketAddress", "()Landroid/net/LocalSocketAddress;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/net/LocalServerSocket.html#getFileDescriptor()"/>
        /// </summary>
        /// <returns><see cref="Java.Io.FileDescriptor"/></returns>
        public Java.Io.FileDescriptor GetFileDescriptor()
        {
            return IExecuteWithSignature<Java.Io.FileDescriptor>("getFileDescriptor", "()Ljava/io/FileDescriptor;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/net/LocalServerSocket.html#close()"/>
        /// </summary>
        /// <exception cref="Java.Io.IOException"/>
        public void Close()
        {
            IExecuteWithSignature("close", "()V");
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}