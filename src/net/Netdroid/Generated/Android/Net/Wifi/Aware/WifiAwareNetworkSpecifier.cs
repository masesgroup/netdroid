/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.8.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Net.Wifi.Aware
{
    #region WifiAwareNetworkSpecifier
    public partial class WifiAwareNetworkSpecifier
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Android.Net.Wifi.Aware.WifiAwareNetworkSpecifier"/> to <see cref="Android.Os.Parcelable"/>
        /// </summary>
        public static implicit operator Android.Os.Parcelable(Android.Net.Wifi.Aware.WifiAwareNetworkSpecifier t) => t.Cast<Android.Os.Parcelable>();

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/net/wifi/aware/WifiAwareNetworkSpecifier.html#CREATOR"/>
        /// </summary>
        public static Android.Os.Parcelable.Creator CREATOR { get { if (!_CREATORReady) { _CREATORContent = SGetField<Android.Os.Parcelable.Creator>(LocalBridgeClazz, "CREATOR"); _CREATORReady = true; } return _CREATORContent; } }
        private static Android.Os.Parcelable.Creator _CREATORContent = default;
        private static bool _CREATORReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/net/wifi/aware/WifiAwareNetworkSpecifier.html#getWifiAwareDataPathSecurityConfig()"/>
        /// </summary>
        /// <returns><see cref="Android.Net.Wifi.Aware.WifiAwareDataPathSecurityConfig"/></returns>
        public Android.Net.Wifi.Aware.WifiAwareDataPathSecurityConfig GetWifiAwareDataPathSecurityConfig()
        {
            return IExecuteWithSignature<Android.Net.Wifi.Aware.WifiAwareDataPathSecurityConfig>("getWifiAwareDataPathSecurityConfig", "()Landroid/net/wifi/aware/WifiAwareDataPathSecurityConfig;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/net/wifi/aware/WifiAwareNetworkSpecifier.html#canBeSatisfiedBy(android.net.NetworkSpecifier)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Net.NetworkSpecifier"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool CanBeSatisfiedBy(Android.Net.NetworkSpecifier arg0)
        {
            return IExecuteWithSignature<bool>("canBeSatisfiedBy", "(Landroid/net/NetworkSpecifier;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/net/wifi/aware/WifiAwareNetworkSpecifier.html#isChannelRequired()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsChannelRequired()
        {
            return IExecuteWithSignature<bool>("isChannelRequired", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/net/wifi/aware/WifiAwareNetworkSpecifier.html#describeContents()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int DescribeContents()
        {
            return IExecuteWithSignature<int>("describeContents", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/net/wifi/aware/WifiAwareNetworkSpecifier.html#getChannelFrequencyMhz()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetChannelFrequencyMhz()
        {
            return IExecuteWithSignature<int>("getChannelFrequencyMhz", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/net/wifi/aware/WifiAwareNetworkSpecifier.html#writeToParcel(android.os.Parcel,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.Parcel"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void WriteToParcel(Android.Os.Parcel arg0, int arg1)
        {
            IExecute("writeToParcel", arg0, arg1);
        }

        #endregion

        #region Nested classes
        #region Builder
        public partial class Builder
        {
            #region Constructors
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/net/wifi/aware/WifiAwareNetworkSpecifier.Builder.html#%3Cinit%3E(android.net.wifi.aware.DiscoverySession,android.net.wifi.aware.PeerHandle)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Net.Wifi.Aware.DiscoverySession"/></param>
            /// <param name="arg1"><see cref="Android.Net.Wifi.Aware.PeerHandle"/></param>
            public Builder(Android.Net.Wifi.Aware.DiscoverySession arg0, Android.Net.Wifi.Aware.PeerHandle arg1)
                : base(arg0, arg1)
            {
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/net/wifi/aware/WifiAwareNetworkSpecifier.Builder.html#%3Cinit%3E(android.net.wifi.aware.PublishDiscoverySession)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Net.Wifi.Aware.PublishDiscoverySession"/></param>
            public Builder(Android.Net.Wifi.Aware.PublishDiscoverySession arg0)
                : base(arg0)
            {
            }

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/net/wifi/aware/WifiAwareNetworkSpecifier.Builder.html#build()"/>
            /// </summary>
            /// <returns><see cref="Android.Net.Wifi.Aware.WifiAwareNetworkSpecifier"/></returns>
            public Android.Net.Wifi.Aware.WifiAwareNetworkSpecifier Build()
            {
                return IExecuteWithSignature<Android.Net.Wifi.Aware.WifiAwareNetworkSpecifier>("build", "()Landroid/net/wifi/aware/WifiAwareNetworkSpecifier;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/net/wifi/aware/WifiAwareNetworkSpecifier.Builder.html#setChannelFrequencyMhz(int,boolean)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <param name="arg1"><see cref="bool"/></param>
            /// <returns><see cref="Android.Net.Wifi.Aware.WifiAwareNetworkSpecifier.Builder"/></returns>
            public Android.Net.Wifi.Aware.WifiAwareNetworkSpecifier.Builder SetChannelFrequencyMhz(int arg0, bool arg1)
            {
                return IExecute<Android.Net.Wifi.Aware.WifiAwareNetworkSpecifier.Builder>("setChannelFrequencyMhz", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/net/wifi/aware/WifiAwareNetworkSpecifier.Builder.html#setDataPathSecurityConfig(android.net.wifi.aware.WifiAwareDataPathSecurityConfig)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Net.Wifi.Aware.WifiAwareDataPathSecurityConfig"/></param>
            /// <returns><see cref="Android.Net.Wifi.Aware.WifiAwareNetworkSpecifier.Builder"/></returns>
            public Android.Net.Wifi.Aware.WifiAwareNetworkSpecifier.Builder SetDataPathSecurityConfig(Android.Net.Wifi.Aware.WifiAwareDataPathSecurityConfig arg0)
            {
                return IExecuteWithSignature<Android.Net.Wifi.Aware.WifiAwareNetworkSpecifier.Builder>("setDataPathSecurityConfig", "(Landroid/net/wifi/aware/WifiAwareDataPathSecurityConfig;)Landroid/net/wifi/aware/WifiAwareNetworkSpecifier$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/net/wifi/aware/WifiAwareNetworkSpecifier.Builder.html#setPmk(byte[])"/>
            /// </summary>
            /// <param name="arg0"><see cref="byte"/></param>
            /// <returns><see cref="Android.Net.Wifi.Aware.WifiAwareNetworkSpecifier.Builder"/></returns>
            public Android.Net.Wifi.Aware.WifiAwareNetworkSpecifier.Builder SetPmk(byte[] arg0)
            {
                return IExecuteWithSignature<Android.Net.Wifi.Aware.WifiAwareNetworkSpecifier.Builder>("setPmk", "([B)Landroid/net/wifi/aware/WifiAwareNetworkSpecifier$Builder;", new object[] { arg0 });
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/net/wifi/aware/WifiAwareNetworkSpecifier.Builder.html#setPort(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <returns><see cref="Android.Net.Wifi.Aware.WifiAwareNetworkSpecifier.Builder"/></returns>
            public Android.Net.Wifi.Aware.WifiAwareNetworkSpecifier.Builder SetPort(int arg0)
            {
                return IExecuteWithSignature<Android.Net.Wifi.Aware.WifiAwareNetworkSpecifier.Builder>("setPort", "(I)Landroid/net/wifi/aware/WifiAwareNetworkSpecifier$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/net/wifi/aware/WifiAwareNetworkSpecifier.Builder.html#setPskPassphrase(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Android.Net.Wifi.Aware.WifiAwareNetworkSpecifier.Builder"/></returns>
            public Android.Net.Wifi.Aware.WifiAwareNetworkSpecifier.Builder SetPskPassphrase(Java.Lang.String arg0)
            {
                return IExecuteWithSignature<Android.Net.Wifi.Aware.WifiAwareNetworkSpecifier.Builder>("setPskPassphrase", "(Ljava/lang/String;)Landroid/net/wifi/aware/WifiAwareNetworkSpecifier$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/net/wifi/aware/WifiAwareNetworkSpecifier.Builder.html#setTransportProtocol(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <returns><see cref="Android.Net.Wifi.Aware.WifiAwareNetworkSpecifier.Builder"/></returns>
            public Android.Net.Wifi.Aware.WifiAwareNetworkSpecifier.Builder SetTransportProtocol(int arg0)
            {
                return IExecuteWithSignature<Android.Net.Wifi.Aware.WifiAwareNetworkSpecifier.Builder>("setTransportProtocol", "(I)Landroid/net/wifi/aware/WifiAwareNetworkSpecifier$Builder;", arg0);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}