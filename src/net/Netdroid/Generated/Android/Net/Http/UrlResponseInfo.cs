/*
*  Copyright (c) 2022-2025 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.6.4.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Net.Http
{
    #region UrlResponseInfo declaration
    /// <summary>
    /// <see href="https://developer.android.com/reference/android/net/http/UrlResponseInfo.html"/>
    /// </summary>
    public partial class UrlResponseInfo : MASES.JCOBridge.C2JBridge.JVMBridgeBase<UrlResponseInfo>
    {
        const string _bridgeClassName = "android.net.http.UrlResponseInfo";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        [global::System.Obsolete("UrlResponseInfo class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public UrlResponseInfo() { }
        /// <summary>
        /// Internal constructor: used internally from JCOBridge
        /// </summary>
        [global::System.Obsolete("This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public UrlResponseInfo(IJVMBridgeBaseInitializer initializer) : base(initializer) { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        [global::System.Obsolete("UrlResponseInfo class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public UrlResponseInfo(params object[] args) : base(args) { }
    
        private static readonly global::System.Exception _LocalBridgeClazzException = null;
        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, out _LocalBridgeClazzException, false);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw _LocalBridgeClazzException ?? new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
    
        /// <inheritdoc/>
        public override string BridgeClassName => _bridgeClassName;
        /// <inheritdoc/>
        public override bool IsBridgeAbstract => true;
        /// <inheritdoc/>
        public override bool IsBridgeCloseable => false;
        /// <inheritdoc/>
        public override bool IsBridgeInterface => false;
        /// <inheritdoc/>
        public override bool IsBridgeStatic => false;
    
        // TODO: complete the class
    
    }
    #endregion

    #region UrlResponseInfo implementation
    public partial class UrlResponseInfo
    {
        #region Constructors
    
        #endregion
    
        #region Class/Interface conversion operators
    
        #endregion
    
        #region Fields
    
        #endregion
    
        #region Static methods
    
        #endregion
    
        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/net/http/UrlResponseInfo.html#getHeaders()"/>
        /// </summary>
        /// <returns><see cref="Android.Net.Http.HeaderBlock"/></returns>
        public Android.Net.Http.HeaderBlock GetHeaders()
        {
            return IExecuteWithSignature<Android.Net.Http.HeaderBlock>("getHeaders", "()Landroid/net/http/HeaderBlock;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/net/http/UrlResponseInfo.html#wasCached()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool WasCached()
        {
            return IExecuteWithSignature<bool>("wasCached", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/net/http/UrlResponseInfo.html#getHttpStatusCode()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetHttpStatusCode()
        {
            return IExecuteWithSignature<int>("getHttpStatusCode", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/net/http/UrlResponseInfo.html#getHttpStatusText()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetHttpStatusText()
        {
            return IExecuteWithSignature<Java.Lang.String>("getHttpStatusText", "()Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/net/http/UrlResponseInfo.html#getNegotiatedProtocol()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetNegotiatedProtocol()
        {
            return IExecuteWithSignature<Java.Lang.String>("getNegotiatedProtocol", "()Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/net/http/UrlResponseInfo.html#getUrl()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetUrl()
        {
            return IExecuteWithSignature<Java.Lang.String>("getUrl", "()Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/net/http/UrlResponseInfo.html#getUrlChain()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.List"/></returns>
        public Java.Util.List<Java.Lang.String> GetUrlChain()
        {
            return IExecuteWithSignature<Java.Util.List<Java.Lang.String>>("getUrlChain", "()Ljava/util/List;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/net/http/UrlResponseInfo.html#getReceivedByteCount()"/>
        /// </summary>
        /// <returns><see cref="long"/></returns>
        public long GetReceivedByteCount()
        {
            return IExecuteWithSignature<long>("getReceivedByteCount", "()J");
        }
    
        #endregion
    
        #region Nested classes
    
        #endregion
    
        // TODO: complete the class
    }
    #endregion
}