/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.4.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Net.Ipsec.Ike
{
    #region IkeDerAsn1DnIdentification
    public partial class IkeDerAsn1DnIdentification
    {
        #region Constructors
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/net/ipsec/ike/IkeDerAsn1DnIdentification.html#%3Cinit%3E(javax.security.auth.x500.X500Principal)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Javax.Security.Auth.X500.X500Principal"/></param>
        public IkeDerAsn1DnIdentification(Javax.Security.Auth.X500.X500Principal arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/net/ipsec/ike/IkeDerAsn1DnIdentification.html#derAsn1Dn"/>
        /// </summary>
        public Javax.Security.Auth.X500.X500Principal derAsn1Dn { get { if (!_derAsn1DnReady) { _derAsn1DnContent = IGetField<Javax.Security.Auth.X500.X500Principal>("derAsn1Dn"); _derAsn1DnReady = true; } return _derAsn1DnContent; } }
        private Javax.Security.Auth.X500.X500Principal _derAsn1DnContent = default;
        private bool _derAsn1DnReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}