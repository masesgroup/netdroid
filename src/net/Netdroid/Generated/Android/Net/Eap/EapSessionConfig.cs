/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.1.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Net.Eap
{
    #region EapSessionConfig
    public partial class EapSessionConfig
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/net/eap/EapSessionConfig.html#getEapIdentity()"/> 
        /// </summary>
        public byte[] EapIdentity
        {
            get { return IExecuteWithSignatureArray<byte>("getEapIdentity", "()[B"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/net/eap/EapSessionConfig.html#getEapAkaConfig()"/> 
        /// </summary>
        public Android.Net.Eap.EapSessionConfig.EapAkaConfig GetEapAkaConfig
        {
            get { return IExecuteWithSignature<Android.Net.Eap.EapSessionConfig.EapAkaConfig>("getEapAkaConfig", "()Landroid/net/eap/EapSessionConfig$EapAkaConfig;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/net/eap/EapSessionConfig.html#getEapAkaPrimeConfig()"/> 
        /// </summary>
        public Android.Net.Eap.EapSessionConfig.EapAkaPrimeConfig GetEapAkaPrimeConfig
        {
            get { return IExecuteWithSignature<Android.Net.Eap.EapSessionConfig.EapAkaPrimeConfig>("getEapAkaPrimeConfig", "()Landroid/net/eap/EapSessionConfig$EapAkaPrimeConfig;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/net/eap/EapSessionConfig.html#getEapMsChapV2Config()"/> 
        /// </summary>
        public Android.Net.Eap.EapSessionConfig.EapMsChapV2Config GetEapMsChapV2Config
        {
            get { return IExecuteWithSignature<Android.Net.Eap.EapSessionConfig.EapMsChapV2Config>("getEapMsChapV2Config", "()Landroid/net/eap/EapSessionConfig$EapMsChapV2Config;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/net/eap/EapSessionConfig.html#getEapSimConfig()"/> 
        /// </summary>
        public Android.Net.Eap.EapSessionConfig.EapSimConfig GetEapSimConfig
        {
            get { return IExecuteWithSignature<Android.Net.Eap.EapSessionConfig.EapSimConfig>("getEapSimConfig", "()Landroid/net/eap/EapSessionConfig$EapSimConfig;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/net/eap/EapSessionConfig.html#getEapTtlsConfig()"/> 
        /// </summary>
        public Android.Net.Eap.EapSessionConfig.EapTtlsConfig GetEapTtlsConfig
        {
            get { return IExecuteWithSignature<Android.Net.Eap.EapSessionConfig.EapTtlsConfig>("getEapTtlsConfig", "()Landroid/net/eap/EapSessionConfig$EapTtlsConfig;"); }
        }

        #endregion

        #region Nested classes
        #region Builder
        public partial class Builder
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/net/eap/EapSessionConfig.Builder.html#build()"/>
            /// </summary>
            /// <returns><see cref="Android.Net.Eap.EapSessionConfig"/></returns>
            public Android.Net.Eap.EapSessionConfig Build()
            {
                return IExecuteWithSignature<Android.Net.Eap.EapSessionConfig>("build", "()Landroid/net/eap/EapSessionConfig;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/net/eap/EapSessionConfig.Builder.html#setEapAkaConfig(int,int,android.net.eap.EapSessionConfig.EapAkaOption)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            /// <param name="arg2"><see cref="Android.Net.Eap.EapSessionConfig.EapAkaOption"/></param>
            /// <returns><see cref="Android.Net.Eap.EapSessionConfig.Builder"/></returns>
            public Android.Net.Eap.EapSessionConfig.Builder SetEapAkaConfig(int arg0, int arg1, Android.Net.Eap.EapSessionConfig.EapAkaOption arg2)
            {
                return IExecute<Android.Net.Eap.EapSessionConfig.Builder>("setEapAkaConfig", arg0, arg1, arg2);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/net/eap/EapSessionConfig.Builder.html#setEapAkaConfig(int,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            /// <returns><see cref="Android.Net.Eap.EapSessionConfig.Builder"/></returns>
            public Android.Net.Eap.EapSessionConfig.Builder SetEapAkaConfig(int arg0, int arg1)
            {
                return IExecute<Android.Net.Eap.EapSessionConfig.Builder>("setEapAkaConfig", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/net/eap/EapSessionConfig.Builder.html#setEapAkaPrimeConfig(int,int,java.lang.String,boolean)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            /// <param name="arg2"><see cref="Java.Lang.String"/></param>
            /// <param name="arg3"><see cref="bool"/></param>
            /// <returns><see cref="Android.Net.Eap.EapSessionConfig.Builder"/></returns>
            public Android.Net.Eap.EapSessionConfig.Builder SetEapAkaPrimeConfig(int arg0, int arg1, Java.Lang.String arg2, bool arg3)
            {
                return IExecute<Android.Net.Eap.EapSessionConfig.Builder>("setEapAkaPrimeConfig", arg0, arg1, arg2, arg3);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/net/eap/EapSessionConfig.Builder.html#setEapIdentity(byte[])"/>
            /// </summary>
            /// <param name="arg0"><see cref="byte"/></param>
            /// <returns><see cref="Android.Net.Eap.EapSessionConfig.Builder"/></returns>
            public Android.Net.Eap.EapSessionConfig.Builder SetEapIdentity(byte[] arg0)
            {
                return IExecuteWithSignature<Android.Net.Eap.EapSessionConfig.Builder>("setEapIdentity", "([B)Landroid/net/eap/EapSessionConfig$Builder;", new object[] { arg0 });
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/net/eap/EapSessionConfig.Builder.html#setEapMsChapV2Config(java.lang.String,java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <param name="arg1"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Android.Net.Eap.EapSessionConfig.Builder"/></returns>
            public Android.Net.Eap.EapSessionConfig.Builder SetEapMsChapV2Config(Java.Lang.String arg0, Java.Lang.String arg1)
            {
                return IExecute<Android.Net.Eap.EapSessionConfig.Builder>("setEapMsChapV2Config", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/net/eap/EapSessionConfig.Builder.html#setEapSimConfig(int,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            /// <returns><see cref="Android.Net.Eap.EapSessionConfig.Builder"/></returns>
            public Android.Net.Eap.EapSessionConfig.Builder SetEapSimConfig(int arg0, int arg1)
            {
                return IExecute<Android.Net.Eap.EapSessionConfig.Builder>("setEapSimConfig", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/net/eap/EapSessionConfig.Builder.html#setEapTtlsConfig(java.security.cert.X509Certificate,android.net.eap.EapSessionConfig)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Security.Cert.X509Certificate"/></param>
            /// <param name="arg1"><see cref="Android.Net.Eap.EapSessionConfig"/></param>
            /// <returns><see cref="Android.Net.Eap.EapSessionConfig.Builder"/></returns>
            public Android.Net.Eap.EapSessionConfig.Builder SetEapTtlsConfig(Java.Security.Cert.X509Certificate arg0, Android.Net.Eap.EapSessionConfig arg1)
            {
                return IExecute<Android.Net.Eap.EapSessionConfig.Builder>("setEapTtlsConfig", arg0, arg1);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region EapAkaConfig
        public partial class EapAkaConfig
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/net/eap/EapSessionConfig.EapAkaConfig.html#getAppType()"/> 
            /// </summary>
            public int AppType
            {
                get { return IExecuteWithSignature<int>("getAppType", "()I"); }
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/net/eap/EapSessionConfig.EapAkaConfig.html#getEapAkaOption()"/> 
            /// </summary>
            public Android.Net.Eap.EapSessionConfig.EapAkaOption GetEapAkaOption
            {
                get { return IExecuteWithSignature<Android.Net.Eap.EapSessionConfig.EapAkaOption>("getEapAkaOption", "()Landroid/net/eap/EapSessionConfig$EapAkaOption;"); }
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/net/eap/EapSessionConfig.EapAkaConfig.html#getSubId()"/> 
            /// </summary>
            public int SubId
            {
                get { return IExecuteWithSignature<int>("getSubId", "()I"); }
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region EapAkaOption
        public partial class EapAkaOption
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/net/eap/EapSessionConfig.EapAkaOption.html#getReauthId()"/> 
            /// </summary>
            public byte[] ReauthId
            {
                get { return IExecuteWithSignatureArray<byte>("getReauthId", "()[B"); }
            }

            #endregion

            #region Nested classes
            #region Builder
            public partial class Builder
            {
                #region Constructors

                #endregion

                #region Class/Interface conversion operators

                #endregion

                #region Fields

                #endregion

                #region Static methods

                #endregion

                #region Instance methods
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/net/eap/EapSessionConfig.EapAkaOption.Builder.html#build()"/>
                /// </summary>
                /// <returns><see cref="Android.Net.Eap.EapSessionConfig.EapAkaOption"/></returns>
                public Android.Net.Eap.EapSessionConfig.EapAkaOption Build()
                {
                    return IExecuteWithSignature<Android.Net.Eap.EapSessionConfig.EapAkaOption>("build", "()Landroid/net/eap/EapSessionConfig$EapAkaOption;");
                }
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/net/eap/EapSessionConfig.EapAkaOption.Builder.html#setReauthId(byte[])"/>
                /// </summary>
                /// <param name="arg0"><see cref="byte"/></param>
                /// <returns><see cref="Android.Net.Eap.EapSessionConfig.EapAkaOption.Builder"/></returns>
                public Android.Net.Eap.EapSessionConfig.EapAkaOption.Builder SetReauthId(byte[] arg0)
                {
                    return IExecuteWithSignature<Android.Net.Eap.EapSessionConfig.EapAkaOption.Builder>("setReauthId", "([B)Landroid/net/eap/EapSessionConfig$EapAkaOption$Builder;", new object[] { arg0 });
                }

                #endregion

                #region Nested classes

                #endregion

                // TODO: complete the class
            }
            #endregion

        
            #endregion

            // TODO: complete the class
        }
        #endregion

        #region EapAkaPrimeConfig
        public partial class EapAkaPrimeConfig
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/net/eap/EapSessionConfig.EapAkaPrimeConfig.html#getNetworkName()"/> 
            /// </summary>
            public Java.Lang.String NetworkName
            {
                get { return IExecuteWithSignature<Java.Lang.String>("getNetworkName", "()Ljava/lang/String;"); }
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/net/eap/EapSessionConfig.EapAkaPrimeConfig.html#allowsMismatchedNetworkNames()"/>
            /// </summary>
            /// <returns><see cref="bool"/></returns>
            public bool AllowsMismatchedNetworkNames()
            {
                return IExecuteWithSignature<bool>("allowsMismatchedNetworkNames", "()Z");
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region EapMethodConfig
        public partial class EapMethodConfig
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/net/eap/EapSessionConfig.EapMethodConfig.html#EAP_TYPE_AKA"/>
            /// </summary>
            public static int EAP_TYPE_AKA { get { if (!_EAP_TYPE_AKAReady) { _EAP_TYPE_AKAContent = SGetField<int>(LocalBridgeClazz, "EAP_TYPE_AKA"); _EAP_TYPE_AKAReady = true; } return _EAP_TYPE_AKAContent; } }
            private static int _EAP_TYPE_AKAContent = default;
            private static bool _EAP_TYPE_AKAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/net/eap/EapSessionConfig.EapMethodConfig.html#EAP_TYPE_AKA_PRIME"/>
            /// </summary>
            public static int EAP_TYPE_AKA_PRIME { get { if (!_EAP_TYPE_AKA_PRIMEReady) { _EAP_TYPE_AKA_PRIMEContent = SGetField<int>(LocalBridgeClazz, "EAP_TYPE_AKA_PRIME"); _EAP_TYPE_AKA_PRIMEReady = true; } return _EAP_TYPE_AKA_PRIMEContent; } }
            private static int _EAP_TYPE_AKA_PRIMEContent = default;
            private static bool _EAP_TYPE_AKA_PRIMEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/net/eap/EapSessionConfig.EapMethodConfig.html#EAP_TYPE_MSCHAP_V2"/>
            /// </summary>
            public static int EAP_TYPE_MSCHAP_V2 { get { if (!_EAP_TYPE_MSCHAP_V2Ready) { _EAP_TYPE_MSCHAP_V2Content = SGetField<int>(LocalBridgeClazz, "EAP_TYPE_MSCHAP_V2"); _EAP_TYPE_MSCHAP_V2Ready = true; } return _EAP_TYPE_MSCHAP_V2Content; } }
            private static int _EAP_TYPE_MSCHAP_V2Content = default;
            private static bool _EAP_TYPE_MSCHAP_V2Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/net/eap/EapSessionConfig.EapMethodConfig.html#EAP_TYPE_SIM"/>
            /// </summary>
            public static int EAP_TYPE_SIM { get { if (!_EAP_TYPE_SIMReady) { _EAP_TYPE_SIMContent = SGetField<int>(LocalBridgeClazz, "EAP_TYPE_SIM"); _EAP_TYPE_SIMReady = true; } return _EAP_TYPE_SIMContent; } }
            private static int _EAP_TYPE_SIMContent = default;
            private static bool _EAP_TYPE_SIMReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/net/eap/EapSessionConfig.EapMethodConfig.html#EAP_TYPE_TTLS"/>
            /// </summary>
            public static int EAP_TYPE_TTLS { get { if (!_EAP_TYPE_TTLSReady) { _EAP_TYPE_TTLSContent = SGetField<int>(LocalBridgeClazz, "EAP_TYPE_TTLS"); _EAP_TYPE_TTLSReady = true; } return _EAP_TYPE_TTLSContent; } }
            private static int _EAP_TYPE_TTLSContent = default;
            private static bool _EAP_TYPE_TTLSReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/net/eap/EapSessionConfig.EapMethodConfig.html#getMethodType()"/> 
            /// </summary>
            public int MethodType
            {
                get { return IExecuteWithSignature<int>("getMethodType", "()I"); }
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region EapMsChapV2Config
        public partial class EapMsChapV2Config
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/net/eap/EapSessionConfig.EapMsChapV2Config.html#getPassword()"/> 
            /// </summary>
            public Java.Lang.String Password
            {
                get { return IExecuteWithSignature<Java.Lang.String>("getPassword", "()Ljava/lang/String;"); }
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/net/eap/EapSessionConfig.EapMsChapV2Config.html#getUsername()"/> 
            /// </summary>
            public Java.Lang.String Username
            {
                get { return IExecuteWithSignature<Java.Lang.String>("getUsername", "()Ljava/lang/String;"); }
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region EapSimConfig
        public partial class EapSimConfig
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/net/eap/EapSessionConfig.EapSimConfig.html#getAppType()"/> 
            /// </summary>
            public int AppType
            {
                get { return IExecuteWithSignature<int>("getAppType", "()I"); }
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/net/eap/EapSessionConfig.EapSimConfig.html#getSubId()"/> 
            /// </summary>
            public int SubId
            {
                get { return IExecuteWithSignature<int>("getSubId", "()I"); }
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region EapTtlsConfig
        public partial class EapTtlsConfig
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/net/eap/EapSessionConfig.EapTtlsConfig.html#getInnerEapSessionConfig()"/> 
            /// </summary>
            public Android.Net.Eap.EapSessionConfig InnerEapSessionConfig
            {
                get { return IExecuteWithSignature<Android.Net.Eap.EapSessionConfig>("getInnerEapSessionConfig", "()Landroid/net/eap/EapSessionConfig;"); }
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/net/eap/EapSessionConfig.EapTtlsConfig.html#getServerCaCert()"/> 
            /// </summary>
            public Java.Security.Cert.X509Certificate ServerCaCert
            {
                get { return IExecuteWithSignature<Java.Security.Cert.X509Certificate>("getServerCaCert", "()Ljava/security/cert/X509Certificate;"); }
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}