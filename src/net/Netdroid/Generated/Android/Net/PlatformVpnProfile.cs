/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.4.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Net
{
    #region PlatformVpnProfile
    public partial class PlatformVpnProfile
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/net/PlatformVpnProfile.html#TYPE_IKEV2_IPSEC_PSK"/>
        /// </summary>
        public static int TYPE_IKEV2_IPSEC_PSK { get { if (!_TYPE_IKEV2_IPSEC_PSKReady) { _TYPE_IKEV2_IPSEC_PSKContent = SGetField<int>(LocalBridgeClazz, "TYPE_IKEV2_IPSEC_PSK"); _TYPE_IKEV2_IPSEC_PSKReady = true; } return _TYPE_IKEV2_IPSEC_PSKContent; } }
        private static int _TYPE_IKEV2_IPSEC_PSKContent = default;
        private static bool _TYPE_IKEV2_IPSEC_PSKReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/net/PlatformVpnProfile.html#TYPE_IKEV2_IPSEC_RSA"/>
        /// </summary>
        public static int TYPE_IKEV2_IPSEC_RSA { get { if (!_TYPE_IKEV2_IPSEC_RSAReady) { _TYPE_IKEV2_IPSEC_RSAContent = SGetField<int>(LocalBridgeClazz, "TYPE_IKEV2_IPSEC_RSA"); _TYPE_IKEV2_IPSEC_RSAReady = true; } return _TYPE_IKEV2_IPSEC_RSAContent; } }
        private static int _TYPE_IKEV2_IPSEC_RSAContent = default;
        private static bool _TYPE_IKEV2_IPSEC_RSAReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/net/PlatformVpnProfile.html#TYPE_IKEV2_IPSEC_USER_PASS"/>
        /// </summary>
        public static int TYPE_IKEV2_IPSEC_USER_PASS { get { if (!_TYPE_IKEV2_IPSEC_USER_PASSReady) { _TYPE_IKEV2_IPSEC_USER_PASSContent = SGetField<int>(LocalBridgeClazz, "TYPE_IKEV2_IPSEC_USER_PASS"); _TYPE_IKEV2_IPSEC_USER_PASSReady = true; } return _TYPE_IKEV2_IPSEC_USER_PASSContent; } }
        private static int _TYPE_IKEV2_IPSEC_USER_PASSContent = default;
        private static bool _TYPE_IKEV2_IPSEC_USER_PASSReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/net/PlatformVpnProfile.html#areLocalRoutesExcluded()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool AreLocalRoutesExcluded()
        {
            return IExecuteWithSignature<bool>("areLocalRoutesExcluded", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/net/PlatformVpnProfile.html#isInternetValidationRequired()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsInternetValidationRequired()
        {
            return IExecuteWithSignature<bool>("isInternetValidationRequired", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/net/PlatformVpnProfile.html#getType()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetType()
        {
            return IExecuteWithSignature<int>("getType", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/net/PlatformVpnProfile.html#getTypeString()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetTypeString()
        {
            return IExecuteWithSignature<Java.Lang.String>("getTypeString", "()Ljava/lang/String;");
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}