/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.1.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Util
{
    #region Config
    public partial class Config
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/util/Config.html#DEBUG"/>
        /// </summary>
        [global::System.Obsolete()]
        public static bool DEBUG { get { if (!_DEBUGReady) { _DEBUGContent = SGetField<bool>(LocalBridgeClazz, "DEBUG"); _DEBUGReady = true; } return _DEBUGContent; } }
        private static bool _DEBUGContent = default;
        private static bool _DEBUGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/util/Config.html#LOGD"/>
        /// </summary>
        [global::System.Obsolete()]
        public static bool LOGD { get { if (!_LOGDReady) { _LOGDContent = SGetField<bool>(LocalBridgeClazz, "LOGD"); _LOGDReady = true; } return _LOGDContent; } }
        private static bool _LOGDContent = default;
        private static bool _LOGDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/util/Config.html#LOGV"/>
        /// </summary>
        [global::System.Obsolete()]
        public static bool LOGV { get { if (!_LOGVReady) { _LOGVContent = SGetField<bool>(LocalBridgeClazz, "LOGV"); _LOGVReady = true; } return _LOGVContent; } }
        private static bool _LOGVContent = default;
        private static bool _LOGVReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/util/Config.html#PROFILE"/>
        /// </summary>
        [global::System.Obsolete()]
        public static bool PROFILE { get { if (!_PROFILEReady) { _PROFILEContent = SGetField<bool>(LocalBridgeClazz, "PROFILE"); _PROFILEReady = true; } return _PROFILEContent; } }
        private static bool _PROFILEContent = default;
        private static bool _PROFILEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/util/Config.html#RELEASE"/>
        /// </summary>
        [global::System.Obsolete()]
        public static bool RELEASE { get { if (!_RELEASEReady) { _RELEASEContent = SGetField<bool>(LocalBridgeClazz, "RELEASE"); _RELEASEReady = true; } return _RELEASEContent; } }
        private static bool _RELEASEContent = default;
        private static bool _RELEASEReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}