/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.8.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Util
{
    #region EventLogTags
    public partial class EventLogTags
    {
        #region Constructors
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/util/EventLogTags.html#%3Cinit%3E(java.io.BufferedReader)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Io.BufferedReader"/></param>
        /// <exception cref="Java.Io.IOException"/>
        [global::System.Obsolete()]
        public EventLogTags(Java.Io.BufferedReader arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/util/EventLogTags.html#get(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Android.Util.EventLogTags.Description"/></returns>
        [global::System.Obsolete()]
        public Android.Util.EventLogTags.Description Get(int arg0)
        {
            return IExecuteWithSignature<Android.Util.EventLogTags.Description>("get", "(I)Landroid/util/EventLogTags$Description;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/util/EventLogTags.html#get(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Android.Util.EventLogTags.Description"/></returns>
        [global::System.Obsolete()]
        public Android.Util.EventLogTags.Description Get(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<Android.Util.EventLogTags.Description>("get", "(Ljava/lang/String;)Landroid/util/EventLogTags$Description;", arg0);
        }

        #endregion

        #region Nested classes
        #region Description
        public partial class Description
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/util/EventLogTags.Description.html#mTag"/>
            /// </summary>
            [global::System.Obsolete()]
            public int mTag { get { if (!_mTagReady) { _mTagContent = IGetField<int>("mTag"); _mTagReady = true; } return _mTagContent; } }
            private int _mTagContent = default;
            private bool _mTagReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/util/EventLogTags.Description.html#mName"/>
            /// </summary>
            [global::System.Obsolete()]
            public Java.Lang.String mName { get { if (!_mNameReady) { _mNameContent = IGetField<Java.Lang.String>("mName"); _mNameReady = true; } return _mNameContent; } }
            private Java.Lang.String _mNameContent = default;
            private bool _mNameReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}