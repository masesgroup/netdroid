/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.9.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Media
{
    #region Rating declaration
    /// <summary>
    /// <see href="https://developer.android.com/reference/android/media/Rating.html"/>
    /// </summary>
    public partial class Rating : Android.Os.Parcelable
    {
        const string _bridgeClassName = "android.media.Rating";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public Rating() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public Rating(params object[] args) : base(args) { }

        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region Rating implementation
    public partial class Rating
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/Rating.html#CREATOR"/>
        /// </summary>
        public static Android.Os.Parcelable.Creator CREATOR { get { if (!_CREATORReady) { _CREATORContent = SGetField<Android.Os.Parcelable.Creator>(LocalBridgeClazz, "CREATOR"); _CREATORReady = true; } return _CREATORContent; } }
        private static Android.Os.Parcelable.Creator _CREATORContent = default;
        private static bool _CREATORReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/Rating.html#RATING_3_STARS"/>
        /// </summary>
        public static int RATING_3_STARS { get { if (!_RATING_3_STARSReady) { _RATING_3_STARSContent = SGetField<int>(LocalBridgeClazz, "RATING_3_STARS"); _RATING_3_STARSReady = true; } return _RATING_3_STARSContent; } }
        private static int _RATING_3_STARSContent = default;
        private static bool _RATING_3_STARSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/Rating.html#RATING_4_STARS"/>
        /// </summary>
        public static int RATING_4_STARS { get { if (!_RATING_4_STARSReady) { _RATING_4_STARSContent = SGetField<int>(LocalBridgeClazz, "RATING_4_STARS"); _RATING_4_STARSReady = true; } return _RATING_4_STARSContent; } }
        private static int _RATING_4_STARSContent = default;
        private static bool _RATING_4_STARSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/Rating.html#RATING_5_STARS"/>
        /// </summary>
        public static int RATING_5_STARS { get { if (!_RATING_5_STARSReady) { _RATING_5_STARSContent = SGetField<int>(LocalBridgeClazz, "RATING_5_STARS"); _RATING_5_STARSReady = true; } return _RATING_5_STARSContent; } }
        private static int _RATING_5_STARSContent = default;
        private static bool _RATING_5_STARSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/Rating.html#RATING_HEART"/>
        /// </summary>
        public static int RATING_HEART { get { if (!_RATING_HEARTReady) { _RATING_HEARTContent = SGetField<int>(LocalBridgeClazz, "RATING_HEART"); _RATING_HEARTReady = true; } return _RATING_HEARTContent; } }
        private static int _RATING_HEARTContent = default;
        private static bool _RATING_HEARTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/Rating.html#RATING_NONE"/>
        /// </summary>
        public static int RATING_NONE { get { if (!_RATING_NONEReady) { _RATING_NONEContent = SGetField<int>(LocalBridgeClazz, "RATING_NONE"); _RATING_NONEReady = true; } return _RATING_NONEContent; } }
        private static int _RATING_NONEContent = default;
        private static bool _RATING_NONEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/Rating.html#RATING_PERCENTAGE"/>
        /// </summary>
        public static int RATING_PERCENTAGE { get { if (!_RATING_PERCENTAGEReady) { _RATING_PERCENTAGEContent = SGetField<int>(LocalBridgeClazz, "RATING_PERCENTAGE"); _RATING_PERCENTAGEReady = true; } return _RATING_PERCENTAGEContent; } }
        private static int _RATING_PERCENTAGEContent = default;
        private static bool _RATING_PERCENTAGEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/Rating.html#RATING_THUMB_UP_DOWN"/>
        /// </summary>
        public static int RATING_THUMB_UP_DOWN { get { if (!_RATING_THUMB_UP_DOWNReady) { _RATING_THUMB_UP_DOWNContent = SGetField<int>(LocalBridgeClazz, "RATING_THUMB_UP_DOWN"); _RATING_THUMB_UP_DOWNReady = true; } return _RATING_THUMB_UP_DOWNContent; } }
        private static int _RATING_THUMB_UP_DOWNContent = default;
        private static bool _RATING_THUMB_UP_DOWNReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/Rating.html#newHeartRating(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        /// <returns><see cref="Android.Media.Rating"/></returns>
        public static Android.Media.Rating NewHeartRating(bool arg0)
        {
            return SExecuteWithSignature<Android.Media.Rating>(LocalBridgeClazz, "newHeartRating", "(Z)Landroid/media/Rating;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/Rating.html#newPercentageRating(float)"/>
        /// </summary>
        /// <param name="arg0"><see cref="float"/></param>
        /// <returns><see cref="Android.Media.Rating"/></returns>
        public static Android.Media.Rating NewPercentageRating(float arg0)
        {
            return SExecuteWithSignature<Android.Media.Rating>(LocalBridgeClazz, "newPercentageRating", "(F)Landroid/media/Rating;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/Rating.html#newStarRating(int,float)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="float"/></param>
        /// <returns><see cref="Android.Media.Rating"/></returns>
        public static Android.Media.Rating NewStarRating(int arg0, float arg1)
        {
            return SExecute<Android.Media.Rating>(LocalBridgeClazz, "newStarRating", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/Rating.html#newThumbRating(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        /// <returns><see cref="Android.Media.Rating"/></returns>
        public static Android.Media.Rating NewThumbRating(bool arg0)
        {
            return SExecuteWithSignature<Android.Media.Rating>(LocalBridgeClazz, "newThumbRating", "(Z)Landroid/media/Rating;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/Rating.html#newUnratedRating(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Android.Media.Rating"/></returns>
        public static Android.Media.Rating NewUnratedRating(int arg0)
        {
            return SExecuteWithSignature<Android.Media.Rating>(LocalBridgeClazz, "newUnratedRating", "(I)Landroid/media/Rating;", arg0);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/Rating.html#hasHeart()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool HasHeart()
        {
            return IExecuteWithSignature<bool>("hasHeart", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/Rating.html#isRated()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsRated()
        {
            return IExecuteWithSignature<bool>("isRated", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/Rating.html#isThumbUp()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsThumbUp()
        {
            return IExecuteWithSignature<bool>("isThumbUp", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/Rating.html#getPercentRating()"/>
        /// </summary>
        /// <returns><see cref="float"/></returns>
        public float GetPercentRating()
        {
            return IExecuteWithSignature<float>("getPercentRating", "()F");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/Rating.html#getStarRating()"/>
        /// </summary>
        /// <returns><see cref="float"/></returns>
        public float GetStarRating()
        {
            return IExecuteWithSignature<float>("getStarRating", "()F");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/Rating.html#describeContents()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int DescribeContents()
        {
            return IExecuteWithSignature<int>("describeContents", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/Rating.html#getRatingStyle()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetRatingStyle()
        {
            return IExecuteWithSignature<int>("getRatingStyle", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/Rating.html#writeToParcel(android.os.Parcel,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.Parcel"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void WriteToParcel(Android.Os.Parcel arg0, int arg1)
        {
            IExecute("writeToParcel", arg0, arg1);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}