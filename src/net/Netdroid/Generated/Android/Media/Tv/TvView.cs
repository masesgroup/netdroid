/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.9.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Media.Tv
{
    #region TvView declaration
    /// <summary>
    /// <see href="https://developer.android.com/reference/android/media/tv/TvView.html"/>
    /// </summary>
    public partial class TvView : Android.View.ViewGroup
    {
        const string _bridgeClassName = "android.media.tv.TvView";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public TvView() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public TvView(params object[] args) : base(args) { }
    
        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
    
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;
    
        // TODO: complete the class
        #region OnUnhandledInputEventListener declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/TvView.OnUnhandledInputEventListener.html"/>
        /// </summary>
        public partial class OnUnhandledInputEventListener : MASES.JCOBridge.C2JBridge.JVMBridgeListener
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public OnUnhandledInputEventListener() { InitializeHandlers(); }
        
            const string _bridgeClassName = "org.mases.netdroid.generated.android.media.tv.TvView_OnUnhandledInputEventListener";
            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
            
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeListener_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
        
        
            // TODO: complete the class
        
        }
        #endregion
        
        #region OnUnhandledInputEventListenerDirect declaration
        /// <summary>
        /// Direct override of <see cref="OnUnhandledInputEventListener"/> or its generic type if there is one
        /// </summary>
        public partial class OnUnhandledInputEventListenerDirect : OnUnhandledInputEventListener
        {
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeListener_AutoInit.htm"/>
            /// </summary>
            public override bool AutoInit => false;
        
            /// <inheritdoc />
            protected override void InitializeHandlers() { }
        
            const string _bridgeClassName = "android.media.tv.TvView$OnUnhandledInputEventListener";
            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
        
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeListener_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => true;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => true;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;
        }
        #endregion

        #region TimeShiftPositionCallback declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/TvView.TimeShiftPositionCallback.html"/>
        /// </summary>
        public partial class TimeShiftPositionCallback : MASES.JCOBridge.C2JBridge.JVMBridgeBase<TimeShiftPositionCallback>
        {
            const string _bridgeClassName = "android.media.tv.TvView$TimeShiftPositionCallback";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            [global::System.Obsolete("TimeShiftPositionCallback class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public TimeShiftPositionCallback() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            [global::System.Obsolete("TimeShiftPositionCallback class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public TimeShiftPositionCallback(params object[] args) : base(args) { }
        
            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
        
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => true;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;
        
            // TODO: complete the class
        
        }
        #endregion

        #region TvInputCallback declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/TvView.TvInputCallback.html"/>
        /// </summary>
        public partial class TvInputCallback : MASES.JCOBridge.C2JBridge.JVMBridgeBase<TvInputCallback>
        {
            const string _bridgeClassName = "android.media.tv.TvView$TvInputCallback";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            [global::System.Obsolete("TvInputCallback class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public TvInputCallback() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            [global::System.Obsolete("TvInputCallback class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public TvInputCallback(params object[] args) : base(args) { }
        
            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
        
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => true;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;
        
            // TODO: complete the class
        
        }
        #endregion

    
    }
    #endregion

    #region TvView implementation
    public partial class TvView
    {
        #region Constructors
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/TvView.html#%3Cinit%3E(android.content.Context,android.util.AttributeSet,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        /// <param name="arg1"><see cref="Android.Util.AttributeSet"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        public TvView(Android.Content.Context arg0, Android.Util.AttributeSet arg1, int arg2)
            : base(arg0, arg1, arg2)
        {
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/TvView.html#%3Cinit%3E(android.content.Context,android.util.AttributeSet)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        /// <param name="arg1"><see cref="Android.Util.AttributeSet"/></param>
        public TvView(Android.Content.Context arg0, Android.Util.AttributeSet arg1)
            : base(arg0, arg1)
        {
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/TvView.html#%3Cinit%3E(android.content.Context)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        public TvView(Android.Content.Context arg0)
            : base(arg0)
        {
        }
    
        #endregion
    
        #region Class/Interface conversion operators
    
        #endregion
    
        #region Fields
    
        #endregion
    
        #region Static methods
    
        #endregion
    
        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/TvView.html#dispatchUnhandledInputEvent(android.view.InputEvent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.InputEvent"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool DispatchUnhandledInputEvent(Android.View.InputEvent arg0)
        {
            return IExecuteWithSignature<bool>("dispatchUnhandledInputEvent", "(Landroid/view/InputEvent;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/TvView.html#onUnhandledInputEvent(android.view.InputEvent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.InputEvent"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool OnUnhandledInputEvent(Android.View.InputEvent arg0)
        {
            return IExecuteWithSignature<bool>("onUnhandledInputEvent", "(Landroid/view/InputEvent;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/TvView.html#getSelectedTrack(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetSelectedTrack(int arg0)
        {
            return IExecuteWithSignature<Java.Lang.String>("getSelectedTrack", "(I)Ljava/lang/String;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/TvView.html#getAudioPresentations()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.List"/></returns>
        public Java.Util.List<Android.Media.AudioPresentation> GetAudioPresentations()
        {
            return IExecuteWithSignature<Java.Util.List<Android.Media.AudioPresentation>>("getAudioPresentations", "()Ljava/util/List;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/TvView.html#getTracks(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Java.Util.List"/></returns>
        public Java.Util.List<Android.Media.Tv.TvTrackInfo> GetTracks(int arg0)
        {
            return IExecuteWithSignature<Java.Util.List<Android.Media.Tv.TvTrackInfo>>("getTracks", "(I)Ljava/util/List;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/TvView.html#overrideTvAppAttributionSource(android.content.AttributionSource)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.AttributionSource"/></param>
        public void OverrideTvAppAttributionSource(Android.Content.AttributionSource arg0)
        {
            IExecuteWithSignature("overrideTvAppAttributionSource", "(Landroid/content/AttributionSource;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/TvView.html#reset()"/>
        /// </summary>
        public void Reset()
        {
            IExecuteWithSignature("reset", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/TvView.html#selectAudioPresentation(int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void SelectAudioPresentation(int arg0, int arg1)
        {
            IExecute("selectAudioPresentation", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/TvView.html#selectTrack(int,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        public void SelectTrack(int arg0, Java.Lang.String arg1)
        {
            IExecute("selectTrack", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/TvView.html#sendAppPrivateCommand(java.lang.String,android.os.Bundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Android.Os.Bundle"/></param>
        public void SendAppPrivateCommand(Java.Lang.String arg0, Android.Os.Bundle arg1)
        {
            IExecute("sendAppPrivateCommand", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/TvView.html#setCallback(android.media.tv.TvView.TvInputCallback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Media.Tv.TvView.TvInputCallback"/></param>
        public void SetCallback(Android.Media.Tv.TvView.TvInputCallback arg0)
        {
            IExecuteWithSignature("setCallback", "(Landroid/media/tv/TvView$TvInputCallback;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/TvView.html#setCaptionEnabled(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetCaptionEnabled(bool arg0)
        {
            IExecuteWithSignature("setCaptionEnabled", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/TvView.html#setInteractiveAppNotificationEnabled(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetInteractiveAppNotificationEnabled(bool arg0)
        {
            IExecuteWithSignature("setInteractiveAppNotificationEnabled", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/TvView.html#setOnUnhandledInputEventListener(android.media.tv.TvView.OnUnhandledInputEventListener)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Media.Tv.TvView.OnUnhandledInputEventListener"/></param>
        public void SetOnUnhandledInputEventListener(Android.Media.Tv.TvView.OnUnhandledInputEventListener arg0)
        {
            IExecuteWithSignature("setOnUnhandledInputEventListener", "(Landroid/media/tv/TvView$OnUnhandledInputEventListener;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/TvView.html#setStreamVolume(float)"/>
        /// </summary>
        /// <param name="arg0"><see cref="float"/></param>
        public void SetStreamVolume(float arg0)
        {
            IExecuteWithSignature("setStreamVolume", "(F)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/TvView.html#setTimeShiftPositionCallback(android.media.tv.TvView.TimeShiftPositionCallback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Media.Tv.TvView.TimeShiftPositionCallback"/></param>
        public void SetTimeShiftPositionCallback(Android.Media.Tv.TvView.TimeShiftPositionCallback arg0)
        {
            IExecuteWithSignature("setTimeShiftPositionCallback", "(Landroid/media/tv/TvView$TimeShiftPositionCallback;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/TvView.html#setTvMessageEnabled(int,boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="bool"/></param>
        public void SetTvMessageEnabled(int arg0, bool arg1)
        {
            IExecute("setTvMessageEnabled", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/TvView.html#setZOrderMediaOverlay(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetZOrderMediaOverlay(bool arg0)
        {
            IExecuteWithSignature("setZOrderMediaOverlay", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/TvView.html#setZOrderOnTop(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetZOrderOnTop(bool arg0)
        {
            IExecuteWithSignature("setZOrderOnTop", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/TvView.html#timeShiftPause()"/>
        /// </summary>
        public void TimeShiftPause()
        {
            IExecuteWithSignature("timeShiftPause", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/TvView.html#timeShiftPlay(java.lang.String,android.net.Uri)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Android.Net.Uri"/></param>
        public void TimeShiftPlay(Java.Lang.String arg0, Android.Net.Uri arg1)
        {
            IExecute("timeShiftPlay", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/TvView.html#timeShiftResume()"/>
        /// </summary>
        public void TimeShiftResume()
        {
            IExecuteWithSignature("timeShiftResume", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/TvView.html#timeShiftSeekTo(long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        public void TimeShiftSeekTo(long arg0)
        {
            IExecuteWithSignature("timeShiftSeekTo", "(J)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/TvView.html#timeShiftSetMode(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void TimeShiftSetMode(int arg0)
        {
            IExecuteWithSignature("timeShiftSetMode", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/TvView.html#timeShiftSetPlaybackParams(android.media.PlaybackParams)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Media.PlaybackParams"/></param>
        public void TimeShiftSetPlaybackParams(Android.Media.PlaybackParams arg0)
        {
            IExecuteWithSignature("timeShiftSetPlaybackParams", "(Landroid/media/PlaybackParams;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/TvView.html#tune(java.lang.String,android.net.Uri,android.os.Bundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Android.Net.Uri"/></param>
        /// <param name="arg2"><see cref="Android.Os.Bundle"/></param>
        public void Tune(Java.Lang.String arg0, Android.Net.Uri arg1, Android.Os.Bundle arg2)
        {
            IExecute("tune", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/TvView.html#tune(java.lang.String,android.net.Uri)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Android.Net.Uri"/></param>
        public void Tune(Java.Lang.String arg0, Android.Net.Uri arg1)
        {
            IExecute("tune", arg0, arg1);
        }
    
        #endregion
    
        #region Nested classes
        #region OnUnhandledInputEventListener implementation
        public partial class OnUnhandledInputEventListener
        {
            #region Constructors
        
            #endregion
        
            #region Class/Interface conversion operators
        
            #endregion
        
            #region Fields
        
            #endregion
        
            #region Static methods
        
            #endregion
        
            #region Instance methods
            /// <summary>
            /// Handlers initializer for <see cref="OnUnhandledInputEventListener"/>
            /// </summary>
            protected virtual void InitializeHandlers()
            {
                AddEventHandler("onUnhandledInputEvent", new global::System.EventHandler<CLRListenerEventArgs<CLREventData<MASES.JNet.Specific.JNetEventResult>>>(OnUnhandledInputEventEventHandler));

            }
            
            /// <summary>
            /// Handler for <see href="https://developer.android.com/reference/android/media/tv/TvView.OnUnhandledInputEventListener.html#onUnhandledInputEvent(android.view.InputEvent)"/>
            /// </summary>
            /// <remarks>If <see cref="OnOnUnhandledInputEvent"/> has a value it takes precedence over corresponding class method</remarks>
            public global::System.Func<Android.View.InputEvent, bool> OnOnUnhandledInputEvent { get; set; } = null;
            
            bool hasOverrideOnUnhandledInputEvent = true;
            void OnUnhandledInputEventEventHandler(object sender, CLRListenerEventArgs<CLREventData<MASES.JNet.Specific.JNetEventResult>> data)
            {
                hasOverrideOnUnhandledInputEvent = true;
                var methodToExecute = (OnOnUnhandledInputEvent != null) ? OnOnUnhandledInputEvent : OnUnhandledInputEvent;
                var executionResult = methodToExecute.Invoke(data.EventData.GetAt<Android.View.InputEvent>(0));
                data.EventData.TypedEventData.SetReturnData(hasOverrideOnUnhandledInputEvent, executionResult);
            }
            
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/TvView.OnUnhandledInputEventListener.html#onUnhandledInputEvent(android.view.InputEvent)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.View.InputEvent"/></param>
            /// <returns><see cref="bool"/></returns>
            public virtual bool OnUnhandledInputEvent(Android.View.InputEvent arg0)
            {
                hasOverrideOnUnhandledInputEvent = false; return default;
            }
        
            #endregion
        
            #region Nested classes
        
            #endregion
        
            // TODO: complete the class
        }
        #endregion

        #region OnUnhandledInputEventListenerDirect implementation
        public partial class OnUnhandledInputEventListenerDirect
        {
            #region Constructors
        
            #endregion
        
            #region Class/Interface conversion operators
        
            #endregion
        
            #region Fields
        
            #endregion
        
            #region Static methods
        
            #endregion
        
            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/TvView.OnUnhandledInputEventListener.html#onUnhandledInputEvent(android.view.InputEvent)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.View.InputEvent"/></param>
            /// <returns><see cref="bool"/></returns>
            public override bool OnUnhandledInputEvent(Android.View.InputEvent arg0)
            {
                return IExecuteWithSignature<bool>("onUnhandledInputEvent", "(Landroid/view/InputEvent;)Z", arg0);
            }
        
            #endregion
        
            #region Nested classes
        
            #endregion
        
            // TODO: complete the class
        }
        #endregion

        #region TimeShiftPositionCallback implementation
        public partial class TimeShiftPositionCallback
        {
            #region Constructors
        
            #endregion
        
            #region Class/Interface conversion operators
        
            #endregion
        
            #region Fields
        
            #endregion
        
            #region Static methods
        
            #endregion
        
            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/TvView.TimeShiftPositionCallback.html#onTimeShiftCurrentPositionChanged(java.lang.String,long)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <param name="arg1"><see cref="long"/></param>
            public void OnTimeShiftCurrentPositionChanged(Java.Lang.String arg0, long arg1)
            {
                IExecute("onTimeShiftCurrentPositionChanged", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/TvView.TimeShiftPositionCallback.html#onTimeShiftStartPositionChanged(java.lang.String,long)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <param name="arg1"><see cref="long"/></param>
            public void OnTimeShiftStartPositionChanged(Java.Lang.String arg0, long arg1)
            {
                IExecute("onTimeShiftStartPositionChanged", arg0, arg1);
            }
        
            #endregion
        
            #region Nested classes
        
            #endregion
        
            // TODO: complete the class
        }
        #endregion

        #region TvInputCallback implementation
        public partial class TvInputCallback
        {
            #region Constructors
        
            #endregion
        
            #region Class/Interface conversion operators
        
            #endregion
        
            #region Fields
        
            #endregion
        
            #region Static methods
        
            #endregion
        
            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/TvView.TvInputCallback.html#onAitInfoUpdated(java.lang.String,android.media.tv.AitInfo)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <param name="arg1"><see cref="Android.Media.Tv.AitInfo"/></param>
            public void OnAitInfoUpdated(Java.Lang.String arg0, Android.Media.Tv.AitInfo arg1)
            {
                IExecute("onAitInfoUpdated", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/TvView.TvInputCallback.html#onAudioPresentationsChanged(java.lang.String,java.util.List)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <param name="arg1"><see cref="Java.Util.List"/></param>
            public void OnAudioPresentationsChanged(Java.Lang.String arg0, Java.Util.List<Android.Media.AudioPresentation> arg1)
            {
                IExecute("onAudioPresentationsChanged", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/TvView.TvInputCallback.html#onAudioPresentationSelected(java.lang.String,int,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            /// <param name="arg2"><see cref="int"/></param>
            public void OnAudioPresentationSelected(Java.Lang.String arg0, int arg1, int arg2)
            {
                IExecute("onAudioPresentationSelected", arg0, arg1, arg2);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/TvView.TvInputCallback.html#onAvailableSpeeds(java.lang.String,float[])"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <param name="arg1"><see cref="float"/></param>
            public void OnAvailableSpeeds(Java.Lang.String arg0, float[] arg1)
            {
                IExecute("onAvailableSpeeds", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/TvView.TvInputCallback.html#onChannelRetuned(java.lang.String,android.net.Uri)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <param name="arg1"><see cref="Android.Net.Uri"/></param>
            public void OnChannelRetuned(Java.Lang.String arg0, Android.Net.Uri arg1)
            {
                IExecute("onChannelRetuned", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/TvView.TvInputCallback.html#onConnectionFailed(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            public void OnConnectionFailed(Java.Lang.String arg0)
            {
                IExecuteWithSignature("onConnectionFailed", "(Ljava/lang/String;)V", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/TvView.TvInputCallback.html#onContentAllowed(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            public void OnContentAllowed(Java.Lang.String arg0)
            {
                IExecuteWithSignature("onContentAllowed", "(Ljava/lang/String;)V", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/TvView.TvInputCallback.html#onContentBlocked(java.lang.String,android.media.tv.TvContentRating)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <param name="arg1"><see cref="Android.Media.Tv.TvContentRating"/></param>
            public void OnContentBlocked(Java.Lang.String arg0, Android.Media.Tv.TvContentRating arg1)
            {
                IExecute("onContentBlocked", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/TvView.TvInputCallback.html#onCueingMessageAvailability(java.lang.String,boolean)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <param name="arg1"><see cref="bool"/></param>
            public void OnCueingMessageAvailability(Java.Lang.String arg0, bool arg1)
            {
                IExecute("onCueingMessageAvailability", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/TvView.TvInputCallback.html#onDisconnected(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            public void OnDisconnected(Java.Lang.String arg0)
            {
                IExecuteWithSignature("onDisconnected", "(Ljava/lang/String;)V", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/TvView.TvInputCallback.html#onSignalStrengthUpdated(java.lang.String,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            public void OnSignalStrengthUpdated(Java.Lang.String arg0, int arg1)
            {
                IExecute("onSignalStrengthUpdated", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/TvView.TvInputCallback.html#onTimeShiftMode(java.lang.String,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            public void OnTimeShiftMode(Java.Lang.String arg0, int arg1)
            {
                IExecute("onTimeShiftMode", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/TvView.TvInputCallback.html#onTimeShiftStatusChanged(java.lang.String,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            public void OnTimeShiftStatusChanged(Java.Lang.String arg0, int arg1)
            {
                IExecute("onTimeShiftStatusChanged", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/TvView.TvInputCallback.html#onTracksChanged(java.lang.String,java.util.List)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <param name="arg1"><see cref="Java.Util.List"/></param>
            public void OnTracksChanged(Java.Lang.String arg0, Java.Util.List<Android.Media.Tv.TvTrackInfo> arg1)
            {
                IExecute("onTracksChanged", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/TvView.TvInputCallback.html#onTrackSelected(java.lang.String,int,java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            /// <param name="arg2"><see cref="Java.Lang.String"/></param>
            public void OnTrackSelected(Java.Lang.String arg0, int arg1, Java.Lang.String arg2)
            {
                IExecute("onTrackSelected", arg0, arg1, arg2);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/TvView.TvInputCallback.html#onTuned(java.lang.String,android.net.Uri)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <param name="arg1"><see cref="Android.Net.Uri"/></param>
            public void OnTuned(Java.Lang.String arg0, Android.Net.Uri arg1)
            {
                IExecute("onTuned", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/TvView.TvInputCallback.html#onTvMessage(java.lang.String,int,android.os.Bundle)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            /// <param name="arg2"><see cref="Android.Os.Bundle"/></param>
            public void OnTvMessage(Java.Lang.String arg0, int arg1, Android.Os.Bundle arg2)
            {
                IExecute("onTvMessage", arg0, arg1, arg2);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/TvView.TvInputCallback.html#onVideoAvailable(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            public void OnVideoAvailable(Java.Lang.String arg0)
            {
                IExecuteWithSignature("onVideoAvailable", "(Ljava/lang/String;)V", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/TvView.TvInputCallback.html#onVideoSizeChanged(java.lang.String,int,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            /// <param name="arg2"><see cref="int"/></param>
            public void OnVideoSizeChanged(Java.Lang.String arg0, int arg1, int arg2)
            {
                IExecute("onVideoSizeChanged", arg0, arg1, arg2);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/TvView.TvInputCallback.html#onVideoUnavailable(java.lang.String,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            public void OnVideoUnavailable(Java.Lang.String arg0, int arg1)
            {
                IExecute("onVideoUnavailable", arg0, arg1);
            }
        
            #endregion
        
            #region Nested classes
        
            #endregion
        
            // TODO: complete the class
        }
        #endregion

    
        #endregion
    
        // TODO: complete the class
    }
    #endregion
}