/*
*  Copyright (c) 2024-2025 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.6.4.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Media.Tv.Ad
{
    #region TvAdView declaration
    /// <summary>
    /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdView.html"/>
    /// </summary>
    public partial class TvAdView : Android.View.ViewGroup
    {
        const string _bridgeClassName = "android.media.tv.ad.TvAdView";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public TvAdView() { }
        /// <summary>
        /// Internal constructor: used internally from JCOBridge
        /// </summary>
        [global::System.Obsolete("This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public TvAdView(IJVMBridgeBaseInitializer initializer) : base(initializer) { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public TvAdView(params object[] args) : base(args) { }
    
        private static readonly global::System.Exception _LocalBridgeClazzException = null;
        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, out _LocalBridgeClazzException, false);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw _LocalBridgeClazzException ?? new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
    
        /// <inheritdoc/>
        public override string BridgeClassName => _bridgeClassName;
        /// <inheritdoc/>
        public override bool IsBridgeAbstract => false;
        /// <inheritdoc/>
        public override bool IsBridgeCloseable => false;
        /// <inheritdoc/>
        public override bool IsBridgeInterface => false;
        /// <inheritdoc/>
        public override bool IsBridgeStatic => false;
    
        // TODO: complete the class
        #region OnUnhandledInputEventListener declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdView.OnUnhandledInputEventListener.html"/>
        /// </summary>
        public partial class OnUnhandledInputEventListener : MASES.JCOBridge.C2JBridge.JVMBridgeListener
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public OnUnhandledInputEventListener() { InitializeHandlers(); }
            /// <summary>
            /// Internal constructor: used internally from JCOBridge
            /// </summary>
            [global::System.Obsolete("This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public OnUnhandledInputEventListener(IJVMBridgeBaseInitializer initializer) : base(initializer) { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public OnUnhandledInputEventListener(params object[] args) : base(args) { InitializeHandlers(); }
            const string _bridgeClassName = "org.mases.netdroid.generated.android.media.tv.ad.TvAdView_OnUnhandledInputEventListener";
            private static readonly global::System.Exception _LocalBridgeClazzException = null;
            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, out _LocalBridgeClazzException, false);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw _LocalBridgeClazzException ?? new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
            
            /// <inheritdoc />
            public override string BridgeClassName => _bridgeClassName;
        
        
            // TODO: complete the class
        
        }
        #endregion
        
        #region OnUnhandledInputEventListenerDirect declaration
        /// <summary>
        /// Direct override of <see cref="OnUnhandledInputEventListener"/> or its generic type if there is one
        /// </summary>
        public partial class OnUnhandledInputEventListenerDirect : OnUnhandledInputEventListener
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public OnUnhandledInputEventListenerDirect() { }
            /// <summary>
            /// Internal constructor: used internally from JCOBridge
            /// </summary>
            [global::System.Obsolete("This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public OnUnhandledInputEventListenerDirect(IJVMBridgeBaseInitializer initializer) : base(initializer) { }
        
            /// <inheritdoc/>
            public override bool AutoInit => false;
        
            /// <inheritdoc />
            protected override void InitializeHandlers() { }
        
            const string _bridgeClassName = "android.media.tv.ad.TvAdView$OnUnhandledInputEventListener";
            private static readonly global::System.Exception _LocalBridgeClazzException = null;
            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, out _LocalBridgeClazzException, false);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw _LocalBridgeClazzException ?? new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
        
            /// <inheritdoc/>
            public override string BridgeClassName => _bridgeClassName;
            /// <inheritdoc/>
            public override bool IsBridgeAbstract => true;
            /// <inheritdoc/>
            public override bool IsBridgeCloseable => false;
            /// <inheritdoc/>
            public override bool IsBridgeInterface => true;
            /// <inheritdoc/>
            public override bool IsBridgeStatic => true;
        }
        #endregion

        #region TvAdCallback declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdView.TvAdCallback.html"/>
        /// </summary>
        public partial class TvAdCallback : MASES.JCOBridge.C2JBridge.JVMBridgeBase<TvAdCallback>
        {
            const string _bridgeClassName = "android.media.tv.ad.TvAdView$TvAdCallback";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            [global::System.Obsolete("TvAdCallback class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public TvAdCallback() { }
            /// <summary>
            /// Internal constructor: used internally from JCOBridge
            /// </summary>
            [global::System.Obsolete("This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public TvAdCallback(IJVMBridgeBaseInitializer initializer) : base(initializer) { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            [global::System.Obsolete("TvAdCallback class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public TvAdCallback(params object[] args) : base(args) { }
        
            private static readonly global::System.Exception _LocalBridgeClazzException = null;
            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, out _LocalBridgeClazzException, false);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw _LocalBridgeClazzException ?? new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
        
            /// <inheritdoc/>
            public override string BridgeClassName => _bridgeClassName;
            /// <inheritdoc/>
            public override bool IsBridgeAbstract => true;
            /// <inheritdoc/>
            public override bool IsBridgeCloseable => false;
            /// <inheritdoc/>
            public override bool IsBridgeInterface => false;
            /// <inheritdoc/>
            public override bool IsBridgeStatic => true;
        
            // TODO: complete the class
        
        }
        #endregion

    
    }
    #endregion

    #region TvAdView implementation
    public partial class TvAdView
    {
        #region Constructors
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdView.html#%3Cinit%3E(android.content.Context,android.util.AttributeSet,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        /// <param name="arg1"><see cref="Android.Util.AttributeSet"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        public TvAdView(Android.Content.Context arg0, Android.Util.AttributeSet arg1, int arg2)
            : base(arg0, arg1, arg2)
        {
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdView.html#%3Cinit%3E(android.content.Context,android.util.AttributeSet)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        /// <param name="arg1"><see cref="Android.Util.AttributeSet"/></param>
        public TvAdView(Android.Content.Context arg0, Android.Util.AttributeSet arg1)
            : base(arg0, arg1)
        {
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdView.html#%3Cinit%3E(android.content.Context)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        public TvAdView(Android.Content.Context arg0)
            : base(arg0)
        {
        }
    
        #endregion
    
        #region Class/Interface conversion operators
    
        #endregion
    
        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdView.html#ERROR_KEY_ERROR_CODE"/>
        /// </summary>
        public static Java.Lang.String ERROR_KEY_ERROR_CODE { get { if (!_ERROR_KEY_ERROR_CODEReady) { _ERROR_KEY_ERROR_CODEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ERROR_KEY_ERROR_CODE"); _ERROR_KEY_ERROR_CODEReady = true; } return _ERROR_KEY_ERROR_CODEContent; } }
        private static Java.Lang.String _ERROR_KEY_ERROR_CODEContent = default;
        private static bool _ERROR_KEY_ERROR_CODEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdView.html#ERROR_KEY_METHOD_NAME"/>
        /// </summary>
        public static Java.Lang.String ERROR_KEY_METHOD_NAME { get { if (!_ERROR_KEY_METHOD_NAMEReady) { _ERROR_KEY_METHOD_NAMEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ERROR_KEY_METHOD_NAME"); _ERROR_KEY_METHOD_NAMEReady = true; } return _ERROR_KEY_METHOD_NAMEContent; } }
        private static Java.Lang.String _ERROR_KEY_METHOD_NAMEContent = default;
        private static bool _ERROR_KEY_METHOD_NAMEReady = false; // this is used because in case of generics 
    
        #endregion
    
        #region Static methods
    
        #endregion
    
        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdView.html#getOnUnhandledInputEventListener()"/>
        /// </summary>
        /// <returns><see cref="Android.Media.Tv.Ad.TvAdView.OnUnhandledInputEventListener"/></returns>
        public Android.Media.Tv.Ad.TvAdView.OnUnhandledInputEventListener GetOnUnhandledInputEventListener()
        {
            return IExecuteWithSignature<Android.Media.Tv.Ad.TvAdView.OnUnhandledInputEventListener>("getOnUnhandledInputEventListener", "()Landroid/media/tv/ad/TvAdView$OnUnhandledInputEventListener;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdView.html#getOnUnhandledInputEventListener()"/>
        /// </summary>
        /// <returns><see cref="Android.Media.Tv.Ad.TvAdView.OnUnhandledInputEventListener"/></returns>
        public Android.Media.Tv.Ad.TvAdView.OnUnhandledInputEventListener GetOnUnhandledInputEventListenerDirect()
        {
            return IExecuteWithSignature<Android.Media.Tv.Ad.TvAdView.OnUnhandledInputEventListenerDirect, Android.Media.Tv.Ad.TvAdView.OnUnhandledInputEventListener>("getOnUnhandledInputEventListener", "()Landroid/media/tv/ad/TvAdView$OnUnhandledInputEventListener;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdView.html#dispatchUnhandledInputEvent(android.view.InputEvent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.InputEvent"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool DispatchUnhandledInputEvent(Android.View.InputEvent arg0)
        {
            return IExecuteWithSignature<bool>("dispatchUnhandledInputEvent", "(Landroid/view/InputEvent;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdView.html#onUnhandledInputEvent(android.view.InputEvent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.InputEvent"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool OnUnhandledInputEvent(Android.View.InputEvent arg0)
        {
            return IExecuteWithSignature<bool>("onUnhandledInputEvent", "(Landroid/view/InputEvent;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdView.html#setTvView(android.media.tv.TvView)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Media.Tv.TvView"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool SetTvView(Android.Media.Tv.TvView arg0)
        {
            return IExecuteWithSignature<bool>("setTvView", "(Landroid/media/tv/TvView;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdView.html#clearCallback()"/>
        /// </summary>
        public void ClearCallback()
        {
            IExecuteWithSignature("clearCallback", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdView.html#clearOnUnhandledInputEventListener()"/>
        /// </summary>
        public void ClearOnUnhandledInputEventListener()
        {
            IExecuteWithSignature("clearOnUnhandledInputEventListener", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdView.html#notifyError(java.lang.String,android.os.Bundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Android.Os.Bundle"/></param>
        public void NotifyError(Java.Lang.String arg0, Android.Os.Bundle arg1)
        {
            IExecuteWithSignature("notifyError", "(Ljava/lang/String;Landroid/os/Bundle;)V", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdView.html#notifyTvMessage(int,android.os.Bundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="Android.Os.Bundle"/></param>
        public void NotifyTvMessage(int arg0, Android.Os.Bundle arg1)
        {
            IExecuteWithSignature("notifyTvMessage", "(ILandroid/os/Bundle;)V", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdView.html#onAttachedToWindow()"/>
        /// </summary>
        public void OnAttachedToWindow()
        {
            IExecuteWithSignature("onAttachedToWindow", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdView.html#onDetachedFromWindow()"/>
        /// </summary>
        public void OnDetachedFromWindow()
        {
            IExecuteWithSignature("onDetachedFromWindow", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdView.html#onLayout(boolean,int,int,int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <param name="arg3"><see cref="int"/></param>
        /// <param name="arg4"><see cref="int"/></param>
        public void OnLayout(bool arg0, int arg1, int arg2, int arg3, int arg4)
        {
            IExecuteWithSignature("onLayout", "(ZIIII)V", arg0, arg1, arg2, arg3, arg4);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdView.html#onMeasure(int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void OnMeasure(int arg0, int arg1)
        {
            IExecuteWithSignature("onMeasure", "(II)V", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdView.html#onVisibilityChanged(android.view.View,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.View"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void OnVisibilityChanged(Android.View.View arg0, int arg1)
        {
            IExecuteWithSignature("onVisibilityChanged", "(Landroid/view/View;I)V", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdView.html#prepareAdService(java.lang.String,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        public void PrepareAdService(Java.Lang.String arg0, Java.Lang.String arg1)
        {
            IExecuteWithSignature("prepareAdService", "(Ljava/lang/String;Ljava/lang/String;)V", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdView.html#reset()"/>
        /// </summary>
        public void Reset()
        {
            IExecuteWithSignature("reset", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdView.html#resetAdService()"/>
        /// </summary>
        public void ResetAdService()
        {
            IExecuteWithSignature("resetAdService", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdView.html#sendCurrentChannelUri(android.net.Uri)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Net.Uri"/></param>
        public void SendCurrentChannelUri(Android.Net.Uri arg0)
        {
            IExecuteWithSignature("sendCurrentChannelUri", "(Landroid/net/Uri;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdView.html#sendCurrentTvInputId(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        public void SendCurrentTvInputId(Java.Lang.String arg0)
        {
            IExecuteWithSignature("sendCurrentTvInputId", "(Ljava/lang/String;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdView.html#sendCurrentVideoBounds(android.graphics.Rect)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Graphics.Rect"/></param>
        public void SendCurrentVideoBounds(Android.Graphics.Rect arg0)
        {
            IExecuteWithSignature("sendCurrentVideoBounds", "(Landroid/graphics/Rect;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdView.html#sendSigningResult(java.lang.String,byte[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="byte"/></param>
        public void SendSigningResult(Java.Lang.String arg0, byte[] arg1)
        {
            IExecuteWithSignature("sendSigningResult", "(Ljava/lang/String;[B)V", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdView.html#sendTrackInfoList(java.util.List)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.List"/></param>
        public void SendTrackInfoList(Java.Util.List<Android.Media.Tv.TvTrackInfo> arg0)
        {
            IExecuteWithSignature("sendTrackInfoList", "(Ljava/util/List;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdView.html#setCallback(java.util.concurrent.Executor,android.media.tv.ad.TvAdView.TvAdCallback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Concurrent.Executor"/></param>
        /// <param name="arg1"><see cref="Android.Media.Tv.Ad.TvAdView.TvAdCallback"/></param>
        public void SetCallback(Java.Util.Concurrent.Executor arg0, Android.Media.Tv.Ad.TvAdView.TvAdCallback arg1)
        {
            IExecuteWithSignature("setCallback", "(Ljava/util/concurrent/Executor;Landroid/media/tv/ad/TvAdView$TvAdCallback;)V", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdView.html#setOnUnhandledInputEventListener(android.media.tv.ad.TvAdView.OnUnhandledInputEventListener)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Media.Tv.Ad.TvAdView.OnUnhandledInputEventListener"/></param>
        public void SetOnUnhandledInputEventListener(Android.Media.Tv.Ad.TvAdView.OnUnhandledInputEventListener arg0)
        {
            IExecuteWithSignature("setOnUnhandledInputEventListener", "(Landroid/media/tv/ad/TvAdView$OnUnhandledInputEventListener;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdView.html#setZOrderMediaOverlay(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetZOrderMediaOverlay(bool arg0)
        {
            IExecuteWithSignature("setZOrderMediaOverlay", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdView.html#setZOrderOnTop(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetZOrderOnTop(bool arg0)
        {
            IExecuteWithSignature("setZOrderOnTop", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdView.html#startAdService()"/>
        /// </summary>
        public void StartAdService()
        {
            IExecuteWithSignature("startAdService", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdView.html#stopAdService()"/>
        /// </summary>
        public void StopAdService()
        {
            IExecuteWithSignature("stopAdService", "()V");
        }
    
        #endregion
    
        #region Nested classes
        #region OnUnhandledInputEventListener implementation
        public partial class OnUnhandledInputEventListener
        {
            #region Constructors
        
            #endregion
        
            #region Class/Interface conversion operators
        
            #endregion
        
            #region Fields
        
            #endregion
        
            #region Static methods
        
            #endregion
        
            #region Instance methods
            /// <summary>
            /// Handlers initializer for <see cref="OnUnhandledInputEventListener"/>
            /// </summary>
            protected virtual void InitializeHandlers()
            {
                AddEventHandler("onUnhandledInputEvent", new global::System.EventHandler<CLRListenerEventArgs<CLREventData<MASES.JNet.Specific.JNetEventResult>>>(OnUnhandledInputEventEventHandler));

            }
            
            /// <summary>
            /// Handler for <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdView.OnUnhandledInputEventListener.html#onUnhandledInputEvent(android.view.InputEvent)"/>
            /// </summary>
            /// <remarks>If <see cref="OnOnUnhandledInputEvent"/> has a value it takes precedence over corresponding class method</remarks>
            public global::System.Func<Android.View.InputEvent, bool> OnOnUnhandledInputEvent { get; set; } = null;
            
            bool hasOverrideOnUnhandledInputEvent = true;
            void OnUnhandledInputEventEventHandler(object sender, CLRListenerEventArgs<CLREventData<MASES.JNet.Specific.JNetEventResult>> data)
            {
                hasOverrideOnUnhandledInputEvent = true;
                var methodToExecute = (OnOnUnhandledInputEvent != null) ? OnOnUnhandledInputEvent : OnUnhandledInputEvent;
                var executionResult = methodToExecute.Invoke(data.EventData.GetAt<Android.View.InputEvent>(0));
                data.EventData.TypedEventData.SetReturnData(hasOverrideOnUnhandledInputEvent, executionResult);
            }
            
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdView.OnUnhandledInputEventListener.html#onUnhandledInputEvent(android.view.InputEvent)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.View.InputEvent"/></param>
            /// <returns><see cref="bool"/></returns>
            public virtual bool OnUnhandledInputEvent(Android.View.InputEvent arg0)
            {
                hasOverrideOnUnhandledInputEvent = false; return default;
            }
        
            #endregion
        
            #region Nested classes
        
            #endregion
        
            // TODO: complete the class
        }
        #endregion

        #region OnUnhandledInputEventListenerDirect implementation
        public partial class OnUnhandledInputEventListenerDirect
        {
            #region Constructors
        
            #endregion
        
            #region Class/Interface conversion operators
        
            #endregion
        
            #region Fields
        
            #endregion
        
            #region Static methods
        
            #endregion
        
            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdView.OnUnhandledInputEventListener.html#onUnhandledInputEvent(android.view.InputEvent)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.View.InputEvent"/></param>
            /// <returns><see cref="bool"/></returns>
            public override bool OnUnhandledInputEvent(Android.View.InputEvent arg0)
            {
                return IExecuteWithSignature<bool>("onUnhandledInputEvent", "(Landroid/view/InputEvent;)Z", arg0);
            }
        
            #endregion
        
            #region Nested classes
        
            #endregion
        
            // TODO: complete the class
        }
        #endregion

        #region TvAdCallback implementation
        public partial class TvAdCallback
        {
            #region Constructors
        
            #endregion
        
            #region Class/Interface conversion operators
        
            #endregion
        
            #region Fields
        
            #endregion
        
            #region Static methods
        
            #endregion
        
            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdView.TvAdCallback.html#onRequestCurrentChannelUri(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            public void OnRequestCurrentChannelUri(Java.Lang.String arg0)
            {
                IExecuteWithSignature("onRequestCurrentChannelUri", "(Ljava/lang/String;)V", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdView.TvAdCallback.html#onRequestCurrentTvInputId(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            public void OnRequestCurrentTvInputId(Java.Lang.String arg0)
            {
                IExecuteWithSignature("onRequestCurrentTvInputId", "(Ljava/lang/String;)V", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdView.TvAdCallback.html#onRequestCurrentVideoBounds(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            public void OnRequestCurrentVideoBounds(Java.Lang.String arg0)
            {
                IExecuteWithSignature("onRequestCurrentVideoBounds", "(Ljava/lang/String;)V", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdView.TvAdCallback.html#onRequestSigning(java.lang.String,java.lang.String,java.lang.String,java.lang.String,byte[])"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <param name="arg1"><see cref="Java.Lang.String"/></param>
            /// <param name="arg2"><see cref="Java.Lang.String"/></param>
            /// <param name="arg3"><see cref="Java.Lang.String"/></param>
            /// <param name="arg4"><see cref="byte"/></param>
            public void OnRequestSigning(Java.Lang.String arg0, Java.Lang.String arg1, Java.Lang.String arg2, Java.Lang.String arg3, byte[] arg4)
            {
                IExecuteWithSignature("onRequestSigning", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[B)V", arg0, arg1, arg2, arg3, arg4);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdView.TvAdCallback.html#onRequestTrackInfoList(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            public void OnRequestTrackInfoList(Java.Lang.String arg0)
            {
                IExecuteWithSignature("onRequestTrackInfoList", "(Ljava/lang/String;)V", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdView.TvAdCallback.html#onStateChanged(java.lang.String,int,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            /// <param name="arg2"><see cref="int"/></param>
            public void OnStateChanged(Java.Lang.String arg0, int arg1, int arg2)
            {
                IExecuteWithSignature("onStateChanged", "(Ljava/lang/String;II)V", arg0, arg1, arg2);
            }
        
            #endregion
        
            #region Nested classes
        
            #endregion
        
            // TODO: complete the class
        }
        #endregion

    
        #endregion
    
        // TODO: complete the class
    }
    #endregion
}