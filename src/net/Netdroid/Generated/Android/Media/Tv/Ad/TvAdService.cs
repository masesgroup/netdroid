/*
*  Copyright (c) 2024-2025 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.6.4.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Media.Tv.Ad
{
    #region TvAdService declaration
    /// <summary>
    /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdService.html"/>
    /// </summary>
    public partial class TvAdService : Android.App.Service
    {
        const string _bridgeClassName = "android.media.tv.ad.TvAdService";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        [global::System.Obsolete("TvAdService class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public TvAdService() { }
        /// <summary>
        /// Internal constructor: used internally from JCOBridge
        /// </summary>
        [global::System.Obsolete("This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public TvAdService(IJVMBridgeBaseInitializer initializer) : base(initializer) { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        [global::System.Obsolete("TvAdService class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public TvAdService(params object[] args) : base(args) { }
    
        private static readonly global::System.Exception _LocalBridgeClazzException = null;
        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, out _LocalBridgeClazzException, false);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw _LocalBridgeClazzException ?? new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
    
        /// <inheritdoc/>
        public override string BridgeClassName => _bridgeClassName;
        /// <inheritdoc/>
        public override bool IsBridgeAbstract => true;
        /// <inheritdoc/>
        public override bool IsBridgeCloseable => false;
        /// <inheritdoc/>
        public override bool IsBridgeInterface => false;
        /// <inheritdoc/>
        public override bool IsBridgeStatic => false;
    
        // TODO: complete the class
        #region Session declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdService.Session.html"/>
        /// </summary>
        public partial class Session : Android.View.KeyEvent.Callback
        {
            const string _bridgeClassName = "android.media.tv.ad.TvAdService$Session";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            [global::System.Obsolete("Session class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public Session() { }
            /// <summary>
            /// Internal constructor: used internally from JCOBridge
            /// </summary>
            [global::System.Obsolete("This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public Session(IJVMBridgeBaseInitializer initializer) : base(initializer) { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            [global::System.Obsolete("Session class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public Session(params object[] args) : base(args) { }
        
            private static readonly global::System.Exception _LocalBridgeClazzException = null;
            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, out _LocalBridgeClazzException, false);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw _LocalBridgeClazzException ?? new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
        
            /// <inheritdoc/>
            public override string BridgeClassName => _bridgeClassName;
            /// <inheritdoc/>
            public override bool IsBridgeAbstract => true;
            /// <inheritdoc/>
            public override bool IsBridgeCloseable => false;
            /// <inheritdoc/>
            public override bool IsBridgeInterface => false;
            /// <inheritdoc/>
            public override bool IsBridgeStatic => true;
        
            // TODO: complete the class
        
        }
        #endregion

    
    }
    #endregion

    #region TvAdService implementation
    public partial class TvAdService
    {
        #region Constructors
    
        #endregion
    
        #region Class/Interface conversion operators
    
        #endregion
    
        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdService.html#SERVICE_INTERFACE"/>
        /// </summary>
        public static Java.Lang.String SERVICE_INTERFACE { get { if (!_SERVICE_INTERFACEReady) { _SERVICE_INTERFACEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SERVICE_INTERFACE"); _SERVICE_INTERFACEReady = true; } return _SERVICE_INTERFACEContent; } }
        private static Java.Lang.String _SERVICE_INTERFACEContent = default;
        private static bool _SERVICE_INTERFACEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdService.html#SERVICE_META_DATA"/>
        /// </summary>
        public static Java.Lang.String SERVICE_META_DATA { get { if (!_SERVICE_META_DATAReady) { _SERVICE_META_DATAContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SERVICE_META_DATA"); _SERVICE_META_DATAReady = true; } return _SERVICE_META_DATAContent; } }
        private static Java.Lang.String _SERVICE_META_DATAContent = default;
        private static bool _SERVICE_META_DATAReady = false; // this is used because in case of generics 
    
        #endregion
    
        #region Static methods
    
        #endregion
    
        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdService.html#onCreateSession(java.lang.String,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Android.Media.Tv.Ad.TvAdService.Session"/></returns>
        public Android.Media.Tv.Ad.TvAdService.Session OnCreateSession(Java.Lang.String arg0, Java.Lang.String arg1)
        {
            return IExecuteWithSignature<Android.Media.Tv.Ad.TvAdService.Session>("onCreateSession", "(Ljava/lang/String;Ljava/lang/String;)Landroid/media/tv/ad/TvAdService$Session;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdService.html#onAppLinkCommand(android.os.Bundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.Bundle"/></param>
        public void OnAppLinkCommand(Android.Os.Bundle arg0)
        {
            IExecuteWithSignature("onAppLinkCommand", "(Landroid/os/Bundle;)V", arg0);
        }
    
        #endregion
    
        #region Nested classes
        #region Session implementation
        public partial class Session
        {
            #region Constructors
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdService.Session.html#%3Cinit%3E(android.content.Context)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Content.Context"/></param>
            public Session(Android.Content.Context arg0)
                : base(arg0)
            {
            }
        
            #endregion
        
            #region Class/Interface conversion operators
        
            #endregion
        
            #region Fields
        
            #endregion
        
            #region Static methods
        
            #endregion
        
            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdService.Session.html#onSetSurface(android.view.Surface)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.View.Surface"/></param>
            /// <returns><see cref="bool"/></returns>
            public bool OnSetSurface(Android.View.Surface arg0)
            {
                return IExecuteWithSignature<bool>("onSetSurface", "(Landroid/view/Surface;)Z", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdService.Session.html#onRelease()"/>
            /// </summary>
            public void OnRelease()
            {
                IExecuteWithSignature("onRelease", "()V");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdService.Session.html#onCreateMediaView()"/>
            /// </summary>
            /// <returns><see cref="Android.View.View"/></returns>
            public Android.View.View OnCreateMediaView()
            {
                return IExecuteWithSignature<Android.View.View>("onCreateMediaView", "()Landroid/view/View;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdService.Session.html#isMediaViewEnabled()"/>
            /// </summary>
            /// <returns><see cref="bool"/></returns>
            public bool IsMediaViewEnabled()
            {
                return IExecuteWithSignature<bool>("isMediaViewEnabled", "()Z");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdService.Session.html#onGenericMotionEvent(android.view.MotionEvent)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.View.MotionEvent"/></param>
            /// <returns><see cref="bool"/></returns>
            public bool OnGenericMotionEvent(Android.View.MotionEvent arg0)
            {
                return IExecuteWithSignature<bool>("onGenericMotionEvent", "(Landroid/view/MotionEvent;)Z", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdService.Session.html#onKeyDown(int,android.view.KeyEvent)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <param name="arg1"><see cref="Android.View.KeyEvent"/></param>
            /// <returns><see cref="bool"/></returns>
            public bool OnKeyDown(int arg0, Android.View.KeyEvent arg1)
            {
                return IExecuteWithSignature<bool>("onKeyDown", "(ILandroid/view/KeyEvent;)Z", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdService.Session.html#onKeyLongPress(int,android.view.KeyEvent)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <param name="arg1"><see cref="Android.View.KeyEvent"/></param>
            /// <returns><see cref="bool"/></returns>
            public bool OnKeyLongPress(int arg0, Android.View.KeyEvent arg1)
            {
                return IExecuteWithSignature<bool>("onKeyLongPress", "(ILandroid/view/KeyEvent;)Z", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdService.Session.html#onKeyMultiple(int,int,android.view.KeyEvent)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            /// <param name="arg2"><see cref="Android.View.KeyEvent"/></param>
            /// <returns><see cref="bool"/></returns>
            public bool OnKeyMultiple(int arg0, int arg1, Android.View.KeyEvent arg2)
            {
                return IExecuteWithSignature<bool>("onKeyMultiple", "(IILandroid/view/KeyEvent;)Z", arg0, arg1, arg2);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdService.Session.html#onKeyUp(int,android.view.KeyEvent)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <param name="arg1"><see cref="Android.View.KeyEvent"/></param>
            /// <returns><see cref="bool"/></returns>
            public bool OnKeyUp(int arg0, Android.View.KeyEvent arg1)
            {
                return IExecuteWithSignature<bool>("onKeyUp", "(ILandroid/view/KeyEvent;)Z", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdService.Session.html#onTouchEvent(android.view.MotionEvent)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.View.MotionEvent"/></param>
            /// <returns><see cref="bool"/></returns>
            public bool OnTouchEvent(Android.View.MotionEvent arg0)
            {
                return IExecuteWithSignature<bool>("onTouchEvent", "(Landroid/view/MotionEvent;)Z", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdService.Session.html#onTrackballEvent(android.view.MotionEvent)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.View.MotionEvent"/></param>
            /// <returns><see cref="bool"/></returns>
            public bool OnTrackballEvent(Android.View.MotionEvent arg0)
            {
                return IExecuteWithSignature<bool>("onTrackballEvent", "(Landroid/view/MotionEvent;)Z", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdService.Session.html#layoutSurface(int,int,int,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            /// <param name="arg2"><see cref="int"/></param>
            /// <param name="arg3"><see cref="int"/></param>
            public void LayoutSurface(int arg0, int arg1, int arg2, int arg3)
            {
                IExecuteWithSignature("layoutSurface", "(IIII)V", arg0, arg1, arg2, arg3);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdService.Session.html#notifySessionStateChanged(int,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            public void NotifySessionStateChanged(int arg0, int arg1)
            {
                IExecuteWithSignature("notifySessionStateChanged", "(II)V", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdService.Session.html#onCurrentChannelUri(android.net.Uri)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Net.Uri"/></param>
            public void OnCurrentChannelUri(Android.Net.Uri arg0)
            {
                IExecuteWithSignature("onCurrentChannelUri", "(Landroid/net/Uri;)V", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdService.Session.html#onCurrentTvInputId(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            public void OnCurrentTvInputId(Java.Lang.String arg0)
            {
                IExecuteWithSignature("onCurrentTvInputId", "(Ljava/lang/String;)V", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdService.Session.html#onCurrentVideoBounds(android.graphics.Rect)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Graphics.Rect"/></param>
            public void OnCurrentVideoBounds(Android.Graphics.Rect arg0)
            {
                IExecuteWithSignature("onCurrentVideoBounds", "(Landroid/graphics/Rect;)V", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdService.Session.html#onError(java.lang.String,android.os.Bundle)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <param name="arg1"><see cref="Android.Os.Bundle"/></param>
            public void OnError(Java.Lang.String arg0, Android.Os.Bundle arg1)
            {
                IExecuteWithSignature("onError", "(Ljava/lang/String;Landroid/os/Bundle;)V", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdService.Session.html#onMediaViewSizeChanged(int,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            public void OnMediaViewSizeChanged(int arg0, int arg1)
            {
                IExecuteWithSignature("onMediaViewSizeChanged", "(II)V", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdService.Session.html#onResetAdService()"/>
            /// </summary>
            public void OnResetAdService()
            {
                IExecuteWithSignature("onResetAdService", "()V");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdService.Session.html#onSigningResult(java.lang.String,byte[])"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <param name="arg1"><see cref="byte"/></param>
            public void OnSigningResult(Java.Lang.String arg0, byte[] arg1)
            {
                IExecuteWithSignature("onSigningResult", "(Ljava/lang/String;[B)V", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdService.Session.html#onStartAdService()"/>
            /// </summary>
            public void OnStartAdService()
            {
                IExecuteWithSignature("onStartAdService", "()V");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdService.Session.html#onStopAdService()"/>
            /// </summary>
            public void OnStopAdService()
            {
                IExecuteWithSignature("onStopAdService", "()V");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdService.Session.html#onSurfaceChanged(int,int,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            /// <param name="arg2"><see cref="int"/></param>
            public void OnSurfaceChanged(int arg0, int arg1, int arg2)
            {
                IExecuteWithSignature("onSurfaceChanged", "(III)V", arg0, arg1, arg2);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdService.Session.html#onTrackInfoList(java.util.List)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Util.List"/></param>
            public void OnTrackInfoList(Java.Util.List<Android.Media.Tv.TvTrackInfo> arg0)
            {
                IExecuteWithSignature("onTrackInfoList", "(Ljava/util/List;)V", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdService.Session.html#onTvInputSessionData(java.lang.String,android.os.Bundle)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <param name="arg1"><see cref="Android.Os.Bundle"/></param>
            public void OnTvInputSessionData(Java.Lang.String arg0, Android.Os.Bundle arg1)
            {
                IExecuteWithSignature("onTvInputSessionData", "(Ljava/lang/String;Landroid/os/Bundle;)V", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdService.Session.html#onTvMessage(int,android.os.Bundle)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <param name="arg1"><see cref="Android.Os.Bundle"/></param>
            public void OnTvMessage(int arg0, Android.Os.Bundle arg1)
            {
                IExecuteWithSignature("onTvMessage", "(ILandroid/os/Bundle;)V", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdService.Session.html#requestCurrentChannelUri()"/>
            /// </summary>
            public void RequestCurrentChannelUri()
            {
                IExecuteWithSignature("requestCurrentChannelUri", "()V");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdService.Session.html#requestCurrentTvInputId()"/>
            /// </summary>
            public void RequestCurrentTvInputId()
            {
                IExecuteWithSignature("requestCurrentTvInputId", "()V");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdService.Session.html#requestCurrentVideoBounds()"/>
            /// </summary>
            public void RequestCurrentVideoBounds()
            {
                IExecuteWithSignature("requestCurrentVideoBounds", "()V");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdService.Session.html#requestSigning(java.lang.String,java.lang.String,java.lang.String,byte[])"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <param name="arg1"><see cref="Java.Lang.String"/></param>
            /// <param name="arg2"><see cref="Java.Lang.String"/></param>
            /// <param name="arg3"><see cref="byte"/></param>
            public void RequestSigning(Java.Lang.String arg0, Java.Lang.String arg1, Java.Lang.String arg2, byte[] arg3)
            {
                IExecuteWithSignature("requestSigning", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[B)V", arg0, arg1, arg2, arg3);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdService.Session.html#requestTrackInfoList()"/>
            /// </summary>
            public void RequestTrackInfoList()
            {
                IExecuteWithSignature("requestTrackInfoList", "()V");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdService.Session.html#sendTvAdSessionData(java.lang.String,android.os.Bundle)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <param name="arg1"><see cref="Android.Os.Bundle"/></param>
            public void SendTvAdSessionData(Java.Lang.String arg0, Android.Os.Bundle arg1)
            {
                IExecuteWithSignature("sendTvAdSessionData", "(Ljava/lang/String;Landroid/os/Bundle;)V", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdService.Session.html#setMediaViewEnabled(boolean)"/>
            /// </summary>
            /// <param name="arg0"><see cref="bool"/></param>
            public void SetMediaViewEnabled(bool arg0)
            {
                IExecuteWithSignature("setMediaViewEnabled", "(Z)V", arg0);
            }
        
            #endregion
        
            #region Nested classes
        
            #endregion
        
            // TODO: complete the class
        }
        #endregion

    
        #endregion
    
        // TODO: complete the class
    }
    #endregion
}