/*
*  Copyright (c) 2024-2025 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.6.4.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Media.Tv.Ad
{
    #region TvAdManager declaration
    /// <summary>
    /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdManager.html"/>
    /// </summary>
    public partial class TvAdManager : MASES.JCOBridge.C2JBridge.JVMBridgeBase<TvAdManager>
    {
        const string _bridgeClassName = "android.media.tv.ad.TvAdManager";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public TvAdManager() { }
        /// <summary>
        /// Internal constructor: used internally from JCOBridge
        /// </summary>
        [global::System.Obsolete("This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public TvAdManager(IJVMBridgeBaseInitializer initializer) : base(initializer) { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public TvAdManager(params object[] args) : base(args) { }
    
        private static readonly global::System.Exception _LocalBridgeClazzException = null;
        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, out _LocalBridgeClazzException, false);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw _LocalBridgeClazzException ?? new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
    
        /// <inheritdoc/>
        public override string BridgeClassName => _bridgeClassName;
        /// <inheritdoc/>
        public override bool IsBridgeAbstract => false;
        /// <inheritdoc/>
        public override bool IsBridgeCloseable => false;
        /// <inheritdoc/>
        public override bool IsBridgeInterface => false;
        /// <inheritdoc/>
        public override bool IsBridgeStatic => false;
    
        // TODO: complete the class
        #region TvAdServiceCallback declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdManager.TvAdServiceCallback.html"/>
        /// </summary>
        public partial class TvAdServiceCallback : MASES.JCOBridge.C2JBridge.JVMBridgeBase<TvAdServiceCallback>
        {
            const string _bridgeClassName = "android.media.tv.ad.TvAdManager$TvAdServiceCallback";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            [global::System.Obsolete("TvAdServiceCallback class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public TvAdServiceCallback() { }
            /// <summary>
            /// Internal constructor: used internally from JCOBridge
            /// </summary>
            [global::System.Obsolete("This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public TvAdServiceCallback(IJVMBridgeBaseInitializer initializer) : base(initializer) { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            [global::System.Obsolete("TvAdServiceCallback class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public TvAdServiceCallback(params object[] args) : base(args) { }
        
            private static readonly global::System.Exception _LocalBridgeClazzException = null;
            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, out _LocalBridgeClazzException, false);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw _LocalBridgeClazzException ?? new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
        
            /// <inheritdoc/>
            public override string BridgeClassName => _bridgeClassName;
            /// <inheritdoc/>
            public override bool IsBridgeAbstract => true;
            /// <inheritdoc/>
            public override bool IsBridgeCloseable => false;
            /// <inheritdoc/>
            public override bool IsBridgeInterface => false;
            /// <inheritdoc/>
            public override bool IsBridgeStatic => true;
        
            // TODO: complete the class
        
        }
        #endregion

    
    }
    #endregion

    #region TvAdManager implementation
    public partial class TvAdManager
    {
        #region Constructors
    
        #endregion
    
        #region Class/Interface conversion operators
    
        #endregion
    
        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdManager.html#ERROR_BLOCKED"/>
        /// </summary>
        public static int ERROR_BLOCKED { get { if (!_ERROR_BLOCKEDReady) { _ERROR_BLOCKEDContent = SGetField<int>(LocalBridgeClazz, "ERROR_BLOCKED"); _ERROR_BLOCKEDReady = true; } return _ERROR_BLOCKEDContent; } }
        private static int _ERROR_BLOCKEDContent = default;
        private static bool _ERROR_BLOCKEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdManager.html#ERROR_ENCRYPTED"/>
        /// </summary>
        public static int ERROR_ENCRYPTED { get { if (!_ERROR_ENCRYPTEDReady) { _ERROR_ENCRYPTEDContent = SGetField<int>(LocalBridgeClazz, "ERROR_ENCRYPTED"); _ERROR_ENCRYPTEDReady = true; } return _ERROR_ENCRYPTEDContent; } }
        private static int _ERROR_ENCRYPTEDContent = default;
        private static bool _ERROR_ENCRYPTEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdManager.html#ERROR_NONE"/>
        /// </summary>
        public static int ERROR_NONE { get { if (!_ERROR_NONEReady) { _ERROR_NONEContent = SGetField<int>(LocalBridgeClazz, "ERROR_NONE"); _ERROR_NONEReady = true; } return _ERROR_NONEContent; } }
        private static int _ERROR_NONEContent = default;
        private static bool _ERROR_NONEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdManager.html#ERROR_NOT_SUPPORTED"/>
        /// </summary>
        public static int ERROR_NOT_SUPPORTED { get { if (!_ERROR_NOT_SUPPORTEDReady) { _ERROR_NOT_SUPPORTEDContent = SGetField<int>(LocalBridgeClazz, "ERROR_NOT_SUPPORTED"); _ERROR_NOT_SUPPORTEDReady = true; } return _ERROR_NOT_SUPPORTEDContent; } }
        private static int _ERROR_NOT_SUPPORTEDContent = default;
        private static bool _ERROR_NOT_SUPPORTEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdManager.html#ERROR_RESOURCE_UNAVAILABLE"/>
        /// </summary>
        public static int ERROR_RESOURCE_UNAVAILABLE { get { if (!_ERROR_RESOURCE_UNAVAILABLEReady) { _ERROR_RESOURCE_UNAVAILABLEContent = SGetField<int>(LocalBridgeClazz, "ERROR_RESOURCE_UNAVAILABLE"); _ERROR_RESOURCE_UNAVAILABLEReady = true; } return _ERROR_RESOURCE_UNAVAILABLEContent; } }
        private static int _ERROR_RESOURCE_UNAVAILABLEContent = default;
        private static bool _ERROR_RESOURCE_UNAVAILABLEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdManager.html#ERROR_UNKNOWN"/>
        /// </summary>
        public static int ERROR_UNKNOWN { get { if (!_ERROR_UNKNOWNReady) { _ERROR_UNKNOWNContent = SGetField<int>(LocalBridgeClazz, "ERROR_UNKNOWN"); _ERROR_UNKNOWNReady = true; } return _ERROR_UNKNOWNContent; } }
        private static int _ERROR_UNKNOWNContent = default;
        private static bool _ERROR_UNKNOWNReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdManager.html#ERROR_UNKNOWN_CHANNEL"/>
        /// </summary>
        public static int ERROR_UNKNOWN_CHANNEL { get { if (!_ERROR_UNKNOWN_CHANNELReady) { _ERROR_UNKNOWN_CHANNELContent = SGetField<int>(LocalBridgeClazz, "ERROR_UNKNOWN_CHANNEL"); _ERROR_UNKNOWN_CHANNELReady = true; } return _ERROR_UNKNOWN_CHANNELContent; } }
        private static int _ERROR_UNKNOWN_CHANNELContent = default;
        private static bool _ERROR_UNKNOWN_CHANNELReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdManager.html#ERROR_WEAK_SIGNAL"/>
        /// </summary>
        public static int ERROR_WEAK_SIGNAL { get { if (!_ERROR_WEAK_SIGNALReady) { _ERROR_WEAK_SIGNALContent = SGetField<int>(LocalBridgeClazz, "ERROR_WEAK_SIGNAL"); _ERROR_WEAK_SIGNALReady = true; } return _ERROR_WEAK_SIGNALContent; } }
        private static int _ERROR_WEAK_SIGNALContent = default;
        private static bool _ERROR_WEAK_SIGNALReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdManager.html#SESSION_STATE_ERROR"/>
        /// </summary>
        public static int SESSION_STATE_ERROR { get { if (!_SESSION_STATE_ERRORReady) { _SESSION_STATE_ERRORContent = SGetField<int>(LocalBridgeClazz, "SESSION_STATE_ERROR"); _SESSION_STATE_ERRORReady = true; } return _SESSION_STATE_ERRORContent; } }
        private static int _SESSION_STATE_ERRORContent = default;
        private static bool _SESSION_STATE_ERRORReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdManager.html#SESSION_STATE_RUNNING"/>
        /// </summary>
        public static int SESSION_STATE_RUNNING { get { if (!_SESSION_STATE_RUNNINGReady) { _SESSION_STATE_RUNNINGContent = SGetField<int>(LocalBridgeClazz, "SESSION_STATE_RUNNING"); _SESSION_STATE_RUNNINGReady = true; } return _SESSION_STATE_RUNNINGContent; } }
        private static int _SESSION_STATE_RUNNINGContent = default;
        private static bool _SESSION_STATE_RUNNINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdManager.html#SESSION_STATE_STOPPED"/>
        /// </summary>
        public static int SESSION_STATE_STOPPED { get { if (!_SESSION_STATE_STOPPEDReady) { _SESSION_STATE_STOPPEDContent = SGetField<int>(LocalBridgeClazz, "SESSION_STATE_STOPPED"); _SESSION_STATE_STOPPEDReady = true; } return _SESSION_STATE_STOPPEDContent; } }
        private static int _SESSION_STATE_STOPPEDContent = default;
        private static bool _SESSION_STATE_STOPPEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdManager.html#ACTION_APP_LINK_COMMAND"/>
        /// </summary>
        public static Java.Lang.String ACTION_APP_LINK_COMMAND { get { if (!_ACTION_APP_LINK_COMMANDReady) { _ACTION_APP_LINK_COMMANDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_APP_LINK_COMMAND"); _ACTION_APP_LINK_COMMANDReady = true; } return _ACTION_APP_LINK_COMMANDContent; } }
        private static Java.Lang.String _ACTION_APP_LINK_COMMANDContent = default;
        private static bool _ACTION_APP_LINK_COMMANDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdManager.html#APP_LINK_KEY_BACK_URI"/>
        /// </summary>
        public static Java.Lang.String APP_LINK_KEY_BACK_URI { get { if (!_APP_LINK_KEY_BACK_URIReady) { _APP_LINK_KEY_BACK_URIContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "APP_LINK_KEY_BACK_URI"); _APP_LINK_KEY_BACK_URIReady = true; } return _APP_LINK_KEY_BACK_URIContent; } }
        private static Java.Lang.String _APP_LINK_KEY_BACK_URIContent = default;
        private static bool _APP_LINK_KEY_BACK_URIReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdManager.html#APP_LINK_KEY_CLASS_NAME"/>
        /// </summary>
        public static Java.Lang.String APP_LINK_KEY_CLASS_NAME { get { if (!_APP_LINK_KEY_CLASS_NAMEReady) { _APP_LINK_KEY_CLASS_NAMEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "APP_LINK_KEY_CLASS_NAME"); _APP_LINK_KEY_CLASS_NAMEReady = true; } return _APP_LINK_KEY_CLASS_NAMEContent; } }
        private static Java.Lang.String _APP_LINK_KEY_CLASS_NAMEContent = default;
        private static bool _APP_LINK_KEY_CLASS_NAMEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdManager.html#APP_LINK_KEY_COMMAND_TYPE"/>
        /// </summary>
        public static Java.Lang.String APP_LINK_KEY_COMMAND_TYPE { get { if (!_APP_LINK_KEY_COMMAND_TYPEReady) { _APP_LINK_KEY_COMMAND_TYPEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "APP_LINK_KEY_COMMAND_TYPE"); _APP_LINK_KEY_COMMAND_TYPEReady = true; } return _APP_LINK_KEY_COMMAND_TYPEContent; } }
        private static Java.Lang.String _APP_LINK_KEY_COMMAND_TYPEContent = default;
        private static bool _APP_LINK_KEY_COMMAND_TYPEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdManager.html#APP_LINK_KEY_PACKAGE_NAME"/>
        /// </summary>
        public static Java.Lang.String APP_LINK_KEY_PACKAGE_NAME { get { if (!_APP_LINK_KEY_PACKAGE_NAMEReady) { _APP_LINK_KEY_PACKAGE_NAMEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "APP_LINK_KEY_PACKAGE_NAME"); _APP_LINK_KEY_PACKAGE_NAMEReady = true; } return _APP_LINK_KEY_PACKAGE_NAMEContent; } }
        private static Java.Lang.String _APP_LINK_KEY_PACKAGE_NAMEContent = default;
        private static bool _APP_LINK_KEY_PACKAGE_NAMEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdManager.html#APP_LINK_KEY_SERVICE_ID"/>
        /// </summary>
        public static Java.Lang.String APP_LINK_KEY_SERVICE_ID { get { if (!_APP_LINK_KEY_SERVICE_IDReady) { _APP_LINK_KEY_SERVICE_IDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "APP_LINK_KEY_SERVICE_ID"); _APP_LINK_KEY_SERVICE_IDReady = true; } return _APP_LINK_KEY_SERVICE_IDContent; } }
        private static Java.Lang.String _APP_LINK_KEY_SERVICE_IDContent = default;
        private static bool _APP_LINK_KEY_SERVICE_IDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdManager.html#INTENT_KEY_AD_SERVICE_ID"/>
        /// </summary>
        public static Java.Lang.String INTENT_KEY_AD_SERVICE_ID { get { if (!_INTENT_KEY_AD_SERVICE_IDReady) { _INTENT_KEY_AD_SERVICE_IDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "INTENT_KEY_AD_SERVICE_ID"); _INTENT_KEY_AD_SERVICE_IDReady = true; } return _INTENT_KEY_AD_SERVICE_IDContent; } }
        private static Java.Lang.String _INTENT_KEY_AD_SERVICE_IDContent = default;
        private static bool _INTENT_KEY_AD_SERVICE_IDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdManager.html#INTENT_KEY_CHANNEL_URI"/>
        /// </summary>
        public static Java.Lang.String INTENT_KEY_CHANNEL_URI { get { if (!_INTENT_KEY_CHANNEL_URIReady) { _INTENT_KEY_CHANNEL_URIContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "INTENT_KEY_CHANNEL_URI"); _INTENT_KEY_CHANNEL_URIReady = true; } return _INTENT_KEY_CHANNEL_URIContent; } }
        private static Java.Lang.String _INTENT_KEY_CHANNEL_URIContent = default;
        private static bool _INTENT_KEY_CHANNEL_URIReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdManager.html#INTENT_KEY_COMMAND_TYPE"/>
        /// </summary>
        public static Java.Lang.String INTENT_KEY_COMMAND_TYPE { get { if (!_INTENT_KEY_COMMAND_TYPEReady) { _INTENT_KEY_COMMAND_TYPEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "INTENT_KEY_COMMAND_TYPE"); _INTENT_KEY_COMMAND_TYPEReady = true; } return _INTENT_KEY_COMMAND_TYPEContent; } }
        private static Java.Lang.String _INTENT_KEY_COMMAND_TYPEContent = default;
        private static bool _INTENT_KEY_COMMAND_TYPEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdManager.html#INTENT_KEY_TV_INPUT_ID"/>
        /// </summary>
        public static Java.Lang.String INTENT_KEY_TV_INPUT_ID { get { if (!_INTENT_KEY_TV_INPUT_IDReady) { _INTENT_KEY_TV_INPUT_IDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "INTENT_KEY_TV_INPUT_ID"); _INTENT_KEY_TV_INPUT_IDReady = true; } return _INTENT_KEY_TV_INPUT_IDContent; } }
        private static Java.Lang.String _INTENT_KEY_TV_INPUT_IDContent = default;
        private static bool _INTENT_KEY_TV_INPUT_IDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdManager.html#SESSION_DATA_KEY_AD_BUFFER"/>
        /// </summary>
        public static Java.Lang.String SESSION_DATA_KEY_AD_BUFFER { get { if (!_SESSION_DATA_KEY_AD_BUFFERReady) { _SESSION_DATA_KEY_AD_BUFFERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SESSION_DATA_KEY_AD_BUFFER"); _SESSION_DATA_KEY_AD_BUFFERReady = true; } return _SESSION_DATA_KEY_AD_BUFFERContent; } }
        private static Java.Lang.String _SESSION_DATA_KEY_AD_BUFFERContent = default;
        private static bool _SESSION_DATA_KEY_AD_BUFFERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdManager.html#SESSION_DATA_KEY_AD_REQUEST"/>
        /// </summary>
        public static Java.Lang.String SESSION_DATA_KEY_AD_REQUEST { get { if (!_SESSION_DATA_KEY_AD_REQUESTReady) { _SESSION_DATA_KEY_AD_REQUESTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SESSION_DATA_KEY_AD_REQUEST"); _SESSION_DATA_KEY_AD_REQUESTReady = true; } return _SESSION_DATA_KEY_AD_REQUESTContent; } }
        private static Java.Lang.String _SESSION_DATA_KEY_AD_REQUESTContent = default;
        private static bool _SESSION_DATA_KEY_AD_REQUESTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdManager.html#SESSION_DATA_KEY_BROADCAST_INFO_REQUEST"/>
        /// </summary>
        public static Java.Lang.String SESSION_DATA_KEY_BROADCAST_INFO_REQUEST { get { if (!_SESSION_DATA_KEY_BROADCAST_INFO_REQUESTReady) { _SESSION_DATA_KEY_BROADCAST_INFO_REQUESTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SESSION_DATA_KEY_BROADCAST_INFO_REQUEST"); _SESSION_DATA_KEY_BROADCAST_INFO_REQUESTReady = true; } return _SESSION_DATA_KEY_BROADCAST_INFO_REQUESTContent; } }
        private static Java.Lang.String _SESSION_DATA_KEY_BROADCAST_INFO_REQUESTContent = default;
        private static bool _SESSION_DATA_KEY_BROADCAST_INFO_REQUESTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdManager.html#SESSION_DATA_KEY_REQUEST_ID"/>
        /// </summary>
        public static Java.Lang.String SESSION_DATA_KEY_REQUEST_ID { get { if (!_SESSION_DATA_KEY_REQUEST_IDReady) { _SESSION_DATA_KEY_REQUEST_IDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SESSION_DATA_KEY_REQUEST_ID"); _SESSION_DATA_KEY_REQUEST_IDReady = true; } return _SESSION_DATA_KEY_REQUEST_IDContent; } }
        private static Java.Lang.String _SESSION_DATA_KEY_REQUEST_IDContent = default;
        private static bool _SESSION_DATA_KEY_REQUEST_IDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdManager.html#SESSION_DATA_TYPE_AD_BUFFER_READY"/>
        /// </summary>
        public static Java.Lang.String SESSION_DATA_TYPE_AD_BUFFER_READY { get { if (!_SESSION_DATA_TYPE_AD_BUFFER_READYReady) { _SESSION_DATA_TYPE_AD_BUFFER_READYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SESSION_DATA_TYPE_AD_BUFFER_READY"); _SESSION_DATA_TYPE_AD_BUFFER_READYReady = true; } return _SESSION_DATA_TYPE_AD_BUFFER_READYContent; } }
        private static Java.Lang.String _SESSION_DATA_TYPE_AD_BUFFER_READYContent = default;
        private static bool _SESSION_DATA_TYPE_AD_BUFFER_READYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdManager.html#SESSION_DATA_TYPE_AD_REQUEST"/>
        /// </summary>
        public static Java.Lang.String SESSION_DATA_TYPE_AD_REQUEST { get { if (!_SESSION_DATA_TYPE_AD_REQUESTReady) { _SESSION_DATA_TYPE_AD_REQUESTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SESSION_DATA_TYPE_AD_REQUEST"); _SESSION_DATA_TYPE_AD_REQUESTReady = true; } return _SESSION_DATA_TYPE_AD_REQUESTContent; } }
        private static Java.Lang.String _SESSION_DATA_TYPE_AD_REQUESTContent = default;
        private static bool _SESSION_DATA_TYPE_AD_REQUESTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdManager.html#SESSION_DATA_TYPE_BROADCAST_INFO_REQUEST"/>
        /// </summary>
        public static Java.Lang.String SESSION_DATA_TYPE_BROADCAST_INFO_REQUEST { get { if (!_SESSION_DATA_TYPE_BROADCAST_INFO_REQUESTReady) { _SESSION_DATA_TYPE_BROADCAST_INFO_REQUESTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SESSION_DATA_TYPE_BROADCAST_INFO_REQUEST"); _SESSION_DATA_TYPE_BROADCAST_INFO_REQUESTReady = true; } return _SESSION_DATA_TYPE_BROADCAST_INFO_REQUESTContent; } }
        private static Java.Lang.String _SESSION_DATA_TYPE_BROADCAST_INFO_REQUESTContent = default;
        private static bool _SESSION_DATA_TYPE_BROADCAST_INFO_REQUESTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdManager.html#SESSION_DATA_TYPE_REMOVE_BROADCAST_INFO_REQUEST"/>
        /// </summary>
        public static Java.Lang.String SESSION_DATA_TYPE_REMOVE_BROADCAST_INFO_REQUEST { get { if (!_SESSION_DATA_TYPE_REMOVE_BROADCAST_INFO_REQUESTReady) { _SESSION_DATA_TYPE_REMOVE_BROADCAST_INFO_REQUESTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SESSION_DATA_TYPE_REMOVE_BROADCAST_INFO_REQUEST"); _SESSION_DATA_TYPE_REMOVE_BROADCAST_INFO_REQUESTReady = true; } return _SESSION_DATA_TYPE_REMOVE_BROADCAST_INFO_REQUESTContent; } }
        private static Java.Lang.String _SESSION_DATA_TYPE_REMOVE_BROADCAST_INFO_REQUESTContent = default;
        private static bool _SESSION_DATA_TYPE_REMOVE_BROADCAST_INFO_REQUESTReady = false; // this is used because in case of generics 
    
        #endregion
    
        #region Static methods
    
        #endregion
    
        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdManager.html#getTvAdServiceList()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.List"/></returns>
        public Java.Util.List<Android.Media.Tv.Ad.TvAdServiceInfo> GetTvAdServiceList()
        {
            return IExecuteWithSignature<Java.Util.List<Android.Media.Tv.Ad.TvAdServiceInfo>>("getTvAdServiceList", "()Ljava/util/List;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdManager.html#registerCallback(java.util.concurrent.Executor,android.media.tv.ad.TvAdManager.TvAdServiceCallback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Concurrent.Executor"/></param>
        /// <param name="arg1"><see cref="Android.Media.Tv.Ad.TvAdManager.TvAdServiceCallback"/></param>
        public void RegisterCallback(Java.Util.Concurrent.Executor arg0, Android.Media.Tv.Ad.TvAdManager.TvAdServiceCallback arg1)
        {
            IExecuteWithSignature("registerCallback", "(Ljava/util/concurrent/Executor;Landroid/media/tv/ad/TvAdManager$TvAdServiceCallback;)V", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdManager.html#sendAppLinkCommand(java.lang.String,android.os.Bundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Android.Os.Bundle"/></param>
        public void SendAppLinkCommand(Java.Lang.String arg0, Android.Os.Bundle arg1)
        {
            IExecuteWithSignature("sendAppLinkCommand", "(Ljava/lang/String;Landroid/os/Bundle;)V", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdManager.html#unregisterCallback(android.media.tv.ad.TvAdManager.TvAdServiceCallback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Media.Tv.Ad.TvAdManager.TvAdServiceCallback"/></param>
        public void UnregisterCallback(Android.Media.Tv.Ad.TvAdManager.TvAdServiceCallback arg0)
        {
            IExecuteWithSignature("unregisterCallback", "(Landroid/media/tv/ad/TvAdManager$TvAdServiceCallback;)V", arg0);
        }
    
        #endregion
    
        #region Nested classes
        #region TvAdServiceCallback implementation
        public partial class TvAdServiceCallback
        {
            #region Constructors
        
            #endregion
        
            #region Class/Interface conversion operators
        
            #endregion
        
            #region Fields
        
            #endregion
        
            #region Static methods
        
            #endregion
        
            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdManager.TvAdServiceCallback.html#onAdServiceAdded(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            public void OnAdServiceAdded(Java.Lang.String arg0)
            {
                IExecuteWithSignature("onAdServiceAdded", "(Ljava/lang/String;)V", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdManager.TvAdServiceCallback.html#onAdServiceRemoved(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            public void OnAdServiceRemoved(Java.Lang.String arg0)
            {
                IExecuteWithSignature("onAdServiceRemoved", "(Ljava/lang/String;)V", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/ad/TvAdManager.TvAdServiceCallback.html#onAdServiceUpdated(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            public void OnAdServiceUpdated(Java.Lang.String arg0)
            {
                IExecuteWithSignature("onAdServiceUpdated", "(Ljava/lang/String;)V", arg0);
            }
        
            #endregion
        
            #region Nested classes
        
            #endregion
        
            // TODO: complete the class
        }
        #endregion

    
        #endregion
    
        // TODO: complete the class
    }
    #endregion
}