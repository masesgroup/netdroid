/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.5.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Media.Tv.Interactive
{
    #region TvInteractiveAppManager
    public partial class TvInteractiveAppManager
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/interactive/TvInteractiveAppManager.html#ERROR_BLOCKED"/>
        /// </summary>
        public static int ERROR_BLOCKED { get { if (!_ERROR_BLOCKEDReady) { _ERROR_BLOCKEDContent = SGetField<int>(LocalBridgeClazz, "ERROR_BLOCKED"); _ERROR_BLOCKEDReady = true; } return _ERROR_BLOCKEDContent; } }
        private static int _ERROR_BLOCKEDContent = default;
        private static bool _ERROR_BLOCKEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/interactive/TvInteractiveAppManager.html#ERROR_ENCRYPTED"/>
        /// </summary>
        public static int ERROR_ENCRYPTED { get { if (!_ERROR_ENCRYPTEDReady) { _ERROR_ENCRYPTEDContent = SGetField<int>(LocalBridgeClazz, "ERROR_ENCRYPTED"); _ERROR_ENCRYPTEDReady = true; } return _ERROR_ENCRYPTEDContent; } }
        private static int _ERROR_ENCRYPTEDContent = default;
        private static bool _ERROR_ENCRYPTEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/interactive/TvInteractiveAppManager.html#ERROR_NONE"/>
        /// </summary>
        public static int ERROR_NONE { get { if (!_ERROR_NONEReady) { _ERROR_NONEContent = SGetField<int>(LocalBridgeClazz, "ERROR_NONE"); _ERROR_NONEReady = true; } return _ERROR_NONEContent; } }
        private static int _ERROR_NONEContent = default;
        private static bool _ERROR_NONEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/interactive/TvInteractiveAppManager.html#ERROR_NOT_SUPPORTED"/>
        /// </summary>
        public static int ERROR_NOT_SUPPORTED { get { if (!_ERROR_NOT_SUPPORTEDReady) { _ERROR_NOT_SUPPORTEDContent = SGetField<int>(LocalBridgeClazz, "ERROR_NOT_SUPPORTED"); _ERROR_NOT_SUPPORTEDReady = true; } return _ERROR_NOT_SUPPORTEDContent; } }
        private static int _ERROR_NOT_SUPPORTEDContent = default;
        private static bool _ERROR_NOT_SUPPORTEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/interactive/TvInteractiveAppManager.html#ERROR_RESOURCE_UNAVAILABLE"/>
        /// </summary>
        public static int ERROR_RESOURCE_UNAVAILABLE { get { if (!_ERROR_RESOURCE_UNAVAILABLEReady) { _ERROR_RESOURCE_UNAVAILABLEContent = SGetField<int>(LocalBridgeClazz, "ERROR_RESOURCE_UNAVAILABLE"); _ERROR_RESOURCE_UNAVAILABLEReady = true; } return _ERROR_RESOURCE_UNAVAILABLEContent; } }
        private static int _ERROR_RESOURCE_UNAVAILABLEContent = default;
        private static bool _ERROR_RESOURCE_UNAVAILABLEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/interactive/TvInteractiveAppManager.html#ERROR_UNKNOWN"/>
        /// </summary>
        public static int ERROR_UNKNOWN { get { if (!_ERROR_UNKNOWNReady) { _ERROR_UNKNOWNContent = SGetField<int>(LocalBridgeClazz, "ERROR_UNKNOWN"); _ERROR_UNKNOWNReady = true; } return _ERROR_UNKNOWNContent; } }
        private static int _ERROR_UNKNOWNContent = default;
        private static bool _ERROR_UNKNOWNReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/interactive/TvInteractiveAppManager.html#ERROR_UNKNOWN_CHANNEL"/>
        /// </summary>
        public static int ERROR_UNKNOWN_CHANNEL { get { if (!_ERROR_UNKNOWN_CHANNELReady) { _ERROR_UNKNOWN_CHANNELContent = SGetField<int>(LocalBridgeClazz, "ERROR_UNKNOWN_CHANNEL"); _ERROR_UNKNOWN_CHANNELReady = true; } return _ERROR_UNKNOWN_CHANNELContent; } }
        private static int _ERROR_UNKNOWN_CHANNELContent = default;
        private static bool _ERROR_UNKNOWN_CHANNELReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/interactive/TvInteractiveAppManager.html#ERROR_WEAK_SIGNAL"/>
        /// </summary>
        public static int ERROR_WEAK_SIGNAL { get { if (!_ERROR_WEAK_SIGNALReady) { _ERROR_WEAK_SIGNALContent = SGetField<int>(LocalBridgeClazz, "ERROR_WEAK_SIGNAL"); _ERROR_WEAK_SIGNALReady = true; } return _ERROR_WEAK_SIGNALContent; } }
        private static int _ERROR_WEAK_SIGNALContent = default;
        private static bool _ERROR_WEAK_SIGNALReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/interactive/TvInteractiveAppManager.html#INTERACTIVE_APP_STATE_ERROR"/>
        /// </summary>
        public static int INTERACTIVE_APP_STATE_ERROR { get { if (!_INTERACTIVE_APP_STATE_ERRORReady) { _INTERACTIVE_APP_STATE_ERRORContent = SGetField<int>(LocalBridgeClazz, "INTERACTIVE_APP_STATE_ERROR"); _INTERACTIVE_APP_STATE_ERRORReady = true; } return _INTERACTIVE_APP_STATE_ERRORContent; } }
        private static int _INTERACTIVE_APP_STATE_ERRORContent = default;
        private static bool _INTERACTIVE_APP_STATE_ERRORReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/interactive/TvInteractiveAppManager.html#INTERACTIVE_APP_STATE_RUNNING"/>
        /// </summary>
        public static int INTERACTIVE_APP_STATE_RUNNING { get { if (!_INTERACTIVE_APP_STATE_RUNNINGReady) { _INTERACTIVE_APP_STATE_RUNNINGContent = SGetField<int>(LocalBridgeClazz, "INTERACTIVE_APP_STATE_RUNNING"); _INTERACTIVE_APP_STATE_RUNNINGReady = true; } return _INTERACTIVE_APP_STATE_RUNNINGContent; } }
        private static int _INTERACTIVE_APP_STATE_RUNNINGContent = default;
        private static bool _INTERACTIVE_APP_STATE_RUNNINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/interactive/TvInteractiveAppManager.html#INTERACTIVE_APP_STATE_STOPPED"/>
        /// </summary>
        public static int INTERACTIVE_APP_STATE_STOPPED { get { if (!_INTERACTIVE_APP_STATE_STOPPEDReady) { _INTERACTIVE_APP_STATE_STOPPEDContent = SGetField<int>(LocalBridgeClazz, "INTERACTIVE_APP_STATE_STOPPED"); _INTERACTIVE_APP_STATE_STOPPEDReady = true; } return _INTERACTIVE_APP_STATE_STOPPEDContent; } }
        private static int _INTERACTIVE_APP_STATE_STOPPEDContent = default;
        private static bool _INTERACTIVE_APP_STATE_STOPPEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/interactive/TvInteractiveAppManager.html#SERVICE_STATE_ERROR"/>
        /// </summary>
        public static int SERVICE_STATE_ERROR { get { if (!_SERVICE_STATE_ERRORReady) { _SERVICE_STATE_ERRORContent = SGetField<int>(LocalBridgeClazz, "SERVICE_STATE_ERROR"); _SERVICE_STATE_ERRORReady = true; } return _SERVICE_STATE_ERRORContent; } }
        private static int _SERVICE_STATE_ERRORContent = default;
        private static bool _SERVICE_STATE_ERRORReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/interactive/TvInteractiveAppManager.html#SERVICE_STATE_PREPARING"/>
        /// </summary>
        public static int SERVICE_STATE_PREPARING { get { if (!_SERVICE_STATE_PREPARINGReady) { _SERVICE_STATE_PREPARINGContent = SGetField<int>(LocalBridgeClazz, "SERVICE_STATE_PREPARING"); _SERVICE_STATE_PREPARINGReady = true; } return _SERVICE_STATE_PREPARINGContent; } }
        private static int _SERVICE_STATE_PREPARINGContent = default;
        private static bool _SERVICE_STATE_PREPARINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/interactive/TvInteractiveAppManager.html#SERVICE_STATE_READY"/>
        /// </summary>
        public static int SERVICE_STATE_READY { get { if (!_SERVICE_STATE_READYReady) { _SERVICE_STATE_READYContent = SGetField<int>(LocalBridgeClazz, "SERVICE_STATE_READY"); _SERVICE_STATE_READYReady = true; } return _SERVICE_STATE_READYContent; } }
        private static int _SERVICE_STATE_READYContent = default;
        private static bool _SERVICE_STATE_READYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/interactive/TvInteractiveAppManager.html#SERVICE_STATE_UNREALIZED"/>
        /// </summary>
        public static int SERVICE_STATE_UNREALIZED { get { if (!_SERVICE_STATE_UNREALIZEDReady) { _SERVICE_STATE_UNREALIZEDContent = SGetField<int>(LocalBridgeClazz, "SERVICE_STATE_UNREALIZED"); _SERVICE_STATE_UNREALIZEDReady = true; } return _SERVICE_STATE_UNREALIZEDContent; } }
        private static int _SERVICE_STATE_UNREALIZEDContent = default;
        private static bool _SERVICE_STATE_UNREALIZEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/interactive/TvInteractiveAppManager.html#TELETEXT_APP_STATE_ERROR"/>
        /// </summary>
        public static int TELETEXT_APP_STATE_ERROR { get { if (!_TELETEXT_APP_STATE_ERRORReady) { _TELETEXT_APP_STATE_ERRORContent = SGetField<int>(LocalBridgeClazz, "TELETEXT_APP_STATE_ERROR"); _TELETEXT_APP_STATE_ERRORReady = true; } return _TELETEXT_APP_STATE_ERRORContent; } }
        private static int _TELETEXT_APP_STATE_ERRORContent = default;
        private static bool _TELETEXT_APP_STATE_ERRORReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/interactive/TvInteractiveAppManager.html#TELETEXT_APP_STATE_HIDE"/>
        /// </summary>
        public static int TELETEXT_APP_STATE_HIDE { get { if (!_TELETEXT_APP_STATE_HIDEReady) { _TELETEXT_APP_STATE_HIDEContent = SGetField<int>(LocalBridgeClazz, "TELETEXT_APP_STATE_HIDE"); _TELETEXT_APP_STATE_HIDEReady = true; } return _TELETEXT_APP_STATE_HIDEContent; } }
        private static int _TELETEXT_APP_STATE_HIDEContent = default;
        private static bool _TELETEXT_APP_STATE_HIDEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/interactive/TvInteractiveAppManager.html#TELETEXT_APP_STATE_SHOW"/>
        /// </summary>
        public static int TELETEXT_APP_STATE_SHOW { get { if (!_TELETEXT_APP_STATE_SHOWReady) { _TELETEXT_APP_STATE_SHOWContent = SGetField<int>(LocalBridgeClazz, "TELETEXT_APP_STATE_SHOW"); _TELETEXT_APP_STATE_SHOWReady = true; } return _TELETEXT_APP_STATE_SHOWContent; } }
        private static int _TELETEXT_APP_STATE_SHOWContent = default;
        private static bool _TELETEXT_APP_STATE_SHOWReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/interactive/TvInteractiveAppManager.html#ACTION_APP_LINK_COMMAND"/>
        /// </summary>
        public static Java.Lang.String ACTION_APP_LINK_COMMAND { get { if (!_ACTION_APP_LINK_COMMANDReady) { _ACTION_APP_LINK_COMMANDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_APP_LINK_COMMAND"); _ACTION_APP_LINK_COMMANDReady = true; } return _ACTION_APP_LINK_COMMANDContent; } }
        private static Java.Lang.String _ACTION_APP_LINK_COMMANDContent = default;
        private static bool _ACTION_APP_LINK_COMMANDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/interactive/TvInteractiveAppManager.html#APP_LINK_KEY_BACK_URI"/>
        /// </summary>
        public static Java.Lang.String APP_LINK_KEY_BACK_URI { get { if (!_APP_LINK_KEY_BACK_URIReady) { _APP_LINK_KEY_BACK_URIContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "APP_LINK_KEY_BACK_URI"); _APP_LINK_KEY_BACK_URIReady = true; } return _APP_LINK_KEY_BACK_URIContent; } }
        private static Java.Lang.String _APP_LINK_KEY_BACK_URIContent = default;
        private static bool _APP_LINK_KEY_BACK_URIReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/interactive/TvInteractiveAppManager.html#APP_LINK_KEY_CLASS_NAME"/>
        /// </summary>
        public static Java.Lang.String APP_LINK_KEY_CLASS_NAME { get { if (!_APP_LINK_KEY_CLASS_NAMEReady) { _APP_LINK_KEY_CLASS_NAMEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "APP_LINK_KEY_CLASS_NAME"); _APP_LINK_KEY_CLASS_NAMEReady = true; } return _APP_LINK_KEY_CLASS_NAMEContent; } }
        private static Java.Lang.String _APP_LINK_KEY_CLASS_NAMEContent = default;
        private static bool _APP_LINK_KEY_CLASS_NAMEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/interactive/TvInteractiveAppManager.html#APP_LINK_KEY_COMMAND_TYPE"/>
        /// </summary>
        public static Java.Lang.String APP_LINK_KEY_COMMAND_TYPE { get { if (!_APP_LINK_KEY_COMMAND_TYPEReady) { _APP_LINK_KEY_COMMAND_TYPEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "APP_LINK_KEY_COMMAND_TYPE"); _APP_LINK_KEY_COMMAND_TYPEReady = true; } return _APP_LINK_KEY_COMMAND_TYPEContent; } }
        private static Java.Lang.String _APP_LINK_KEY_COMMAND_TYPEContent = default;
        private static bool _APP_LINK_KEY_COMMAND_TYPEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/interactive/TvInteractiveAppManager.html#APP_LINK_KEY_PACKAGE_NAME"/>
        /// </summary>
        public static Java.Lang.String APP_LINK_KEY_PACKAGE_NAME { get { if (!_APP_LINK_KEY_PACKAGE_NAMEReady) { _APP_LINK_KEY_PACKAGE_NAMEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "APP_LINK_KEY_PACKAGE_NAME"); _APP_LINK_KEY_PACKAGE_NAMEReady = true; } return _APP_LINK_KEY_PACKAGE_NAMEContent; } }
        private static Java.Lang.String _APP_LINK_KEY_PACKAGE_NAMEContent = default;
        private static bool _APP_LINK_KEY_PACKAGE_NAMEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/interactive/TvInteractiveAppManager.html#APP_LINK_KEY_SERVICE_ID"/>
        /// </summary>
        public static Java.Lang.String APP_LINK_KEY_SERVICE_ID { get { if (!_APP_LINK_KEY_SERVICE_IDReady) { _APP_LINK_KEY_SERVICE_IDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "APP_LINK_KEY_SERVICE_ID"); _APP_LINK_KEY_SERVICE_IDReady = true; } return _APP_LINK_KEY_SERVICE_IDContent; } }
        private static Java.Lang.String _APP_LINK_KEY_SERVICE_IDContent = default;
        private static bool _APP_LINK_KEY_SERVICE_IDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/interactive/TvInteractiveAppManager.html#INTENT_KEY_BI_INTERACTIVE_APP_TYPE"/>
        /// </summary>
        public static Java.Lang.String INTENT_KEY_BI_INTERACTIVE_APP_TYPE { get { if (!_INTENT_KEY_BI_INTERACTIVE_APP_TYPEReady) { _INTENT_KEY_BI_INTERACTIVE_APP_TYPEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "INTENT_KEY_BI_INTERACTIVE_APP_TYPE"); _INTENT_KEY_BI_INTERACTIVE_APP_TYPEReady = true; } return _INTENT_KEY_BI_INTERACTIVE_APP_TYPEContent; } }
        private static Java.Lang.String _INTENT_KEY_BI_INTERACTIVE_APP_TYPEContent = default;
        private static bool _INTENT_KEY_BI_INTERACTIVE_APP_TYPEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/interactive/TvInteractiveAppManager.html#INTENT_KEY_BI_INTERACTIVE_APP_URI"/>
        /// </summary>
        public static Java.Lang.String INTENT_KEY_BI_INTERACTIVE_APP_URI { get { if (!_INTENT_KEY_BI_INTERACTIVE_APP_URIReady) { _INTENT_KEY_BI_INTERACTIVE_APP_URIContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "INTENT_KEY_BI_INTERACTIVE_APP_URI"); _INTENT_KEY_BI_INTERACTIVE_APP_URIReady = true; } return _INTENT_KEY_BI_INTERACTIVE_APP_URIContent; } }
        private static Java.Lang.String _INTENT_KEY_BI_INTERACTIVE_APP_URIContent = default;
        private static bool _INTENT_KEY_BI_INTERACTIVE_APP_URIReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/interactive/TvInteractiveAppManager.html#INTENT_KEY_CHANNEL_URI"/>
        /// </summary>
        public static Java.Lang.String INTENT_KEY_CHANNEL_URI { get { if (!_INTENT_KEY_CHANNEL_URIReady) { _INTENT_KEY_CHANNEL_URIContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "INTENT_KEY_CHANNEL_URI"); _INTENT_KEY_CHANNEL_URIReady = true; } return _INTENT_KEY_CHANNEL_URIContent; } }
        private static Java.Lang.String _INTENT_KEY_CHANNEL_URIContent = default;
        private static bool _INTENT_KEY_CHANNEL_URIReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/interactive/TvInteractiveAppManager.html#INTENT_KEY_COMMAND_TYPE"/>
        /// </summary>
        public static Java.Lang.String INTENT_KEY_COMMAND_TYPE { get { if (!_INTENT_KEY_COMMAND_TYPEReady) { _INTENT_KEY_COMMAND_TYPEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "INTENT_KEY_COMMAND_TYPE"); _INTENT_KEY_COMMAND_TYPEReady = true; } return _INTENT_KEY_COMMAND_TYPEContent; } }
        private static Java.Lang.String _INTENT_KEY_COMMAND_TYPEContent = default;
        private static bool _INTENT_KEY_COMMAND_TYPEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/interactive/TvInteractiveAppManager.html#INTENT_KEY_INTERACTIVE_APP_SERVICE_ID"/>
        /// </summary>
        public static Java.Lang.String INTENT_KEY_INTERACTIVE_APP_SERVICE_ID { get { if (!_INTENT_KEY_INTERACTIVE_APP_SERVICE_IDReady) { _INTENT_KEY_INTERACTIVE_APP_SERVICE_IDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "INTENT_KEY_INTERACTIVE_APP_SERVICE_ID"); _INTENT_KEY_INTERACTIVE_APP_SERVICE_IDReady = true; } return _INTENT_KEY_INTERACTIVE_APP_SERVICE_IDContent; } }
        private static Java.Lang.String _INTENT_KEY_INTERACTIVE_APP_SERVICE_IDContent = default;
        private static bool _INTENT_KEY_INTERACTIVE_APP_SERVICE_IDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/interactive/TvInteractiveAppManager.html#INTENT_KEY_TV_INPUT_ID"/>
        /// </summary>
        public static Java.Lang.String INTENT_KEY_TV_INPUT_ID { get { if (!_INTENT_KEY_TV_INPUT_IDReady) { _INTENT_KEY_TV_INPUT_IDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "INTENT_KEY_TV_INPUT_ID"); _INTENT_KEY_TV_INPUT_IDReady = true; } return _INTENT_KEY_TV_INPUT_IDContent; } }
        private static Java.Lang.String _INTENT_KEY_TV_INPUT_IDContent = default;
        private static bool _INTENT_KEY_TV_INPUT_IDReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/interactive/TvInteractiveAppManager.html#getAppLinkInfoList()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.List"/></returns>
        public Java.Util.List<Android.Media.Tv.Interactive.AppLinkInfo> GetAppLinkInfoList()
        {
            return IExecuteWithSignature<Java.Util.List<Android.Media.Tv.Interactive.AppLinkInfo>>("getAppLinkInfoList", "()Ljava/util/List;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/interactive/TvInteractiveAppManager.html#getTvInteractiveAppServiceList()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.List"/></returns>
        public Java.Util.List<Android.Media.Tv.Interactive.TvInteractiveAppServiceInfo> GetTvInteractiveAppServiceList()
        {
            return IExecuteWithSignature<Java.Util.List<Android.Media.Tv.Interactive.TvInteractiveAppServiceInfo>>("getTvInteractiveAppServiceList", "()Ljava/util/List;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/interactive/TvInteractiveAppManager.html#registerAppLinkInfo(java.lang.String,android.media.tv.interactive.AppLinkInfo)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Android.Media.Tv.Interactive.AppLinkInfo"/></param>
        public void RegisterAppLinkInfo(Java.Lang.String arg0, Android.Media.Tv.Interactive.AppLinkInfo arg1)
        {
            IExecute("registerAppLinkInfo", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/interactive/TvInteractiveAppManager.html#registerCallback(java.util.concurrent.Executor,android.media.tv.interactive.TvInteractiveAppManager.TvInteractiveAppCallback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Concurrent.Executor"/></param>
        /// <param name="arg1"><see cref="Android.Media.Tv.Interactive.TvInteractiveAppManager.TvInteractiveAppCallback"/></param>
        public void RegisterCallback(Java.Util.Concurrent.Executor arg0, Android.Media.Tv.Interactive.TvInteractiveAppManager.TvInteractiveAppCallback arg1)
        {
            IExecute("registerCallback", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/interactive/TvInteractiveAppManager.html#sendAppLinkCommand(java.lang.String,android.os.Bundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Android.Os.Bundle"/></param>
        public void SendAppLinkCommand(Java.Lang.String arg0, Android.Os.Bundle arg1)
        {
            IExecute("sendAppLinkCommand", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/interactive/TvInteractiveAppManager.html#unregisterAppLinkInfo(java.lang.String,android.media.tv.interactive.AppLinkInfo)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Android.Media.Tv.Interactive.AppLinkInfo"/></param>
        public void UnregisterAppLinkInfo(Java.Lang.String arg0, Android.Media.Tv.Interactive.AppLinkInfo arg1)
        {
            IExecute("unregisterAppLinkInfo", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/interactive/TvInteractiveAppManager.html#unregisterCallback(android.media.tv.interactive.TvInteractiveAppManager.TvInteractiveAppCallback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Media.Tv.Interactive.TvInteractiveAppManager.TvInteractiveAppCallback"/></param>
        public void UnregisterCallback(Android.Media.Tv.Interactive.TvInteractiveAppManager.TvInteractiveAppCallback arg0)
        {
            IExecuteWithSignature("unregisterCallback", "(Landroid/media/tv/interactive/TvInteractiveAppManager$TvInteractiveAppCallback;)V", arg0);
        }

        #endregion

        #region Nested classes
        #region TvInteractiveAppCallback
        public partial class TvInteractiveAppCallback
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/interactive/TvInteractiveAppManager.TvInteractiveAppCallback.html#onInteractiveAppServiceAdded(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            public void OnInteractiveAppServiceAdded(Java.Lang.String arg0)
            {
                IExecuteWithSignature("onInteractiveAppServiceAdded", "(Ljava/lang/String;)V", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/interactive/TvInteractiveAppManager.TvInteractiveAppCallback.html#onInteractiveAppServiceRemoved(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            public void OnInteractiveAppServiceRemoved(Java.Lang.String arg0)
            {
                IExecuteWithSignature("onInteractiveAppServiceRemoved", "(Ljava/lang/String;)V", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/interactive/TvInteractiveAppManager.TvInteractiveAppCallback.html#onInteractiveAppServiceUpdated(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            public void OnInteractiveAppServiceUpdated(Java.Lang.String arg0)
            {
                IExecuteWithSignature("onInteractiveAppServiceUpdated", "(Ljava/lang/String;)V", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/tv/interactive/TvInteractiveAppManager.TvInteractiveAppCallback.html#onTvInteractiveAppServiceStateChanged(java.lang.String,int,int,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            /// <param name="arg2"><see cref="int"/></param>
            /// <param name="arg3"><see cref="int"/></param>
            public void OnTvInteractiveAppServiceStateChanged(Java.Lang.String arg0, int arg1, int arg2, int arg3)
            {
                IExecute("onTvInteractiveAppServiceStateChanged", arg0, arg1, arg2, arg3);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}