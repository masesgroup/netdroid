/*
*  Copyright (c) 2024-2025 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.6.4.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Media.Tv
{
    #region SignalingDataRequest declaration
    /// <summary>
    /// <see href="https://developer.android.com/reference/android/media/tv/SignalingDataRequest.html"/>
    /// </summary>
    public partial class SignalingDataRequest : Android.Media.Tv.BroadcastInfoRequest
    {
        const string _bridgeClassName = "android.media.tv.SignalingDataRequest";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public SignalingDataRequest() { }
        /// <summary>
        /// Internal constructor: used internally from JCOBridge
        /// </summary>
        [global::System.Obsolete("This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public SignalingDataRequest(IJVMBridgeBaseInitializer initializer) : base(initializer) { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public SignalingDataRequest(params object[] args) : base(args) { }
    
        private static readonly global::System.Exception _LocalBridgeClazzException = null;
        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, out _LocalBridgeClazzException, false);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw _LocalBridgeClazzException ?? new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
    
        /// <inheritdoc/>
        public override string BridgeClassName => _bridgeClassName;
        /// <inheritdoc/>
        public override bool IsBridgeAbstract => false;
        /// <inheritdoc/>
        public override bool IsBridgeCloseable => false;
        /// <inheritdoc/>
        public override bool IsBridgeInterface => false;
        /// <inheritdoc/>
        public override bool IsBridgeStatic => false;
    
        // TODO: complete the class
    
    }
    #endregion

    #region SignalingDataRequest implementation
    public partial class SignalingDataRequest
    {
        #region Constructors
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/SignalingDataRequest.html#%3Cinit%3E(int,int,int,java.util.List)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <param name="arg3"><see cref="Java.Util.List"/></param>
        public SignalingDataRequest(int arg0, int arg1, int arg2, Java.Util.List<Java.Lang.String> arg3)
            : base(arg0, arg1, arg2, arg3)
        {
        }
    
        #endregion
    
        #region Class/Interface conversion operators
    
        #endregion
    
        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/SignalingDataRequest.html#CREATOR"/>
        /// </summary>
        public static Android.Os.Parcelable.Creator CREATOR { get { if (!_CREATORReady) { _CREATORContent = SGetField<Android.Os.Parcelable.Creator>(LocalBridgeClazz, "CREATOR"); _CREATORReady = true; } return _CREATORContent; } }
        private static Android.Os.Parcelable.Creator _CREATORContent = default;
        private static bool _CREATORReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/SignalingDataRequest.html#SIGNALING_DATA_NO_GROUP_ID"/>
        /// </summary>
        public static int SIGNALING_DATA_NO_GROUP_ID { get { if (!_SIGNALING_DATA_NO_GROUP_IDReady) { _SIGNALING_DATA_NO_GROUP_IDContent = SGetField<int>(LocalBridgeClazz, "SIGNALING_DATA_NO_GROUP_ID"); _SIGNALING_DATA_NO_GROUP_IDReady = true; } return _SIGNALING_DATA_NO_GROUP_IDContent; } }
        private static int _SIGNALING_DATA_NO_GROUP_IDContent = default;
        private static bool _SIGNALING_DATA_NO_GROUP_IDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/SignalingDataRequest.html#SIGNALING_METADATA_AEAT"/>
        /// </summary>
        public static Java.Lang.String SIGNALING_METADATA_AEAT { get { if (!_SIGNALING_METADATA_AEATReady) { _SIGNALING_METADATA_AEATContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SIGNALING_METADATA_AEAT"); _SIGNALING_METADATA_AEATReady = true; } return _SIGNALING_METADATA_AEATContent; } }
        private static Java.Lang.String _SIGNALING_METADATA_AEATContent = default;
        private static bool _SIGNALING_METADATA_AEATReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/SignalingDataRequest.html#SIGNALING_METADATA_AEI"/>
        /// </summary>
        public static Java.Lang.String SIGNALING_METADATA_AEI { get { if (!_SIGNALING_METADATA_AEIReady) { _SIGNALING_METADATA_AEIContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SIGNALING_METADATA_AEI"); _SIGNALING_METADATA_AEIReady = true; } return _SIGNALING_METADATA_AEIContent; } }
        private static Java.Lang.String _SIGNALING_METADATA_AEIContent = default;
        private static bool _SIGNALING_METADATA_AEIReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/SignalingDataRequest.html#SIGNALING_METADATA_APD"/>
        /// </summary>
        public static Java.Lang.String SIGNALING_METADATA_APD { get { if (!_SIGNALING_METADATA_APDReady) { _SIGNALING_METADATA_APDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SIGNALING_METADATA_APD"); _SIGNALING_METADATA_APDReady = true; } return _SIGNALING_METADATA_APDContent; } }
        private static Java.Lang.String _SIGNALING_METADATA_APDContent = default;
        private static bool _SIGNALING_METADATA_APDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/SignalingDataRequest.html#SIGNALING_METADATA_ASD"/>
        /// </summary>
        public static Java.Lang.String SIGNALING_METADATA_ASD { get { if (!_SIGNALING_METADATA_ASDReady) { _SIGNALING_METADATA_ASDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SIGNALING_METADATA_ASD"); _SIGNALING_METADATA_ASDReady = true; } return _SIGNALING_METADATA_ASDContent; } }
        private static Java.Lang.String _SIGNALING_METADATA_ASDContent = default;
        private static bool _SIGNALING_METADATA_ASDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/SignalingDataRequest.html#SIGNALING_METADATA_ASPD"/>
        /// </summary>
        public static Java.Lang.String SIGNALING_METADATA_ASPD { get { if (!_SIGNALING_METADATA_ASPDReady) { _SIGNALING_METADATA_ASPDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SIGNALING_METADATA_ASPD"); _SIGNALING_METADATA_ASPDReady = true; } return _SIGNALING_METADATA_ASPDContent; } }
        private static Java.Lang.String _SIGNALING_METADATA_ASPDContent = default;
        private static bool _SIGNALING_METADATA_ASPDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/SignalingDataRequest.html#SIGNALING_METADATA_CAD"/>
        /// </summary>
        public static Java.Lang.String SIGNALING_METADATA_CAD { get { if (!_SIGNALING_METADATA_CADReady) { _SIGNALING_METADATA_CADContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SIGNALING_METADATA_CAD"); _SIGNALING_METADATA_CADReady = true; } return _SIGNALING_METADATA_CADContent; } }
        private static Java.Lang.String _SIGNALING_METADATA_CADContent = default;
        private static bool _SIGNALING_METADATA_CADReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/SignalingDataRequest.html#SIGNALING_METADATA_CDT"/>
        /// </summary>
        public static Java.Lang.String SIGNALING_METADATA_CDT { get { if (!_SIGNALING_METADATA_CDTReady) { _SIGNALING_METADATA_CDTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SIGNALING_METADATA_CDT"); _SIGNALING_METADATA_CDTReady = true; } return _SIGNALING_METADATA_CDTContent; } }
        private static Java.Lang.String _SIGNALING_METADATA_CDTContent = default;
        private static bool _SIGNALING_METADATA_CDTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/SignalingDataRequest.html#SIGNALING_METADATA_CRIT"/>
        /// </summary>
        public static Java.Lang.String SIGNALING_METADATA_CRIT { get { if (!_SIGNALING_METADATA_CRITReady) { _SIGNALING_METADATA_CRITContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SIGNALING_METADATA_CRIT"); _SIGNALING_METADATA_CRITReady = true; } return _SIGNALING_METADATA_CRITContent; } }
        private static Java.Lang.String _SIGNALING_METADATA_CRITContent = default;
        private static bool _SIGNALING_METADATA_CRITReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/SignalingDataRequest.html#SIGNALING_METADATA_DCIT"/>
        /// </summary>
        public static Java.Lang.String SIGNALING_METADATA_DCIT { get { if (!_SIGNALING_METADATA_DCITReady) { _SIGNALING_METADATA_DCITContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SIGNALING_METADATA_DCIT"); _SIGNALING_METADATA_DCITReady = true; } return _SIGNALING_METADATA_DCITContent; } }
        private static Java.Lang.String _SIGNALING_METADATA_DCITContent = default;
        private static bool _SIGNALING_METADATA_DCITReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/SignalingDataRequest.html#SIGNALING_METADATA_DWD"/>
        /// </summary>
        public static Java.Lang.String SIGNALING_METADATA_DWD { get { if (!_SIGNALING_METADATA_DWDReady) { _SIGNALING_METADATA_DWDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SIGNALING_METADATA_DWD"); _SIGNALING_METADATA_DWDReady = true; } return _SIGNALING_METADATA_DWDContent; } }
        private static Java.Lang.String _SIGNALING_METADATA_DWDContent = default;
        private static bool _SIGNALING_METADATA_DWDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/SignalingDataRequest.html#SIGNALING_METADATA_EMSG"/>
        /// </summary>
        public static Java.Lang.String SIGNALING_METADATA_EMSG { get { if (!_SIGNALING_METADATA_EMSGReady) { _SIGNALING_METADATA_EMSGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SIGNALING_METADATA_EMSG"); _SIGNALING_METADATA_EMSGReady = true; } return _SIGNALING_METADATA_EMSGContent; } }
        private static Java.Lang.String _SIGNALING_METADATA_EMSGContent = default;
        private static bool _SIGNALING_METADATA_EMSGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/SignalingDataRequest.html#SIGNALING_METADATA_EVTI"/>
        /// </summary>
        public static Java.Lang.String SIGNALING_METADATA_EVTI { get { if (!_SIGNALING_METADATA_EVTIReady) { _SIGNALING_METADATA_EVTIContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SIGNALING_METADATA_EVTI"); _SIGNALING_METADATA_EVTIReady = true; } return _SIGNALING_METADATA_EVTIContent; } }
        private static Java.Lang.String _SIGNALING_METADATA_EVTIContent = default;
        private static bool _SIGNALING_METADATA_EVTIReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/SignalingDataRequest.html#SIGNALING_METADATA_HELD"/>
        /// </summary>
        public static Java.Lang.String SIGNALING_METADATA_HELD { get { if (!_SIGNALING_METADATA_HELDReady) { _SIGNALING_METADATA_HELDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SIGNALING_METADATA_HELD"); _SIGNALING_METADATA_HELDReady = true; } return _SIGNALING_METADATA_HELDContent; } }
        private static Java.Lang.String _SIGNALING_METADATA_HELDContent = default;
        private static bool _SIGNALING_METADATA_HELDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/SignalingDataRequest.html#SIGNALING_METADATA_IED"/>
        /// </summary>
        public static Java.Lang.String SIGNALING_METADATA_IED { get { if (!_SIGNALING_METADATA_IEDReady) { _SIGNALING_METADATA_IEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SIGNALING_METADATA_IED"); _SIGNALING_METADATA_IEDReady = true; } return _SIGNALING_METADATA_IEDContent; } }
        private static Java.Lang.String _SIGNALING_METADATA_IEDContent = default;
        private static bool _SIGNALING_METADATA_IEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/SignalingDataRequest.html#SIGNALING_METADATA_MPD"/>
        /// </summary>
        public static Java.Lang.String SIGNALING_METADATA_MPD { get { if (!_SIGNALING_METADATA_MPDReady) { _SIGNALING_METADATA_MPDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SIGNALING_METADATA_MPD"); _SIGNALING_METADATA_MPDReady = true; } return _SIGNALING_METADATA_MPDContent; } }
        private static Java.Lang.String _SIGNALING_METADATA_MPDContent = default;
        private static bool _SIGNALING_METADATA_MPDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/SignalingDataRequest.html#SIGNALING_METADATA_MPIT"/>
        /// </summary>
        public static Java.Lang.String SIGNALING_METADATA_MPIT { get { if (!_SIGNALING_METADATA_MPITReady) { _SIGNALING_METADATA_MPITContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SIGNALING_METADATA_MPIT"); _SIGNALING_METADATA_MPITReady = true; } return _SIGNALING_METADATA_MPITContent; } }
        private static Java.Lang.String _SIGNALING_METADATA_MPITContent = default;
        private static bool _SIGNALING_METADATA_MPITReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/SignalingDataRequest.html#SIGNALING_METADATA_MPT"/>
        /// </summary>
        public static Java.Lang.String SIGNALING_METADATA_MPT { get { if (!_SIGNALING_METADATA_MPTReady) { _SIGNALING_METADATA_MPTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SIGNALING_METADATA_MPT"); _SIGNALING_METADATA_MPTReady = true; } return _SIGNALING_METADATA_MPTContent; } }
        private static Java.Lang.String _SIGNALING_METADATA_MPTContent = default;
        private static bool _SIGNALING_METADATA_MPTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/SignalingDataRequest.html#SIGNALING_METADATA_OSN"/>
        /// </summary>
        public static Java.Lang.String SIGNALING_METADATA_OSN { get { if (!_SIGNALING_METADATA_OSNReady) { _SIGNALING_METADATA_OSNContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SIGNALING_METADATA_OSN"); _SIGNALING_METADATA_OSNReady = true; } return _SIGNALING_METADATA_OSNContent; } }
        private static Java.Lang.String _SIGNALING_METADATA_OSNContent = default;
        private static bool _SIGNALING_METADATA_OSNReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/SignalingDataRequest.html#SIGNALING_METADATA_PAT"/>
        /// </summary>
        public static Java.Lang.String SIGNALING_METADATA_PAT { get { if (!_SIGNALING_METADATA_PATReady) { _SIGNALING_METADATA_PATContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SIGNALING_METADATA_PAT"); _SIGNALING_METADATA_PATReady = true; } return _SIGNALING_METADATA_PATContent; } }
        private static Java.Lang.String _SIGNALING_METADATA_PATContent = default;
        private static bool _SIGNALING_METADATA_PATReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/SignalingDataRequest.html#SIGNALING_METADATA_RDT"/>
        /// </summary>
        public static Java.Lang.String SIGNALING_METADATA_RDT { get { if (!_SIGNALING_METADATA_RDTReady) { _SIGNALING_METADATA_RDTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SIGNALING_METADATA_RDT"); _SIGNALING_METADATA_RDTReady = true; } return _SIGNALING_METADATA_RDTContent; } }
        private static Java.Lang.String _SIGNALING_METADATA_RDTContent = default;
        private static bool _SIGNALING_METADATA_RDTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/SignalingDataRequest.html#SIGNALING_METADATA_RRT"/>
        /// </summary>
        public static Java.Lang.String SIGNALING_METADATA_RRT { get { if (!_SIGNALING_METADATA_RRTReady) { _SIGNALING_METADATA_RRTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SIGNALING_METADATA_RRT"); _SIGNALING_METADATA_RRTReady = true; } return _SIGNALING_METADATA_RRTContent; } }
        private static Java.Lang.String _SIGNALING_METADATA_RRTContent = default;
        private static bool _SIGNALING_METADATA_RRTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/SignalingDataRequest.html#SIGNALING_METADATA_RSAT"/>
        /// </summary>
        public static Java.Lang.String SIGNALING_METADATA_RSAT { get { if (!_SIGNALING_METADATA_RSATReady) { _SIGNALING_METADATA_RSATContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SIGNALING_METADATA_RSAT"); _SIGNALING_METADATA_RSATReady = true; } return _SIGNALING_METADATA_RSATContent; } }
        private static Java.Lang.String _SIGNALING_METADATA_RSATContent = default;
        private static bool _SIGNALING_METADATA_RSATReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/SignalingDataRequest.html#SIGNALING_METADATA_SLT"/>
        /// </summary>
        public static Java.Lang.String SIGNALING_METADATA_SLT { get { if (!_SIGNALING_METADATA_SLTReady) { _SIGNALING_METADATA_SLTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SIGNALING_METADATA_SLT"); _SIGNALING_METADATA_SLTReady = true; } return _SIGNALING_METADATA_SLTContent; } }
        private static Java.Lang.String _SIGNALING_METADATA_SLTContent = default;
        private static bool _SIGNALING_METADATA_SLTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/SignalingDataRequest.html#SIGNALING_METADATA_SMT"/>
        /// </summary>
        public static Java.Lang.String SIGNALING_METADATA_SMT { get { if (!_SIGNALING_METADATA_SMTReady) { _SIGNALING_METADATA_SMTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SIGNALING_METADATA_SMT"); _SIGNALING_METADATA_SMTReady = true; } return _SIGNALING_METADATA_SMTContent; } }
        private static Java.Lang.String _SIGNALING_METADATA_SMTContent = default;
        private static bool _SIGNALING_METADATA_SMTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/SignalingDataRequest.html#SIGNALING_METADATA_SSD"/>
        /// </summary>
        public static Java.Lang.String SIGNALING_METADATA_SSD { get { if (!_SIGNALING_METADATA_SSDReady) { _SIGNALING_METADATA_SSDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SIGNALING_METADATA_SSD"); _SIGNALING_METADATA_SSDReady = true; } return _SIGNALING_METADATA_SSDContent; } }
        private static Java.Lang.String _SIGNALING_METADATA_SSDContent = default;
        private static bool _SIGNALING_METADATA_SSDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/SignalingDataRequest.html#SIGNALING_METADATA_STSID"/>
        /// </summary>
        public static Java.Lang.String SIGNALING_METADATA_STSID { get { if (!_SIGNALING_METADATA_STSIDReady) { _SIGNALING_METADATA_STSIDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SIGNALING_METADATA_STSID"); _SIGNALING_METADATA_STSIDReady = true; } return _SIGNALING_METADATA_STSIDContent; } }
        private static Java.Lang.String _SIGNALING_METADATA_STSIDContent = default;
        private static bool _SIGNALING_METADATA_STSIDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/SignalingDataRequest.html#SIGNALING_METADATA_STT"/>
        /// </summary>
        public static Java.Lang.String SIGNALING_METADATA_STT { get { if (!_SIGNALING_METADATA_STTReady) { _SIGNALING_METADATA_STTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SIGNALING_METADATA_STT"); _SIGNALING_METADATA_STTReady = true; } return _SIGNALING_METADATA_STTContent; } }
        private static Java.Lang.String _SIGNALING_METADATA_STTContent = default;
        private static bool _SIGNALING_METADATA_STTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/SignalingDataRequest.html#SIGNALING_METADATA_USBD"/>
        /// </summary>
        public static Java.Lang.String SIGNALING_METADATA_USBD { get { if (!_SIGNALING_METADATA_USBDReady) { _SIGNALING_METADATA_USBDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SIGNALING_METADATA_USBD"); _SIGNALING_METADATA_USBDReady = true; } return _SIGNALING_METADATA_USBDContent; } }
        private static Java.Lang.String _SIGNALING_METADATA_USBDContent = default;
        private static bool _SIGNALING_METADATA_USBDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/SignalingDataRequest.html#SIGNALING_METADATA_USD"/>
        /// </summary>
        public static Java.Lang.String SIGNALING_METADATA_USD { get { if (!_SIGNALING_METADATA_USDReady) { _SIGNALING_METADATA_USDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SIGNALING_METADATA_USD"); _SIGNALING_METADATA_USDReady = true; } return _SIGNALING_METADATA_USDContent; } }
        private static Java.Lang.String _SIGNALING_METADATA_USDContent = default;
        private static bool _SIGNALING_METADATA_USDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/SignalingDataRequest.html#SIGNALING_METADATA_VSPD"/>
        /// </summary>
        public static Java.Lang.String SIGNALING_METADATA_VSPD { get { if (!_SIGNALING_METADATA_VSPDReady) { _SIGNALING_METADATA_VSPDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SIGNALING_METADATA_VSPD"); _SIGNALING_METADATA_VSPDReady = true; } return _SIGNALING_METADATA_VSPDContent; } }
        private static Java.Lang.String _SIGNALING_METADATA_VSPDContent = default;
        private static bool _SIGNALING_METADATA_VSPDReady = false; // this is used because in case of generics 
    
        #endregion
    
        #region Static methods
    
        #endregion
    
        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/SignalingDataRequest.html#getGroup()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetGroup()
        {
            return IExecuteWithSignature<int>("getGroup", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/tv/SignalingDataRequest.html#getSignalingDataTypes()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.List"/></returns>
        public Java.Util.List<Java.Lang.String> GetSignalingDataTypes()
        {
            return IExecuteWithSignature<Java.Util.List<Java.Lang.String>>("getSignalingDataTypes", "()Ljava/util/List;");
        }
    
        #endregion
    
        #region Nested classes
    
        #endregion
    
        // TODO: complete the class
    }
    #endregion
}