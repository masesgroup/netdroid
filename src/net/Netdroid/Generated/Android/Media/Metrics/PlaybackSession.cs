/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.2.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Media.Metrics
{
    #region PlaybackSession
    public partial class PlaybackSession
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/metrics/PlaybackSession.html#getSessionId()"/>
        /// </summary>
        /// <returns><see cref="Android.Media.Metrics.LogSessionId"/></returns>
        public Android.Media.Metrics.LogSessionId GetSessionId()
        {
            return IExecuteWithSignature<Android.Media.Metrics.LogSessionId>("getSessionId", "()Landroid/media/metrics/LogSessionId;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/metrics/PlaybackSession.html#close()"/>
        /// </summary>
        public void Close()
        {
            IExecuteWithSignature("close", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/metrics/PlaybackSession.html#reportNetworkEvent(android.media.metrics.NetworkEvent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Media.Metrics.NetworkEvent"/></param>
        public void ReportNetworkEvent(Android.Media.Metrics.NetworkEvent arg0)
        {
            IExecuteWithSignature("reportNetworkEvent", "(Landroid/media/metrics/NetworkEvent;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/metrics/PlaybackSession.html#reportPlaybackErrorEvent(android.media.metrics.PlaybackErrorEvent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Media.Metrics.PlaybackErrorEvent"/></param>
        public void ReportPlaybackErrorEvent(Android.Media.Metrics.PlaybackErrorEvent arg0)
        {
            IExecuteWithSignature("reportPlaybackErrorEvent", "(Landroid/media/metrics/PlaybackErrorEvent;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/metrics/PlaybackSession.html#reportPlaybackMetrics(android.media.metrics.PlaybackMetrics)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Media.Metrics.PlaybackMetrics"/></param>
        public void ReportPlaybackMetrics(Android.Media.Metrics.PlaybackMetrics arg0)
        {
            IExecuteWithSignature("reportPlaybackMetrics", "(Landroid/media/metrics/PlaybackMetrics;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/metrics/PlaybackSession.html#reportPlaybackStateEvent(android.media.metrics.PlaybackStateEvent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Media.Metrics.PlaybackStateEvent"/></param>
        public void ReportPlaybackStateEvent(Android.Media.Metrics.PlaybackStateEvent arg0)
        {
            IExecuteWithSignature("reportPlaybackStateEvent", "(Landroid/media/metrics/PlaybackStateEvent;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/metrics/PlaybackSession.html#reportTrackChangeEvent(android.media.metrics.TrackChangeEvent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Media.Metrics.TrackChangeEvent"/></param>
        public void ReportTrackChangeEvent(Android.Media.Metrics.TrackChangeEvent arg0)
        {
            IExecuteWithSignature("reportTrackChangeEvent", "(Landroid/media/metrics/TrackChangeEvent;)V", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}