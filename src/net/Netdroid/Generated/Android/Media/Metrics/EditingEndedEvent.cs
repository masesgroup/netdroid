/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.4.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Media.Metrics
{
    #region EditingEndedEvent
    public partial class EditingEndedEvent
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Android.Media.Metrics.EditingEndedEvent"/> to <see cref="Android.Os.Parcelable"/>
        /// </summary>
        public static implicit operator Android.Os.Parcelable(Android.Media.Metrics.EditingEndedEvent t) => t.Cast<Android.Os.Parcelable>();

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/metrics/EditingEndedEvent.html#CREATOR"/>
        /// </summary>
        public static Android.Os.Parcelable.Creator CREATOR { get { if (!_CREATORReady) { _CREATORContent = SGetField<Android.Os.Parcelable.Creator>(LocalBridgeClazz, "CREATOR"); _CREATORReady = true; } return _CREATORContent; } }
        private static Android.Os.Parcelable.Creator _CREATORContent = default;
        private static bool _CREATORReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/metrics/EditingEndedEvent.html#ERROR_CODE_AUDIO_PROCESSING_FAILED"/>
        /// </summary>
        public static int ERROR_CODE_AUDIO_PROCESSING_FAILED { get { if (!_ERROR_CODE_AUDIO_PROCESSING_FAILEDReady) { _ERROR_CODE_AUDIO_PROCESSING_FAILEDContent = SGetField<int>(LocalBridgeClazz, "ERROR_CODE_AUDIO_PROCESSING_FAILED"); _ERROR_CODE_AUDIO_PROCESSING_FAILEDReady = true; } return _ERROR_CODE_AUDIO_PROCESSING_FAILEDContent; } }
        private static int _ERROR_CODE_AUDIO_PROCESSING_FAILEDContent = default;
        private static bool _ERROR_CODE_AUDIO_PROCESSING_FAILEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/metrics/EditingEndedEvent.html#ERROR_CODE_DECODER_INIT_FAILED"/>
        /// </summary>
        public static int ERROR_CODE_DECODER_INIT_FAILED { get { if (!_ERROR_CODE_DECODER_INIT_FAILEDReady) { _ERROR_CODE_DECODER_INIT_FAILEDContent = SGetField<int>(LocalBridgeClazz, "ERROR_CODE_DECODER_INIT_FAILED"); _ERROR_CODE_DECODER_INIT_FAILEDReady = true; } return _ERROR_CODE_DECODER_INIT_FAILEDContent; } }
        private static int _ERROR_CODE_DECODER_INIT_FAILEDContent = default;
        private static bool _ERROR_CODE_DECODER_INIT_FAILEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/metrics/EditingEndedEvent.html#ERROR_CODE_DECODING_FAILED"/>
        /// </summary>
        public static int ERROR_CODE_DECODING_FAILED { get { if (!_ERROR_CODE_DECODING_FAILEDReady) { _ERROR_CODE_DECODING_FAILEDContent = SGetField<int>(LocalBridgeClazz, "ERROR_CODE_DECODING_FAILED"); _ERROR_CODE_DECODING_FAILEDReady = true; } return _ERROR_CODE_DECODING_FAILEDContent; } }
        private static int _ERROR_CODE_DECODING_FAILEDContent = default;
        private static bool _ERROR_CODE_DECODING_FAILEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/metrics/EditingEndedEvent.html#ERROR_CODE_DECODING_FORMAT_UNSUPPORTED"/>
        /// </summary>
        public static int ERROR_CODE_DECODING_FORMAT_UNSUPPORTED { get { if (!_ERROR_CODE_DECODING_FORMAT_UNSUPPORTEDReady) { _ERROR_CODE_DECODING_FORMAT_UNSUPPORTEDContent = SGetField<int>(LocalBridgeClazz, "ERROR_CODE_DECODING_FORMAT_UNSUPPORTED"); _ERROR_CODE_DECODING_FORMAT_UNSUPPORTEDReady = true; } return _ERROR_CODE_DECODING_FORMAT_UNSUPPORTEDContent; } }
        private static int _ERROR_CODE_DECODING_FORMAT_UNSUPPORTEDContent = default;
        private static bool _ERROR_CODE_DECODING_FORMAT_UNSUPPORTEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/metrics/EditingEndedEvent.html#ERROR_CODE_ENCODER_INIT_FAILED"/>
        /// </summary>
        public static int ERROR_CODE_ENCODER_INIT_FAILED { get { if (!_ERROR_CODE_ENCODER_INIT_FAILEDReady) { _ERROR_CODE_ENCODER_INIT_FAILEDContent = SGetField<int>(LocalBridgeClazz, "ERROR_CODE_ENCODER_INIT_FAILED"); _ERROR_CODE_ENCODER_INIT_FAILEDReady = true; } return _ERROR_CODE_ENCODER_INIT_FAILEDContent; } }
        private static int _ERROR_CODE_ENCODER_INIT_FAILEDContent = default;
        private static bool _ERROR_CODE_ENCODER_INIT_FAILEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/metrics/EditingEndedEvent.html#ERROR_CODE_ENCODING_FAILED"/>
        /// </summary>
        public static int ERROR_CODE_ENCODING_FAILED { get { if (!_ERROR_CODE_ENCODING_FAILEDReady) { _ERROR_CODE_ENCODING_FAILEDContent = SGetField<int>(LocalBridgeClazz, "ERROR_CODE_ENCODING_FAILED"); _ERROR_CODE_ENCODING_FAILEDReady = true; } return _ERROR_CODE_ENCODING_FAILEDContent; } }
        private static int _ERROR_CODE_ENCODING_FAILEDContent = default;
        private static bool _ERROR_CODE_ENCODING_FAILEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/metrics/EditingEndedEvent.html#ERROR_CODE_ENCODING_FORMAT_UNSUPPORTED"/>
        /// </summary>
        public static int ERROR_CODE_ENCODING_FORMAT_UNSUPPORTED { get { if (!_ERROR_CODE_ENCODING_FORMAT_UNSUPPORTEDReady) { _ERROR_CODE_ENCODING_FORMAT_UNSUPPORTEDContent = SGetField<int>(LocalBridgeClazz, "ERROR_CODE_ENCODING_FORMAT_UNSUPPORTED"); _ERROR_CODE_ENCODING_FORMAT_UNSUPPORTEDReady = true; } return _ERROR_CODE_ENCODING_FORMAT_UNSUPPORTEDContent; } }
        private static int _ERROR_CODE_ENCODING_FORMAT_UNSUPPORTEDContent = default;
        private static bool _ERROR_CODE_ENCODING_FORMAT_UNSUPPORTEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/metrics/EditingEndedEvent.html#ERROR_CODE_FAILED_RUNTIME_CHECK"/>
        /// </summary>
        public static int ERROR_CODE_FAILED_RUNTIME_CHECK { get { if (!_ERROR_CODE_FAILED_RUNTIME_CHECKReady) { _ERROR_CODE_FAILED_RUNTIME_CHECKContent = SGetField<int>(LocalBridgeClazz, "ERROR_CODE_FAILED_RUNTIME_CHECK"); _ERROR_CODE_FAILED_RUNTIME_CHECKReady = true; } return _ERROR_CODE_FAILED_RUNTIME_CHECKContent; } }
        private static int _ERROR_CODE_FAILED_RUNTIME_CHECKContent = default;
        private static bool _ERROR_CODE_FAILED_RUNTIME_CHECKReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/metrics/EditingEndedEvent.html#ERROR_CODE_IO_BAD_HTTP_STATUS"/>
        /// </summary>
        public static int ERROR_CODE_IO_BAD_HTTP_STATUS { get { if (!_ERROR_CODE_IO_BAD_HTTP_STATUSReady) { _ERROR_CODE_IO_BAD_HTTP_STATUSContent = SGetField<int>(LocalBridgeClazz, "ERROR_CODE_IO_BAD_HTTP_STATUS"); _ERROR_CODE_IO_BAD_HTTP_STATUSReady = true; } return _ERROR_CODE_IO_BAD_HTTP_STATUSContent; } }
        private static int _ERROR_CODE_IO_BAD_HTTP_STATUSContent = default;
        private static bool _ERROR_CODE_IO_BAD_HTTP_STATUSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/metrics/EditingEndedEvent.html#ERROR_CODE_IO_CLEARTEXT_NOT_PERMITTED"/>
        /// </summary>
        public static int ERROR_CODE_IO_CLEARTEXT_NOT_PERMITTED { get { if (!_ERROR_CODE_IO_CLEARTEXT_NOT_PERMITTEDReady) { _ERROR_CODE_IO_CLEARTEXT_NOT_PERMITTEDContent = SGetField<int>(LocalBridgeClazz, "ERROR_CODE_IO_CLEARTEXT_NOT_PERMITTED"); _ERROR_CODE_IO_CLEARTEXT_NOT_PERMITTEDReady = true; } return _ERROR_CODE_IO_CLEARTEXT_NOT_PERMITTEDContent; } }
        private static int _ERROR_CODE_IO_CLEARTEXT_NOT_PERMITTEDContent = default;
        private static bool _ERROR_CODE_IO_CLEARTEXT_NOT_PERMITTEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/metrics/EditingEndedEvent.html#ERROR_CODE_IO_FILE_NOT_FOUND"/>
        /// </summary>
        public static int ERROR_CODE_IO_FILE_NOT_FOUND { get { if (!_ERROR_CODE_IO_FILE_NOT_FOUNDReady) { _ERROR_CODE_IO_FILE_NOT_FOUNDContent = SGetField<int>(LocalBridgeClazz, "ERROR_CODE_IO_FILE_NOT_FOUND"); _ERROR_CODE_IO_FILE_NOT_FOUNDReady = true; } return _ERROR_CODE_IO_FILE_NOT_FOUNDContent; } }
        private static int _ERROR_CODE_IO_FILE_NOT_FOUNDContent = default;
        private static bool _ERROR_CODE_IO_FILE_NOT_FOUNDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/metrics/EditingEndedEvent.html#ERROR_CODE_IO_NETWORK_CONNECTION_FAILED"/>
        /// </summary>
        public static int ERROR_CODE_IO_NETWORK_CONNECTION_FAILED { get { if (!_ERROR_CODE_IO_NETWORK_CONNECTION_FAILEDReady) { _ERROR_CODE_IO_NETWORK_CONNECTION_FAILEDContent = SGetField<int>(LocalBridgeClazz, "ERROR_CODE_IO_NETWORK_CONNECTION_FAILED"); _ERROR_CODE_IO_NETWORK_CONNECTION_FAILEDReady = true; } return _ERROR_CODE_IO_NETWORK_CONNECTION_FAILEDContent; } }
        private static int _ERROR_CODE_IO_NETWORK_CONNECTION_FAILEDContent = default;
        private static bool _ERROR_CODE_IO_NETWORK_CONNECTION_FAILEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/metrics/EditingEndedEvent.html#ERROR_CODE_IO_NETWORK_CONNECTION_TIMEOUT"/>
        /// </summary>
        public static int ERROR_CODE_IO_NETWORK_CONNECTION_TIMEOUT { get { if (!_ERROR_CODE_IO_NETWORK_CONNECTION_TIMEOUTReady) { _ERROR_CODE_IO_NETWORK_CONNECTION_TIMEOUTContent = SGetField<int>(LocalBridgeClazz, "ERROR_CODE_IO_NETWORK_CONNECTION_TIMEOUT"); _ERROR_CODE_IO_NETWORK_CONNECTION_TIMEOUTReady = true; } return _ERROR_CODE_IO_NETWORK_CONNECTION_TIMEOUTContent; } }
        private static int _ERROR_CODE_IO_NETWORK_CONNECTION_TIMEOUTContent = default;
        private static bool _ERROR_CODE_IO_NETWORK_CONNECTION_TIMEOUTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/metrics/EditingEndedEvent.html#ERROR_CODE_IO_NO_PERMISSION"/>
        /// </summary>
        public static int ERROR_CODE_IO_NO_PERMISSION { get { if (!_ERROR_CODE_IO_NO_PERMISSIONReady) { _ERROR_CODE_IO_NO_PERMISSIONContent = SGetField<int>(LocalBridgeClazz, "ERROR_CODE_IO_NO_PERMISSION"); _ERROR_CODE_IO_NO_PERMISSIONReady = true; } return _ERROR_CODE_IO_NO_PERMISSIONContent; } }
        private static int _ERROR_CODE_IO_NO_PERMISSIONContent = default;
        private static bool _ERROR_CODE_IO_NO_PERMISSIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/metrics/EditingEndedEvent.html#ERROR_CODE_IO_READ_POSITION_OUT_OF_RANGE"/>
        /// </summary>
        public static int ERROR_CODE_IO_READ_POSITION_OUT_OF_RANGE { get { if (!_ERROR_CODE_IO_READ_POSITION_OUT_OF_RANGEReady) { _ERROR_CODE_IO_READ_POSITION_OUT_OF_RANGEContent = SGetField<int>(LocalBridgeClazz, "ERROR_CODE_IO_READ_POSITION_OUT_OF_RANGE"); _ERROR_CODE_IO_READ_POSITION_OUT_OF_RANGEReady = true; } return _ERROR_CODE_IO_READ_POSITION_OUT_OF_RANGEContent; } }
        private static int _ERROR_CODE_IO_READ_POSITION_OUT_OF_RANGEContent = default;
        private static bool _ERROR_CODE_IO_READ_POSITION_OUT_OF_RANGEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/metrics/EditingEndedEvent.html#ERROR_CODE_IO_UNSPECIFIED"/>
        /// </summary>
        public static int ERROR_CODE_IO_UNSPECIFIED { get { if (!_ERROR_CODE_IO_UNSPECIFIEDReady) { _ERROR_CODE_IO_UNSPECIFIEDContent = SGetField<int>(LocalBridgeClazz, "ERROR_CODE_IO_UNSPECIFIED"); _ERROR_CODE_IO_UNSPECIFIEDReady = true; } return _ERROR_CODE_IO_UNSPECIFIEDContent; } }
        private static int _ERROR_CODE_IO_UNSPECIFIEDContent = default;
        private static bool _ERROR_CODE_IO_UNSPECIFIEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/metrics/EditingEndedEvent.html#ERROR_CODE_MUXING_FAILED"/>
        /// </summary>
        public static int ERROR_CODE_MUXING_FAILED { get { if (!_ERROR_CODE_MUXING_FAILEDReady) { _ERROR_CODE_MUXING_FAILEDContent = SGetField<int>(LocalBridgeClazz, "ERROR_CODE_MUXING_FAILED"); _ERROR_CODE_MUXING_FAILEDReady = true; } return _ERROR_CODE_MUXING_FAILEDContent; } }
        private static int _ERROR_CODE_MUXING_FAILEDContent = default;
        private static bool _ERROR_CODE_MUXING_FAILEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/metrics/EditingEndedEvent.html#ERROR_CODE_NONE"/>
        /// </summary>
        public static int ERROR_CODE_NONE { get { if (!_ERROR_CODE_NONEReady) { _ERROR_CODE_NONEContent = SGetField<int>(LocalBridgeClazz, "ERROR_CODE_NONE"); _ERROR_CODE_NONEReady = true; } return _ERROR_CODE_NONEContent; } }
        private static int _ERROR_CODE_NONEContent = default;
        private static bool _ERROR_CODE_NONEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/metrics/EditingEndedEvent.html#ERROR_CODE_VIDEO_FRAME_PROCESSING_FAILED"/>
        /// </summary>
        public static int ERROR_CODE_VIDEO_FRAME_PROCESSING_FAILED { get { if (!_ERROR_CODE_VIDEO_FRAME_PROCESSING_FAILEDReady) { _ERROR_CODE_VIDEO_FRAME_PROCESSING_FAILEDContent = SGetField<int>(LocalBridgeClazz, "ERROR_CODE_VIDEO_FRAME_PROCESSING_FAILED"); _ERROR_CODE_VIDEO_FRAME_PROCESSING_FAILEDReady = true; } return _ERROR_CODE_VIDEO_FRAME_PROCESSING_FAILEDContent; } }
        private static int _ERROR_CODE_VIDEO_FRAME_PROCESSING_FAILEDContent = default;
        private static bool _ERROR_CODE_VIDEO_FRAME_PROCESSING_FAILEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/metrics/EditingEndedEvent.html#FINAL_STATE_CANCELED"/>
        /// </summary>
        public static int FINAL_STATE_CANCELED { get { if (!_FINAL_STATE_CANCELEDReady) { _FINAL_STATE_CANCELEDContent = SGetField<int>(LocalBridgeClazz, "FINAL_STATE_CANCELED"); _FINAL_STATE_CANCELEDReady = true; } return _FINAL_STATE_CANCELEDContent; } }
        private static int _FINAL_STATE_CANCELEDContent = default;
        private static bool _FINAL_STATE_CANCELEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/metrics/EditingEndedEvent.html#FINAL_STATE_ERROR"/>
        /// </summary>
        public static int FINAL_STATE_ERROR { get { if (!_FINAL_STATE_ERRORReady) { _FINAL_STATE_ERRORContent = SGetField<int>(LocalBridgeClazz, "FINAL_STATE_ERROR"); _FINAL_STATE_ERRORReady = true; } return _FINAL_STATE_ERRORContent; } }
        private static int _FINAL_STATE_ERRORContent = default;
        private static bool _FINAL_STATE_ERRORReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/metrics/EditingEndedEvent.html#FINAL_STATE_SUCCEEDED"/>
        /// </summary>
        public static int FINAL_STATE_SUCCEEDED { get { if (!_FINAL_STATE_SUCCEEDEDReady) { _FINAL_STATE_SUCCEEDEDContent = SGetField<int>(LocalBridgeClazz, "FINAL_STATE_SUCCEEDED"); _FINAL_STATE_SUCCEEDEDReady = true; } return _FINAL_STATE_SUCCEEDEDContent; } }
        private static int _FINAL_STATE_SUCCEEDEDContent = default;
        private static bool _FINAL_STATE_SUCCEEDEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/metrics/EditingEndedEvent.html#PROGRESS_PERCENT_UNKNOWN"/>
        /// </summary>
        public static int PROGRESS_PERCENT_UNKNOWN { get { if (!_PROGRESS_PERCENT_UNKNOWNReady) { _PROGRESS_PERCENT_UNKNOWNContent = SGetField<int>(LocalBridgeClazz, "PROGRESS_PERCENT_UNKNOWN"); _PROGRESS_PERCENT_UNKNOWNReady = true; } return _PROGRESS_PERCENT_UNKNOWNContent; } }
        private static int _PROGRESS_PERCENT_UNKNOWNContent = default;
        private static bool _PROGRESS_PERCENT_UNKNOWNReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/metrics/EditingEndedEvent.html#TIME_SINCE_CREATED_UNKNOWN"/>
        /// </summary>
        public static int TIME_SINCE_CREATED_UNKNOWN { get { if (!_TIME_SINCE_CREATED_UNKNOWNReady) { _TIME_SINCE_CREATED_UNKNOWNContent = SGetField<int>(LocalBridgeClazz, "TIME_SINCE_CREATED_UNKNOWN"); _TIME_SINCE_CREATED_UNKNOWNReady = true; } return _TIME_SINCE_CREATED_UNKNOWNContent; } }
        private static int _TIME_SINCE_CREATED_UNKNOWNContent = default;
        private static bool _TIME_SINCE_CREATED_UNKNOWNReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/metrics/EditingEndedEvent.html#OPERATION_TYPE_AUDIO_EDIT"/>
        /// </summary>
        public static long OPERATION_TYPE_AUDIO_EDIT { get { if (!_OPERATION_TYPE_AUDIO_EDITReady) { _OPERATION_TYPE_AUDIO_EDITContent = SGetField<long>(LocalBridgeClazz, "OPERATION_TYPE_AUDIO_EDIT"); _OPERATION_TYPE_AUDIO_EDITReady = true; } return _OPERATION_TYPE_AUDIO_EDITContent; } }
        private static long _OPERATION_TYPE_AUDIO_EDITContent = default;
        private static bool _OPERATION_TYPE_AUDIO_EDITReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/metrics/EditingEndedEvent.html#OPERATION_TYPE_AUDIO_TRANSCODE"/>
        /// </summary>
        public static long OPERATION_TYPE_AUDIO_TRANSCODE { get { if (!_OPERATION_TYPE_AUDIO_TRANSCODEReady) { _OPERATION_TYPE_AUDIO_TRANSCODEContent = SGetField<long>(LocalBridgeClazz, "OPERATION_TYPE_AUDIO_TRANSCODE"); _OPERATION_TYPE_AUDIO_TRANSCODEReady = true; } return _OPERATION_TYPE_AUDIO_TRANSCODEContent; } }
        private static long _OPERATION_TYPE_AUDIO_TRANSCODEContent = default;
        private static bool _OPERATION_TYPE_AUDIO_TRANSCODEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/metrics/EditingEndedEvent.html#OPERATION_TYPE_AUDIO_TRANSMUX"/>
        /// </summary>
        public static long OPERATION_TYPE_AUDIO_TRANSMUX { get { if (!_OPERATION_TYPE_AUDIO_TRANSMUXReady) { _OPERATION_TYPE_AUDIO_TRANSMUXContent = SGetField<long>(LocalBridgeClazz, "OPERATION_TYPE_AUDIO_TRANSMUX"); _OPERATION_TYPE_AUDIO_TRANSMUXReady = true; } return _OPERATION_TYPE_AUDIO_TRANSMUXContent; } }
        private static long _OPERATION_TYPE_AUDIO_TRANSMUXContent = default;
        private static bool _OPERATION_TYPE_AUDIO_TRANSMUXReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/metrics/EditingEndedEvent.html#OPERATION_TYPE_PAUSED"/>
        /// </summary>
        public static long OPERATION_TYPE_PAUSED { get { if (!_OPERATION_TYPE_PAUSEDReady) { _OPERATION_TYPE_PAUSEDContent = SGetField<long>(LocalBridgeClazz, "OPERATION_TYPE_PAUSED"); _OPERATION_TYPE_PAUSEDReady = true; } return _OPERATION_TYPE_PAUSEDContent; } }
        private static long _OPERATION_TYPE_PAUSEDContent = default;
        private static bool _OPERATION_TYPE_PAUSEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/metrics/EditingEndedEvent.html#OPERATION_TYPE_RESUMED"/>
        /// </summary>
        public static long OPERATION_TYPE_RESUMED { get { if (!_OPERATION_TYPE_RESUMEDReady) { _OPERATION_TYPE_RESUMEDContent = SGetField<long>(LocalBridgeClazz, "OPERATION_TYPE_RESUMED"); _OPERATION_TYPE_RESUMEDReady = true; } return _OPERATION_TYPE_RESUMEDContent; } }
        private static long _OPERATION_TYPE_RESUMEDContent = default;
        private static bool _OPERATION_TYPE_RESUMEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/metrics/EditingEndedEvent.html#OPERATION_TYPE_VIDEO_EDIT"/>
        /// </summary>
        public static long OPERATION_TYPE_VIDEO_EDIT { get { if (!_OPERATION_TYPE_VIDEO_EDITReady) { _OPERATION_TYPE_VIDEO_EDITContent = SGetField<long>(LocalBridgeClazz, "OPERATION_TYPE_VIDEO_EDIT"); _OPERATION_TYPE_VIDEO_EDITReady = true; } return _OPERATION_TYPE_VIDEO_EDITContent; } }
        private static long _OPERATION_TYPE_VIDEO_EDITContent = default;
        private static bool _OPERATION_TYPE_VIDEO_EDITReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/metrics/EditingEndedEvent.html#OPERATION_TYPE_VIDEO_TRANSCODE"/>
        /// </summary>
        public static long OPERATION_TYPE_VIDEO_TRANSCODE { get { if (!_OPERATION_TYPE_VIDEO_TRANSCODEReady) { _OPERATION_TYPE_VIDEO_TRANSCODEContent = SGetField<long>(LocalBridgeClazz, "OPERATION_TYPE_VIDEO_TRANSCODE"); _OPERATION_TYPE_VIDEO_TRANSCODEReady = true; } return _OPERATION_TYPE_VIDEO_TRANSCODEContent; } }
        private static long _OPERATION_TYPE_VIDEO_TRANSCODEContent = default;
        private static bool _OPERATION_TYPE_VIDEO_TRANSCODEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/metrics/EditingEndedEvent.html#OPERATION_TYPE_VIDEO_TRANSMUX"/>
        /// </summary>
        public static long OPERATION_TYPE_VIDEO_TRANSMUX { get { if (!_OPERATION_TYPE_VIDEO_TRANSMUXReady) { _OPERATION_TYPE_VIDEO_TRANSMUXContent = SGetField<long>(LocalBridgeClazz, "OPERATION_TYPE_VIDEO_TRANSMUX"); _OPERATION_TYPE_VIDEO_TRANSMUXReady = true; } return _OPERATION_TYPE_VIDEO_TRANSMUXContent; } }
        private static long _OPERATION_TYPE_VIDEO_TRANSMUXContent = default;
        private static bool _OPERATION_TYPE_VIDEO_TRANSMUXReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/metrics/EditingEndedEvent.html#getOutputMediaItemInfo()"/>
        /// </summary>
        /// <returns><see cref="Android.Media.Metrics.MediaItemInfo"/></returns>
        public Android.Media.Metrics.MediaItemInfo GetOutputMediaItemInfo()
        {
            return IExecuteWithSignature<Android.Media.Metrics.MediaItemInfo>("getOutputMediaItemInfo", "()Landroid/media/metrics/MediaItemInfo;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/metrics/EditingEndedEvent.html#getFinalProgressPercent()"/>
        /// </summary>
        /// <returns><see cref="float"/></returns>
        public float GetFinalProgressPercent()
        {
            return IExecuteWithSignature<float>("getFinalProgressPercent", "()F");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/metrics/EditingEndedEvent.html#describeContents()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int DescribeContents()
        {
            return IExecuteWithSignature<int>("describeContents", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/metrics/EditingEndedEvent.html#getErrorCode()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetErrorCode()
        {
            return IExecuteWithSignature<int>("getErrorCode", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/metrics/EditingEndedEvent.html#getFinalState()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetFinalState()
        {
            return IExecuteWithSignature<int>("getFinalState", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/metrics/EditingEndedEvent.html#getExporterName()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetExporterName()
        {
            return IExecuteWithSignature<Java.Lang.String>("getExporterName", "()Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/metrics/EditingEndedEvent.html#getMuxerName()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetMuxerName()
        {
            return IExecuteWithSignature<Java.Lang.String>("getMuxerName", "()Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/metrics/EditingEndedEvent.html#getInputMediaItemInfos()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.List"/></returns>
        public Java.Util.List<Android.Media.Metrics.MediaItemInfo> GetInputMediaItemInfos()
        {
            return IExecuteWithSignature<Java.Util.List<Android.Media.Metrics.MediaItemInfo>>("getInputMediaItemInfos", "()Ljava/util/List;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/metrics/EditingEndedEvent.html#getOperationTypes()"/>
        /// </summary>
        /// <returns><see cref="long"/></returns>
        public long GetOperationTypes()
        {
            return IExecuteWithSignature<long>("getOperationTypes", "()J");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/metrics/EditingEndedEvent.html#writeToParcel(android.os.Parcel,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.Parcel"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void WriteToParcel(Android.Os.Parcel arg0, int arg1)
        {
            IExecute("writeToParcel", arg0, arg1);
        }

        #endregion

        #region Nested classes
        #region Builder
        public partial class Builder
        {
            #region Constructors
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/metrics/EditingEndedEvent.Builder.html#%3Cinit%3E(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            public Builder(int arg0)
                : base(arg0)
            {
            }

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/metrics/EditingEndedEvent.Builder.html#build()"/>
            /// </summary>
            /// <returns><see cref="Android.Media.Metrics.EditingEndedEvent"/></returns>
            public Android.Media.Metrics.EditingEndedEvent Build()
            {
                return IExecuteWithSignature<Android.Media.Metrics.EditingEndedEvent>("build", "()Landroid/media/metrics/EditingEndedEvent;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/metrics/EditingEndedEvent.Builder.html#addInputMediaItemInfo(android.media.metrics.MediaItemInfo)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Media.Metrics.MediaItemInfo"/></param>
            /// <returns><see cref="Android.Media.Metrics.EditingEndedEvent.Builder"/></returns>
            public Android.Media.Metrics.EditingEndedEvent.Builder AddInputMediaItemInfo(Android.Media.Metrics.MediaItemInfo arg0)
            {
                return IExecuteWithSignature<Android.Media.Metrics.EditingEndedEvent.Builder>("addInputMediaItemInfo", "(Landroid/media/metrics/MediaItemInfo;)Landroid/media/metrics/EditingEndedEvent$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/metrics/EditingEndedEvent.Builder.html#addOperationType(long)"/>
            /// </summary>
            /// <param name="arg0"><see cref="long"/></param>
            /// <returns><see cref="Android.Media.Metrics.EditingEndedEvent.Builder"/></returns>
            public Android.Media.Metrics.EditingEndedEvent.Builder AddOperationType(long arg0)
            {
                return IExecuteWithSignature<Android.Media.Metrics.EditingEndedEvent.Builder>("addOperationType", "(J)Landroid/media/metrics/EditingEndedEvent$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/metrics/EditingEndedEvent.Builder.html#setErrorCode(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <returns><see cref="Android.Media.Metrics.EditingEndedEvent.Builder"/></returns>
            public Android.Media.Metrics.EditingEndedEvent.Builder SetErrorCode(int arg0)
            {
                return IExecuteWithSignature<Android.Media.Metrics.EditingEndedEvent.Builder>("setErrorCode", "(I)Landroid/media/metrics/EditingEndedEvent$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/metrics/EditingEndedEvent.Builder.html#setExporterName(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Android.Media.Metrics.EditingEndedEvent.Builder"/></returns>
            public Android.Media.Metrics.EditingEndedEvent.Builder SetExporterName(Java.Lang.String arg0)
            {
                return IExecuteWithSignature<Android.Media.Metrics.EditingEndedEvent.Builder>("setExporterName", "(Ljava/lang/String;)Landroid/media/metrics/EditingEndedEvent$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/metrics/EditingEndedEvent.Builder.html#setFinalProgressPercent(float)"/>
            /// </summary>
            /// <param name="arg0"><see cref="float"/></param>
            /// <returns><see cref="Android.Media.Metrics.EditingEndedEvent.Builder"/></returns>
            public Android.Media.Metrics.EditingEndedEvent.Builder SetFinalProgressPercent(float arg0)
            {
                return IExecuteWithSignature<Android.Media.Metrics.EditingEndedEvent.Builder>("setFinalProgressPercent", "(F)Landroid/media/metrics/EditingEndedEvent$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/metrics/EditingEndedEvent.Builder.html#setMetricsBundle(android.os.Bundle)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Os.Bundle"/></param>
            /// <returns><see cref="Android.Media.Metrics.EditingEndedEvent.Builder"/></returns>
            public Android.Media.Metrics.EditingEndedEvent.Builder SetMetricsBundle(Android.Os.Bundle arg0)
            {
                return IExecuteWithSignature<Android.Media.Metrics.EditingEndedEvent.Builder>("setMetricsBundle", "(Landroid/os/Bundle;)Landroid/media/metrics/EditingEndedEvent$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/metrics/EditingEndedEvent.Builder.html#setMuxerName(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Android.Media.Metrics.EditingEndedEvent.Builder"/></returns>
            public Android.Media.Metrics.EditingEndedEvent.Builder SetMuxerName(Java.Lang.String arg0)
            {
                return IExecuteWithSignature<Android.Media.Metrics.EditingEndedEvent.Builder>("setMuxerName", "(Ljava/lang/String;)Landroid/media/metrics/EditingEndedEvent$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/metrics/EditingEndedEvent.Builder.html#setOutputMediaItemInfo(android.media.metrics.MediaItemInfo)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Media.Metrics.MediaItemInfo"/></param>
            /// <returns><see cref="Android.Media.Metrics.EditingEndedEvent.Builder"/></returns>
            public Android.Media.Metrics.EditingEndedEvent.Builder SetOutputMediaItemInfo(Android.Media.Metrics.MediaItemInfo arg0)
            {
                return IExecuteWithSignature<Android.Media.Metrics.EditingEndedEvent.Builder>("setOutputMediaItemInfo", "(Landroid/media/metrics/MediaItemInfo;)Landroid/media/metrics/EditingEndedEvent$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/metrics/EditingEndedEvent.Builder.html#setTimeSinceCreatedMillis(long)"/>
            /// </summary>
            /// <param name="arg0"><see cref="long"/></param>
            /// <returns><see cref="Android.Media.Metrics.EditingEndedEvent.Builder"/></returns>
            public Android.Media.Metrics.EditingEndedEvent.Builder SetTimeSinceCreatedMillis(long arg0)
            {
                return IExecuteWithSignature<Android.Media.Metrics.EditingEndedEvent.Builder>("setTimeSinceCreatedMillis", "(J)Landroid/media/metrics/EditingEndedEvent$Builder;", arg0);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}