/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.1.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Media
{
    #region MediaRouter2
    public partial class MediaRouter2
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/MediaRouter2.html#getInstance(android.content.Context)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        /// <returns><see cref="Android.Media.MediaRouter2"/></returns>
        public static Android.Media.MediaRouter2 GetInstance(Android.Content.Context arg0)
        {
            return SExecuteWithSignature<Android.Media.MediaRouter2>(LocalBridgeClazz, "getInstance", "(Landroid/content/Context;)Landroid/media/MediaRouter2;", arg0);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/MediaRouter2.html#getControllers()"/> 
        /// </summary>
        public Java.Util.List<Android.Media.MediaRouter2.RoutingController> Controllers
        {
            get { return IExecuteWithSignature<Java.Util.List<Android.Media.MediaRouter2.RoutingController>>("getControllers", "()Ljava/util/List;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/MediaRouter2.html#getRoutes()"/> 
        /// </summary>
        public Java.Util.List<Android.Media.MediaRoute2Info> Routes
        {
            get { return IExecuteWithSignature<Java.Util.List<Android.Media.MediaRoute2Info>>("getRoutes", "()Ljava/util/List;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/MediaRouter2.html#getSystemController()"/> 
        /// </summary>
        public Android.Media.MediaRouter2.RoutingController SystemController
        {
            get { return IExecuteWithSignature<Android.Media.MediaRouter2.RoutingController>("getSystemController", "()Landroid/media/MediaRouter2$RoutingController;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/MediaRouter2.html#getController(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Android.Media.MediaRouter2.RoutingController"/></returns>
        public Android.Media.MediaRouter2.RoutingController GetController(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<Android.Media.MediaRouter2.RoutingController>("getController", "(Ljava/lang/String;)Landroid/media/MediaRouter2$RoutingController;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/MediaRouter2.html#showSystemOutputSwitcher()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool ShowSystemOutputSwitcher()
        {
            return IExecuteWithSignature<bool>("showSystemOutputSwitcher", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/MediaRouter2.html#registerControllerCallback(java.util.concurrent.Executor,android.media.MediaRouter2.ControllerCallback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Concurrent.Executor"/></param>
        /// <param name="arg1"><see cref="Android.Media.MediaRouter2.ControllerCallback"/></param>
        public void RegisterControllerCallback(Java.Util.Concurrent.Executor arg0, Android.Media.MediaRouter2.ControllerCallback arg1)
        {
            IExecute("registerControllerCallback", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/MediaRouter2.html#registerRouteCallback(java.util.concurrent.Executor,android.media.MediaRouter2.RouteCallback,android.media.RouteDiscoveryPreference)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Concurrent.Executor"/></param>
        /// <param name="arg1"><see cref="Android.Media.MediaRouter2.RouteCallback"/></param>
        /// <param name="arg2"><see cref="Android.Media.RouteDiscoveryPreference"/></param>
        public void RegisterRouteCallback(Java.Util.Concurrent.Executor arg0, Android.Media.MediaRouter2.RouteCallback arg1, Android.Media.RouteDiscoveryPreference arg2)
        {
            IExecute("registerRouteCallback", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/MediaRouter2.html#registerTransferCallback(java.util.concurrent.Executor,android.media.MediaRouter2.TransferCallback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Concurrent.Executor"/></param>
        /// <param name="arg1"><see cref="Android.Media.MediaRouter2.TransferCallback"/></param>
        public void RegisterTransferCallback(Java.Util.Concurrent.Executor arg0, Android.Media.MediaRouter2.TransferCallback arg1)
        {
            IExecute("registerTransferCallback", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/MediaRouter2.html#setOnGetControllerHintsListener(android.media.MediaRouter2.OnGetControllerHintsListener)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Media.MediaRouter2.OnGetControllerHintsListener"/></param>
        public void SetOnGetControllerHintsListener(Android.Media.MediaRouter2.OnGetControllerHintsListener arg0)
        {
            IExecuteWithSignature("setOnGetControllerHintsListener", "(Landroid/media/MediaRouter2$OnGetControllerHintsListener;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/MediaRouter2.html#setRouteListingPreference(android.media.RouteListingPreference)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Media.RouteListingPreference"/></param>
        public void SetRouteListingPreference(Android.Media.RouteListingPreference arg0)
        {
            IExecuteWithSignature("setRouteListingPreference", "(Landroid/media/RouteListingPreference;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/MediaRouter2.html#stop()"/>
        /// </summary>
        public void Stop()
        {
            IExecuteWithSignature("stop", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/MediaRouter2.html#transferTo(android.media.MediaRoute2Info)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Media.MediaRoute2Info"/></param>
        public void TransferTo(Android.Media.MediaRoute2Info arg0)
        {
            IExecuteWithSignature("transferTo", "(Landroid/media/MediaRoute2Info;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/MediaRouter2.html#unregisterControllerCallback(android.media.MediaRouter2.ControllerCallback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Media.MediaRouter2.ControllerCallback"/></param>
        public void UnregisterControllerCallback(Android.Media.MediaRouter2.ControllerCallback arg0)
        {
            IExecuteWithSignature("unregisterControllerCallback", "(Landroid/media/MediaRouter2$ControllerCallback;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/MediaRouter2.html#unregisterRouteCallback(android.media.MediaRouter2.RouteCallback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Media.MediaRouter2.RouteCallback"/></param>
        public void UnregisterRouteCallback(Android.Media.MediaRouter2.RouteCallback arg0)
        {
            IExecuteWithSignature("unregisterRouteCallback", "(Landroid/media/MediaRouter2$RouteCallback;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/MediaRouter2.html#unregisterTransferCallback(android.media.MediaRouter2.TransferCallback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Media.MediaRouter2.TransferCallback"/></param>
        public void UnregisterTransferCallback(Android.Media.MediaRouter2.TransferCallback arg0)
        {
            IExecuteWithSignature("unregisterTransferCallback", "(Landroid/media/MediaRouter2$TransferCallback;)V", arg0);
        }

        #endregion

        #region Nested classes
        #region ControllerCallback
        public partial class ControllerCallback
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/MediaRouter2.ControllerCallback.html#onControllerUpdated(android.media.MediaRouter2.RoutingController)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Media.MediaRouter2.RoutingController"/></param>
            public void OnControllerUpdated(Android.Media.MediaRouter2.RoutingController arg0)
            {
                IExecuteWithSignature("onControllerUpdated", "(Landroid/media/MediaRouter2$RoutingController;)V", arg0);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region OnGetControllerHintsListener
        public partial class OnGetControllerHintsListener
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// Handlers initializer for <see cref="OnGetControllerHintsListener"/>
            /// </summary>
            protected virtual void InitializeHandlers()
            {
                AddEventHandler("onGetControllerHints", new System.EventHandler<CLRListenerEventArgs<CLREventData<Android.Media.MediaRoute2Info>>>(OnGetControllerHintsEventHandler));

            }

            /// <summary>
            /// Handler for <see href="https://developer.android.com/reference/android/media/MediaRouter2.OnGetControllerHintsListener.html#onGetControllerHints(android.media.MediaRoute2Info)"/>
            /// </summary>
            /// <remarks>If <see cref="OnOnGetControllerHints"/> has a value it takes precedence over corresponding class method</remarks>
            public System.Func<Android.Media.MediaRoute2Info, Android.Os.Bundle> OnOnGetControllerHints { get; set; } = null;

            void OnGetControllerHintsEventHandler(object sender, CLRListenerEventArgs<CLREventData<Android.Media.MediaRoute2Info>> data)
            {
                var methodToExecute = (OnOnGetControllerHints != null) ? OnOnGetControllerHints : OnGetControllerHints;
                var executionResult = methodToExecute.Invoke(data.EventData.TypedEventData);
                data.SetReturnValue(executionResult);
            }

            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/MediaRouter2.OnGetControllerHintsListener.html#onGetControllerHints(android.media.MediaRoute2Info)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Media.MediaRoute2Info"/></param>
            /// <returns><see cref="Android.Os.Bundle"/></returns>
            public virtual Android.Os.Bundle OnGetControllerHints(Android.Media.MediaRoute2Info arg0)
            {
                return default;
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region OnGetControllerHintsListenerDirect
        public partial class OnGetControllerHintsListenerDirect
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/MediaRouter2.OnGetControllerHintsListener.html#onGetControllerHints(android.media.MediaRoute2Info)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Media.MediaRoute2Info"/></param>
            /// <returns><see cref="Android.Os.Bundle"/></returns>
            public override Android.Os.Bundle OnGetControllerHints(Android.Media.MediaRoute2Info arg0)
            {
                return IExecuteWithSignature<Android.Os.Bundle>("onGetControllerHints", "(Landroid/media/MediaRoute2Info;)Landroid/os/Bundle;", arg0);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region RouteCallback
        public partial class RouteCallback
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/MediaRouter2.RouteCallback.html#onRoutesAdded(java.util.List)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Util.List"/></param>
            [System.Obsolete()]
            public void OnRoutesAdded(Java.Util.List<Android.Media.MediaRoute2Info> arg0)
            {
                IExecuteWithSignature("onRoutesAdded", "(Ljava/util/List;)V", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/MediaRouter2.RouteCallback.html#onRoutesChanged(java.util.List)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Util.List"/></param>
            [System.Obsolete()]
            public void OnRoutesChanged(Java.Util.List<Android.Media.MediaRoute2Info> arg0)
            {
                IExecuteWithSignature("onRoutesChanged", "(Ljava/util/List;)V", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/MediaRouter2.RouteCallback.html#onRoutesRemoved(java.util.List)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Util.List"/></param>
            [System.Obsolete()]
            public void OnRoutesRemoved(Java.Util.List<Android.Media.MediaRoute2Info> arg0)
            {
                IExecuteWithSignature("onRoutesRemoved", "(Ljava/util/List;)V", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/MediaRouter2.RouteCallback.html#onRoutesUpdated(java.util.List)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Util.List"/></param>
            public void OnRoutesUpdated(Java.Util.List<Android.Media.MediaRoute2Info> arg0)
            {
                IExecuteWithSignature("onRoutesUpdated", "(Ljava/util/List;)V", arg0);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region RoutingController
        public partial class RoutingController
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/MediaRouter2.RoutingController.html#getControlHints()"/> 
            /// </summary>
            public Android.Os.Bundle ControlHints
            {
                get { return IExecuteWithSignature<Android.Os.Bundle>("getControlHints", "()Landroid/os/Bundle;"); }
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/MediaRouter2.RoutingController.html#getDeselectableRoutes()"/> 
            /// </summary>
            public Java.Util.List<Android.Media.MediaRoute2Info> DeselectableRoutes
            {
                get { return IExecuteWithSignature<Java.Util.List<Android.Media.MediaRoute2Info>>("getDeselectableRoutes", "()Ljava/util/List;"); }
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/MediaRouter2.RoutingController.html#getId()"/> 
            /// </summary>
            public Java.Lang.String Id
            {
                get { return IExecuteWithSignature<Java.Lang.String>("getId", "()Ljava/lang/String;"); }
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/MediaRouter2.RoutingController.html#getRoutingSessionInfo()"/> 
            /// </summary>
            public Android.Media.RoutingSessionInfo RoutingSessionInfo
            {
                get { return IExecuteWithSignature<Android.Media.RoutingSessionInfo>("getRoutingSessionInfo", "()Landroid/media/RoutingSessionInfo;"); }
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/MediaRouter2.RoutingController.html#getSelectableRoutes()"/> 
            /// </summary>
            public Java.Util.List<Android.Media.MediaRoute2Info> SelectableRoutes
            {
                get { return IExecuteWithSignature<Java.Util.List<Android.Media.MediaRoute2Info>>("getSelectableRoutes", "()Ljava/util/List;"); }
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/MediaRouter2.RoutingController.html#getSelectedRoutes()"/> 
            /// </summary>
            public Java.Util.List<Android.Media.MediaRoute2Info> SelectedRoutes
            {
                get { return IExecuteWithSignature<Java.Util.List<Android.Media.MediaRoute2Info>>("getSelectedRoutes", "()Ljava/util/List;"); }
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/MediaRouter2.RoutingController.html#getVolume()"/> <see href="https://developer.android.com/reference/android/media/MediaRouter2.RoutingController.html#setVolume(int)"/>
            /// </summary>
            public int Volume
            {
                get { return IExecuteWithSignature<int>("getVolume", "()I"); } set { IExecuteWithSignature("setVolume", "(I)V", value); }
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/MediaRouter2.RoutingController.html#getVolumeHandling()"/> 
            /// </summary>
            public int VolumeHandling
            {
                get { return IExecuteWithSignature<int>("getVolumeHandling", "()I"); }
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/MediaRouter2.RoutingController.html#getVolumeMax()"/> 
            /// </summary>
            public int VolumeMax
            {
                get { return IExecuteWithSignature<int>("getVolumeMax", "()I"); }
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/MediaRouter2.RoutingController.html#isReleased()"/>
            /// </summary>
            /// <returns><see cref="bool"/></returns>
            public bool IsReleased()
            {
                return IExecuteWithSignature<bool>("isReleased", "()Z");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/MediaRouter2.RoutingController.html#deselectRoute(android.media.MediaRoute2Info)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Media.MediaRoute2Info"/></param>
            public void DeselectRoute(Android.Media.MediaRoute2Info arg0)
            {
                IExecuteWithSignature("deselectRoute", "(Landroid/media/MediaRoute2Info;)V", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/MediaRouter2.RoutingController.html#release()"/>
            /// </summary>
            public void Release()
            {
                IExecuteWithSignature("release", "()V");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/MediaRouter2.RoutingController.html#selectRoute(android.media.MediaRoute2Info)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Media.MediaRoute2Info"/></param>
            public void SelectRoute(Android.Media.MediaRoute2Info arg0)
            {
                IExecuteWithSignature("selectRoute", "(Landroid/media/MediaRoute2Info;)V", arg0);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region TransferCallback
        public partial class TransferCallback
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/MediaRouter2.TransferCallback.html#onStop(android.media.MediaRouter2.RoutingController)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Media.MediaRouter2.RoutingController"/></param>
            public void OnStop(Android.Media.MediaRouter2.RoutingController arg0)
            {
                IExecuteWithSignature("onStop", "(Landroid/media/MediaRouter2$RoutingController;)V", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/MediaRouter2.TransferCallback.html#onTransfer(android.media.MediaRouter2.RoutingController,android.media.MediaRouter2.RoutingController)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Media.MediaRouter2.RoutingController"/></param>
            /// <param name="arg1"><see cref="Android.Media.MediaRouter2.RoutingController"/></param>
            public void OnTransfer(Android.Media.MediaRouter2.RoutingController arg0, Android.Media.MediaRouter2.RoutingController arg1)
            {
                IExecute("onTransfer", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/MediaRouter2.TransferCallback.html#onTransferFailure(android.media.MediaRoute2Info)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Media.MediaRoute2Info"/></param>
            public void OnTransferFailure(Android.Media.MediaRoute2Info arg0)
            {
                IExecuteWithSignature("onTransferFailure", "(Landroid/media/MediaRoute2Info;)V", arg0);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}