/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.9.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Media
{
    #region MediaCasException declaration
    /// <summary>
    /// <see href="https://developer.android.com/reference/android/media/MediaCasException.html"/>
    /// </summary>
    public partial class MediaCasException : Java.Lang.Exception
    {
        const string _bridgeClassName = "android.media.MediaCasException";
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeException_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;

        // TODO: complete the class
        #region DeniedByServerException declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/MediaCasException.DeniedByServerException.html"/>
        /// </summary>
        public partial class DeniedByServerException : Android.Media.MediaCasException
        {
            const string _bridgeClassName = "android.media.MediaCasException$DeniedByServerException";
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeException_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;

            // TODO: complete the class

        }
        #endregion

        #region InsufficientResourceException declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/MediaCasException.InsufficientResourceException.html"/>
        /// </summary>
        public partial class InsufficientResourceException : Android.Media.MediaCasException
        {
            const string _bridgeClassName = "android.media.MediaCasException$InsufficientResourceException";
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeException_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;

            // TODO: complete the class

        }
        #endregion

        #region NotProvisionedException declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/MediaCasException.NotProvisionedException.html"/>
        /// </summary>
        public partial class NotProvisionedException : Android.Media.MediaCasException
        {
            const string _bridgeClassName = "android.media.MediaCasException$NotProvisionedException";
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeException_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;

            // TODO: complete the class

        }
        #endregion

        #region ResourceBusyException declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/MediaCasException.ResourceBusyException.html"/>
        /// </summary>
        public partial class ResourceBusyException : Android.Media.MediaCasException
        {
            const string _bridgeClassName = "android.media.MediaCasException$ResourceBusyException";
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeException_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;

            // TODO: complete the class

        }
        #endregion

        #region UnsupportedCasException declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/MediaCasException.UnsupportedCasException.html"/>
        /// </summary>
        public partial class UnsupportedCasException : Android.Media.MediaCasException
        {
            const string _bridgeClassName = "android.media.MediaCasException$UnsupportedCasException";
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeException_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;

            // TODO: complete the class

        }
        #endregion

    
    }
    #endregion

    #region MediaCasException implementation
    public partial class MediaCasException
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods

        #endregion

        #region Nested classes
        #region DeniedByServerException implementation
        public partial class DeniedByServerException
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region InsufficientResourceException implementation
        public partial class InsufficientResourceException
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region NotProvisionedException implementation
        public partial class NotProvisionedException
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region ResourceBusyException implementation
        public partial class ResourceBusyException
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region UnsupportedCasException implementation
        public partial class UnsupportedCasException
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}