/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.2.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Media
{
    #region MediaController2
    public partial class MediaController2
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/MediaController2.html#getConnectedToken()"/>
        /// </summary>
        /// <returns><see cref="Android.Media.Session2Token"/></returns>
        public Android.Media.Session2Token GetConnectedToken()
        {
            return IExecuteWithSignature<Android.Media.Session2Token>("getConnectedToken", "()Landroid/media/Session2Token;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/MediaController2.html#isPlaybackActive()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsPlaybackActive()
        {
            return IExecuteWithSignature<bool>("isPlaybackActive", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/MediaController2.html#sendSessionCommand(android.media.Session2Command,android.os.Bundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Media.Session2Command"/></param>
        /// <param name="arg1"><see cref="Android.Os.Bundle"/></param>
        /// <returns><see cref="object"/></returns>
        public object SendSessionCommand(Android.Media.Session2Command arg0, Android.Os.Bundle arg1)
        {
            return IExecute("sendSessionCommand", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/MediaController2.html#cancelSessionCommand(java.lang.Object)"/>
        /// </summary>
        /// <param name="arg0"><see cref="object"/></param>
        public void CancelSessionCommand(object arg0)
        {
            IExecuteWithSignature("cancelSessionCommand", "(Ljava/lang/Object;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/MediaController2.html#close()"/>
        /// </summary>
        public void Close()
        {
            IExecuteWithSignature("close", "()V");
        }

        #endregion

        #region Nested classes
        #region Builder
        public partial class Builder
        {
            #region Constructors
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/MediaController2.Builder.html#%3Cinit%3E(android.content.Context,android.media.Session2Token)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Content.Context"/></param>
            /// <param name="arg1"><see cref="Android.Media.Session2Token"/></param>
            public Builder(Android.Content.Context arg0, Android.Media.Session2Token arg1)
                : base(arg0, arg1)
            {
            }

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/MediaController2.Builder.html#build()"/>
            /// </summary>
            /// <returns><see cref="Android.Media.MediaController2"/></returns>
            public Android.Media.MediaController2 Build()
            {
                return IExecuteWithSignature<Android.Media.MediaController2>("build", "()Landroid/media/MediaController2;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/MediaController2.Builder.html#setConnectionHints(android.os.Bundle)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Os.Bundle"/></param>
            /// <returns><see cref="Android.Media.MediaController2.Builder"/></returns>
            public Android.Media.MediaController2.Builder SetConnectionHints(Android.Os.Bundle arg0)
            {
                return IExecuteWithSignature<Android.Media.MediaController2.Builder>("setConnectionHints", "(Landroid/os/Bundle;)Landroid/media/MediaController2$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/MediaController2.Builder.html#setControllerCallback(java.util.concurrent.Executor,android.media.MediaController2.ControllerCallback)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Util.Concurrent.Executor"/></param>
            /// <param name="arg1"><see cref="Android.Media.MediaController2.ControllerCallback"/></param>
            /// <returns><see cref="Android.Media.MediaController2.Builder"/></returns>
            public Android.Media.MediaController2.Builder SetControllerCallback(Java.Util.Concurrent.Executor arg0, Android.Media.MediaController2.ControllerCallback arg1)
            {
                return IExecute<Android.Media.MediaController2.Builder>("setControllerCallback", arg0, arg1);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region ControllerCallback
        public partial class ControllerCallback
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/MediaController2.ControllerCallback.html#onSessionCommand(android.media.MediaController2,android.media.Session2Command,android.os.Bundle)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Media.MediaController2"/></param>
            /// <param name="arg1"><see cref="Android.Media.Session2Command"/></param>
            /// <param name="arg2"><see cref="Android.Os.Bundle"/></param>
            /// <returns><see cref="Android.Media.Session2Command.Result"/></returns>
            public Android.Media.Session2Command.Result OnSessionCommand(Android.Media.MediaController2 arg0, Android.Media.Session2Command arg1, Android.Os.Bundle arg2)
            {
                return IExecute<Android.Media.Session2Command.Result>("onSessionCommand", arg0, arg1, arg2);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/MediaController2.ControllerCallback.html#onCommandResult(android.media.MediaController2,java.lang.Object,android.media.Session2Command,android.media.Session2Command.Result)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Media.MediaController2"/></param>
            /// <param name="arg1"><see cref="object"/></param>
            /// <param name="arg2"><see cref="Android.Media.Session2Command"/></param>
            /// <param name="arg3"><see cref="Android.Media.Session2Command.Result"/></param>
            public void OnCommandResult(Android.Media.MediaController2 arg0, object arg1, Android.Media.Session2Command arg2, Android.Media.Session2Command.Result arg3)
            {
                IExecute("onCommandResult", arg0, arg1, arg2, arg3);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/MediaController2.ControllerCallback.html#onConnected(android.media.MediaController2,android.media.Session2CommandGroup)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Media.MediaController2"/></param>
            /// <param name="arg1"><see cref="Android.Media.Session2CommandGroup"/></param>
            public void OnConnected(Android.Media.MediaController2 arg0, Android.Media.Session2CommandGroup arg1)
            {
                IExecute("onConnected", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/MediaController2.ControllerCallback.html#onDisconnected(android.media.MediaController2)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Media.MediaController2"/></param>
            public void OnDisconnected(Android.Media.MediaController2 arg0)
            {
                IExecuteWithSignature("onDisconnected", "(Landroid/media/MediaController2;)V", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/MediaController2.ControllerCallback.html#onPlaybackActiveChanged(android.media.MediaController2,boolean)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Media.MediaController2"/></param>
            /// <param name="arg1"><see cref="bool"/></param>
            public void OnPlaybackActiveChanged(Android.Media.MediaController2 arg0, bool arg1)
            {
                IExecute("onPlaybackActiveChanged", arg0, arg1);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}