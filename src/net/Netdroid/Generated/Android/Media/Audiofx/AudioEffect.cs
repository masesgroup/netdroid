/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.2.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Media.Audiofx
{
    #region AudioEffect
    public partial class AudioEffect
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#ALREADY_EXISTS"/>
        /// </summary>
        public static int ALREADY_EXISTS { get { if (!_ALREADY_EXISTSReady) { _ALREADY_EXISTSContent = SGetField<int>(LocalBridgeClazz, "ALREADY_EXISTS"); _ALREADY_EXISTSReady = true; } return _ALREADY_EXISTSContent; } }
        private static int _ALREADY_EXISTSContent = default;
        private static bool _ALREADY_EXISTSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#CONTENT_TYPE_GAME"/>
        /// </summary>
        public static int CONTENT_TYPE_GAME { get { if (!_CONTENT_TYPE_GAMEReady) { _CONTENT_TYPE_GAMEContent = SGetField<int>(LocalBridgeClazz, "CONTENT_TYPE_GAME"); _CONTENT_TYPE_GAMEReady = true; } return _CONTENT_TYPE_GAMEContent; } }
        private static int _CONTENT_TYPE_GAMEContent = default;
        private static bool _CONTENT_TYPE_GAMEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#CONTENT_TYPE_MOVIE"/>
        /// </summary>
        public static int CONTENT_TYPE_MOVIE { get { if (!_CONTENT_TYPE_MOVIEReady) { _CONTENT_TYPE_MOVIEContent = SGetField<int>(LocalBridgeClazz, "CONTENT_TYPE_MOVIE"); _CONTENT_TYPE_MOVIEReady = true; } return _CONTENT_TYPE_MOVIEContent; } }
        private static int _CONTENT_TYPE_MOVIEContent = default;
        private static bool _CONTENT_TYPE_MOVIEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#CONTENT_TYPE_MUSIC"/>
        /// </summary>
        public static int CONTENT_TYPE_MUSIC { get { if (!_CONTENT_TYPE_MUSICReady) { _CONTENT_TYPE_MUSICContent = SGetField<int>(LocalBridgeClazz, "CONTENT_TYPE_MUSIC"); _CONTENT_TYPE_MUSICReady = true; } return _CONTENT_TYPE_MUSICContent; } }
        private static int _CONTENT_TYPE_MUSICContent = default;
        private static bool _CONTENT_TYPE_MUSICReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#CONTENT_TYPE_VOICE"/>
        /// </summary>
        public static int CONTENT_TYPE_VOICE { get { if (!_CONTENT_TYPE_VOICEReady) { _CONTENT_TYPE_VOICEContent = SGetField<int>(LocalBridgeClazz, "CONTENT_TYPE_VOICE"); _CONTENT_TYPE_VOICEReady = true; } return _CONTENT_TYPE_VOICEContent; } }
        private static int _CONTENT_TYPE_VOICEContent = default;
        private static bool _CONTENT_TYPE_VOICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#ERROR"/>
        /// </summary>
        public static int ERROR { get { if (!_ERRORReady) { _ERRORContent = SGetField<int>(LocalBridgeClazz, "ERROR"); _ERRORReady = true; } return _ERRORContent; } }
        private static int _ERRORContent = default;
        private static bool _ERRORReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#ERROR_BAD_VALUE"/>
        /// </summary>
        public static int ERROR_BAD_VALUE { get { if (!_ERROR_BAD_VALUEReady) { _ERROR_BAD_VALUEContent = SGetField<int>(LocalBridgeClazz, "ERROR_BAD_VALUE"); _ERROR_BAD_VALUEReady = true; } return _ERROR_BAD_VALUEContent; } }
        private static int _ERROR_BAD_VALUEContent = default;
        private static bool _ERROR_BAD_VALUEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#ERROR_DEAD_OBJECT"/>
        /// </summary>
        public static int ERROR_DEAD_OBJECT { get { if (!_ERROR_DEAD_OBJECTReady) { _ERROR_DEAD_OBJECTContent = SGetField<int>(LocalBridgeClazz, "ERROR_DEAD_OBJECT"); _ERROR_DEAD_OBJECTReady = true; } return _ERROR_DEAD_OBJECTContent; } }
        private static int _ERROR_DEAD_OBJECTContent = default;
        private static bool _ERROR_DEAD_OBJECTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#ERROR_INVALID_OPERATION"/>
        /// </summary>
        public static int ERROR_INVALID_OPERATION { get { if (!_ERROR_INVALID_OPERATIONReady) { _ERROR_INVALID_OPERATIONContent = SGetField<int>(LocalBridgeClazz, "ERROR_INVALID_OPERATION"); _ERROR_INVALID_OPERATIONReady = true; } return _ERROR_INVALID_OPERATIONContent; } }
        private static int _ERROR_INVALID_OPERATIONContent = default;
        private static bool _ERROR_INVALID_OPERATIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#ERROR_NO_INIT"/>
        /// </summary>
        public static int ERROR_NO_INIT { get { if (!_ERROR_NO_INITReady) { _ERROR_NO_INITContent = SGetField<int>(LocalBridgeClazz, "ERROR_NO_INIT"); _ERROR_NO_INITReady = true; } return _ERROR_NO_INITContent; } }
        private static int _ERROR_NO_INITContent = default;
        private static bool _ERROR_NO_INITReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#ERROR_NO_MEMORY"/>
        /// </summary>
        public static int ERROR_NO_MEMORY { get { if (!_ERROR_NO_MEMORYReady) { _ERROR_NO_MEMORYContent = SGetField<int>(LocalBridgeClazz, "ERROR_NO_MEMORY"); _ERROR_NO_MEMORYReady = true; } return _ERROR_NO_MEMORYContent; } }
        private static int _ERROR_NO_MEMORYContent = default;
        private static bool _ERROR_NO_MEMORYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#SUCCESS"/>
        /// </summary>
        public static int SUCCESS { get { if (!_SUCCESSReady) { _SUCCESSContent = SGetField<int>(LocalBridgeClazz, "SUCCESS"); _SUCCESSReady = true; } return _SUCCESSContent; } }
        private static int _SUCCESSContent = default;
        private static bool _SUCCESSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#ACTION_CLOSE_AUDIO_EFFECT_CONTROL_SESSION"/>
        /// </summary>
        public static Java.Lang.String ACTION_CLOSE_AUDIO_EFFECT_CONTROL_SESSION { get { if (!_ACTION_CLOSE_AUDIO_EFFECT_CONTROL_SESSIONReady) { _ACTION_CLOSE_AUDIO_EFFECT_CONTROL_SESSIONContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_CLOSE_AUDIO_EFFECT_CONTROL_SESSION"); _ACTION_CLOSE_AUDIO_EFFECT_CONTROL_SESSIONReady = true; } return _ACTION_CLOSE_AUDIO_EFFECT_CONTROL_SESSIONContent; } }
        private static Java.Lang.String _ACTION_CLOSE_AUDIO_EFFECT_CONTROL_SESSIONContent = default;
        private static bool _ACTION_CLOSE_AUDIO_EFFECT_CONTROL_SESSIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#ACTION_DISPLAY_AUDIO_EFFECT_CONTROL_PANEL"/>
        /// </summary>
        public static Java.Lang.String ACTION_DISPLAY_AUDIO_EFFECT_CONTROL_PANEL { get { if (!_ACTION_DISPLAY_AUDIO_EFFECT_CONTROL_PANELReady) { _ACTION_DISPLAY_AUDIO_EFFECT_CONTROL_PANELContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_DISPLAY_AUDIO_EFFECT_CONTROL_PANEL"); _ACTION_DISPLAY_AUDIO_EFFECT_CONTROL_PANELReady = true; } return _ACTION_DISPLAY_AUDIO_EFFECT_CONTROL_PANELContent; } }
        private static Java.Lang.String _ACTION_DISPLAY_AUDIO_EFFECT_CONTROL_PANELContent = default;
        private static bool _ACTION_DISPLAY_AUDIO_EFFECT_CONTROL_PANELReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#ACTION_OPEN_AUDIO_EFFECT_CONTROL_SESSION"/>
        /// </summary>
        public static Java.Lang.String ACTION_OPEN_AUDIO_EFFECT_CONTROL_SESSION { get { if (!_ACTION_OPEN_AUDIO_EFFECT_CONTROL_SESSIONReady) { _ACTION_OPEN_AUDIO_EFFECT_CONTROL_SESSIONContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_OPEN_AUDIO_EFFECT_CONTROL_SESSION"); _ACTION_OPEN_AUDIO_EFFECT_CONTROL_SESSIONReady = true; } return _ACTION_OPEN_AUDIO_EFFECT_CONTROL_SESSIONContent; } }
        private static Java.Lang.String _ACTION_OPEN_AUDIO_EFFECT_CONTROL_SESSIONContent = default;
        private static bool _ACTION_OPEN_AUDIO_EFFECT_CONTROL_SESSIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#EFFECT_AUXILIARY"/>
        /// </summary>
        public static Java.Lang.String EFFECT_AUXILIARY { get { if (!_EFFECT_AUXILIARYReady) { _EFFECT_AUXILIARYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EFFECT_AUXILIARY"); _EFFECT_AUXILIARYReady = true; } return _EFFECT_AUXILIARYContent; } }
        private static Java.Lang.String _EFFECT_AUXILIARYContent = default;
        private static bool _EFFECT_AUXILIARYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#EFFECT_INSERT"/>
        /// </summary>
        public static Java.Lang.String EFFECT_INSERT { get { if (!_EFFECT_INSERTReady) { _EFFECT_INSERTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EFFECT_INSERT"); _EFFECT_INSERTReady = true; } return _EFFECT_INSERTContent; } }
        private static Java.Lang.String _EFFECT_INSERTContent = default;
        private static bool _EFFECT_INSERTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#EFFECT_POST_PROCESSING"/>
        /// </summary>
        public static Java.Lang.String EFFECT_POST_PROCESSING { get { if (!_EFFECT_POST_PROCESSINGReady) { _EFFECT_POST_PROCESSINGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EFFECT_POST_PROCESSING"); _EFFECT_POST_PROCESSINGReady = true; } return _EFFECT_POST_PROCESSINGContent; } }
        private static Java.Lang.String _EFFECT_POST_PROCESSINGContent = default;
        private static bool _EFFECT_POST_PROCESSINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#EFFECT_PRE_PROCESSING"/>
        /// </summary>
        public static Java.Lang.String EFFECT_PRE_PROCESSING { get { if (!_EFFECT_PRE_PROCESSINGReady) { _EFFECT_PRE_PROCESSINGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EFFECT_PRE_PROCESSING"); _EFFECT_PRE_PROCESSINGReady = true; } return _EFFECT_PRE_PROCESSINGContent; } }
        private static Java.Lang.String _EFFECT_PRE_PROCESSINGContent = default;
        private static bool _EFFECT_PRE_PROCESSINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#EXTRA_AUDIO_SESSION"/>
        /// </summary>
        public static Java.Lang.String EXTRA_AUDIO_SESSION { get { if (!_EXTRA_AUDIO_SESSIONReady) { _EXTRA_AUDIO_SESSIONContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_AUDIO_SESSION"); _EXTRA_AUDIO_SESSIONReady = true; } return _EXTRA_AUDIO_SESSIONContent; } }
        private static Java.Lang.String _EXTRA_AUDIO_SESSIONContent = default;
        private static bool _EXTRA_AUDIO_SESSIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#EXTRA_CONTENT_TYPE"/>
        /// </summary>
        public static Java.Lang.String EXTRA_CONTENT_TYPE { get { if (!_EXTRA_CONTENT_TYPEReady) { _EXTRA_CONTENT_TYPEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_CONTENT_TYPE"); _EXTRA_CONTENT_TYPEReady = true; } return _EXTRA_CONTENT_TYPEContent; } }
        private static Java.Lang.String _EXTRA_CONTENT_TYPEContent = default;
        private static bool _EXTRA_CONTENT_TYPEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#EXTRA_PACKAGE_NAME"/>
        /// </summary>
        public static Java.Lang.String EXTRA_PACKAGE_NAME { get { if (!_EXTRA_PACKAGE_NAMEReady) { _EXTRA_PACKAGE_NAMEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_PACKAGE_NAME"); _EXTRA_PACKAGE_NAMEReady = true; } return _EXTRA_PACKAGE_NAMEContent; } }
        private static Java.Lang.String _EXTRA_PACKAGE_NAMEContent = default;
        private static bool _EXTRA_PACKAGE_NAMEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#EFFECT_TYPE_AEC"/>
        /// </summary>
        public static Java.Util.UUID EFFECT_TYPE_AEC { get { if (!_EFFECT_TYPE_AECReady) { _EFFECT_TYPE_AECContent = SGetField<Java.Util.UUID>(LocalBridgeClazz, "EFFECT_TYPE_AEC"); _EFFECT_TYPE_AECReady = true; } return _EFFECT_TYPE_AECContent; } }
        private static Java.Util.UUID _EFFECT_TYPE_AECContent = default;
        private static bool _EFFECT_TYPE_AECReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#EFFECT_TYPE_AGC"/>
        /// </summary>
        public static Java.Util.UUID EFFECT_TYPE_AGC { get { if (!_EFFECT_TYPE_AGCReady) { _EFFECT_TYPE_AGCContent = SGetField<Java.Util.UUID>(LocalBridgeClazz, "EFFECT_TYPE_AGC"); _EFFECT_TYPE_AGCReady = true; } return _EFFECT_TYPE_AGCContent; } }
        private static Java.Util.UUID _EFFECT_TYPE_AGCContent = default;
        private static bool _EFFECT_TYPE_AGCReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#EFFECT_TYPE_BASS_BOOST"/>
        /// </summary>
        public static Java.Util.UUID EFFECT_TYPE_BASS_BOOST { get { if (!_EFFECT_TYPE_BASS_BOOSTReady) { _EFFECT_TYPE_BASS_BOOSTContent = SGetField<Java.Util.UUID>(LocalBridgeClazz, "EFFECT_TYPE_BASS_BOOST"); _EFFECT_TYPE_BASS_BOOSTReady = true; } return _EFFECT_TYPE_BASS_BOOSTContent; } }
        private static Java.Util.UUID _EFFECT_TYPE_BASS_BOOSTContent = default;
        private static bool _EFFECT_TYPE_BASS_BOOSTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#EFFECT_TYPE_DYNAMICS_PROCESSING"/>
        /// </summary>
        public static Java.Util.UUID EFFECT_TYPE_DYNAMICS_PROCESSING { get { if (!_EFFECT_TYPE_DYNAMICS_PROCESSINGReady) { _EFFECT_TYPE_DYNAMICS_PROCESSINGContent = SGetField<Java.Util.UUID>(LocalBridgeClazz, "EFFECT_TYPE_DYNAMICS_PROCESSING"); _EFFECT_TYPE_DYNAMICS_PROCESSINGReady = true; } return _EFFECT_TYPE_DYNAMICS_PROCESSINGContent; } }
        private static Java.Util.UUID _EFFECT_TYPE_DYNAMICS_PROCESSINGContent = default;
        private static bool _EFFECT_TYPE_DYNAMICS_PROCESSINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#EFFECT_TYPE_ENV_REVERB"/>
        /// </summary>
        public static Java.Util.UUID EFFECT_TYPE_ENV_REVERB { get { if (!_EFFECT_TYPE_ENV_REVERBReady) { _EFFECT_TYPE_ENV_REVERBContent = SGetField<Java.Util.UUID>(LocalBridgeClazz, "EFFECT_TYPE_ENV_REVERB"); _EFFECT_TYPE_ENV_REVERBReady = true; } return _EFFECT_TYPE_ENV_REVERBContent; } }
        private static Java.Util.UUID _EFFECT_TYPE_ENV_REVERBContent = default;
        private static bool _EFFECT_TYPE_ENV_REVERBReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#EFFECT_TYPE_EQUALIZER"/>
        /// </summary>
        public static Java.Util.UUID EFFECT_TYPE_EQUALIZER { get { if (!_EFFECT_TYPE_EQUALIZERReady) { _EFFECT_TYPE_EQUALIZERContent = SGetField<Java.Util.UUID>(LocalBridgeClazz, "EFFECT_TYPE_EQUALIZER"); _EFFECT_TYPE_EQUALIZERReady = true; } return _EFFECT_TYPE_EQUALIZERContent; } }
        private static Java.Util.UUID _EFFECT_TYPE_EQUALIZERContent = default;
        private static bool _EFFECT_TYPE_EQUALIZERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#EFFECT_TYPE_HAPTIC_GENERATOR"/>
        /// </summary>
        public static Java.Util.UUID EFFECT_TYPE_HAPTIC_GENERATOR { get { if (!_EFFECT_TYPE_HAPTIC_GENERATORReady) { _EFFECT_TYPE_HAPTIC_GENERATORContent = SGetField<Java.Util.UUID>(LocalBridgeClazz, "EFFECT_TYPE_HAPTIC_GENERATOR"); _EFFECT_TYPE_HAPTIC_GENERATORReady = true; } return _EFFECT_TYPE_HAPTIC_GENERATORContent; } }
        private static Java.Util.UUID _EFFECT_TYPE_HAPTIC_GENERATORContent = default;
        private static bool _EFFECT_TYPE_HAPTIC_GENERATORReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#EFFECT_TYPE_LOUDNESS_ENHANCER"/>
        /// </summary>
        public static Java.Util.UUID EFFECT_TYPE_LOUDNESS_ENHANCER { get { if (!_EFFECT_TYPE_LOUDNESS_ENHANCERReady) { _EFFECT_TYPE_LOUDNESS_ENHANCERContent = SGetField<Java.Util.UUID>(LocalBridgeClazz, "EFFECT_TYPE_LOUDNESS_ENHANCER"); _EFFECT_TYPE_LOUDNESS_ENHANCERReady = true; } return _EFFECT_TYPE_LOUDNESS_ENHANCERContent; } }
        private static Java.Util.UUID _EFFECT_TYPE_LOUDNESS_ENHANCERContent = default;
        private static bool _EFFECT_TYPE_LOUDNESS_ENHANCERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#EFFECT_TYPE_NS"/>
        /// </summary>
        public static Java.Util.UUID EFFECT_TYPE_NS { get { if (!_EFFECT_TYPE_NSReady) { _EFFECT_TYPE_NSContent = SGetField<Java.Util.UUID>(LocalBridgeClazz, "EFFECT_TYPE_NS"); _EFFECT_TYPE_NSReady = true; } return _EFFECT_TYPE_NSContent; } }
        private static Java.Util.UUID _EFFECT_TYPE_NSContent = default;
        private static bool _EFFECT_TYPE_NSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#EFFECT_TYPE_PRESET_REVERB"/>
        /// </summary>
        public static Java.Util.UUID EFFECT_TYPE_PRESET_REVERB { get { if (!_EFFECT_TYPE_PRESET_REVERBReady) { _EFFECT_TYPE_PRESET_REVERBContent = SGetField<Java.Util.UUID>(LocalBridgeClazz, "EFFECT_TYPE_PRESET_REVERB"); _EFFECT_TYPE_PRESET_REVERBReady = true; } return _EFFECT_TYPE_PRESET_REVERBContent; } }
        private static Java.Util.UUID _EFFECT_TYPE_PRESET_REVERBContent = default;
        private static bool _EFFECT_TYPE_PRESET_REVERBReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#EFFECT_TYPE_VIRTUALIZER"/>
        /// </summary>
        public static Java.Util.UUID EFFECT_TYPE_VIRTUALIZER { get { if (!_EFFECT_TYPE_VIRTUALIZERReady) { _EFFECT_TYPE_VIRTUALIZERContent = SGetField<Java.Util.UUID>(LocalBridgeClazz, "EFFECT_TYPE_VIRTUALIZER"); _EFFECT_TYPE_VIRTUALIZERReady = true; } return _EFFECT_TYPE_VIRTUALIZERContent; } }
        private static Java.Util.UUID _EFFECT_TYPE_VIRTUALIZERContent = default;
        private static bool _EFFECT_TYPE_VIRTUALIZERReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#queryEffects()"/>
        /// </summary>
        /// <returns><see cref="Android.Media.Audiofx.AudioEffect.Descriptor"/></returns>
        public static Android.Media.Audiofx.AudioEffect.Descriptor[] QueryEffects()
        {
            return SExecuteWithSignatureArray<Android.Media.Audiofx.AudioEffect.Descriptor>(LocalBridgeClazz, "queryEffects", "()[Landroid/media/audiofx/AudioEffect$Descriptor;");
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#getDescriptor()"/>
        /// </summary>
        /// <returns><see cref="Android.Media.Audiofx.AudioEffect.Descriptor"/></returns>
        /// <exception cref="Java.Lang.IllegalStateException"/>
        public Android.Media.Audiofx.AudioEffect.Descriptor GetDescriptor()
        {
            return IExecuteWithSignature<Android.Media.Audiofx.AudioEffect.Descriptor>("getDescriptor", "()Landroid/media/audiofx/AudioEffect$Descriptor;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#getEnabled()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        /// <exception cref="Java.Lang.IllegalStateException"/>
        public bool GetEnabled()
        {
            return IExecuteWithSignature<bool>("getEnabled", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#hasControl()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        /// <exception cref="Java.Lang.IllegalStateException"/>
        public bool HasControl()
        {
            return IExecuteWithSignature<bool>("hasControl", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#getId()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        /// <exception cref="Java.Lang.IllegalStateException"/>
        public int GetId()
        {
            return IExecuteWithSignature<int>("getId", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#setEnabled(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        /// <returns><see cref="int"/></returns>
        /// <exception cref="Java.Lang.IllegalStateException"/>
        public int SetEnabled(bool arg0)
        {
            return IExecuteWithSignature<int>("setEnabled", "(Z)I", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#release()"/>
        /// </summary>
        public void Release()
        {
            IExecuteWithSignature("release", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#setControlStatusListener(android.media.audiofx.AudioEffect.OnControlStatusChangeListener)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Media.Audiofx.AudioEffect.OnControlStatusChangeListener"/></param>
        public void SetControlStatusListener(Android.Media.Audiofx.AudioEffect.OnControlStatusChangeListener arg0)
        {
            IExecuteWithSignature("setControlStatusListener", "(Landroid/media/audiofx/AudioEffect$OnControlStatusChangeListener;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/audiofx/AudioEffect.html#setEnableStatusListener(android.media.audiofx.AudioEffect.OnEnableStatusChangeListener)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Media.Audiofx.AudioEffect.OnEnableStatusChangeListener"/></param>
        public void SetEnableStatusListener(Android.Media.Audiofx.AudioEffect.OnEnableStatusChangeListener arg0)
        {
            IExecuteWithSignature("setEnableStatusListener", "(Landroid/media/audiofx/AudioEffect$OnEnableStatusChangeListener;)V", arg0);
        }

        #endregion

        #region Nested classes
        #region Descriptor
        public partial class Descriptor
        {
            #region Constructors
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/audiofx/AudioEffect.Descriptor.html#%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <param name="arg1"><see cref="Java.Lang.String"/></param>
            /// <param name="arg2"><see cref="Java.Lang.String"/></param>
            /// <param name="arg3"><see cref="Java.Lang.String"/></param>
            /// <param name="arg4"><see cref="Java.Lang.String"/></param>
            public Descriptor(Java.Lang.String arg0, Java.Lang.String arg1, Java.Lang.String arg2, Java.Lang.String arg3, Java.Lang.String arg4)
                : base(arg0, arg1, arg2, arg3, arg4)
            {
            }

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/audiofx/AudioEffect.Descriptor.html#connectMode"/>
            /// </summary>
            public Java.Lang.String connectMode { get { return IGetField<Java.Lang.String>("connectMode"); } set { ISetField("connectMode", value); } }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/audiofx/AudioEffect.Descriptor.html#implementor"/>
            /// </summary>
            public Java.Lang.String implementor { get { return IGetField<Java.Lang.String>("implementor"); } set { ISetField("implementor", value); } }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/audiofx/AudioEffect.Descriptor.html#name"/>
            /// </summary>
            public Java.Lang.String name { get { return IGetField<Java.Lang.String>("name"); } set { ISetField("name", value); } }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/audiofx/AudioEffect.Descriptor.html#type"/>
            /// </summary>
            public Java.Util.UUID type { get { return IGetField<Java.Util.UUID>("type"); } set { ISetField("type", value); } }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/audiofx/AudioEffect.Descriptor.html#uuid"/>
            /// </summary>
            public Java.Util.UUID uuid { get { return IGetField<Java.Util.UUID>("uuid"); } set { ISetField("uuid", value); } }

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region OnControlStatusChangeListener
        public partial class OnControlStatusChangeListener
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// Handlers initializer for <see cref="OnControlStatusChangeListener"/>
            /// </summary>
            protected virtual void InitializeHandlers()
            {
                AddEventHandler("onControlStatusChange", new global::System.EventHandler<CLRListenerEventArgs<CLREventData<Android.Media.Audiofx.AudioEffect>>>(OnControlStatusChangeEventHandler));

            }

            /// <summary>
            /// Handler for <see href="https://developer.android.com/reference/android/media/audiofx/AudioEffect.OnControlStatusChangeListener.html#onControlStatusChange(android.media.audiofx.AudioEffect,boolean)"/>
            /// </summary>
            /// <remarks>If <see cref="OnOnControlStatusChange"/> has a value it takes precedence over corresponding class method</remarks>
            public global::System.Action<Android.Media.Audiofx.AudioEffect, bool> OnOnControlStatusChange { get; set; } = null;

            void OnControlStatusChangeEventHandler(object sender, CLRListenerEventArgs<CLREventData<Android.Media.Audiofx.AudioEffect>> data)
            {
                var methodToExecute = (OnOnControlStatusChange != null) ? OnOnControlStatusChange : OnControlStatusChange;
                methodToExecute.Invoke(data.EventData.TypedEventData, data.EventData.GetAt<bool>(0));
            }

            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/audiofx/AudioEffect.OnControlStatusChangeListener.html#onControlStatusChange(android.media.audiofx.AudioEffect,boolean)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Media.Audiofx.AudioEffect"/></param>
            /// <param name="arg1"><see cref="bool"/></param>
            public virtual void OnControlStatusChange(Android.Media.Audiofx.AudioEffect arg0, bool arg1)
            {
                
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region OnControlStatusChangeListenerDirect
        public partial class OnControlStatusChangeListenerDirect
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/audiofx/AudioEffect.OnControlStatusChangeListener.html#onControlStatusChange(android.media.audiofx.AudioEffect,boolean)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Media.Audiofx.AudioEffect"/></param>
            /// <param name="arg1"><see cref="bool"/></param>
            public override void OnControlStatusChange(Android.Media.Audiofx.AudioEffect arg0, bool arg1)
            {
                IExecute("onControlStatusChange", arg0, arg1);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region OnEnableStatusChangeListener
        public partial class OnEnableStatusChangeListener
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// Handlers initializer for <see cref="OnEnableStatusChangeListener"/>
            /// </summary>
            protected virtual void InitializeHandlers()
            {
                AddEventHandler("onEnableStatusChange", new global::System.EventHandler<CLRListenerEventArgs<CLREventData<Android.Media.Audiofx.AudioEffect>>>(OnEnableStatusChangeEventHandler));

            }

            /// <summary>
            /// Handler for <see href="https://developer.android.com/reference/android/media/audiofx/AudioEffect.OnEnableStatusChangeListener.html#onEnableStatusChange(android.media.audiofx.AudioEffect,boolean)"/>
            /// </summary>
            /// <remarks>If <see cref="OnOnEnableStatusChange"/> has a value it takes precedence over corresponding class method</remarks>
            public global::System.Action<Android.Media.Audiofx.AudioEffect, bool> OnOnEnableStatusChange { get; set; } = null;

            void OnEnableStatusChangeEventHandler(object sender, CLRListenerEventArgs<CLREventData<Android.Media.Audiofx.AudioEffect>> data)
            {
                var methodToExecute = (OnOnEnableStatusChange != null) ? OnOnEnableStatusChange : OnEnableStatusChange;
                methodToExecute.Invoke(data.EventData.TypedEventData, data.EventData.GetAt<bool>(0));
            }

            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/audiofx/AudioEffect.OnEnableStatusChangeListener.html#onEnableStatusChange(android.media.audiofx.AudioEffect,boolean)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Media.Audiofx.AudioEffect"/></param>
            /// <param name="arg1"><see cref="bool"/></param>
            public virtual void OnEnableStatusChange(Android.Media.Audiofx.AudioEffect arg0, bool arg1)
            {
                
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region OnEnableStatusChangeListenerDirect
        public partial class OnEnableStatusChangeListenerDirect
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/audiofx/AudioEffect.OnEnableStatusChangeListener.html#onEnableStatusChange(android.media.audiofx.AudioEffect,boolean)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Media.Audiofx.AudioEffect"/></param>
            /// <param name="arg1"><see cref="bool"/></param>
            public override void OnEnableStatusChange(Android.Media.Audiofx.AudioEffect arg0, bool arg1)
            {
                IExecute("onEnableStatusChange", arg0, arg1);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}