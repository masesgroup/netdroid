/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.9.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Media
{
    #region MediaScannerConnection declaration
    /// <summary>
    /// <see href="https://developer.android.com/reference/android/media/MediaScannerConnection.html"/>
    /// </summary>
    public partial class MediaScannerConnection : Android.Content.ServiceConnection
    {
        const string _bridgeClassName = "android.media.MediaScannerConnection";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public MediaScannerConnection() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public MediaScannerConnection(params object[] args) : base(args) { }

        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class
        #region MediaScannerConnectionClient declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/MediaScannerConnection.MediaScannerConnectionClient.html"/>
        /// </summary>
        public partial class MediaScannerConnectionClient : MASES.JCOBridge.C2JBridge.JVMBridgeListener
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public MediaScannerConnectionClient() { InitializeHandlers(); }

            const string _bridgeClassName = "org.mases.netdroid.generated.android.media.MediaScannerConnection_MediaScannerConnectionClient";
            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
            
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeListener_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;

        
            // TODO: complete the class

        }
        #endregion

        #region MediaScannerConnectionClientDirect declaration
        /// <summary>
        /// Direct override of <see cref="MediaScannerConnectionClient"/> or its generic type if there is one
        /// </summary>
        public partial class MediaScannerConnectionClientDirect : MediaScannerConnectionClient
        {
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeListener_AutoInit.htm"/>
            /// </summary>
            public override bool AutoInit => false;

            /// <inheritdoc />
            protected override void InitializeHandlers() { }

            const string _bridgeClassName = "android.media.MediaScannerConnection$MediaScannerConnectionClient";
            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeListener_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => true;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => true;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;
        }
        #endregion

        #region OnScanCompletedListener declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/MediaScannerConnection.OnScanCompletedListener.html"/>
        /// </summary>
        public partial class OnScanCompletedListener : MASES.JCOBridge.C2JBridge.JVMBridgeListener
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public OnScanCompletedListener() { InitializeHandlers(); }

            const string _bridgeClassName = "org.mases.netdroid.generated.android.media.MediaScannerConnection_OnScanCompletedListener";
            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
            
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeListener_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;

        
            // TODO: complete the class

        }
        #endregion

        #region OnScanCompletedListenerDirect declaration
        /// <summary>
        /// Direct override of <see cref="OnScanCompletedListener"/> or its generic type if there is one
        /// </summary>
        public partial class OnScanCompletedListenerDirect : OnScanCompletedListener
        {
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeListener_AutoInit.htm"/>
            /// </summary>
            public override bool AutoInit => false;

            /// <inheritdoc />
            protected override void InitializeHandlers() { }

            const string _bridgeClassName = "android.media.MediaScannerConnection$OnScanCompletedListener";
            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeListener_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => true;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => true;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;
        }
        #endregion

    
    }
    #endregion

    #region MediaScannerConnection implementation
    public partial class MediaScannerConnection
    {
        #region Constructors
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/MediaScannerConnection.html#%3Cinit%3E(android.content.Context,android.media.MediaScannerConnection.MediaScannerConnectionClient)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        /// <param name="arg1"><see cref="Android.Media.MediaScannerConnection.MediaScannerConnectionClient"/></param>
        public MediaScannerConnection(Android.Content.Context arg0, Android.Media.MediaScannerConnection.MediaScannerConnectionClient arg1)
            : base(arg0, arg1)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/MediaScannerConnection.html#scanFile(android.content.Context,java.lang.String[],java.lang.String[],android.media.MediaScannerConnection.OnScanCompletedListener)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="Java.Lang.String"/></param>
        /// <param name="arg3"><see cref="Android.Media.MediaScannerConnection.OnScanCompletedListener"/></param>
        public static void ScanFile(Android.Content.Context arg0, Java.Lang.String[] arg1, Java.Lang.String[] arg2, Android.Media.MediaScannerConnection.OnScanCompletedListener arg3)
        {
            SExecuteWithSignature(LocalBridgeClazz, "scanFile", "(Landroid/content/Context;[Ljava/lang/String;[Ljava/lang/String;Landroid/media/MediaScannerConnection$OnScanCompletedListener;)V", arg0, arg1, arg2, arg3);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/MediaScannerConnection.html#isConnected()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsConnected()
        {
            return IExecuteWithSignature<bool>("isConnected", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/MediaScannerConnection.html#connect()"/>
        /// </summary>
        public void Connect()
        {
            IExecuteWithSignature("connect", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/MediaScannerConnection.html#disconnect()"/>
        /// </summary>
        public void Disconnect()
        {
            IExecuteWithSignature("disconnect", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/MediaScannerConnection.html#onServiceConnected(android.content.ComponentName,android.os.IBinder)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.ComponentName"/></param>
        /// <param name="arg1"><see cref="Android.Os.IBinder"/></param>
        public void OnServiceConnected(Android.Content.ComponentName arg0, Android.Os.IBinder arg1)
        {
            IExecuteWithSignature("onServiceConnected", "(Landroid/content/ComponentName;Landroid/os/IBinder;)V", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/MediaScannerConnection.html#onServiceDisconnected(android.content.ComponentName)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.ComponentName"/></param>
        public void OnServiceDisconnected(Android.Content.ComponentName arg0)
        {
            IExecuteWithSignature("onServiceDisconnected", "(Landroid/content/ComponentName;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/MediaScannerConnection.html#scanFile(java.lang.String,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        public void ScanFile(Java.Lang.String arg0, Java.Lang.String arg1)
        {
            IExecuteWithSignature("scanFile", "(Ljava/lang/String;Ljava/lang/String;)V", arg0, arg1);
        }

        #endregion

        #region Nested classes
        #region MediaScannerConnectionClient implementation
        public partial class MediaScannerConnectionClient
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// Handlers initializer for <see cref="MediaScannerConnectionClient"/>
            /// </summary>
            protected virtual void InitializeHandlers()
            {
                AddEventHandler("onMediaScannerConnected", new global::System.EventHandler<CLRListenerEventArgs<CLREventData<MASES.JNet.Specific.JNetEventResult>>>(OnMediaScannerConnectedEventHandler));
                AddEventHandler("onScanCompleted", new global::System.EventHandler<CLRListenerEventArgs<CLREventData<MASES.JNet.Specific.JNetEventResult>>>(OnScanCompletedEventHandler));

            }

            /// <summary>
            /// Handler for <see href="https://developer.android.com/reference/android/media/MediaScannerConnection.MediaScannerConnectionClient.html#onMediaScannerConnected()"/>
            /// </summary>
            /// <remarks>If <see cref="OnOnMediaScannerConnected"/> has a value it takes precedence over corresponding class method</remarks>
            public global::System.Action OnOnMediaScannerConnected { get; set; } = null;

            bool hasOverrideOnMediaScannerConnected = true;
            void OnMediaScannerConnectedEventHandler(object sender, CLRListenerEventArgs<CLREventData<MASES.JNet.Specific.JNetEventResult>> data)
            {
                hasOverrideOnMediaScannerConnected = true;
                var methodToExecute = (OnOnMediaScannerConnected != null) ? OnOnMediaScannerConnected : OnMediaScannerConnected;
                methodToExecute.Invoke();
                data.EventData.TypedEventData.HasOverride = hasOverrideOnMediaScannerConnected;
            }

            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/MediaScannerConnection.MediaScannerConnectionClient.html#onMediaScannerConnected()"/>
            /// </summary>
            public virtual void OnMediaScannerConnected()
            {
                hasOverrideOnMediaScannerConnected = false;
            }

            /// <summary>
            /// Handler for <see href="https://developer.android.com/reference/android/media/MediaScannerConnection.OnScanCompletedListener.html#onScanCompleted(java.lang.String,android.net.Uri)"/>
            /// </summary>
            /// <remarks>If <see cref="OnOnScanCompleted"/> has a value it takes precedence over corresponding class method</remarks>
            public global::System.Action<Java.Lang.String, Android.Net.Uri> OnOnScanCompleted { get; set; } = null;

            bool hasOverrideOnScanCompleted = true;
            void OnScanCompletedEventHandler(object sender, CLRListenerEventArgs<CLREventData<MASES.JNet.Specific.JNetEventResult>> data)
            {
                hasOverrideOnScanCompleted = true;
                var methodToExecute = (OnOnScanCompleted != null) ? OnOnScanCompleted : OnScanCompleted;
                methodToExecute.Invoke(data.EventData.GetAt<Java.Lang.String>(0), data.EventData.GetAt<Android.Net.Uri>(1));
                data.EventData.TypedEventData.HasOverride = hasOverrideOnScanCompleted;
            }

            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/MediaScannerConnection.OnScanCompletedListener.html#onScanCompleted(java.lang.String,android.net.Uri)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <param name="arg1"><see cref="Android.Net.Uri"/></param>
            public virtual void OnScanCompleted(Java.Lang.String arg0, Android.Net.Uri arg1)
            {
                hasOverrideOnScanCompleted = false;
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region MediaScannerConnectionClientDirect implementation
        public partial class MediaScannerConnectionClientDirect
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/MediaScannerConnection.MediaScannerConnectionClient.html#onMediaScannerConnected()"/>
            /// </summary>
            public override void OnMediaScannerConnected()
            {
                IExecuteWithSignature("onMediaScannerConnected", "()V");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/MediaScannerConnection.OnScanCompletedListener.html#onScanCompleted(java.lang.String,android.net.Uri)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <param name="arg1"><see cref="Android.Net.Uri"/></param>
            public override void OnScanCompleted(Java.Lang.String arg0, Android.Net.Uri arg1)
            {
                IExecute("onScanCompleted", arg0, arg1);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region OnScanCompletedListener implementation
        public partial class OnScanCompletedListener
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// Handlers initializer for <see cref="OnScanCompletedListener"/>
            /// </summary>
            protected virtual void InitializeHandlers()
            {
                AddEventHandler("onScanCompleted", new global::System.EventHandler<CLRListenerEventArgs<CLREventData<MASES.JNet.Specific.JNetEventResult>>>(OnScanCompletedEventHandler));

            }

            /// <summary>
            /// Handler for <see href="https://developer.android.com/reference/android/media/MediaScannerConnection.OnScanCompletedListener.html#onScanCompleted(java.lang.String,android.net.Uri)"/>
            /// </summary>
            /// <remarks>If <see cref="OnOnScanCompleted"/> has a value it takes precedence over corresponding class method</remarks>
            public global::System.Action<Java.Lang.String, Android.Net.Uri> OnOnScanCompleted { get; set; } = null;

            bool hasOverrideOnScanCompleted = true;
            void OnScanCompletedEventHandler(object sender, CLRListenerEventArgs<CLREventData<MASES.JNet.Specific.JNetEventResult>> data)
            {
                hasOverrideOnScanCompleted = true;
                var methodToExecute = (OnOnScanCompleted != null) ? OnOnScanCompleted : OnScanCompleted;
                methodToExecute.Invoke(data.EventData.GetAt<Java.Lang.String>(0), data.EventData.GetAt<Android.Net.Uri>(1));
                data.EventData.TypedEventData.HasOverride = hasOverrideOnScanCompleted;
            }

            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/MediaScannerConnection.OnScanCompletedListener.html#onScanCompleted(java.lang.String,android.net.Uri)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <param name="arg1"><see cref="Android.Net.Uri"/></param>
            public virtual void OnScanCompleted(Java.Lang.String arg0, Android.Net.Uri arg1)
            {
                hasOverrideOnScanCompleted = false;
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region OnScanCompletedListenerDirect implementation
        public partial class OnScanCompletedListenerDirect
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/MediaScannerConnection.OnScanCompletedListener.html#onScanCompleted(java.lang.String,android.net.Uri)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <param name="arg1"><see cref="Android.Net.Uri"/></param>
            public override void OnScanCompleted(Java.Lang.String arg0, Android.Net.Uri arg1)
            {
                IExecuteWithSignature("onScanCompleted", "(Ljava/lang/String;Landroid/net/Uri;)V", arg0, arg1);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}