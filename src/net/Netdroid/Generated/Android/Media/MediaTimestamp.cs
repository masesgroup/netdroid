/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.2.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Media
{
    #region MediaTimestamp
    public partial class MediaTimestamp
    {
        #region Constructors
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/MediaTimestamp.html#%3Cinit%3E(long,long,float)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <param name="arg1"><see cref="long"/></param>
        /// <param name="arg2"><see cref="float"/></param>
        public MediaTimestamp(long arg0, long arg1, float arg2)
            : base(arg0, arg1, arg2)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/MediaTimestamp.html#TIMESTAMP_UNKNOWN"/>
        /// </summary>
        public static Android.Media.MediaTimestamp TIMESTAMP_UNKNOWN { get { if (!_TIMESTAMP_UNKNOWNReady) { _TIMESTAMP_UNKNOWNContent = SGetField<Android.Media.MediaTimestamp>(LocalBridgeClazz, "TIMESTAMP_UNKNOWN"); _TIMESTAMP_UNKNOWNReady = true; } return _TIMESTAMP_UNKNOWNContent; } }
        private static Android.Media.MediaTimestamp _TIMESTAMP_UNKNOWNContent = default;
        private static bool _TIMESTAMP_UNKNOWNReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/MediaTimestamp.html#getMediaClockRate()"/>
        /// </summary>
        /// <returns><see cref="float"/></returns>
        public float GetMediaClockRate()
        {
            return IExecuteWithSignature<float>("getMediaClockRate", "()F");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/MediaTimestamp.html#getAnchorMediaTimeUs()"/>
        /// </summary>
        /// <returns><see cref="long"/></returns>
        public long GetAnchorMediaTimeUs()
        {
            return IExecuteWithSignature<long>("getAnchorMediaTimeUs", "()J");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/MediaTimestamp.html#getAnchorSystemNanoTime()"/>
        /// </summary>
        /// <returns><see cref="long"/></returns>
        public long GetAnchorSystemNanoTime()
        {
            return IExecuteWithSignature<long>("getAnchorSystemNanoTime", "()J");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/MediaTimestamp.html#getAnchorSytemNanoTime()"/>
        /// </summary>
        /// <returns><see cref="long"/></returns>
        [global::System.Obsolete()]
        public long GetAnchorSytemNanoTime()
        {
            return IExecuteWithSignature<long>("getAnchorSytemNanoTime", "()J");
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}