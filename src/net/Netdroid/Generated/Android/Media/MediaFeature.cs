/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.4.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Media
{
    #region MediaFeature
    public partial class MediaFeature
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods

        #endregion

        #region Nested classes
        #region HdrType
        public partial class HdrType
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/MediaFeature.HdrType.html#DOLBY_VISION"/>
            /// </summary>
            public static Java.Lang.String DOLBY_VISION { get { if (!_DOLBY_VISIONReady) { _DOLBY_VISIONContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "DOLBY_VISION"); _DOLBY_VISIONReady = true; } return _DOLBY_VISIONContent; } }
            private static Java.Lang.String _DOLBY_VISIONContent = default;
            private static bool _DOLBY_VISIONReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/MediaFeature.HdrType.html#HDR10"/>
            /// </summary>
            public static Java.Lang.String HDR10 { get { if (!_HDR10Ready) { _HDR10Content = SGetField<Java.Lang.String>(LocalBridgeClazz, "HDR10"); _HDR10Ready = true; } return _HDR10Content; } }
            private static Java.Lang.String _HDR10Content = default;
            private static bool _HDR10Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/MediaFeature.HdrType.html#HDR10_PLUS"/>
            /// </summary>
            public static Java.Lang.String HDR10_PLUS { get { if (!_HDR10_PLUSReady) { _HDR10_PLUSContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "HDR10_PLUS"); _HDR10_PLUSReady = true; } return _HDR10_PLUSContent; } }
            private static Java.Lang.String _HDR10_PLUSContent = default;
            private static bool _HDR10_PLUSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/MediaFeature.HdrType.html#HLG"/>
            /// </summary>
            public static Java.Lang.String HLG { get { if (!_HLGReady) { _HLGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "HLG"); _HLGReady = true; } return _HLGContent; } }
            private static Java.Lang.String _HLGContent = default;
            private static bool _HLGReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}