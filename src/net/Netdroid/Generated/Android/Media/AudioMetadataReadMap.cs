/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.5.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Media
{
    #region IAudioMetadataReadMap
    /// <summary>
    /// .NET interface for TO BE DEFINED FROM USER
    /// </summary>
    public partial interface IAudioMetadataReadMap
    {
        #region Instance methods

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion

    #region AudioMetadataReadMap
    public partial class AudioMetadataReadMap : Android.Media.IAudioMetadataReadMap
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/AudioMetadataReadMap.html#containsKey(android.media.AudioMetadata.Key)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Media.AudioMetadata.Key"/></param>
        /// <typeparam name="T"></typeparam>
        /// <returns><see cref="bool"/></returns>
        public bool ContainsKey<T>(Android.Media.AudioMetadata.Key<T> arg0)
        {
            return IExecuteWithSignature<bool>("containsKey", "(Landroid/media/AudioMetadata$Key;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/AudioMetadataReadMap.html#get(android.media.AudioMetadata.Key)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Media.AudioMetadata.Key"/></param>
        /// <typeparam name="T"></typeparam>
        /// <returns><typeparamref name="T"/></returns>
        public T Get<T>(Android.Media.AudioMetadata.Key<T> arg0)
        {
            return IExecuteWithSignature<T>("get", "(Landroid/media/AudioMetadata$Key;)Ljava/lang/Object;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/AudioMetadataReadMap.html#dup()"/>
        /// </summary>
        /// <returns><see cref="Android.Media.AudioMetadataMap"/></returns>
        public Android.Media.AudioMetadataMap Dup()
        {
            return IExecuteWithSignature<Android.Media.AudioMetadataMap>("dup", "()Landroid/media/AudioMetadataMap;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/AudioMetadataReadMap.html#size()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int Size()
        {
            return IExecuteWithSignature<int>("size", "()I");
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}