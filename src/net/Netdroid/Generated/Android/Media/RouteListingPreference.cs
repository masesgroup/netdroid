/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.4.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Media
{
    #region RouteListingPreference
    public partial class RouteListingPreference
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/RouteListingPreference.html#CREATOR"/>
        /// </summary>
        public static Android.Os.Parcelable.Creator CREATOR { get { if (!_CREATORReady) { _CREATORContent = SGetField<Android.Os.Parcelable.Creator>(LocalBridgeClazz, "CREATOR"); _CREATORReady = true; } return _CREATORContent; } }
        private static Android.Os.Parcelable.Creator _CREATORContent = default;
        private static bool _CREATORReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/RouteListingPreference.html#ACTION_TRANSFER_MEDIA"/>
        /// </summary>
        public static Java.Lang.String ACTION_TRANSFER_MEDIA { get { if (!_ACTION_TRANSFER_MEDIAReady) { _ACTION_TRANSFER_MEDIAContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_TRANSFER_MEDIA"); _ACTION_TRANSFER_MEDIAReady = true; } return _ACTION_TRANSFER_MEDIAContent; } }
        private static Java.Lang.String _ACTION_TRANSFER_MEDIAContent = default;
        private static bool _ACTION_TRANSFER_MEDIAReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/RouteListingPreference.html#EXTRA_ROUTE_ID"/>
        /// </summary>
        public static Java.Lang.String EXTRA_ROUTE_ID { get { if (!_EXTRA_ROUTE_IDReady) { _EXTRA_ROUTE_IDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_ROUTE_ID"); _EXTRA_ROUTE_IDReady = true; } return _EXTRA_ROUTE_IDContent; } }
        private static Java.Lang.String _EXTRA_ROUTE_IDContent = default;
        private static bool _EXTRA_ROUTE_IDReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/RouteListingPreference.html#getLinkedItemComponentName()"/>
        /// </summary>
        /// <returns><see cref="Android.Content.ComponentName"/></returns>
        public Android.Content.ComponentName GetLinkedItemComponentName()
        {
            return IExecuteWithSignature<Android.Content.ComponentName>("getLinkedItemComponentName", "()Landroid/content/ComponentName;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/RouteListingPreference.html#getUseSystemOrdering()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool GetUseSystemOrdering()
        {
            return IExecuteWithSignature<bool>("getUseSystemOrdering", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/RouteListingPreference.html#describeContents()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int DescribeContents()
        {
            return IExecuteWithSignature<int>("describeContents", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/RouteListingPreference.html#getItems()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.List"/></returns>
        public Java.Util.List<Android.Media.RouteListingPreference.Item> GetItems()
        {
            return IExecuteWithSignature<Java.Util.List<Android.Media.RouteListingPreference.Item>>("getItems", "()Ljava/util/List;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/media/RouteListingPreference.html#writeToParcel(android.os.Parcel,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.Parcel"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void WriteToParcel(Android.Os.Parcel arg0, int arg1)
        {
            IExecute("writeToParcel", arg0, arg1);
        }

        #endregion

        #region Nested classes
        #region Builder
        public partial class Builder
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/RouteListingPreference.Builder.html#build()"/>
            /// </summary>
            /// <returns><see cref="Android.Media.RouteListingPreference"/></returns>
            public Android.Media.RouteListingPreference Build()
            {
                return IExecuteWithSignature<Android.Media.RouteListingPreference>("build", "()Landroid/media/RouteListingPreference;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/RouteListingPreference.Builder.html#setItems(java.util.List)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Util.List"/></param>
            /// <returns><see cref="Android.Media.RouteListingPreference.Builder"/></returns>
            public Android.Media.RouteListingPreference.Builder SetItems(Java.Util.List<Android.Media.RouteListingPreference.Item> arg0)
            {
                return IExecuteWithSignature<Android.Media.RouteListingPreference.Builder>("setItems", "(Ljava/util/List;)Landroid/media/RouteListingPreference$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/RouteListingPreference.Builder.html#setLinkedItemComponentName(android.content.ComponentName)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Content.ComponentName"/></param>
            /// <returns><see cref="Android.Media.RouteListingPreference.Builder"/></returns>
            public Android.Media.RouteListingPreference.Builder SetLinkedItemComponentName(Android.Content.ComponentName arg0)
            {
                return IExecuteWithSignature<Android.Media.RouteListingPreference.Builder>("setLinkedItemComponentName", "(Landroid/content/ComponentName;)Landroid/media/RouteListingPreference$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/RouteListingPreference.Builder.html#setUseSystemOrdering(boolean)"/>
            /// </summary>
            /// <param name="arg0"><see cref="bool"/></param>
            /// <returns><see cref="Android.Media.RouteListingPreference.Builder"/></returns>
            public Android.Media.RouteListingPreference.Builder SetUseSystemOrdering(bool arg0)
            {
                return IExecuteWithSignature<Android.Media.RouteListingPreference.Builder>("setUseSystemOrdering", "(Z)Landroid/media/RouteListingPreference$Builder;", arg0);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region Item
        public partial class Item
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/RouteListingPreference.Item.html#CREATOR"/>
            /// </summary>
            public static Android.Os.Parcelable.Creator CREATOR { get { if (!_CREATORReady) { _CREATORContent = SGetField<Android.Os.Parcelable.Creator>(LocalBridgeClazz, "CREATOR"); _CREATORReady = true; } return _CREATORContent; } }
            private static Android.Os.Parcelable.Creator _CREATORContent = default;
            private static bool _CREATORReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/RouteListingPreference.Item.html#FLAG_ONGOING_SESSION"/>
            /// </summary>
            public static int FLAG_ONGOING_SESSION { get { if (!_FLAG_ONGOING_SESSIONReady) { _FLAG_ONGOING_SESSIONContent = SGetField<int>(LocalBridgeClazz, "FLAG_ONGOING_SESSION"); _FLAG_ONGOING_SESSIONReady = true; } return _FLAG_ONGOING_SESSIONContent; } }
            private static int _FLAG_ONGOING_SESSIONContent = default;
            private static bool _FLAG_ONGOING_SESSIONReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/RouteListingPreference.Item.html#FLAG_ONGOING_SESSION_MANAGED"/>
            /// </summary>
            public static int FLAG_ONGOING_SESSION_MANAGED { get { if (!_FLAG_ONGOING_SESSION_MANAGEDReady) { _FLAG_ONGOING_SESSION_MANAGEDContent = SGetField<int>(LocalBridgeClazz, "FLAG_ONGOING_SESSION_MANAGED"); _FLAG_ONGOING_SESSION_MANAGEDReady = true; } return _FLAG_ONGOING_SESSION_MANAGEDContent; } }
            private static int _FLAG_ONGOING_SESSION_MANAGEDContent = default;
            private static bool _FLAG_ONGOING_SESSION_MANAGEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/RouteListingPreference.Item.html#FLAG_SUGGESTED"/>
            /// </summary>
            public static int FLAG_SUGGESTED { get { if (!_FLAG_SUGGESTEDReady) { _FLAG_SUGGESTEDContent = SGetField<int>(LocalBridgeClazz, "FLAG_SUGGESTED"); _FLAG_SUGGESTEDReady = true; } return _FLAG_SUGGESTEDContent; } }
            private static int _FLAG_SUGGESTEDContent = default;
            private static bool _FLAG_SUGGESTEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/RouteListingPreference.Item.html#SELECTION_BEHAVIOR_GO_TO_APP"/>
            /// </summary>
            public static int SELECTION_BEHAVIOR_GO_TO_APP { get { if (!_SELECTION_BEHAVIOR_GO_TO_APPReady) { _SELECTION_BEHAVIOR_GO_TO_APPContent = SGetField<int>(LocalBridgeClazz, "SELECTION_BEHAVIOR_GO_TO_APP"); _SELECTION_BEHAVIOR_GO_TO_APPReady = true; } return _SELECTION_BEHAVIOR_GO_TO_APPContent; } }
            private static int _SELECTION_BEHAVIOR_GO_TO_APPContent = default;
            private static bool _SELECTION_BEHAVIOR_GO_TO_APPReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/RouteListingPreference.Item.html#SELECTION_BEHAVIOR_NONE"/>
            /// </summary>
            public static int SELECTION_BEHAVIOR_NONE { get { if (!_SELECTION_BEHAVIOR_NONEReady) { _SELECTION_BEHAVIOR_NONEContent = SGetField<int>(LocalBridgeClazz, "SELECTION_BEHAVIOR_NONE"); _SELECTION_BEHAVIOR_NONEReady = true; } return _SELECTION_BEHAVIOR_NONEContent; } }
            private static int _SELECTION_BEHAVIOR_NONEContent = default;
            private static bool _SELECTION_BEHAVIOR_NONEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/RouteListingPreference.Item.html#SELECTION_BEHAVIOR_TRANSFER"/>
            /// </summary>
            public static int SELECTION_BEHAVIOR_TRANSFER { get { if (!_SELECTION_BEHAVIOR_TRANSFERReady) { _SELECTION_BEHAVIOR_TRANSFERContent = SGetField<int>(LocalBridgeClazz, "SELECTION_BEHAVIOR_TRANSFER"); _SELECTION_BEHAVIOR_TRANSFERReady = true; } return _SELECTION_BEHAVIOR_TRANSFERContent; } }
            private static int _SELECTION_BEHAVIOR_TRANSFERContent = default;
            private static bool _SELECTION_BEHAVIOR_TRANSFERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/RouteListingPreference.Item.html#SUBTEXT_AD_ROUTING_DISALLOWED"/>
            /// </summary>
            public static int SUBTEXT_AD_ROUTING_DISALLOWED { get { if (!_SUBTEXT_AD_ROUTING_DISALLOWEDReady) { _SUBTEXT_AD_ROUTING_DISALLOWEDContent = SGetField<int>(LocalBridgeClazz, "SUBTEXT_AD_ROUTING_DISALLOWED"); _SUBTEXT_AD_ROUTING_DISALLOWEDReady = true; } return _SUBTEXT_AD_ROUTING_DISALLOWEDContent; } }
            private static int _SUBTEXT_AD_ROUTING_DISALLOWEDContent = default;
            private static bool _SUBTEXT_AD_ROUTING_DISALLOWEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/RouteListingPreference.Item.html#SUBTEXT_CUSTOM"/>
            /// </summary>
            public static int SUBTEXT_CUSTOM { get { if (!_SUBTEXT_CUSTOMReady) { _SUBTEXT_CUSTOMContent = SGetField<int>(LocalBridgeClazz, "SUBTEXT_CUSTOM"); _SUBTEXT_CUSTOMReady = true; } return _SUBTEXT_CUSTOMContent; } }
            private static int _SUBTEXT_CUSTOMContent = default;
            private static bool _SUBTEXT_CUSTOMReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/RouteListingPreference.Item.html#SUBTEXT_DEVICE_LOW_POWER"/>
            /// </summary>
            public static int SUBTEXT_DEVICE_LOW_POWER { get { if (!_SUBTEXT_DEVICE_LOW_POWERReady) { _SUBTEXT_DEVICE_LOW_POWERContent = SGetField<int>(LocalBridgeClazz, "SUBTEXT_DEVICE_LOW_POWER"); _SUBTEXT_DEVICE_LOW_POWERReady = true; } return _SUBTEXT_DEVICE_LOW_POWERContent; } }
            private static int _SUBTEXT_DEVICE_LOW_POWERContent = default;
            private static bool _SUBTEXT_DEVICE_LOW_POWERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/RouteListingPreference.Item.html#SUBTEXT_DOWNLOADED_CONTENT_ROUTING_DISALLOWED"/>
            /// </summary>
            public static int SUBTEXT_DOWNLOADED_CONTENT_ROUTING_DISALLOWED { get { if (!_SUBTEXT_DOWNLOADED_CONTENT_ROUTING_DISALLOWEDReady) { _SUBTEXT_DOWNLOADED_CONTENT_ROUTING_DISALLOWEDContent = SGetField<int>(LocalBridgeClazz, "SUBTEXT_DOWNLOADED_CONTENT_ROUTING_DISALLOWED"); _SUBTEXT_DOWNLOADED_CONTENT_ROUTING_DISALLOWEDReady = true; } return _SUBTEXT_DOWNLOADED_CONTENT_ROUTING_DISALLOWEDContent; } }
            private static int _SUBTEXT_DOWNLOADED_CONTENT_ROUTING_DISALLOWEDContent = default;
            private static bool _SUBTEXT_DOWNLOADED_CONTENT_ROUTING_DISALLOWEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/RouteListingPreference.Item.html#SUBTEXT_ERROR_UNKNOWN"/>
            /// </summary>
            public static int SUBTEXT_ERROR_UNKNOWN { get { if (!_SUBTEXT_ERROR_UNKNOWNReady) { _SUBTEXT_ERROR_UNKNOWNContent = SGetField<int>(LocalBridgeClazz, "SUBTEXT_ERROR_UNKNOWN"); _SUBTEXT_ERROR_UNKNOWNReady = true; } return _SUBTEXT_ERROR_UNKNOWNContent; } }
            private static int _SUBTEXT_ERROR_UNKNOWNContent = default;
            private static bool _SUBTEXT_ERROR_UNKNOWNReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/RouteListingPreference.Item.html#SUBTEXT_NONE"/>
            /// </summary>
            public static int SUBTEXT_NONE { get { if (!_SUBTEXT_NONEReady) { _SUBTEXT_NONEContent = SGetField<int>(LocalBridgeClazz, "SUBTEXT_NONE"); _SUBTEXT_NONEReady = true; } return _SUBTEXT_NONEContent; } }
            private static int _SUBTEXT_NONEContent = default;
            private static bool _SUBTEXT_NONEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/RouteListingPreference.Item.html#SUBTEXT_SUBSCRIPTION_REQUIRED"/>
            /// </summary>
            public static int SUBTEXT_SUBSCRIPTION_REQUIRED { get { if (!_SUBTEXT_SUBSCRIPTION_REQUIREDReady) { _SUBTEXT_SUBSCRIPTION_REQUIREDContent = SGetField<int>(LocalBridgeClazz, "SUBTEXT_SUBSCRIPTION_REQUIRED"); _SUBTEXT_SUBSCRIPTION_REQUIREDReady = true; } return _SUBTEXT_SUBSCRIPTION_REQUIREDContent; } }
            private static int _SUBTEXT_SUBSCRIPTION_REQUIREDContent = default;
            private static bool _SUBTEXT_SUBSCRIPTION_REQUIREDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/RouteListingPreference.Item.html#SUBTEXT_TRACK_UNSUPPORTED"/>
            /// </summary>
            public static int SUBTEXT_TRACK_UNSUPPORTED { get { if (!_SUBTEXT_TRACK_UNSUPPORTEDReady) { _SUBTEXT_TRACK_UNSUPPORTEDContent = SGetField<int>(LocalBridgeClazz, "SUBTEXT_TRACK_UNSUPPORTED"); _SUBTEXT_TRACK_UNSUPPORTEDReady = true; } return _SUBTEXT_TRACK_UNSUPPORTEDContent; } }
            private static int _SUBTEXT_TRACK_UNSUPPORTEDContent = default;
            private static bool _SUBTEXT_TRACK_UNSUPPORTEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/RouteListingPreference.Item.html#SUBTEXT_UNAUTHORIZED"/>
            /// </summary>
            public static int SUBTEXT_UNAUTHORIZED { get { if (!_SUBTEXT_UNAUTHORIZEDReady) { _SUBTEXT_UNAUTHORIZEDContent = SGetField<int>(LocalBridgeClazz, "SUBTEXT_UNAUTHORIZED"); _SUBTEXT_UNAUTHORIZEDReady = true; } return _SUBTEXT_UNAUTHORIZEDContent; } }
            private static int _SUBTEXT_UNAUTHORIZEDContent = default;
            private static bool _SUBTEXT_UNAUTHORIZEDReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/RouteListingPreference.Item.html#describeContents()"/>
            /// </summary>
            /// <returns><see cref="int"/></returns>
            public int DescribeContents()
            {
                return IExecuteWithSignature<int>("describeContents", "()I");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/RouteListingPreference.Item.html#getFlags()"/>
            /// </summary>
            /// <returns><see cref="int"/></returns>
            public int GetFlags()
            {
                return IExecuteWithSignature<int>("getFlags", "()I");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/RouteListingPreference.Item.html#getSelectionBehavior()"/>
            /// </summary>
            /// <returns><see cref="int"/></returns>
            public int GetSelectionBehavior()
            {
                return IExecuteWithSignature<int>("getSelectionBehavior", "()I");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/RouteListingPreference.Item.html#getSubText()"/>
            /// </summary>
            /// <returns><see cref="int"/></returns>
            public int GetSubText()
            {
                return IExecuteWithSignature<int>("getSubText", "()I");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/RouteListingPreference.Item.html#getCustomSubtextMessage()"/>
            /// </summary>
            /// <returns><see cref="Java.Lang.CharSequence"/></returns>
            public Java.Lang.CharSequence GetCustomSubtextMessage()
            {
                return IExecuteWithSignature<Java.Lang.CharSequence>("getCustomSubtextMessage", "()Ljava/lang/CharSequence;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/RouteListingPreference.Item.html#getRouteId()"/>
            /// </summary>
            /// <returns><see cref="Java.Lang.String"/></returns>
            public Java.Lang.String GetRouteId()
            {
                return IExecuteWithSignature<Java.Lang.String>("getRouteId", "()Ljava/lang/String;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/media/RouteListingPreference.Item.html#writeToParcel(android.os.Parcel,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Os.Parcel"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            public void WriteToParcel(Android.Os.Parcel arg0, int arg1)
            {
                IExecute("writeToParcel", arg0, arg1);
            }

            #endregion

            #region Nested classes
            #region Builder
            public partial class Builder
            {
                #region Constructors
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/media/RouteListingPreference.Item.Builder.html#%3Cinit%3E(java.lang.String)"/>
                /// </summary>
                /// <param name="arg0"><see cref="Java.Lang.String"/></param>
                public Builder(Java.Lang.String arg0)
                    : base(arg0)
                {
                }

                #endregion

                #region Class/Interface conversion operators

                #endregion

                #region Fields

                #endregion

                #region Static methods

                #endregion

                #region Instance methods
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/media/RouteListingPreference.Item.Builder.html#build()"/>
                /// </summary>
                /// <returns><see cref="Android.Media.RouteListingPreference.Item"/></returns>
                public Android.Media.RouteListingPreference.Item Build()
                {
                    return IExecuteWithSignature<Android.Media.RouteListingPreference.Item>("build", "()Landroid/media/RouteListingPreference$Item;");
                }
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/media/RouteListingPreference.Item.Builder.html#setCustomSubtextMessage(java.lang.CharSequence)"/>
                /// </summary>
                /// <param name="arg0"><see cref="Java.Lang.CharSequence"/></param>
                /// <returns><see cref="Android.Media.RouteListingPreference.Item.Builder"/></returns>
                public Android.Media.RouteListingPreference.Item.Builder SetCustomSubtextMessage(Java.Lang.CharSequence arg0)
                {
                    return IExecuteWithSignature<Android.Media.RouteListingPreference.Item.Builder>("setCustomSubtextMessage", "(Ljava/lang/CharSequence;)Landroid/media/RouteListingPreference$Item$Builder;", arg0);
                }
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/media/RouteListingPreference.Item.Builder.html#setFlags(int)"/>
                /// </summary>
                /// <param name="arg0"><see cref="int"/></param>
                /// <returns><see cref="Android.Media.RouteListingPreference.Item.Builder"/></returns>
                public Android.Media.RouteListingPreference.Item.Builder SetFlags(int arg0)
                {
                    return IExecuteWithSignature<Android.Media.RouteListingPreference.Item.Builder>("setFlags", "(I)Landroid/media/RouteListingPreference$Item$Builder;", arg0);
                }
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/media/RouteListingPreference.Item.Builder.html#setSelectionBehavior(int)"/>
                /// </summary>
                /// <param name="arg0"><see cref="int"/></param>
                /// <returns><see cref="Android.Media.RouteListingPreference.Item.Builder"/></returns>
                public Android.Media.RouteListingPreference.Item.Builder SetSelectionBehavior(int arg0)
                {
                    return IExecuteWithSignature<Android.Media.RouteListingPreference.Item.Builder>("setSelectionBehavior", "(I)Landroid/media/RouteListingPreference$Item$Builder;", arg0);
                }
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/media/RouteListingPreference.Item.Builder.html#setSubText(int)"/>
                /// </summary>
                /// <param name="arg0"><see cref="int"/></param>
                /// <returns><see cref="Android.Media.RouteListingPreference.Item.Builder"/></returns>
                public Android.Media.RouteListingPreference.Item.Builder SetSubText(int arg0)
                {
                    return IExecuteWithSignature<Android.Media.RouteListingPreference.Item.Builder>("setSubText", "(I)Landroid/media/RouteListingPreference$Item$Builder;", arg0);
                }

                #endregion

                #region Nested classes

                #endregion

                // TODO: complete the class
            }
            #endregion

        
            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}