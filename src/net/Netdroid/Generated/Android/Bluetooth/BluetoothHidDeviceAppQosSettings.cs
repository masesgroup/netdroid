/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.4.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Bluetooth
{
    #region BluetoothHidDeviceAppQosSettings
    public partial class BluetoothHidDeviceAppQosSettings
    {
        #region Constructors
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothHidDeviceAppQosSettings.html#%3Cinit%3E(int,int,int,int,int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <param name="arg3"><see cref="int"/></param>
        /// <param name="arg4"><see cref="int"/></param>
        /// <param name="arg5"><see cref="int"/></param>
        public BluetoothHidDeviceAppQosSettings(int arg0, int arg1, int arg2, int arg3, int arg4, int arg5)
            : base(arg0, arg1, arg2, arg3, arg4, arg5)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothHidDeviceAppQosSettings.html#CREATOR"/>
        /// </summary>
        public static Android.Os.Parcelable.Creator CREATOR { get { if (!_CREATORReady) { _CREATORContent = SGetField<Android.Os.Parcelable.Creator>(LocalBridgeClazz, "CREATOR"); _CREATORReady = true; } return _CREATORContent; } }
        private static Android.Os.Parcelable.Creator _CREATORContent = default;
        private static bool _CREATORReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothHidDeviceAppQosSettings.html#MAX"/>
        /// </summary>
        public static int MAX { get { if (!_MAXReady) { _MAXContent = SGetField<int>(LocalBridgeClazz, "MAX"); _MAXReady = true; } return _MAXContent; } }
        private static int _MAXContent = default;
        private static bool _MAXReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothHidDeviceAppQosSettings.html#SERVICE_BEST_EFFORT"/>
        /// </summary>
        public static int SERVICE_BEST_EFFORT { get { if (!_SERVICE_BEST_EFFORTReady) { _SERVICE_BEST_EFFORTContent = SGetField<int>(LocalBridgeClazz, "SERVICE_BEST_EFFORT"); _SERVICE_BEST_EFFORTReady = true; } return _SERVICE_BEST_EFFORTContent; } }
        private static int _SERVICE_BEST_EFFORTContent = default;
        private static bool _SERVICE_BEST_EFFORTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothHidDeviceAppQosSettings.html#SERVICE_GUARANTEED"/>
        /// </summary>
        public static int SERVICE_GUARANTEED { get { if (!_SERVICE_GUARANTEEDReady) { _SERVICE_GUARANTEEDContent = SGetField<int>(LocalBridgeClazz, "SERVICE_GUARANTEED"); _SERVICE_GUARANTEEDReady = true; } return _SERVICE_GUARANTEEDContent; } }
        private static int _SERVICE_GUARANTEEDContent = default;
        private static bool _SERVICE_GUARANTEEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothHidDeviceAppQosSettings.html#SERVICE_NO_TRAFFIC"/>
        /// </summary>
        public static int SERVICE_NO_TRAFFIC { get { if (!_SERVICE_NO_TRAFFICReady) { _SERVICE_NO_TRAFFICContent = SGetField<int>(LocalBridgeClazz, "SERVICE_NO_TRAFFIC"); _SERVICE_NO_TRAFFICReady = true; } return _SERVICE_NO_TRAFFICContent; } }
        private static int _SERVICE_NO_TRAFFICContent = default;
        private static bool _SERVICE_NO_TRAFFICReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothHidDeviceAppQosSettings.html#describeContents()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int DescribeContents()
        {
            return IExecuteWithSignature<int>("describeContents", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothHidDeviceAppQosSettings.html#getDelayVariation()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetDelayVariation()
        {
            return IExecuteWithSignature<int>("getDelayVariation", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothHidDeviceAppQosSettings.html#getLatency()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetLatency()
        {
            return IExecuteWithSignature<int>("getLatency", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothHidDeviceAppQosSettings.html#getPeakBandwidth()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetPeakBandwidth()
        {
            return IExecuteWithSignature<int>("getPeakBandwidth", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothHidDeviceAppQosSettings.html#getServiceType()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetServiceType()
        {
            return IExecuteWithSignature<int>("getServiceType", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothHidDeviceAppQosSettings.html#getTokenBucketSize()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetTokenBucketSize()
        {
            return IExecuteWithSignature<int>("getTokenBucketSize", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothHidDeviceAppQosSettings.html#getTokenRate()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetTokenRate()
        {
            return IExecuteWithSignature<int>("getTokenRate", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothHidDeviceAppQosSettings.html#writeToParcel(android.os.Parcel,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.Parcel"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void WriteToParcel(Android.Os.Parcel arg0, int arg1)
        {
            IExecute("writeToParcel", arg0, arg1);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}