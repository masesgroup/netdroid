/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.1.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Bluetooth
{
    #region BluetoothLeAudioCodecStatus
    public partial class BluetoothLeAudioCodecStatus
    {
        #region Constructors
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothLeAudioCodecStatus.html#%3Cinit%3E(android.bluetooth.BluetoothLeAudioCodecConfig,android.bluetooth.BluetoothLeAudioCodecConfig,java.util.List,java.util.List,java.util.List,java.util.List)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Bluetooth.BluetoothLeAudioCodecConfig"/></param>
        /// <param name="arg1"><see cref="Android.Bluetooth.BluetoothLeAudioCodecConfig"/></param>
        /// <param name="arg2"><see cref="Java.Util.List"/></param>
        /// <param name="arg3"><see cref="Java.Util.List"/></param>
        /// <param name="arg4"><see cref="Java.Util.List"/></param>
        /// <param name="arg5"><see cref="Java.Util.List"/></param>
        public BluetoothLeAudioCodecStatus(Android.Bluetooth.BluetoothLeAudioCodecConfig arg0, Android.Bluetooth.BluetoothLeAudioCodecConfig arg1, Java.Util.List<Android.Bluetooth.BluetoothLeAudioCodecConfig> arg2, Java.Util.List<Android.Bluetooth.BluetoothLeAudioCodecConfig> arg3, Java.Util.List<Android.Bluetooth.BluetoothLeAudioCodecConfig> arg4, Java.Util.List<Android.Bluetooth.BluetoothLeAudioCodecConfig> arg5)
            : base(arg0, arg1, arg2, arg3, arg4, arg5)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothLeAudioCodecStatus.html#CREATOR"/>
        /// </summary>
        public static Android.Os.Parcelable.Creator CREATOR { get { if (!_CREATORReady) { _CREATORContent = SGetField<Android.Os.Parcelable.Creator>(LocalBridgeClazz, "CREATOR"); _CREATORReady = true; } return _CREATORContent; } }
        private static Android.Os.Parcelable.Creator _CREATORContent = default;
        private static bool _CREATORReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothLeAudioCodecStatus.html#EXTRA_LE_AUDIO_CODEC_STATUS"/>
        /// </summary>
        public static Java.Lang.String EXTRA_LE_AUDIO_CODEC_STATUS { get { if (!_EXTRA_LE_AUDIO_CODEC_STATUSReady) { _EXTRA_LE_AUDIO_CODEC_STATUSContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_LE_AUDIO_CODEC_STATUS"); _EXTRA_LE_AUDIO_CODEC_STATUSReady = true; } return _EXTRA_LE_AUDIO_CODEC_STATUSContent; } }
        private static Java.Lang.String _EXTRA_LE_AUDIO_CODEC_STATUSContent = default;
        private static bool _EXTRA_LE_AUDIO_CODEC_STATUSReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothLeAudioCodecStatus.html#getInputCodecConfig()"/>
        /// </summary>
        /// <returns><see cref="Android.Bluetooth.BluetoothLeAudioCodecConfig"/></returns>
        public Android.Bluetooth.BluetoothLeAudioCodecConfig GetInputCodecConfig()
        {
            return IExecuteWithSignature<Android.Bluetooth.BluetoothLeAudioCodecConfig>("getInputCodecConfig", "()Landroid/bluetooth/BluetoothLeAudioCodecConfig;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothLeAudioCodecStatus.html#getOutputCodecConfig()"/>
        /// </summary>
        /// <returns><see cref="Android.Bluetooth.BluetoothLeAudioCodecConfig"/></returns>
        public Android.Bluetooth.BluetoothLeAudioCodecConfig GetOutputCodecConfig()
        {
            return IExecuteWithSignature<Android.Bluetooth.BluetoothLeAudioCodecConfig>("getOutputCodecConfig", "()Landroid/bluetooth/BluetoothLeAudioCodecConfig;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothLeAudioCodecStatus.html#isInputCodecConfigSelectable(android.bluetooth.BluetoothLeAudioCodecConfig)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Bluetooth.BluetoothLeAudioCodecConfig"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool IsInputCodecConfigSelectable(Android.Bluetooth.BluetoothLeAudioCodecConfig arg0)
        {
            return IExecuteWithSignature<bool>("isInputCodecConfigSelectable", "(Landroid/bluetooth/BluetoothLeAudioCodecConfig;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothLeAudioCodecStatus.html#isOutputCodecConfigSelectable(android.bluetooth.BluetoothLeAudioCodecConfig)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Bluetooth.BluetoothLeAudioCodecConfig"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool IsOutputCodecConfigSelectable(Android.Bluetooth.BluetoothLeAudioCodecConfig arg0)
        {
            return IExecuteWithSignature<bool>("isOutputCodecConfigSelectable", "(Landroid/bluetooth/BluetoothLeAudioCodecConfig;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothLeAudioCodecStatus.html#describeContents()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int DescribeContents()
        {
            return IExecuteWithSignature<int>("describeContents", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothLeAudioCodecStatus.html#getInputCodecLocalCapabilities()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.List"/></returns>
        public Java.Util.List<Android.Bluetooth.BluetoothLeAudioCodecConfig> GetInputCodecLocalCapabilities()
        {
            return IExecuteWithSignature<Java.Util.List<Android.Bluetooth.BluetoothLeAudioCodecConfig>>("getInputCodecLocalCapabilities", "()Ljava/util/List;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothLeAudioCodecStatus.html#getInputCodecSelectableCapabilities()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.List"/></returns>
        public Java.Util.List<Android.Bluetooth.BluetoothLeAudioCodecConfig> GetInputCodecSelectableCapabilities()
        {
            return IExecuteWithSignature<Java.Util.List<Android.Bluetooth.BluetoothLeAudioCodecConfig>>("getInputCodecSelectableCapabilities", "()Ljava/util/List;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothLeAudioCodecStatus.html#getOutputCodecLocalCapabilities()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.List"/></returns>
        public Java.Util.List<Android.Bluetooth.BluetoothLeAudioCodecConfig> GetOutputCodecLocalCapabilities()
        {
            return IExecuteWithSignature<Java.Util.List<Android.Bluetooth.BluetoothLeAudioCodecConfig>>("getOutputCodecLocalCapabilities", "()Ljava/util/List;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothLeAudioCodecStatus.html#getOutputCodecSelectableCapabilities()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.List"/></returns>
        public Java.Util.List<Android.Bluetooth.BluetoothLeAudioCodecConfig> GetOutputCodecSelectableCapabilities()
        {
            return IExecuteWithSignature<Java.Util.List<Android.Bluetooth.BluetoothLeAudioCodecConfig>>("getOutputCodecSelectableCapabilities", "()Ljava/util/List;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothLeAudioCodecStatus.html#writeToParcel(android.os.Parcel,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.Parcel"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void WriteToParcel(Android.Os.Parcel arg0, int arg1)
        {
            IExecute("writeToParcel", arg0, arg1);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}