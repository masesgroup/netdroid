/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.6.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Bluetooth
{
    #region BluetoothAssignedNumbers
    public partial class BluetoothAssignedNumbers
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#A_AND_D_ENGINEERING"/>
        /// </summary>
        public static int A_AND_D_ENGINEERING { get { if (!_A_AND_D_ENGINEERINGReady) { _A_AND_D_ENGINEERINGContent = SGetField<int>(LocalBridgeClazz, "A_AND_D_ENGINEERING"); _A_AND_D_ENGINEERINGReady = true; } return _A_AND_D_ENGINEERINGContent; } }
        private static int _A_AND_D_ENGINEERINGContent = default;
        private static bool _A_AND_D_ENGINEERINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#A_AND_R_CAMBRIDGE"/>
        /// </summary>
        public static int A_AND_R_CAMBRIDGE { get { if (!_A_AND_R_CAMBRIDGEReady) { _A_AND_R_CAMBRIDGEContent = SGetField<int>(LocalBridgeClazz, "A_AND_R_CAMBRIDGE"); _A_AND_R_CAMBRIDGEReady = true; } return _A_AND_R_CAMBRIDGEContent; } }
        private static int _A_AND_R_CAMBRIDGEContent = default;
        private static bool _A_AND_R_CAMBRIDGEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#AAMP_OF_AMERICA"/>
        /// </summary>
        public static int AAMP_OF_AMERICA { get { if (!_AAMP_OF_AMERICAReady) { _AAMP_OF_AMERICAContent = SGetField<int>(LocalBridgeClazz, "AAMP_OF_AMERICA"); _AAMP_OF_AMERICAReady = true; } return _AAMP_OF_AMERICAContent; } }
        private static int _AAMP_OF_AMERICAContent = default;
        private static bool _AAMP_OF_AMERICAReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#ACCEL_SEMICONDUCTOR"/>
        /// </summary>
        public static int ACCEL_SEMICONDUCTOR { get { if (!_ACCEL_SEMICONDUCTORReady) { _ACCEL_SEMICONDUCTORContent = SGetField<int>(LocalBridgeClazz, "ACCEL_SEMICONDUCTOR"); _ACCEL_SEMICONDUCTORReady = true; } return _ACCEL_SEMICONDUCTORContent; } }
        private static int _ACCEL_SEMICONDUCTORContent = default;
        private static bool _ACCEL_SEMICONDUCTORReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#ACE_SENSOR"/>
        /// </summary>
        public static int ACE_SENSOR { get { if (!_ACE_SENSORReady) { _ACE_SENSORContent = SGetField<int>(LocalBridgeClazz, "ACE_SENSOR"); _ACE_SENSORReady = true; } return _ACE_SENSORContent; } }
        private static int _ACE_SENSORContent = default;
        private static bool _ACE_SENSORReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#ADIDAS"/>
        /// </summary>
        public static int ADIDAS { get { if (!_ADIDASReady) { _ADIDASContent = SGetField<int>(LocalBridgeClazz, "ADIDAS"); _ADIDASReady = true; } return _ADIDASContent; } }
        private static int _ADIDASContent = default;
        private static bool _ADIDASReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#ADVANCED_PANMOBIL_SYSTEMS"/>
        /// </summary>
        public static int ADVANCED_PANMOBIL_SYSTEMS { get { if (!_ADVANCED_PANMOBIL_SYSTEMSReady) { _ADVANCED_PANMOBIL_SYSTEMSContent = SGetField<int>(LocalBridgeClazz, "ADVANCED_PANMOBIL_SYSTEMS"); _ADVANCED_PANMOBIL_SYSTEMSReady = true; } return _ADVANCED_PANMOBIL_SYSTEMSContent; } }
        private static int _ADVANCED_PANMOBIL_SYSTEMSContent = default;
        private static bool _ADVANCED_PANMOBIL_SYSTEMSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#AIROHA_TECHNOLOGY"/>
        /// </summary>
        public static int AIROHA_TECHNOLOGY { get { if (!_AIROHA_TECHNOLOGYReady) { _AIROHA_TECHNOLOGYContent = SGetField<int>(LocalBridgeClazz, "AIROHA_TECHNOLOGY"); _AIROHA_TECHNOLOGYReady = true; } return _AIROHA_TECHNOLOGYContent; } }
        private static int _AIROHA_TECHNOLOGYContent = default;
        private static bool _AIROHA_TECHNOLOGYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#ALCATEL"/>
        /// </summary>
        public static int ALCATEL { get { if (!_ALCATELReady) { _ALCATELContent = SGetField<int>(LocalBridgeClazz, "ALCATEL"); _ALCATELReady = true; } return _ALCATELContent; } }
        private static int _ALCATELContent = default;
        private static bool _ALCATELReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#ALPWISE"/>
        /// </summary>
        public static int ALPWISE { get { if (!_ALPWISEReady) { _ALPWISEContent = SGetField<int>(LocalBridgeClazz, "ALPWISE"); _ALPWISEReady = true; } return _ALPWISEContent; } }
        private static int _ALPWISEContent = default;
        private static bool _ALPWISEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#AMICCOM_ELECTRONICS"/>
        /// </summary>
        public static int AMICCOM_ELECTRONICS { get { if (!_AMICCOM_ELECTRONICSReady) { _AMICCOM_ELECTRONICSContent = SGetField<int>(LocalBridgeClazz, "AMICCOM_ELECTRONICS"); _AMICCOM_ELECTRONICSReady = true; } return _AMICCOM_ELECTRONICSContent; } }
        private static int _AMICCOM_ELECTRONICSContent = default;
        private static bool _AMICCOM_ELECTRONICSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#APLIX"/>
        /// </summary>
        public static int APLIX { get { if (!_APLIXReady) { _APLIXContent = SGetField<int>(LocalBridgeClazz, "APLIX"); _APLIXReady = true; } return _APLIXContent; } }
        private static int _APLIXContent = default;
        private static bool _APLIXReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#APPLE"/>
        /// </summary>
        public static int APPLE { get { if (!_APPLEReady) { _APPLEContent = SGetField<int>(LocalBridgeClazz, "APPLE"); _APPLEReady = true; } return _APPLEContent; } }
        private static int _APPLEContent = default;
        private static bool _APPLEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#APT_LICENSING"/>
        /// </summary>
        public static int APT_LICENSING { get { if (!_APT_LICENSINGReady) { _APT_LICENSINGContent = SGetField<int>(LocalBridgeClazz, "APT_LICENSING"); _APT_LICENSINGReady = true; } return _APT_LICENSINGContent; } }
        private static int _APT_LICENSINGContent = default;
        private static bool _APT_LICENSINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#ARCHOS"/>
        /// </summary>
        public static int ARCHOS { get { if (!_ARCHOSReady) { _ARCHOSContent = SGetField<int>(LocalBridgeClazz, "ARCHOS"); _ARCHOSReady = true; } return _ARCHOSContent; } }
        private static int _ARCHOSContent = default;
        private static bool _ARCHOSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#ARP_DEVICES"/>
        /// </summary>
        public static int ARP_DEVICES { get { if (!_ARP_DEVICESReady) { _ARP_DEVICESContent = SGetField<int>(LocalBridgeClazz, "ARP_DEVICES"); _ARP_DEVICESReady = true; } return _ARP_DEVICESContent; } }
        private static int _ARP_DEVICESContent = default;
        private static bool _ARP_DEVICESReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#ATHEROS_COMMUNICATIONS"/>
        /// </summary>
        public static int ATHEROS_COMMUNICATIONS { get { if (!_ATHEROS_COMMUNICATIONSReady) { _ATHEROS_COMMUNICATIONSContent = SGetField<int>(LocalBridgeClazz, "ATHEROS_COMMUNICATIONS"); _ATHEROS_COMMUNICATIONSReady = true; } return _ATHEROS_COMMUNICATIONSContent; } }
        private static int _ATHEROS_COMMUNICATIONSContent = default;
        private static bool _ATHEROS_COMMUNICATIONSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#ATMEL"/>
        /// </summary>
        public static int ATMEL { get { if (!_ATMELReady) { _ATMELContent = SGetField<int>(LocalBridgeClazz, "ATMEL"); _ATMELReady = true; } return _ATMELContent; } }
        private static int _ATMELContent = default;
        private static bool _ATMELReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#AUSTCO_COMMUNICATION_SYSTEMS"/>
        /// </summary>
        public static int AUSTCO_COMMUNICATION_SYSTEMS { get { if (!_AUSTCO_COMMUNICATION_SYSTEMSReady) { _AUSTCO_COMMUNICATION_SYSTEMSContent = SGetField<int>(LocalBridgeClazz, "AUSTCO_COMMUNICATION_SYSTEMS"); _AUSTCO_COMMUNICATION_SYSTEMSReady = true; } return _AUSTCO_COMMUNICATION_SYSTEMSContent; } }
        private static int _AUSTCO_COMMUNICATION_SYSTEMSContent = default;
        private static bool _AUSTCO_COMMUNICATION_SYSTEMSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#AUTONET_MOBILE"/>
        /// </summary>
        public static int AUTONET_MOBILE { get { if (!_AUTONET_MOBILEReady) { _AUTONET_MOBILEContent = SGetField<int>(LocalBridgeClazz, "AUTONET_MOBILE"); _AUTONET_MOBILEReady = true; } return _AUTONET_MOBILEContent; } }
        private static int _AUTONET_MOBILEContent = default;
        private static bool _AUTONET_MOBILEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#AVAGO"/>
        /// </summary>
        public static int AVAGO { get { if (!_AVAGOReady) { _AVAGOContent = SGetField<int>(LocalBridgeClazz, "AVAGO"); _AVAGOReady = true; } return _AVAGOContent; } }
        private static int _AVAGOContent = default;
        private static bool _AVAGOReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#AVM_BERLIN"/>
        /// </summary>
        public static int AVM_BERLIN { get { if (!_AVM_BERLINReady) { _AVM_BERLINContent = SGetField<int>(LocalBridgeClazz, "AVM_BERLIN"); _AVM_BERLINReady = true; } return _AVM_BERLINContent; } }
        private static int _AVM_BERLINContent = default;
        private static bool _AVM_BERLINReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#BAND_XI_INTERNATIONAL"/>
        /// </summary>
        public static int BAND_XI_INTERNATIONAL { get { if (!_BAND_XI_INTERNATIONALReady) { _BAND_XI_INTERNATIONALContent = SGetField<int>(LocalBridgeClazz, "BAND_XI_INTERNATIONAL"); _BAND_XI_INTERNATIONALReady = true; } return _BAND_XI_INTERNATIONALContent; } }
        private static int _BAND_XI_INTERNATIONALContent = default;
        private static bool _BAND_XI_INTERNATIONALReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#BANDSPEED"/>
        /// </summary>
        public static int BANDSPEED { get { if (!_BANDSPEEDReady) { _BANDSPEEDContent = SGetField<int>(LocalBridgeClazz, "BANDSPEED"); _BANDSPEEDReady = true; } return _BANDSPEEDContent; } }
        private static int _BANDSPEEDContent = default;
        private static bool _BANDSPEEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#BDE_TECHNOLOGY"/>
        /// </summary>
        public static int BDE_TECHNOLOGY { get { if (!_BDE_TECHNOLOGYReady) { _BDE_TECHNOLOGYContent = SGetField<int>(LocalBridgeClazz, "BDE_TECHNOLOGY"); _BDE_TECHNOLOGYReady = true; } return _BDE_TECHNOLOGYContent; } }
        private static int _BDE_TECHNOLOGYContent = default;
        private static bool _BDE_TECHNOLOGYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#BEATS_ELECTRONICS"/>
        /// </summary>
        public static int BEATS_ELECTRONICS { get { if (!_BEATS_ELECTRONICSReady) { _BEATS_ELECTRONICSContent = SGetField<int>(LocalBridgeClazz, "BEATS_ELECTRONICS"); _BEATS_ELECTRONICSReady = true; } return _BEATS_ELECTRONICSContent; } }
        private static int _BEATS_ELECTRONICSContent = default;
        private static bool _BEATS_ELECTRONICSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#BEAUTIFUL_ENTERPRISE"/>
        /// </summary>
        public static int BEAUTIFUL_ENTERPRISE { get { if (!_BEAUTIFUL_ENTERPRISEReady) { _BEAUTIFUL_ENTERPRISEContent = SGetField<int>(LocalBridgeClazz, "BEAUTIFUL_ENTERPRISE"); _BEAUTIFUL_ENTERPRISEReady = true; } return _BEAUTIFUL_ENTERPRISEContent; } }
        private static int _BEAUTIFUL_ENTERPRISEContent = default;
        private static bool _BEAUTIFUL_ENTERPRISEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#BEKEY"/>
        /// </summary>
        public static int BEKEY { get { if (!_BEKEYReady) { _BEKEYContent = SGetField<int>(LocalBridgeClazz, "BEKEY"); _BEKEYReady = true; } return _BEKEYContent; } }
        private static int _BEKEYContent = default;
        private static bool _BEKEYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#BELKIN_INTERNATIONAL"/>
        /// </summary>
        public static int BELKIN_INTERNATIONAL { get { if (!_BELKIN_INTERNATIONALReady) { _BELKIN_INTERNATIONALContent = SGetField<int>(LocalBridgeClazz, "BELKIN_INTERNATIONAL"); _BELKIN_INTERNATIONALReady = true; } return _BELKIN_INTERNATIONALContent; } }
        private static int _BELKIN_INTERNATIONALContent = default;
        private static bool _BELKIN_INTERNATIONALReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#BINAURIC"/>
        /// </summary>
        public static int BINAURIC { get { if (!_BINAURICReady) { _BINAURICContent = SGetField<int>(LocalBridgeClazz, "BINAURIC"); _BINAURICReady = true; } return _BINAURICContent; } }
        private static int _BINAURICContent = default;
        private static bool _BINAURICReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#BIOSENTRONICS"/>
        /// </summary>
        public static int BIOSENTRONICS { get { if (!_BIOSENTRONICSReady) { _BIOSENTRONICSContent = SGetField<int>(LocalBridgeClazz, "BIOSENTRONICS"); _BIOSENTRONICSReady = true; } return _BIOSENTRONICSContent; } }
        private static int _BIOSENTRONICSContent = default;
        private static bool _BIOSENTRONICSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#BLUEGIGA"/>
        /// </summary>
        public static int BLUEGIGA { get { if (!_BLUEGIGAReady) { _BLUEGIGAContent = SGetField<int>(LocalBridgeClazz, "BLUEGIGA"); _BLUEGIGAReady = true; } return _BLUEGIGAContent; } }
        private static int _BLUEGIGAContent = default;
        private static bool _BLUEGIGAReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#BLUERADIOS"/>
        /// </summary>
        public static int BLUERADIOS { get { if (!_BLUERADIOSReady) { _BLUERADIOSContent = SGetField<int>(LocalBridgeClazz, "BLUERADIOS"); _BLUERADIOSReady = true; } return _BLUERADIOSContent; } }
        private static int _BLUERADIOSContent = default;
        private static bool _BLUERADIOSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#BLUETOOTH_SIG"/>
        /// </summary>
        public static int BLUETOOTH_SIG { get { if (!_BLUETOOTH_SIGReady) { _BLUETOOTH_SIGContent = SGetField<int>(LocalBridgeClazz, "BLUETOOTH_SIG"); _BLUETOOTH_SIGReady = true; } return _BLUETOOTH_SIGContent; } }
        private static int _BLUETOOTH_SIGContent = default;
        private static bool _BLUETOOTH_SIGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#BLUETREK_TECHNOLOGIES"/>
        /// </summary>
        public static int BLUETREK_TECHNOLOGIES { get { if (!_BLUETREK_TECHNOLOGIESReady) { _BLUETREK_TECHNOLOGIESContent = SGetField<int>(LocalBridgeClazz, "BLUETREK_TECHNOLOGIES"); _BLUETREK_TECHNOLOGIESReady = true; } return _BLUETREK_TECHNOLOGIESContent; } }
        private static int _BLUETREK_TECHNOLOGIESContent = default;
        private static bool _BLUETREK_TECHNOLOGIESReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#BOSE"/>
        /// </summary>
        public static int BOSE { get { if (!_BOSEReady) { _BOSEContent = SGetField<int>(LocalBridgeClazz, "BOSE"); _BOSEReady = true; } return _BOSEContent; } }
        private static int _BOSEContent = default;
        private static bool _BOSEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#BRIARTEK"/>
        /// </summary>
        public static int BRIARTEK { get { if (!_BRIARTEKReady) { _BRIARTEKContent = SGetField<int>(LocalBridgeClazz, "BRIARTEK"); _BRIARTEKReady = true; } return _BRIARTEKContent; } }
        private static int _BRIARTEKContent = default;
        private static bool _BRIARTEKReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#BROADCOM"/>
        /// </summary>
        public static int BROADCOM { get { if (!_BROADCOMReady) { _BROADCOMContent = SGetField<int>(LocalBridgeClazz, "BROADCOM"); _BROADCOMReady = true; } return _BROADCOMContent; } }
        private static int _BROADCOMContent = default;
        private static bool _BROADCOMReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#C_TECHNOLOGIES"/>
        /// </summary>
        public static int C_TECHNOLOGIES { get { if (!_C_TECHNOLOGIESReady) { _C_TECHNOLOGIESContent = SGetField<int>(LocalBridgeClazz, "C_TECHNOLOGIES"); _C_TECHNOLOGIESReady = true; } return _C_TECHNOLOGIESContent; } }
        private static int _C_TECHNOLOGIESContent = default;
        private static bool _C_TECHNOLOGIESReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#CAEN_RFID"/>
        /// </summary>
        public static int CAEN_RFID { get { if (!_CAEN_RFIDReady) { _CAEN_RFIDContent = SGetField<int>(LocalBridgeClazz, "CAEN_RFID"); _CAEN_RFIDReady = true; } return _CAEN_RFIDContent; } }
        private static int _CAEN_RFIDContent = default;
        private static bool _CAEN_RFIDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#CAMBRIDGE_SILICON_RADIO"/>
        /// </summary>
        public static int CAMBRIDGE_SILICON_RADIO { get { if (!_CAMBRIDGE_SILICON_RADIOReady) { _CAMBRIDGE_SILICON_RADIOContent = SGetField<int>(LocalBridgeClazz, "CAMBRIDGE_SILICON_RADIO"); _CAMBRIDGE_SILICON_RADIOReady = true; } return _CAMBRIDGE_SILICON_RADIOContent; } }
        private static int _CAMBRIDGE_SILICON_RADIOContent = default;
        private static bool _CAMBRIDGE_SILICON_RADIOReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#CATC"/>
        /// </summary>
        public static int CATC { get { if (!_CATCReady) { _CATCContent = SGetField<int>(LocalBridgeClazz, "CATC"); _CATCReady = true; } return _CATCContent; } }
        private static int _CATCContent = default;
        private static bool _CATCReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#CINETIX"/>
        /// </summary>
        public static int CINETIX { get { if (!_CINETIXReady) { _CINETIXContent = SGetField<int>(LocalBridgeClazz, "CINETIX"); _CINETIXReady = true; } return _CINETIXContent; } }
        private static int _CINETIXContent = default;
        private static bool _CINETIXReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#CLARINOX_TECHNOLOGIES"/>
        /// </summary>
        public static int CLARINOX_TECHNOLOGIES { get { if (!_CLARINOX_TECHNOLOGIESReady) { _CLARINOX_TECHNOLOGIESContent = SGetField<int>(LocalBridgeClazz, "CLARINOX_TECHNOLOGIES"); _CLARINOX_TECHNOLOGIESReady = true; } return _CLARINOX_TECHNOLOGIESContent; } }
        private static int _CLARINOX_TECHNOLOGIESContent = default;
        private static bool _CLARINOX_TECHNOLOGIESReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#COLORFY"/>
        /// </summary>
        public static int COLORFY { get { if (!_COLORFYReady) { _COLORFYContent = SGetField<int>(LocalBridgeClazz, "COLORFY"); _COLORFYReady = true; } return _COLORFYContent; } }
        private static int _COLORFYContent = default;
        private static bool _COLORFYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#COMMIL"/>
        /// </summary>
        public static int COMMIL { get { if (!_COMMILReady) { _COMMILContent = SGetField<int>(LocalBridgeClazz, "COMMIL"); _COMMILReady = true; } return _COMMILContent; } }
        private static int _COMMILContent = default;
        private static bool _COMMILReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#CONEXANT_SYSTEMS"/>
        /// </summary>
        public static int CONEXANT_SYSTEMS { get { if (!_CONEXANT_SYSTEMSReady) { _CONEXANT_SYSTEMSContent = SGetField<int>(LocalBridgeClazz, "CONEXANT_SYSTEMS"); _CONEXANT_SYSTEMSReady = true; } return _CONEXANT_SYSTEMSContent; } }
        private static int _CONEXANT_SYSTEMSContent = default;
        private static bool _CONEXANT_SYSTEMSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#CONNECTBLUE"/>
        /// </summary>
        public static int CONNECTBLUE { get { if (!_CONNECTBLUEReady) { _CONNECTBLUEContent = SGetField<int>(LocalBridgeClazz, "CONNECTBLUE"); _CONNECTBLUEReady = true; } return _CONNECTBLUEContent; } }
        private static int _CONNECTBLUEContent = default;
        private static bool _CONNECTBLUEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#CONTINENTAL_AUTOMOTIVE"/>
        /// </summary>
        public static int CONTINENTAL_AUTOMOTIVE { get { if (!_CONTINENTAL_AUTOMOTIVEReady) { _CONTINENTAL_AUTOMOTIVEContent = SGetField<int>(LocalBridgeClazz, "CONTINENTAL_AUTOMOTIVE"); _CONTINENTAL_AUTOMOTIVEReady = true; } return _CONTINENTAL_AUTOMOTIVEContent; } }
        private static int _CONTINENTAL_AUTOMOTIVEContent = default;
        private static bool _CONTINENTAL_AUTOMOTIVEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#CONWISE_TECHNOLOGY"/>
        /// </summary>
        public static int CONWISE_TECHNOLOGY { get { if (!_CONWISE_TECHNOLOGYReady) { _CONWISE_TECHNOLOGYContent = SGetField<int>(LocalBridgeClazz, "CONWISE_TECHNOLOGY"); _CONWISE_TECHNOLOGYReady = true; } return _CONWISE_TECHNOLOGYContent; } }
        private static int _CONWISE_TECHNOLOGYContent = default;
        private static bool _CONWISE_TECHNOLOGYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#CREATIVE_TECHNOLOGY"/>
        /// </summary>
        public static int CREATIVE_TECHNOLOGY { get { if (!_CREATIVE_TECHNOLOGYReady) { _CREATIVE_TECHNOLOGYContent = SGetField<int>(LocalBridgeClazz, "CREATIVE_TECHNOLOGY"); _CREATIVE_TECHNOLOGYReady = true; } return _CREATIVE_TECHNOLOGYContent; } }
        private static int _CREATIVE_TECHNOLOGYContent = default;
        private static bool _CREATIVE_TECHNOLOGYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#DANLERS"/>
        /// </summary>
        public static int DANLERS { get { if (!_DANLERSReady) { _DANLERSContent = SGetField<int>(LocalBridgeClazz, "DANLERS"); _DANLERSReady = true; } return _DANLERSContent; } }
        private static int _DANLERSContent = default;
        private static bool _DANLERSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#DELORME_PUBLISHING_COMPANY"/>
        /// </summary>
        public static int DELORME_PUBLISHING_COMPANY { get { if (!_DELORME_PUBLISHING_COMPANYReady) { _DELORME_PUBLISHING_COMPANYContent = SGetField<int>(LocalBridgeClazz, "DELORME_PUBLISHING_COMPANY"); _DELORME_PUBLISHING_COMPANYReady = true; } return _DELORME_PUBLISHING_COMPANYContent; } }
        private static int _DELORME_PUBLISHING_COMPANYContent = default;
        private static bool _DELORME_PUBLISHING_COMPANYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#DEXCOM"/>
        /// </summary>
        public static int DEXCOM { get { if (!_DEXCOMReady) { _DEXCOMContent = SGetField<int>(LocalBridgeClazz, "DEXCOM"); _DEXCOMReady = true; } return _DEXCOMContent; } }
        private static int _DEXCOMContent = default;
        private static bool _DEXCOMReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#DIALOG_SEMICONDUCTOR"/>
        /// </summary>
        public static int DIALOG_SEMICONDUCTOR { get { if (!_DIALOG_SEMICONDUCTORReady) { _DIALOG_SEMICONDUCTORContent = SGetField<int>(LocalBridgeClazz, "DIALOG_SEMICONDUCTOR"); _DIALOG_SEMICONDUCTORReady = true; } return _DIALOG_SEMICONDUCTORContent; } }
        private static int _DIALOG_SEMICONDUCTORContent = default;
        private static bool _DIALOG_SEMICONDUCTORReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#DIGIANSWER"/>
        /// </summary>
        public static int DIGIANSWER { get { if (!_DIGIANSWERReady) { _DIGIANSWERContent = SGetField<int>(LocalBridgeClazz, "DIGIANSWER"); _DIGIANSWERReady = true; } return _DIGIANSWERContent; } }
        private static int _DIGIANSWERContent = default;
        private static bool _DIGIANSWERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#ECLIPSE"/>
        /// </summary>
        public static int ECLIPSE { get { if (!_ECLIPSEReady) { _ECLIPSEContent = SGetField<int>(LocalBridgeClazz, "ECLIPSE"); _ECLIPSEReady = true; } return _ECLIPSEContent; } }
        private static int _ECLIPSEContent = default;
        private static bool _ECLIPSEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#ECOTEST"/>
        /// </summary>
        public static int ECOTEST { get { if (!_ECOTESTReady) { _ECOTESTContent = SGetField<int>(LocalBridgeClazz, "ECOTEST"); _ECOTESTReady = true; } return _ECOTESTContent; } }
        private static int _ECOTESTContent = default;
        private static bool _ECOTESTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#ELGATO_SYSTEMS"/>
        /// </summary>
        public static int ELGATO_SYSTEMS { get { if (!_ELGATO_SYSTEMSReady) { _ELGATO_SYSTEMSContent = SGetField<int>(LocalBridgeClazz, "ELGATO_SYSTEMS"); _ELGATO_SYSTEMSReady = true; } return _ELGATO_SYSTEMSContent; } }
        private static int _ELGATO_SYSTEMSContent = default;
        private static bool _ELGATO_SYSTEMSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#EM_MICROELECTRONIC_MARIN"/>
        /// </summary>
        public static int EM_MICROELECTRONIC_MARIN { get { if (!_EM_MICROELECTRONIC_MARINReady) { _EM_MICROELECTRONIC_MARINContent = SGetField<int>(LocalBridgeClazz, "EM_MICROELECTRONIC_MARIN"); _EM_MICROELECTRONIC_MARINReady = true; } return _EM_MICROELECTRONIC_MARINContent; } }
        private static int _EM_MICROELECTRONIC_MARINContent = default;
        private static bool _EM_MICROELECTRONIC_MARINReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#EQUINOX_AG"/>
        /// </summary>
        public static int EQUINOX_AG { get { if (!_EQUINOX_AGReady) { _EQUINOX_AGContent = SGetField<int>(LocalBridgeClazz, "EQUINOX_AG"); _EQUINOX_AGReady = true; } return _EQUINOX_AGContent; } }
        private static int _EQUINOX_AGContent = default;
        private static bool _EQUINOX_AGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#ERICSSON_TECHNOLOGY"/>
        /// </summary>
        public static int ERICSSON_TECHNOLOGY { get { if (!_ERICSSON_TECHNOLOGYReady) { _ERICSSON_TECHNOLOGYContent = SGetField<int>(LocalBridgeClazz, "ERICSSON_TECHNOLOGY"); _ERICSSON_TECHNOLOGYReady = true; } return _ERICSSON_TECHNOLOGYContent; } }
        private static int _ERICSSON_TECHNOLOGYContent = default;
        private static bool _ERICSSON_TECHNOLOGYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#EVLUMA"/>
        /// </summary>
        public static int EVLUMA { get { if (!_EVLUMAReady) { _EVLUMAContent = SGetField<int>(LocalBridgeClazz, "EVLUMA"); _EVLUMAReady = true; } return _EVLUMAContent; } }
        private static int _EVLUMAContent = default;
        private static bool _EVLUMAReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#FREE2MOVE"/>
        /// </summary>
        public static int FREE2MOVE { get { if (!_FREE2MOVEReady) { _FREE2MOVEContent = SGetField<int>(LocalBridgeClazz, "FREE2MOVE"); _FREE2MOVEReady = true; } return _FREE2MOVEContent; } }
        private static int _FREE2MOVEContent = default;
        private static bool _FREE2MOVEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#FUNAI_ELECTRIC"/>
        /// </summary>
        public static int FUNAI_ELECTRIC { get { if (!_FUNAI_ELECTRICReady) { _FUNAI_ELECTRICContent = SGetField<int>(LocalBridgeClazz, "FUNAI_ELECTRIC"); _FUNAI_ELECTRICReady = true; } return _FUNAI_ELECTRICContent; } }
        private static int _FUNAI_ELECTRICContent = default;
        private static bool _FUNAI_ELECTRICReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#GARMIN_INTERNATIONAL"/>
        /// </summary>
        public static int GARMIN_INTERNATIONAL { get { if (!_GARMIN_INTERNATIONALReady) { _GARMIN_INTERNATIONALContent = SGetField<int>(LocalBridgeClazz, "GARMIN_INTERNATIONAL"); _GARMIN_INTERNATIONALReady = true; } return _GARMIN_INTERNATIONALContent; } }
        private static int _GARMIN_INTERNATIONALContent = default;
        private static bool _GARMIN_INTERNATIONALReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#GCT_SEMICONDUCTOR"/>
        /// </summary>
        public static int GCT_SEMICONDUCTOR { get { if (!_GCT_SEMICONDUCTORReady) { _GCT_SEMICONDUCTORContent = SGetField<int>(LocalBridgeClazz, "GCT_SEMICONDUCTOR"); _GCT_SEMICONDUCTORReady = true; } return _GCT_SEMICONDUCTORContent; } }
        private static int _GCT_SEMICONDUCTORContent = default;
        private static bool _GCT_SEMICONDUCTORReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#GELO"/>
        /// </summary>
        public static int GELO { get { if (!_GELOReady) { _GELOContent = SGetField<int>(LocalBridgeClazz, "GELO"); _GELOReady = true; } return _GELOContent; } }
        private static int _GELOContent = default;
        private static bool _GELOReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#GENEQ"/>
        /// </summary>
        public static int GENEQ { get { if (!_GENEQReady) { _GENEQContent = SGetField<int>(LocalBridgeClazz, "GENEQ"); _GENEQReady = true; } return _GENEQContent; } }
        private static int _GENEQContent = default;
        private static bool _GENEQReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#GENERAL_MOTORS"/>
        /// </summary>
        public static int GENERAL_MOTORS { get { if (!_GENERAL_MOTORSReady) { _GENERAL_MOTORSContent = SGetField<int>(LocalBridgeClazz, "GENERAL_MOTORS"); _GENERAL_MOTORSReady = true; } return _GENERAL_MOTORSContent; } }
        private static int _GENERAL_MOTORSContent = default;
        private static bool _GENERAL_MOTORSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#GENNUM"/>
        /// </summary>
        public static int GENNUM { get { if (!_GENNUMReady) { _GENNUMContent = SGetField<int>(LocalBridgeClazz, "GENNUM"); _GENNUMReady = true; } return _GENNUMContent; } }
        private static int _GENNUMContent = default;
        private static bool _GENNUMReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#GEOFORCE"/>
        /// </summary>
        public static int GEOFORCE { get { if (!_GEOFORCEReady) { _GEOFORCEContent = SGetField<int>(LocalBridgeClazz, "GEOFORCE"); _GEOFORCEReady = true; } return _GEOFORCEContent; } }
        private static int _GEOFORCEContent = default;
        private static bool _GEOFORCEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#GIBSON_GUITARS"/>
        /// </summary>
        public static int GIBSON_GUITARS { get { if (!_GIBSON_GUITARSReady) { _GIBSON_GUITARSContent = SGetField<int>(LocalBridgeClazz, "GIBSON_GUITARS"); _GIBSON_GUITARSReady = true; } return _GIBSON_GUITARSContent; } }
        private static int _GIBSON_GUITARSContent = default;
        private static bool _GIBSON_GUITARSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#GN_NETCOM"/>
        /// </summary>
        public static int GN_NETCOM { get { if (!_GN_NETCOMReady) { _GN_NETCOMContent = SGetField<int>(LocalBridgeClazz, "GN_NETCOM"); _GN_NETCOMReady = true; } return _GN_NETCOMContent; } }
        private static int _GN_NETCOMContent = default;
        private static bool _GN_NETCOMReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#GN_RESOUND"/>
        /// </summary>
        public static int GN_RESOUND { get { if (!_GN_RESOUNDReady) { _GN_RESOUNDContent = SGetField<int>(LocalBridgeClazz, "GN_RESOUND"); _GN_RESOUNDReady = true; } return _GN_RESOUNDContent; } }
        private static int _GN_RESOUNDContent = default;
        private static bool _GN_RESOUNDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#GOOGLE"/>
        /// </summary>
        public static int GOOGLE { get { if (!_GOOGLEReady) { _GOOGLEContent = SGetField<int>(LocalBridgeClazz, "GOOGLE"); _GOOGLEReady = true; } return _GOOGLEContent; } }
        private static int _GOOGLEContent = default;
        private static bool _GOOGLEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#GREEN_THROTTLE_GAMES"/>
        /// </summary>
        public static int GREEN_THROTTLE_GAMES { get { if (!_GREEN_THROTTLE_GAMESReady) { _GREEN_THROTTLE_GAMESContent = SGetField<int>(LocalBridgeClazz, "GREEN_THROTTLE_GAMES"); _GREEN_THROTTLE_GAMESReady = true; } return _GREEN_THROTTLE_GAMESContent; } }
        private static int _GREEN_THROTTLE_GAMESContent = default;
        private static bool _GREEN_THROTTLE_GAMESReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#GROUP_SENSE"/>
        /// </summary>
        public static int GROUP_SENSE { get { if (!_GROUP_SENSEReady) { _GROUP_SENSEContent = SGetField<int>(LocalBridgeClazz, "GROUP_SENSE"); _GROUP_SENSEReady = true; } return _GROUP_SENSEContent; } }
        private static int _GROUP_SENSEContent = default;
        private static bool _GROUP_SENSEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#HANLYNN_TECHNOLOGIES"/>
        /// </summary>
        public static int HANLYNN_TECHNOLOGIES { get { if (!_HANLYNN_TECHNOLOGIESReady) { _HANLYNN_TECHNOLOGIESContent = SGetField<int>(LocalBridgeClazz, "HANLYNN_TECHNOLOGIES"); _HANLYNN_TECHNOLOGIESReady = true; } return _HANLYNN_TECHNOLOGIESContent; } }
        private static int _HANLYNN_TECHNOLOGIESContent = default;
        private static bool _HANLYNN_TECHNOLOGIESReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#HARMAN_INTERNATIONAL"/>
        /// </summary>
        public static int HARMAN_INTERNATIONAL { get { if (!_HARMAN_INTERNATIONALReady) { _HARMAN_INTERNATIONALContent = SGetField<int>(LocalBridgeClazz, "HARMAN_INTERNATIONAL"); _HARMAN_INTERNATIONALReady = true; } return _HARMAN_INTERNATIONALContent; } }
        private static int _HARMAN_INTERNATIONALContent = default;
        private static bool _HARMAN_INTERNATIONALReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#HEWLETT_PACKARD"/>
        /// </summary>
        public static int HEWLETT_PACKARD { get { if (!_HEWLETT_PACKARDReady) { _HEWLETT_PACKARDContent = SGetField<int>(LocalBridgeClazz, "HEWLETT_PACKARD"); _HEWLETT_PACKARDReady = true; } return _HEWLETT_PACKARDContent; } }
        private static int _HEWLETT_PACKARDContent = default;
        private static bool _HEWLETT_PACKARDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#HITACHI"/>
        /// </summary>
        public static int HITACHI { get { if (!_HITACHIReady) { _HITACHIContent = SGetField<int>(LocalBridgeClazz, "HITACHI"); _HITACHIReady = true; } return _HITACHIContent; } }
        private static int _HITACHIContent = default;
        private static bool _HITACHIReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#HOSIDEN"/>
        /// </summary>
        public static int HOSIDEN { get { if (!_HOSIDENReady) { _HOSIDENContent = SGetField<int>(LocalBridgeClazz, "HOSIDEN"); _HOSIDENReady = true; } return _HOSIDENContent; } }
        private static int _HOSIDENContent = default;
        private static bool _HOSIDENReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#I_TECH_DYNAMIC_GLOBAL_DISTRIBUTION"/>
        /// </summary>
        public static int I_TECH_DYNAMIC_GLOBAL_DISTRIBUTION { get { if (!_I_TECH_DYNAMIC_GLOBAL_DISTRIBUTIONReady) { _I_TECH_DYNAMIC_GLOBAL_DISTRIBUTIONContent = SGetField<int>(LocalBridgeClazz, "I_TECH_DYNAMIC_GLOBAL_DISTRIBUTION"); _I_TECH_DYNAMIC_GLOBAL_DISTRIBUTIONReady = true; } return _I_TECH_DYNAMIC_GLOBAL_DISTRIBUTIONContent; } }
        private static int _I_TECH_DYNAMIC_GLOBAL_DISTRIBUTIONContent = default;
        private static bool _I_TECH_DYNAMIC_GLOBAL_DISTRIBUTIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#IBM"/>
        /// </summary>
        public static int IBM { get { if (!_IBMReady) { _IBMContent = SGetField<int>(LocalBridgeClazz, "IBM"); _IBMReady = true; } return _IBMContent; } }
        private static int _IBMContent = default;
        private static bool _IBMReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#INFINEON_TECHNOLOGIES"/>
        /// </summary>
        public static int INFINEON_TECHNOLOGIES { get { if (!_INFINEON_TECHNOLOGIESReady) { _INFINEON_TECHNOLOGIESContent = SGetField<int>(LocalBridgeClazz, "INFINEON_TECHNOLOGIES"); _INFINEON_TECHNOLOGIESReady = true; } return _INFINEON_TECHNOLOGIESContent; } }
        private static int _INFINEON_TECHNOLOGIESContent = default;
        private static bool _INFINEON_TECHNOLOGIESReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#INGENIEUR_SYSTEMGRUPPE_ZAHN"/>
        /// </summary>
        public static int INGENIEUR_SYSTEMGRUPPE_ZAHN { get { if (!_INGENIEUR_SYSTEMGRUPPE_ZAHNReady) { _INGENIEUR_SYSTEMGRUPPE_ZAHNContent = SGetField<int>(LocalBridgeClazz, "INGENIEUR_SYSTEMGRUPPE_ZAHN"); _INGENIEUR_SYSTEMGRUPPE_ZAHNReady = true; } return _INGENIEUR_SYSTEMGRUPPE_ZAHNContent; } }
        private static int _INGENIEUR_SYSTEMGRUPPE_ZAHNContent = default;
        private static bool _INGENIEUR_SYSTEMGRUPPE_ZAHNReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#INTEGRATED_SILICON_SOLUTION"/>
        /// </summary>
        public static int INTEGRATED_SILICON_SOLUTION { get { if (!_INTEGRATED_SILICON_SOLUTIONReady) { _INTEGRATED_SILICON_SOLUTIONContent = SGetField<int>(LocalBridgeClazz, "INTEGRATED_SILICON_SOLUTION"); _INTEGRATED_SILICON_SOLUTIONReady = true; } return _INTEGRATED_SILICON_SOLUTIONContent; } }
        private static int _INTEGRATED_SILICON_SOLUTIONContent = default;
        private static bool _INTEGRATED_SILICON_SOLUTIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#INTEGRATED_SYSTEM_SOLUTION"/>
        /// </summary>
        public static int INTEGRATED_SYSTEM_SOLUTION { get { if (!_INTEGRATED_SYSTEM_SOLUTIONReady) { _INTEGRATED_SYSTEM_SOLUTIONContent = SGetField<int>(LocalBridgeClazz, "INTEGRATED_SYSTEM_SOLUTION"); _INTEGRATED_SYSTEM_SOLUTIONReady = true; } return _INTEGRATED_SYSTEM_SOLUTIONContent; } }
        private static int _INTEGRATED_SYSTEM_SOLUTIONContent = default;
        private static bool _INTEGRATED_SYSTEM_SOLUTIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#INTEL"/>
        /// </summary>
        public static int INTEL { get { if (!_INTELReady) { _INTELContent = SGetField<int>(LocalBridgeClazz, "INTEL"); _INTELReady = true; } return _INTELContent; } }
        private static int _INTELContent = default;
        private static bool _INTELReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#INVENTEL"/>
        /// </summary>
        public static int INVENTEL { get { if (!_INVENTELReady) { _INVENTELContent = SGetField<int>(LocalBridgeClazz, "INVENTEL"); _INVENTELReady = true; } return _INVENTELContent; } }
        private static int _INVENTELContent = default;
        private static bool _INVENTELReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#IPEXTREME"/>
        /// </summary>
        public static int IPEXTREME { get { if (!_IPEXTREMEReady) { _IPEXTREMEContent = SGetField<int>(LocalBridgeClazz, "IPEXTREME"); _IPEXTREMEReady = true; } return _IPEXTREMEContent; } }
        private static int _IPEXTREMEContent = default;
        private static bool _IPEXTREMEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#J_AND_M"/>
        /// </summary>
        public static int J_AND_M { get { if (!_J_AND_MReady) { _J_AND_MContent = SGetField<int>(LocalBridgeClazz, "J_AND_M"); _J_AND_MReady = true; } return _J_AND_MContent; } }
        private static int _J_AND_MContent = default;
        private static bool _J_AND_MReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#JAWBONE"/>
        /// </summary>
        public static int JAWBONE { get { if (!_JAWBONEReady) { _JAWBONEContent = SGetField<int>(LocalBridgeClazz, "JAWBONE"); _JAWBONEReady = true; } return _JAWBONEContent; } }
        private static int _JAWBONEContent = default;
        private static bool _JAWBONEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#JIANGSU_TOPPOWER_AUTOMOTIVE_ELECTRONICS"/>
        /// </summary>
        public static int JIANGSU_TOPPOWER_AUTOMOTIVE_ELECTRONICS { get { if (!_JIANGSU_TOPPOWER_AUTOMOTIVE_ELECTRONICSReady) { _JIANGSU_TOPPOWER_AUTOMOTIVE_ELECTRONICSContent = SGetField<int>(LocalBridgeClazz, "JIANGSU_TOPPOWER_AUTOMOTIVE_ELECTRONICS"); _JIANGSU_TOPPOWER_AUTOMOTIVE_ELECTRONICSReady = true; } return _JIANGSU_TOPPOWER_AUTOMOTIVE_ELECTRONICSContent; } }
        private static int _JIANGSU_TOPPOWER_AUTOMOTIVE_ELECTRONICSContent = default;
        private static bool _JIANGSU_TOPPOWER_AUTOMOTIVE_ELECTRONICSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#JOHNSON_CONTROLS"/>
        /// </summary>
        public static int JOHNSON_CONTROLS { get { if (!_JOHNSON_CONTROLSReady) { _JOHNSON_CONTROLSContent = SGetField<int>(LocalBridgeClazz, "JOHNSON_CONTROLS"); _JOHNSON_CONTROLSReady = true; } return _JOHNSON_CONTROLSContent; } }
        private static int _JOHNSON_CONTROLSContent = default;
        private static bool _JOHNSON_CONTROLSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#KAWANTECH"/>
        /// </summary>
        public static int KAWANTECH { get { if (!_KAWANTECHReady) { _KAWANTECHContent = SGetField<int>(LocalBridgeClazz, "KAWANTECH"); _KAWANTECHReady = true; } return _KAWANTECHContent; } }
        private static int _KAWANTECHContent = default;
        private static bool _KAWANTECHReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#KC_TECHNOLOGY"/>
        /// </summary>
        public static int KC_TECHNOLOGY { get { if (!_KC_TECHNOLOGYReady) { _KC_TECHNOLOGYContent = SGetField<int>(LocalBridgeClazz, "KC_TECHNOLOGY"); _KC_TECHNOLOGYReady = true; } return _KC_TECHNOLOGYContent; } }
        private static int _KC_TECHNOLOGYContent = default;
        private static bool _KC_TECHNOLOGYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#KENSINGTON_COMPUTER_PRODUCTS_GROUP"/>
        /// </summary>
        public static int KENSINGTON_COMPUTER_PRODUCTS_GROUP { get { if (!_KENSINGTON_COMPUTER_PRODUCTS_GROUPReady) { _KENSINGTON_COMPUTER_PRODUCTS_GROUPContent = SGetField<int>(LocalBridgeClazz, "KENSINGTON_COMPUTER_PRODUCTS_GROUP"); _KENSINGTON_COMPUTER_PRODUCTS_GROUPReady = true; } return _KENSINGTON_COMPUTER_PRODUCTS_GROUPContent; } }
        private static int _KENSINGTON_COMPUTER_PRODUCTS_GROUPContent = default;
        private static bool _KENSINGTON_COMPUTER_PRODUCTS_GROUPReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#LAIRD_TECHNOLOGIES"/>
        /// </summary>
        public static int LAIRD_TECHNOLOGIES { get { if (!_LAIRD_TECHNOLOGIESReady) { _LAIRD_TECHNOLOGIESContent = SGetField<int>(LocalBridgeClazz, "LAIRD_TECHNOLOGIES"); _LAIRD_TECHNOLOGIESReady = true; } return _LAIRD_TECHNOLOGIESContent; } }
        private static int _LAIRD_TECHNOLOGIESContent = default;
        private static bool _LAIRD_TECHNOLOGIESReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#LESSWIRE"/>
        /// </summary>
        public static int LESSWIRE { get { if (!_LESSWIREReady) { _LESSWIREContent = SGetField<int>(LocalBridgeClazz, "LESSWIRE"); _LESSWIREReady = true; } return _LESSWIREContent; } }
        private static int _LESSWIREContent = default;
        private static bool _LESSWIREReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#LG_ELECTRONICS"/>
        /// </summary>
        public static int LG_ELECTRONICS { get { if (!_LG_ELECTRONICSReady) { _LG_ELECTRONICSContent = SGetField<int>(LocalBridgeClazz, "LG_ELECTRONICS"); _LG_ELECTRONICSReady = true; } return _LG_ELECTRONICSContent; } }
        private static int _LG_ELECTRONICSContent = default;
        private static bool _LG_ELECTRONICSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#LINAK"/>
        /// </summary>
        public static int LINAK { get { if (!_LINAKReady) { _LINAKContent = SGetField<int>(LocalBridgeClazz, "LINAK"); _LINAKReady = true; } return _LINAKContent; } }
        private static int _LINAKContent = default;
        private static bool _LINAKReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#LUCENT"/>
        /// </summary>
        public static int LUCENT { get { if (!_LUCENTReady) { _LUCENTContent = SGetField<int>(LocalBridgeClazz, "LUCENT"); _LUCENTReady = true; } return _LUCENTContent; } }
        private static int _LUCENTContent = default;
        private static bool _LUCENTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#LUDUS_HELSINKI"/>
        /// </summary>
        public static int LUDUS_HELSINKI { get { if (!_LUDUS_HELSINKIReady) { _LUDUS_HELSINKIContent = SGetField<int>(LocalBridgeClazz, "LUDUS_HELSINKI"); _LUDUS_HELSINKIReady = true; } return _LUDUS_HELSINKIContent; } }
        private static int _LUDUS_HELSINKIContent = default;
        private static bool _LUDUS_HELSINKIReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#MACRONIX"/>
        /// </summary>
        public static int MACRONIX { get { if (!_MACRONIXReady) { _MACRONIXContent = SGetField<int>(LocalBridgeClazz, "MACRONIX"); _MACRONIXReady = true; } return _MACRONIXContent; } }
        private static int _MACRONIXContent = default;
        private static bool _MACRONIXReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#MAGNETI_MARELLI"/>
        /// </summary>
        public static int MAGNETI_MARELLI { get { if (!_MAGNETI_MARELLIReady) { _MAGNETI_MARELLIContent = SGetField<int>(LocalBridgeClazz, "MAGNETI_MARELLI"); _MAGNETI_MARELLIReady = true; } return _MAGNETI_MARELLIContent; } }
        private static int _MAGNETI_MARELLIContent = default;
        private static bool _MAGNETI_MARELLIReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#MANSELLA"/>
        /// </summary>
        public static int MANSELLA { get { if (!_MANSELLAReady) { _MANSELLAContent = SGetField<int>(LocalBridgeClazz, "MANSELLA"); _MANSELLAReady = true; } return _MANSELLAContent; } }
        private static int _MANSELLAContent = default;
        private static bool _MANSELLAReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#MARVELL"/>
        /// </summary>
        public static int MARVELL { get { if (!_MARVELLReady) { _MARVELLContent = SGetField<int>(LocalBridgeClazz, "MARVELL"); _MARVELLReady = true; } return _MARVELLContent; } }
        private static int _MARVELLContent = default;
        private static bool _MARVELLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#MATSUSHITA_ELECTRIC"/>
        /// </summary>
        public static int MATSUSHITA_ELECTRIC { get { if (!_MATSUSHITA_ELECTRICReady) { _MATSUSHITA_ELECTRICContent = SGetField<int>(LocalBridgeClazz, "MATSUSHITA_ELECTRIC"); _MATSUSHITA_ELECTRICReady = true; } return _MATSUSHITA_ELECTRICContent; } }
        private static int _MATSUSHITA_ELECTRICContent = default;
        private static bool _MATSUSHITA_ELECTRICReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#MC10"/>
        /// </summary>
        public static int MC10 { get { if (!_MC10Ready) { _MC10Content = SGetField<int>(LocalBridgeClazz, "MC10"); _MC10Ready = true; } return _MC10Content; } }
        private static int _MC10Content = default;
        private static bool _MC10Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#MEDIATEK"/>
        /// </summary>
        public static int MEDIATEK { get { if (!_MEDIATEKReady) { _MEDIATEKContent = SGetField<int>(LocalBridgeClazz, "MEDIATEK"); _MEDIATEKReady = true; } return _MEDIATEKContent; } }
        private static int _MEDIATEKContent = default;
        private static bool _MEDIATEKReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#MESO_INTERNATIONAL"/>
        /// </summary>
        public static int MESO_INTERNATIONAL { get { if (!_MESO_INTERNATIONALReady) { _MESO_INTERNATIONALContent = SGetField<int>(LocalBridgeClazz, "MESO_INTERNATIONAL"); _MESO_INTERNATIONALReady = true; } return _MESO_INTERNATIONALContent; } }
        private static int _MESO_INTERNATIONALContent = default;
        private static bool _MESO_INTERNATIONALReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#META_WATCH"/>
        /// </summary>
        public static int META_WATCH { get { if (!_META_WATCHReady) { _META_WATCHContent = SGetField<int>(LocalBridgeClazz, "META_WATCH"); _META_WATCHReady = true; } return _META_WATCHContent; } }
        private static int _META_WATCHContent = default;
        private static bool _META_WATCHReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#MEWTEL_TECHNOLOGY"/>
        /// </summary>
        public static int MEWTEL_TECHNOLOGY { get { if (!_MEWTEL_TECHNOLOGYReady) { _MEWTEL_TECHNOLOGYContent = SGetField<int>(LocalBridgeClazz, "MEWTEL_TECHNOLOGY"); _MEWTEL_TECHNOLOGYReady = true; } return _MEWTEL_TECHNOLOGYContent; } }
        private static int _MEWTEL_TECHNOLOGYContent = default;
        private static bool _MEWTEL_TECHNOLOGYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#MICOMMAND"/>
        /// </summary>
        public static int MICOMMAND { get { if (!_MICOMMANDReady) { _MICOMMANDContent = SGetField<int>(LocalBridgeClazz, "MICOMMAND"); _MICOMMANDReady = true; } return _MICOMMANDContent; } }
        private static int _MICOMMANDContent = default;
        private static bool _MICOMMANDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#MICROCHIP_TECHNOLOGY"/>
        /// </summary>
        public static int MICROCHIP_TECHNOLOGY { get { if (!_MICROCHIP_TECHNOLOGYReady) { _MICROCHIP_TECHNOLOGYContent = SGetField<int>(LocalBridgeClazz, "MICROCHIP_TECHNOLOGY"); _MICROCHIP_TECHNOLOGYReady = true; } return _MICROCHIP_TECHNOLOGYContent; } }
        private static int _MICROCHIP_TECHNOLOGYContent = default;
        private static bool _MICROCHIP_TECHNOLOGYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#MICROSOFT"/>
        /// </summary>
        public static int MICROSOFT { get { if (!_MICROSOFTReady) { _MICROSOFTContent = SGetField<int>(LocalBridgeClazz, "MICROSOFT"); _MICROSOFTReady = true; } return _MICROSOFTContent; } }
        private static int _MICROSOFTContent = default;
        private static bool _MICROSOFTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#MINDTREE"/>
        /// </summary>
        public static int MINDTREE { get { if (!_MINDTREEReady) { _MINDTREEContent = SGetField<int>(LocalBridgeClazz, "MINDTREE"); _MINDTREEReady = true; } return _MINDTREEContent; } }
        private static int _MINDTREEContent = default;
        private static bool _MINDTREEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#MISFIT_WEARABLES"/>
        /// </summary>
        public static int MISFIT_WEARABLES { get { if (!_MISFIT_WEARABLESReady) { _MISFIT_WEARABLESContent = SGetField<int>(LocalBridgeClazz, "MISFIT_WEARABLES"); _MISFIT_WEARABLESReady = true; } return _MISFIT_WEARABLESContent; } }
        private static int _MISFIT_WEARABLESContent = default;
        private static bool _MISFIT_WEARABLESReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#MITEL_SEMICONDUCTOR"/>
        /// </summary>
        public static int MITEL_SEMICONDUCTOR { get { if (!_MITEL_SEMICONDUCTORReady) { _MITEL_SEMICONDUCTORContent = SGetField<int>(LocalBridgeClazz, "MITEL_SEMICONDUCTOR"); _MITEL_SEMICONDUCTORReady = true; } return _MITEL_SEMICONDUCTORContent; } }
        private static int _MITEL_SEMICONDUCTORContent = default;
        private static bool _MITEL_SEMICONDUCTORReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#MITSUBISHI_ELECTRIC"/>
        /// </summary>
        public static int MITSUBISHI_ELECTRIC { get { if (!_MITSUBISHI_ELECTRICReady) { _MITSUBISHI_ELECTRICContent = SGetField<int>(LocalBridgeClazz, "MITSUBISHI_ELECTRIC"); _MITSUBISHI_ELECTRICReady = true; } return _MITSUBISHI_ELECTRICContent; } }
        private static int _MITSUBISHI_ELECTRICContent = default;
        private static bool _MITSUBISHI_ELECTRICReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#MOBILIAN_CORPORATION"/>
        /// </summary>
        public static int MOBILIAN_CORPORATION { get { if (!_MOBILIAN_CORPORATIONReady) { _MOBILIAN_CORPORATIONContent = SGetField<int>(LocalBridgeClazz, "MOBILIAN_CORPORATION"); _MOBILIAN_CORPORATIONReady = true; } return _MOBILIAN_CORPORATIONContent; } }
        private static int _MOBILIAN_CORPORATIONContent = default;
        private static bool _MOBILIAN_CORPORATIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#MONSTER"/>
        /// </summary>
        public static int MONSTER { get { if (!_MONSTERReady) { _MONSTERContent = SGetField<int>(LocalBridgeClazz, "MONSTER"); _MONSTERReady = true; } return _MONSTERContent; } }
        private static int _MONSTERContent = default;
        private static bool _MONSTERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#MOTOROLA"/>
        /// </summary>
        public static int MOTOROLA { get { if (!_MOTOROLAReady) { _MOTOROLAContent = SGetField<int>(LocalBridgeClazz, "MOTOROLA"); _MOTOROLAReady = true; } return _MOTOROLAContent; } }
        private static int _MOTOROLAContent = default;
        private static bool _MOTOROLAReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#MSTAR_SEMICONDUCTOR"/>
        /// </summary>
        public static int MSTAR_SEMICONDUCTOR { get { if (!_MSTAR_SEMICONDUCTORReady) { _MSTAR_SEMICONDUCTORContent = SGetField<int>(LocalBridgeClazz, "MSTAR_SEMICONDUCTOR"); _MSTAR_SEMICONDUCTORReady = true; } return _MSTAR_SEMICONDUCTORContent; } }
        private static int _MSTAR_SEMICONDUCTORContent = default;
        private static bool _MSTAR_SEMICONDUCTORReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#MUZIK"/>
        /// </summary>
        public static int MUZIK { get { if (!_MUZIKReady) { _MUZIKContent = SGetField<int>(LocalBridgeClazz, "MUZIK"); _MUZIKReady = true; } return _MUZIKContent; } }
        private static int _MUZIKContent = default;
        private static bool _MUZIKReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#NEC"/>
        /// </summary>
        public static int NEC { get { if (!_NECReady) { _NECContent = SGetField<int>(LocalBridgeClazz, "NEC"); _NECReady = true; } return _NECContent; } }
        private static int _NECContent = default;
        private static bool _NECReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#NEC_LIGHTING"/>
        /// </summary>
        public static int NEC_LIGHTING { get { if (!_NEC_LIGHTINGReady) { _NEC_LIGHTINGContent = SGetField<int>(LocalBridgeClazz, "NEC_LIGHTING"); _NEC_LIGHTINGReady = true; } return _NEC_LIGHTINGContent; } }
        private static int _NEC_LIGHTINGContent = default;
        private static bool _NEC_LIGHTINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#NEWLOGIC"/>
        /// </summary>
        public static int NEWLOGIC { get { if (!_NEWLOGICReady) { _NEWLOGICContent = SGetField<int>(LocalBridgeClazz, "NEWLOGIC"); _NEWLOGICReady = true; } return _NEWLOGICContent; } }
        private static int _NEWLOGICContent = default;
        private static bool _NEWLOGICReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#NIKE"/>
        /// </summary>
        public static int NIKE { get { if (!_NIKEReady) { _NIKEContent = SGetField<int>(LocalBridgeClazz, "NIKE"); _NIKEReady = true; } return _NIKEContent; } }
        private static int _NIKEContent = default;
        private static bool _NIKEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#NINE_SOLUTIONS"/>
        /// </summary>
        public static int NINE_SOLUTIONS { get { if (!_NINE_SOLUTIONSReady) { _NINE_SOLUTIONSContent = SGetField<int>(LocalBridgeClazz, "NINE_SOLUTIONS"); _NINE_SOLUTIONSReady = true; } return _NINE_SOLUTIONSContent; } }
        private static int _NINE_SOLUTIONSContent = default;
        private static bool _NINE_SOLUTIONSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#NOKIA_MOBILE_PHONES"/>
        /// </summary>
        public static int NOKIA_MOBILE_PHONES { get { if (!_NOKIA_MOBILE_PHONESReady) { _NOKIA_MOBILE_PHONESContent = SGetField<int>(LocalBridgeClazz, "NOKIA_MOBILE_PHONES"); _NOKIA_MOBILE_PHONESReady = true; } return _NOKIA_MOBILE_PHONESContent; } }
        private static int _NOKIA_MOBILE_PHONESContent = default;
        private static bool _NOKIA_MOBILE_PHONESReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#NORDIC_SEMICONDUCTOR"/>
        /// </summary>
        public static int NORDIC_SEMICONDUCTOR { get { if (!_NORDIC_SEMICONDUCTORReady) { _NORDIC_SEMICONDUCTORContent = SGetField<int>(LocalBridgeClazz, "NORDIC_SEMICONDUCTOR"); _NORDIC_SEMICONDUCTORReady = true; } return _NORDIC_SEMICONDUCTORContent; } }
        private static int _NORDIC_SEMICONDUCTORContent = default;
        private static bool _NORDIC_SEMICONDUCTORReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#NORWOOD_SYSTEMS"/>
        /// </summary>
        public static int NORWOOD_SYSTEMS { get { if (!_NORWOOD_SYSTEMSReady) { _NORWOOD_SYSTEMSContent = SGetField<int>(LocalBridgeClazz, "NORWOOD_SYSTEMS"); _NORWOOD_SYSTEMSReady = true; } return _NORWOOD_SYSTEMSContent; } }
        private static int _NORWOOD_SYSTEMSContent = default;
        private static bool _NORWOOD_SYSTEMSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#ODM_TECHNOLOGY"/>
        /// </summary>
        public static int ODM_TECHNOLOGY { get { if (!_ODM_TECHNOLOGYReady) { _ODM_TECHNOLOGYContent = SGetField<int>(LocalBridgeClazz, "ODM_TECHNOLOGY"); _ODM_TECHNOLOGYReady = true; } return _ODM_TECHNOLOGYContent; } }
        private static int _ODM_TECHNOLOGYContent = default;
        private static bool _ODM_TECHNOLOGYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#OMEGAWAVE"/>
        /// </summary>
        public static int OMEGAWAVE { get { if (!_OMEGAWAVEReady) { _OMEGAWAVEContent = SGetField<int>(LocalBridgeClazz, "OMEGAWAVE"); _OMEGAWAVEReady = true; } return _OMEGAWAVEContent; } }
        private static int _OMEGAWAVEContent = default;
        private static bool _OMEGAWAVEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#ONSET_COMPUTER"/>
        /// </summary>
        public static int ONSET_COMPUTER { get { if (!_ONSET_COMPUTERReady) { _ONSET_COMPUTERContent = SGetField<int>(LocalBridgeClazz, "ONSET_COMPUTER"); _ONSET_COMPUTERReady = true; } return _ONSET_COMPUTERContent; } }
        private static int _ONSET_COMPUTERContent = default;
        private static bool _ONSET_COMPUTERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#OPEN_INTERFACE"/>
        /// </summary>
        public static int OPEN_INTERFACE { get { if (!_OPEN_INTERFACEReady) { _OPEN_INTERFACEContent = SGetField<int>(LocalBridgeClazz, "OPEN_INTERFACE"); _OPEN_INTERFACEReady = true; } return _OPEN_INTERFACEContent; } }
        private static int _OPEN_INTERFACEContent = default;
        private static bool _OPEN_INTERFACEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#OTL_DYNAMICS"/>
        /// </summary>
        public static int OTL_DYNAMICS { get { if (!_OTL_DYNAMICSReady) { _OTL_DYNAMICSContent = SGetField<int>(LocalBridgeClazz, "OTL_DYNAMICS"); _OTL_DYNAMICSReady = true; } return _OTL_DYNAMICSContent; } }
        private static int _OTL_DYNAMICSContent = default;
        private static bool _OTL_DYNAMICSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#PANDA_OCEAN"/>
        /// </summary>
        public static int PANDA_OCEAN { get { if (!_PANDA_OCEANReady) { _PANDA_OCEANContent = SGetField<int>(LocalBridgeClazz, "PANDA_OCEAN"); _PANDA_OCEANReady = true; } return _PANDA_OCEANContent; } }
        private static int _PANDA_OCEANContent = default;
        private static bool _PANDA_OCEANReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#PARROT"/>
        /// </summary>
        public static int PARROT { get { if (!_PARROTReady) { _PARROTContent = SGetField<int>(LocalBridgeClazz, "PARROT"); _PARROTReady = true; } return _PARROTContent; } }
        private static int _PARROTContent = default;
        private static bool _PARROTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#PARTHUS_TECHNOLOGIES"/>
        /// </summary>
        public static int PARTHUS_TECHNOLOGIES { get { if (!_PARTHUS_TECHNOLOGIESReady) { _PARTHUS_TECHNOLOGIESContent = SGetField<int>(LocalBridgeClazz, "PARTHUS_TECHNOLOGIES"); _PARTHUS_TECHNOLOGIESReady = true; } return _PARTHUS_TECHNOLOGIESContent; } }
        private static int _PARTHUS_TECHNOLOGIESContent = default;
        private static bool _PARTHUS_TECHNOLOGIESReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#PASSIF_SEMICONDUCTOR"/>
        /// </summary>
        public static int PASSIF_SEMICONDUCTOR { get { if (!_PASSIF_SEMICONDUCTORReady) { _PASSIF_SEMICONDUCTORContent = SGetField<int>(LocalBridgeClazz, "PASSIF_SEMICONDUCTOR"); _PASSIF_SEMICONDUCTORReady = true; } return _PASSIF_SEMICONDUCTORContent; } }
        private static int _PASSIF_SEMICONDUCTORContent = default;
        private static bool _PASSIF_SEMICONDUCTORReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#PETER_SYSTEMTECHNIK"/>
        /// </summary>
        public static int PETER_SYSTEMTECHNIK { get { if (!_PETER_SYSTEMTECHNIKReady) { _PETER_SYSTEMTECHNIKContent = SGetField<int>(LocalBridgeClazz, "PETER_SYSTEMTECHNIK"); _PETER_SYSTEMTECHNIKReady = true; } return _PETER_SYSTEMTECHNIKContent; } }
        private static int _PETER_SYSTEMTECHNIKContent = default;
        private static bool _PETER_SYSTEMTECHNIKReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#PHILIPS_SEMICONDUCTORS"/>
        /// </summary>
        public static int PHILIPS_SEMICONDUCTORS { get { if (!_PHILIPS_SEMICONDUCTORSReady) { _PHILIPS_SEMICONDUCTORSContent = SGetField<int>(LocalBridgeClazz, "PHILIPS_SEMICONDUCTORS"); _PHILIPS_SEMICONDUCTORSReady = true; } return _PHILIPS_SEMICONDUCTORSContent; } }
        private static int _PHILIPS_SEMICONDUCTORSContent = default;
        private static bool _PHILIPS_SEMICONDUCTORSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#PLANTRONICS"/>
        /// </summary>
        public static int PLANTRONICS { get { if (!_PLANTRONICSReady) { _PLANTRONICSContent = SGetField<int>(LocalBridgeClazz, "PLANTRONICS"); _PLANTRONICSReady = true; } return _PLANTRONICSContent; } }
        private static int _PLANTRONICSContent = default;
        private static bool _PLANTRONICSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#POLAR_ELECTRO"/>
        /// </summary>
        public static int POLAR_ELECTRO { get { if (!_POLAR_ELECTROReady) { _POLAR_ELECTROContent = SGetField<int>(LocalBridgeClazz, "POLAR_ELECTRO"); _POLAR_ELECTROReady = true; } return _POLAR_ELECTROContent; } }
        private static int _POLAR_ELECTROContent = default;
        private static bool _POLAR_ELECTROReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#POLAR_ELECTRO_EUROPE"/>
        /// </summary>
        public static int POLAR_ELECTRO_EUROPE { get { if (!_POLAR_ELECTRO_EUROPEReady) { _POLAR_ELECTRO_EUROPEContent = SGetField<int>(LocalBridgeClazz, "POLAR_ELECTRO_EUROPE"); _POLAR_ELECTRO_EUROPEReady = true; } return _POLAR_ELECTRO_EUROPEContent; } }
        private static int _POLAR_ELECTRO_EUROPEContent = default;
        private static bool _POLAR_ELECTRO_EUROPEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#PROCTER_AND_GAMBLE"/>
        /// </summary>
        public static int PROCTER_AND_GAMBLE { get { if (!_PROCTER_AND_GAMBLEReady) { _PROCTER_AND_GAMBLEContent = SGetField<int>(LocalBridgeClazz, "PROCTER_AND_GAMBLE"); _PROCTER_AND_GAMBLEReady = true; } return _PROCTER_AND_GAMBLEContent; } }
        private static int _PROCTER_AND_GAMBLEContent = default;
        private static bool _PROCTER_AND_GAMBLEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#QUALCOMM"/>
        /// </summary>
        public static int QUALCOMM { get { if (!_QUALCOMMReady) { _QUALCOMMContent = SGetField<int>(LocalBridgeClazz, "QUALCOMM"); _QUALCOMMReady = true; } return _QUALCOMMContent; } }
        private static int _QUALCOMMContent = default;
        private static bool _QUALCOMMReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#QUALCOMM_CONNECTED_EXPERIENCES"/>
        /// </summary>
        public static int QUALCOMM_CONNECTED_EXPERIENCES { get { if (!_QUALCOMM_CONNECTED_EXPERIENCESReady) { _QUALCOMM_CONNECTED_EXPERIENCESContent = SGetField<int>(LocalBridgeClazz, "QUALCOMM_CONNECTED_EXPERIENCES"); _QUALCOMM_CONNECTED_EXPERIENCESReady = true; } return _QUALCOMM_CONNECTED_EXPERIENCESContent; } }
        private static int _QUALCOMM_CONNECTED_EXPERIENCESContent = default;
        private static bool _QUALCOMM_CONNECTED_EXPERIENCESReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#QUALCOMM_INNOVATION_CENTER"/>
        /// </summary>
        public static int QUALCOMM_INNOVATION_CENTER { get { if (!_QUALCOMM_INNOVATION_CENTERReady) { _QUALCOMM_INNOVATION_CENTERContent = SGetField<int>(LocalBridgeClazz, "QUALCOMM_INNOVATION_CENTER"); _QUALCOMM_INNOVATION_CENTERReady = true; } return _QUALCOMM_INNOVATION_CENTERContent; } }
        private static int _QUALCOMM_INNOVATION_CENTERContent = default;
        private static bool _QUALCOMM_INNOVATION_CENTERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#QUALCOMM_LABS"/>
        /// </summary>
        public static int QUALCOMM_LABS { get { if (!_QUALCOMM_LABSReady) { _QUALCOMM_LABSContent = SGetField<int>(LocalBridgeClazz, "QUALCOMM_LABS"); _QUALCOMM_LABSReady = true; } return _QUALCOMM_LABSContent; } }
        private static int _QUALCOMM_LABSContent = default;
        private static bool _QUALCOMM_LABSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#QUALCOMM_TECHNOLOGIES"/>
        /// </summary>
        public static int QUALCOMM_TECHNOLOGIES { get { if (!_QUALCOMM_TECHNOLOGIESReady) { _QUALCOMM_TECHNOLOGIESContent = SGetField<int>(LocalBridgeClazz, "QUALCOMM_TECHNOLOGIES"); _QUALCOMM_TECHNOLOGIESReady = true; } return _QUALCOMM_TECHNOLOGIESContent; } }
        private static int _QUALCOMM_TECHNOLOGIESContent = default;
        private static bool _QUALCOMM_TECHNOLOGIESReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#QUINTIC"/>
        /// </summary>
        public static int QUINTIC { get { if (!_QUINTICReady) { _QUINTICContent = SGetField<int>(LocalBridgeClazz, "QUINTIC"); _QUINTICReady = true; } return _QUINTICContent; } }
        private static int _QUINTICContent = default;
        private static bool _QUINTICReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#QUUPPA"/>
        /// </summary>
        public static int QUUPPA { get { if (!_QUUPPAReady) { _QUUPPAContent = SGetField<int>(LocalBridgeClazz, "QUUPPA"); _QUUPPAReady = true; } return _QUUPPAContent; } }
        private static int _QUUPPAContent = default;
        private static bool _QUUPPAReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#RALINK_TECHNOLOGY"/>
        /// </summary>
        public static int RALINK_TECHNOLOGY { get { if (!_RALINK_TECHNOLOGYReady) { _RALINK_TECHNOLOGYContent = SGetField<int>(LocalBridgeClazz, "RALINK_TECHNOLOGY"); _RALINK_TECHNOLOGYReady = true; } return _RALINK_TECHNOLOGYContent; } }
        private static int _RALINK_TECHNOLOGYContent = default;
        private static bool _RALINK_TECHNOLOGYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#RDA_MICROELECTRONICS"/>
        /// </summary>
        public static int RDA_MICROELECTRONICS { get { if (!_RDA_MICROELECTRONICSReady) { _RDA_MICROELECTRONICSContent = SGetField<int>(LocalBridgeClazz, "RDA_MICROELECTRONICS"); _RDA_MICROELECTRONICSReady = true; } return _RDA_MICROELECTRONICSContent; } }
        private static int _RDA_MICROELECTRONICSContent = default;
        private static bool _RDA_MICROELECTRONICSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#REALTEK_SEMICONDUCTOR"/>
        /// </summary>
        public static int REALTEK_SEMICONDUCTOR { get { if (!_REALTEK_SEMICONDUCTORReady) { _REALTEK_SEMICONDUCTORContent = SGetField<int>(LocalBridgeClazz, "REALTEK_SEMICONDUCTOR"); _REALTEK_SEMICONDUCTORReady = true; } return _REALTEK_SEMICONDUCTORContent; } }
        private static int _REALTEK_SEMICONDUCTORContent = default;
        private static bool _REALTEK_SEMICONDUCTORReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#RED_M"/>
        /// </summary>
        public static int RED_M { get { if (!_RED_MReady) { _RED_MContent = SGetField<int>(LocalBridgeClazz, "RED_M"); _RED_MReady = true; } return _RED_MContent; } }
        private static int _RED_MContent = default;
        private static bool _RED_MReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#RENESAS_TECHNOLOGY"/>
        /// </summary>
        public static int RENESAS_TECHNOLOGY { get { if (!_RENESAS_TECHNOLOGYReady) { _RENESAS_TECHNOLOGYContent = SGetField<int>(LocalBridgeClazz, "RENESAS_TECHNOLOGY"); _RENESAS_TECHNOLOGYReady = true; } return _RENESAS_TECHNOLOGYContent; } }
        private static int _RENESAS_TECHNOLOGYContent = default;
        private static bool _RENESAS_TECHNOLOGYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#RESEARCH_IN_MOTION"/>
        /// </summary>
        public static int RESEARCH_IN_MOTION { get { if (!_RESEARCH_IN_MOTIONReady) { _RESEARCH_IN_MOTIONContent = SGetField<int>(LocalBridgeClazz, "RESEARCH_IN_MOTION"); _RESEARCH_IN_MOTIONReady = true; } return _RESEARCH_IN_MOTIONContent; } }
        private static int _RESEARCH_IN_MOTIONContent = default;
        private static bool _RESEARCH_IN_MOTIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#RF_MICRO_DEVICES"/>
        /// </summary>
        public static int RF_MICRO_DEVICES { get { if (!_RF_MICRO_DEVICESReady) { _RF_MICRO_DEVICESContent = SGetField<int>(LocalBridgeClazz, "RF_MICRO_DEVICES"); _RF_MICRO_DEVICESReady = true; } return _RF_MICRO_DEVICESContent; } }
        private static int _RF_MICRO_DEVICESContent = default;
        private static bool _RF_MICRO_DEVICESReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#RIVIERAWAVES"/>
        /// </summary>
        public static int RIVIERAWAVES { get { if (!_RIVIERAWAVESReady) { _RIVIERAWAVESContent = SGetField<int>(LocalBridgeClazz, "RIVIERAWAVES"); _RIVIERAWAVESReady = true; } return _RIVIERAWAVESContent; } }
        private static int _RIVIERAWAVESContent = default;
        private static bool _RIVIERAWAVESReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#ROHDE_AND_SCHWARZ"/>
        /// </summary>
        public static int ROHDE_AND_SCHWARZ { get { if (!_ROHDE_AND_SCHWARZReady) { _ROHDE_AND_SCHWARZContent = SGetField<int>(LocalBridgeClazz, "ROHDE_AND_SCHWARZ"); _ROHDE_AND_SCHWARZReady = true; } return _ROHDE_AND_SCHWARZContent; } }
        private static int _ROHDE_AND_SCHWARZContent = default;
        private static bool _ROHDE_AND_SCHWARZReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#RTX_TELECOM"/>
        /// </summary>
        public static int RTX_TELECOM { get { if (!_RTX_TELECOMReady) { _RTX_TELECOMContent = SGetField<int>(LocalBridgeClazz, "RTX_TELECOM"); _RTX_TELECOMReady = true; } return _RTX_TELECOMContent; } }
        private static int _RTX_TELECOMContent = default;
        private static bool _RTX_TELECOMReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#S_POWER_ELECTRONICS"/>
        /// </summary>
        public static int S_POWER_ELECTRONICS { get { if (!_S_POWER_ELECTRONICSReady) { _S_POWER_ELECTRONICSContent = SGetField<int>(LocalBridgeClazz, "S_POWER_ELECTRONICS"); _S_POWER_ELECTRONICSReady = true; } return _S_POWER_ELECTRONICSContent; } }
        private static int _S_POWER_ELECTRONICSContent = default;
        private static bool _S_POWER_ELECTRONICSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#SAMSUNG_ELECTRONICS"/>
        /// </summary>
        public static int SAMSUNG_ELECTRONICS { get { if (!_SAMSUNG_ELECTRONICSReady) { _SAMSUNG_ELECTRONICSContent = SGetField<int>(LocalBridgeClazz, "SAMSUNG_ELECTRONICS"); _SAMSUNG_ELECTRONICSReady = true; } return _SAMSUNG_ELECTRONICSContent; } }
        private static int _SAMSUNG_ELECTRONICSContent = default;
        private static bool _SAMSUNG_ELECTRONICSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#SARIS_CYCLING_GROUP"/>
        /// </summary>
        public static int SARIS_CYCLING_GROUP { get { if (!_SARIS_CYCLING_GROUPReady) { _SARIS_CYCLING_GROUPContent = SGetField<int>(LocalBridgeClazz, "SARIS_CYCLING_GROUP"); _SARIS_CYCLING_GROUPReady = true; } return _SARIS_CYCLING_GROUPContent; } }
        private static int _SARIS_CYCLING_GROUPContent = default;
        private static bool _SARIS_CYCLING_GROUPReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#SEERS_TECHNOLOGY"/>
        /// </summary>
        public static int SEERS_TECHNOLOGY { get { if (!_SEERS_TECHNOLOGYReady) { _SEERS_TECHNOLOGYContent = SGetField<int>(LocalBridgeClazz, "SEERS_TECHNOLOGY"); _SEERS_TECHNOLOGYReady = true; } return _SEERS_TECHNOLOGYContent; } }
        private static int _SEERS_TECHNOLOGYContent = default;
        private static bool _SEERS_TECHNOLOGYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#SEIKO_EPSON"/>
        /// </summary>
        public static int SEIKO_EPSON { get { if (!_SEIKO_EPSONReady) { _SEIKO_EPSONContent = SGetField<int>(LocalBridgeClazz, "SEIKO_EPSON"); _SEIKO_EPSONReady = true; } return _SEIKO_EPSONContent; } }
        private static int _SEIKO_EPSONContent = default;
        private static bool _SEIKO_EPSONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#SELFLY"/>
        /// </summary>
        public static int SELFLY { get { if (!_SELFLYReady) { _SELFLYContent = SGetField<int>(LocalBridgeClazz, "SELFLY"); _SELFLYReady = true; } return _SELFLYContent; } }
        private static int _SELFLYContent = default;
        private static bool _SELFLYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#SEMILINK"/>
        /// </summary>
        public static int SEMILINK { get { if (!_SEMILINKReady) { _SEMILINKContent = SGetField<int>(LocalBridgeClazz, "SEMILINK"); _SEMILINKReady = true; } return _SEMILINKContent; } }
        private static int _SEMILINKContent = default;
        private static bool _SEMILINKReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#SENNHEISER_COMMUNICATIONS"/>
        /// </summary>
        public static int SENNHEISER_COMMUNICATIONS { get { if (!_SENNHEISER_COMMUNICATIONSReady) { _SENNHEISER_COMMUNICATIONSContent = SGetField<int>(LocalBridgeClazz, "SENNHEISER_COMMUNICATIONS"); _SENNHEISER_COMMUNICATIONSReady = true; } return _SENNHEISER_COMMUNICATIONSContent; } }
        private static int _SENNHEISER_COMMUNICATIONSContent = default;
        private static bool _SENNHEISER_COMMUNICATIONSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#SHANGHAI_SUPER_SMART_ELECTRONICS"/>
        /// </summary>
        public static int SHANGHAI_SUPER_SMART_ELECTRONICS { get { if (!_SHANGHAI_SUPER_SMART_ELECTRONICSReady) { _SHANGHAI_SUPER_SMART_ELECTRONICSContent = SGetField<int>(LocalBridgeClazz, "SHANGHAI_SUPER_SMART_ELECTRONICS"); _SHANGHAI_SUPER_SMART_ELECTRONICSReady = true; } return _SHANGHAI_SUPER_SMART_ELECTRONICSContent; } }
        private static int _SHANGHAI_SUPER_SMART_ELECTRONICSContent = default;
        private static bool _SHANGHAI_SUPER_SMART_ELECTRONICSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#SHENZHEN_EXCELSECU_DATA_TECHNOLOGY"/>
        /// </summary>
        public static int SHENZHEN_EXCELSECU_DATA_TECHNOLOGY { get { if (!_SHENZHEN_EXCELSECU_DATA_TECHNOLOGYReady) { _SHENZHEN_EXCELSECU_DATA_TECHNOLOGYContent = SGetField<int>(LocalBridgeClazz, "SHENZHEN_EXCELSECU_DATA_TECHNOLOGY"); _SHENZHEN_EXCELSECU_DATA_TECHNOLOGYReady = true; } return _SHENZHEN_EXCELSECU_DATA_TECHNOLOGYContent; } }
        private static int _SHENZHEN_EXCELSECU_DATA_TECHNOLOGYContent = default;
        private static bool _SHENZHEN_EXCELSECU_DATA_TECHNOLOGYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#SIGNIA_TECHNOLOGIES"/>
        /// </summary>
        public static int SIGNIA_TECHNOLOGIES { get { if (!_SIGNIA_TECHNOLOGIESReady) { _SIGNIA_TECHNOLOGIESContent = SGetField<int>(LocalBridgeClazz, "SIGNIA_TECHNOLOGIES"); _SIGNIA_TECHNOLOGIESReady = true; } return _SIGNIA_TECHNOLOGIESContent; } }
        private static int _SIGNIA_TECHNOLOGIESContent = default;
        private static bool _SIGNIA_TECHNOLOGIESReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#SILICON_WAVE"/>
        /// </summary>
        public static int SILICON_WAVE { get { if (!_SILICON_WAVEReady) { _SILICON_WAVEContent = SGetField<int>(LocalBridgeClazz, "SILICON_WAVE"); _SILICON_WAVEReady = true; } return _SILICON_WAVEContent; } }
        private static int _SILICON_WAVEContent = default;
        private static bool _SILICON_WAVEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#SIRF_TECHNOLOGY"/>
        /// </summary>
        public static int SIRF_TECHNOLOGY { get { if (!_SIRF_TECHNOLOGYReady) { _SIRF_TECHNOLOGYContent = SGetField<int>(LocalBridgeClazz, "SIRF_TECHNOLOGY"); _SIRF_TECHNOLOGYReady = true; } return _SIRF_TECHNOLOGYContent; } }
        private static int _SIRF_TECHNOLOGYContent = default;
        private static bool _SIRF_TECHNOLOGYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#SOCKET_MOBILE"/>
        /// </summary>
        public static int SOCKET_MOBILE { get { if (!_SOCKET_MOBILEReady) { _SOCKET_MOBILEContent = SGetField<int>(LocalBridgeClazz, "SOCKET_MOBILE"); _SOCKET_MOBILEReady = true; } return _SOCKET_MOBILEContent; } }
        private static int _SOCKET_MOBILEContent = default;
        private static bool _SOCKET_MOBILEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#SONY_ERICSSON"/>
        /// </summary>
        public static int SONY_ERICSSON { get { if (!_SONY_ERICSSONReady) { _SONY_ERICSSONContent = SGetField<int>(LocalBridgeClazz, "SONY_ERICSSON"); _SONY_ERICSSONReady = true; } return _SONY_ERICSSONContent; } }
        private static int _SONY_ERICSSONContent = default;
        private static bool _SONY_ERICSSONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#SOUND_ID"/>
        /// </summary>
        public static int SOUND_ID { get { if (!_SOUND_IDReady) { _SOUND_IDContent = SGetField<int>(LocalBridgeClazz, "SOUND_ID"); _SOUND_IDReady = true; } return _SOUND_IDContent; } }
        private static int _SOUND_IDContent = default;
        private static bool _SOUND_IDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#SPORTS_TRACKING_TECHNOLOGIES"/>
        /// </summary>
        public static int SPORTS_TRACKING_TECHNOLOGIES { get { if (!_SPORTS_TRACKING_TECHNOLOGIESReady) { _SPORTS_TRACKING_TECHNOLOGIESContent = SGetField<int>(LocalBridgeClazz, "SPORTS_TRACKING_TECHNOLOGIES"); _SPORTS_TRACKING_TECHNOLOGIESReady = true; } return _SPORTS_TRACKING_TECHNOLOGIESContent; } }
        private static int _SPORTS_TRACKING_TECHNOLOGIESContent = default;
        private static bool _SPORTS_TRACKING_TECHNOLOGIESReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#SR_MEDIZINELEKTRONIK"/>
        /// </summary>
        public static int SR_MEDIZINELEKTRONIK { get { if (!_SR_MEDIZINELEKTRONIKReady) { _SR_MEDIZINELEKTRONIKContent = SGetField<int>(LocalBridgeClazz, "SR_MEDIZINELEKTRONIK"); _SR_MEDIZINELEKTRONIKReady = true; } return _SR_MEDIZINELEKTRONIKContent; } }
        private static int _SR_MEDIZINELEKTRONIKContent = default;
        private static bool _SR_MEDIZINELEKTRONIKReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#ST_MICROELECTRONICS"/>
        /// </summary>
        public static int ST_MICROELECTRONICS { get { if (!_ST_MICROELECTRONICSReady) { _ST_MICROELECTRONICSContent = SGetField<int>(LocalBridgeClazz, "ST_MICROELECTRONICS"); _ST_MICROELECTRONICSReady = true; } return _ST_MICROELECTRONICSContent; } }
        private static int _ST_MICROELECTRONICSContent = default;
        private static bool _ST_MICROELECTRONICSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#STACCATO_COMMUNICATIONS"/>
        /// </summary>
        public static int STACCATO_COMMUNICATIONS { get { if (!_STACCATO_COMMUNICATIONSReady) { _STACCATO_COMMUNICATIONSContent = SGetField<int>(LocalBridgeClazz, "STACCATO_COMMUNICATIONS"); _STACCATO_COMMUNICATIONSReady = true; } return _STACCATO_COMMUNICATIONSContent; } }
        private static int _STACCATO_COMMUNICATIONSContent = default;
        private static bool _STACCATO_COMMUNICATIONSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#STALMART_TECHNOLOGY"/>
        /// </summary>
        public static int STALMART_TECHNOLOGY { get { if (!_STALMART_TECHNOLOGYReady) { _STALMART_TECHNOLOGYContent = SGetField<int>(LocalBridgeClazz, "STALMART_TECHNOLOGY"); _STALMART_TECHNOLOGYReady = true; } return _STALMART_TECHNOLOGYContent; } }
        private static int _STALMART_TECHNOLOGYContent = default;
        private static bool _STALMART_TECHNOLOGYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#STARKEY_LABORATORIES"/>
        /// </summary>
        public static int STARKEY_LABORATORIES { get { if (!_STARKEY_LABORATORIESReady) { _STARKEY_LABORATORIESContent = SGetField<int>(LocalBridgeClazz, "STARKEY_LABORATORIES"); _STARKEY_LABORATORIESReady = true; } return _STARKEY_LABORATORIESContent; } }
        private static int _STARKEY_LABORATORIESContent = default;
        private static bool _STARKEY_LABORATORIESReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#STOLLMAN_E_PLUS_V"/>
        /// </summary>
        public static int STOLLMAN_E_PLUS_V { get { if (!_STOLLMAN_E_PLUS_VReady) { _STOLLMAN_E_PLUS_VContent = SGetField<int>(LocalBridgeClazz, "STOLLMAN_E_PLUS_V"); _STOLLMAN_E_PLUS_VReady = true; } return _STOLLMAN_E_PLUS_VContent; } }
        private static int _STOLLMAN_E_PLUS_VContent = default;
        private static bool _STOLLMAN_E_PLUS_VReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#STONESTREET_ONE"/>
        /// </summary>
        public static int STONESTREET_ONE { get { if (!_STONESTREET_ONEReady) { _STONESTREET_ONEContent = SGetField<int>(LocalBridgeClazz, "STONESTREET_ONE"); _STONESTREET_ONEReady = true; } return _STONESTREET_ONEContent; } }
        private static int _STONESTREET_ONEContent = default;
        private static bool _STONESTREET_ONEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#SUMMIT_DATA_COMMUNICATIONS"/>
        /// </summary>
        public static int SUMMIT_DATA_COMMUNICATIONS { get { if (!_SUMMIT_DATA_COMMUNICATIONSReady) { _SUMMIT_DATA_COMMUNICATIONSContent = SGetField<int>(LocalBridgeClazz, "SUMMIT_DATA_COMMUNICATIONS"); _SUMMIT_DATA_COMMUNICATIONSReady = true; } return _SUMMIT_DATA_COMMUNICATIONSContent; } }
        private static int _SUMMIT_DATA_COMMUNICATIONSContent = default;
        private static bool _SUMMIT_DATA_COMMUNICATIONSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#SUUNTO"/>
        /// </summary>
        public static int SUUNTO { get { if (!_SUUNTOReady) { _SUUNTOContent = SGetField<int>(LocalBridgeClazz, "SUUNTO"); _SUUNTOReady = true; } return _SUUNTOContent; } }
        private static int _SUUNTOContent = default;
        private static bool _SUUNTOReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#SWIRL_NETWORKS"/>
        /// </summary>
        public static int SWIRL_NETWORKS { get { if (!_SWIRL_NETWORKSReady) { _SWIRL_NETWORKSContent = SGetField<int>(LocalBridgeClazz, "SWIRL_NETWORKS"); _SWIRL_NETWORKSReady = true; } return _SWIRL_NETWORKSContent; } }
        private static int _SWIRL_NETWORKSContent = default;
        private static bool _SWIRL_NETWORKSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#SYMBOL_TECHNOLOGIES"/>
        /// </summary>
        public static int SYMBOL_TECHNOLOGIES { get { if (!_SYMBOL_TECHNOLOGIESReady) { _SYMBOL_TECHNOLOGIESContent = SGetField<int>(LocalBridgeClazz, "SYMBOL_TECHNOLOGIES"); _SYMBOL_TECHNOLOGIESReady = true; } return _SYMBOL_TECHNOLOGIESContent; } }
        private static int _SYMBOL_TECHNOLOGIESContent = default;
        private static bool _SYMBOL_TECHNOLOGIESReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#SYNOPSYS"/>
        /// </summary>
        public static int SYNOPSYS { get { if (!_SYNOPSYSReady) { _SYNOPSYSContent = SGetField<int>(LocalBridgeClazz, "SYNOPSYS"); _SYNOPSYSReady = true; } return _SYNOPSYSContent; } }
        private static int _SYNOPSYSContent = default;
        private static bool _SYNOPSYSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#SYSTEMS_AND_CHIPS"/>
        /// </summary>
        public static int SYSTEMS_AND_CHIPS { get { if (!_SYSTEMS_AND_CHIPSReady) { _SYSTEMS_AND_CHIPSContent = SGetField<int>(LocalBridgeClazz, "SYSTEMS_AND_CHIPS"); _SYSTEMS_AND_CHIPSReady = true; } return _SYSTEMS_AND_CHIPSContent; } }
        private static int _SYSTEMS_AND_CHIPSContent = default;
        private static bool _SYSTEMS_AND_CHIPSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#TAIXINGBANG_TECHNOLOGY"/>
        /// </summary>
        public static int TAIXINGBANG_TECHNOLOGY { get { if (!_TAIXINGBANG_TECHNOLOGYReady) { _TAIXINGBANG_TECHNOLOGYContent = SGetField<int>(LocalBridgeClazz, "TAIXINGBANG_TECHNOLOGY"); _TAIXINGBANG_TECHNOLOGYReady = true; } return _TAIXINGBANG_TECHNOLOGYContent; } }
        private static int _TAIXINGBANG_TECHNOLOGYContent = default;
        private static bool _TAIXINGBANG_TECHNOLOGYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#TENOVIS"/>
        /// </summary>
        public static int TENOVIS { get { if (!_TENOVISReady) { _TENOVISContent = SGetField<int>(LocalBridgeClazz, "TENOVIS"); _TENOVISReady = true; } return _TENOVISContent; } }
        private static int _TENOVISContent = default;
        private static bool _TENOVISReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#TERAX"/>
        /// </summary>
        public static int TERAX { get { if (!_TERAXReady) { _TERAXContent = SGetField<int>(LocalBridgeClazz, "TERAX"); _TERAXReady = true; } return _TERAXContent; } }
        private static int _TERAXContent = default;
        private static bool _TERAXReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#TEXAS_INSTRUMENTS"/>
        /// </summary>
        public static int TEXAS_INSTRUMENTS { get { if (!_TEXAS_INSTRUMENTSReady) { _TEXAS_INSTRUMENTSContent = SGetField<int>(LocalBridgeClazz, "TEXAS_INSTRUMENTS"); _TEXAS_INSTRUMENTSReady = true; } return _TEXAS_INSTRUMENTSContent; } }
        private static int _TEXAS_INSTRUMENTSContent = default;
        private static bool _TEXAS_INSTRUMENTSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#THINKOPTICS"/>
        /// </summary>
        public static int THINKOPTICS { get { if (!_THINKOPTICSReady) { _THINKOPTICSContent = SGetField<int>(LocalBridgeClazz, "THINKOPTICS"); _THINKOPTICSReady = true; } return _THINKOPTICSContent; } }
        private static int _THINKOPTICSContent = default;
        private static bool _THINKOPTICSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#THREE_DIJOY"/>
        /// </summary>
        public static int THREE_DIJOY { get { if (!_THREE_DIJOYReady) { _THREE_DIJOYContent = SGetField<int>(LocalBridgeClazz, "THREE_DIJOY"); _THREE_DIJOYReady = true; } return _THREE_DIJOYContent; } }
        private static int _THREE_DIJOYContent = default;
        private static bool _THREE_DIJOYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#THREE_DSP"/>
        /// </summary>
        public static int THREE_DSP { get { if (!_THREE_DSPReady) { _THREE_DSPContent = SGetField<int>(LocalBridgeClazz, "THREE_DSP"); _THREE_DSPReady = true; } return _THREE_DSPContent; } }
        private static int _THREE_DSPContent = default;
        private static bool _THREE_DSPReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#THREECOM"/>
        /// </summary>
        public static int THREECOM { get { if (!_THREECOMReady) { _THREECOMContent = SGetField<int>(LocalBridgeClazz, "THREECOM"); _THREECOMReady = true; } return _THREECOMContent; } }
        private static int _THREECOMContent = default;
        private static bool _THREECOMReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#TIMEKEEPING_SYSTEMS"/>
        /// </summary>
        public static int TIMEKEEPING_SYSTEMS { get { if (!_TIMEKEEPING_SYSTEMSReady) { _TIMEKEEPING_SYSTEMSContent = SGetField<int>(LocalBridgeClazz, "TIMEKEEPING_SYSTEMS"); _TIMEKEEPING_SYSTEMSReady = true; } return _TIMEKEEPING_SYSTEMSContent; } }
        private static int _TIMEKEEPING_SYSTEMSContent = default;
        private static bool _TIMEKEEPING_SYSTEMSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#TIMEX_GROUP_USA"/>
        /// </summary>
        public static int TIMEX_GROUP_USA { get { if (!_TIMEX_GROUP_USAReady) { _TIMEX_GROUP_USAContent = SGetField<int>(LocalBridgeClazz, "TIMEX_GROUP_USA"); _TIMEX_GROUP_USAReady = true; } return _TIMEX_GROUP_USAContent; } }
        private static int _TIMEX_GROUP_USAContent = default;
        private static bool _TIMEX_GROUP_USAReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#TOPCORN_POSITIONING_SYSTEMS"/>
        /// </summary>
        public static int TOPCORN_POSITIONING_SYSTEMS { get { if (!_TOPCORN_POSITIONING_SYSTEMSReady) { _TOPCORN_POSITIONING_SYSTEMSContent = SGetField<int>(LocalBridgeClazz, "TOPCORN_POSITIONING_SYSTEMS"); _TOPCORN_POSITIONING_SYSTEMSReady = true; } return _TOPCORN_POSITIONING_SYSTEMSContent; } }
        private static int _TOPCORN_POSITIONING_SYSTEMSContent = default;
        private static bool _TOPCORN_POSITIONING_SYSTEMSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#TOSHIBA"/>
        /// </summary>
        public static int TOSHIBA { get { if (!_TOSHIBAReady) { _TOSHIBAContent = SGetField<int>(LocalBridgeClazz, "TOSHIBA"); _TOSHIBAReady = true; } return _TOSHIBAContent; } }
        private static int _TOSHIBAContent = default;
        private static bool _TOSHIBAReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#TRANSILICA"/>
        /// </summary>
        public static int TRANSILICA { get { if (!_TRANSILICAReady) { _TRANSILICAContent = SGetField<int>(LocalBridgeClazz, "TRANSILICA"); _TRANSILICAReady = true; } return _TRANSILICAContent; } }
        private static int _TRANSILICAContent = default;
        private static bool _TRANSILICAReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#TRELAB"/>
        /// </summary>
        public static int TRELAB { get { if (!_TRELABReady) { _TRELABContent = SGetField<int>(LocalBridgeClazz, "TRELAB"); _TRELABReady = true; } return _TRELABContent; } }
        private static int _TRELABContent = default;
        private static bool _TRELABReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#TTPCOM"/>
        /// </summary>
        public static int TTPCOM { get { if (!_TTPCOMReady) { _TTPCOMContent = SGetField<int>(LocalBridgeClazz, "TTPCOM"); _TTPCOMReady = true; } return _TTPCOMContent; } }
        private static int _TTPCOMContent = default;
        private static bool _TTPCOMReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#TXTR"/>
        /// </summary>
        public static int TXTR { get { if (!_TXTRReady) { _TXTRContent = SGetField<int>(LocalBridgeClazz, "TXTR"); _TXTRReady = true; } return _TXTRContent; } }
        private static int _TXTRContent = default;
        private static bool _TXTRReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#TZERO_TECHNOLOGIES"/>
        /// </summary>
        public static int TZERO_TECHNOLOGIES { get { if (!_TZERO_TECHNOLOGIESReady) { _TZERO_TECHNOLOGIESContent = SGetField<int>(LocalBridgeClazz, "TZERO_TECHNOLOGIES"); _TZERO_TECHNOLOGIESReady = true; } return _TZERO_TECHNOLOGIESContent; } }
        private static int _TZERO_TECHNOLOGIESContent = default;
        private static bool _TZERO_TECHNOLOGIESReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#UNIVERSAL_ELECTRONICS"/>
        /// </summary>
        public static int UNIVERSAL_ELECTRONICS { get { if (!_UNIVERSAL_ELECTRONICSReady) { _UNIVERSAL_ELECTRONICSContent = SGetField<int>(LocalBridgeClazz, "UNIVERSAL_ELECTRONICS"); _UNIVERSAL_ELECTRONICSReady = true; } return _UNIVERSAL_ELECTRONICSContent; } }
        private static int _UNIVERSAL_ELECTRONICSContent = default;
        private static bool _UNIVERSAL_ELECTRONICSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#VERTU"/>
        /// </summary>
        public static int VERTU { get { if (!_VERTUReady) { _VERTUContent = SGetField<int>(LocalBridgeClazz, "VERTU"); _VERTUReady = true; } return _VERTUContent; } }
        private static int _VERTUContent = default;
        private static bool _VERTUReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#VISTEON"/>
        /// </summary>
        public static int VISTEON { get { if (!_VISTEONReady) { _VISTEONContent = SGetField<int>(LocalBridgeClazz, "VISTEON"); _VISTEONReady = true; } return _VISTEONContent; } }
        private static int _VISTEONContent = default;
        private static bool _VISTEONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#VIZIO"/>
        /// </summary>
        public static int VIZIO { get { if (!_VIZIOReady) { _VIZIOContent = SGetField<int>(LocalBridgeClazz, "VIZIO"); _VIZIOReady = true; } return _VIZIOContent; } }
        private static int _VIZIOContent = default;
        private static bool _VIZIOReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#VOYETRA_TURTLE_BEACH"/>
        /// </summary>
        public static int VOYETRA_TURTLE_BEACH { get { if (!_VOYETRA_TURTLE_BEACHReady) { _VOYETRA_TURTLE_BEACHContent = SGetField<int>(LocalBridgeClazz, "VOYETRA_TURTLE_BEACH"); _VOYETRA_TURTLE_BEACHReady = true; } return _VOYETRA_TURTLE_BEACHContent; } }
        private static int _VOYETRA_TURTLE_BEACHContent = default;
        private static bool _VOYETRA_TURTLE_BEACHReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#WAVEPLUS_TECHNOLOGY"/>
        /// </summary>
        public static int WAVEPLUS_TECHNOLOGY { get { if (!_WAVEPLUS_TECHNOLOGYReady) { _WAVEPLUS_TECHNOLOGYContent = SGetField<int>(LocalBridgeClazz, "WAVEPLUS_TECHNOLOGY"); _WAVEPLUS_TECHNOLOGYReady = true; } return _WAVEPLUS_TECHNOLOGYContent; } }
        private static int _WAVEPLUS_TECHNOLOGYContent = default;
        private static bool _WAVEPLUS_TECHNOLOGYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#WICENTRIC"/>
        /// </summary>
        public static int WICENTRIC { get { if (!_WICENTRICReady) { _WICENTRICContent = SGetField<int>(LocalBridgeClazz, "WICENTRIC"); _WICENTRICReady = true; } return _WICENTRICContent; } }
        private static int _WICENTRICContent = default;
        private static bool _WICENTRICReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#WIDCOMM"/>
        /// </summary>
        public static int WIDCOMM { get { if (!_WIDCOMMReady) { _WIDCOMMContent = SGetField<int>(LocalBridgeClazz, "WIDCOMM"); _WIDCOMMReady = true; } return _WIDCOMMContent; } }
        private static int _WIDCOMMContent = default;
        private static bool _WIDCOMMReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#WUXI_VIMICRO"/>
        /// </summary>
        public static int WUXI_VIMICRO { get { if (!_WUXI_VIMICROReady) { _WUXI_VIMICROContent = SGetField<int>(LocalBridgeClazz, "WUXI_VIMICRO"); _WUXI_VIMICROReady = true; } return _WUXI_VIMICROContent; } }
        private static int _WUXI_VIMICROContent = default;
        private static bool _WUXI_VIMICROReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#ZEEVO"/>
        /// </summary>
        public static int ZEEVO { get { if (!_ZEEVOReady) { _ZEEVOContent = SGetField<int>(LocalBridgeClazz, "ZEEVO"); _ZEEVOReady = true; } return _ZEEVOContent; } }
        private static int _ZEEVOContent = default;
        private static bool _ZEEVOReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#ZER01_TV"/>
        /// </summary>
        public static int ZER01_TV { get { if (!_ZER01_TVReady) { _ZER01_TVContent = SGetField<int>(LocalBridgeClazz, "ZER01_TV"); _ZER01_TVReady = true; } return _ZER01_TVContent; } }
        private static int _ZER01_TVContent = default;
        private static bool _ZER01_TVReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#ZOMM"/>
        /// </summary>
        public static int ZOMM { get { if (!_ZOMMReady) { _ZOMMContent = SGetField<int>(LocalBridgeClazz, "ZOMM"); _ZOMMReady = true; } return _ZOMMContent; } }
        private static int _ZOMMContent = default;
        private static bool _ZOMMReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html#ZSCAN_SOFTWARE"/>
        /// </summary>
        public static int ZSCAN_SOFTWARE { get { if (!_ZSCAN_SOFTWAREReady) { _ZSCAN_SOFTWAREContent = SGetField<int>(LocalBridgeClazz, "ZSCAN_SOFTWARE"); _ZSCAN_SOFTWAREReady = true; } return _ZSCAN_SOFTWAREContent; } }
        private static int _ZSCAN_SOFTWAREContent = default;
        private static bool _ZSCAN_SOFTWAREReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}