/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.9.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Bluetooth
{
    #region BluetoothClass declaration
    /// <summary>
    /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.html"/>
    /// </summary>
    public partial class BluetoothClass : Android.Os.Parcelable
    {
        const string _bridgeClassName = "android.bluetooth.BluetoothClass";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BluetoothClass() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BluetoothClass(params object[] args) : base(args) { }
    
        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
    
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;
    
        // TODO: complete the class
        #region Device declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.html"/>
        /// </summary>
        public partial class Device : MASES.JCOBridge.C2JBridge.JVMBridgeBase<Device>
        {
            const string _bridgeClassName = "android.bluetooth.BluetoothClass$Device";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public Device() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public Device(params object[] args) : base(args) { }
        
            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
        
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;
        
            // TODO: complete the class
            #region Major declaration
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.Major.html"/>
            /// </summary>
            public partial class Major : MASES.JCOBridge.C2JBridge.JVMBridgeBase<Major>
            {
                const string _bridgeClassName = "android.bluetooth.BluetoothClass$Device$Major";
                /// <summary>
                /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
                /// </summary>
                public Major() { }
                /// <summary>
                /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
                /// </summary>
                public Major(params object[] args) : base(args) { }
            
                private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
                private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
            
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
                /// </summary>
                public override string BridgeClassName => _bridgeClassName;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
                /// </summary>
                public override bool IsBridgeAbstract => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
                /// </summary>
                public override bool IsBridgeCloseable => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
                /// </summary>
                public override bool IsBridgeInterface => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
                /// </summary>
                public override bool IsBridgeStatic => true;
            
                // TODO: complete the class
            
            }
            #endregion

        
        }
        #endregion

        #region Service declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Service.html"/>
        /// </summary>
        public partial class Service : MASES.JCOBridge.C2JBridge.JVMBridgeBase<Service>
        {
            const string _bridgeClassName = "android.bluetooth.BluetoothClass$Service";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public Service() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public Service(params object[] args) : base(args) { }
        
            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
        
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;
        
            // TODO: complete the class
        
        }
        #endregion

    
    }
    #endregion

    #region BluetoothClass implementation
    public partial class BluetoothClass
    {
        #region Constructors
    
        #endregion
    
        #region Class/Interface conversion operators
    
        #endregion
    
        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.html#CREATOR"/>
        /// </summary>
        public static Android.Os.Parcelable.Creator CREATOR { get { if (!_CREATORReady) { _CREATORContent = SGetField<Android.Os.Parcelable.Creator>(LocalBridgeClazz, "CREATOR"); _CREATORReady = true; } return _CREATORContent; } }
        private static Android.Os.Parcelable.Creator _CREATORContent = default;
        private static bool _CREATORReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.html#PROFILE_A2DP"/>
        /// </summary>
        public static int PROFILE_A2DP { get { if (!_PROFILE_A2DPReady) { _PROFILE_A2DPContent = SGetField<int>(LocalBridgeClazz, "PROFILE_A2DP"); _PROFILE_A2DPReady = true; } return _PROFILE_A2DPContent; } }
        private static int _PROFILE_A2DPContent = default;
        private static bool _PROFILE_A2DPReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.html#PROFILE_HEADSET"/>
        /// </summary>
        public static int PROFILE_HEADSET { get { if (!_PROFILE_HEADSETReady) { _PROFILE_HEADSETContent = SGetField<int>(LocalBridgeClazz, "PROFILE_HEADSET"); _PROFILE_HEADSETReady = true; } return _PROFILE_HEADSETContent; } }
        private static int _PROFILE_HEADSETContent = default;
        private static bool _PROFILE_HEADSETReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.html#PROFILE_HID"/>
        /// </summary>
        public static int PROFILE_HID { get { if (!_PROFILE_HIDReady) { _PROFILE_HIDContent = SGetField<int>(LocalBridgeClazz, "PROFILE_HID"); _PROFILE_HIDReady = true; } return _PROFILE_HIDContent; } }
        private static int _PROFILE_HIDContent = default;
        private static bool _PROFILE_HIDReady = false; // this is used because in case of generics 
    
        #endregion
    
        #region Static methods
    
        #endregion
    
        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.html#doesClassMatch(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool DoesClassMatch(int arg0)
        {
            return IExecuteWithSignature<bool>("doesClassMatch", "(I)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.html#hasService(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool HasService(int arg0)
        {
            return IExecuteWithSignature<bool>("hasService", "(I)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.html#describeContents()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int DescribeContents()
        {
            return IExecuteWithSignature<int>("describeContents", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.html#getDeviceClass()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetDeviceClass()
        {
            return IExecuteWithSignature<int>("getDeviceClass", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.html#getMajorDeviceClass()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetMajorDeviceClass()
        {
            return IExecuteWithSignature<int>("getMajorDeviceClass", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.html#writeToParcel(android.os.Parcel,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.Parcel"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void WriteToParcel(Android.Os.Parcel arg0, int arg1)
        {
            IExecute("writeToParcel", arg0, arg1);
        }
    
        #endregion
    
        #region Nested classes
        #region Device implementation
        public partial class Device
        {
            #region Constructors
        
            #endregion
        
            #region Class/Interface conversion operators
        
            #endregion
        
            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.html#AUDIO_VIDEO_CAMCORDER"/>
            /// </summary>
            public static int AUDIO_VIDEO_CAMCORDER { get { if (!_AUDIO_VIDEO_CAMCORDERReady) { _AUDIO_VIDEO_CAMCORDERContent = SGetField<int>(LocalBridgeClazz, "AUDIO_VIDEO_CAMCORDER"); _AUDIO_VIDEO_CAMCORDERReady = true; } return _AUDIO_VIDEO_CAMCORDERContent; } }
            private static int _AUDIO_VIDEO_CAMCORDERContent = default;
            private static bool _AUDIO_VIDEO_CAMCORDERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.html#AUDIO_VIDEO_CAR_AUDIO"/>
            /// </summary>
            public static int AUDIO_VIDEO_CAR_AUDIO { get { if (!_AUDIO_VIDEO_CAR_AUDIOReady) { _AUDIO_VIDEO_CAR_AUDIOContent = SGetField<int>(LocalBridgeClazz, "AUDIO_VIDEO_CAR_AUDIO"); _AUDIO_VIDEO_CAR_AUDIOReady = true; } return _AUDIO_VIDEO_CAR_AUDIOContent; } }
            private static int _AUDIO_VIDEO_CAR_AUDIOContent = default;
            private static bool _AUDIO_VIDEO_CAR_AUDIOReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.html#AUDIO_VIDEO_HANDSFREE"/>
            /// </summary>
            public static int AUDIO_VIDEO_HANDSFREE { get { if (!_AUDIO_VIDEO_HANDSFREEReady) { _AUDIO_VIDEO_HANDSFREEContent = SGetField<int>(LocalBridgeClazz, "AUDIO_VIDEO_HANDSFREE"); _AUDIO_VIDEO_HANDSFREEReady = true; } return _AUDIO_VIDEO_HANDSFREEContent; } }
            private static int _AUDIO_VIDEO_HANDSFREEContent = default;
            private static bool _AUDIO_VIDEO_HANDSFREEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.html#AUDIO_VIDEO_HEADPHONES"/>
            /// </summary>
            public static int AUDIO_VIDEO_HEADPHONES { get { if (!_AUDIO_VIDEO_HEADPHONESReady) { _AUDIO_VIDEO_HEADPHONESContent = SGetField<int>(LocalBridgeClazz, "AUDIO_VIDEO_HEADPHONES"); _AUDIO_VIDEO_HEADPHONESReady = true; } return _AUDIO_VIDEO_HEADPHONESContent; } }
            private static int _AUDIO_VIDEO_HEADPHONESContent = default;
            private static bool _AUDIO_VIDEO_HEADPHONESReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.html#AUDIO_VIDEO_HIFI_AUDIO"/>
            /// </summary>
            public static int AUDIO_VIDEO_HIFI_AUDIO { get { if (!_AUDIO_VIDEO_HIFI_AUDIOReady) { _AUDIO_VIDEO_HIFI_AUDIOContent = SGetField<int>(LocalBridgeClazz, "AUDIO_VIDEO_HIFI_AUDIO"); _AUDIO_VIDEO_HIFI_AUDIOReady = true; } return _AUDIO_VIDEO_HIFI_AUDIOContent; } }
            private static int _AUDIO_VIDEO_HIFI_AUDIOContent = default;
            private static bool _AUDIO_VIDEO_HIFI_AUDIOReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.html#AUDIO_VIDEO_LOUDSPEAKER"/>
            /// </summary>
            public static int AUDIO_VIDEO_LOUDSPEAKER { get { if (!_AUDIO_VIDEO_LOUDSPEAKERReady) { _AUDIO_VIDEO_LOUDSPEAKERContent = SGetField<int>(LocalBridgeClazz, "AUDIO_VIDEO_LOUDSPEAKER"); _AUDIO_VIDEO_LOUDSPEAKERReady = true; } return _AUDIO_VIDEO_LOUDSPEAKERContent; } }
            private static int _AUDIO_VIDEO_LOUDSPEAKERContent = default;
            private static bool _AUDIO_VIDEO_LOUDSPEAKERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.html#AUDIO_VIDEO_MICROPHONE"/>
            /// </summary>
            public static int AUDIO_VIDEO_MICROPHONE { get { if (!_AUDIO_VIDEO_MICROPHONEReady) { _AUDIO_VIDEO_MICROPHONEContent = SGetField<int>(LocalBridgeClazz, "AUDIO_VIDEO_MICROPHONE"); _AUDIO_VIDEO_MICROPHONEReady = true; } return _AUDIO_VIDEO_MICROPHONEContent; } }
            private static int _AUDIO_VIDEO_MICROPHONEContent = default;
            private static bool _AUDIO_VIDEO_MICROPHONEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.html#AUDIO_VIDEO_PORTABLE_AUDIO"/>
            /// </summary>
            public static int AUDIO_VIDEO_PORTABLE_AUDIO { get { if (!_AUDIO_VIDEO_PORTABLE_AUDIOReady) { _AUDIO_VIDEO_PORTABLE_AUDIOContent = SGetField<int>(LocalBridgeClazz, "AUDIO_VIDEO_PORTABLE_AUDIO"); _AUDIO_VIDEO_PORTABLE_AUDIOReady = true; } return _AUDIO_VIDEO_PORTABLE_AUDIOContent; } }
            private static int _AUDIO_VIDEO_PORTABLE_AUDIOContent = default;
            private static bool _AUDIO_VIDEO_PORTABLE_AUDIOReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.html#AUDIO_VIDEO_SET_TOP_BOX"/>
            /// </summary>
            public static int AUDIO_VIDEO_SET_TOP_BOX { get { if (!_AUDIO_VIDEO_SET_TOP_BOXReady) { _AUDIO_VIDEO_SET_TOP_BOXContent = SGetField<int>(LocalBridgeClazz, "AUDIO_VIDEO_SET_TOP_BOX"); _AUDIO_VIDEO_SET_TOP_BOXReady = true; } return _AUDIO_VIDEO_SET_TOP_BOXContent; } }
            private static int _AUDIO_VIDEO_SET_TOP_BOXContent = default;
            private static bool _AUDIO_VIDEO_SET_TOP_BOXReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.html#AUDIO_VIDEO_UNCATEGORIZED"/>
            /// </summary>
            public static int AUDIO_VIDEO_UNCATEGORIZED { get { if (!_AUDIO_VIDEO_UNCATEGORIZEDReady) { _AUDIO_VIDEO_UNCATEGORIZEDContent = SGetField<int>(LocalBridgeClazz, "AUDIO_VIDEO_UNCATEGORIZED"); _AUDIO_VIDEO_UNCATEGORIZEDReady = true; } return _AUDIO_VIDEO_UNCATEGORIZEDContent; } }
            private static int _AUDIO_VIDEO_UNCATEGORIZEDContent = default;
            private static bool _AUDIO_VIDEO_UNCATEGORIZEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.html#AUDIO_VIDEO_VCR"/>
            /// </summary>
            public static int AUDIO_VIDEO_VCR { get { if (!_AUDIO_VIDEO_VCRReady) { _AUDIO_VIDEO_VCRContent = SGetField<int>(LocalBridgeClazz, "AUDIO_VIDEO_VCR"); _AUDIO_VIDEO_VCRReady = true; } return _AUDIO_VIDEO_VCRContent; } }
            private static int _AUDIO_VIDEO_VCRContent = default;
            private static bool _AUDIO_VIDEO_VCRReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.html#AUDIO_VIDEO_VIDEO_CAMERA"/>
            /// </summary>
            public static int AUDIO_VIDEO_VIDEO_CAMERA { get { if (!_AUDIO_VIDEO_VIDEO_CAMERAReady) { _AUDIO_VIDEO_VIDEO_CAMERAContent = SGetField<int>(LocalBridgeClazz, "AUDIO_VIDEO_VIDEO_CAMERA"); _AUDIO_VIDEO_VIDEO_CAMERAReady = true; } return _AUDIO_VIDEO_VIDEO_CAMERAContent; } }
            private static int _AUDIO_VIDEO_VIDEO_CAMERAContent = default;
            private static bool _AUDIO_VIDEO_VIDEO_CAMERAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.html#AUDIO_VIDEO_VIDEO_CONFERENCING"/>
            /// </summary>
            public static int AUDIO_VIDEO_VIDEO_CONFERENCING { get { if (!_AUDIO_VIDEO_VIDEO_CONFERENCINGReady) { _AUDIO_VIDEO_VIDEO_CONFERENCINGContent = SGetField<int>(LocalBridgeClazz, "AUDIO_VIDEO_VIDEO_CONFERENCING"); _AUDIO_VIDEO_VIDEO_CONFERENCINGReady = true; } return _AUDIO_VIDEO_VIDEO_CONFERENCINGContent; } }
            private static int _AUDIO_VIDEO_VIDEO_CONFERENCINGContent = default;
            private static bool _AUDIO_VIDEO_VIDEO_CONFERENCINGReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.html#AUDIO_VIDEO_VIDEO_DISPLAY_AND_LOUDSPEAKER"/>
            /// </summary>
            public static int AUDIO_VIDEO_VIDEO_DISPLAY_AND_LOUDSPEAKER { get { if (!_AUDIO_VIDEO_VIDEO_DISPLAY_AND_LOUDSPEAKERReady) { _AUDIO_VIDEO_VIDEO_DISPLAY_AND_LOUDSPEAKERContent = SGetField<int>(LocalBridgeClazz, "AUDIO_VIDEO_VIDEO_DISPLAY_AND_LOUDSPEAKER"); _AUDIO_VIDEO_VIDEO_DISPLAY_AND_LOUDSPEAKERReady = true; } return _AUDIO_VIDEO_VIDEO_DISPLAY_AND_LOUDSPEAKERContent; } }
            private static int _AUDIO_VIDEO_VIDEO_DISPLAY_AND_LOUDSPEAKERContent = default;
            private static bool _AUDIO_VIDEO_VIDEO_DISPLAY_AND_LOUDSPEAKERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.html#AUDIO_VIDEO_VIDEO_GAMING_TOY"/>
            /// </summary>
            public static int AUDIO_VIDEO_VIDEO_GAMING_TOY { get { if (!_AUDIO_VIDEO_VIDEO_GAMING_TOYReady) { _AUDIO_VIDEO_VIDEO_GAMING_TOYContent = SGetField<int>(LocalBridgeClazz, "AUDIO_VIDEO_VIDEO_GAMING_TOY"); _AUDIO_VIDEO_VIDEO_GAMING_TOYReady = true; } return _AUDIO_VIDEO_VIDEO_GAMING_TOYContent; } }
            private static int _AUDIO_VIDEO_VIDEO_GAMING_TOYContent = default;
            private static bool _AUDIO_VIDEO_VIDEO_GAMING_TOYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.html#AUDIO_VIDEO_VIDEO_MONITOR"/>
            /// </summary>
            public static int AUDIO_VIDEO_VIDEO_MONITOR { get { if (!_AUDIO_VIDEO_VIDEO_MONITORReady) { _AUDIO_VIDEO_VIDEO_MONITORContent = SGetField<int>(LocalBridgeClazz, "AUDIO_VIDEO_VIDEO_MONITOR"); _AUDIO_VIDEO_VIDEO_MONITORReady = true; } return _AUDIO_VIDEO_VIDEO_MONITORContent; } }
            private static int _AUDIO_VIDEO_VIDEO_MONITORContent = default;
            private static bool _AUDIO_VIDEO_VIDEO_MONITORReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.html#AUDIO_VIDEO_WEARABLE_HEADSET"/>
            /// </summary>
            public static int AUDIO_VIDEO_WEARABLE_HEADSET { get { if (!_AUDIO_VIDEO_WEARABLE_HEADSETReady) { _AUDIO_VIDEO_WEARABLE_HEADSETContent = SGetField<int>(LocalBridgeClazz, "AUDIO_VIDEO_WEARABLE_HEADSET"); _AUDIO_VIDEO_WEARABLE_HEADSETReady = true; } return _AUDIO_VIDEO_WEARABLE_HEADSETContent; } }
            private static int _AUDIO_VIDEO_WEARABLE_HEADSETContent = default;
            private static bool _AUDIO_VIDEO_WEARABLE_HEADSETReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.html#COMPUTER_DESKTOP"/>
            /// </summary>
            public static int COMPUTER_DESKTOP { get { if (!_COMPUTER_DESKTOPReady) { _COMPUTER_DESKTOPContent = SGetField<int>(LocalBridgeClazz, "COMPUTER_DESKTOP"); _COMPUTER_DESKTOPReady = true; } return _COMPUTER_DESKTOPContent; } }
            private static int _COMPUTER_DESKTOPContent = default;
            private static bool _COMPUTER_DESKTOPReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.html#COMPUTER_HANDHELD_PC_PDA"/>
            /// </summary>
            public static int COMPUTER_HANDHELD_PC_PDA { get { if (!_COMPUTER_HANDHELD_PC_PDAReady) { _COMPUTER_HANDHELD_PC_PDAContent = SGetField<int>(LocalBridgeClazz, "COMPUTER_HANDHELD_PC_PDA"); _COMPUTER_HANDHELD_PC_PDAReady = true; } return _COMPUTER_HANDHELD_PC_PDAContent; } }
            private static int _COMPUTER_HANDHELD_PC_PDAContent = default;
            private static bool _COMPUTER_HANDHELD_PC_PDAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.html#COMPUTER_LAPTOP"/>
            /// </summary>
            public static int COMPUTER_LAPTOP { get { if (!_COMPUTER_LAPTOPReady) { _COMPUTER_LAPTOPContent = SGetField<int>(LocalBridgeClazz, "COMPUTER_LAPTOP"); _COMPUTER_LAPTOPReady = true; } return _COMPUTER_LAPTOPContent; } }
            private static int _COMPUTER_LAPTOPContent = default;
            private static bool _COMPUTER_LAPTOPReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.html#COMPUTER_PALM_SIZE_PC_PDA"/>
            /// </summary>
            public static int COMPUTER_PALM_SIZE_PC_PDA { get { if (!_COMPUTER_PALM_SIZE_PC_PDAReady) { _COMPUTER_PALM_SIZE_PC_PDAContent = SGetField<int>(LocalBridgeClazz, "COMPUTER_PALM_SIZE_PC_PDA"); _COMPUTER_PALM_SIZE_PC_PDAReady = true; } return _COMPUTER_PALM_SIZE_PC_PDAContent; } }
            private static int _COMPUTER_PALM_SIZE_PC_PDAContent = default;
            private static bool _COMPUTER_PALM_SIZE_PC_PDAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.html#COMPUTER_SERVER"/>
            /// </summary>
            public static int COMPUTER_SERVER { get { if (!_COMPUTER_SERVERReady) { _COMPUTER_SERVERContent = SGetField<int>(LocalBridgeClazz, "COMPUTER_SERVER"); _COMPUTER_SERVERReady = true; } return _COMPUTER_SERVERContent; } }
            private static int _COMPUTER_SERVERContent = default;
            private static bool _COMPUTER_SERVERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.html#COMPUTER_UNCATEGORIZED"/>
            /// </summary>
            public static int COMPUTER_UNCATEGORIZED { get { if (!_COMPUTER_UNCATEGORIZEDReady) { _COMPUTER_UNCATEGORIZEDContent = SGetField<int>(LocalBridgeClazz, "COMPUTER_UNCATEGORIZED"); _COMPUTER_UNCATEGORIZEDReady = true; } return _COMPUTER_UNCATEGORIZEDContent; } }
            private static int _COMPUTER_UNCATEGORIZEDContent = default;
            private static bool _COMPUTER_UNCATEGORIZEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.html#COMPUTER_WEARABLE"/>
            /// </summary>
            public static int COMPUTER_WEARABLE { get { if (!_COMPUTER_WEARABLEReady) { _COMPUTER_WEARABLEContent = SGetField<int>(LocalBridgeClazz, "COMPUTER_WEARABLE"); _COMPUTER_WEARABLEReady = true; } return _COMPUTER_WEARABLEContent; } }
            private static int _COMPUTER_WEARABLEContent = default;
            private static bool _COMPUTER_WEARABLEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.html#HEALTH_BLOOD_PRESSURE"/>
            /// </summary>
            public static int HEALTH_BLOOD_PRESSURE { get { if (!_HEALTH_BLOOD_PRESSUREReady) { _HEALTH_BLOOD_PRESSUREContent = SGetField<int>(LocalBridgeClazz, "HEALTH_BLOOD_PRESSURE"); _HEALTH_BLOOD_PRESSUREReady = true; } return _HEALTH_BLOOD_PRESSUREContent; } }
            private static int _HEALTH_BLOOD_PRESSUREContent = default;
            private static bool _HEALTH_BLOOD_PRESSUREReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.html#HEALTH_DATA_DISPLAY"/>
            /// </summary>
            public static int HEALTH_DATA_DISPLAY { get { if (!_HEALTH_DATA_DISPLAYReady) { _HEALTH_DATA_DISPLAYContent = SGetField<int>(LocalBridgeClazz, "HEALTH_DATA_DISPLAY"); _HEALTH_DATA_DISPLAYReady = true; } return _HEALTH_DATA_DISPLAYContent; } }
            private static int _HEALTH_DATA_DISPLAYContent = default;
            private static bool _HEALTH_DATA_DISPLAYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.html#HEALTH_GLUCOSE"/>
            /// </summary>
            public static int HEALTH_GLUCOSE { get { if (!_HEALTH_GLUCOSEReady) { _HEALTH_GLUCOSEContent = SGetField<int>(LocalBridgeClazz, "HEALTH_GLUCOSE"); _HEALTH_GLUCOSEReady = true; } return _HEALTH_GLUCOSEContent; } }
            private static int _HEALTH_GLUCOSEContent = default;
            private static bool _HEALTH_GLUCOSEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.html#HEALTH_PULSE_OXIMETER"/>
            /// </summary>
            public static int HEALTH_PULSE_OXIMETER { get { if (!_HEALTH_PULSE_OXIMETERReady) { _HEALTH_PULSE_OXIMETERContent = SGetField<int>(LocalBridgeClazz, "HEALTH_PULSE_OXIMETER"); _HEALTH_PULSE_OXIMETERReady = true; } return _HEALTH_PULSE_OXIMETERContent; } }
            private static int _HEALTH_PULSE_OXIMETERContent = default;
            private static bool _HEALTH_PULSE_OXIMETERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.html#HEALTH_PULSE_RATE"/>
            /// </summary>
            public static int HEALTH_PULSE_RATE { get { if (!_HEALTH_PULSE_RATEReady) { _HEALTH_PULSE_RATEContent = SGetField<int>(LocalBridgeClazz, "HEALTH_PULSE_RATE"); _HEALTH_PULSE_RATEReady = true; } return _HEALTH_PULSE_RATEContent; } }
            private static int _HEALTH_PULSE_RATEContent = default;
            private static bool _HEALTH_PULSE_RATEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.html#HEALTH_THERMOMETER"/>
            /// </summary>
            public static int HEALTH_THERMOMETER { get { if (!_HEALTH_THERMOMETERReady) { _HEALTH_THERMOMETERContent = SGetField<int>(LocalBridgeClazz, "HEALTH_THERMOMETER"); _HEALTH_THERMOMETERReady = true; } return _HEALTH_THERMOMETERContent; } }
            private static int _HEALTH_THERMOMETERContent = default;
            private static bool _HEALTH_THERMOMETERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.html#HEALTH_UNCATEGORIZED"/>
            /// </summary>
            public static int HEALTH_UNCATEGORIZED { get { if (!_HEALTH_UNCATEGORIZEDReady) { _HEALTH_UNCATEGORIZEDContent = SGetField<int>(LocalBridgeClazz, "HEALTH_UNCATEGORIZED"); _HEALTH_UNCATEGORIZEDReady = true; } return _HEALTH_UNCATEGORIZEDContent; } }
            private static int _HEALTH_UNCATEGORIZEDContent = default;
            private static bool _HEALTH_UNCATEGORIZEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.html#HEALTH_WEIGHING"/>
            /// </summary>
            public static int HEALTH_WEIGHING { get { if (!_HEALTH_WEIGHINGReady) { _HEALTH_WEIGHINGContent = SGetField<int>(LocalBridgeClazz, "HEALTH_WEIGHING"); _HEALTH_WEIGHINGReady = true; } return _HEALTH_WEIGHINGContent; } }
            private static int _HEALTH_WEIGHINGContent = default;
            private static bool _HEALTH_WEIGHINGReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.html#PERIPHERAL_KEYBOARD"/>
            /// </summary>
            public static int PERIPHERAL_KEYBOARD { get { if (!_PERIPHERAL_KEYBOARDReady) { _PERIPHERAL_KEYBOARDContent = SGetField<int>(LocalBridgeClazz, "PERIPHERAL_KEYBOARD"); _PERIPHERAL_KEYBOARDReady = true; } return _PERIPHERAL_KEYBOARDContent; } }
            private static int _PERIPHERAL_KEYBOARDContent = default;
            private static bool _PERIPHERAL_KEYBOARDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.html#PERIPHERAL_KEYBOARD_POINTING"/>
            /// </summary>
            public static int PERIPHERAL_KEYBOARD_POINTING { get { if (!_PERIPHERAL_KEYBOARD_POINTINGReady) { _PERIPHERAL_KEYBOARD_POINTINGContent = SGetField<int>(LocalBridgeClazz, "PERIPHERAL_KEYBOARD_POINTING"); _PERIPHERAL_KEYBOARD_POINTINGReady = true; } return _PERIPHERAL_KEYBOARD_POINTINGContent; } }
            private static int _PERIPHERAL_KEYBOARD_POINTINGContent = default;
            private static bool _PERIPHERAL_KEYBOARD_POINTINGReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.html#PERIPHERAL_NON_KEYBOARD_NON_POINTING"/>
            /// </summary>
            public static int PERIPHERAL_NON_KEYBOARD_NON_POINTING { get { if (!_PERIPHERAL_NON_KEYBOARD_NON_POINTINGReady) { _PERIPHERAL_NON_KEYBOARD_NON_POINTINGContent = SGetField<int>(LocalBridgeClazz, "PERIPHERAL_NON_KEYBOARD_NON_POINTING"); _PERIPHERAL_NON_KEYBOARD_NON_POINTINGReady = true; } return _PERIPHERAL_NON_KEYBOARD_NON_POINTINGContent; } }
            private static int _PERIPHERAL_NON_KEYBOARD_NON_POINTINGContent = default;
            private static bool _PERIPHERAL_NON_KEYBOARD_NON_POINTINGReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.html#PERIPHERAL_POINTING"/>
            /// </summary>
            public static int PERIPHERAL_POINTING { get { if (!_PERIPHERAL_POINTINGReady) { _PERIPHERAL_POINTINGContent = SGetField<int>(LocalBridgeClazz, "PERIPHERAL_POINTING"); _PERIPHERAL_POINTINGReady = true; } return _PERIPHERAL_POINTINGContent; } }
            private static int _PERIPHERAL_POINTINGContent = default;
            private static bool _PERIPHERAL_POINTINGReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.html#PHONE_CELLULAR"/>
            /// </summary>
            public static int PHONE_CELLULAR { get { if (!_PHONE_CELLULARReady) { _PHONE_CELLULARContent = SGetField<int>(LocalBridgeClazz, "PHONE_CELLULAR"); _PHONE_CELLULARReady = true; } return _PHONE_CELLULARContent; } }
            private static int _PHONE_CELLULARContent = default;
            private static bool _PHONE_CELLULARReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.html#PHONE_CORDLESS"/>
            /// </summary>
            public static int PHONE_CORDLESS { get { if (!_PHONE_CORDLESSReady) { _PHONE_CORDLESSContent = SGetField<int>(LocalBridgeClazz, "PHONE_CORDLESS"); _PHONE_CORDLESSReady = true; } return _PHONE_CORDLESSContent; } }
            private static int _PHONE_CORDLESSContent = default;
            private static bool _PHONE_CORDLESSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.html#PHONE_ISDN"/>
            /// </summary>
            public static int PHONE_ISDN { get { if (!_PHONE_ISDNReady) { _PHONE_ISDNContent = SGetField<int>(LocalBridgeClazz, "PHONE_ISDN"); _PHONE_ISDNReady = true; } return _PHONE_ISDNContent; } }
            private static int _PHONE_ISDNContent = default;
            private static bool _PHONE_ISDNReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.html#PHONE_MODEM_OR_GATEWAY"/>
            /// </summary>
            public static int PHONE_MODEM_OR_GATEWAY { get { if (!_PHONE_MODEM_OR_GATEWAYReady) { _PHONE_MODEM_OR_GATEWAYContent = SGetField<int>(LocalBridgeClazz, "PHONE_MODEM_OR_GATEWAY"); _PHONE_MODEM_OR_GATEWAYReady = true; } return _PHONE_MODEM_OR_GATEWAYContent; } }
            private static int _PHONE_MODEM_OR_GATEWAYContent = default;
            private static bool _PHONE_MODEM_OR_GATEWAYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.html#PHONE_SMART"/>
            /// </summary>
            public static int PHONE_SMART { get { if (!_PHONE_SMARTReady) { _PHONE_SMARTContent = SGetField<int>(LocalBridgeClazz, "PHONE_SMART"); _PHONE_SMARTReady = true; } return _PHONE_SMARTContent; } }
            private static int _PHONE_SMARTContent = default;
            private static bool _PHONE_SMARTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.html#PHONE_UNCATEGORIZED"/>
            /// </summary>
            public static int PHONE_UNCATEGORIZED { get { if (!_PHONE_UNCATEGORIZEDReady) { _PHONE_UNCATEGORIZEDContent = SGetField<int>(LocalBridgeClazz, "PHONE_UNCATEGORIZED"); _PHONE_UNCATEGORIZEDReady = true; } return _PHONE_UNCATEGORIZEDContent; } }
            private static int _PHONE_UNCATEGORIZEDContent = default;
            private static bool _PHONE_UNCATEGORIZEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.html#TOY_CONTROLLER"/>
            /// </summary>
            public static int TOY_CONTROLLER { get { if (!_TOY_CONTROLLERReady) { _TOY_CONTROLLERContent = SGetField<int>(LocalBridgeClazz, "TOY_CONTROLLER"); _TOY_CONTROLLERReady = true; } return _TOY_CONTROLLERContent; } }
            private static int _TOY_CONTROLLERContent = default;
            private static bool _TOY_CONTROLLERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.html#TOY_DOLL_ACTION_FIGURE"/>
            /// </summary>
            public static int TOY_DOLL_ACTION_FIGURE { get { if (!_TOY_DOLL_ACTION_FIGUREReady) { _TOY_DOLL_ACTION_FIGUREContent = SGetField<int>(LocalBridgeClazz, "TOY_DOLL_ACTION_FIGURE"); _TOY_DOLL_ACTION_FIGUREReady = true; } return _TOY_DOLL_ACTION_FIGUREContent; } }
            private static int _TOY_DOLL_ACTION_FIGUREContent = default;
            private static bool _TOY_DOLL_ACTION_FIGUREReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.html#TOY_GAME"/>
            /// </summary>
            public static int TOY_GAME { get { if (!_TOY_GAMEReady) { _TOY_GAMEContent = SGetField<int>(LocalBridgeClazz, "TOY_GAME"); _TOY_GAMEReady = true; } return _TOY_GAMEContent; } }
            private static int _TOY_GAMEContent = default;
            private static bool _TOY_GAMEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.html#TOY_ROBOT"/>
            /// </summary>
            public static int TOY_ROBOT { get { if (!_TOY_ROBOTReady) { _TOY_ROBOTContent = SGetField<int>(LocalBridgeClazz, "TOY_ROBOT"); _TOY_ROBOTReady = true; } return _TOY_ROBOTContent; } }
            private static int _TOY_ROBOTContent = default;
            private static bool _TOY_ROBOTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.html#TOY_UNCATEGORIZED"/>
            /// </summary>
            public static int TOY_UNCATEGORIZED { get { if (!_TOY_UNCATEGORIZEDReady) { _TOY_UNCATEGORIZEDContent = SGetField<int>(LocalBridgeClazz, "TOY_UNCATEGORIZED"); _TOY_UNCATEGORIZEDReady = true; } return _TOY_UNCATEGORIZEDContent; } }
            private static int _TOY_UNCATEGORIZEDContent = default;
            private static bool _TOY_UNCATEGORIZEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.html#TOY_VEHICLE"/>
            /// </summary>
            public static int TOY_VEHICLE { get { if (!_TOY_VEHICLEReady) { _TOY_VEHICLEContent = SGetField<int>(LocalBridgeClazz, "TOY_VEHICLE"); _TOY_VEHICLEReady = true; } return _TOY_VEHICLEContent; } }
            private static int _TOY_VEHICLEContent = default;
            private static bool _TOY_VEHICLEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.html#WEARABLE_GLASSES"/>
            /// </summary>
            public static int WEARABLE_GLASSES { get { if (!_WEARABLE_GLASSESReady) { _WEARABLE_GLASSESContent = SGetField<int>(LocalBridgeClazz, "WEARABLE_GLASSES"); _WEARABLE_GLASSESReady = true; } return _WEARABLE_GLASSESContent; } }
            private static int _WEARABLE_GLASSESContent = default;
            private static bool _WEARABLE_GLASSESReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.html#WEARABLE_HELMET"/>
            /// </summary>
            public static int WEARABLE_HELMET { get { if (!_WEARABLE_HELMETReady) { _WEARABLE_HELMETContent = SGetField<int>(LocalBridgeClazz, "WEARABLE_HELMET"); _WEARABLE_HELMETReady = true; } return _WEARABLE_HELMETContent; } }
            private static int _WEARABLE_HELMETContent = default;
            private static bool _WEARABLE_HELMETReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.html#WEARABLE_JACKET"/>
            /// </summary>
            public static int WEARABLE_JACKET { get { if (!_WEARABLE_JACKETReady) { _WEARABLE_JACKETContent = SGetField<int>(LocalBridgeClazz, "WEARABLE_JACKET"); _WEARABLE_JACKETReady = true; } return _WEARABLE_JACKETContent; } }
            private static int _WEARABLE_JACKETContent = default;
            private static bool _WEARABLE_JACKETReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.html#WEARABLE_PAGER"/>
            /// </summary>
            public static int WEARABLE_PAGER { get { if (!_WEARABLE_PAGERReady) { _WEARABLE_PAGERContent = SGetField<int>(LocalBridgeClazz, "WEARABLE_PAGER"); _WEARABLE_PAGERReady = true; } return _WEARABLE_PAGERContent; } }
            private static int _WEARABLE_PAGERContent = default;
            private static bool _WEARABLE_PAGERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.html#WEARABLE_UNCATEGORIZED"/>
            /// </summary>
            public static int WEARABLE_UNCATEGORIZED { get { if (!_WEARABLE_UNCATEGORIZEDReady) { _WEARABLE_UNCATEGORIZEDContent = SGetField<int>(LocalBridgeClazz, "WEARABLE_UNCATEGORIZED"); _WEARABLE_UNCATEGORIZEDReady = true; } return _WEARABLE_UNCATEGORIZEDContent; } }
            private static int _WEARABLE_UNCATEGORIZEDContent = default;
            private static bool _WEARABLE_UNCATEGORIZEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.html#WEARABLE_WRIST_WATCH"/>
            /// </summary>
            public static int WEARABLE_WRIST_WATCH { get { if (!_WEARABLE_WRIST_WATCHReady) { _WEARABLE_WRIST_WATCHContent = SGetField<int>(LocalBridgeClazz, "WEARABLE_WRIST_WATCH"); _WEARABLE_WRIST_WATCHReady = true; } return _WEARABLE_WRIST_WATCHContent; } }
            private static int _WEARABLE_WRIST_WATCHContent = default;
            private static bool _WEARABLE_WRIST_WATCHReady = false; // this is used because in case of generics 
        
            #endregion
        
            #region Static methods
        
            #endregion
        
            #region Instance methods
        
            #endregion
        
            #region Nested classes
            #region Major implementation
            public partial class Major
            {
                #region Constructors
            
                #endregion
            
                #region Class/Interface conversion operators
            
                #endregion
            
                #region Fields
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.Major.html#AUDIO_VIDEO"/>
                /// </summary>
                public static int AUDIO_VIDEO { get { if (!_AUDIO_VIDEOReady) { _AUDIO_VIDEOContent = SGetField<int>(LocalBridgeClazz, "AUDIO_VIDEO"); _AUDIO_VIDEOReady = true; } return _AUDIO_VIDEOContent; } }
                private static int _AUDIO_VIDEOContent = default;
                private static bool _AUDIO_VIDEOReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.Major.html#COMPUTER"/>
                /// </summary>
                public static int COMPUTER { get { if (!_COMPUTERReady) { _COMPUTERContent = SGetField<int>(LocalBridgeClazz, "COMPUTER"); _COMPUTERReady = true; } return _COMPUTERContent; } }
                private static int _COMPUTERContent = default;
                private static bool _COMPUTERReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.Major.html#HEALTH"/>
                /// </summary>
                public static int HEALTH { get { if (!_HEALTHReady) { _HEALTHContent = SGetField<int>(LocalBridgeClazz, "HEALTH"); _HEALTHReady = true; } return _HEALTHContent; } }
                private static int _HEALTHContent = default;
                private static bool _HEALTHReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.Major.html#IMAGING"/>
                /// </summary>
                public static int IMAGING { get { if (!_IMAGINGReady) { _IMAGINGContent = SGetField<int>(LocalBridgeClazz, "IMAGING"); _IMAGINGReady = true; } return _IMAGINGContent; } }
                private static int _IMAGINGContent = default;
                private static bool _IMAGINGReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.Major.html#MISC"/>
                /// </summary>
                public static int MISC { get { if (!_MISCReady) { _MISCContent = SGetField<int>(LocalBridgeClazz, "MISC"); _MISCReady = true; } return _MISCContent; } }
                private static int _MISCContent = default;
                private static bool _MISCReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.Major.html#NETWORKING"/>
                /// </summary>
                public static int NETWORKING { get { if (!_NETWORKINGReady) { _NETWORKINGContent = SGetField<int>(LocalBridgeClazz, "NETWORKING"); _NETWORKINGReady = true; } return _NETWORKINGContent; } }
                private static int _NETWORKINGContent = default;
                private static bool _NETWORKINGReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.Major.html#PERIPHERAL"/>
                /// </summary>
                public static int PERIPHERAL { get { if (!_PERIPHERALReady) { _PERIPHERALContent = SGetField<int>(LocalBridgeClazz, "PERIPHERAL"); _PERIPHERALReady = true; } return _PERIPHERALContent; } }
                private static int _PERIPHERALContent = default;
                private static bool _PERIPHERALReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.Major.html#PHONE"/>
                /// </summary>
                public static int PHONE { get { if (!_PHONEReady) { _PHONEContent = SGetField<int>(LocalBridgeClazz, "PHONE"); _PHONEReady = true; } return _PHONEContent; } }
                private static int _PHONEContent = default;
                private static bool _PHONEReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.Major.html#TOY"/>
                /// </summary>
                public static int TOY { get { if (!_TOYReady) { _TOYContent = SGetField<int>(LocalBridgeClazz, "TOY"); _TOYReady = true; } return _TOYContent; } }
                private static int _TOYContent = default;
                private static bool _TOYReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.Major.html#UNCATEGORIZED"/>
                /// </summary>
                public static int UNCATEGORIZED { get { if (!_UNCATEGORIZEDReady) { _UNCATEGORIZEDContent = SGetField<int>(LocalBridgeClazz, "UNCATEGORIZED"); _UNCATEGORIZEDReady = true; } return _UNCATEGORIZEDContent; } }
                private static int _UNCATEGORIZEDContent = default;
                private static bool _UNCATEGORIZEDReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.Major.html#WEARABLE"/>
                /// </summary>
                public static int WEARABLE { get { if (!_WEARABLEReady) { _WEARABLEContent = SGetField<int>(LocalBridgeClazz, "WEARABLE"); _WEARABLEReady = true; } return _WEARABLEContent; } }
                private static int _WEARABLEContent = default;
                private static bool _WEARABLEReady = false; // this is used because in case of generics 
            
                #endregion
            
                #region Static methods
            
                #endregion
            
                #region Instance methods
            
                #endregion
            
                #region Nested classes
            
                #endregion
            
                // TODO: complete the class
            }
            #endregion

        
            #endregion
        
            // TODO: complete the class
        }
        #endregion

        #region Service implementation
        public partial class Service
        {
            #region Constructors
        
            #endregion
        
            #region Class/Interface conversion operators
        
            #endregion
        
            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Service.html#AUDIO"/>
            /// </summary>
            public static int AUDIO { get { if (!_AUDIOReady) { _AUDIOContent = SGetField<int>(LocalBridgeClazz, "AUDIO"); _AUDIOReady = true; } return _AUDIOContent; } }
            private static int _AUDIOContent = default;
            private static bool _AUDIOReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Service.html#CAPTURE"/>
            /// </summary>
            public static int CAPTURE { get { if (!_CAPTUREReady) { _CAPTUREContent = SGetField<int>(LocalBridgeClazz, "CAPTURE"); _CAPTUREReady = true; } return _CAPTUREContent; } }
            private static int _CAPTUREContent = default;
            private static bool _CAPTUREReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Service.html#INFORMATION"/>
            /// </summary>
            public static int INFORMATION { get { if (!_INFORMATIONReady) { _INFORMATIONContent = SGetField<int>(LocalBridgeClazz, "INFORMATION"); _INFORMATIONReady = true; } return _INFORMATIONContent; } }
            private static int _INFORMATIONContent = default;
            private static bool _INFORMATIONReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Service.html#LE_AUDIO"/>
            /// </summary>
            public static int LE_AUDIO { get { if (!_LE_AUDIOReady) { _LE_AUDIOContent = SGetField<int>(LocalBridgeClazz, "LE_AUDIO"); _LE_AUDIOReady = true; } return _LE_AUDIOContent; } }
            private static int _LE_AUDIOContent = default;
            private static bool _LE_AUDIOReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Service.html#LIMITED_DISCOVERABILITY"/>
            /// </summary>
            public static int LIMITED_DISCOVERABILITY { get { if (!_LIMITED_DISCOVERABILITYReady) { _LIMITED_DISCOVERABILITYContent = SGetField<int>(LocalBridgeClazz, "LIMITED_DISCOVERABILITY"); _LIMITED_DISCOVERABILITYReady = true; } return _LIMITED_DISCOVERABILITYContent; } }
            private static int _LIMITED_DISCOVERABILITYContent = default;
            private static bool _LIMITED_DISCOVERABILITYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Service.html#NETWORKING"/>
            /// </summary>
            public static int NETWORKING { get { if (!_NETWORKINGReady) { _NETWORKINGContent = SGetField<int>(LocalBridgeClazz, "NETWORKING"); _NETWORKINGReady = true; } return _NETWORKINGContent; } }
            private static int _NETWORKINGContent = default;
            private static bool _NETWORKINGReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Service.html#OBJECT_TRANSFER"/>
            /// </summary>
            public static int OBJECT_TRANSFER { get { if (!_OBJECT_TRANSFERReady) { _OBJECT_TRANSFERContent = SGetField<int>(LocalBridgeClazz, "OBJECT_TRANSFER"); _OBJECT_TRANSFERReady = true; } return _OBJECT_TRANSFERContent; } }
            private static int _OBJECT_TRANSFERContent = default;
            private static bool _OBJECT_TRANSFERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Service.html#POSITIONING"/>
            /// </summary>
            public static int POSITIONING { get { if (!_POSITIONINGReady) { _POSITIONINGContent = SGetField<int>(LocalBridgeClazz, "POSITIONING"); _POSITIONINGReady = true; } return _POSITIONINGContent; } }
            private static int _POSITIONINGContent = default;
            private static bool _POSITIONINGReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Service.html#RENDER"/>
            /// </summary>
            public static int RENDER { get { if (!_RENDERReady) { _RENDERContent = SGetField<int>(LocalBridgeClazz, "RENDER"); _RENDERReady = true; } return _RENDERContent; } }
            private static int _RENDERContent = default;
            private static bool _RENDERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/bluetooth/BluetoothClass.Service.html#TELEPHONY"/>
            /// </summary>
            public static int TELEPHONY { get { if (!_TELEPHONYReady) { _TELEPHONYContent = SGetField<int>(LocalBridgeClazz, "TELEPHONY"); _TELEPHONYReady = true; } return _TELEPHONYContent; } }
            private static int _TELEPHONYContent = default;
            private static bool _TELEPHONYReady = false; // this is used because in case of generics 
        
            #endregion
        
            #region Static methods
        
            #endregion
        
            #region Instance methods
        
            #endregion
        
            #region Nested classes
        
            #endregion
        
            // TODO: complete the class
        }
        #endregion

    
        #endregion
    
        // TODO: complete the class
    }
    #endregion
}