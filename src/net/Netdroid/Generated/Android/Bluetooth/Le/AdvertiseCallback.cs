/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.5.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Bluetooth.Le
{
    #region AdvertiseCallback
    public partial class AdvertiseCallback
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/le/AdvertiseCallback.html#ADVERTISE_FAILED_ALREADY_STARTED"/>
        /// </summary>
        public static int ADVERTISE_FAILED_ALREADY_STARTED { get { if (!_ADVERTISE_FAILED_ALREADY_STARTEDReady) { _ADVERTISE_FAILED_ALREADY_STARTEDContent = SGetField<int>(LocalBridgeClazz, "ADVERTISE_FAILED_ALREADY_STARTED"); _ADVERTISE_FAILED_ALREADY_STARTEDReady = true; } return _ADVERTISE_FAILED_ALREADY_STARTEDContent; } }
        private static int _ADVERTISE_FAILED_ALREADY_STARTEDContent = default;
        private static bool _ADVERTISE_FAILED_ALREADY_STARTEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/le/AdvertiseCallback.html#ADVERTISE_FAILED_DATA_TOO_LARGE"/>
        /// </summary>
        public static int ADVERTISE_FAILED_DATA_TOO_LARGE { get { if (!_ADVERTISE_FAILED_DATA_TOO_LARGEReady) { _ADVERTISE_FAILED_DATA_TOO_LARGEContent = SGetField<int>(LocalBridgeClazz, "ADVERTISE_FAILED_DATA_TOO_LARGE"); _ADVERTISE_FAILED_DATA_TOO_LARGEReady = true; } return _ADVERTISE_FAILED_DATA_TOO_LARGEContent; } }
        private static int _ADVERTISE_FAILED_DATA_TOO_LARGEContent = default;
        private static bool _ADVERTISE_FAILED_DATA_TOO_LARGEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/le/AdvertiseCallback.html#ADVERTISE_FAILED_FEATURE_UNSUPPORTED"/>
        /// </summary>
        public static int ADVERTISE_FAILED_FEATURE_UNSUPPORTED { get { if (!_ADVERTISE_FAILED_FEATURE_UNSUPPORTEDReady) { _ADVERTISE_FAILED_FEATURE_UNSUPPORTEDContent = SGetField<int>(LocalBridgeClazz, "ADVERTISE_FAILED_FEATURE_UNSUPPORTED"); _ADVERTISE_FAILED_FEATURE_UNSUPPORTEDReady = true; } return _ADVERTISE_FAILED_FEATURE_UNSUPPORTEDContent; } }
        private static int _ADVERTISE_FAILED_FEATURE_UNSUPPORTEDContent = default;
        private static bool _ADVERTISE_FAILED_FEATURE_UNSUPPORTEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/le/AdvertiseCallback.html#ADVERTISE_FAILED_INTERNAL_ERROR"/>
        /// </summary>
        public static int ADVERTISE_FAILED_INTERNAL_ERROR { get { if (!_ADVERTISE_FAILED_INTERNAL_ERRORReady) { _ADVERTISE_FAILED_INTERNAL_ERRORContent = SGetField<int>(LocalBridgeClazz, "ADVERTISE_FAILED_INTERNAL_ERROR"); _ADVERTISE_FAILED_INTERNAL_ERRORReady = true; } return _ADVERTISE_FAILED_INTERNAL_ERRORContent; } }
        private static int _ADVERTISE_FAILED_INTERNAL_ERRORContent = default;
        private static bool _ADVERTISE_FAILED_INTERNAL_ERRORReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/le/AdvertiseCallback.html#ADVERTISE_FAILED_TOO_MANY_ADVERTISERS"/>
        /// </summary>
        public static int ADVERTISE_FAILED_TOO_MANY_ADVERTISERS { get { if (!_ADVERTISE_FAILED_TOO_MANY_ADVERTISERSReady) { _ADVERTISE_FAILED_TOO_MANY_ADVERTISERSContent = SGetField<int>(LocalBridgeClazz, "ADVERTISE_FAILED_TOO_MANY_ADVERTISERS"); _ADVERTISE_FAILED_TOO_MANY_ADVERTISERSReady = true; } return _ADVERTISE_FAILED_TOO_MANY_ADVERTISERSContent; } }
        private static int _ADVERTISE_FAILED_TOO_MANY_ADVERTISERSContent = default;
        private static bool _ADVERTISE_FAILED_TOO_MANY_ADVERTISERSReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/le/AdvertiseCallback.html#onStartFailure(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void OnStartFailure(int arg0)
        {
            IExecuteWithSignature("onStartFailure", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/bluetooth/le/AdvertiseCallback.html#onStartSuccess(android.bluetooth.le.AdvertiseSettings)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Bluetooth.Le.AdvertiseSettings"/></param>
        public void OnStartSuccess(Android.Bluetooth.Le.AdvertiseSettings arg0)
        {
            IExecuteWithSignature("onStartSuccess", "(Landroid/bluetooth/le/AdvertiseSettings;)V", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}