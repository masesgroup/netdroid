/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.9.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Graphics
{
    #region Camera declaration
    /// <summary>
    /// <see href="https://developer.android.com/reference/android/graphics/Camera.html"/>
    /// </summary>
    public partial class Camera : MASES.JCOBridge.C2JBridge.JVMBridgeBase<Camera>
    {
        const string _bridgeClassName = "android.graphics.Camera";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public Camera() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public Camera(params object[] args) : base(args) { }

        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region Camera implementation
    public partial class Camera
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/Camera.html#dotWithNormal(float,float,float)"/>
        /// </summary>
        /// <param name="arg0"><see cref="float"/></param>
        /// <param name="arg1"><see cref="float"/></param>
        /// <param name="arg2"><see cref="float"/></param>
        /// <returns><see cref="float"/></returns>
        public float DotWithNormal(float arg0, float arg1, float arg2)
        {
            return IExecute<float>("dotWithNormal", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/Camera.html#getLocationX()"/>
        /// </summary>
        /// <returns><see cref="float"/></returns>
        public float GetLocationX()
        {
            return IExecuteWithSignature<float>("getLocationX", "()F");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/Camera.html#getLocationY()"/>
        /// </summary>
        /// <returns><see cref="float"/></returns>
        public float GetLocationY()
        {
            return IExecuteWithSignature<float>("getLocationY", "()F");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/Camera.html#getLocationZ()"/>
        /// </summary>
        /// <returns><see cref="float"/></returns>
        public float GetLocationZ()
        {
            return IExecuteWithSignature<float>("getLocationZ", "()F");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/Camera.html#restore()"/>
        /// </summary>
        public void Restore()
        {
            IExecuteWithSignature("restore", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/Camera.html#rotate(float,float,float)"/>
        /// </summary>
        /// <param name="arg0"><see cref="float"/></param>
        /// <param name="arg1"><see cref="float"/></param>
        /// <param name="arg2"><see cref="float"/></param>
        public void Rotate(float arg0, float arg1, float arg2)
        {
            IExecute("rotate", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/Camera.html#rotateX(float)"/>
        /// </summary>
        /// <param name="arg0"><see cref="float"/></param>
        public void RotateX(float arg0)
        {
            IExecuteWithSignature("rotateX", "(F)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/Camera.html#rotateY(float)"/>
        /// </summary>
        /// <param name="arg0"><see cref="float"/></param>
        public void RotateY(float arg0)
        {
            IExecuteWithSignature("rotateY", "(F)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/Camera.html#rotateZ(float)"/>
        /// </summary>
        /// <param name="arg0"><see cref="float"/></param>
        public void RotateZ(float arg0)
        {
            IExecuteWithSignature("rotateZ", "(F)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/Camera.html#save()"/>
        /// </summary>
        public void Save()
        {
            IExecuteWithSignature("save", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/Camera.html#setLocation(float,float,float)"/>
        /// </summary>
        /// <param name="arg0"><see cref="float"/></param>
        /// <param name="arg1"><see cref="float"/></param>
        /// <param name="arg2"><see cref="float"/></param>
        public void SetLocation(float arg0, float arg1, float arg2)
        {
            IExecute("setLocation", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/Camera.html#translate(float,float,float)"/>
        /// </summary>
        /// <param name="arg0"><see cref="float"/></param>
        /// <param name="arg1"><see cref="float"/></param>
        /// <param name="arg2"><see cref="float"/></param>
        public void Translate(float arg0, float arg1, float arg2)
        {
            IExecute("translate", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/Camera.html#applyToCanvas(android.graphics.Canvas)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Graphics.Canvas"/></param>
        public void ApplyToCanvas(Android.Graphics.Canvas arg0)
        {
            IExecuteWithSignature("applyToCanvas", "(Landroid/graphics/Canvas;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/Camera.html#getMatrix(android.graphics.Matrix)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Graphics.Matrix"/></param>
        public void GetMatrix(Android.Graphics.Matrix arg0)
        {
            IExecuteWithSignature("getMatrix", "(Landroid/graphics/Matrix;)V", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}