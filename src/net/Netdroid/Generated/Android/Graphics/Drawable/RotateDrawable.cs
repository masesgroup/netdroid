/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.1.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Graphics.Drawable
{
    #region RotateDrawable
    public partial class RotateDrawable
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/drawable/RotateDrawable.html#getFromDegrees()"/> <see href="https://developer.android.com/reference/android/graphics/drawable/RotateDrawable.html#setFromDegrees(float)"/>
        /// </summary>
        public float FromDegrees
        {
            get { return IExecuteWithSignature<float>("getFromDegrees", "()F"); } set { IExecuteWithSignature("setFromDegrees", "(F)V", value); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/drawable/RotateDrawable.html#getPivotX()"/> <see href="https://developer.android.com/reference/android/graphics/drawable/RotateDrawable.html#setPivotX(float)"/>
        /// </summary>
        public float PivotX
        {
            get { return IExecuteWithSignature<float>("getPivotX", "()F"); } set { IExecuteWithSignature("setPivotX", "(F)V", value); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/drawable/RotateDrawable.html#getPivotY()"/> <see href="https://developer.android.com/reference/android/graphics/drawable/RotateDrawable.html#setPivotY(float)"/>
        /// </summary>
        public float PivotY
        {
            get { return IExecuteWithSignature<float>("getPivotY", "()F"); } set { IExecuteWithSignature("setPivotY", "(F)V", value); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/drawable/RotateDrawable.html#getToDegrees()"/> <see href="https://developer.android.com/reference/android/graphics/drawable/RotateDrawable.html#setToDegrees(float)"/>
        /// </summary>
        public float ToDegrees
        {
            get { return IExecuteWithSignature<float>("getToDegrees", "()F"); } set { IExecuteWithSignature("setToDegrees", "(F)V", value); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/drawable/RotateDrawable.html#isPivotXRelative()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsPivotXRelative()
        {
            return IExecuteWithSignature<bool>("isPivotXRelative", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/drawable/RotateDrawable.html#isPivotYRelative()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsPivotYRelative()
        {
            return IExecuteWithSignature<bool>("isPivotYRelative", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/drawable/RotateDrawable.html#setPivotXRelative(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetPivotXRelative(bool arg0)
        {
            IExecuteWithSignature("setPivotXRelative", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/drawable/RotateDrawable.html#setPivotYRelative(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetPivotYRelative(bool arg0)
        {
            IExecuteWithSignature("setPivotYRelative", "(Z)V", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}