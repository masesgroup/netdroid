/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.10.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Graphics.Text
{
    #region PositionedGlyphs declaration
    /// <summary>
    /// <see href="https://developer.android.com/reference/android/graphics/text/PositionedGlyphs.html"/>
    /// </summary>
    public partial class PositionedGlyphs : MASES.JCOBridge.C2JBridge.JVMBridgeBase<PositionedGlyphs>
    {
        const string _bridgeClassName = "android.graphics.text.PositionedGlyphs";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public PositionedGlyphs() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public PositionedGlyphs(params object[] args) : base(args) { }
    
        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
    
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;
    
        // TODO: complete the class
    
    }
    #endregion

    #region PositionedGlyphs implementation
    public partial class PositionedGlyphs
    {
        #region Constructors
    
        #endregion
    
        #region Class/Interface conversion operators
    
        #endregion
    
        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/text/PositionedGlyphs.html#NO_OVERRIDE"/>
        /// </summary>
        public static float NO_OVERRIDE { get { if (!_NO_OVERRIDEReady) { _NO_OVERRIDEContent = SGetField<float>(LocalBridgeClazz, "NO_OVERRIDE"); _NO_OVERRIDEReady = true; } return _NO_OVERRIDEContent; } }
        private static float _NO_OVERRIDEContent = default;
        private static bool _NO_OVERRIDEReady = false; // this is used because in case of generics 
    
        #endregion
    
        #region Static methods
    
        #endregion
    
        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/text/PositionedGlyphs.html#getFont(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Android.Graphics.Fonts.Font"/></returns>
        public Android.Graphics.Fonts.Font GetFont(int arg0)
        {
            return IExecuteWithSignature<Android.Graphics.Fonts.Font>("getFont", "(I)Landroid/graphics/fonts/Font;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/text/PositionedGlyphs.html#getFakeBold(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool GetFakeBold(int arg0)
        {
            return IExecuteWithSignature<bool>("getFakeBold", "(I)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/text/PositionedGlyphs.html#getFakeItalic(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool GetFakeItalic(int arg0)
        {
            return IExecuteWithSignature<bool>("getFakeItalic", "(I)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/text/PositionedGlyphs.html#getAdvance()"/>
        /// </summary>
        /// <returns><see cref="float"/></returns>
        public float GetAdvance()
        {
            return IExecuteWithSignature<float>("getAdvance", "()F");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/text/PositionedGlyphs.html#getAscent()"/>
        /// </summary>
        /// <returns><see cref="float"/></returns>
        public float GetAscent()
        {
            return IExecuteWithSignature<float>("getAscent", "()F");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/text/PositionedGlyphs.html#getDescent()"/>
        /// </summary>
        /// <returns><see cref="float"/></returns>
        public float GetDescent()
        {
            return IExecuteWithSignature<float>("getDescent", "()F");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/text/PositionedGlyphs.html#getGlyphX(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="float"/></returns>
        public float GetGlyphX(int arg0)
        {
            return IExecuteWithSignature<float>("getGlyphX", "(I)F", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/text/PositionedGlyphs.html#getGlyphY(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="float"/></returns>
        public float GetGlyphY(int arg0)
        {
            return IExecuteWithSignature<float>("getGlyphY", "(I)F", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/text/PositionedGlyphs.html#getItalicOverride(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="float"/></returns>
        public float GetItalicOverride(int arg0)
        {
            return IExecuteWithSignature<float>("getItalicOverride", "(I)F", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/text/PositionedGlyphs.html#getOffsetX()"/>
        /// </summary>
        /// <returns><see cref="float"/></returns>
        public float GetOffsetX()
        {
            return IExecuteWithSignature<float>("getOffsetX", "()F");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/text/PositionedGlyphs.html#getOffsetY()"/>
        /// </summary>
        /// <returns><see cref="float"/></returns>
        public float GetOffsetY()
        {
            return IExecuteWithSignature<float>("getOffsetY", "()F");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/text/PositionedGlyphs.html#getWeightOverride(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="float"/></returns>
        public float GetWeightOverride(int arg0)
        {
            return IExecuteWithSignature<float>("getWeightOverride", "(I)F", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/text/PositionedGlyphs.html#getGlyphId(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public int GetGlyphId(int arg0)
        {
            return IExecuteWithSignature<int>("getGlyphId", "(I)I", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/text/PositionedGlyphs.html#glyphCount()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GlyphCount()
        {
            return IExecuteWithSignature<int>("glyphCount", "()I");
        }
    
        #endregion
    
        #region Nested classes
    
        #endregion
    
        // TODO: complete the class
    }
    #endregion
}