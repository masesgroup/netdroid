/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.10.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Graphics
{
    #region RenderEffect declaration
    /// <summary>
    /// <see href="https://developer.android.com/reference/android/graphics/RenderEffect.html"/>
    /// </summary>
    public partial class RenderEffect : MASES.JCOBridge.C2JBridge.JVMBridgeBase<RenderEffect>
    {
        const string _bridgeClassName = "android.graphics.RenderEffect";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public RenderEffect() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public RenderEffect(params object[] args) : base(args) { }
    
        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
    
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;
    
        // TODO: complete the class
    
    }
    #endregion

    #region RenderEffect implementation
    public partial class RenderEffect
    {
        #region Constructors
    
        #endregion
    
        #region Class/Interface conversion operators
    
        #endregion
    
        #region Fields
    
        #endregion
    
        #region Static methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/RenderEffect.html#createBitmapEffect(android.graphics.Bitmap,android.graphics.Rect,android.graphics.Rect)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Graphics.Bitmap"/></param>
        /// <param name="arg1"><see cref="Android.Graphics.Rect"/></param>
        /// <param name="arg2"><see cref="Android.Graphics.Rect"/></param>
        /// <returns><see cref="Android.Graphics.RenderEffect"/></returns>
        public static Android.Graphics.RenderEffect CreateBitmapEffect(Android.Graphics.Bitmap arg0, Android.Graphics.Rect arg1, Android.Graphics.Rect arg2)
        {
            return SExecuteWithSignature<Android.Graphics.RenderEffect>(LocalBridgeClazz, "createBitmapEffect", "(Landroid/graphics/Bitmap;Landroid/graphics/Rect;Landroid/graphics/Rect;)Landroid/graphics/RenderEffect;", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/RenderEffect.html#createBitmapEffect(android.graphics.Bitmap)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Graphics.Bitmap"/></param>
        /// <returns><see cref="Android.Graphics.RenderEffect"/></returns>
        public static Android.Graphics.RenderEffect CreateBitmapEffect(Android.Graphics.Bitmap arg0)
        {
            return SExecuteWithSignature<Android.Graphics.RenderEffect>(LocalBridgeClazz, "createBitmapEffect", "(Landroid/graphics/Bitmap;)Landroid/graphics/RenderEffect;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/RenderEffect.html#createBlendModeEffect(android.graphics.RenderEffect,android.graphics.RenderEffect,android.graphics.BlendMode)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Graphics.RenderEffect"/></param>
        /// <param name="arg1"><see cref="Android.Graphics.RenderEffect"/></param>
        /// <param name="arg2"><see cref="Android.Graphics.BlendMode"/></param>
        /// <returns><see cref="Android.Graphics.RenderEffect"/></returns>
        public static Android.Graphics.RenderEffect CreateBlendModeEffect(Android.Graphics.RenderEffect arg0, Android.Graphics.RenderEffect arg1, Android.Graphics.BlendMode arg2)
        {
            return SExecuteWithSignature<Android.Graphics.RenderEffect>(LocalBridgeClazz, "createBlendModeEffect", "(Landroid/graphics/RenderEffect;Landroid/graphics/RenderEffect;Landroid/graphics/BlendMode;)Landroid/graphics/RenderEffect;", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/RenderEffect.html#createBlurEffect(float,float,android.graphics.RenderEffect,android.graphics.Shader.TileMode)"/>
        /// </summary>
        /// <param name="arg0"><see cref="float"/></param>
        /// <param name="arg1"><see cref="float"/></param>
        /// <param name="arg2"><see cref="Android.Graphics.RenderEffect"/></param>
        /// <param name="arg3"><see cref="Android.Graphics.Shader.TileMode"/></param>
        /// <returns><see cref="Android.Graphics.RenderEffect"/></returns>
        public static Android.Graphics.RenderEffect CreateBlurEffect(float arg0, float arg1, Android.Graphics.RenderEffect arg2, Android.Graphics.Shader.TileMode arg3)
        {
            return SExecuteWithSignature<Android.Graphics.RenderEffect>(LocalBridgeClazz, "createBlurEffect", "(FFLandroid/graphics/RenderEffect;Landroid/graphics/Shader$TileMode;)Landroid/graphics/RenderEffect;", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/RenderEffect.html#createBlurEffect(float,float,android.graphics.Shader.TileMode)"/>
        /// </summary>
        /// <param name="arg0"><see cref="float"/></param>
        /// <param name="arg1"><see cref="float"/></param>
        /// <param name="arg2"><see cref="Android.Graphics.Shader.TileMode"/></param>
        /// <returns><see cref="Android.Graphics.RenderEffect"/></returns>
        public static Android.Graphics.RenderEffect CreateBlurEffect(float arg0, float arg1, Android.Graphics.Shader.TileMode arg2)
        {
            return SExecuteWithSignature<Android.Graphics.RenderEffect>(LocalBridgeClazz, "createBlurEffect", "(FFLandroid/graphics/Shader$TileMode;)Landroid/graphics/RenderEffect;", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/RenderEffect.html#createChainEffect(android.graphics.RenderEffect,android.graphics.RenderEffect)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Graphics.RenderEffect"/></param>
        /// <param name="arg1"><see cref="Android.Graphics.RenderEffect"/></param>
        /// <returns><see cref="Android.Graphics.RenderEffect"/></returns>
        public static Android.Graphics.RenderEffect CreateChainEffect(Android.Graphics.RenderEffect arg0, Android.Graphics.RenderEffect arg1)
        {
            return SExecuteWithSignature<Android.Graphics.RenderEffect>(LocalBridgeClazz, "createChainEffect", "(Landroid/graphics/RenderEffect;Landroid/graphics/RenderEffect;)Landroid/graphics/RenderEffect;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/RenderEffect.html#createColorFilterEffect(android.graphics.ColorFilter,android.graphics.RenderEffect)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Graphics.ColorFilter"/></param>
        /// <param name="arg1"><see cref="Android.Graphics.RenderEffect"/></param>
        /// <returns><see cref="Android.Graphics.RenderEffect"/></returns>
        public static Android.Graphics.RenderEffect CreateColorFilterEffect(Android.Graphics.ColorFilter arg0, Android.Graphics.RenderEffect arg1)
        {
            return SExecuteWithSignature<Android.Graphics.RenderEffect>(LocalBridgeClazz, "createColorFilterEffect", "(Landroid/graphics/ColorFilter;Landroid/graphics/RenderEffect;)Landroid/graphics/RenderEffect;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/RenderEffect.html#createColorFilterEffect(android.graphics.ColorFilter)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Graphics.ColorFilter"/></param>
        /// <returns><see cref="Android.Graphics.RenderEffect"/></returns>
        public static Android.Graphics.RenderEffect CreateColorFilterEffect(Android.Graphics.ColorFilter arg0)
        {
            return SExecuteWithSignature<Android.Graphics.RenderEffect>(LocalBridgeClazz, "createColorFilterEffect", "(Landroid/graphics/ColorFilter;)Landroid/graphics/RenderEffect;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/RenderEffect.html#createOffsetEffect(float,float,android.graphics.RenderEffect)"/>
        /// </summary>
        /// <param name="arg0"><see cref="float"/></param>
        /// <param name="arg1"><see cref="float"/></param>
        /// <param name="arg2"><see cref="Android.Graphics.RenderEffect"/></param>
        /// <returns><see cref="Android.Graphics.RenderEffect"/></returns>
        public static Android.Graphics.RenderEffect CreateOffsetEffect(float arg0, float arg1, Android.Graphics.RenderEffect arg2)
        {
            return SExecuteWithSignature<Android.Graphics.RenderEffect>(LocalBridgeClazz, "createOffsetEffect", "(FFLandroid/graphics/RenderEffect;)Landroid/graphics/RenderEffect;", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/RenderEffect.html#createOffsetEffect(float,float)"/>
        /// </summary>
        /// <param name="arg0"><see cref="float"/></param>
        /// <param name="arg1"><see cref="float"/></param>
        /// <returns><see cref="Android.Graphics.RenderEffect"/></returns>
        public static Android.Graphics.RenderEffect CreateOffsetEffect(float arg0, float arg1)
        {
            return SExecuteWithSignature<Android.Graphics.RenderEffect>(LocalBridgeClazz, "createOffsetEffect", "(FF)Landroid/graphics/RenderEffect;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/RenderEffect.html#createRuntimeShaderEffect(android.graphics.RuntimeShader,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Graphics.RuntimeShader"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Android.Graphics.RenderEffect"/></returns>
        public static Android.Graphics.RenderEffect CreateRuntimeShaderEffect(Android.Graphics.RuntimeShader arg0, Java.Lang.String arg1)
        {
            return SExecuteWithSignature<Android.Graphics.RenderEffect>(LocalBridgeClazz, "createRuntimeShaderEffect", "(Landroid/graphics/RuntimeShader;Ljava/lang/String;)Landroid/graphics/RenderEffect;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/RenderEffect.html#createShaderEffect(android.graphics.Shader)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Graphics.Shader"/></param>
        /// <returns><see cref="Android.Graphics.RenderEffect"/></returns>
        public static Android.Graphics.RenderEffect CreateShaderEffect(Android.Graphics.Shader arg0)
        {
            return SExecuteWithSignature<Android.Graphics.RenderEffect>(LocalBridgeClazz, "createShaderEffect", "(Landroid/graphics/Shader;)Landroid/graphics/RenderEffect;", arg0);
        }
    
        #endregion
    
        #region Instance methods
    
        #endregion
    
        #region Nested classes
    
        #endregion
    
        // TODO: complete the class
    }
    #endregion
}