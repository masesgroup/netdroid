/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.8.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Graphics
{
    #region RenderEffect
    public partial class RenderEffect
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/RenderEffect.html#createBitmapEffect(android.graphics.Bitmap,android.graphics.Rect,android.graphics.Rect)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Graphics.Bitmap"/></param>
        /// <param name="arg1"><see cref="Android.Graphics.Rect"/></param>
        /// <param name="arg2"><see cref="Android.Graphics.Rect"/></param>
        /// <returns><see cref="Android.Graphics.RenderEffect"/></returns>
        public static Android.Graphics.RenderEffect CreateBitmapEffect(Android.Graphics.Bitmap arg0, Android.Graphics.Rect arg1, Android.Graphics.Rect arg2)
        {
            return SExecute<Android.Graphics.RenderEffect>(LocalBridgeClazz, "createBitmapEffect", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/RenderEffect.html#createBitmapEffect(android.graphics.Bitmap)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Graphics.Bitmap"/></param>
        /// <returns><see cref="Android.Graphics.RenderEffect"/></returns>
        public static Android.Graphics.RenderEffect CreateBitmapEffect(Android.Graphics.Bitmap arg0)
        {
            return SExecuteWithSignature<Android.Graphics.RenderEffect>(LocalBridgeClazz, "createBitmapEffect", "(Landroid/graphics/Bitmap;)Landroid/graphics/RenderEffect;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/RenderEffect.html#createBlendModeEffect(android.graphics.RenderEffect,android.graphics.RenderEffect,android.graphics.BlendMode)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Graphics.RenderEffect"/></param>
        /// <param name="arg1"><see cref="Android.Graphics.RenderEffect"/></param>
        /// <param name="arg2"><see cref="Android.Graphics.BlendMode"/></param>
        /// <returns><see cref="Android.Graphics.RenderEffect"/></returns>
        public static Android.Graphics.RenderEffect CreateBlendModeEffect(Android.Graphics.RenderEffect arg0, Android.Graphics.RenderEffect arg1, Android.Graphics.BlendMode arg2)
        {
            return SExecute<Android.Graphics.RenderEffect>(LocalBridgeClazz, "createBlendModeEffect", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/RenderEffect.html#createBlurEffect(float,float,android.graphics.RenderEffect,android.graphics.Shader.TileMode)"/>
        /// </summary>
        /// <param name="arg0"><see cref="float"/></param>
        /// <param name="arg1"><see cref="float"/></param>
        /// <param name="arg2"><see cref="Android.Graphics.RenderEffect"/></param>
        /// <param name="arg3"><see cref="Android.Graphics.Shader.TileMode"/></param>
        /// <returns><see cref="Android.Graphics.RenderEffect"/></returns>
        public static Android.Graphics.RenderEffect CreateBlurEffect(float arg0, float arg1, Android.Graphics.RenderEffect arg2, Android.Graphics.Shader.TileMode arg3)
        {
            return SExecute<Android.Graphics.RenderEffect>(LocalBridgeClazz, "createBlurEffect", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/RenderEffect.html#createBlurEffect(float,float,android.graphics.Shader.TileMode)"/>
        /// </summary>
        /// <param name="arg0"><see cref="float"/></param>
        /// <param name="arg1"><see cref="float"/></param>
        /// <param name="arg2"><see cref="Android.Graphics.Shader.TileMode"/></param>
        /// <returns><see cref="Android.Graphics.RenderEffect"/></returns>
        public static Android.Graphics.RenderEffect CreateBlurEffect(float arg0, float arg1, Android.Graphics.Shader.TileMode arg2)
        {
            return SExecute<Android.Graphics.RenderEffect>(LocalBridgeClazz, "createBlurEffect", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/RenderEffect.html#createChainEffect(android.graphics.RenderEffect,android.graphics.RenderEffect)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Graphics.RenderEffect"/></param>
        /// <param name="arg1"><see cref="Android.Graphics.RenderEffect"/></param>
        /// <returns><see cref="Android.Graphics.RenderEffect"/></returns>
        public static Android.Graphics.RenderEffect CreateChainEffect(Android.Graphics.RenderEffect arg0, Android.Graphics.RenderEffect arg1)
        {
            return SExecute<Android.Graphics.RenderEffect>(LocalBridgeClazz, "createChainEffect", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/RenderEffect.html#createColorFilterEffect(android.graphics.ColorFilter,android.graphics.RenderEffect)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Graphics.ColorFilter"/></param>
        /// <param name="arg1"><see cref="Android.Graphics.RenderEffect"/></param>
        /// <returns><see cref="Android.Graphics.RenderEffect"/></returns>
        public static Android.Graphics.RenderEffect CreateColorFilterEffect(Android.Graphics.ColorFilter arg0, Android.Graphics.RenderEffect arg1)
        {
            return SExecute<Android.Graphics.RenderEffect>(LocalBridgeClazz, "createColorFilterEffect", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/RenderEffect.html#createColorFilterEffect(android.graphics.ColorFilter)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Graphics.ColorFilter"/></param>
        /// <returns><see cref="Android.Graphics.RenderEffect"/></returns>
        public static Android.Graphics.RenderEffect CreateColorFilterEffect(Android.Graphics.ColorFilter arg0)
        {
            return SExecuteWithSignature<Android.Graphics.RenderEffect>(LocalBridgeClazz, "createColorFilterEffect", "(Landroid/graphics/ColorFilter;)Landroid/graphics/RenderEffect;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/RenderEffect.html#createOffsetEffect(float,float,android.graphics.RenderEffect)"/>
        /// </summary>
        /// <param name="arg0"><see cref="float"/></param>
        /// <param name="arg1"><see cref="float"/></param>
        /// <param name="arg2"><see cref="Android.Graphics.RenderEffect"/></param>
        /// <returns><see cref="Android.Graphics.RenderEffect"/></returns>
        public static Android.Graphics.RenderEffect CreateOffsetEffect(float arg0, float arg1, Android.Graphics.RenderEffect arg2)
        {
            return SExecute<Android.Graphics.RenderEffect>(LocalBridgeClazz, "createOffsetEffect", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/RenderEffect.html#createOffsetEffect(float,float)"/>
        /// </summary>
        /// <param name="arg0"><see cref="float"/></param>
        /// <param name="arg1"><see cref="float"/></param>
        /// <returns><see cref="Android.Graphics.RenderEffect"/></returns>
        public static Android.Graphics.RenderEffect CreateOffsetEffect(float arg0, float arg1)
        {
            return SExecute<Android.Graphics.RenderEffect>(LocalBridgeClazz, "createOffsetEffect", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/RenderEffect.html#createRuntimeShaderEffect(android.graphics.RuntimeShader,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Graphics.RuntimeShader"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Android.Graphics.RenderEffect"/></returns>
        public static Android.Graphics.RenderEffect CreateRuntimeShaderEffect(Android.Graphics.RuntimeShader arg0, Java.Lang.String arg1)
        {
            return SExecute<Android.Graphics.RenderEffect>(LocalBridgeClazz, "createRuntimeShaderEffect", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/graphics/RenderEffect.html#createShaderEffect(android.graphics.Shader)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Graphics.Shader"/></param>
        /// <returns><see cref="Android.Graphics.RenderEffect"/></returns>
        public static Android.Graphics.RenderEffect CreateShaderEffect(Android.Graphics.Shader arg0)
        {
            return SExecuteWithSignature<Android.Graphics.RenderEffect>(LocalBridgeClazz, "createShaderEffect", "(Landroid/graphics/Shader;)Landroid/graphics/RenderEffect;", arg0);
        }

        #endregion

        #region Instance methods

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}