/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.1.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Accounts
{
    #region AccountManager
    public partial class AccountManager
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#ERROR_CODE_BAD_ARGUMENTS"/>
        /// </summary>
        public static int ERROR_CODE_BAD_ARGUMENTS { get { if (!_ERROR_CODE_BAD_ARGUMENTSReady) { _ERROR_CODE_BAD_ARGUMENTSContent = SGetField<int>(LocalBridgeClazz, "ERROR_CODE_BAD_ARGUMENTS"); _ERROR_CODE_BAD_ARGUMENTSReady = true; } return _ERROR_CODE_BAD_ARGUMENTSContent; } }
        private static int _ERROR_CODE_BAD_ARGUMENTSContent = default;
        private static bool _ERROR_CODE_BAD_ARGUMENTSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#ERROR_CODE_BAD_AUTHENTICATION"/>
        /// </summary>
        public static int ERROR_CODE_BAD_AUTHENTICATION { get { if (!_ERROR_CODE_BAD_AUTHENTICATIONReady) { _ERROR_CODE_BAD_AUTHENTICATIONContent = SGetField<int>(LocalBridgeClazz, "ERROR_CODE_BAD_AUTHENTICATION"); _ERROR_CODE_BAD_AUTHENTICATIONReady = true; } return _ERROR_CODE_BAD_AUTHENTICATIONContent; } }
        private static int _ERROR_CODE_BAD_AUTHENTICATIONContent = default;
        private static bool _ERROR_CODE_BAD_AUTHENTICATIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#ERROR_CODE_BAD_REQUEST"/>
        /// </summary>
        public static int ERROR_CODE_BAD_REQUEST { get { if (!_ERROR_CODE_BAD_REQUESTReady) { _ERROR_CODE_BAD_REQUESTContent = SGetField<int>(LocalBridgeClazz, "ERROR_CODE_BAD_REQUEST"); _ERROR_CODE_BAD_REQUESTReady = true; } return _ERROR_CODE_BAD_REQUESTContent; } }
        private static int _ERROR_CODE_BAD_REQUESTContent = default;
        private static bool _ERROR_CODE_BAD_REQUESTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#ERROR_CODE_CANCELED"/>
        /// </summary>
        public static int ERROR_CODE_CANCELED { get { if (!_ERROR_CODE_CANCELEDReady) { _ERROR_CODE_CANCELEDContent = SGetField<int>(LocalBridgeClazz, "ERROR_CODE_CANCELED"); _ERROR_CODE_CANCELEDReady = true; } return _ERROR_CODE_CANCELEDContent; } }
        private static int _ERROR_CODE_CANCELEDContent = default;
        private static bool _ERROR_CODE_CANCELEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#ERROR_CODE_INVALID_RESPONSE"/>
        /// </summary>
        public static int ERROR_CODE_INVALID_RESPONSE { get { if (!_ERROR_CODE_INVALID_RESPONSEReady) { _ERROR_CODE_INVALID_RESPONSEContent = SGetField<int>(LocalBridgeClazz, "ERROR_CODE_INVALID_RESPONSE"); _ERROR_CODE_INVALID_RESPONSEReady = true; } return _ERROR_CODE_INVALID_RESPONSEContent; } }
        private static int _ERROR_CODE_INVALID_RESPONSEContent = default;
        private static bool _ERROR_CODE_INVALID_RESPONSEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#ERROR_CODE_NETWORK_ERROR"/>
        /// </summary>
        public static int ERROR_CODE_NETWORK_ERROR { get { if (!_ERROR_CODE_NETWORK_ERRORReady) { _ERROR_CODE_NETWORK_ERRORContent = SGetField<int>(LocalBridgeClazz, "ERROR_CODE_NETWORK_ERROR"); _ERROR_CODE_NETWORK_ERRORReady = true; } return _ERROR_CODE_NETWORK_ERRORContent; } }
        private static int _ERROR_CODE_NETWORK_ERRORContent = default;
        private static bool _ERROR_CODE_NETWORK_ERRORReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#ERROR_CODE_REMOTE_EXCEPTION"/>
        /// </summary>
        public static int ERROR_CODE_REMOTE_EXCEPTION { get { if (!_ERROR_CODE_REMOTE_EXCEPTIONReady) { _ERROR_CODE_REMOTE_EXCEPTIONContent = SGetField<int>(LocalBridgeClazz, "ERROR_CODE_REMOTE_EXCEPTION"); _ERROR_CODE_REMOTE_EXCEPTIONReady = true; } return _ERROR_CODE_REMOTE_EXCEPTIONContent; } }
        private static int _ERROR_CODE_REMOTE_EXCEPTIONContent = default;
        private static bool _ERROR_CODE_REMOTE_EXCEPTIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#ERROR_CODE_UNSUPPORTED_OPERATION"/>
        /// </summary>
        public static int ERROR_CODE_UNSUPPORTED_OPERATION { get { if (!_ERROR_CODE_UNSUPPORTED_OPERATIONReady) { _ERROR_CODE_UNSUPPORTED_OPERATIONContent = SGetField<int>(LocalBridgeClazz, "ERROR_CODE_UNSUPPORTED_OPERATION"); _ERROR_CODE_UNSUPPORTED_OPERATIONReady = true; } return _ERROR_CODE_UNSUPPORTED_OPERATIONContent; } }
        private static int _ERROR_CODE_UNSUPPORTED_OPERATIONContent = default;
        private static bool _ERROR_CODE_UNSUPPORTED_OPERATIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#VISIBILITY_NOT_VISIBLE"/>
        /// </summary>
        public static int VISIBILITY_NOT_VISIBLE { get { if (!_VISIBILITY_NOT_VISIBLEReady) { _VISIBILITY_NOT_VISIBLEContent = SGetField<int>(LocalBridgeClazz, "VISIBILITY_NOT_VISIBLE"); _VISIBILITY_NOT_VISIBLEReady = true; } return _VISIBILITY_NOT_VISIBLEContent; } }
        private static int _VISIBILITY_NOT_VISIBLEContent = default;
        private static bool _VISIBILITY_NOT_VISIBLEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#VISIBILITY_UNDEFINED"/>
        /// </summary>
        public static int VISIBILITY_UNDEFINED { get { if (!_VISIBILITY_UNDEFINEDReady) { _VISIBILITY_UNDEFINEDContent = SGetField<int>(LocalBridgeClazz, "VISIBILITY_UNDEFINED"); _VISIBILITY_UNDEFINEDReady = true; } return _VISIBILITY_UNDEFINEDContent; } }
        private static int _VISIBILITY_UNDEFINEDContent = default;
        private static bool _VISIBILITY_UNDEFINEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#VISIBILITY_USER_MANAGED_NOT_VISIBLE"/>
        /// </summary>
        public static int VISIBILITY_USER_MANAGED_NOT_VISIBLE { get { if (!_VISIBILITY_USER_MANAGED_NOT_VISIBLEReady) { _VISIBILITY_USER_MANAGED_NOT_VISIBLEContent = SGetField<int>(LocalBridgeClazz, "VISIBILITY_USER_MANAGED_NOT_VISIBLE"); _VISIBILITY_USER_MANAGED_NOT_VISIBLEReady = true; } return _VISIBILITY_USER_MANAGED_NOT_VISIBLEContent; } }
        private static int _VISIBILITY_USER_MANAGED_NOT_VISIBLEContent = default;
        private static bool _VISIBILITY_USER_MANAGED_NOT_VISIBLEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#VISIBILITY_USER_MANAGED_VISIBLE"/>
        /// </summary>
        public static int VISIBILITY_USER_MANAGED_VISIBLE { get { if (!_VISIBILITY_USER_MANAGED_VISIBLEReady) { _VISIBILITY_USER_MANAGED_VISIBLEContent = SGetField<int>(LocalBridgeClazz, "VISIBILITY_USER_MANAGED_VISIBLE"); _VISIBILITY_USER_MANAGED_VISIBLEReady = true; } return _VISIBILITY_USER_MANAGED_VISIBLEContent; } }
        private static int _VISIBILITY_USER_MANAGED_VISIBLEContent = default;
        private static bool _VISIBILITY_USER_MANAGED_VISIBLEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#VISIBILITY_VISIBLE"/>
        /// </summary>
        public static int VISIBILITY_VISIBLE { get { if (!_VISIBILITY_VISIBLEReady) { _VISIBILITY_VISIBLEContent = SGetField<int>(LocalBridgeClazz, "VISIBILITY_VISIBLE"); _VISIBILITY_VISIBLEReady = true; } return _VISIBILITY_VISIBLEContent; } }
        private static int _VISIBILITY_VISIBLEContent = default;
        private static bool _VISIBILITY_VISIBLEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#ACTION_ACCOUNT_REMOVED"/>
        /// </summary>
        public static Java.Lang.String ACTION_ACCOUNT_REMOVED { get { if (!_ACTION_ACCOUNT_REMOVEDReady) { _ACTION_ACCOUNT_REMOVEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_ACCOUNT_REMOVED"); _ACTION_ACCOUNT_REMOVEDReady = true; } return _ACTION_ACCOUNT_REMOVEDContent; } }
        private static Java.Lang.String _ACTION_ACCOUNT_REMOVEDContent = default;
        private static bool _ACTION_ACCOUNT_REMOVEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#ACTION_AUTHENTICATOR_INTENT"/>
        /// </summary>
        public static Java.Lang.String ACTION_AUTHENTICATOR_INTENT { get { if (!_ACTION_AUTHENTICATOR_INTENTReady) { _ACTION_AUTHENTICATOR_INTENTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_AUTHENTICATOR_INTENT"); _ACTION_AUTHENTICATOR_INTENTReady = true; } return _ACTION_AUTHENTICATOR_INTENTContent; } }
        private static Java.Lang.String _ACTION_AUTHENTICATOR_INTENTContent = default;
        private static bool _ACTION_AUTHENTICATOR_INTENTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#AUTHENTICATOR_ATTRIBUTES_NAME"/>
        /// </summary>
        public static Java.Lang.String AUTHENTICATOR_ATTRIBUTES_NAME { get { if (!_AUTHENTICATOR_ATTRIBUTES_NAMEReady) { _AUTHENTICATOR_ATTRIBUTES_NAMEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "AUTHENTICATOR_ATTRIBUTES_NAME"); _AUTHENTICATOR_ATTRIBUTES_NAMEReady = true; } return _AUTHENTICATOR_ATTRIBUTES_NAMEContent; } }
        private static Java.Lang.String _AUTHENTICATOR_ATTRIBUTES_NAMEContent = default;
        private static bool _AUTHENTICATOR_ATTRIBUTES_NAMEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#AUTHENTICATOR_META_DATA_NAME"/>
        /// </summary>
        public static Java.Lang.String AUTHENTICATOR_META_DATA_NAME { get { if (!_AUTHENTICATOR_META_DATA_NAMEReady) { _AUTHENTICATOR_META_DATA_NAMEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "AUTHENTICATOR_META_DATA_NAME"); _AUTHENTICATOR_META_DATA_NAMEReady = true; } return _AUTHENTICATOR_META_DATA_NAMEContent; } }
        private static Java.Lang.String _AUTHENTICATOR_META_DATA_NAMEContent = default;
        private static bool _AUTHENTICATOR_META_DATA_NAMEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#KEY_ACCOUNT_AUTHENTICATOR_RESPONSE"/>
        /// </summary>
        public static Java.Lang.String KEY_ACCOUNT_AUTHENTICATOR_RESPONSE { get { if (!_KEY_ACCOUNT_AUTHENTICATOR_RESPONSEReady) { _KEY_ACCOUNT_AUTHENTICATOR_RESPONSEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_ACCOUNT_AUTHENTICATOR_RESPONSE"); _KEY_ACCOUNT_AUTHENTICATOR_RESPONSEReady = true; } return _KEY_ACCOUNT_AUTHENTICATOR_RESPONSEContent; } }
        private static Java.Lang.String _KEY_ACCOUNT_AUTHENTICATOR_RESPONSEContent = default;
        private static bool _KEY_ACCOUNT_AUTHENTICATOR_RESPONSEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#KEY_ACCOUNT_MANAGER_RESPONSE"/>
        /// </summary>
        public static Java.Lang.String KEY_ACCOUNT_MANAGER_RESPONSE { get { if (!_KEY_ACCOUNT_MANAGER_RESPONSEReady) { _KEY_ACCOUNT_MANAGER_RESPONSEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_ACCOUNT_MANAGER_RESPONSE"); _KEY_ACCOUNT_MANAGER_RESPONSEReady = true; } return _KEY_ACCOUNT_MANAGER_RESPONSEContent; } }
        private static Java.Lang.String _KEY_ACCOUNT_MANAGER_RESPONSEContent = default;
        private static bool _KEY_ACCOUNT_MANAGER_RESPONSEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#KEY_ACCOUNT_NAME"/>
        /// </summary>
        public static Java.Lang.String KEY_ACCOUNT_NAME { get { if (!_KEY_ACCOUNT_NAMEReady) { _KEY_ACCOUNT_NAMEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_ACCOUNT_NAME"); _KEY_ACCOUNT_NAMEReady = true; } return _KEY_ACCOUNT_NAMEContent; } }
        private static Java.Lang.String _KEY_ACCOUNT_NAMEContent = default;
        private static bool _KEY_ACCOUNT_NAMEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#KEY_ACCOUNT_SESSION_BUNDLE"/>
        /// </summary>
        public static Java.Lang.String KEY_ACCOUNT_SESSION_BUNDLE { get { if (!_KEY_ACCOUNT_SESSION_BUNDLEReady) { _KEY_ACCOUNT_SESSION_BUNDLEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_ACCOUNT_SESSION_BUNDLE"); _KEY_ACCOUNT_SESSION_BUNDLEReady = true; } return _KEY_ACCOUNT_SESSION_BUNDLEContent; } }
        private static Java.Lang.String _KEY_ACCOUNT_SESSION_BUNDLEContent = default;
        private static bool _KEY_ACCOUNT_SESSION_BUNDLEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#KEY_ACCOUNT_STATUS_TOKEN"/>
        /// </summary>
        public static Java.Lang.String KEY_ACCOUNT_STATUS_TOKEN { get { if (!_KEY_ACCOUNT_STATUS_TOKENReady) { _KEY_ACCOUNT_STATUS_TOKENContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_ACCOUNT_STATUS_TOKEN"); _KEY_ACCOUNT_STATUS_TOKENReady = true; } return _KEY_ACCOUNT_STATUS_TOKENContent; } }
        private static Java.Lang.String _KEY_ACCOUNT_STATUS_TOKENContent = default;
        private static bool _KEY_ACCOUNT_STATUS_TOKENReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#KEY_ACCOUNT_TYPE"/>
        /// </summary>
        public static Java.Lang.String KEY_ACCOUNT_TYPE { get { if (!_KEY_ACCOUNT_TYPEReady) { _KEY_ACCOUNT_TYPEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_ACCOUNT_TYPE"); _KEY_ACCOUNT_TYPEReady = true; } return _KEY_ACCOUNT_TYPEContent; } }
        private static Java.Lang.String _KEY_ACCOUNT_TYPEContent = default;
        private static bool _KEY_ACCOUNT_TYPEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#KEY_ACCOUNTS"/>
        /// </summary>
        public static Java.Lang.String KEY_ACCOUNTS { get { if (!_KEY_ACCOUNTSReady) { _KEY_ACCOUNTSContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_ACCOUNTS"); _KEY_ACCOUNTSReady = true; } return _KEY_ACCOUNTSContent; } }
        private static Java.Lang.String _KEY_ACCOUNTSContent = default;
        private static bool _KEY_ACCOUNTSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#KEY_ANDROID_PACKAGE_NAME"/>
        /// </summary>
        public static Java.Lang.String KEY_ANDROID_PACKAGE_NAME { get { if (!_KEY_ANDROID_PACKAGE_NAMEReady) { _KEY_ANDROID_PACKAGE_NAMEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_ANDROID_PACKAGE_NAME"); _KEY_ANDROID_PACKAGE_NAMEReady = true; } return _KEY_ANDROID_PACKAGE_NAMEContent; } }
        private static Java.Lang.String _KEY_ANDROID_PACKAGE_NAMEContent = default;
        private static bool _KEY_ANDROID_PACKAGE_NAMEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#KEY_AUTH_FAILED_MESSAGE"/>
        /// </summary>
        public static Java.Lang.String KEY_AUTH_FAILED_MESSAGE { get { if (!_KEY_AUTH_FAILED_MESSAGEReady) { _KEY_AUTH_FAILED_MESSAGEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_AUTH_FAILED_MESSAGE"); _KEY_AUTH_FAILED_MESSAGEReady = true; } return _KEY_AUTH_FAILED_MESSAGEContent; } }
        private static Java.Lang.String _KEY_AUTH_FAILED_MESSAGEContent = default;
        private static bool _KEY_AUTH_FAILED_MESSAGEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#KEY_AUTH_TOKEN_LABEL"/>
        /// </summary>
        public static Java.Lang.String KEY_AUTH_TOKEN_LABEL { get { if (!_KEY_AUTH_TOKEN_LABELReady) { _KEY_AUTH_TOKEN_LABELContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_AUTH_TOKEN_LABEL"); _KEY_AUTH_TOKEN_LABELReady = true; } return _KEY_AUTH_TOKEN_LABELContent; } }
        private static Java.Lang.String _KEY_AUTH_TOKEN_LABELContent = default;
        private static bool _KEY_AUTH_TOKEN_LABELReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#KEY_AUTHENTICATOR_TYPES"/>
        /// </summary>
        public static Java.Lang.String KEY_AUTHENTICATOR_TYPES { get { if (!_KEY_AUTHENTICATOR_TYPESReady) { _KEY_AUTHENTICATOR_TYPESContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_AUTHENTICATOR_TYPES"); _KEY_AUTHENTICATOR_TYPESReady = true; } return _KEY_AUTHENTICATOR_TYPESContent; } }
        private static Java.Lang.String _KEY_AUTHENTICATOR_TYPESContent = default;
        private static bool _KEY_AUTHENTICATOR_TYPESReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#KEY_AUTHTOKEN"/>
        /// </summary>
        public static Java.Lang.String KEY_AUTHTOKEN { get { if (!_KEY_AUTHTOKENReady) { _KEY_AUTHTOKENContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_AUTHTOKEN"); _KEY_AUTHTOKENReady = true; } return _KEY_AUTHTOKENContent; } }
        private static Java.Lang.String _KEY_AUTHTOKENContent = default;
        private static bool _KEY_AUTHTOKENReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#KEY_BOOLEAN_RESULT"/>
        /// </summary>
        public static Java.Lang.String KEY_BOOLEAN_RESULT { get { if (!_KEY_BOOLEAN_RESULTReady) { _KEY_BOOLEAN_RESULTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_BOOLEAN_RESULT"); _KEY_BOOLEAN_RESULTReady = true; } return _KEY_BOOLEAN_RESULTContent; } }
        private static Java.Lang.String _KEY_BOOLEAN_RESULTContent = default;
        private static bool _KEY_BOOLEAN_RESULTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#KEY_CALLER_PID"/>
        /// </summary>
        public static Java.Lang.String KEY_CALLER_PID { get { if (!_KEY_CALLER_PIDReady) { _KEY_CALLER_PIDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CALLER_PID"); _KEY_CALLER_PIDReady = true; } return _KEY_CALLER_PIDContent; } }
        private static Java.Lang.String _KEY_CALLER_PIDContent = default;
        private static bool _KEY_CALLER_PIDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#KEY_CALLER_UID"/>
        /// </summary>
        public static Java.Lang.String KEY_CALLER_UID { get { if (!_KEY_CALLER_UIDReady) { _KEY_CALLER_UIDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CALLER_UID"); _KEY_CALLER_UIDReady = true; } return _KEY_CALLER_UIDContent; } }
        private static Java.Lang.String _KEY_CALLER_UIDContent = default;
        private static bool _KEY_CALLER_UIDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#KEY_ERROR_CODE"/>
        /// </summary>
        public static Java.Lang.String KEY_ERROR_CODE { get { if (!_KEY_ERROR_CODEReady) { _KEY_ERROR_CODEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_ERROR_CODE"); _KEY_ERROR_CODEReady = true; } return _KEY_ERROR_CODEContent; } }
        private static Java.Lang.String _KEY_ERROR_CODEContent = default;
        private static bool _KEY_ERROR_CODEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#KEY_ERROR_MESSAGE"/>
        /// </summary>
        public static Java.Lang.String KEY_ERROR_MESSAGE { get { if (!_KEY_ERROR_MESSAGEReady) { _KEY_ERROR_MESSAGEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_ERROR_MESSAGE"); _KEY_ERROR_MESSAGEReady = true; } return _KEY_ERROR_MESSAGEContent; } }
        private static Java.Lang.String _KEY_ERROR_MESSAGEContent = default;
        private static bool _KEY_ERROR_MESSAGEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#KEY_INTENT"/>
        /// </summary>
        public static Java.Lang.String KEY_INTENT { get { if (!_KEY_INTENTReady) { _KEY_INTENTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_INTENT"); _KEY_INTENTReady = true; } return _KEY_INTENTContent; } }
        private static Java.Lang.String _KEY_INTENTContent = default;
        private static bool _KEY_INTENTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#KEY_LAST_AUTHENTICATED_TIME"/>
        /// </summary>
        public static Java.Lang.String KEY_LAST_AUTHENTICATED_TIME { get { if (!_KEY_LAST_AUTHENTICATED_TIMEReady) { _KEY_LAST_AUTHENTICATED_TIMEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_LAST_AUTHENTICATED_TIME"); _KEY_LAST_AUTHENTICATED_TIMEReady = true; } return _KEY_LAST_AUTHENTICATED_TIMEContent; } }
        private static Java.Lang.String _KEY_LAST_AUTHENTICATED_TIMEContent = default;
        private static bool _KEY_LAST_AUTHENTICATED_TIMEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#KEY_PASSWORD"/>
        /// </summary>
        public static Java.Lang.String KEY_PASSWORD { get { if (!_KEY_PASSWORDReady) { _KEY_PASSWORDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_PASSWORD"); _KEY_PASSWORDReady = true; } return _KEY_PASSWORDContent; } }
        private static Java.Lang.String _KEY_PASSWORDContent = default;
        private static bool _KEY_PASSWORDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#KEY_USERDATA"/>
        /// </summary>
        public static Java.Lang.String KEY_USERDATA { get { if (!_KEY_USERDATAReady) { _KEY_USERDATAContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_USERDATA"); _KEY_USERDATAReady = true; } return _KEY_USERDATAContent; } }
        private static Java.Lang.String _KEY_USERDATAContent = default;
        private static bool _KEY_USERDATAReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#LOGIN_ACCOUNTS_CHANGED_ACTION"/>
        /// </summary>
        [global::System.Obsolete()]
        public static Java.Lang.String LOGIN_ACCOUNTS_CHANGED_ACTION { get { if (!_LOGIN_ACCOUNTS_CHANGED_ACTIONReady) { _LOGIN_ACCOUNTS_CHANGED_ACTIONContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "LOGIN_ACCOUNTS_CHANGED_ACTION"); _LOGIN_ACCOUNTS_CHANGED_ACTIONReady = true; } return _LOGIN_ACCOUNTS_CHANGED_ACTIONContent; } }
        private static Java.Lang.String _LOGIN_ACCOUNTS_CHANGED_ACTIONContent = default;
        private static bool _LOGIN_ACCOUNTS_CHANGED_ACTIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#PACKAGE_NAME_KEY_LEGACY_NOT_VISIBLE"/>
        /// </summary>
        public static Java.Lang.String PACKAGE_NAME_KEY_LEGACY_NOT_VISIBLE { get { if (!_PACKAGE_NAME_KEY_LEGACY_NOT_VISIBLEReady) { _PACKAGE_NAME_KEY_LEGACY_NOT_VISIBLEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "PACKAGE_NAME_KEY_LEGACY_NOT_VISIBLE"); _PACKAGE_NAME_KEY_LEGACY_NOT_VISIBLEReady = true; } return _PACKAGE_NAME_KEY_LEGACY_NOT_VISIBLEContent; } }
        private static Java.Lang.String _PACKAGE_NAME_KEY_LEGACY_NOT_VISIBLEContent = default;
        private static bool _PACKAGE_NAME_KEY_LEGACY_NOT_VISIBLEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#PACKAGE_NAME_KEY_LEGACY_VISIBLE"/>
        /// </summary>
        public static Java.Lang.String PACKAGE_NAME_KEY_LEGACY_VISIBLE { get { if (!_PACKAGE_NAME_KEY_LEGACY_VISIBLEReady) { _PACKAGE_NAME_KEY_LEGACY_VISIBLEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "PACKAGE_NAME_KEY_LEGACY_VISIBLE"); _PACKAGE_NAME_KEY_LEGACY_VISIBLEReady = true; } return _PACKAGE_NAME_KEY_LEGACY_VISIBLEContent; } }
        private static Java.Lang.String _PACKAGE_NAME_KEY_LEGACY_VISIBLEContent = default;
        private static bool _PACKAGE_NAME_KEY_LEGACY_VISIBLEReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#get(android.content.Context)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        /// <returns><see cref="Android.Accounts.AccountManager"/></returns>
        public static Android.Accounts.AccountManager Get(Android.Content.Context arg0)
        {
            return SExecuteWithSignature<Android.Accounts.AccountManager>(LocalBridgeClazz, "get", "(Landroid/content/Context;)Landroid/accounts/AccountManager;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#newChooseAccountIntent(android.accounts.Account,java.util.ArrayList,java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Accounts.Account"/></param>
        /// <param name="arg1"><see cref="Java.Util.ArrayList"/></param>
        /// <param name="arg2"><see cref="Java.Lang.String"/></param>
        /// <param name="arg3"><see cref="bool"/></param>
        /// <param name="arg4"><see cref="Java.Lang.String"/></param>
        /// <param name="arg5"><see cref="Java.Lang.String"/></param>
        /// <param name="arg6"><see cref="Java.Lang.String"/></param>
        /// <param name="arg7"><see cref="Android.Os.Bundle"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        [global::System.Obsolete()]
        public static Android.Content.Intent NewChooseAccountIntent(Android.Accounts.Account arg0, Java.Util.ArrayList<Android.Accounts.Account> arg1, Java.Lang.String[] arg2, bool arg3, Java.Lang.String arg4, Java.Lang.String arg5, Java.Lang.String[] arg6, Android.Os.Bundle arg7)
        {
            return SExecute<Android.Content.Intent>(LocalBridgeClazz, "newChooseAccountIntent", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#newChooseAccountIntent(android.accounts.Account,java.util.List,java.lang.String[],java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Accounts.Account"/></param>
        /// <param name="arg1"><see cref="Java.Util.List"/></param>
        /// <param name="arg2"><see cref="Java.Lang.String"/></param>
        /// <param name="arg3"><see cref="Java.Lang.String"/></param>
        /// <param name="arg4"><see cref="Java.Lang.String"/></param>
        /// <param name="arg5"><see cref="Java.Lang.String"/></param>
        /// <param name="arg6"><see cref="Android.Os.Bundle"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public static Android.Content.Intent NewChooseAccountIntent(Android.Accounts.Account arg0, Java.Util.List<Android.Accounts.Account> arg1, Java.Lang.String[] arg2, Java.Lang.String arg3, Java.Lang.String arg4, Java.Lang.String[] arg5, Android.Os.Bundle arg6)
        {
            return SExecute<Android.Content.Intent>(LocalBridgeClazz, "newChooseAccountIntent", arg0, arg1, arg2, arg3, arg4, arg5, arg6);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#getAccounts()"/>
        /// </summary>
        /// <returns><see cref="Android.Accounts.Account"/></returns>
        public Android.Accounts.Account[] GetAccounts()
        {
            return IExecuteWithSignatureArray<Android.Accounts.Account>("getAccounts", "()[Landroid/accounts/Account;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#getAccountsByType(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Android.Accounts.Account"/></returns>
        public Android.Accounts.Account[] GetAccountsByType(Java.Lang.String arg0)
        {
            return IExecuteWithSignatureArray<Android.Accounts.Account>("getAccountsByType", "(Ljava/lang/String;)[Landroid/accounts/Account;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#getAccountsByTypeForPackage(java.lang.String,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Android.Accounts.Account"/></returns>
        public Android.Accounts.Account[] GetAccountsByTypeForPackage(Java.Lang.String arg0, Java.Lang.String arg1)
        {
            return IExecuteArray<Android.Accounts.Account>("getAccountsByTypeForPackage", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#getAccountsByTypeAndFeatures(java.lang.String,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="Android.Accounts.AccountManagerCallback"/></param>
        /// <param name="arg3"><see cref="Android.Os.Handler"/></param>
        /// <returns><see cref="Android.Accounts.AccountManagerFuture"/></returns>
        public Android.Accounts.AccountManagerFuture<Android.Accounts.Account[]> GetAccountsByTypeAndFeatures(Java.Lang.String arg0, Java.Lang.String[] arg1, Android.Accounts.AccountManagerCallback<Android.Accounts.Account[]> arg2, Android.Os.Handler arg3)
        {
            return IExecute<Android.Accounts.AccountManagerFuture<Android.Accounts.Account[]>>("getAccountsByTypeAndFeatures", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#renameAccount(android.accounts.Account,java.lang.String,android.accounts.AccountManagerCallback,android.os.Handler)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Accounts.Account"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="Android.Accounts.AccountManagerCallback"/></param>
        /// <param name="arg3"><see cref="Android.Os.Handler"/></param>
        /// <returns><see cref="Android.Accounts.AccountManagerFuture"/></returns>
        public Android.Accounts.AccountManagerFuture<Android.Accounts.Account> RenameAccount(Android.Accounts.Account arg0, Java.Lang.String arg1, Android.Accounts.AccountManagerCallback<Android.Accounts.Account> arg2, Android.Os.Handler arg3)
        {
            return IExecute<Android.Accounts.AccountManagerFuture<Android.Accounts.Account>>("renameAccount", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#addAccount(java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="Java.Lang.String"/></param>
        /// <param name="arg3"><see cref="Android.Os.Bundle"/></param>
        /// <param name="arg4"><see cref="Android.App.Activity"/></param>
        /// <param name="arg5"><see cref="Android.Accounts.AccountManagerCallback"/></param>
        /// <param name="arg6"><see cref="Android.Os.Handler"/></param>
        /// <returns><see cref="Android.Accounts.AccountManagerFuture"/></returns>
        public Android.Accounts.AccountManagerFuture<Android.Os.Bundle> AddAccount(Java.Lang.String arg0, Java.Lang.String arg1, Java.Lang.String[] arg2, Android.Os.Bundle arg3, Android.App.Activity arg4, Android.Accounts.AccountManagerCallback<Android.Os.Bundle> arg5, Android.Os.Handler arg6)
        {
            return IExecute<Android.Accounts.AccountManagerFuture<Android.Os.Bundle>>("addAccount", arg0, arg1, arg2, arg3, arg4, arg5, arg6);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#confirmCredentials(android.accounts.Account,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Accounts.Account"/></param>
        /// <param name="arg1"><see cref="Android.Os.Bundle"/></param>
        /// <param name="arg2"><see cref="Android.App.Activity"/></param>
        /// <param name="arg3"><see cref="Android.Accounts.AccountManagerCallback"/></param>
        /// <param name="arg4"><see cref="Android.Os.Handler"/></param>
        /// <returns><see cref="Android.Accounts.AccountManagerFuture"/></returns>
        public Android.Accounts.AccountManagerFuture<Android.Os.Bundle> ConfirmCredentials(Android.Accounts.Account arg0, Android.Os.Bundle arg1, Android.App.Activity arg2, Android.Accounts.AccountManagerCallback<Android.Os.Bundle> arg3, Android.Os.Handler arg4)
        {
            return IExecute<Android.Accounts.AccountManagerFuture<Android.Os.Bundle>>("confirmCredentials", arg0, arg1, arg2, arg3, arg4);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#editProperties(java.lang.String,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Android.App.Activity"/></param>
        /// <param name="arg2"><see cref="Android.Accounts.AccountManagerCallback"/></param>
        /// <param name="arg3"><see cref="Android.Os.Handler"/></param>
        /// <returns><see cref="Android.Accounts.AccountManagerFuture"/></returns>
        public Android.Accounts.AccountManagerFuture<Android.Os.Bundle> EditProperties(Java.Lang.String arg0, Android.App.Activity arg1, Android.Accounts.AccountManagerCallback<Android.Os.Bundle> arg2, Android.Os.Handler arg3)
        {
            return IExecute<Android.Accounts.AccountManagerFuture<Android.Os.Bundle>>("editProperties", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#finishSession(android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.Bundle"/></param>
        /// <param name="arg1"><see cref="Android.App.Activity"/></param>
        /// <param name="arg2"><see cref="Android.Accounts.AccountManagerCallback"/></param>
        /// <param name="arg3"><see cref="Android.Os.Handler"/></param>
        /// <returns><see cref="Android.Accounts.AccountManagerFuture"/></returns>
        public Android.Accounts.AccountManagerFuture<Android.Os.Bundle> FinishSession(Android.Os.Bundle arg0, Android.App.Activity arg1, Android.Accounts.AccountManagerCallback<Android.Os.Bundle> arg2, Android.Os.Handler arg3)
        {
            return IExecute<Android.Accounts.AccountManagerFuture<Android.Os.Bundle>>("finishSession", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#getAuthToken(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Accounts.Account"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="Android.Os.Bundle"/></param>
        /// <param name="arg3"><see cref="Android.App.Activity"/></param>
        /// <param name="arg4"><see cref="Android.Accounts.AccountManagerCallback"/></param>
        /// <param name="arg5"><see cref="Android.Os.Handler"/></param>
        /// <returns><see cref="Android.Accounts.AccountManagerFuture"/></returns>
        public Android.Accounts.AccountManagerFuture<Android.Os.Bundle> GetAuthToken(Android.Accounts.Account arg0, Java.Lang.String arg1, Android.Os.Bundle arg2, Android.App.Activity arg3, Android.Accounts.AccountManagerCallback<Android.Os.Bundle> arg4, Android.Os.Handler arg5)
        {
            return IExecute<Android.Accounts.AccountManagerFuture<Android.Os.Bundle>>("getAuthToken", arg0, arg1, arg2, arg3, arg4, arg5);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#getAuthToken(android.accounts.Account,java.lang.String,android.os.Bundle,boolean,android.accounts.AccountManagerCallback,android.os.Handler)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Accounts.Account"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="Android.Os.Bundle"/></param>
        /// <param name="arg3"><see cref="bool"/></param>
        /// <param name="arg4"><see cref="Android.Accounts.AccountManagerCallback"/></param>
        /// <param name="arg5"><see cref="Android.Os.Handler"/></param>
        /// <returns><see cref="Android.Accounts.AccountManagerFuture"/></returns>
        public Android.Accounts.AccountManagerFuture<Android.Os.Bundle> GetAuthToken(Android.Accounts.Account arg0, Java.Lang.String arg1, Android.Os.Bundle arg2, bool arg3, Android.Accounts.AccountManagerCallback<Android.Os.Bundle> arg4, Android.Os.Handler arg5)
        {
            return IExecute<Android.Accounts.AccountManagerFuture<Android.Os.Bundle>>("getAuthToken", arg0, arg1, arg2, arg3, arg4, arg5);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#getAuthToken(android.accounts.Account,java.lang.String,boolean,android.accounts.AccountManagerCallback,android.os.Handler)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Accounts.Account"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="bool"/></param>
        /// <param name="arg3"><see cref="Android.Accounts.AccountManagerCallback"/></param>
        /// <param name="arg4"><see cref="Android.Os.Handler"/></param>
        /// <returns><see cref="Android.Accounts.AccountManagerFuture"/></returns>
        [global::System.Obsolete()]
        public Android.Accounts.AccountManagerFuture<Android.Os.Bundle> GetAuthToken(Android.Accounts.Account arg0, Java.Lang.String arg1, bool arg2, Android.Accounts.AccountManagerCallback<Android.Os.Bundle> arg3, Android.Os.Handler arg4)
        {
            return IExecute<Android.Accounts.AccountManagerFuture<Android.Os.Bundle>>("getAuthToken", arg0, arg1, arg2, arg3, arg4);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#getAuthTokenByFeatures(java.lang.String,java.lang.String,java.lang.String[],android.app.Activity,android.os.Bundle,android.os.Bundle,android.accounts.AccountManagerCallback,android.os.Handler)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="Java.Lang.String"/></param>
        /// <param name="arg3"><see cref="Android.App.Activity"/></param>
        /// <param name="arg4"><see cref="Android.Os.Bundle"/></param>
        /// <param name="arg5"><see cref="Android.Os.Bundle"/></param>
        /// <param name="arg6"><see cref="Android.Accounts.AccountManagerCallback"/></param>
        /// <param name="arg7"><see cref="Android.Os.Handler"/></param>
        /// <returns><see cref="Android.Accounts.AccountManagerFuture"/></returns>
        public Android.Accounts.AccountManagerFuture<Android.Os.Bundle> GetAuthTokenByFeatures(Java.Lang.String arg0, Java.Lang.String arg1, Java.Lang.String[] arg2, Android.App.Activity arg3, Android.Os.Bundle arg4, Android.Os.Bundle arg5, Android.Accounts.AccountManagerCallback<Android.Os.Bundle> arg6, Android.Os.Handler arg7)
        {
            return IExecute<Android.Accounts.AccountManagerFuture<Android.Os.Bundle>>("getAuthTokenByFeatures", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#removeAccount(android.accounts.Account,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Accounts.Account"/></param>
        /// <param name="arg1"><see cref="Android.App.Activity"/></param>
        /// <param name="arg2"><see cref="Android.Accounts.AccountManagerCallback"/></param>
        /// <param name="arg3"><see cref="Android.Os.Handler"/></param>
        /// <returns><see cref="Android.Accounts.AccountManagerFuture"/></returns>
        public Android.Accounts.AccountManagerFuture<Android.Os.Bundle> RemoveAccount(Android.Accounts.Account arg0, Android.App.Activity arg1, Android.Accounts.AccountManagerCallback<Android.Os.Bundle> arg2, Android.Os.Handler arg3)
        {
            return IExecute<Android.Accounts.AccountManagerFuture<Android.Os.Bundle>>("removeAccount", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#startAddAccountSession(java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="Java.Lang.String"/></param>
        /// <param name="arg3"><see cref="Android.Os.Bundle"/></param>
        /// <param name="arg4"><see cref="Android.App.Activity"/></param>
        /// <param name="arg5"><see cref="Android.Accounts.AccountManagerCallback"/></param>
        /// <param name="arg6"><see cref="Android.Os.Handler"/></param>
        /// <returns><see cref="Android.Accounts.AccountManagerFuture"/></returns>
        public Android.Accounts.AccountManagerFuture<Android.Os.Bundle> StartAddAccountSession(Java.Lang.String arg0, Java.Lang.String arg1, Java.Lang.String[] arg2, Android.Os.Bundle arg3, Android.App.Activity arg4, Android.Accounts.AccountManagerCallback<Android.Os.Bundle> arg5, Android.Os.Handler arg6)
        {
            return IExecute<Android.Accounts.AccountManagerFuture<Android.Os.Bundle>>("startAddAccountSession", arg0, arg1, arg2, arg3, arg4, arg5, arg6);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#startUpdateCredentialsSession(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Accounts.Account"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="Android.Os.Bundle"/></param>
        /// <param name="arg3"><see cref="Android.App.Activity"/></param>
        /// <param name="arg4"><see cref="Android.Accounts.AccountManagerCallback"/></param>
        /// <param name="arg5"><see cref="Android.Os.Handler"/></param>
        /// <returns><see cref="Android.Accounts.AccountManagerFuture"/></returns>
        public Android.Accounts.AccountManagerFuture<Android.Os.Bundle> StartUpdateCredentialsSession(Android.Accounts.Account arg0, Java.Lang.String arg1, Android.Os.Bundle arg2, Android.App.Activity arg3, Android.Accounts.AccountManagerCallback<Android.Os.Bundle> arg4, Android.Os.Handler arg5)
        {
            return IExecute<Android.Accounts.AccountManagerFuture<Android.Os.Bundle>>("startUpdateCredentialsSession", arg0, arg1, arg2, arg3, arg4, arg5);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#updateCredentials(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Accounts.Account"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="Android.Os.Bundle"/></param>
        /// <param name="arg3"><see cref="Android.App.Activity"/></param>
        /// <param name="arg4"><see cref="Android.Accounts.AccountManagerCallback"/></param>
        /// <param name="arg5"><see cref="Android.Os.Handler"/></param>
        /// <returns><see cref="Android.Accounts.AccountManagerFuture"/></returns>
        public Android.Accounts.AccountManagerFuture<Android.Os.Bundle> UpdateCredentials(Android.Accounts.Account arg0, Java.Lang.String arg1, Android.Os.Bundle arg2, Android.App.Activity arg3, Android.Accounts.AccountManagerCallback<Android.Os.Bundle> arg4, Android.Os.Handler arg5)
        {
            return IExecute<Android.Accounts.AccountManagerFuture<Android.Os.Bundle>>("updateCredentials", arg0, arg1, arg2, arg3, arg4, arg5);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#hasFeatures(android.accounts.Account,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Accounts.Account"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="Android.Accounts.AccountManagerCallback"/></param>
        /// <param name="arg3"><see cref="Android.Os.Handler"/></param>
        /// <returns><see cref="Android.Accounts.AccountManagerFuture"/></returns>
        public Android.Accounts.AccountManagerFuture<Java.Lang.Boolean> HasFeatures(Android.Accounts.Account arg0, Java.Lang.String[] arg1, Android.Accounts.AccountManagerCallback<Java.Lang.Boolean> arg2, Android.Os.Handler arg3)
        {
            return IExecute<Android.Accounts.AccountManagerFuture<Java.Lang.Boolean>>("hasFeatures", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#isCredentialsUpdateSuggested(android.accounts.Account,java.lang.String,android.accounts.AccountManagerCallback,android.os.Handler)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Accounts.Account"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="Android.Accounts.AccountManagerCallback"/></param>
        /// <param name="arg3"><see cref="Android.Os.Handler"/></param>
        /// <returns><see cref="Android.Accounts.AccountManagerFuture"/></returns>
        public Android.Accounts.AccountManagerFuture<Java.Lang.Boolean> IsCredentialsUpdateSuggested(Android.Accounts.Account arg0, Java.Lang.String arg1, Android.Accounts.AccountManagerCallback<Java.Lang.Boolean> arg2, Android.Os.Handler arg3)
        {
            return IExecute<Android.Accounts.AccountManagerFuture<Java.Lang.Boolean>>("isCredentialsUpdateSuggested", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#removeAccount(android.accounts.Account,android.accounts.AccountManagerCallback,android.os.Handler)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Accounts.Account"/></param>
        /// <param name="arg1"><see cref="Android.Accounts.AccountManagerCallback"/></param>
        /// <param name="arg2"><see cref="Android.Os.Handler"/></param>
        /// <returns><see cref="Android.Accounts.AccountManagerFuture"/></returns>
        [global::System.Obsolete()]
        public Android.Accounts.AccountManagerFuture<Java.Lang.Boolean> RemoveAccount(Android.Accounts.Account arg0, Android.Accounts.AccountManagerCallback<Java.Lang.Boolean> arg1, Android.Os.Handler arg2)
        {
            return IExecute<Android.Accounts.AccountManagerFuture<Java.Lang.Boolean>>("removeAccount", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#getAuthenticatorTypes()"/>
        /// </summary>
        /// <returns><see cref="Android.Accounts.AuthenticatorDescription"/></returns>
        public Android.Accounts.AuthenticatorDescription[] GetAuthenticatorTypes()
        {
            return IExecuteWithSignatureArray<Android.Accounts.AuthenticatorDescription>("getAuthenticatorTypes", "()[Landroid/accounts/AuthenticatorDescription;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#addAccountExplicitly(android.accounts.Account,java.lang.String,android.os.Bundle,java.util.Map)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Accounts.Account"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="Android.Os.Bundle"/></param>
        /// <param name="arg3"><see cref="Java.Util.Map"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool AddAccountExplicitly(Android.Accounts.Account arg0, Java.Lang.String arg1, Android.Os.Bundle arg2, Java.Util.Map<Java.Lang.String, Java.Lang.Integer> arg3)
        {
            return IExecute<bool>("addAccountExplicitly", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#addAccountExplicitly(android.accounts.Account,java.lang.String,android.os.Bundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Accounts.Account"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="Android.Os.Bundle"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool AddAccountExplicitly(Android.Accounts.Account arg0, Java.Lang.String arg1, Android.Os.Bundle arg2)
        {
            return IExecute<bool>("addAccountExplicitly", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#notifyAccountAuthenticated(android.accounts.Account)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Accounts.Account"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool NotifyAccountAuthenticated(Android.Accounts.Account arg0)
        {
            return IExecuteWithSignature<bool>("notifyAccountAuthenticated", "(Landroid/accounts/Account;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#removeAccountExplicitly(android.accounts.Account)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Accounts.Account"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool RemoveAccountExplicitly(Android.Accounts.Account arg0)
        {
            return IExecuteWithSignature<bool>("removeAccountExplicitly", "(Landroid/accounts/Account;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#setAccountVisibility(android.accounts.Account,java.lang.String,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Accounts.Account"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool SetAccountVisibility(Android.Accounts.Account arg0, Java.Lang.String arg1, int arg2)
        {
            return IExecute<bool>("setAccountVisibility", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#getAccountVisibility(android.accounts.Account,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Accounts.Account"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="int"/></returns>
        public int GetAccountVisibility(Android.Accounts.Account arg0, Java.Lang.String arg1)
        {
            return IExecute<int>("getAccountVisibility", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#blockingGetAuthToken(android.accounts.Account,java.lang.String,boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Accounts.Account"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="bool"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        /// <exception cref="Android.Accounts.AuthenticatorException"/>
        /// <exception cref="Java.Io.IOException"/>
        /// <exception cref="Android.Accounts.OperationCanceledException"/>
        public Java.Lang.String BlockingGetAuthToken(Android.Accounts.Account arg0, Java.Lang.String arg1, bool arg2)
        {
            return IExecute<Java.Lang.String>("blockingGetAuthToken", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#getPassword(android.accounts.Account)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Accounts.Account"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetPassword(Android.Accounts.Account arg0)
        {
            return IExecuteWithSignature<Java.Lang.String>("getPassword", "(Landroid/accounts/Account;)Ljava/lang/String;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#getPreviousName(android.accounts.Account)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Accounts.Account"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetPreviousName(Android.Accounts.Account arg0)
        {
            return IExecuteWithSignature<Java.Lang.String>("getPreviousName", "(Landroid/accounts/Account;)Ljava/lang/String;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#getUserData(android.accounts.Account,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Accounts.Account"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetUserData(Android.Accounts.Account arg0, Java.Lang.String arg1)
        {
            return IExecute<Java.Lang.String>("getUserData", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#peekAuthToken(android.accounts.Account,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Accounts.Account"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String PeekAuthToken(Android.Accounts.Account arg0, Java.Lang.String arg1)
        {
            return IExecute<Java.Lang.String>("peekAuthToken", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#getAccountsAndVisibilityForPackage(java.lang.String,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Java.Util.Map"/></returns>
        public Java.Util.Map<Android.Accounts.Account, Java.Lang.Integer> GetAccountsAndVisibilityForPackage(Java.Lang.String arg0, Java.Lang.String arg1)
        {
            return IExecute<Java.Util.Map<Android.Accounts.Account, Java.Lang.Integer>>("getAccountsAndVisibilityForPackage", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#getPackagesAndVisibilityForAccount(android.accounts.Account)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Accounts.Account"/></param>
        /// <returns><see cref="Java.Util.Map"/></returns>
        public Java.Util.Map<Java.Lang.String, Java.Lang.Integer> GetPackagesAndVisibilityForAccount(Android.Accounts.Account arg0)
        {
            return IExecuteWithSignature<Java.Util.Map<Java.Lang.String, Java.Lang.Integer>>("getPackagesAndVisibilityForAccount", "(Landroid/accounts/Account;)Ljava/util/Map;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#addOnAccountsUpdatedListener(android.accounts.OnAccountsUpdateListener,android.os.Handler,boolean,java.lang.String[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Accounts.OnAccountsUpdateListener"/></param>
        /// <param name="arg1"><see cref="Android.Os.Handler"/></param>
        /// <param name="arg2"><see cref="bool"/></param>
        /// <param name="arg3"><see cref="Java.Lang.String"/></param>
        public void AddOnAccountsUpdatedListener(Android.Accounts.OnAccountsUpdateListener arg0, Android.Os.Handler arg1, bool arg2, Java.Lang.String[] arg3)
        {
            IExecute("addOnAccountsUpdatedListener", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#addOnAccountsUpdatedListener(android.accounts.OnAccountsUpdateListener,android.os.Handler,boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Accounts.OnAccountsUpdateListener"/></param>
        /// <param name="arg1"><see cref="Android.Os.Handler"/></param>
        /// <param name="arg2"><see cref="bool"/></param>
        public void AddOnAccountsUpdatedListener(Android.Accounts.OnAccountsUpdateListener arg0, Android.Os.Handler arg1, bool arg2)
        {
            IExecute("addOnAccountsUpdatedListener", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#clearPassword(android.accounts.Account)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Accounts.Account"/></param>
        public void ClearPassword(Android.Accounts.Account arg0)
        {
            IExecuteWithSignature("clearPassword", "(Landroid/accounts/Account;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#invalidateAuthToken(java.lang.String,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        public void InvalidateAuthToken(Java.Lang.String arg0, Java.Lang.String arg1)
        {
            IExecute("invalidateAuthToken", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#removeOnAccountsUpdatedListener(android.accounts.OnAccountsUpdateListener)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Accounts.OnAccountsUpdateListener"/></param>
        public void RemoveOnAccountsUpdatedListener(Android.Accounts.OnAccountsUpdateListener arg0)
        {
            IExecuteWithSignature("removeOnAccountsUpdatedListener", "(Landroid/accounts/OnAccountsUpdateListener;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#setAuthToken(android.accounts.Account,java.lang.String,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Accounts.Account"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="Java.Lang.String"/></param>
        public void SetAuthToken(Android.Accounts.Account arg0, Java.Lang.String arg1, Java.Lang.String arg2)
        {
            IExecute("setAuthToken", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#setPassword(android.accounts.Account,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Accounts.Account"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        public void SetPassword(Android.Accounts.Account arg0, Java.Lang.String arg1)
        {
            IExecute("setPassword", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/accounts/AccountManager.html#setUserData(android.accounts.Account,java.lang.String,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Accounts.Account"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="Java.Lang.String"/></param>
        public void SetUserData(Android.Accounts.Account arg0, Java.Lang.String arg1, Java.Lang.String arg2)
        {
            IExecute("setUserData", arg0, arg1, arg2);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}