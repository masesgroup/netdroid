/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.1.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Content.Res
{
    #region Resources
    public partial class Resources
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/Resources.html#ID_NULL"/>
        /// </summary>
        public static int ID_NULL { get { if (!_ID_NULLReady) { _ID_NULLContent = SGetField<int>(LocalBridgeClazz, "ID_NULL"); _ID_NULLReady = true; } return _ID_NULLContent; } }
        private static int _ID_NULLContent = default;
        private static bool _ID_NULLReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/Resources.html#getSystem()"/> 
        /// </summary>
        public static Android.Content.Res.Resources System
        {
            get { return SExecuteWithSignature<Android.Content.Res.Resources>(LocalBridgeClazz, "getSystem", "()Landroid/content/res/Resources;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/Resources.html#getAttributeSetSourceResId(android.util.AttributeSet)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Util.AttributeSet"/></param>
        /// <returns><see cref="int"/></returns>
        public static int GetAttributeSetSourceResId(Android.Util.AttributeSet arg0)
        {
            return SExecuteWithSignature<int>(LocalBridgeClazz, "getAttributeSetSourceResId", "(Landroid/util/AttributeSet;)I", arg0);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/Resources.html#getAssets()"/> 
        /// </summary>
        public Android.Content.Res.AssetManager Assets
        {
            get { return IExecuteWithSignature<Android.Content.Res.AssetManager>("getAssets", "()Landroid/content/res/AssetManager;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/Resources.html#getConfiguration()"/> 
        /// </summary>
        public Android.Content.Res.Configuration Configuration
        {
            get { return IExecuteWithSignature<Android.Content.Res.Configuration>("getConfiguration", "()Landroid/content/res/Configuration;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/Resources.html#getDisplayMetrics()"/> 
        /// </summary>
        public Android.Util.DisplayMetrics DisplayMetrics
        {
            get { return IExecuteWithSignature<Android.Util.DisplayMetrics>("getDisplayMetrics", "()Landroid/util/DisplayMetrics;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/Resources.html#openRawResourceFd(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Android.Content.Res.AssetFileDescriptor"/></returns>
        /// <exception cref="Android.Content.Res.Resources.NotFoundException"/>
        public Android.Content.Res.AssetFileDescriptor OpenRawResourceFd(int arg0)
        {
            return IExecuteWithSignature<Android.Content.Res.AssetFileDescriptor>("openRawResourceFd", "(I)Landroid/content/res/AssetFileDescriptor;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/Resources.html#getColorStateList(int,android.content.res.Resources.Theme)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="Android.Content.Res.Resources.Theme"/></param>
        /// <returns><see cref="Android.Content.Res.ColorStateList"/></returns>
        /// <exception cref="Android.Content.Res.Resources.NotFoundException"/>
        public Android.Content.Res.ColorStateList GetColorStateList(int arg0, Android.Content.Res.Resources.Theme arg1)
        {
            return IExecute<Android.Content.Res.ColorStateList>("getColorStateList", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/Resources.html#obtainAttributes(android.util.AttributeSet,int[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Util.AttributeSet"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="Android.Content.Res.TypedArray"/></returns>
        public Android.Content.Res.TypedArray ObtainAttributes(Android.Util.AttributeSet arg0, int[] arg1)
        {
            return IExecute<Android.Content.Res.TypedArray>("obtainAttributes", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/Resources.html#obtainTypedArray(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Android.Content.Res.TypedArray"/></returns>
        /// <exception cref="Android.Content.Res.Resources.NotFoundException"/>
        public Android.Content.Res.TypedArray ObtainTypedArray(int arg0)
        {
            return IExecuteWithSignature<Android.Content.Res.TypedArray>("obtainTypedArray", "(I)Landroid/content/res/TypedArray;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/Resources.html#getAnimation(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Android.Content.Res.XmlResourceParser"/></returns>
        /// <exception cref="Android.Content.Res.Resources.NotFoundException"/>
        public Android.Content.Res.XmlResourceParser GetAnimation(int arg0)
        {
            return IExecuteWithSignature<Android.Content.Res.XmlResourceParser>("getAnimation", "(I)Landroid/content/res/XmlResourceParser;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/Resources.html#getLayout(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Android.Content.Res.XmlResourceParser"/></returns>
        /// <exception cref="Android.Content.Res.Resources.NotFoundException"/>
        public Android.Content.Res.XmlResourceParser GetLayout(int arg0)
        {
            return IExecuteWithSignature<Android.Content.Res.XmlResourceParser>("getLayout", "(I)Landroid/content/res/XmlResourceParser;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/Resources.html#getXml(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Android.Content.Res.XmlResourceParser"/></returns>
        /// <exception cref="Android.Content.Res.Resources.NotFoundException"/>
        public Android.Content.Res.XmlResourceParser GetXml(int arg0)
        {
            return IExecuteWithSignature<Android.Content.Res.XmlResourceParser>("getXml", "(I)Landroid/content/res/XmlResourceParser;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/Resources.html#getDrawable(int,android.content.res.Resources.Theme)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="Android.Content.Res.Resources.Theme"/></param>
        /// <returns><see cref="Android.Graphics.Drawable.Drawable"/></returns>
        /// <exception cref="Android.Content.Res.Resources.NotFoundException"/>
        public Android.Graphics.Drawable.Drawable GetDrawable(int arg0, Android.Content.Res.Resources.Theme arg1)
        {
            return IExecute<Android.Graphics.Drawable.Drawable>("getDrawable", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/Resources.html#getDrawableForDensity(int,int,android.content.res.Resources.Theme)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="Android.Content.Res.Resources.Theme"/></param>
        /// <returns><see cref="Android.Graphics.Drawable.Drawable"/></returns>
        public Android.Graphics.Drawable.Drawable GetDrawableForDensity(int arg0, int arg1, Android.Content.Res.Resources.Theme arg2)
        {
            return IExecute<Android.Graphics.Drawable.Drawable>("getDrawableForDensity", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/Resources.html#getFont(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Android.Graphics.Typeface"/></returns>
        /// <exception cref="Android.Content.Res.Resources.NotFoundException"/>
        public Android.Graphics.Typeface GetFont(int arg0)
        {
            return IExecuteWithSignature<Android.Graphics.Typeface>("getFont", "(I)Landroid/graphics/Typeface;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/Resources.html#getBoolean(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        /// <exception cref="Android.Content.Res.Resources.NotFoundException"/>
        public bool GetBoolean(int arg0)
        {
            return IExecuteWithSignature<bool>("getBoolean", "(I)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/Resources.html#newTheme()"/>
        /// </summary>
        /// <returns><see cref="Android.Content.Res.Resources.Theme"/></returns>
        public Android.Content.Res.Resources.Theme NewTheme()
        {
            return IExecuteWithSignature<Android.Content.Res.Resources.Theme>("newTheme", "()Landroid/content/res/Resources$Theme;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/Resources.html#finishPreloading()"/>
        /// </summary>
        public void FinishPreloading()
        {
            IExecuteWithSignature("finishPreloading", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/Resources.html#flushLayoutCache()"/>
        /// </summary>
        public void FlushLayoutCache()
        {
            IExecuteWithSignature("flushLayoutCache", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/Resources.html#getDimension(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="float"/></returns>
        /// <exception cref="Android.Content.Res.Resources.NotFoundException"/>
        public float GetDimension(int arg0)
        {
            return IExecuteWithSignature<float>("getDimension", "(I)F", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/Resources.html#getFloat(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="float"/></returns>
        public float GetFloat(int arg0)
        {
            return IExecuteWithSignature<float>("getFloat", "(I)F", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/Resources.html#getFraction(int,int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <returns><see cref="float"/></returns>
        public float GetFraction(int arg0, int arg1, int arg2)
        {
            return IExecute<float>("getFraction", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/Resources.html#getColor(int,android.content.res.Resources.Theme)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="Android.Content.Res.Resources.Theme"/></param>
        /// <returns><see cref="int"/></returns>
        /// <exception cref="Android.Content.Res.Resources.NotFoundException"/>
        public int GetColor(int arg0, Android.Content.Res.Resources.Theme arg1)
        {
            return IExecute<int>("getColor", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/Resources.html#getDimensionPixelOffset(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        /// <exception cref="Android.Content.Res.Resources.NotFoundException"/>
        public int GetDimensionPixelOffset(int arg0)
        {
            return IExecuteWithSignature<int>("getDimensionPixelOffset", "(I)I", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/Resources.html#getDimensionPixelSize(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        /// <exception cref="Android.Content.Res.Resources.NotFoundException"/>
        public int GetDimensionPixelSize(int arg0)
        {
            return IExecuteWithSignature<int>("getDimensionPixelSize", "(I)I", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/Resources.html#getIdentifier(java.lang.String,java.lang.String,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="int"/></returns>
        public int GetIdentifier(Java.Lang.String arg0, Java.Lang.String arg1, Java.Lang.String arg2)
        {
            return IExecute<int>("getIdentifier", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/Resources.html#getInteger(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        /// <exception cref="Android.Content.Res.Resources.NotFoundException"/>
        public int GetInteger(int arg0)
        {
            return IExecuteWithSignature<int>("getInteger", "(I)I", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/Resources.html#getIntArray(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        /// <exception cref="Android.Content.Res.Resources.NotFoundException"/>
        public int[] GetIntArray(int arg0)
        {
            return IExecuteWithSignatureArray<int>("getIntArray", "(I)[I", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/Resources.html#openRawResource(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Java.Io.InputStream"/></returns>
        /// <exception cref="Android.Content.Res.Resources.NotFoundException"/>
        public Java.Io.InputStream OpenRawResource(int arg0)
        {
            return IExecuteWithSignature<Java.Io.InputStream>("openRawResource", "(I)Ljava/io/InputStream;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/Resources.html#getQuantityText(int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="Java.Lang.CharSequence"/></returns>
        /// <exception cref="Android.Content.Res.Resources.NotFoundException"/>
        public Java.Lang.CharSequence GetQuantityText(int arg0, int arg1)
        {
            return IExecute<Java.Lang.CharSequence>("getQuantityText", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/Resources.html#getText(int,java.lang.CharSequence)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="Java.Lang.CharSequence"/></param>
        /// <returns><see cref="Java.Lang.CharSequence"/></returns>
        public Java.Lang.CharSequence GetText(int arg0, Java.Lang.CharSequence arg1)
        {
            return IExecute<Java.Lang.CharSequence>("getText", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/Resources.html#getText(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Java.Lang.CharSequence"/></returns>
        /// <exception cref="Android.Content.Res.Resources.NotFoundException"/>
        public Java.Lang.CharSequence GetText(int arg0)
        {
            return IExecuteWithSignature<Java.Lang.CharSequence>("getText", "(I)Ljava/lang/CharSequence;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/Resources.html#getTextArray(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Java.Lang.CharSequence"/></returns>
        /// <exception cref="Android.Content.Res.Resources.NotFoundException"/>
        public Java.Lang.CharSequence[] GetTextArray(int arg0)
        {
            return IExecuteWithSignatureArray<Java.Lang.CharSequence>("getTextArray", "(I)[Ljava/lang/CharSequence;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/Resources.html#getQuantityString(int,int,java.lang.Object[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="object"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        /// <exception cref="Android.Content.Res.Resources.NotFoundException"/>
        public Java.Lang.String GetQuantityString(int arg0, int arg1, params object[] arg2)
        {
            if (arg2.Length == 0) return IExecute<Java.Lang.String>("getQuantityString", arg0, arg1); else return IExecute<Java.Lang.String>("getQuantityString", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/Resources.html#getQuantityString(int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        /// <exception cref="Android.Content.Res.Resources.NotFoundException"/>
        public Java.Lang.String GetQuantityString(int arg0, int arg1)
        {
            return IExecute<Java.Lang.String>("getQuantityString", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/Resources.html#getResourceEntryName(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        /// <exception cref="Android.Content.Res.Resources.NotFoundException"/>
        public Java.Lang.String GetResourceEntryName(int arg0)
        {
            return IExecuteWithSignature<Java.Lang.String>("getResourceEntryName", "(I)Ljava/lang/String;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/Resources.html#getResourceName(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        /// <exception cref="Android.Content.Res.Resources.NotFoundException"/>
        public Java.Lang.String GetResourceName(int arg0)
        {
            return IExecuteWithSignature<Java.Lang.String>("getResourceName", "(I)Ljava/lang/String;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/Resources.html#getResourcePackageName(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        /// <exception cref="Android.Content.Res.Resources.NotFoundException"/>
        public Java.Lang.String GetResourcePackageName(int arg0)
        {
            return IExecuteWithSignature<Java.Lang.String>("getResourcePackageName", "(I)Ljava/lang/String;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/Resources.html#getResourceTypeName(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        /// <exception cref="Android.Content.Res.Resources.NotFoundException"/>
        public Java.Lang.String GetResourceTypeName(int arg0)
        {
            return IExecuteWithSignature<Java.Lang.String>("getResourceTypeName", "(I)Ljava/lang/String;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/Resources.html#getString(int,java.lang.Object[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="object"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        /// <exception cref="Android.Content.Res.Resources.NotFoundException"/>
        public Java.Lang.String GetString(int arg0, params object[] arg1)
        {
            if (arg1.Length == 0) return IExecute<Java.Lang.String>("getString", arg0); else return IExecute<Java.Lang.String>("getString", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/Resources.html#getString(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        /// <exception cref="Android.Content.Res.Resources.NotFoundException"/>
        public Java.Lang.String GetString(int arg0)
        {
            return IExecuteWithSignature<Java.Lang.String>("getString", "(I)Ljava/lang/String;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/Resources.html#getStringArray(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        /// <exception cref="Android.Content.Res.Resources.NotFoundException"/>
        public Java.Lang.String[] GetStringArray(int arg0)
        {
            return IExecuteWithSignatureArray<Java.Lang.String>("getStringArray", "(I)[Ljava/lang/String;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/Resources.html#addLoaders(android.content.res.loader.ResourcesLoader[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Res.Loader.ResourcesLoader"/></param>
        public void AddLoaders(params Android.Content.Res.Loader.ResourcesLoader[] arg0)
        {
            if (arg0.Length == 0) IExecuteWithSignature("addLoaders", "([Landroid/content/res/loader/ResourcesLoader;)V"); else IExecuteWithSignature("addLoaders", "([Landroid/content/res/loader/ResourcesLoader;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/Resources.html#parseBundleExtra(java.lang.String,android.util.AttributeSet,android.os.Bundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Android.Util.AttributeSet"/></param>
        /// <param name="arg2"><see cref="Android.Os.Bundle"/></param>
        /// <exception cref="Org.Xmlpull.V1.XmlPullParserException"/>
        public void ParseBundleExtra(Java.Lang.String arg0, Android.Util.AttributeSet arg1, Android.Os.Bundle arg2)
        {
            IExecute("parseBundleExtra", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/Resources.html#parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Res.XmlResourceParser"/></param>
        /// <param name="arg1"><see cref="Android.Os.Bundle"/></param>
        /// <exception cref="Java.Io.IOException"/>
        /// <exception cref="Org.Xmlpull.V1.XmlPullParserException"/>
        public void ParseBundleExtras(Android.Content.Res.XmlResourceParser arg0, Android.Os.Bundle arg1)
        {
            IExecute("parseBundleExtras", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/Resources.html#removeLoaders(android.content.res.loader.ResourcesLoader[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Res.Loader.ResourcesLoader"/></param>
        public void RemoveLoaders(params Android.Content.Res.Loader.ResourcesLoader[] arg0)
        {
            if (arg0.Length == 0) IExecuteWithSignature("removeLoaders", "([Landroid/content/res/loader/ResourcesLoader;)V"); else IExecuteWithSignature("removeLoaders", "([Landroid/content/res/loader/ResourcesLoader;)V", arg0);
        }

        #endregion

        #region Nested classes
        #region NotFoundException
        public partial class NotFoundException
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region Theme
        public partial class Theme
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/res/Resources.Theme.html#getChangingConfigurations()"/> 
            /// </summary>
            public int ChangingConfigurations
            {
                get { return IExecuteWithSignature<int>("getChangingConfigurations", "()I"); }
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/res/Resources.Theme.html#getResources()"/> 
            /// </summary>
            public Android.Content.Res.Resources GetResources
            {
                get { return IExecuteWithSignature<Android.Content.Res.Resources>("getResources", "()Landroid/content/res/Resources;"); }
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/res/Resources.Theme.html#obtainStyledAttributes(android.util.AttributeSet,int[],int,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Util.AttributeSet"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            /// <param name="arg2"><see cref="int"/></param>
            /// <param name="arg3"><see cref="int"/></param>
            /// <returns><see cref="Android.Content.Res.TypedArray"/></returns>
            public Android.Content.Res.TypedArray ObtainStyledAttributes(Android.Util.AttributeSet arg0, int[] arg1, int arg2, int arg3)
            {
                return IExecute<Android.Content.Res.TypedArray>("obtainStyledAttributes", arg0, arg1, arg2, arg3);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/res/Resources.Theme.html#obtainStyledAttributes(int,int[])"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            /// <returns><see cref="Android.Content.Res.TypedArray"/></returns>
            /// <exception cref="Android.Content.Res.Resources.NotFoundException"/>
            public Android.Content.Res.TypedArray ObtainStyledAttributes(int arg0, int[] arg1)
            {
                return IExecute<Android.Content.Res.TypedArray>("obtainStyledAttributes", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/res/Resources.Theme.html#obtainStyledAttributes(int[])"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <returns><see cref="Android.Content.Res.TypedArray"/></returns>
            public Android.Content.Res.TypedArray ObtainStyledAttributes(int[] arg0)
            {
                return IExecuteWithSignature<Android.Content.Res.TypedArray>("obtainStyledAttributes", "([I)Landroid/content/res/TypedArray;", new object[] { arg0 });
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/res/Resources.Theme.html#getDrawable(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <returns><see cref="Android.Graphics.Drawable.Drawable"/></returns>
            /// <exception cref="Android.Content.Res.Resources.NotFoundException"/>
            public Android.Graphics.Drawable.Drawable GetDrawable(int arg0)
            {
                return IExecuteWithSignature<Android.Graphics.Drawable.Drawable>("getDrawable", "(I)Landroid/graphics/drawable/Drawable;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/res/Resources.Theme.html#getExplicitStyle(android.util.AttributeSet)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Util.AttributeSet"/></param>
            /// <returns><see cref="int"/></returns>
            public int GetExplicitStyle(Android.Util.AttributeSet arg0)
            {
                return IExecuteWithSignature<int>("getExplicitStyle", "(Landroid/util/AttributeSet;)I", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/res/Resources.Theme.html#getAttributeResolutionStack(int,int,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            /// <param name="arg2"><see cref="int"/></param>
            /// <returns><see cref="int"/></returns>
            public int[] GetAttributeResolutionStack(int arg0, int arg1, int arg2)
            {
                return IExecuteArray<int>("getAttributeResolutionStack", arg0, arg1, arg2);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/res/Resources.Theme.html#applyStyle(int,boolean)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <param name="arg1"><see cref="bool"/></param>
            public void ApplyStyle(int arg0, bool arg1)
            {
                IExecute("applyStyle", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/res/Resources.Theme.html#dump(int,java.lang.String,java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <param name="arg1"><see cref="Java.Lang.String"/></param>
            /// <param name="arg2"><see cref="Java.Lang.String"/></param>
            public void Dump(int arg0, Java.Lang.String arg1, Java.Lang.String arg2)
            {
                IExecute("dump", arg0, arg1, arg2);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/res/Resources.Theme.html#rebase()"/>
            /// </summary>
            public void Rebase()
            {
                IExecuteWithSignature("rebase", "()V");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/res/Resources.Theme.html#setTo(android.content.res.Resources.Theme)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Content.Res.Resources.Theme"/></param>
            public void SetTo(Android.Content.Res.Resources.Theme arg0)
            {
                IExecuteWithSignature("setTo", "(Landroid/content/res/Resources$Theme;)V", arg0);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}