/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.4.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Content.Res
{
    #region AssetManager
    public partial class AssetManager
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/AssetManager.html#ACCESS_BUFFER"/>
        /// </summary>
        public static int ACCESS_BUFFER { get { if (!_ACCESS_BUFFERReady) { _ACCESS_BUFFERContent = SGetField<int>(LocalBridgeClazz, "ACCESS_BUFFER"); _ACCESS_BUFFERReady = true; } return _ACCESS_BUFFERContent; } }
        private static int _ACCESS_BUFFERContent = default;
        private static bool _ACCESS_BUFFERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/AssetManager.html#ACCESS_RANDOM"/>
        /// </summary>
        public static int ACCESS_RANDOM { get { if (!_ACCESS_RANDOMReady) { _ACCESS_RANDOMContent = SGetField<int>(LocalBridgeClazz, "ACCESS_RANDOM"); _ACCESS_RANDOMReady = true; } return _ACCESS_RANDOMContent; } }
        private static int _ACCESS_RANDOMContent = default;
        private static bool _ACCESS_RANDOMReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/AssetManager.html#ACCESS_STREAMING"/>
        /// </summary>
        public static int ACCESS_STREAMING { get { if (!_ACCESS_STREAMINGReady) { _ACCESS_STREAMINGContent = SGetField<int>(LocalBridgeClazz, "ACCESS_STREAMING"); _ACCESS_STREAMINGReady = true; } return _ACCESS_STREAMINGContent; } }
        private static int _ACCESS_STREAMINGContent = default;
        private static bool _ACCESS_STREAMINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/AssetManager.html#ACCESS_UNKNOWN"/>
        /// </summary>
        public static int ACCESS_UNKNOWN { get { if (!_ACCESS_UNKNOWNReady) { _ACCESS_UNKNOWNContent = SGetField<int>(LocalBridgeClazz, "ACCESS_UNKNOWN"); _ACCESS_UNKNOWNReady = true; } return _ACCESS_UNKNOWNContent; } }
        private static int _ACCESS_UNKNOWNContent = default;
        private static bool _ACCESS_UNKNOWNReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/AssetManager.html#openFd(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Android.Content.Res.AssetFileDescriptor"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public Android.Content.Res.AssetFileDescriptor OpenFd(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<Android.Content.Res.AssetFileDescriptor>("openFd", "(Ljava/lang/String;)Landroid/content/res/AssetFileDescriptor;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/AssetManager.html#openNonAssetFd(int,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Android.Content.Res.AssetFileDescriptor"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public Android.Content.Res.AssetFileDescriptor OpenNonAssetFd(int arg0, Java.Lang.String arg1)
        {
            return IExecute<Android.Content.Res.AssetFileDescriptor>("openNonAssetFd", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/AssetManager.html#openNonAssetFd(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Android.Content.Res.AssetFileDescriptor"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public Android.Content.Res.AssetFileDescriptor OpenNonAssetFd(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<Android.Content.Res.AssetFileDescriptor>("openNonAssetFd", "(Ljava/lang/String;)Landroid/content/res/AssetFileDescriptor;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/AssetManager.html#openXmlResourceParser(int,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Android.Content.Res.XmlResourceParser"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public Android.Content.Res.XmlResourceParser OpenXmlResourceParser(int arg0, Java.Lang.String arg1)
        {
            return IExecute<Android.Content.Res.XmlResourceParser>("openXmlResourceParser", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/AssetManager.html#openXmlResourceParser(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Android.Content.Res.XmlResourceParser"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public Android.Content.Res.XmlResourceParser OpenXmlResourceParser(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<Android.Content.Res.XmlResourceParser>("openXmlResourceParser", "(Ljava/lang/String;)Landroid/content/res/XmlResourceParser;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/AssetManager.html#open(java.lang.String,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="Java.Io.InputStream"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public Java.Io.InputStream Open(Java.Lang.String arg0, int arg1)
        {
            return IExecute<Java.Io.InputStream>("open", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/AssetManager.html#open(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Java.Io.InputStream"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public Java.Io.InputStream Open(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<Java.Io.InputStream>("open", "(Ljava/lang/String;)Ljava/io/InputStream;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/AssetManager.html#getLocales()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String[] GetLocales()
        {
            return IExecuteWithSignatureArray<Java.Lang.String>("getLocales", "()[Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/AssetManager.html#list(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public Java.Lang.String[] List(Java.Lang.String arg0)
        {
            return IExecuteWithSignatureArray<Java.Lang.String>("list", "(Ljava/lang/String;)[Ljava/lang/String;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/res/AssetManager.html#close()"/>
        /// </summary>
        public void Close()
        {
            IExecuteWithSignature("close", "()V");
        }

        #endregion

        #region Nested classes
        #region AssetInputStream
        public partial class AssetInputStream
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}