/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.9.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Content
{
    #region Intent declaration
    /// <summary>
    /// <see href="https://developer.android.com/reference/android/content/Intent.html"/>
    /// </summary>
    public partial class Intent : MASES.JCOBridge.C2JBridge.JVMBridgeBase<Intent>
    {
        const string _bridgeClassName = "android.content.Intent";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public Intent() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public Intent(params object[] args) : base(args) { }

        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class
        #region FilterComparison declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.FilterComparison.html"/>
        /// </summary>
        public partial class FilterComparison : MASES.JCOBridge.C2JBridge.JVMBridgeBase<FilterComparison>
        {
            const string _bridgeClassName = "android.content.Intent$FilterComparison";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public FilterComparison() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public FilterComparison(params object[] args) : base(args) { }

            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;

            // TODO: complete the class

        }
        #endregion

        #region ShortcutIconResource declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.ShortcutIconResource.html"/>
        /// </summary>
        public partial class ShortcutIconResource : Android.Os.Parcelable
        {
            const string _bridgeClassName = "android.content.Intent$ShortcutIconResource";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public ShortcutIconResource() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public ShortcutIconResource(params object[] args) : base(args) { }

            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;

            // TODO: complete the class

        }
        #endregion

    
    }
    #endregion

    #region Intent implementation
    public partial class Intent : Android.Os.IParcelable, Java.Lang.ICloneable
    {
        #region Constructors
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#%3Cinit%3E(android.content.Context,java.lang.Class)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        /// <param name="arg1"><see cref="Java.Lang.Class"/></param>
        public Intent(Android.Content.Context arg0, Java.Lang.Class arg1)
            : base(arg0, arg1)
        {
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#%3Cinit%3E(android.content.Intent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        public Intent(Android.Content.Intent arg0)
            : base(arg0)
        {
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#%3Cinit%3E(java.lang.String,android.net.Uri,android.content.Context,java.lang.Class)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Android.Net.Uri"/></param>
        /// <param name="arg2"><see cref="Android.Content.Context"/></param>
        /// <param name="arg3"><see cref="Java.Lang.Class"/></param>
        public Intent(Java.Lang.String arg0, Android.Net.Uri arg1, Android.Content.Context arg2, Java.Lang.Class arg3)
            : base(arg0, arg1, arg2, arg3)
        {
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#%3Cinit%3E(java.lang.String,android.net.Uri)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Android.Net.Uri"/></param>
        public Intent(Java.Lang.String arg0, Android.Net.Uri arg1)
            : base(arg0, arg1)
        {
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#%3Cinit%3E(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        public Intent(Java.Lang.String arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Android.Content.Intent"/> to <see cref="Android.Os.Parcelable"/>
        /// </summary>
        public static implicit operator Android.Os.Parcelable(Android.Content.Intent t) => t.Cast<Android.Os.Parcelable>();
        /// <summary>
        /// Converter from <see cref="Android.Content.Intent"/> to <see cref="Java.Lang.Cloneable"/>
        /// </summary>
        public static implicit operator Java.Lang.Cloneable(Android.Content.Intent t) => t.Cast<Java.Lang.Cloneable>();

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#CREATOR"/>
        /// </summary>
        public static Android.Os.Parcelable.Creator CREATOR { get { if (!_CREATORReady) { _CREATORContent = SGetField<Android.Os.Parcelable.Creator>(LocalBridgeClazz, "CREATOR"); _CREATORReady = true; } return _CREATORContent; } }
        private static Android.Os.Parcelable.Creator _CREATORContent = default;
        private static bool _CREATORReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#CAPTURE_CONTENT_FOR_NOTE_BLOCKED_BY_ADMIN"/>
        /// </summary>
        public static int CAPTURE_CONTENT_FOR_NOTE_BLOCKED_BY_ADMIN { get { if (!_CAPTURE_CONTENT_FOR_NOTE_BLOCKED_BY_ADMINReady) { _CAPTURE_CONTENT_FOR_NOTE_BLOCKED_BY_ADMINContent = SGetField<int>(LocalBridgeClazz, "CAPTURE_CONTENT_FOR_NOTE_BLOCKED_BY_ADMIN"); _CAPTURE_CONTENT_FOR_NOTE_BLOCKED_BY_ADMINReady = true; } return _CAPTURE_CONTENT_FOR_NOTE_BLOCKED_BY_ADMINContent; } }
        private static int _CAPTURE_CONTENT_FOR_NOTE_BLOCKED_BY_ADMINContent = default;
        private static bool _CAPTURE_CONTENT_FOR_NOTE_BLOCKED_BY_ADMINReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#CAPTURE_CONTENT_FOR_NOTE_FAILED"/>
        /// </summary>
        public static int CAPTURE_CONTENT_FOR_NOTE_FAILED { get { if (!_CAPTURE_CONTENT_FOR_NOTE_FAILEDReady) { _CAPTURE_CONTENT_FOR_NOTE_FAILEDContent = SGetField<int>(LocalBridgeClazz, "CAPTURE_CONTENT_FOR_NOTE_FAILED"); _CAPTURE_CONTENT_FOR_NOTE_FAILEDReady = true; } return _CAPTURE_CONTENT_FOR_NOTE_FAILEDContent; } }
        private static int _CAPTURE_CONTENT_FOR_NOTE_FAILEDContent = default;
        private static bool _CAPTURE_CONTENT_FOR_NOTE_FAILEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#CAPTURE_CONTENT_FOR_NOTE_SUCCESS"/>
        /// </summary>
        public static int CAPTURE_CONTENT_FOR_NOTE_SUCCESS { get { if (!_CAPTURE_CONTENT_FOR_NOTE_SUCCESSReady) { _CAPTURE_CONTENT_FOR_NOTE_SUCCESSContent = SGetField<int>(LocalBridgeClazz, "CAPTURE_CONTENT_FOR_NOTE_SUCCESS"); _CAPTURE_CONTENT_FOR_NOTE_SUCCESSReady = true; } return _CAPTURE_CONTENT_FOR_NOTE_SUCCESSContent; } }
        private static int _CAPTURE_CONTENT_FOR_NOTE_SUCCESSContent = default;
        private static bool _CAPTURE_CONTENT_FOR_NOTE_SUCCESSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#CAPTURE_CONTENT_FOR_NOTE_USER_CANCELED"/>
        /// </summary>
        public static int CAPTURE_CONTENT_FOR_NOTE_USER_CANCELED { get { if (!_CAPTURE_CONTENT_FOR_NOTE_USER_CANCELEDReady) { _CAPTURE_CONTENT_FOR_NOTE_USER_CANCELEDContent = SGetField<int>(LocalBridgeClazz, "CAPTURE_CONTENT_FOR_NOTE_USER_CANCELED"); _CAPTURE_CONTENT_FOR_NOTE_USER_CANCELEDReady = true; } return _CAPTURE_CONTENT_FOR_NOTE_USER_CANCELEDContent; } }
        private static int _CAPTURE_CONTENT_FOR_NOTE_USER_CANCELEDContent = default;
        private static bool _CAPTURE_CONTENT_FOR_NOTE_USER_CANCELEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#CAPTURE_CONTENT_FOR_NOTE_WINDOW_MODE_UNSUPPORTED"/>
        /// </summary>
        public static int CAPTURE_CONTENT_FOR_NOTE_WINDOW_MODE_UNSUPPORTED { get { if (!_CAPTURE_CONTENT_FOR_NOTE_WINDOW_MODE_UNSUPPORTEDReady) { _CAPTURE_CONTENT_FOR_NOTE_WINDOW_MODE_UNSUPPORTEDContent = SGetField<int>(LocalBridgeClazz, "CAPTURE_CONTENT_FOR_NOTE_WINDOW_MODE_UNSUPPORTED"); _CAPTURE_CONTENT_FOR_NOTE_WINDOW_MODE_UNSUPPORTEDReady = true; } return _CAPTURE_CONTENT_FOR_NOTE_WINDOW_MODE_UNSUPPORTEDContent; } }
        private static int _CAPTURE_CONTENT_FOR_NOTE_WINDOW_MODE_UNSUPPORTEDContent = default;
        private static bool _CAPTURE_CONTENT_FOR_NOTE_WINDOW_MODE_UNSUPPORTEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#CHOOSER_CONTENT_TYPE_ALBUM"/>
        /// </summary>
        public static int CHOOSER_CONTENT_TYPE_ALBUM { get { if (!_CHOOSER_CONTENT_TYPE_ALBUMReady) { _CHOOSER_CONTENT_TYPE_ALBUMContent = SGetField<int>(LocalBridgeClazz, "CHOOSER_CONTENT_TYPE_ALBUM"); _CHOOSER_CONTENT_TYPE_ALBUMReady = true; } return _CHOOSER_CONTENT_TYPE_ALBUMContent; } }
        private static int _CHOOSER_CONTENT_TYPE_ALBUMContent = default;
        private static bool _CHOOSER_CONTENT_TYPE_ALBUMReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_DOCK_STATE_CAR"/>
        /// </summary>
        public static int EXTRA_DOCK_STATE_CAR { get { if (!_EXTRA_DOCK_STATE_CARReady) { _EXTRA_DOCK_STATE_CARContent = SGetField<int>(LocalBridgeClazz, "EXTRA_DOCK_STATE_CAR"); _EXTRA_DOCK_STATE_CARReady = true; } return _EXTRA_DOCK_STATE_CARContent; } }
        private static int _EXTRA_DOCK_STATE_CARContent = default;
        private static bool _EXTRA_DOCK_STATE_CARReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_DOCK_STATE_DESK"/>
        /// </summary>
        public static int EXTRA_DOCK_STATE_DESK { get { if (!_EXTRA_DOCK_STATE_DESKReady) { _EXTRA_DOCK_STATE_DESKContent = SGetField<int>(LocalBridgeClazz, "EXTRA_DOCK_STATE_DESK"); _EXTRA_DOCK_STATE_DESKReady = true; } return _EXTRA_DOCK_STATE_DESKContent; } }
        private static int _EXTRA_DOCK_STATE_DESKContent = default;
        private static bool _EXTRA_DOCK_STATE_DESKReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_DOCK_STATE_HE_DESK"/>
        /// </summary>
        public static int EXTRA_DOCK_STATE_HE_DESK { get { if (!_EXTRA_DOCK_STATE_HE_DESKReady) { _EXTRA_DOCK_STATE_HE_DESKContent = SGetField<int>(LocalBridgeClazz, "EXTRA_DOCK_STATE_HE_DESK"); _EXTRA_DOCK_STATE_HE_DESKReady = true; } return _EXTRA_DOCK_STATE_HE_DESKContent; } }
        private static int _EXTRA_DOCK_STATE_HE_DESKContent = default;
        private static bool _EXTRA_DOCK_STATE_HE_DESKReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_DOCK_STATE_LE_DESK"/>
        /// </summary>
        public static int EXTRA_DOCK_STATE_LE_DESK { get { if (!_EXTRA_DOCK_STATE_LE_DESKReady) { _EXTRA_DOCK_STATE_LE_DESKContent = SGetField<int>(LocalBridgeClazz, "EXTRA_DOCK_STATE_LE_DESK"); _EXTRA_DOCK_STATE_LE_DESKReady = true; } return _EXTRA_DOCK_STATE_LE_DESKContent; } }
        private static int _EXTRA_DOCK_STATE_LE_DESKContent = default;
        private static bool _EXTRA_DOCK_STATE_LE_DESKReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_DOCK_STATE_UNDOCKED"/>
        /// </summary>
        public static int EXTRA_DOCK_STATE_UNDOCKED { get { if (!_EXTRA_DOCK_STATE_UNDOCKEDReady) { _EXTRA_DOCK_STATE_UNDOCKEDContent = SGetField<int>(LocalBridgeClazz, "EXTRA_DOCK_STATE_UNDOCKED"); _EXTRA_DOCK_STATE_UNDOCKEDReady = true; } return _EXTRA_DOCK_STATE_UNDOCKEDContent; } }
        private static int _EXTRA_DOCK_STATE_UNDOCKEDContent = default;
        private static bool _EXTRA_DOCK_STATE_UNDOCKEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#FILL_IN_ACTION"/>
        /// </summary>
        public static int FILL_IN_ACTION { get { if (!_FILL_IN_ACTIONReady) { _FILL_IN_ACTIONContent = SGetField<int>(LocalBridgeClazz, "FILL_IN_ACTION"); _FILL_IN_ACTIONReady = true; } return _FILL_IN_ACTIONContent; } }
        private static int _FILL_IN_ACTIONContent = default;
        private static bool _FILL_IN_ACTIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#FILL_IN_CATEGORIES"/>
        /// </summary>
        public static int FILL_IN_CATEGORIES { get { if (!_FILL_IN_CATEGORIESReady) { _FILL_IN_CATEGORIESContent = SGetField<int>(LocalBridgeClazz, "FILL_IN_CATEGORIES"); _FILL_IN_CATEGORIESReady = true; } return _FILL_IN_CATEGORIESContent; } }
        private static int _FILL_IN_CATEGORIESContent = default;
        private static bool _FILL_IN_CATEGORIESReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#FILL_IN_CLIP_DATA"/>
        /// </summary>
        public static int FILL_IN_CLIP_DATA { get { if (!_FILL_IN_CLIP_DATAReady) { _FILL_IN_CLIP_DATAContent = SGetField<int>(LocalBridgeClazz, "FILL_IN_CLIP_DATA"); _FILL_IN_CLIP_DATAReady = true; } return _FILL_IN_CLIP_DATAContent; } }
        private static int _FILL_IN_CLIP_DATAContent = default;
        private static bool _FILL_IN_CLIP_DATAReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#FILL_IN_COMPONENT"/>
        /// </summary>
        public static int FILL_IN_COMPONENT { get { if (!_FILL_IN_COMPONENTReady) { _FILL_IN_COMPONENTContent = SGetField<int>(LocalBridgeClazz, "FILL_IN_COMPONENT"); _FILL_IN_COMPONENTReady = true; } return _FILL_IN_COMPONENTContent; } }
        private static int _FILL_IN_COMPONENTContent = default;
        private static bool _FILL_IN_COMPONENTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#FILL_IN_DATA"/>
        /// </summary>
        public static int FILL_IN_DATA { get { if (!_FILL_IN_DATAReady) { _FILL_IN_DATAContent = SGetField<int>(LocalBridgeClazz, "FILL_IN_DATA"); _FILL_IN_DATAReady = true; } return _FILL_IN_DATAContent; } }
        private static int _FILL_IN_DATAContent = default;
        private static bool _FILL_IN_DATAReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#FILL_IN_IDENTIFIER"/>
        /// </summary>
        public static int FILL_IN_IDENTIFIER { get { if (!_FILL_IN_IDENTIFIERReady) { _FILL_IN_IDENTIFIERContent = SGetField<int>(LocalBridgeClazz, "FILL_IN_IDENTIFIER"); _FILL_IN_IDENTIFIERReady = true; } return _FILL_IN_IDENTIFIERContent; } }
        private static int _FILL_IN_IDENTIFIERContent = default;
        private static bool _FILL_IN_IDENTIFIERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#FILL_IN_PACKAGE"/>
        /// </summary>
        public static int FILL_IN_PACKAGE { get { if (!_FILL_IN_PACKAGEReady) { _FILL_IN_PACKAGEContent = SGetField<int>(LocalBridgeClazz, "FILL_IN_PACKAGE"); _FILL_IN_PACKAGEReady = true; } return _FILL_IN_PACKAGEContent; } }
        private static int _FILL_IN_PACKAGEContent = default;
        private static bool _FILL_IN_PACKAGEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#FILL_IN_SELECTOR"/>
        /// </summary>
        public static int FILL_IN_SELECTOR { get { if (!_FILL_IN_SELECTORReady) { _FILL_IN_SELECTORContent = SGetField<int>(LocalBridgeClazz, "FILL_IN_SELECTOR"); _FILL_IN_SELECTORReady = true; } return _FILL_IN_SELECTORContent; } }
        private static int _FILL_IN_SELECTORContent = default;
        private static bool _FILL_IN_SELECTORReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#FILL_IN_SOURCE_BOUNDS"/>
        /// </summary>
        public static int FILL_IN_SOURCE_BOUNDS { get { if (!_FILL_IN_SOURCE_BOUNDSReady) { _FILL_IN_SOURCE_BOUNDSContent = SGetField<int>(LocalBridgeClazz, "FILL_IN_SOURCE_BOUNDS"); _FILL_IN_SOURCE_BOUNDSReady = true; } return _FILL_IN_SOURCE_BOUNDSContent; } }
        private static int _FILL_IN_SOURCE_BOUNDSContent = default;
        private static bool _FILL_IN_SOURCE_BOUNDSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#FLAG_ACTIVITY_BROUGHT_TO_FRONT"/>
        /// </summary>
        public static int FLAG_ACTIVITY_BROUGHT_TO_FRONT { get { if (!_FLAG_ACTIVITY_BROUGHT_TO_FRONTReady) { _FLAG_ACTIVITY_BROUGHT_TO_FRONTContent = SGetField<int>(LocalBridgeClazz, "FLAG_ACTIVITY_BROUGHT_TO_FRONT"); _FLAG_ACTIVITY_BROUGHT_TO_FRONTReady = true; } return _FLAG_ACTIVITY_BROUGHT_TO_FRONTContent; } }
        private static int _FLAG_ACTIVITY_BROUGHT_TO_FRONTContent = default;
        private static bool _FLAG_ACTIVITY_BROUGHT_TO_FRONTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#FLAG_ACTIVITY_CLEAR_TASK"/>
        /// </summary>
        public static int FLAG_ACTIVITY_CLEAR_TASK { get { if (!_FLAG_ACTIVITY_CLEAR_TASKReady) { _FLAG_ACTIVITY_CLEAR_TASKContent = SGetField<int>(LocalBridgeClazz, "FLAG_ACTIVITY_CLEAR_TASK"); _FLAG_ACTIVITY_CLEAR_TASKReady = true; } return _FLAG_ACTIVITY_CLEAR_TASKContent; } }
        private static int _FLAG_ACTIVITY_CLEAR_TASKContent = default;
        private static bool _FLAG_ACTIVITY_CLEAR_TASKReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#FLAG_ACTIVITY_CLEAR_TOP"/>
        /// </summary>
        public static int FLAG_ACTIVITY_CLEAR_TOP { get { if (!_FLAG_ACTIVITY_CLEAR_TOPReady) { _FLAG_ACTIVITY_CLEAR_TOPContent = SGetField<int>(LocalBridgeClazz, "FLAG_ACTIVITY_CLEAR_TOP"); _FLAG_ACTIVITY_CLEAR_TOPReady = true; } return _FLAG_ACTIVITY_CLEAR_TOPContent; } }
        private static int _FLAG_ACTIVITY_CLEAR_TOPContent = default;
        private static bool _FLAG_ACTIVITY_CLEAR_TOPReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET"/>
        /// </summary>
        [global::System.Obsolete()]
        public static int FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET { get { if (!_FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESETReady) { _FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESETContent = SGetField<int>(LocalBridgeClazz, "FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET"); _FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESETReady = true; } return _FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESETContent; } }
        private static int _FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESETContent = default;
        private static bool _FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESETReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS"/>
        /// </summary>
        public static int FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS { get { if (!_FLAG_ACTIVITY_EXCLUDE_FROM_RECENTSReady) { _FLAG_ACTIVITY_EXCLUDE_FROM_RECENTSContent = SGetField<int>(LocalBridgeClazz, "FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS"); _FLAG_ACTIVITY_EXCLUDE_FROM_RECENTSReady = true; } return _FLAG_ACTIVITY_EXCLUDE_FROM_RECENTSContent; } }
        private static int _FLAG_ACTIVITY_EXCLUDE_FROM_RECENTSContent = default;
        private static bool _FLAG_ACTIVITY_EXCLUDE_FROM_RECENTSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#FLAG_ACTIVITY_FORWARD_RESULT"/>
        /// </summary>
        public static int FLAG_ACTIVITY_FORWARD_RESULT { get { if (!_FLAG_ACTIVITY_FORWARD_RESULTReady) { _FLAG_ACTIVITY_FORWARD_RESULTContent = SGetField<int>(LocalBridgeClazz, "FLAG_ACTIVITY_FORWARD_RESULT"); _FLAG_ACTIVITY_FORWARD_RESULTReady = true; } return _FLAG_ACTIVITY_FORWARD_RESULTContent; } }
        private static int _FLAG_ACTIVITY_FORWARD_RESULTContent = default;
        private static bool _FLAG_ACTIVITY_FORWARD_RESULTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#FLAG_ACTIVITY_LAUNCH_ADJACENT"/>
        /// </summary>
        public static int FLAG_ACTIVITY_LAUNCH_ADJACENT { get { if (!_FLAG_ACTIVITY_LAUNCH_ADJACENTReady) { _FLAG_ACTIVITY_LAUNCH_ADJACENTContent = SGetField<int>(LocalBridgeClazz, "FLAG_ACTIVITY_LAUNCH_ADJACENT"); _FLAG_ACTIVITY_LAUNCH_ADJACENTReady = true; } return _FLAG_ACTIVITY_LAUNCH_ADJACENTContent; } }
        private static int _FLAG_ACTIVITY_LAUNCH_ADJACENTContent = default;
        private static bool _FLAG_ACTIVITY_LAUNCH_ADJACENTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#FLAG_ACTIVITY_LAUNCHED_FROM_HISTORY"/>
        /// </summary>
        public static int FLAG_ACTIVITY_LAUNCHED_FROM_HISTORY { get { if (!_FLAG_ACTIVITY_LAUNCHED_FROM_HISTORYReady) { _FLAG_ACTIVITY_LAUNCHED_FROM_HISTORYContent = SGetField<int>(LocalBridgeClazz, "FLAG_ACTIVITY_LAUNCHED_FROM_HISTORY"); _FLAG_ACTIVITY_LAUNCHED_FROM_HISTORYReady = true; } return _FLAG_ACTIVITY_LAUNCHED_FROM_HISTORYContent; } }
        private static int _FLAG_ACTIVITY_LAUNCHED_FROM_HISTORYContent = default;
        private static bool _FLAG_ACTIVITY_LAUNCHED_FROM_HISTORYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#FLAG_ACTIVITY_MATCH_EXTERNAL"/>
        /// </summary>
        public static int FLAG_ACTIVITY_MATCH_EXTERNAL { get { if (!_FLAG_ACTIVITY_MATCH_EXTERNALReady) { _FLAG_ACTIVITY_MATCH_EXTERNALContent = SGetField<int>(LocalBridgeClazz, "FLAG_ACTIVITY_MATCH_EXTERNAL"); _FLAG_ACTIVITY_MATCH_EXTERNALReady = true; } return _FLAG_ACTIVITY_MATCH_EXTERNALContent; } }
        private static int _FLAG_ACTIVITY_MATCH_EXTERNALContent = default;
        private static bool _FLAG_ACTIVITY_MATCH_EXTERNALReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#FLAG_ACTIVITY_MULTIPLE_TASK"/>
        /// </summary>
        public static int FLAG_ACTIVITY_MULTIPLE_TASK { get { if (!_FLAG_ACTIVITY_MULTIPLE_TASKReady) { _FLAG_ACTIVITY_MULTIPLE_TASKContent = SGetField<int>(LocalBridgeClazz, "FLAG_ACTIVITY_MULTIPLE_TASK"); _FLAG_ACTIVITY_MULTIPLE_TASKReady = true; } return _FLAG_ACTIVITY_MULTIPLE_TASKContent; } }
        private static int _FLAG_ACTIVITY_MULTIPLE_TASKContent = default;
        private static bool _FLAG_ACTIVITY_MULTIPLE_TASKReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#FLAG_ACTIVITY_NEW_DOCUMENT"/>
        /// </summary>
        public static int FLAG_ACTIVITY_NEW_DOCUMENT { get { if (!_FLAG_ACTIVITY_NEW_DOCUMENTReady) { _FLAG_ACTIVITY_NEW_DOCUMENTContent = SGetField<int>(LocalBridgeClazz, "FLAG_ACTIVITY_NEW_DOCUMENT"); _FLAG_ACTIVITY_NEW_DOCUMENTReady = true; } return _FLAG_ACTIVITY_NEW_DOCUMENTContent; } }
        private static int _FLAG_ACTIVITY_NEW_DOCUMENTContent = default;
        private static bool _FLAG_ACTIVITY_NEW_DOCUMENTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#FLAG_ACTIVITY_NEW_TASK"/>
        /// </summary>
        public static int FLAG_ACTIVITY_NEW_TASK { get { if (!_FLAG_ACTIVITY_NEW_TASKReady) { _FLAG_ACTIVITY_NEW_TASKContent = SGetField<int>(LocalBridgeClazz, "FLAG_ACTIVITY_NEW_TASK"); _FLAG_ACTIVITY_NEW_TASKReady = true; } return _FLAG_ACTIVITY_NEW_TASKContent; } }
        private static int _FLAG_ACTIVITY_NEW_TASKContent = default;
        private static bool _FLAG_ACTIVITY_NEW_TASKReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#FLAG_ACTIVITY_NO_ANIMATION"/>
        /// </summary>
        public static int FLAG_ACTIVITY_NO_ANIMATION { get { if (!_FLAG_ACTIVITY_NO_ANIMATIONReady) { _FLAG_ACTIVITY_NO_ANIMATIONContent = SGetField<int>(LocalBridgeClazz, "FLAG_ACTIVITY_NO_ANIMATION"); _FLAG_ACTIVITY_NO_ANIMATIONReady = true; } return _FLAG_ACTIVITY_NO_ANIMATIONContent; } }
        private static int _FLAG_ACTIVITY_NO_ANIMATIONContent = default;
        private static bool _FLAG_ACTIVITY_NO_ANIMATIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#FLAG_ACTIVITY_NO_HISTORY"/>
        /// </summary>
        public static int FLAG_ACTIVITY_NO_HISTORY { get { if (!_FLAG_ACTIVITY_NO_HISTORYReady) { _FLAG_ACTIVITY_NO_HISTORYContent = SGetField<int>(LocalBridgeClazz, "FLAG_ACTIVITY_NO_HISTORY"); _FLAG_ACTIVITY_NO_HISTORYReady = true; } return _FLAG_ACTIVITY_NO_HISTORYContent; } }
        private static int _FLAG_ACTIVITY_NO_HISTORYContent = default;
        private static bool _FLAG_ACTIVITY_NO_HISTORYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#FLAG_ACTIVITY_NO_USER_ACTION"/>
        /// </summary>
        public static int FLAG_ACTIVITY_NO_USER_ACTION { get { if (!_FLAG_ACTIVITY_NO_USER_ACTIONReady) { _FLAG_ACTIVITY_NO_USER_ACTIONContent = SGetField<int>(LocalBridgeClazz, "FLAG_ACTIVITY_NO_USER_ACTION"); _FLAG_ACTIVITY_NO_USER_ACTIONReady = true; } return _FLAG_ACTIVITY_NO_USER_ACTIONContent; } }
        private static int _FLAG_ACTIVITY_NO_USER_ACTIONContent = default;
        private static bool _FLAG_ACTIVITY_NO_USER_ACTIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#FLAG_ACTIVITY_PREVIOUS_IS_TOP"/>
        /// </summary>
        public static int FLAG_ACTIVITY_PREVIOUS_IS_TOP { get { if (!_FLAG_ACTIVITY_PREVIOUS_IS_TOPReady) { _FLAG_ACTIVITY_PREVIOUS_IS_TOPContent = SGetField<int>(LocalBridgeClazz, "FLAG_ACTIVITY_PREVIOUS_IS_TOP"); _FLAG_ACTIVITY_PREVIOUS_IS_TOPReady = true; } return _FLAG_ACTIVITY_PREVIOUS_IS_TOPContent; } }
        private static int _FLAG_ACTIVITY_PREVIOUS_IS_TOPContent = default;
        private static bool _FLAG_ACTIVITY_PREVIOUS_IS_TOPReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#FLAG_ACTIVITY_REORDER_TO_FRONT"/>
        /// </summary>
        public static int FLAG_ACTIVITY_REORDER_TO_FRONT { get { if (!_FLAG_ACTIVITY_REORDER_TO_FRONTReady) { _FLAG_ACTIVITY_REORDER_TO_FRONTContent = SGetField<int>(LocalBridgeClazz, "FLAG_ACTIVITY_REORDER_TO_FRONT"); _FLAG_ACTIVITY_REORDER_TO_FRONTReady = true; } return _FLAG_ACTIVITY_REORDER_TO_FRONTContent; } }
        private static int _FLAG_ACTIVITY_REORDER_TO_FRONTContent = default;
        private static bool _FLAG_ACTIVITY_REORDER_TO_FRONTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#FLAG_ACTIVITY_REQUIRE_DEFAULT"/>
        /// </summary>
        public static int FLAG_ACTIVITY_REQUIRE_DEFAULT { get { if (!_FLAG_ACTIVITY_REQUIRE_DEFAULTReady) { _FLAG_ACTIVITY_REQUIRE_DEFAULTContent = SGetField<int>(LocalBridgeClazz, "FLAG_ACTIVITY_REQUIRE_DEFAULT"); _FLAG_ACTIVITY_REQUIRE_DEFAULTReady = true; } return _FLAG_ACTIVITY_REQUIRE_DEFAULTContent; } }
        private static int _FLAG_ACTIVITY_REQUIRE_DEFAULTContent = default;
        private static bool _FLAG_ACTIVITY_REQUIRE_DEFAULTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#FLAG_ACTIVITY_REQUIRE_NON_BROWSER"/>
        /// </summary>
        public static int FLAG_ACTIVITY_REQUIRE_NON_BROWSER { get { if (!_FLAG_ACTIVITY_REQUIRE_NON_BROWSERReady) { _FLAG_ACTIVITY_REQUIRE_NON_BROWSERContent = SGetField<int>(LocalBridgeClazz, "FLAG_ACTIVITY_REQUIRE_NON_BROWSER"); _FLAG_ACTIVITY_REQUIRE_NON_BROWSERReady = true; } return _FLAG_ACTIVITY_REQUIRE_NON_BROWSERContent; } }
        private static int _FLAG_ACTIVITY_REQUIRE_NON_BROWSERContent = default;
        private static bool _FLAG_ACTIVITY_REQUIRE_NON_BROWSERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#FLAG_ACTIVITY_RESET_TASK_IF_NEEDED"/>
        /// </summary>
        public static int FLAG_ACTIVITY_RESET_TASK_IF_NEEDED { get { if (!_FLAG_ACTIVITY_RESET_TASK_IF_NEEDEDReady) { _FLAG_ACTIVITY_RESET_TASK_IF_NEEDEDContent = SGetField<int>(LocalBridgeClazz, "FLAG_ACTIVITY_RESET_TASK_IF_NEEDED"); _FLAG_ACTIVITY_RESET_TASK_IF_NEEDEDReady = true; } return _FLAG_ACTIVITY_RESET_TASK_IF_NEEDEDContent; } }
        private static int _FLAG_ACTIVITY_RESET_TASK_IF_NEEDEDContent = default;
        private static bool _FLAG_ACTIVITY_RESET_TASK_IF_NEEDEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#FLAG_ACTIVITY_RETAIN_IN_RECENTS"/>
        /// </summary>
        public static int FLAG_ACTIVITY_RETAIN_IN_RECENTS { get { if (!_FLAG_ACTIVITY_RETAIN_IN_RECENTSReady) { _FLAG_ACTIVITY_RETAIN_IN_RECENTSContent = SGetField<int>(LocalBridgeClazz, "FLAG_ACTIVITY_RETAIN_IN_RECENTS"); _FLAG_ACTIVITY_RETAIN_IN_RECENTSReady = true; } return _FLAG_ACTIVITY_RETAIN_IN_RECENTSContent; } }
        private static int _FLAG_ACTIVITY_RETAIN_IN_RECENTSContent = default;
        private static bool _FLAG_ACTIVITY_RETAIN_IN_RECENTSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#FLAG_ACTIVITY_SINGLE_TOP"/>
        /// </summary>
        public static int FLAG_ACTIVITY_SINGLE_TOP { get { if (!_FLAG_ACTIVITY_SINGLE_TOPReady) { _FLAG_ACTIVITY_SINGLE_TOPContent = SGetField<int>(LocalBridgeClazz, "FLAG_ACTIVITY_SINGLE_TOP"); _FLAG_ACTIVITY_SINGLE_TOPReady = true; } return _FLAG_ACTIVITY_SINGLE_TOPContent; } }
        private static int _FLAG_ACTIVITY_SINGLE_TOPContent = default;
        private static bool _FLAG_ACTIVITY_SINGLE_TOPReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#FLAG_ACTIVITY_TASK_ON_HOME"/>
        /// </summary>
        public static int FLAG_ACTIVITY_TASK_ON_HOME { get { if (!_FLAG_ACTIVITY_TASK_ON_HOMEReady) { _FLAG_ACTIVITY_TASK_ON_HOMEContent = SGetField<int>(LocalBridgeClazz, "FLAG_ACTIVITY_TASK_ON_HOME"); _FLAG_ACTIVITY_TASK_ON_HOMEReady = true; } return _FLAG_ACTIVITY_TASK_ON_HOMEContent; } }
        private static int _FLAG_ACTIVITY_TASK_ON_HOMEContent = default;
        private static bool _FLAG_ACTIVITY_TASK_ON_HOMEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#FLAG_DEBUG_LOG_RESOLUTION"/>
        /// </summary>
        public static int FLAG_DEBUG_LOG_RESOLUTION { get { if (!_FLAG_DEBUG_LOG_RESOLUTIONReady) { _FLAG_DEBUG_LOG_RESOLUTIONContent = SGetField<int>(LocalBridgeClazz, "FLAG_DEBUG_LOG_RESOLUTION"); _FLAG_DEBUG_LOG_RESOLUTIONReady = true; } return _FLAG_DEBUG_LOG_RESOLUTIONContent; } }
        private static int _FLAG_DEBUG_LOG_RESOLUTIONContent = default;
        private static bool _FLAG_DEBUG_LOG_RESOLUTIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#FLAG_DIRECT_BOOT_AUTO"/>
        /// </summary>
        public static int FLAG_DIRECT_BOOT_AUTO { get { if (!_FLAG_DIRECT_BOOT_AUTOReady) { _FLAG_DIRECT_BOOT_AUTOContent = SGetField<int>(LocalBridgeClazz, "FLAG_DIRECT_BOOT_AUTO"); _FLAG_DIRECT_BOOT_AUTOReady = true; } return _FLAG_DIRECT_BOOT_AUTOContent; } }
        private static int _FLAG_DIRECT_BOOT_AUTOContent = default;
        private static bool _FLAG_DIRECT_BOOT_AUTOReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#FLAG_EXCLUDE_STOPPED_PACKAGES"/>
        /// </summary>
        public static int FLAG_EXCLUDE_STOPPED_PACKAGES { get { if (!_FLAG_EXCLUDE_STOPPED_PACKAGESReady) { _FLAG_EXCLUDE_STOPPED_PACKAGESContent = SGetField<int>(LocalBridgeClazz, "FLAG_EXCLUDE_STOPPED_PACKAGES"); _FLAG_EXCLUDE_STOPPED_PACKAGESReady = true; } return _FLAG_EXCLUDE_STOPPED_PACKAGESContent; } }
        private static int _FLAG_EXCLUDE_STOPPED_PACKAGESContent = default;
        private static bool _FLAG_EXCLUDE_STOPPED_PACKAGESReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#FLAG_FROM_BACKGROUND"/>
        /// </summary>
        public static int FLAG_FROM_BACKGROUND { get { if (!_FLAG_FROM_BACKGROUNDReady) { _FLAG_FROM_BACKGROUNDContent = SGetField<int>(LocalBridgeClazz, "FLAG_FROM_BACKGROUND"); _FLAG_FROM_BACKGROUNDReady = true; } return _FLAG_FROM_BACKGROUNDContent; } }
        private static int _FLAG_FROM_BACKGROUNDContent = default;
        private static bool _FLAG_FROM_BACKGROUNDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#FLAG_GRANT_PERSISTABLE_URI_PERMISSION"/>
        /// </summary>
        public static int FLAG_GRANT_PERSISTABLE_URI_PERMISSION { get { if (!_FLAG_GRANT_PERSISTABLE_URI_PERMISSIONReady) { _FLAG_GRANT_PERSISTABLE_URI_PERMISSIONContent = SGetField<int>(LocalBridgeClazz, "FLAG_GRANT_PERSISTABLE_URI_PERMISSION"); _FLAG_GRANT_PERSISTABLE_URI_PERMISSIONReady = true; } return _FLAG_GRANT_PERSISTABLE_URI_PERMISSIONContent; } }
        private static int _FLAG_GRANT_PERSISTABLE_URI_PERMISSIONContent = default;
        private static bool _FLAG_GRANT_PERSISTABLE_URI_PERMISSIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#FLAG_GRANT_PREFIX_URI_PERMISSION"/>
        /// </summary>
        public static int FLAG_GRANT_PREFIX_URI_PERMISSION { get { if (!_FLAG_GRANT_PREFIX_URI_PERMISSIONReady) { _FLAG_GRANT_PREFIX_URI_PERMISSIONContent = SGetField<int>(LocalBridgeClazz, "FLAG_GRANT_PREFIX_URI_PERMISSION"); _FLAG_GRANT_PREFIX_URI_PERMISSIONReady = true; } return _FLAG_GRANT_PREFIX_URI_PERMISSIONContent; } }
        private static int _FLAG_GRANT_PREFIX_URI_PERMISSIONContent = default;
        private static bool _FLAG_GRANT_PREFIX_URI_PERMISSIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#FLAG_GRANT_READ_URI_PERMISSION"/>
        /// </summary>
        public static int FLAG_GRANT_READ_URI_PERMISSION { get { if (!_FLAG_GRANT_READ_URI_PERMISSIONReady) { _FLAG_GRANT_READ_URI_PERMISSIONContent = SGetField<int>(LocalBridgeClazz, "FLAG_GRANT_READ_URI_PERMISSION"); _FLAG_GRANT_READ_URI_PERMISSIONReady = true; } return _FLAG_GRANT_READ_URI_PERMISSIONContent; } }
        private static int _FLAG_GRANT_READ_URI_PERMISSIONContent = default;
        private static bool _FLAG_GRANT_READ_URI_PERMISSIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#FLAG_GRANT_WRITE_URI_PERMISSION"/>
        /// </summary>
        public static int FLAG_GRANT_WRITE_URI_PERMISSION { get { if (!_FLAG_GRANT_WRITE_URI_PERMISSIONReady) { _FLAG_GRANT_WRITE_URI_PERMISSIONContent = SGetField<int>(LocalBridgeClazz, "FLAG_GRANT_WRITE_URI_PERMISSION"); _FLAG_GRANT_WRITE_URI_PERMISSIONReady = true; } return _FLAG_GRANT_WRITE_URI_PERMISSIONContent; } }
        private static int _FLAG_GRANT_WRITE_URI_PERMISSIONContent = default;
        private static bool _FLAG_GRANT_WRITE_URI_PERMISSIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#FLAG_INCLUDE_STOPPED_PACKAGES"/>
        /// </summary>
        public static int FLAG_INCLUDE_STOPPED_PACKAGES { get { if (!_FLAG_INCLUDE_STOPPED_PACKAGESReady) { _FLAG_INCLUDE_STOPPED_PACKAGESContent = SGetField<int>(LocalBridgeClazz, "FLAG_INCLUDE_STOPPED_PACKAGES"); _FLAG_INCLUDE_STOPPED_PACKAGESReady = true; } return _FLAG_INCLUDE_STOPPED_PACKAGESContent; } }
        private static int _FLAG_INCLUDE_STOPPED_PACKAGESContent = default;
        private static bool _FLAG_INCLUDE_STOPPED_PACKAGESReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#FLAG_RECEIVER_FOREGROUND"/>
        /// </summary>
        public static int FLAG_RECEIVER_FOREGROUND { get { if (!_FLAG_RECEIVER_FOREGROUNDReady) { _FLAG_RECEIVER_FOREGROUNDContent = SGetField<int>(LocalBridgeClazz, "FLAG_RECEIVER_FOREGROUND"); _FLAG_RECEIVER_FOREGROUNDReady = true; } return _FLAG_RECEIVER_FOREGROUNDContent; } }
        private static int _FLAG_RECEIVER_FOREGROUNDContent = default;
        private static bool _FLAG_RECEIVER_FOREGROUNDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#FLAG_RECEIVER_NO_ABORT"/>
        /// </summary>
        public static int FLAG_RECEIVER_NO_ABORT { get { if (!_FLAG_RECEIVER_NO_ABORTReady) { _FLAG_RECEIVER_NO_ABORTContent = SGetField<int>(LocalBridgeClazz, "FLAG_RECEIVER_NO_ABORT"); _FLAG_RECEIVER_NO_ABORTReady = true; } return _FLAG_RECEIVER_NO_ABORTContent; } }
        private static int _FLAG_RECEIVER_NO_ABORTContent = default;
        private static bool _FLAG_RECEIVER_NO_ABORTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#FLAG_RECEIVER_REGISTERED_ONLY"/>
        /// </summary>
        public static int FLAG_RECEIVER_REGISTERED_ONLY { get { if (!_FLAG_RECEIVER_REGISTERED_ONLYReady) { _FLAG_RECEIVER_REGISTERED_ONLYContent = SGetField<int>(LocalBridgeClazz, "FLAG_RECEIVER_REGISTERED_ONLY"); _FLAG_RECEIVER_REGISTERED_ONLYReady = true; } return _FLAG_RECEIVER_REGISTERED_ONLYContent; } }
        private static int _FLAG_RECEIVER_REGISTERED_ONLYContent = default;
        private static bool _FLAG_RECEIVER_REGISTERED_ONLYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#FLAG_RECEIVER_REPLACE_PENDING"/>
        /// </summary>
        public static int FLAG_RECEIVER_REPLACE_PENDING { get { if (!_FLAG_RECEIVER_REPLACE_PENDINGReady) { _FLAG_RECEIVER_REPLACE_PENDINGContent = SGetField<int>(LocalBridgeClazz, "FLAG_RECEIVER_REPLACE_PENDING"); _FLAG_RECEIVER_REPLACE_PENDINGReady = true; } return _FLAG_RECEIVER_REPLACE_PENDINGContent; } }
        private static int _FLAG_RECEIVER_REPLACE_PENDINGContent = default;
        private static bool _FLAG_RECEIVER_REPLACE_PENDINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#FLAG_RECEIVER_VISIBLE_TO_INSTANT_APPS"/>
        /// </summary>
        public static int FLAG_RECEIVER_VISIBLE_TO_INSTANT_APPS { get { if (!_FLAG_RECEIVER_VISIBLE_TO_INSTANT_APPSReady) { _FLAG_RECEIVER_VISIBLE_TO_INSTANT_APPSContent = SGetField<int>(LocalBridgeClazz, "FLAG_RECEIVER_VISIBLE_TO_INSTANT_APPS"); _FLAG_RECEIVER_VISIBLE_TO_INSTANT_APPSReady = true; } return _FLAG_RECEIVER_VISIBLE_TO_INSTANT_APPSContent; } }
        private static int _FLAG_RECEIVER_VISIBLE_TO_INSTANT_APPSContent = default;
        private static bool _FLAG_RECEIVER_VISIBLE_TO_INSTANT_APPSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#URI_ALLOW_UNSAFE"/>
        /// </summary>
        public static int URI_ALLOW_UNSAFE { get { if (!_URI_ALLOW_UNSAFEReady) { _URI_ALLOW_UNSAFEContent = SGetField<int>(LocalBridgeClazz, "URI_ALLOW_UNSAFE"); _URI_ALLOW_UNSAFEReady = true; } return _URI_ALLOW_UNSAFEContent; } }
        private static int _URI_ALLOW_UNSAFEContent = default;
        private static bool _URI_ALLOW_UNSAFEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#URI_ANDROID_APP_SCHEME"/>
        /// </summary>
        public static int URI_ANDROID_APP_SCHEME { get { if (!_URI_ANDROID_APP_SCHEMEReady) { _URI_ANDROID_APP_SCHEMEContent = SGetField<int>(LocalBridgeClazz, "URI_ANDROID_APP_SCHEME"); _URI_ANDROID_APP_SCHEMEReady = true; } return _URI_ANDROID_APP_SCHEMEContent; } }
        private static int _URI_ANDROID_APP_SCHEMEContent = default;
        private static bool _URI_ANDROID_APP_SCHEMEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#URI_INTENT_SCHEME"/>
        /// </summary>
        public static int URI_INTENT_SCHEME { get { if (!_URI_INTENT_SCHEMEReady) { _URI_INTENT_SCHEMEContent = SGetField<int>(LocalBridgeClazz, "URI_INTENT_SCHEME"); _URI_INTENT_SCHEMEReady = true; } return _URI_INTENT_SCHEMEContent; } }
        private static int _URI_INTENT_SCHEMEContent = default;
        private static bool _URI_INTENT_SCHEMEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_AIRPLANE_MODE_CHANGED"/>
        /// </summary>
        public static Java.Lang.String ACTION_AIRPLANE_MODE_CHANGED { get { if (!_ACTION_AIRPLANE_MODE_CHANGEDReady) { _ACTION_AIRPLANE_MODE_CHANGEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_AIRPLANE_MODE_CHANGED"); _ACTION_AIRPLANE_MODE_CHANGEDReady = true; } return _ACTION_AIRPLANE_MODE_CHANGEDContent; } }
        private static Java.Lang.String _ACTION_AIRPLANE_MODE_CHANGEDContent = default;
        private static bool _ACTION_AIRPLANE_MODE_CHANGEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_ALL_APPS"/>
        /// </summary>
        public static Java.Lang.String ACTION_ALL_APPS { get { if (!_ACTION_ALL_APPSReady) { _ACTION_ALL_APPSContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_ALL_APPS"); _ACTION_ALL_APPSReady = true; } return _ACTION_ALL_APPSContent; } }
        private static Java.Lang.String _ACTION_ALL_APPSContent = default;
        private static bool _ACTION_ALL_APPSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_ANSWER"/>
        /// </summary>
        public static Java.Lang.String ACTION_ANSWER { get { if (!_ACTION_ANSWERReady) { _ACTION_ANSWERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_ANSWER"); _ACTION_ANSWERReady = true; } return _ACTION_ANSWERContent; } }
        private static Java.Lang.String _ACTION_ANSWERContent = default;
        private static bool _ACTION_ANSWERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_APP_ERROR"/>
        /// </summary>
        public static Java.Lang.String ACTION_APP_ERROR { get { if (!_ACTION_APP_ERRORReady) { _ACTION_APP_ERRORContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_APP_ERROR"); _ACTION_APP_ERRORReady = true; } return _ACTION_APP_ERRORContent; } }
        private static Java.Lang.String _ACTION_APP_ERRORContent = default;
        private static bool _ACTION_APP_ERRORReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_APPLICATION_LOCALE_CHANGED"/>
        /// </summary>
        public static Java.Lang.String ACTION_APPLICATION_LOCALE_CHANGED { get { if (!_ACTION_APPLICATION_LOCALE_CHANGEDReady) { _ACTION_APPLICATION_LOCALE_CHANGEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_APPLICATION_LOCALE_CHANGED"); _ACTION_APPLICATION_LOCALE_CHANGEDReady = true; } return _ACTION_APPLICATION_LOCALE_CHANGEDContent; } }
        private static Java.Lang.String _ACTION_APPLICATION_LOCALE_CHANGEDContent = default;
        private static bool _ACTION_APPLICATION_LOCALE_CHANGEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_APPLICATION_PREFERENCES"/>
        /// </summary>
        public static Java.Lang.String ACTION_APPLICATION_PREFERENCES { get { if (!_ACTION_APPLICATION_PREFERENCESReady) { _ACTION_APPLICATION_PREFERENCESContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_APPLICATION_PREFERENCES"); _ACTION_APPLICATION_PREFERENCESReady = true; } return _ACTION_APPLICATION_PREFERENCESContent; } }
        private static Java.Lang.String _ACTION_APPLICATION_PREFERENCESContent = default;
        private static bool _ACTION_APPLICATION_PREFERENCESReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_APPLICATION_RESTRICTIONS_CHANGED"/>
        /// </summary>
        public static Java.Lang.String ACTION_APPLICATION_RESTRICTIONS_CHANGED { get { if (!_ACTION_APPLICATION_RESTRICTIONS_CHANGEDReady) { _ACTION_APPLICATION_RESTRICTIONS_CHANGEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_APPLICATION_RESTRICTIONS_CHANGED"); _ACTION_APPLICATION_RESTRICTIONS_CHANGEDReady = true; } return _ACTION_APPLICATION_RESTRICTIONS_CHANGEDContent; } }
        private static Java.Lang.String _ACTION_APPLICATION_RESTRICTIONS_CHANGEDContent = default;
        private static bool _ACTION_APPLICATION_RESTRICTIONS_CHANGEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_ASSIST"/>
        /// </summary>
        public static Java.Lang.String ACTION_ASSIST { get { if (!_ACTION_ASSISTReady) { _ACTION_ASSISTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_ASSIST"); _ACTION_ASSISTReady = true; } return _ACTION_ASSISTContent; } }
        private static Java.Lang.String _ACTION_ASSISTContent = default;
        private static bool _ACTION_ASSISTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_ATTACH_DATA"/>
        /// </summary>
        public static Java.Lang.String ACTION_ATTACH_DATA { get { if (!_ACTION_ATTACH_DATAReady) { _ACTION_ATTACH_DATAContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_ATTACH_DATA"); _ACTION_ATTACH_DATAReady = true; } return _ACTION_ATTACH_DATAContent; } }
        private static Java.Lang.String _ACTION_ATTACH_DATAContent = default;
        private static bool _ACTION_ATTACH_DATAReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_AUTO_REVOKE_PERMISSIONS"/>
        /// </summary>
        public static Java.Lang.String ACTION_AUTO_REVOKE_PERMISSIONS { get { if (!_ACTION_AUTO_REVOKE_PERMISSIONSReady) { _ACTION_AUTO_REVOKE_PERMISSIONSContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_AUTO_REVOKE_PERMISSIONS"); _ACTION_AUTO_REVOKE_PERMISSIONSReady = true; } return _ACTION_AUTO_REVOKE_PERMISSIONSContent; } }
        private static Java.Lang.String _ACTION_AUTO_REVOKE_PERMISSIONSContent = default;
        private static bool _ACTION_AUTO_REVOKE_PERMISSIONSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_BATTERY_CHANGED"/>
        /// </summary>
        public static Java.Lang.String ACTION_BATTERY_CHANGED { get { if (!_ACTION_BATTERY_CHANGEDReady) { _ACTION_BATTERY_CHANGEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_BATTERY_CHANGED"); _ACTION_BATTERY_CHANGEDReady = true; } return _ACTION_BATTERY_CHANGEDContent; } }
        private static Java.Lang.String _ACTION_BATTERY_CHANGEDContent = default;
        private static bool _ACTION_BATTERY_CHANGEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_BATTERY_LOW"/>
        /// </summary>
        public static Java.Lang.String ACTION_BATTERY_LOW { get { if (!_ACTION_BATTERY_LOWReady) { _ACTION_BATTERY_LOWContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_BATTERY_LOW"); _ACTION_BATTERY_LOWReady = true; } return _ACTION_BATTERY_LOWContent; } }
        private static Java.Lang.String _ACTION_BATTERY_LOWContent = default;
        private static bool _ACTION_BATTERY_LOWReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_BATTERY_OKAY"/>
        /// </summary>
        public static Java.Lang.String ACTION_BATTERY_OKAY { get { if (!_ACTION_BATTERY_OKAYReady) { _ACTION_BATTERY_OKAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_BATTERY_OKAY"); _ACTION_BATTERY_OKAYReady = true; } return _ACTION_BATTERY_OKAYContent; } }
        private static Java.Lang.String _ACTION_BATTERY_OKAYContent = default;
        private static bool _ACTION_BATTERY_OKAYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_BOOT_COMPLETED"/>
        /// </summary>
        public static Java.Lang.String ACTION_BOOT_COMPLETED { get { if (!_ACTION_BOOT_COMPLETEDReady) { _ACTION_BOOT_COMPLETEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_BOOT_COMPLETED"); _ACTION_BOOT_COMPLETEDReady = true; } return _ACTION_BOOT_COMPLETEDContent; } }
        private static Java.Lang.String _ACTION_BOOT_COMPLETEDContent = default;
        private static bool _ACTION_BOOT_COMPLETEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_BUG_REPORT"/>
        /// </summary>
        public static Java.Lang.String ACTION_BUG_REPORT { get { if (!_ACTION_BUG_REPORTReady) { _ACTION_BUG_REPORTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_BUG_REPORT"); _ACTION_BUG_REPORTReady = true; } return _ACTION_BUG_REPORTContent; } }
        private static Java.Lang.String _ACTION_BUG_REPORTContent = default;
        private static bool _ACTION_BUG_REPORTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_CALL"/>
        /// </summary>
        public static Java.Lang.String ACTION_CALL { get { if (!_ACTION_CALLReady) { _ACTION_CALLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_CALL"); _ACTION_CALLReady = true; } return _ACTION_CALLContent; } }
        private static Java.Lang.String _ACTION_CALLContent = default;
        private static bool _ACTION_CALLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_CALL_BUTTON"/>
        /// </summary>
        public static Java.Lang.String ACTION_CALL_BUTTON { get { if (!_ACTION_CALL_BUTTONReady) { _ACTION_CALL_BUTTONContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_CALL_BUTTON"); _ACTION_CALL_BUTTONReady = true; } return _ACTION_CALL_BUTTONContent; } }
        private static Java.Lang.String _ACTION_CALL_BUTTONContent = default;
        private static bool _ACTION_CALL_BUTTONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_CAMERA_BUTTON"/>
        /// </summary>
        public static Java.Lang.String ACTION_CAMERA_BUTTON { get { if (!_ACTION_CAMERA_BUTTONReady) { _ACTION_CAMERA_BUTTONContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_CAMERA_BUTTON"); _ACTION_CAMERA_BUTTONReady = true; } return _ACTION_CAMERA_BUTTONContent; } }
        private static Java.Lang.String _ACTION_CAMERA_BUTTONContent = default;
        private static bool _ACTION_CAMERA_BUTTONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_CARRIER_SETUP"/>
        /// </summary>
        public static Java.Lang.String ACTION_CARRIER_SETUP { get { if (!_ACTION_CARRIER_SETUPReady) { _ACTION_CARRIER_SETUPContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_CARRIER_SETUP"); _ACTION_CARRIER_SETUPReady = true; } return _ACTION_CARRIER_SETUPContent; } }
        private static Java.Lang.String _ACTION_CARRIER_SETUPContent = default;
        private static bool _ACTION_CARRIER_SETUPReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_CHOOSER"/>
        /// </summary>
        public static Java.Lang.String ACTION_CHOOSER { get { if (!_ACTION_CHOOSERReady) { _ACTION_CHOOSERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_CHOOSER"); _ACTION_CHOOSERReady = true; } return _ACTION_CHOOSERContent; } }
        private static Java.Lang.String _ACTION_CHOOSERContent = default;
        private static bool _ACTION_CHOOSERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_CLOSE_SYSTEM_DIALOGS"/>
        /// </summary>
        [global::System.Obsolete()]
        public static Java.Lang.String ACTION_CLOSE_SYSTEM_DIALOGS { get { if (!_ACTION_CLOSE_SYSTEM_DIALOGSReady) { _ACTION_CLOSE_SYSTEM_DIALOGSContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_CLOSE_SYSTEM_DIALOGS"); _ACTION_CLOSE_SYSTEM_DIALOGSReady = true; } return _ACTION_CLOSE_SYSTEM_DIALOGSContent; } }
        private static Java.Lang.String _ACTION_CLOSE_SYSTEM_DIALOGSContent = default;
        private static bool _ACTION_CLOSE_SYSTEM_DIALOGSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_CONFIGURATION_CHANGED"/>
        /// </summary>
        public static Java.Lang.String ACTION_CONFIGURATION_CHANGED { get { if (!_ACTION_CONFIGURATION_CHANGEDReady) { _ACTION_CONFIGURATION_CHANGEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_CONFIGURATION_CHANGED"); _ACTION_CONFIGURATION_CHANGEDReady = true; } return _ACTION_CONFIGURATION_CHANGEDContent; } }
        private static Java.Lang.String _ACTION_CONFIGURATION_CHANGEDContent = default;
        private static bool _ACTION_CONFIGURATION_CHANGEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_CREATE_DOCUMENT"/>
        /// </summary>
        public static Java.Lang.String ACTION_CREATE_DOCUMENT { get { if (!_ACTION_CREATE_DOCUMENTReady) { _ACTION_CREATE_DOCUMENTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_CREATE_DOCUMENT"); _ACTION_CREATE_DOCUMENTReady = true; } return _ACTION_CREATE_DOCUMENTContent; } }
        private static Java.Lang.String _ACTION_CREATE_DOCUMENTContent = default;
        private static bool _ACTION_CREATE_DOCUMENTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_CREATE_NOTE"/>
        /// </summary>
        public static Java.Lang.String ACTION_CREATE_NOTE { get { if (!_ACTION_CREATE_NOTEReady) { _ACTION_CREATE_NOTEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_CREATE_NOTE"); _ACTION_CREATE_NOTEReady = true; } return _ACTION_CREATE_NOTEContent; } }
        private static Java.Lang.String _ACTION_CREATE_NOTEContent = default;
        private static bool _ACTION_CREATE_NOTEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_CREATE_REMINDER"/>
        /// </summary>
        public static Java.Lang.String ACTION_CREATE_REMINDER { get { if (!_ACTION_CREATE_REMINDERReady) { _ACTION_CREATE_REMINDERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_CREATE_REMINDER"); _ACTION_CREATE_REMINDERReady = true; } return _ACTION_CREATE_REMINDERContent; } }
        private static Java.Lang.String _ACTION_CREATE_REMINDERContent = default;
        private static bool _ACTION_CREATE_REMINDERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_CREATE_SHORTCUT"/>
        /// </summary>
        public static Java.Lang.String ACTION_CREATE_SHORTCUT { get { if (!_ACTION_CREATE_SHORTCUTReady) { _ACTION_CREATE_SHORTCUTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_CREATE_SHORTCUT"); _ACTION_CREATE_SHORTCUTReady = true; } return _ACTION_CREATE_SHORTCUTContent; } }
        private static Java.Lang.String _ACTION_CREATE_SHORTCUTContent = default;
        private static bool _ACTION_CREATE_SHORTCUTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_DATE_CHANGED"/>
        /// </summary>
        public static Java.Lang.String ACTION_DATE_CHANGED { get { if (!_ACTION_DATE_CHANGEDReady) { _ACTION_DATE_CHANGEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_DATE_CHANGED"); _ACTION_DATE_CHANGEDReady = true; } return _ACTION_DATE_CHANGEDContent; } }
        private static Java.Lang.String _ACTION_DATE_CHANGEDContent = default;
        private static bool _ACTION_DATE_CHANGEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_DEFAULT"/>
        /// </summary>
        public static Java.Lang.String ACTION_DEFAULT { get { if (!_ACTION_DEFAULTReady) { _ACTION_DEFAULTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_DEFAULT"); _ACTION_DEFAULTReady = true; } return _ACTION_DEFAULTContent; } }
        private static Java.Lang.String _ACTION_DEFAULTContent = default;
        private static bool _ACTION_DEFAULTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_DEFINE"/>
        /// </summary>
        public static Java.Lang.String ACTION_DEFINE { get { if (!_ACTION_DEFINEReady) { _ACTION_DEFINEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_DEFINE"); _ACTION_DEFINEReady = true; } return _ACTION_DEFINEContent; } }
        private static Java.Lang.String _ACTION_DEFINEContent = default;
        private static bool _ACTION_DEFINEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_DELETE"/>
        /// </summary>
        public static Java.Lang.String ACTION_DELETE { get { if (!_ACTION_DELETEReady) { _ACTION_DELETEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_DELETE"); _ACTION_DELETEReady = true; } return _ACTION_DELETEContent; } }
        private static Java.Lang.String _ACTION_DELETEContent = default;
        private static bool _ACTION_DELETEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_DEVICE_STORAGE_LOW"/>
        /// </summary>
        [global::System.Obsolete()]
        public static Java.Lang.String ACTION_DEVICE_STORAGE_LOW { get { if (!_ACTION_DEVICE_STORAGE_LOWReady) { _ACTION_DEVICE_STORAGE_LOWContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_DEVICE_STORAGE_LOW"); _ACTION_DEVICE_STORAGE_LOWReady = true; } return _ACTION_DEVICE_STORAGE_LOWContent; } }
        private static Java.Lang.String _ACTION_DEVICE_STORAGE_LOWContent = default;
        private static bool _ACTION_DEVICE_STORAGE_LOWReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_DEVICE_STORAGE_OK"/>
        /// </summary>
        [global::System.Obsolete()]
        public static Java.Lang.String ACTION_DEVICE_STORAGE_OK { get { if (!_ACTION_DEVICE_STORAGE_OKReady) { _ACTION_DEVICE_STORAGE_OKContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_DEVICE_STORAGE_OK"); _ACTION_DEVICE_STORAGE_OKReady = true; } return _ACTION_DEVICE_STORAGE_OKContent; } }
        private static Java.Lang.String _ACTION_DEVICE_STORAGE_OKContent = default;
        private static bool _ACTION_DEVICE_STORAGE_OKReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_DIAL"/>
        /// </summary>
        public static Java.Lang.String ACTION_DIAL { get { if (!_ACTION_DIALReady) { _ACTION_DIALContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_DIAL"); _ACTION_DIALReady = true; } return _ACTION_DIALContent; } }
        private static Java.Lang.String _ACTION_DIALContent = default;
        private static bool _ACTION_DIALReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_DOCK_EVENT"/>
        /// </summary>
        public static Java.Lang.String ACTION_DOCK_EVENT { get { if (!_ACTION_DOCK_EVENTReady) { _ACTION_DOCK_EVENTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_DOCK_EVENT"); _ACTION_DOCK_EVENTReady = true; } return _ACTION_DOCK_EVENTContent; } }
        private static Java.Lang.String _ACTION_DOCK_EVENTContent = default;
        private static bool _ACTION_DOCK_EVENTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_DREAMING_STARTED"/>
        /// </summary>
        public static Java.Lang.String ACTION_DREAMING_STARTED { get { if (!_ACTION_DREAMING_STARTEDReady) { _ACTION_DREAMING_STARTEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_DREAMING_STARTED"); _ACTION_DREAMING_STARTEDReady = true; } return _ACTION_DREAMING_STARTEDContent; } }
        private static Java.Lang.String _ACTION_DREAMING_STARTEDContent = default;
        private static bool _ACTION_DREAMING_STARTEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_DREAMING_STOPPED"/>
        /// </summary>
        public static Java.Lang.String ACTION_DREAMING_STOPPED { get { if (!_ACTION_DREAMING_STOPPEDReady) { _ACTION_DREAMING_STOPPEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_DREAMING_STOPPED"); _ACTION_DREAMING_STOPPEDReady = true; } return _ACTION_DREAMING_STOPPEDContent; } }
        private static Java.Lang.String _ACTION_DREAMING_STOPPEDContent = default;
        private static bool _ACTION_DREAMING_STOPPEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_EDIT"/>
        /// </summary>
        public static Java.Lang.String ACTION_EDIT { get { if (!_ACTION_EDITReady) { _ACTION_EDITContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_EDIT"); _ACTION_EDITReady = true; } return _ACTION_EDITContent; } }
        private static Java.Lang.String _ACTION_EDITContent = default;
        private static bool _ACTION_EDITReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_EXTERNAL_APPLICATIONS_AVAILABLE"/>
        /// </summary>
        public static Java.Lang.String ACTION_EXTERNAL_APPLICATIONS_AVAILABLE { get { if (!_ACTION_EXTERNAL_APPLICATIONS_AVAILABLEReady) { _ACTION_EXTERNAL_APPLICATIONS_AVAILABLEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_EXTERNAL_APPLICATIONS_AVAILABLE"); _ACTION_EXTERNAL_APPLICATIONS_AVAILABLEReady = true; } return _ACTION_EXTERNAL_APPLICATIONS_AVAILABLEContent; } }
        private static Java.Lang.String _ACTION_EXTERNAL_APPLICATIONS_AVAILABLEContent = default;
        private static bool _ACTION_EXTERNAL_APPLICATIONS_AVAILABLEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE"/>
        /// </summary>
        public static Java.Lang.String ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE { get { if (!_ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLEReady) { _ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE"); _ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLEReady = true; } return _ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLEContent; } }
        private static Java.Lang.String _ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLEContent = default;
        private static bool _ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_FACTORY_TEST"/>
        /// </summary>
        public static Java.Lang.String ACTION_FACTORY_TEST { get { if (!_ACTION_FACTORY_TESTReady) { _ACTION_FACTORY_TESTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_FACTORY_TEST"); _ACTION_FACTORY_TESTReady = true; } return _ACTION_FACTORY_TESTContent; } }
        private static Java.Lang.String _ACTION_FACTORY_TESTContent = default;
        private static bool _ACTION_FACTORY_TESTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_GET_CONTENT"/>
        /// </summary>
        public static Java.Lang.String ACTION_GET_CONTENT { get { if (!_ACTION_GET_CONTENTReady) { _ACTION_GET_CONTENTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_GET_CONTENT"); _ACTION_GET_CONTENTReady = true; } return _ACTION_GET_CONTENTContent; } }
        private static Java.Lang.String _ACTION_GET_CONTENTContent = default;
        private static bool _ACTION_GET_CONTENTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_GET_RESTRICTION_ENTRIES"/>
        /// </summary>
        public static Java.Lang.String ACTION_GET_RESTRICTION_ENTRIES { get { if (!_ACTION_GET_RESTRICTION_ENTRIESReady) { _ACTION_GET_RESTRICTION_ENTRIESContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_GET_RESTRICTION_ENTRIES"); _ACTION_GET_RESTRICTION_ENTRIESReady = true; } return _ACTION_GET_RESTRICTION_ENTRIESContent; } }
        private static Java.Lang.String _ACTION_GET_RESTRICTION_ENTRIESContent = default;
        private static bool _ACTION_GET_RESTRICTION_ENTRIESReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_GTALK_SERVICE_CONNECTED"/>
        /// </summary>
        public static Java.Lang.String ACTION_GTALK_SERVICE_CONNECTED { get { if (!_ACTION_GTALK_SERVICE_CONNECTEDReady) { _ACTION_GTALK_SERVICE_CONNECTEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_GTALK_SERVICE_CONNECTED"); _ACTION_GTALK_SERVICE_CONNECTEDReady = true; } return _ACTION_GTALK_SERVICE_CONNECTEDContent; } }
        private static Java.Lang.String _ACTION_GTALK_SERVICE_CONNECTEDContent = default;
        private static bool _ACTION_GTALK_SERVICE_CONNECTEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_GTALK_SERVICE_DISCONNECTED"/>
        /// </summary>
        public static Java.Lang.String ACTION_GTALK_SERVICE_DISCONNECTED { get { if (!_ACTION_GTALK_SERVICE_DISCONNECTEDReady) { _ACTION_GTALK_SERVICE_DISCONNECTEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_GTALK_SERVICE_DISCONNECTED"); _ACTION_GTALK_SERVICE_DISCONNECTEDReady = true; } return _ACTION_GTALK_SERVICE_DISCONNECTEDContent; } }
        private static Java.Lang.String _ACTION_GTALK_SERVICE_DISCONNECTEDContent = default;
        private static bool _ACTION_GTALK_SERVICE_DISCONNECTEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_HEADSET_PLUG"/>
        /// </summary>
        public static Java.Lang.String ACTION_HEADSET_PLUG { get { if (!_ACTION_HEADSET_PLUGReady) { _ACTION_HEADSET_PLUGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_HEADSET_PLUG"); _ACTION_HEADSET_PLUGReady = true; } return _ACTION_HEADSET_PLUGContent; } }
        private static Java.Lang.String _ACTION_HEADSET_PLUGContent = default;
        private static bool _ACTION_HEADSET_PLUGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_INPUT_METHOD_CHANGED"/>
        /// </summary>
        public static Java.Lang.String ACTION_INPUT_METHOD_CHANGED { get { if (!_ACTION_INPUT_METHOD_CHANGEDReady) { _ACTION_INPUT_METHOD_CHANGEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_INPUT_METHOD_CHANGED"); _ACTION_INPUT_METHOD_CHANGEDReady = true; } return _ACTION_INPUT_METHOD_CHANGEDContent; } }
        private static Java.Lang.String _ACTION_INPUT_METHOD_CHANGEDContent = default;
        private static bool _ACTION_INPUT_METHOD_CHANGEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_INSERT"/>
        /// </summary>
        public static Java.Lang.String ACTION_INSERT { get { if (!_ACTION_INSERTReady) { _ACTION_INSERTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_INSERT"); _ACTION_INSERTReady = true; } return _ACTION_INSERTContent; } }
        private static Java.Lang.String _ACTION_INSERTContent = default;
        private static bool _ACTION_INSERTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_INSERT_OR_EDIT"/>
        /// </summary>
        public static Java.Lang.String ACTION_INSERT_OR_EDIT { get { if (!_ACTION_INSERT_OR_EDITReady) { _ACTION_INSERT_OR_EDITContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_INSERT_OR_EDIT"); _ACTION_INSERT_OR_EDITReady = true; } return _ACTION_INSERT_OR_EDITContent; } }
        private static Java.Lang.String _ACTION_INSERT_OR_EDITContent = default;
        private static bool _ACTION_INSERT_OR_EDITReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_INSTALL_FAILURE"/>
        /// </summary>
        public static Java.Lang.String ACTION_INSTALL_FAILURE { get { if (!_ACTION_INSTALL_FAILUREReady) { _ACTION_INSTALL_FAILUREContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_INSTALL_FAILURE"); _ACTION_INSTALL_FAILUREReady = true; } return _ACTION_INSTALL_FAILUREContent; } }
        private static Java.Lang.String _ACTION_INSTALL_FAILUREContent = default;
        private static bool _ACTION_INSTALL_FAILUREReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_INSTALL_PACKAGE"/>
        /// </summary>
        [global::System.Obsolete()]
        public static Java.Lang.String ACTION_INSTALL_PACKAGE { get { if (!_ACTION_INSTALL_PACKAGEReady) { _ACTION_INSTALL_PACKAGEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_INSTALL_PACKAGE"); _ACTION_INSTALL_PACKAGEReady = true; } return _ACTION_INSTALL_PACKAGEContent; } }
        private static Java.Lang.String _ACTION_INSTALL_PACKAGEContent = default;
        private static bool _ACTION_INSTALL_PACKAGEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_LAUNCH_CAPTURE_CONTENT_ACTIVITY_FOR_NOTE"/>
        /// </summary>
        public static Java.Lang.String ACTION_LAUNCH_CAPTURE_CONTENT_ACTIVITY_FOR_NOTE { get { if (!_ACTION_LAUNCH_CAPTURE_CONTENT_ACTIVITY_FOR_NOTEReady) { _ACTION_LAUNCH_CAPTURE_CONTENT_ACTIVITY_FOR_NOTEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_LAUNCH_CAPTURE_CONTENT_ACTIVITY_FOR_NOTE"); _ACTION_LAUNCH_CAPTURE_CONTENT_ACTIVITY_FOR_NOTEReady = true; } return _ACTION_LAUNCH_CAPTURE_CONTENT_ACTIVITY_FOR_NOTEContent; } }
        private static Java.Lang.String _ACTION_LAUNCH_CAPTURE_CONTENT_ACTIVITY_FOR_NOTEContent = default;
        private static bool _ACTION_LAUNCH_CAPTURE_CONTENT_ACTIVITY_FOR_NOTEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_LOCALE_CHANGED"/>
        /// </summary>
        public static Java.Lang.String ACTION_LOCALE_CHANGED { get { if (!_ACTION_LOCALE_CHANGEDReady) { _ACTION_LOCALE_CHANGEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_LOCALE_CHANGED"); _ACTION_LOCALE_CHANGEDReady = true; } return _ACTION_LOCALE_CHANGEDContent; } }
        private static Java.Lang.String _ACTION_LOCALE_CHANGEDContent = default;
        private static bool _ACTION_LOCALE_CHANGEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_LOCKED_BOOT_COMPLETED"/>
        /// </summary>
        public static Java.Lang.String ACTION_LOCKED_BOOT_COMPLETED { get { if (!_ACTION_LOCKED_BOOT_COMPLETEDReady) { _ACTION_LOCKED_BOOT_COMPLETEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_LOCKED_BOOT_COMPLETED"); _ACTION_LOCKED_BOOT_COMPLETEDReady = true; } return _ACTION_LOCKED_BOOT_COMPLETEDContent; } }
        private static Java.Lang.String _ACTION_LOCKED_BOOT_COMPLETEDContent = default;
        private static bool _ACTION_LOCKED_BOOT_COMPLETEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_MAIN"/>
        /// </summary>
        public static Java.Lang.String ACTION_MAIN { get { if (!_ACTION_MAINReady) { _ACTION_MAINContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_MAIN"); _ACTION_MAINReady = true; } return _ACTION_MAINContent; } }
        private static Java.Lang.String _ACTION_MAINContent = default;
        private static bool _ACTION_MAINReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_MANAGE_NETWORK_USAGE"/>
        /// </summary>
        public static Java.Lang.String ACTION_MANAGE_NETWORK_USAGE { get { if (!_ACTION_MANAGE_NETWORK_USAGEReady) { _ACTION_MANAGE_NETWORK_USAGEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_MANAGE_NETWORK_USAGE"); _ACTION_MANAGE_NETWORK_USAGEReady = true; } return _ACTION_MANAGE_NETWORK_USAGEContent; } }
        private static Java.Lang.String _ACTION_MANAGE_NETWORK_USAGEContent = default;
        private static bool _ACTION_MANAGE_NETWORK_USAGEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_MANAGE_PACKAGE_STORAGE"/>
        /// </summary>
        public static Java.Lang.String ACTION_MANAGE_PACKAGE_STORAGE { get { if (!_ACTION_MANAGE_PACKAGE_STORAGEReady) { _ACTION_MANAGE_PACKAGE_STORAGEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_MANAGE_PACKAGE_STORAGE"); _ACTION_MANAGE_PACKAGE_STORAGEReady = true; } return _ACTION_MANAGE_PACKAGE_STORAGEContent; } }
        private static Java.Lang.String _ACTION_MANAGE_PACKAGE_STORAGEContent = default;
        private static bool _ACTION_MANAGE_PACKAGE_STORAGEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_MANAGE_UNUSED_APPS"/>
        /// </summary>
        public static Java.Lang.String ACTION_MANAGE_UNUSED_APPS { get { if (!_ACTION_MANAGE_UNUSED_APPSReady) { _ACTION_MANAGE_UNUSED_APPSContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_MANAGE_UNUSED_APPS"); _ACTION_MANAGE_UNUSED_APPSReady = true; } return _ACTION_MANAGE_UNUSED_APPSContent; } }
        private static Java.Lang.String _ACTION_MANAGE_UNUSED_APPSContent = default;
        private static bool _ACTION_MANAGE_UNUSED_APPSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_MANAGED_PROFILE_ADDED"/>
        /// </summary>
        public static Java.Lang.String ACTION_MANAGED_PROFILE_ADDED { get { if (!_ACTION_MANAGED_PROFILE_ADDEDReady) { _ACTION_MANAGED_PROFILE_ADDEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_MANAGED_PROFILE_ADDED"); _ACTION_MANAGED_PROFILE_ADDEDReady = true; } return _ACTION_MANAGED_PROFILE_ADDEDContent; } }
        private static Java.Lang.String _ACTION_MANAGED_PROFILE_ADDEDContent = default;
        private static bool _ACTION_MANAGED_PROFILE_ADDEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_MANAGED_PROFILE_AVAILABLE"/>
        /// </summary>
        public static Java.Lang.String ACTION_MANAGED_PROFILE_AVAILABLE { get { if (!_ACTION_MANAGED_PROFILE_AVAILABLEReady) { _ACTION_MANAGED_PROFILE_AVAILABLEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_MANAGED_PROFILE_AVAILABLE"); _ACTION_MANAGED_PROFILE_AVAILABLEReady = true; } return _ACTION_MANAGED_PROFILE_AVAILABLEContent; } }
        private static Java.Lang.String _ACTION_MANAGED_PROFILE_AVAILABLEContent = default;
        private static bool _ACTION_MANAGED_PROFILE_AVAILABLEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_MANAGED_PROFILE_REMOVED"/>
        /// </summary>
        public static Java.Lang.String ACTION_MANAGED_PROFILE_REMOVED { get { if (!_ACTION_MANAGED_PROFILE_REMOVEDReady) { _ACTION_MANAGED_PROFILE_REMOVEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_MANAGED_PROFILE_REMOVED"); _ACTION_MANAGED_PROFILE_REMOVEDReady = true; } return _ACTION_MANAGED_PROFILE_REMOVEDContent; } }
        private static Java.Lang.String _ACTION_MANAGED_PROFILE_REMOVEDContent = default;
        private static bool _ACTION_MANAGED_PROFILE_REMOVEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_MANAGED_PROFILE_UNAVAILABLE"/>
        /// </summary>
        public static Java.Lang.String ACTION_MANAGED_PROFILE_UNAVAILABLE { get { if (!_ACTION_MANAGED_PROFILE_UNAVAILABLEReady) { _ACTION_MANAGED_PROFILE_UNAVAILABLEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_MANAGED_PROFILE_UNAVAILABLE"); _ACTION_MANAGED_PROFILE_UNAVAILABLEReady = true; } return _ACTION_MANAGED_PROFILE_UNAVAILABLEContent; } }
        private static Java.Lang.String _ACTION_MANAGED_PROFILE_UNAVAILABLEContent = default;
        private static bool _ACTION_MANAGED_PROFILE_UNAVAILABLEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_MANAGED_PROFILE_UNLOCKED"/>
        /// </summary>
        public static Java.Lang.String ACTION_MANAGED_PROFILE_UNLOCKED { get { if (!_ACTION_MANAGED_PROFILE_UNLOCKEDReady) { _ACTION_MANAGED_PROFILE_UNLOCKEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_MANAGED_PROFILE_UNLOCKED"); _ACTION_MANAGED_PROFILE_UNLOCKEDReady = true; } return _ACTION_MANAGED_PROFILE_UNLOCKEDContent; } }
        private static Java.Lang.String _ACTION_MANAGED_PROFILE_UNLOCKEDContent = default;
        private static bool _ACTION_MANAGED_PROFILE_UNLOCKEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_MEDIA_BAD_REMOVAL"/>
        /// </summary>
        public static Java.Lang.String ACTION_MEDIA_BAD_REMOVAL { get { if (!_ACTION_MEDIA_BAD_REMOVALReady) { _ACTION_MEDIA_BAD_REMOVALContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_MEDIA_BAD_REMOVAL"); _ACTION_MEDIA_BAD_REMOVALReady = true; } return _ACTION_MEDIA_BAD_REMOVALContent; } }
        private static Java.Lang.String _ACTION_MEDIA_BAD_REMOVALContent = default;
        private static bool _ACTION_MEDIA_BAD_REMOVALReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_MEDIA_BUTTON"/>
        /// </summary>
        public static Java.Lang.String ACTION_MEDIA_BUTTON { get { if (!_ACTION_MEDIA_BUTTONReady) { _ACTION_MEDIA_BUTTONContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_MEDIA_BUTTON"); _ACTION_MEDIA_BUTTONReady = true; } return _ACTION_MEDIA_BUTTONContent; } }
        private static Java.Lang.String _ACTION_MEDIA_BUTTONContent = default;
        private static bool _ACTION_MEDIA_BUTTONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_MEDIA_CHECKING"/>
        /// </summary>
        public static Java.Lang.String ACTION_MEDIA_CHECKING { get { if (!_ACTION_MEDIA_CHECKINGReady) { _ACTION_MEDIA_CHECKINGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_MEDIA_CHECKING"); _ACTION_MEDIA_CHECKINGReady = true; } return _ACTION_MEDIA_CHECKINGContent; } }
        private static Java.Lang.String _ACTION_MEDIA_CHECKINGContent = default;
        private static bool _ACTION_MEDIA_CHECKINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_MEDIA_EJECT"/>
        /// </summary>
        public static Java.Lang.String ACTION_MEDIA_EJECT { get { if (!_ACTION_MEDIA_EJECTReady) { _ACTION_MEDIA_EJECTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_MEDIA_EJECT"); _ACTION_MEDIA_EJECTReady = true; } return _ACTION_MEDIA_EJECTContent; } }
        private static Java.Lang.String _ACTION_MEDIA_EJECTContent = default;
        private static bool _ACTION_MEDIA_EJECTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_MEDIA_MOUNTED"/>
        /// </summary>
        public static Java.Lang.String ACTION_MEDIA_MOUNTED { get { if (!_ACTION_MEDIA_MOUNTEDReady) { _ACTION_MEDIA_MOUNTEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_MEDIA_MOUNTED"); _ACTION_MEDIA_MOUNTEDReady = true; } return _ACTION_MEDIA_MOUNTEDContent; } }
        private static Java.Lang.String _ACTION_MEDIA_MOUNTEDContent = default;
        private static bool _ACTION_MEDIA_MOUNTEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_MEDIA_NOFS"/>
        /// </summary>
        public static Java.Lang.String ACTION_MEDIA_NOFS { get { if (!_ACTION_MEDIA_NOFSReady) { _ACTION_MEDIA_NOFSContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_MEDIA_NOFS"); _ACTION_MEDIA_NOFSReady = true; } return _ACTION_MEDIA_NOFSContent; } }
        private static Java.Lang.String _ACTION_MEDIA_NOFSContent = default;
        private static bool _ACTION_MEDIA_NOFSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_MEDIA_REMOVED"/>
        /// </summary>
        public static Java.Lang.String ACTION_MEDIA_REMOVED { get { if (!_ACTION_MEDIA_REMOVEDReady) { _ACTION_MEDIA_REMOVEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_MEDIA_REMOVED"); _ACTION_MEDIA_REMOVEDReady = true; } return _ACTION_MEDIA_REMOVEDContent; } }
        private static Java.Lang.String _ACTION_MEDIA_REMOVEDContent = default;
        private static bool _ACTION_MEDIA_REMOVEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_MEDIA_SCANNER_FINISHED"/>
        /// </summary>
        public static Java.Lang.String ACTION_MEDIA_SCANNER_FINISHED { get { if (!_ACTION_MEDIA_SCANNER_FINISHEDReady) { _ACTION_MEDIA_SCANNER_FINISHEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_MEDIA_SCANNER_FINISHED"); _ACTION_MEDIA_SCANNER_FINISHEDReady = true; } return _ACTION_MEDIA_SCANNER_FINISHEDContent; } }
        private static Java.Lang.String _ACTION_MEDIA_SCANNER_FINISHEDContent = default;
        private static bool _ACTION_MEDIA_SCANNER_FINISHEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_MEDIA_SCANNER_SCAN_FILE"/>
        /// </summary>
        [global::System.Obsolete()]
        public static Java.Lang.String ACTION_MEDIA_SCANNER_SCAN_FILE { get { if (!_ACTION_MEDIA_SCANNER_SCAN_FILEReady) { _ACTION_MEDIA_SCANNER_SCAN_FILEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_MEDIA_SCANNER_SCAN_FILE"); _ACTION_MEDIA_SCANNER_SCAN_FILEReady = true; } return _ACTION_MEDIA_SCANNER_SCAN_FILEContent; } }
        private static Java.Lang.String _ACTION_MEDIA_SCANNER_SCAN_FILEContent = default;
        private static bool _ACTION_MEDIA_SCANNER_SCAN_FILEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_MEDIA_SCANNER_STARTED"/>
        /// </summary>
        public static Java.Lang.String ACTION_MEDIA_SCANNER_STARTED { get { if (!_ACTION_MEDIA_SCANNER_STARTEDReady) { _ACTION_MEDIA_SCANNER_STARTEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_MEDIA_SCANNER_STARTED"); _ACTION_MEDIA_SCANNER_STARTEDReady = true; } return _ACTION_MEDIA_SCANNER_STARTEDContent; } }
        private static Java.Lang.String _ACTION_MEDIA_SCANNER_STARTEDContent = default;
        private static bool _ACTION_MEDIA_SCANNER_STARTEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_MEDIA_SHARED"/>
        /// </summary>
        public static Java.Lang.String ACTION_MEDIA_SHARED { get { if (!_ACTION_MEDIA_SHAREDReady) { _ACTION_MEDIA_SHAREDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_MEDIA_SHARED"); _ACTION_MEDIA_SHAREDReady = true; } return _ACTION_MEDIA_SHAREDContent; } }
        private static Java.Lang.String _ACTION_MEDIA_SHAREDContent = default;
        private static bool _ACTION_MEDIA_SHAREDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_MEDIA_UNMOUNTABLE"/>
        /// </summary>
        public static Java.Lang.String ACTION_MEDIA_UNMOUNTABLE { get { if (!_ACTION_MEDIA_UNMOUNTABLEReady) { _ACTION_MEDIA_UNMOUNTABLEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_MEDIA_UNMOUNTABLE"); _ACTION_MEDIA_UNMOUNTABLEReady = true; } return _ACTION_MEDIA_UNMOUNTABLEContent; } }
        private static Java.Lang.String _ACTION_MEDIA_UNMOUNTABLEContent = default;
        private static bool _ACTION_MEDIA_UNMOUNTABLEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_MEDIA_UNMOUNTED"/>
        /// </summary>
        public static Java.Lang.String ACTION_MEDIA_UNMOUNTED { get { if (!_ACTION_MEDIA_UNMOUNTEDReady) { _ACTION_MEDIA_UNMOUNTEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_MEDIA_UNMOUNTED"); _ACTION_MEDIA_UNMOUNTEDReady = true; } return _ACTION_MEDIA_UNMOUNTEDContent; } }
        private static Java.Lang.String _ACTION_MEDIA_UNMOUNTEDContent = default;
        private static bool _ACTION_MEDIA_UNMOUNTEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_MY_PACKAGE_REPLACED"/>
        /// </summary>
        public static Java.Lang.String ACTION_MY_PACKAGE_REPLACED { get { if (!_ACTION_MY_PACKAGE_REPLACEDReady) { _ACTION_MY_PACKAGE_REPLACEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_MY_PACKAGE_REPLACED"); _ACTION_MY_PACKAGE_REPLACEDReady = true; } return _ACTION_MY_PACKAGE_REPLACEDContent; } }
        private static Java.Lang.String _ACTION_MY_PACKAGE_REPLACEDContent = default;
        private static bool _ACTION_MY_PACKAGE_REPLACEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_MY_PACKAGE_SUSPENDED"/>
        /// </summary>
        public static Java.Lang.String ACTION_MY_PACKAGE_SUSPENDED { get { if (!_ACTION_MY_PACKAGE_SUSPENDEDReady) { _ACTION_MY_PACKAGE_SUSPENDEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_MY_PACKAGE_SUSPENDED"); _ACTION_MY_PACKAGE_SUSPENDEDReady = true; } return _ACTION_MY_PACKAGE_SUSPENDEDContent; } }
        private static Java.Lang.String _ACTION_MY_PACKAGE_SUSPENDEDContent = default;
        private static bool _ACTION_MY_PACKAGE_SUSPENDEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_MY_PACKAGE_UNSUSPENDED"/>
        /// </summary>
        public static Java.Lang.String ACTION_MY_PACKAGE_UNSUSPENDED { get { if (!_ACTION_MY_PACKAGE_UNSUSPENDEDReady) { _ACTION_MY_PACKAGE_UNSUSPENDEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_MY_PACKAGE_UNSUSPENDED"); _ACTION_MY_PACKAGE_UNSUSPENDEDReady = true; } return _ACTION_MY_PACKAGE_UNSUSPENDEDContent; } }
        private static Java.Lang.String _ACTION_MY_PACKAGE_UNSUSPENDEDContent = default;
        private static bool _ACTION_MY_PACKAGE_UNSUSPENDEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_NEW_OUTGOING_CALL"/>
        /// </summary>
        [global::System.Obsolete()]
        public static Java.Lang.String ACTION_NEW_OUTGOING_CALL { get { if (!_ACTION_NEW_OUTGOING_CALLReady) { _ACTION_NEW_OUTGOING_CALLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_NEW_OUTGOING_CALL"); _ACTION_NEW_OUTGOING_CALLReady = true; } return _ACTION_NEW_OUTGOING_CALLContent; } }
        private static Java.Lang.String _ACTION_NEW_OUTGOING_CALLContent = default;
        private static bool _ACTION_NEW_OUTGOING_CALLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_OPEN_DOCUMENT"/>
        /// </summary>
        public static Java.Lang.String ACTION_OPEN_DOCUMENT { get { if (!_ACTION_OPEN_DOCUMENTReady) { _ACTION_OPEN_DOCUMENTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_OPEN_DOCUMENT"); _ACTION_OPEN_DOCUMENTReady = true; } return _ACTION_OPEN_DOCUMENTContent; } }
        private static Java.Lang.String _ACTION_OPEN_DOCUMENTContent = default;
        private static bool _ACTION_OPEN_DOCUMENTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_OPEN_DOCUMENT_TREE"/>
        /// </summary>
        public static Java.Lang.String ACTION_OPEN_DOCUMENT_TREE { get { if (!_ACTION_OPEN_DOCUMENT_TREEReady) { _ACTION_OPEN_DOCUMENT_TREEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_OPEN_DOCUMENT_TREE"); _ACTION_OPEN_DOCUMENT_TREEReady = true; } return _ACTION_OPEN_DOCUMENT_TREEContent; } }
        private static Java.Lang.String _ACTION_OPEN_DOCUMENT_TREEContent = default;
        private static bool _ACTION_OPEN_DOCUMENT_TREEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_PACKAGE_ADDED"/>
        /// </summary>
        public static Java.Lang.String ACTION_PACKAGE_ADDED { get { if (!_ACTION_PACKAGE_ADDEDReady) { _ACTION_PACKAGE_ADDEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_PACKAGE_ADDED"); _ACTION_PACKAGE_ADDEDReady = true; } return _ACTION_PACKAGE_ADDEDContent; } }
        private static Java.Lang.String _ACTION_PACKAGE_ADDEDContent = default;
        private static bool _ACTION_PACKAGE_ADDEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_PACKAGE_CHANGED"/>
        /// </summary>
        public static Java.Lang.String ACTION_PACKAGE_CHANGED { get { if (!_ACTION_PACKAGE_CHANGEDReady) { _ACTION_PACKAGE_CHANGEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_PACKAGE_CHANGED"); _ACTION_PACKAGE_CHANGEDReady = true; } return _ACTION_PACKAGE_CHANGEDContent; } }
        private static Java.Lang.String _ACTION_PACKAGE_CHANGEDContent = default;
        private static bool _ACTION_PACKAGE_CHANGEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_PACKAGE_DATA_CLEARED"/>
        /// </summary>
        public static Java.Lang.String ACTION_PACKAGE_DATA_CLEARED { get { if (!_ACTION_PACKAGE_DATA_CLEAREDReady) { _ACTION_PACKAGE_DATA_CLEAREDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_PACKAGE_DATA_CLEARED"); _ACTION_PACKAGE_DATA_CLEAREDReady = true; } return _ACTION_PACKAGE_DATA_CLEAREDContent; } }
        private static Java.Lang.String _ACTION_PACKAGE_DATA_CLEAREDContent = default;
        private static bool _ACTION_PACKAGE_DATA_CLEAREDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_PACKAGE_FIRST_LAUNCH"/>
        /// </summary>
        public static Java.Lang.String ACTION_PACKAGE_FIRST_LAUNCH { get { if (!_ACTION_PACKAGE_FIRST_LAUNCHReady) { _ACTION_PACKAGE_FIRST_LAUNCHContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_PACKAGE_FIRST_LAUNCH"); _ACTION_PACKAGE_FIRST_LAUNCHReady = true; } return _ACTION_PACKAGE_FIRST_LAUNCHContent; } }
        private static Java.Lang.String _ACTION_PACKAGE_FIRST_LAUNCHContent = default;
        private static bool _ACTION_PACKAGE_FIRST_LAUNCHReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_PACKAGE_FULLY_REMOVED"/>
        /// </summary>
        public static Java.Lang.String ACTION_PACKAGE_FULLY_REMOVED { get { if (!_ACTION_PACKAGE_FULLY_REMOVEDReady) { _ACTION_PACKAGE_FULLY_REMOVEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_PACKAGE_FULLY_REMOVED"); _ACTION_PACKAGE_FULLY_REMOVEDReady = true; } return _ACTION_PACKAGE_FULLY_REMOVEDContent; } }
        private static Java.Lang.String _ACTION_PACKAGE_FULLY_REMOVEDContent = default;
        private static bool _ACTION_PACKAGE_FULLY_REMOVEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_PACKAGE_INSTALL"/>
        /// </summary>
        [global::System.Obsolete()]
        public static Java.Lang.String ACTION_PACKAGE_INSTALL { get { if (!_ACTION_PACKAGE_INSTALLReady) { _ACTION_PACKAGE_INSTALLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_PACKAGE_INSTALL"); _ACTION_PACKAGE_INSTALLReady = true; } return _ACTION_PACKAGE_INSTALLContent; } }
        private static Java.Lang.String _ACTION_PACKAGE_INSTALLContent = default;
        private static bool _ACTION_PACKAGE_INSTALLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_PACKAGE_NEEDS_VERIFICATION"/>
        /// </summary>
        public static Java.Lang.String ACTION_PACKAGE_NEEDS_VERIFICATION { get { if (!_ACTION_PACKAGE_NEEDS_VERIFICATIONReady) { _ACTION_PACKAGE_NEEDS_VERIFICATIONContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_PACKAGE_NEEDS_VERIFICATION"); _ACTION_PACKAGE_NEEDS_VERIFICATIONReady = true; } return _ACTION_PACKAGE_NEEDS_VERIFICATIONContent; } }
        private static Java.Lang.String _ACTION_PACKAGE_NEEDS_VERIFICATIONContent = default;
        private static bool _ACTION_PACKAGE_NEEDS_VERIFICATIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_PACKAGE_REMOVED"/>
        /// </summary>
        public static Java.Lang.String ACTION_PACKAGE_REMOVED { get { if (!_ACTION_PACKAGE_REMOVEDReady) { _ACTION_PACKAGE_REMOVEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_PACKAGE_REMOVED"); _ACTION_PACKAGE_REMOVEDReady = true; } return _ACTION_PACKAGE_REMOVEDContent; } }
        private static Java.Lang.String _ACTION_PACKAGE_REMOVEDContent = default;
        private static bool _ACTION_PACKAGE_REMOVEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_PACKAGE_REPLACED"/>
        /// </summary>
        public static Java.Lang.String ACTION_PACKAGE_REPLACED { get { if (!_ACTION_PACKAGE_REPLACEDReady) { _ACTION_PACKAGE_REPLACEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_PACKAGE_REPLACED"); _ACTION_PACKAGE_REPLACEDReady = true; } return _ACTION_PACKAGE_REPLACEDContent; } }
        private static Java.Lang.String _ACTION_PACKAGE_REPLACEDContent = default;
        private static bool _ACTION_PACKAGE_REPLACEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_PACKAGE_RESTARTED"/>
        /// </summary>
        public static Java.Lang.String ACTION_PACKAGE_RESTARTED { get { if (!_ACTION_PACKAGE_RESTARTEDReady) { _ACTION_PACKAGE_RESTARTEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_PACKAGE_RESTARTED"); _ACTION_PACKAGE_RESTARTEDReady = true; } return _ACTION_PACKAGE_RESTARTEDContent; } }
        private static Java.Lang.String _ACTION_PACKAGE_RESTARTEDContent = default;
        private static bool _ACTION_PACKAGE_RESTARTEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_PACKAGE_UNSTOPPED"/>
        /// </summary>
        public static Java.Lang.String ACTION_PACKAGE_UNSTOPPED { get { if (!_ACTION_PACKAGE_UNSTOPPEDReady) { _ACTION_PACKAGE_UNSTOPPEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_PACKAGE_UNSTOPPED"); _ACTION_PACKAGE_UNSTOPPEDReady = true; } return _ACTION_PACKAGE_UNSTOPPEDContent; } }
        private static Java.Lang.String _ACTION_PACKAGE_UNSTOPPEDContent = default;
        private static bool _ACTION_PACKAGE_UNSTOPPEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_PACKAGE_VERIFIED"/>
        /// </summary>
        public static Java.Lang.String ACTION_PACKAGE_VERIFIED { get { if (!_ACTION_PACKAGE_VERIFIEDReady) { _ACTION_PACKAGE_VERIFIEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_PACKAGE_VERIFIED"); _ACTION_PACKAGE_VERIFIEDReady = true; } return _ACTION_PACKAGE_VERIFIEDContent; } }
        private static Java.Lang.String _ACTION_PACKAGE_VERIFIEDContent = default;
        private static bool _ACTION_PACKAGE_VERIFIEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_PACKAGES_SUSPENDED"/>
        /// </summary>
        public static Java.Lang.String ACTION_PACKAGES_SUSPENDED { get { if (!_ACTION_PACKAGES_SUSPENDEDReady) { _ACTION_PACKAGES_SUSPENDEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_PACKAGES_SUSPENDED"); _ACTION_PACKAGES_SUSPENDEDReady = true; } return _ACTION_PACKAGES_SUSPENDEDContent; } }
        private static Java.Lang.String _ACTION_PACKAGES_SUSPENDEDContent = default;
        private static bool _ACTION_PACKAGES_SUSPENDEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_PACKAGES_UNSUSPENDED"/>
        /// </summary>
        public static Java.Lang.String ACTION_PACKAGES_UNSUSPENDED { get { if (!_ACTION_PACKAGES_UNSUSPENDEDReady) { _ACTION_PACKAGES_UNSUSPENDEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_PACKAGES_UNSUSPENDED"); _ACTION_PACKAGES_UNSUSPENDEDReady = true; } return _ACTION_PACKAGES_UNSUSPENDEDContent; } }
        private static Java.Lang.String _ACTION_PACKAGES_UNSUSPENDEDContent = default;
        private static bool _ACTION_PACKAGES_UNSUSPENDEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_PASTE"/>
        /// </summary>
        public static Java.Lang.String ACTION_PASTE { get { if (!_ACTION_PASTEReady) { _ACTION_PASTEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_PASTE"); _ACTION_PASTEReady = true; } return _ACTION_PASTEContent; } }
        private static Java.Lang.String _ACTION_PASTEContent = default;
        private static bool _ACTION_PASTEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_PICK"/>
        /// </summary>
        public static Java.Lang.String ACTION_PICK { get { if (!_ACTION_PICKReady) { _ACTION_PICKContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_PICK"); _ACTION_PICKReady = true; } return _ACTION_PICKContent; } }
        private static Java.Lang.String _ACTION_PICKContent = default;
        private static bool _ACTION_PICKReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_PICK_ACTIVITY"/>
        /// </summary>
        public static Java.Lang.String ACTION_PICK_ACTIVITY { get { if (!_ACTION_PICK_ACTIVITYReady) { _ACTION_PICK_ACTIVITYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_PICK_ACTIVITY"); _ACTION_PICK_ACTIVITYReady = true; } return _ACTION_PICK_ACTIVITYContent; } }
        private static Java.Lang.String _ACTION_PICK_ACTIVITYContent = default;
        private static bool _ACTION_PICK_ACTIVITYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_POWER_CONNECTED"/>
        /// </summary>
        public static Java.Lang.String ACTION_POWER_CONNECTED { get { if (!_ACTION_POWER_CONNECTEDReady) { _ACTION_POWER_CONNECTEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_POWER_CONNECTED"); _ACTION_POWER_CONNECTEDReady = true; } return _ACTION_POWER_CONNECTEDContent; } }
        private static Java.Lang.String _ACTION_POWER_CONNECTEDContent = default;
        private static bool _ACTION_POWER_CONNECTEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_POWER_DISCONNECTED"/>
        /// </summary>
        public static Java.Lang.String ACTION_POWER_DISCONNECTED { get { if (!_ACTION_POWER_DISCONNECTEDReady) { _ACTION_POWER_DISCONNECTEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_POWER_DISCONNECTED"); _ACTION_POWER_DISCONNECTEDReady = true; } return _ACTION_POWER_DISCONNECTEDContent; } }
        private static Java.Lang.String _ACTION_POWER_DISCONNECTEDContent = default;
        private static bool _ACTION_POWER_DISCONNECTEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_POWER_USAGE_SUMMARY"/>
        /// </summary>
        public static Java.Lang.String ACTION_POWER_USAGE_SUMMARY { get { if (!_ACTION_POWER_USAGE_SUMMARYReady) { _ACTION_POWER_USAGE_SUMMARYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_POWER_USAGE_SUMMARY"); _ACTION_POWER_USAGE_SUMMARYReady = true; } return _ACTION_POWER_USAGE_SUMMARYContent; } }
        private static Java.Lang.String _ACTION_POWER_USAGE_SUMMARYContent = default;
        private static bool _ACTION_POWER_USAGE_SUMMARYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_PROCESS_TEXT"/>
        /// </summary>
        public static Java.Lang.String ACTION_PROCESS_TEXT { get { if (!_ACTION_PROCESS_TEXTReady) { _ACTION_PROCESS_TEXTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_PROCESS_TEXT"); _ACTION_PROCESS_TEXTReady = true; } return _ACTION_PROCESS_TEXTContent; } }
        private static Java.Lang.String _ACTION_PROCESS_TEXTContent = default;
        private static bool _ACTION_PROCESS_TEXTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_PROFILE_ACCESSIBLE"/>
        /// </summary>
        public static Java.Lang.String ACTION_PROFILE_ACCESSIBLE { get { if (!_ACTION_PROFILE_ACCESSIBLEReady) { _ACTION_PROFILE_ACCESSIBLEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_PROFILE_ACCESSIBLE"); _ACTION_PROFILE_ACCESSIBLEReady = true; } return _ACTION_PROFILE_ACCESSIBLEContent; } }
        private static Java.Lang.String _ACTION_PROFILE_ACCESSIBLEContent = default;
        private static bool _ACTION_PROFILE_ACCESSIBLEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_PROFILE_ADDED"/>
        /// </summary>
        public static Java.Lang.String ACTION_PROFILE_ADDED { get { if (!_ACTION_PROFILE_ADDEDReady) { _ACTION_PROFILE_ADDEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_PROFILE_ADDED"); _ACTION_PROFILE_ADDEDReady = true; } return _ACTION_PROFILE_ADDEDContent; } }
        private static Java.Lang.String _ACTION_PROFILE_ADDEDContent = default;
        private static bool _ACTION_PROFILE_ADDEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_PROFILE_AVAILABLE"/>
        /// </summary>
        public static Java.Lang.String ACTION_PROFILE_AVAILABLE { get { if (!_ACTION_PROFILE_AVAILABLEReady) { _ACTION_PROFILE_AVAILABLEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_PROFILE_AVAILABLE"); _ACTION_PROFILE_AVAILABLEReady = true; } return _ACTION_PROFILE_AVAILABLEContent; } }
        private static Java.Lang.String _ACTION_PROFILE_AVAILABLEContent = default;
        private static bool _ACTION_PROFILE_AVAILABLEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_PROFILE_INACCESSIBLE"/>
        /// </summary>
        public static Java.Lang.String ACTION_PROFILE_INACCESSIBLE { get { if (!_ACTION_PROFILE_INACCESSIBLEReady) { _ACTION_PROFILE_INACCESSIBLEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_PROFILE_INACCESSIBLE"); _ACTION_PROFILE_INACCESSIBLEReady = true; } return _ACTION_PROFILE_INACCESSIBLEContent; } }
        private static Java.Lang.String _ACTION_PROFILE_INACCESSIBLEContent = default;
        private static bool _ACTION_PROFILE_INACCESSIBLEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_PROFILE_REMOVED"/>
        /// </summary>
        public static Java.Lang.String ACTION_PROFILE_REMOVED { get { if (!_ACTION_PROFILE_REMOVEDReady) { _ACTION_PROFILE_REMOVEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_PROFILE_REMOVED"); _ACTION_PROFILE_REMOVEDReady = true; } return _ACTION_PROFILE_REMOVEDContent; } }
        private static Java.Lang.String _ACTION_PROFILE_REMOVEDContent = default;
        private static bool _ACTION_PROFILE_REMOVEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_PROFILE_UNAVAILABLE"/>
        /// </summary>
        public static Java.Lang.String ACTION_PROFILE_UNAVAILABLE { get { if (!_ACTION_PROFILE_UNAVAILABLEReady) { _ACTION_PROFILE_UNAVAILABLEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_PROFILE_UNAVAILABLE"); _ACTION_PROFILE_UNAVAILABLEReady = true; } return _ACTION_PROFILE_UNAVAILABLEContent; } }
        private static Java.Lang.String _ACTION_PROFILE_UNAVAILABLEContent = default;
        private static bool _ACTION_PROFILE_UNAVAILABLEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_PROVIDER_CHANGED"/>
        /// </summary>
        public static Java.Lang.String ACTION_PROVIDER_CHANGED { get { if (!_ACTION_PROVIDER_CHANGEDReady) { _ACTION_PROVIDER_CHANGEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_PROVIDER_CHANGED"); _ACTION_PROVIDER_CHANGEDReady = true; } return _ACTION_PROVIDER_CHANGEDContent; } }
        private static Java.Lang.String _ACTION_PROVIDER_CHANGEDContent = default;
        private static bool _ACTION_PROVIDER_CHANGEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_QUICK_CLOCK"/>
        /// </summary>
        public static Java.Lang.String ACTION_QUICK_CLOCK { get { if (!_ACTION_QUICK_CLOCKReady) { _ACTION_QUICK_CLOCKContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_QUICK_CLOCK"); _ACTION_QUICK_CLOCKReady = true; } return _ACTION_QUICK_CLOCKContent; } }
        private static Java.Lang.String _ACTION_QUICK_CLOCKContent = default;
        private static bool _ACTION_QUICK_CLOCKReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_QUICK_VIEW"/>
        /// </summary>
        public static Java.Lang.String ACTION_QUICK_VIEW { get { if (!_ACTION_QUICK_VIEWReady) { _ACTION_QUICK_VIEWContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_QUICK_VIEW"); _ACTION_QUICK_VIEWReady = true; } return _ACTION_QUICK_VIEWContent; } }
        private static Java.Lang.String _ACTION_QUICK_VIEWContent = default;
        private static bool _ACTION_QUICK_VIEWReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_REBOOT"/>
        /// </summary>
        public static Java.Lang.String ACTION_REBOOT { get { if (!_ACTION_REBOOTReady) { _ACTION_REBOOTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_REBOOT"); _ACTION_REBOOTReady = true; } return _ACTION_REBOOTContent; } }
        private static Java.Lang.String _ACTION_REBOOTContent = default;
        private static bool _ACTION_REBOOTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_RUN"/>
        /// </summary>
        public static Java.Lang.String ACTION_RUN { get { if (!_ACTION_RUNReady) { _ACTION_RUNContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_RUN"); _ACTION_RUNReady = true; } return _ACTION_RUNContent; } }
        private static Java.Lang.String _ACTION_RUNContent = default;
        private static bool _ACTION_RUNReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_SAFETY_CENTER"/>
        /// </summary>
        public static Java.Lang.String ACTION_SAFETY_CENTER { get { if (!_ACTION_SAFETY_CENTERReady) { _ACTION_SAFETY_CENTERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_SAFETY_CENTER"); _ACTION_SAFETY_CENTERReady = true; } return _ACTION_SAFETY_CENTERContent; } }
        private static Java.Lang.String _ACTION_SAFETY_CENTERContent = default;
        private static bool _ACTION_SAFETY_CENTERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_SCREEN_OFF"/>
        /// </summary>
        public static Java.Lang.String ACTION_SCREEN_OFF { get { if (!_ACTION_SCREEN_OFFReady) { _ACTION_SCREEN_OFFContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_SCREEN_OFF"); _ACTION_SCREEN_OFFReady = true; } return _ACTION_SCREEN_OFFContent; } }
        private static Java.Lang.String _ACTION_SCREEN_OFFContent = default;
        private static bool _ACTION_SCREEN_OFFReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_SCREEN_ON"/>
        /// </summary>
        public static Java.Lang.String ACTION_SCREEN_ON { get { if (!_ACTION_SCREEN_ONReady) { _ACTION_SCREEN_ONContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_SCREEN_ON"); _ACTION_SCREEN_ONReady = true; } return _ACTION_SCREEN_ONContent; } }
        private static Java.Lang.String _ACTION_SCREEN_ONContent = default;
        private static bool _ACTION_SCREEN_ONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_SEARCH"/>
        /// </summary>
        public static Java.Lang.String ACTION_SEARCH { get { if (!_ACTION_SEARCHReady) { _ACTION_SEARCHContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_SEARCH"); _ACTION_SEARCHReady = true; } return _ACTION_SEARCHContent; } }
        private static Java.Lang.String _ACTION_SEARCHContent = default;
        private static bool _ACTION_SEARCHReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_SEARCH_LONG_PRESS"/>
        /// </summary>
        public static Java.Lang.String ACTION_SEARCH_LONG_PRESS { get { if (!_ACTION_SEARCH_LONG_PRESSReady) { _ACTION_SEARCH_LONG_PRESSContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_SEARCH_LONG_PRESS"); _ACTION_SEARCH_LONG_PRESSReady = true; } return _ACTION_SEARCH_LONG_PRESSContent; } }
        private static Java.Lang.String _ACTION_SEARCH_LONG_PRESSContent = default;
        private static bool _ACTION_SEARCH_LONG_PRESSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_SEND"/>
        /// </summary>
        public static Java.Lang.String ACTION_SEND { get { if (!_ACTION_SENDReady) { _ACTION_SENDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_SEND"); _ACTION_SENDReady = true; } return _ACTION_SENDContent; } }
        private static Java.Lang.String _ACTION_SENDContent = default;
        private static bool _ACTION_SENDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_SEND_MULTIPLE"/>
        /// </summary>
        public static Java.Lang.String ACTION_SEND_MULTIPLE { get { if (!_ACTION_SEND_MULTIPLEReady) { _ACTION_SEND_MULTIPLEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_SEND_MULTIPLE"); _ACTION_SEND_MULTIPLEReady = true; } return _ACTION_SEND_MULTIPLEContent; } }
        private static Java.Lang.String _ACTION_SEND_MULTIPLEContent = default;
        private static bool _ACTION_SEND_MULTIPLEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_SENDTO"/>
        /// </summary>
        public static Java.Lang.String ACTION_SENDTO { get { if (!_ACTION_SENDTOReady) { _ACTION_SENDTOContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_SENDTO"); _ACTION_SENDTOReady = true; } return _ACTION_SENDTOContent; } }
        private static Java.Lang.String _ACTION_SENDTOContent = default;
        private static bool _ACTION_SENDTOReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_SET_WALLPAPER"/>
        /// </summary>
        public static Java.Lang.String ACTION_SET_WALLPAPER { get { if (!_ACTION_SET_WALLPAPERReady) { _ACTION_SET_WALLPAPERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_SET_WALLPAPER"); _ACTION_SET_WALLPAPERReady = true; } return _ACTION_SET_WALLPAPERContent; } }
        private static Java.Lang.String _ACTION_SET_WALLPAPERContent = default;
        private static bool _ACTION_SET_WALLPAPERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_SHOW_APP_INFO"/>
        /// </summary>
        public static Java.Lang.String ACTION_SHOW_APP_INFO { get { if (!_ACTION_SHOW_APP_INFOReady) { _ACTION_SHOW_APP_INFOContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_SHOW_APP_INFO"); _ACTION_SHOW_APP_INFOReady = true; } return _ACTION_SHOW_APP_INFOContent; } }
        private static Java.Lang.String _ACTION_SHOW_APP_INFOContent = default;
        private static bool _ACTION_SHOW_APP_INFOReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_SHOW_WORK_APPS"/>
        /// </summary>
        public static Java.Lang.String ACTION_SHOW_WORK_APPS { get { if (!_ACTION_SHOW_WORK_APPSReady) { _ACTION_SHOW_WORK_APPSContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_SHOW_WORK_APPS"); _ACTION_SHOW_WORK_APPSReady = true; } return _ACTION_SHOW_WORK_APPSContent; } }
        private static Java.Lang.String _ACTION_SHOW_WORK_APPSContent = default;
        private static bool _ACTION_SHOW_WORK_APPSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_SHUTDOWN"/>
        /// </summary>
        public static Java.Lang.String ACTION_SHUTDOWN { get { if (!_ACTION_SHUTDOWNReady) { _ACTION_SHUTDOWNContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_SHUTDOWN"); _ACTION_SHUTDOWNReady = true; } return _ACTION_SHUTDOWNContent; } }
        private static Java.Lang.String _ACTION_SHUTDOWNContent = default;
        private static bool _ACTION_SHUTDOWNReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_SYNC"/>
        /// </summary>
        public static Java.Lang.String ACTION_SYNC { get { if (!_ACTION_SYNCReady) { _ACTION_SYNCContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_SYNC"); _ACTION_SYNCReady = true; } return _ACTION_SYNCContent; } }
        private static Java.Lang.String _ACTION_SYNCContent = default;
        private static bool _ACTION_SYNCReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_SYSTEM_TUTORIAL"/>
        /// </summary>
        public static Java.Lang.String ACTION_SYSTEM_TUTORIAL { get { if (!_ACTION_SYSTEM_TUTORIALReady) { _ACTION_SYSTEM_TUTORIALContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_SYSTEM_TUTORIAL"); _ACTION_SYSTEM_TUTORIALReady = true; } return _ACTION_SYSTEM_TUTORIALContent; } }
        private static Java.Lang.String _ACTION_SYSTEM_TUTORIALContent = default;
        private static bool _ACTION_SYSTEM_TUTORIALReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_TIME_CHANGED"/>
        /// </summary>
        public static Java.Lang.String ACTION_TIME_CHANGED { get { if (!_ACTION_TIME_CHANGEDReady) { _ACTION_TIME_CHANGEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_TIME_CHANGED"); _ACTION_TIME_CHANGEDReady = true; } return _ACTION_TIME_CHANGEDContent; } }
        private static Java.Lang.String _ACTION_TIME_CHANGEDContent = default;
        private static bool _ACTION_TIME_CHANGEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_TIME_TICK"/>
        /// </summary>
        public static Java.Lang.String ACTION_TIME_TICK { get { if (!_ACTION_TIME_TICKReady) { _ACTION_TIME_TICKContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_TIME_TICK"); _ACTION_TIME_TICKReady = true; } return _ACTION_TIME_TICKContent; } }
        private static Java.Lang.String _ACTION_TIME_TICKContent = default;
        private static bool _ACTION_TIME_TICKReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_TIMEZONE_CHANGED"/>
        /// </summary>
        public static Java.Lang.String ACTION_TIMEZONE_CHANGED { get { if (!_ACTION_TIMEZONE_CHANGEDReady) { _ACTION_TIMEZONE_CHANGEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_TIMEZONE_CHANGED"); _ACTION_TIMEZONE_CHANGEDReady = true; } return _ACTION_TIMEZONE_CHANGEDContent; } }
        private static Java.Lang.String _ACTION_TIMEZONE_CHANGEDContent = default;
        private static bool _ACTION_TIMEZONE_CHANGEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_TRANSLATE"/>
        /// </summary>
        public static Java.Lang.String ACTION_TRANSLATE { get { if (!_ACTION_TRANSLATEReady) { _ACTION_TRANSLATEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_TRANSLATE"); _ACTION_TRANSLATEReady = true; } return _ACTION_TRANSLATEContent; } }
        private static Java.Lang.String _ACTION_TRANSLATEContent = default;
        private static bool _ACTION_TRANSLATEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_UID_REMOVED"/>
        /// </summary>
        public static Java.Lang.String ACTION_UID_REMOVED { get { if (!_ACTION_UID_REMOVEDReady) { _ACTION_UID_REMOVEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_UID_REMOVED"); _ACTION_UID_REMOVEDReady = true; } return _ACTION_UID_REMOVEDContent; } }
        private static Java.Lang.String _ACTION_UID_REMOVEDContent = default;
        private static bool _ACTION_UID_REMOVEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_UMS_CONNECTED"/>
        /// </summary>
        [global::System.Obsolete()]
        public static Java.Lang.String ACTION_UMS_CONNECTED { get { if (!_ACTION_UMS_CONNECTEDReady) { _ACTION_UMS_CONNECTEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_UMS_CONNECTED"); _ACTION_UMS_CONNECTEDReady = true; } return _ACTION_UMS_CONNECTEDContent; } }
        private static Java.Lang.String _ACTION_UMS_CONNECTEDContent = default;
        private static bool _ACTION_UMS_CONNECTEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_UMS_DISCONNECTED"/>
        /// </summary>
        [global::System.Obsolete()]
        public static Java.Lang.String ACTION_UMS_DISCONNECTED { get { if (!_ACTION_UMS_DISCONNECTEDReady) { _ACTION_UMS_DISCONNECTEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_UMS_DISCONNECTED"); _ACTION_UMS_DISCONNECTEDReady = true; } return _ACTION_UMS_DISCONNECTEDContent; } }
        private static Java.Lang.String _ACTION_UMS_DISCONNECTEDContent = default;
        private static bool _ACTION_UMS_DISCONNECTEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_UNARCHIVE_PACKAGE"/>
        /// </summary>
        public static Java.Lang.String ACTION_UNARCHIVE_PACKAGE { get { if (!_ACTION_UNARCHIVE_PACKAGEReady) { _ACTION_UNARCHIVE_PACKAGEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_UNARCHIVE_PACKAGE"); _ACTION_UNARCHIVE_PACKAGEReady = true; } return _ACTION_UNARCHIVE_PACKAGEContent; } }
        private static Java.Lang.String _ACTION_UNARCHIVE_PACKAGEContent = default;
        private static bool _ACTION_UNARCHIVE_PACKAGEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_UNINSTALL_PACKAGE"/>
        /// </summary>
        [global::System.Obsolete()]
        public static Java.Lang.String ACTION_UNINSTALL_PACKAGE { get { if (!_ACTION_UNINSTALL_PACKAGEReady) { _ACTION_UNINSTALL_PACKAGEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_UNINSTALL_PACKAGE"); _ACTION_UNINSTALL_PACKAGEReady = true; } return _ACTION_UNINSTALL_PACKAGEContent; } }
        private static Java.Lang.String _ACTION_UNINSTALL_PACKAGEContent = default;
        private static bool _ACTION_UNINSTALL_PACKAGEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_USER_BACKGROUND"/>
        /// </summary>
        public static Java.Lang.String ACTION_USER_BACKGROUND { get { if (!_ACTION_USER_BACKGROUNDReady) { _ACTION_USER_BACKGROUNDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_USER_BACKGROUND"); _ACTION_USER_BACKGROUNDReady = true; } return _ACTION_USER_BACKGROUNDContent; } }
        private static Java.Lang.String _ACTION_USER_BACKGROUNDContent = default;
        private static bool _ACTION_USER_BACKGROUNDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_USER_FOREGROUND"/>
        /// </summary>
        public static Java.Lang.String ACTION_USER_FOREGROUND { get { if (!_ACTION_USER_FOREGROUNDReady) { _ACTION_USER_FOREGROUNDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_USER_FOREGROUND"); _ACTION_USER_FOREGROUNDReady = true; } return _ACTION_USER_FOREGROUNDContent; } }
        private static Java.Lang.String _ACTION_USER_FOREGROUNDContent = default;
        private static bool _ACTION_USER_FOREGROUNDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_USER_INITIALIZE"/>
        /// </summary>
        public static Java.Lang.String ACTION_USER_INITIALIZE { get { if (!_ACTION_USER_INITIALIZEReady) { _ACTION_USER_INITIALIZEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_USER_INITIALIZE"); _ACTION_USER_INITIALIZEReady = true; } return _ACTION_USER_INITIALIZEContent; } }
        private static Java.Lang.String _ACTION_USER_INITIALIZEContent = default;
        private static bool _ACTION_USER_INITIALIZEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_USER_PRESENT"/>
        /// </summary>
        public static Java.Lang.String ACTION_USER_PRESENT { get { if (!_ACTION_USER_PRESENTReady) { _ACTION_USER_PRESENTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_USER_PRESENT"); _ACTION_USER_PRESENTReady = true; } return _ACTION_USER_PRESENTContent; } }
        private static Java.Lang.String _ACTION_USER_PRESENTContent = default;
        private static bool _ACTION_USER_PRESENTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_USER_UNLOCKED"/>
        /// </summary>
        public static Java.Lang.String ACTION_USER_UNLOCKED { get { if (!_ACTION_USER_UNLOCKEDReady) { _ACTION_USER_UNLOCKEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_USER_UNLOCKED"); _ACTION_USER_UNLOCKEDReady = true; } return _ACTION_USER_UNLOCKEDContent; } }
        private static Java.Lang.String _ACTION_USER_UNLOCKEDContent = default;
        private static bool _ACTION_USER_UNLOCKEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_VIEW"/>
        /// </summary>
        public static Java.Lang.String ACTION_VIEW { get { if (!_ACTION_VIEWReady) { _ACTION_VIEWContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_VIEW"); _ACTION_VIEWReady = true; } return _ACTION_VIEWContent; } }
        private static Java.Lang.String _ACTION_VIEWContent = default;
        private static bool _ACTION_VIEWReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_VIEW_LOCUS"/>
        /// </summary>
        public static Java.Lang.String ACTION_VIEW_LOCUS { get { if (!_ACTION_VIEW_LOCUSReady) { _ACTION_VIEW_LOCUSContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_VIEW_LOCUS"); _ACTION_VIEW_LOCUSReady = true; } return _ACTION_VIEW_LOCUSContent; } }
        private static Java.Lang.String _ACTION_VIEW_LOCUSContent = default;
        private static bool _ACTION_VIEW_LOCUSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_VIEW_PERMISSION_USAGE"/>
        /// </summary>
        public static Java.Lang.String ACTION_VIEW_PERMISSION_USAGE { get { if (!_ACTION_VIEW_PERMISSION_USAGEReady) { _ACTION_VIEW_PERMISSION_USAGEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_VIEW_PERMISSION_USAGE"); _ACTION_VIEW_PERMISSION_USAGEReady = true; } return _ACTION_VIEW_PERMISSION_USAGEContent; } }
        private static Java.Lang.String _ACTION_VIEW_PERMISSION_USAGEContent = default;
        private static bool _ACTION_VIEW_PERMISSION_USAGEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_VIEW_PERMISSION_USAGE_FOR_PERIOD"/>
        /// </summary>
        public static Java.Lang.String ACTION_VIEW_PERMISSION_USAGE_FOR_PERIOD { get { if (!_ACTION_VIEW_PERMISSION_USAGE_FOR_PERIODReady) { _ACTION_VIEW_PERMISSION_USAGE_FOR_PERIODContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_VIEW_PERMISSION_USAGE_FOR_PERIOD"); _ACTION_VIEW_PERMISSION_USAGE_FOR_PERIODReady = true; } return _ACTION_VIEW_PERMISSION_USAGE_FOR_PERIODContent; } }
        private static Java.Lang.String _ACTION_VIEW_PERMISSION_USAGE_FOR_PERIODContent = default;
        private static bool _ACTION_VIEW_PERMISSION_USAGE_FOR_PERIODReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_VOICE_COMMAND"/>
        /// </summary>
        public static Java.Lang.String ACTION_VOICE_COMMAND { get { if (!_ACTION_VOICE_COMMANDReady) { _ACTION_VOICE_COMMANDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_VOICE_COMMAND"); _ACTION_VOICE_COMMANDReady = true; } return _ACTION_VOICE_COMMANDContent; } }
        private static Java.Lang.String _ACTION_VOICE_COMMANDContent = default;
        private static bool _ACTION_VOICE_COMMANDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_WALLPAPER_CHANGED"/>
        /// </summary>
        [global::System.Obsolete()]
        public static Java.Lang.String ACTION_WALLPAPER_CHANGED { get { if (!_ACTION_WALLPAPER_CHANGEDReady) { _ACTION_WALLPAPER_CHANGEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_WALLPAPER_CHANGED"); _ACTION_WALLPAPER_CHANGEDReady = true; } return _ACTION_WALLPAPER_CHANGEDContent; } }
        private static Java.Lang.String _ACTION_WALLPAPER_CHANGEDContent = default;
        private static bool _ACTION_WALLPAPER_CHANGEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#ACTION_WEB_SEARCH"/>
        /// </summary>
        public static Java.Lang.String ACTION_WEB_SEARCH { get { if (!_ACTION_WEB_SEARCHReady) { _ACTION_WEB_SEARCHContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_WEB_SEARCH"); _ACTION_WEB_SEARCHReady = true; } return _ACTION_WEB_SEARCHContent; } }
        private static Java.Lang.String _ACTION_WEB_SEARCHContent = default;
        private static bool _ACTION_WEB_SEARCHReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#CATEGORY_ACCESSIBILITY_SHORTCUT_TARGET"/>
        /// </summary>
        public static Java.Lang.String CATEGORY_ACCESSIBILITY_SHORTCUT_TARGET { get { if (!_CATEGORY_ACCESSIBILITY_SHORTCUT_TARGETReady) { _CATEGORY_ACCESSIBILITY_SHORTCUT_TARGETContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CATEGORY_ACCESSIBILITY_SHORTCUT_TARGET"); _CATEGORY_ACCESSIBILITY_SHORTCUT_TARGETReady = true; } return _CATEGORY_ACCESSIBILITY_SHORTCUT_TARGETContent; } }
        private static Java.Lang.String _CATEGORY_ACCESSIBILITY_SHORTCUT_TARGETContent = default;
        private static bool _CATEGORY_ACCESSIBILITY_SHORTCUT_TARGETReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#CATEGORY_ALTERNATIVE"/>
        /// </summary>
        public static Java.Lang.String CATEGORY_ALTERNATIVE { get { if (!_CATEGORY_ALTERNATIVEReady) { _CATEGORY_ALTERNATIVEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CATEGORY_ALTERNATIVE"); _CATEGORY_ALTERNATIVEReady = true; } return _CATEGORY_ALTERNATIVEContent; } }
        private static Java.Lang.String _CATEGORY_ALTERNATIVEContent = default;
        private static bool _CATEGORY_ALTERNATIVEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#CATEGORY_APP_BROWSER"/>
        /// </summary>
        public static Java.Lang.String CATEGORY_APP_BROWSER { get { if (!_CATEGORY_APP_BROWSERReady) { _CATEGORY_APP_BROWSERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CATEGORY_APP_BROWSER"); _CATEGORY_APP_BROWSERReady = true; } return _CATEGORY_APP_BROWSERContent; } }
        private static Java.Lang.String _CATEGORY_APP_BROWSERContent = default;
        private static bool _CATEGORY_APP_BROWSERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#CATEGORY_APP_CALCULATOR"/>
        /// </summary>
        public static Java.Lang.String CATEGORY_APP_CALCULATOR { get { if (!_CATEGORY_APP_CALCULATORReady) { _CATEGORY_APP_CALCULATORContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CATEGORY_APP_CALCULATOR"); _CATEGORY_APP_CALCULATORReady = true; } return _CATEGORY_APP_CALCULATORContent; } }
        private static Java.Lang.String _CATEGORY_APP_CALCULATORContent = default;
        private static bool _CATEGORY_APP_CALCULATORReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#CATEGORY_APP_CALENDAR"/>
        /// </summary>
        public static Java.Lang.String CATEGORY_APP_CALENDAR { get { if (!_CATEGORY_APP_CALENDARReady) { _CATEGORY_APP_CALENDARContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CATEGORY_APP_CALENDAR"); _CATEGORY_APP_CALENDARReady = true; } return _CATEGORY_APP_CALENDARContent; } }
        private static Java.Lang.String _CATEGORY_APP_CALENDARContent = default;
        private static bool _CATEGORY_APP_CALENDARReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#CATEGORY_APP_CONTACTS"/>
        /// </summary>
        public static Java.Lang.String CATEGORY_APP_CONTACTS { get { if (!_CATEGORY_APP_CONTACTSReady) { _CATEGORY_APP_CONTACTSContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CATEGORY_APP_CONTACTS"); _CATEGORY_APP_CONTACTSReady = true; } return _CATEGORY_APP_CONTACTSContent; } }
        private static Java.Lang.String _CATEGORY_APP_CONTACTSContent = default;
        private static bool _CATEGORY_APP_CONTACTSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#CATEGORY_APP_EMAIL"/>
        /// </summary>
        public static Java.Lang.String CATEGORY_APP_EMAIL { get { if (!_CATEGORY_APP_EMAILReady) { _CATEGORY_APP_EMAILContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CATEGORY_APP_EMAIL"); _CATEGORY_APP_EMAILReady = true; } return _CATEGORY_APP_EMAILContent; } }
        private static Java.Lang.String _CATEGORY_APP_EMAILContent = default;
        private static bool _CATEGORY_APP_EMAILReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#CATEGORY_APP_FILES"/>
        /// </summary>
        public static Java.Lang.String CATEGORY_APP_FILES { get { if (!_CATEGORY_APP_FILESReady) { _CATEGORY_APP_FILESContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CATEGORY_APP_FILES"); _CATEGORY_APP_FILESReady = true; } return _CATEGORY_APP_FILESContent; } }
        private static Java.Lang.String _CATEGORY_APP_FILESContent = default;
        private static bool _CATEGORY_APP_FILESReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#CATEGORY_APP_FITNESS"/>
        /// </summary>
        public static Java.Lang.String CATEGORY_APP_FITNESS { get { if (!_CATEGORY_APP_FITNESSReady) { _CATEGORY_APP_FITNESSContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CATEGORY_APP_FITNESS"); _CATEGORY_APP_FITNESSReady = true; } return _CATEGORY_APP_FITNESSContent; } }
        private static Java.Lang.String _CATEGORY_APP_FITNESSContent = default;
        private static bool _CATEGORY_APP_FITNESSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#CATEGORY_APP_GALLERY"/>
        /// </summary>
        public static Java.Lang.String CATEGORY_APP_GALLERY { get { if (!_CATEGORY_APP_GALLERYReady) { _CATEGORY_APP_GALLERYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CATEGORY_APP_GALLERY"); _CATEGORY_APP_GALLERYReady = true; } return _CATEGORY_APP_GALLERYContent; } }
        private static Java.Lang.String _CATEGORY_APP_GALLERYContent = default;
        private static bool _CATEGORY_APP_GALLERYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#CATEGORY_APP_MAPS"/>
        /// </summary>
        public static Java.Lang.String CATEGORY_APP_MAPS { get { if (!_CATEGORY_APP_MAPSReady) { _CATEGORY_APP_MAPSContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CATEGORY_APP_MAPS"); _CATEGORY_APP_MAPSReady = true; } return _CATEGORY_APP_MAPSContent; } }
        private static Java.Lang.String _CATEGORY_APP_MAPSContent = default;
        private static bool _CATEGORY_APP_MAPSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#CATEGORY_APP_MARKET"/>
        /// </summary>
        public static Java.Lang.String CATEGORY_APP_MARKET { get { if (!_CATEGORY_APP_MARKETReady) { _CATEGORY_APP_MARKETContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CATEGORY_APP_MARKET"); _CATEGORY_APP_MARKETReady = true; } return _CATEGORY_APP_MARKETContent; } }
        private static Java.Lang.String _CATEGORY_APP_MARKETContent = default;
        private static bool _CATEGORY_APP_MARKETReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#CATEGORY_APP_MESSAGING"/>
        /// </summary>
        public static Java.Lang.String CATEGORY_APP_MESSAGING { get { if (!_CATEGORY_APP_MESSAGINGReady) { _CATEGORY_APP_MESSAGINGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CATEGORY_APP_MESSAGING"); _CATEGORY_APP_MESSAGINGReady = true; } return _CATEGORY_APP_MESSAGINGContent; } }
        private static Java.Lang.String _CATEGORY_APP_MESSAGINGContent = default;
        private static bool _CATEGORY_APP_MESSAGINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#CATEGORY_APP_MUSIC"/>
        /// </summary>
        public static Java.Lang.String CATEGORY_APP_MUSIC { get { if (!_CATEGORY_APP_MUSICReady) { _CATEGORY_APP_MUSICContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CATEGORY_APP_MUSIC"); _CATEGORY_APP_MUSICReady = true; } return _CATEGORY_APP_MUSICContent; } }
        private static Java.Lang.String _CATEGORY_APP_MUSICContent = default;
        private static bool _CATEGORY_APP_MUSICReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#CATEGORY_APP_WEATHER"/>
        /// </summary>
        public static Java.Lang.String CATEGORY_APP_WEATHER { get { if (!_CATEGORY_APP_WEATHERReady) { _CATEGORY_APP_WEATHERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CATEGORY_APP_WEATHER"); _CATEGORY_APP_WEATHERReady = true; } return _CATEGORY_APP_WEATHERContent; } }
        private static Java.Lang.String _CATEGORY_APP_WEATHERContent = default;
        private static bool _CATEGORY_APP_WEATHERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#CATEGORY_BROWSABLE"/>
        /// </summary>
        public static Java.Lang.String CATEGORY_BROWSABLE { get { if (!_CATEGORY_BROWSABLEReady) { _CATEGORY_BROWSABLEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CATEGORY_BROWSABLE"); _CATEGORY_BROWSABLEReady = true; } return _CATEGORY_BROWSABLEContent; } }
        private static Java.Lang.String _CATEGORY_BROWSABLEContent = default;
        private static bool _CATEGORY_BROWSABLEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#CATEGORY_CAR_DOCK"/>
        /// </summary>
        public static Java.Lang.String CATEGORY_CAR_DOCK { get { if (!_CATEGORY_CAR_DOCKReady) { _CATEGORY_CAR_DOCKContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CATEGORY_CAR_DOCK"); _CATEGORY_CAR_DOCKReady = true; } return _CATEGORY_CAR_DOCKContent; } }
        private static Java.Lang.String _CATEGORY_CAR_DOCKContent = default;
        private static bool _CATEGORY_CAR_DOCKReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#CATEGORY_CAR_MODE"/>
        /// </summary>
        public static Java.Lang.String CATEGORY_CAR_MODE { get { if (!_CATEGORY_CAR_MODEReady) { _CATEGORY_CAR_MODEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CATEGORY_CAR_MODE"); _CATEGORY_CAR_MODEReady = true; } return _CATEGORY_CAR_MODEContent; } }
        private static Java.Lang.String _CATEGORY_CAR_MODEContent = default;
        private static bool _CATEGORY_CAR_MODEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#CATEGORY_DEFAULT"/>
        /// </summary>
        public static Java.Lang.String CATEGORY_DEFAULT { get { if (!_CATEGORY_DEFAULTReady) { _CATEGORY_DEFAULTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CATEGORY_DEFAULT"); _CATEGORY_DEFAULTReady = true; } return _CATEGORY_DEFAULTContent; } }
        private static Java.Lang.String _CATEGORY_DEFAULTContent = default;
        private static bool _CATEGORY_DEFAULTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#CATEGORY_DESK_DOCK"/>
        /// </summary>
        public static Java.Lang.String CATEGORY_DESK_DOCK { get { if (!_CATEGORY_DESK_DOCKReady) { _CATEGORY_DESK_DOCKContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CATEGORY_DESK_DOCK"); _CATEGORY_DESK_DOCKReady = true; } return _CATEGORY_DESK_DOCKContent; } }
        private static Java.Lang.String _CATEGORY_DESK_DOCKContent = default;
        private static bool _CATEGORY_DESK_DOCKReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#CATEGORY_DEVELOPMENT_PREFERENCE"/>
        /// </summary>
        public static Java.Lang.String CATEGORY_DEVELOPMENT_PREFERENCE { get { if (!_CATEGORY_DEVELOPMENT_PREFERENCEReady) { _CATEGORY_DEVELOPMENT_PREFERENCEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CATEGORY_DEVELOPMENT_PREFERENCE"); _CATEGORY_DEVELOPMENT_PREFERENCEReady = true; } return _CATEGORY_DEVELOPMENT_PREFERENCEContent; } }
        private static Java.Lang.String _CATEGORY_DEVELOPMENT_PREFERENCEContent = default;
        private static bool _CATEGORY_DEVELOPMENT_PREFERENCEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#CATEGORY_EMBED"/>
        /// </summary>
        public static Java.Lang.String CATEGORY_EMBED { get { if (!_CATEGORY_EMBEDReady) { _CATEGORY_EMBEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CATEGORY_EMBED"); _CATEGORY_EMBEDReady = true; } return _CATEGORY_EMBEDContent; } }
        private static Java.Lang.String _CATEGORY_EMBEDContent = default;
        private static bool _CATEGORY_EMBEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#CATEGORY_FRAMEWORK_INSTRUMENTATION_TEST"/>
        /// </summary>
        public static Java.Lang.String CATEGORY_FRAMEWORK_INSTRUMENTATION_TEST { get { if (!_CATEGORY_FRAMEWORK_INSTRUMENTATION_TESTReady) { _CATEGORY_FRAMEWORK_INSTRUMENTATION_TESTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CATEGORY_FRAMEWORK_INSTRUMENTATION_TEST"); _CATEGORY_FRAMEWORK_INSTRUMENTATION_TESTReady = true; } return _CATEGORY_FRAMEWORK_INSTRUMENTATION_TESTContent; } }
        private static Java.Lang.String _CATEGORY_FRAMEWORK_INSTRUMENTATION_TESTContent = default;
        private static bool _CATEGORY_FRAMEWORK_INSTRUMENTATION_TESTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#CATEGORY_HE_DESK_DOCK"/>
        /// </summary>
        public static Java.Lang.String CATEGORY_HE_DESK_DOCK { get { if (!_CATEGORY_HE_DESK_DOCKReady) { _CATEGORY_HE_DESK_DOCKContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CATEGORY_HE_DESK_DOCK"); _CATEGORY_HE_DESK_DOCKReady = true; } return _CATEGORY_HE_DESK_DOCKContent; } }
        private static Java.Lang.String _CATEGORY_HE_DESK_DOCKContent = default;
        private static bool _CATEGORY_HE_DESK_DOCKReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#CATEGORY_HOME"/>
        /// </summary>
        public static Java.Lang.String CATEGORY_HOME { get { if (!_CATEGORY_HOMEReady) { _CATEGORY_HOMEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CATEGORY_HOME"); _CATEGORY_HOMEReady = true; } return _CATEGORY_HOMEContent; } }
        private static Java.Lang.String _CATEGORY_HOMEContent = default;
        private static bool _CATEGORY_HOMEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#CATEGORY_INFO"/>
        /// </summary>
        public static Java.Lang.String CATEGORY_INFO { get { if (!_CATEGORY_INFOReady) { _CATEGORY_INFOContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CATEGORY_INFO"); _CATEGORY_INFOReady = true; } return _CATEGORY_INFOContent; } }
        private static Java.Lang.String _CATEGORY_INFOContent = default;
        private static bool _CATEGORY_INFOReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#CATEGORY_LAUNCHER"/>
        /// </summary>
        public static Java.Lang.String CATEGORY_LAUNCHER { get { if (!_CATEGORY_LAUNCHERReady) { _CATEGORY_LAUNCHERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CATEGORY_LAUNCHER"); _CATEGORY_LAUNCHERReady = true; } return _CATEGORY_LAUNCHERContent; } }
        private static Java.Lang.String _CATEGORY_LAUNCHERContent = default;
        private static bool _CATEGORY_LAUNCHERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#CATEGORY_LE_DESK_DOCK"/>
        /// </summary>
        public static Java.Lang.String CATEGORY_LE_DESK_DOCK { get { if (!_CATEGORY_LE_DESK_DOCKReady) { _CATEGORY_LE_DESK_DOCKContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CATEGORY_LE_DESK_DOCK"); _CATEGORY_LE_DESK_DOCKReady = true; } return _CATEGORY_LE_DESK_DOCKContent; } }
        private static Java.Lang.String _CATEGORY_LE_DESK_DOCKContent = default;
        private static bool _CATEGORY_LE_DESK_DOCKReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#CATEGORY_LEANBACK_LAUNCHER"/>
        /// </summary>
        public static Java.Lang.String CATEGORY_LEANBACK_LAUNCHER { get { if (!_CATEGORY_LEANBACK_LAUNCHERReady) { _CATEGORY_LEANBACK_LAUNCHERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CATEGORY_LEANBACK_LAUNCHER"); _CATEGORY_LEANBACK_LAUNCHERReady = true; } return _CATEGORY_LEANBACK_LAUNCHERContent; } }
        private static Java.Lang.String _CATEGORY_LEANBACK_LAUNCHERContent = default;
        private static bool _CATEGORY_LEANBACK_LAUNCHERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#CATEGORY_MONKEY"/>
        /// </summary>
        public static Java.Lang.String CATEGORY_MONKEY { get { if (!_CATEGORY_MONKEYReady) { _CATEGORY_MONKEYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CATEGORY_MONKEY"); _CATEGORY_MONKEYReady = true; } return _CATEGORY_MONKEYContent; } }
        private static Java.Lang.String _CATEGORY_MONKEYContent = default;
        private static bool _CATEGORY_MONKEYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#CATEGORY_OPENABLE"/>
        /// </summary>
        public static Java.Lang.String CATEGORY_OPENABLE { get { if (!_CATEGORY_OPENABLEReady) { _CATEGORY_OPENABLEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CATEGORY_OPENABLE"); _CATEGORY_OPENABLEReady = true; } return _CATEGORY_OPENABLEContent; } }
        private static Java.Lang.String _CATEGORY_OPENABLEContent = default;
        private static bool _CATEGORY_OPENABLEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#CATEGORY_PREFERENCE"/>
        /// </summary>
        public static Java.Lang.String CATEGORY_PREFERENCE { get { if (!_CATEGORY_PREFERENCEReady) { _CATEGORY_PREFERENCEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CATEGORY_PREFERENCE"); _CATEGORY_PREFERENCEReady = true; } return _CATEGORY_PREFERENCEContent; } }
        private static Java.Lang.String _CATEGORY_PREFERENCEContent = default;
        private static bool _CATEGORY_PREFERENCEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#CATEGORY_SAMPLE_CODE"/>
        /// </summary>
        public static Java.Lang.String CATEGORY_SAMPLE_CODE { get { if (!_CATEGORY_SAMPLE_CODEReady) { _CATEGORY_SAMPLE_CODEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CATEGORY_SAMPLE_CODE"); _CATEGORY_SAMPLE_CODEReady = true; } return _CATEGORY_SAMPLE_CODEContent; } }
        private static Java.Lang.String _CATEGORY_SAMPLE_CODEContent = default;
        private static bool _CATEGORY_SAMPLE_CODEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#CATEGORY_SECONDARY_HOME"/>
        /// </summary>
        public static Java.Lang.String CATEGORY_SECONDARY_HOME { get { if (!_CATEGORY_SECONDARY_HOMEReady) { _CATEGORY_SECONDARY_HOMEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CATEGORY_SECONDARY_HOME"); _CATEGORY_SECONDARY_HOMEReady = true; } return _CATEGORY_SECONDARY_HOMEContent; } }
        private static Java.Lang.String _CATEGORY_SECONDARY_HOMEContent = default;
        private static bool _CATEGORY_SECONDARY_HOMEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#CATEGORY_SELECTED_ALTERNATIVE"/>
        /// </summary>
        public static Java.Lang.String CATEGORY_SELECTED_ALTERNATIVE { get { if (!_CATEGORY_SELECTED_ALTERNATIVEReady) { _CATEGORY_SELECTED_ALTERNATIVEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CATEGORY_SELECTED_ALTERNATIVE"); _CATEGORY_SELECTED_ALTERNATIVEReady = true; } return _CATEGORY_SELECTED_ALTERNATIVEContent; } }
        private static Java.Lang.String _CATEGORY_SELECTED_ALTERNATIVEContent = default;
        private static bool _CATEGORY_SELECTED_ALTERNATIVEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#CATEGORY_TAB"/>
        /// </summary>
        public static Java.Lang.String CATEGORY_TAB { get { if (!_CATEGORY_TABReady) { _CATEGORY_TABContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CATEGORY_TAB"); _CATEGORY_TABReady = true; } return _CATEGORY_TABContent; } }
        private static Java.Lang.String _CATEGORY_TABContent = default;
        private static bool _CATEGORY_TABReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#CATEGORY_TEST"/>
        /// </summary>
        public static Java.Lang.String CATEGORY_TEST { get { if (!_CATEGORY_TESTReady) { _CATEGORY_TESTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CATEGORY_TEST"); _CATEGORY_TESTReady = true; } return _CATEGORY_TESTContent; } }
        private static Java.Lang.String _CATEGORY_TESTContent = default;
        private static bool _CATEGORY_TESTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#CATEGORY_TYPED_OPENABLE"/>
        /// </summary>
        public static Java.Lang.String CATEGORY_TYPED_OPENABLE { get { if (!_CATEGORY_TYPED_OPENABLEReady) { _CATEGORY_TYPED_OPENABLEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CATEGORY_TYPED_OPENABLE"); _CATEGORY_TYPED_OPENABLEReady = true; } return _CATEGORY_TYPED_OPENABLEContent; } }
        private static Java.Lang.String _CATEGORY_TYPED_OPENABLEContent = default;
        private static bool _CATEGORY_TYPED_OPENABLEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#CATEGORY_UNIT_TEST"/>
        /// </summary>
        public static Java.Lang.String CATEGORY_UNIT_TEST { get { if (!_CATEGORY_UNIT_TESTReady) { _CATEGORY_UNIT_TESTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CATEGORY_UNIT_TEST"); _CATEGORY_UNIT_TESTReady = true; } return _CATEGORY_UNIT_TESTContent; } }
        private static Java.Lang.String _CATEGORY_UNIT_TESTContent = default;
        private static bool _CATEGORY_UNIT_TESTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#CATEGORY_VOICE"/>
        /// </summary>
        public static Java.Lang.String CATEGORY_VOICE { get { if (!_CATEGORY_VOICEReady) { _CATEGORY_VOICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CATEGORY_VOICE"); _CATEGORY_VOICEReady = true; } return _CATEGORY_VOICEContent; } }
        private static Java.Lang.String _CATEGORY_VOICEContent = default;
        private static bool _CATEGORY_VOICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#CATEGORY_VR_HOME"/>
        /// </summary>
        public static Java.Lang.String CATEGORY_VR_HOME { get { if (!_CATEGORY_VR_HOMEReady) { _CATEGORY_VR_HOMEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CATEGORY_VR_HOME"); _CATEGORY_VR_HOMEReady = true; } return _CATEGORY_VR_HOMEContent; } }
        private static Java.Lang.String _CATEGORY_VR_HOMEContent = default;
        private static bool _CATEGORY_VR_HOMEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_ALARM_COUNT"/>
        /// </summary>
        public static Java.Lang.String EXTRA_ALARM_COUNT { get { if (!_EXTRA_ALARM_COUNTReady) { _EXTRA_ALARM_COUNTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_ALARM_COUNT"); _EXTRA_ALARM_COUNTReady = true; } return _EXTRA_ALARM_COUNTContent; } }
        private static Java.Lang.String _EXTRA_ALARM_COUNTContent = default;
        private static bool _EXTRA_ALARM_COUNTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_ALLOW_MULTIPLE"/>
        /// </summary>
        public static Java.Lang.String EXTRA_ALLOW_MULTIPLE { get { if (!_EXTRA_ALLOW_MULTIPLEReady) { _EXTRA_ALLOW_MULTIPLEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_ALLOW_MULTIPLE"); _EXTRA_ALLOW_MULTIPLEReady = true; } return _EXTRA_ALLOW_MULTIPLEContent; } }
        private static Java.Lang.String _EXTRA_ALLOW_MULTIPLEContent = default;
        private static bool _EXTRA_ALLOW_MULTIPLEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_ALLOW_REPLACE"/>
        /// </summary>
        [global::System.Obsolete()]
        public static Java.Lang.String EXTRA_ALLOW_REPLACE { get { if (!_EXTRA_ALLOW_REPLACEReady) { _EXTRA_ALLOW_REPLACEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_ALLOW_REPLACE"); _EXTRA_ALLOW_REPLACEReady = true; } return _EXTRA_ALLOW_REPLACEContent; } }
        private static Java.Lang.String _EXTRA_ALLOW_REPLACEContent = default;
        private static bool _EXTRA_ALLOW_REPLACEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_ALTERNATE_INTENTS"/>
        /// </summary>
        public static Java.Lang.String EXTRA_ALTERNATE_INTENTS { get { if (!_EXTRA_ALTERNATE_INTENTSReady) { _EXTRA_ALTERNATE_INTENTSContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_ALTERNATE_INTENTS"); _EXTRA_ALTERNATE_INTENTSReady = true; } return _EXTRA_ALTERNATE_INTENTSContent; } }
        private static Java.Lang.String _EXTRA_ALTERNATE_INTENTSContent = default;
        private static bool _EXTRA_ALTERNATE_INTENTSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_ARCHIVAL"/>
        /// </summary>
        public static Java.Lang.String EXTRA_ARCHIVAL { get { if (!_EXTRA_ARCHIVALReady) { _EXTRA_ARCHIVALContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_ARCHIVAL"); _EXTRA_ARCHIVALReady = true; } return _EXTRA_ARCHIVALContent; } }
        private static Java.Lang.String _EXTRA_ARCHIVALContent = default;
        private static bool _EXTRA_ARCHIVALReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_ASSIST_CONTEXT"/>
        /// </summary>
        public static Java.Lang.String EXTRA_ASSIST_CONTEXT { get { if (!_EXTRA_ASSIST_CONTEXTReady) { _EXTRA_ASSIST_CONTEXTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_ASSIST_CONTEXT"); _EXTRA_ASSIST_CONTEXTReady = true; } return _EXTRA_ASSIST_CONTEXTContent; } }
        private static Java.Lang.String _EXTRA_ASSIST_CONTEXTContent = default;
        private static bool _EXTRA_ASSIST_CONTEXTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_ASSIST_INPUT_DEVICE_ID"/>
        /// </summary>
        public static Java.Lang.String EXTRA_ASSIST_INPUT_DEVICE_ID { get { if (!_EXTRA_ASSIST_INPUT_DEVICE_IDReady) { _EXTRA_ASSIST_INPUT_DEVICE_IDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_ASSIST_INPUT_DEVICE_ID"); _EXTRA_ASSIST_INPUT_DEVICE_IDReady = true; } return _EXTRA_ASSIST_INPUT_DEVICE_IDContent; } }
        private static Java.Lang.String _EXTRA_ASSIST_INPUT_DEVICE_IDContent = default;
        private static bool _EXTRA_ASSIST_INPUT_DEVICE_IDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_ASSIST_INPUT_HINT_KEYBOARD"/>
        /// </summary>
        public static Java.Lang.String EXTRA_ASSIST_INPUT_HINT_KEYBOARD { get { if (!_EXTRA_ASSIST_INPUT_HINT_KEYBOARDReady) { _EXTRA_ASSIST_INPUT_HINT_KEYBOARDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_ASSIST_INPUT_HINT_KEYBOARD"); _EXTRA_ASSIST_INPUT_HINT_KEYBOARDReady = true; } return _EXTRA_ASSIST_INPUT_HINT_KEYBOARDContent; } }
        private static Java.Lang.String _EXTRA_ASSIST_INPUT_HINT_KEYBOARDContent = default;
        private static bool _EXTRA_ASSIST_INPUT_HINT_KEYBOARDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_ASSIST_PACKAGE"/>
        /// </summary>
        public static Java.Lang.String EXTRA_ASSIST_PACKAGE { get { if (!_EXTRA_ASSIST_PACKAGEReady) { _EXTRA_ASSIST_PACKAGEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_ASSIST_PACKAGE"); _EXTRA_ASSIST_PACKAGEReady = true; } return _EXTRA_ASSIST_PACKAGEContent; } }
        private static Java.Lang.String _EXTRA_ASSIST_PACKAGEContent = default;
        private static bool _EXTRA_ASSIST_PACKAGEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_ASSIST_UID"/>
        /// </summary>
        public static Java.Lang.String EXTRA_ASSIST_UID { get { if (!_EXTRA_ASSIST_UIDReady) { _EXTRA_ASSIST_UIDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_ASSIST_UID"); _EXTRA_ASSIST_UIDReady = true; } return _EXTRA_ASSIST_UIDContent; } }
        private static Java.Lang.String _EXTRA_ASSIST_UIDContent = default;
        private static bool _EXTRA_ASSIST_UIDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_ATTRIBUTION_TAGS"/>
        /// </summary>
        public static Java.Lang.String EXTRA_ATTRIBUTION_TAGS { get { if (!_EXTRA_ATTRIBUTION_TAGSReady) { _EXTRA_ATTRIBUTION_TAGSContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_ATTRIBUTION_TAGS"); _EXTRA_ATTRIBUTION_TAGSReady = true; } return _EXTRA_ATTRIBUTION_TAGSContent; } }
        private static Java.Lang.String _EXTRA_ATTRIBUTION_TAGSContent = default;
        private static bool _EXTRA_ATTRIBUTION_TAGSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_AUTO_LAUNCH_SINGLE_CHOICE"/>
        /// </summary>
        public static Java.Lang.String EXTRA_AUTO_LAUNCH_SINGLE_CHOICE { get { if (!_EXTRA_AUTO_LAUNCH_SINGLE_CHOICEReady) { _EXTRA_AUTO_LAUNCH_SINGLE_CHOICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_AUTO_LAUNCH_SINGLE_CHOICE"); _EXTRA_AUTO_LAUNCH_SINGLE_CHOICEReady = true; } return _EXTRA_AUTO_LAUNCH_SINGLE_CHOICEContent; } }
        private static Java.Lang.String _EXTRA_AUTO_LAUNCH_SINGLE_CHOICEContent = default;
        private static bool _EXTRA_AUTO_LAUNCH_SINGLE_CHOICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_BCC"/>
        /// </summary>
        public static Java.Lang.String EXTRA_BCC { get { if (!_EXTRA_BCCReady) { _EXTRA_BCCContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_BCC"); _EXTRA_BCCReady = true; } return _EXTRA_BCCContent; } }
        private static Java.Lang.String _EXTRA_BCCContent = default;
        private static bool _EXTRA_BCCReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_BUG_REPORT"/>
        /// </summary>
        public static Java.Lang.String EXTRA_BUG_REPORT { get { if (!_EXTRA_BUG_REPORTReady) { _EXTRA_BUG_REPORTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_BUG_REPORT"); _EXTRA_BUG_REPORTReady = true; } return _EXTRA_BUG_REPORTContent; } }
        private static Java.Lang.String _EXTRA_BUG_REPORTContent = default;
        private static bool _EXTRA_BUG_REPORTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_CAPTURE_CONTENT_FOR_NOTE_STATUS_CODE"/>
        /// </summary>
        public static Java.Lang.String EXTRA_CAPTURE_CONTENT_FOR_NOTE_STATUS_CODE { get { if (!_EXTRA_CAPTURE_CONTENT_FOR_NOTE_STATUS_CODEReady) { _EXTRA_CAPTURE_CONTENT_FOR_NOTE_STATUS_CODEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_CAPTURE_CONTENT_FOR_NOTE_STATUS_CODE"); _EXTRA_CAPTURE_CONTENT_FOR_NOTE_STATUS_CODEReady = true; } return _EXTRA_CAPTURE_CONTENT_FOR_NOTE_STATUS_CODEContent; } }
        private static Java.Lang.String _EXTRA_CAPTURE_CONTENT_FOR_NOTE_STATUS_CODEContent = default;
        private static bool _EXTRA_CAPTURE_CONTENT_FOR_NOTE_STATUS_CODEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_CC"/>
        /// </summary>
        public static Java.Lang.String EXTRA_CC { get { if (!_EXTRA_CCReady) { _EXTRA_CCContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_CC"); _EXTRA_CCReady = true; } return _EXTRA_CCContent; } }
        private static Java.Lang.String _EXTRA_CCContent = default;
        private static bool _EXTRA_CCReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_CHANGED_COMPONENT_NAME"/>
        /// </summary>
        [global::System.Obsolete()]
        public static Java.Lang.String EXTRA_CHANGED_COMPONENT_NAME { get { if (!_EXTRA_CHANGED_COMPONENT_NAMEReady) { _EXTRA_CHANGED_COMPONENT_NAMEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_CHANGED_COMPONENT_NAME"); _EXTRA_CHANGED_COMPONENT_NAMEReady = true; } return _EXTRA_CHANGED_COMPONENT_NAMEContent; } }
        private static Java.Lang.String _EXTRA_CHANGED_COMPONENT_NAMEContent = default;
        private static bool _EXTRA_CHANGED_COMPONENT_NAMEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_CHANGED_COMPONENT_NAME_LIST"/>
        /// </summary>
        public static Java.Lang.String EXTRA_CHANGED_COMPONENT_NAME_LIST { get { if (!_EXTRA_CHANGED_COMPONENT_NAME_LISTReady) { _EXTRA_CHANGED_COMPONENT_NAME_LISTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_CHANGED_COMPONENT_NAME_LIST"); _EXTRA_CHANGED_COMPONENT_NAME_LISTReady = true; } return _EXTRA_CHANGED_COMPONENT_NAME_LISTContent; } }
        private static Java.Lang.String _EXTRA_CHANGED_COMPONENT_NAME_LISTContent = default;
        private static bool _EXTRA_CHANGED_COMPONENT_NAME_LISTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_CHANGED_PACKAGE_LIST"/>
        /// </summary>
        public static Java.Lang.String EXTRA_CHANGED_PACKAGE_LIST { get { if (!_EXTRA_CHANGED_PACKAGE_LISTReady) { _EXTRA_CHANGED_PACKAGE_LISTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_CHANGED_PACKAGE_LIST"); _EXTRA_CHANGED_PACKAGE_LISTReady = true; } return _EXTRA_CHANGED_PACKAGE_LISTContent; } }
        private static Java.Lang.String _EXTRA_CHANGED_PACKAGE_LISTContent = default;
        private static bool _EXTRA_CHANGED_PACKAGE_LISTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_CHANGED_UID_LIST"/>
        /// </summary>
        public static Java.Lang.String EXTRA_CHANGED_UID_LIST { get { if (!_EXTRA_CHANGED_UID_LISTReady) { _EXTRA_CHANGED_UID_LISTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_CHANGED_UID_LIST"); _EXTRA_CHANGED_UID_LISTReady = true; } return _EXTRA_CHANGED_UID_LISTContent; } }
        private static Java.Lang.String _EXTRA_CHANGED_UID_LISTContent = default;
        private static bool _EXTRA_CHANGED_UID_LISTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_CHOOSER_ADDITIONAL_CONTENT_URI"/>
        /// </summary>
        public static Java.Lang.String EXTRA_CHOOSER_ADDITIONAL_CONTENT_URI { get { if (!_EXTRA_CHOOSER_ADDITIONAL_CONTENT_URIReady) { _EXTRA_CHOOSER_ADDITIONAL_CONTENT_URIContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_CHOOSER_ADDITIONAL_CONTENT_URI"); _EXTRA_CHOOSER_ADDITIONAL_CONTENT_URIReady = true; } return _EXTRA_CHOOSER_ADDITIONAL_CONTENT_URIContent; } }
        private static Java.Lang.String _EXTRA_CHOOSER_ADDITIONAL_CONTENT_URIContent = default;
        private static bool _EXTRA_CHOOSER_ADDITIONAL_CONTENT_URIReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_CHOOSER_CONTENT_TYPE_HINT"/>
        /// </summary>
        public static Java.Lang.String EXTRA_CHOOSER_CONTENT_TYPE_HINT { get { if (!_EXTRA_CHOOSER_CONTENT_TYPE_HINTReady) { _EXTRA_CHOOSER_CONTENT_TYPE_HINTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_CHOOSER_CONTENT_TYPE_HINT"); _EXTRA_CHOOSER_CONTENT_TYPE_HINTReady = true; } return _EXTRA_CHOOSER_CONTENT_TYPE_HINTContent; } }
        private static Java.Lang.String _EXTRA_CHOOSER_CONTENT_TYPE_HINTContent = default;
        private static bool _EXTRA_CHOOSER_CONTENT_TYPE_HINTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_CHOOSER_CUSTOM_ACTIONS"/>
        /// </summary>
        public static Java.Lang.String EXTRA_CHOOSER_CUSTOM_ACTIONS { get { if (!_EXTRA_CHOOSER_CUSTOM_ACTIONSReady) { _EXTRA_CHOOSER_CUSTOM_ACTIONSContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_CHOOSER_CUSTOM_ACTIONS"); _EXTRA_CHOOSER_CUSTOM_ACTIONSReady = true; } return _EXTRA_CHOOSER_CUSTOM_ACTIONSContent; } }
        private static Java.Lang.String _EXTRA_CHOOSER_CUSTOM_ACTIONSContent = default;
        private static bool _EXTRA_CHOOSER_CUSTOM_ACTIONSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_CHOOSER_FOCUSED_ITEM_POSITION"/>
        /// </summary>
        public static Java.Lang.String EXTRA_CHOOSER_FOCUSED_ITEM_POSITION { get { if (!_EXTRA_CHOOSER_FOCUSED_ITEM_POSITIONReady) { _EXTRA_CHOOSER_FOCUSED_ITEM_POSITIONContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_CHOOSER_FOCUSED_ITEM_POSITION"); _EXTRA_CHOOSER_FOCUSED_ITEM_POSITIONReady = true; } return _EXTRA_CHOOSER_FOCUSED_ITEM_POSITIONContent; } }
        private static Java.Lang.String _EXTRA_CHOOSER_FOCUSED_ITEM_POSITIONContent = default;
        private static bool _EXTRA_CHOOSER_FOCUSED_ITEM_POSITIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_CHOOSER_MODIFY_SHARE_ACTION"/>
        /// </summary>
        public static Java.Lang.String EXTRA_CHOOSER_MODIFY_SHARE_ACTION { get { if (!_EXTRA_CHOOSER_MODIFY_SHARE_ACTIONReady) { _EXTRA_CHOOSER_MODIFY_SHARE_ACTIONContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_CHOOSER_MODIFY_SHARE_ACTION"); _EXTRA_CHOOSER_MODIFY_SHARE_ACTIONReady = true; } return _EXTRA_CHOOSER_MODIFY_SHARE_ACTIONContent; } }
        private static Java.Lang.String _EXTRA_CHOOSER_MODIFY_SHARE_ACTIONContent = default;
        private static bool _EXTRA_CHOOSER_MODIFY_SHARE_ACTIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_CHOOSER_REFINEMENT_INTENT_SENDER"/>
        /// </summary>
        public static Java.Lang.String EXTRA_CHOOSER_REFINEMENT_INTENT_SENDER { get { if (!_EXTRA_CHOOSER_REFINEMENT_INTENT_SENDERReady) { _EXTRA_CHOOSER_REFINEMENT_INTENT_SENDERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_CHOOSER_REFINEMENT_INTENT_SENDER"); _EXTRA_CHOOSER_REFINEMENT_INTENT_SENDERReady = true; } return _EXTRA_CHOOSER_REFINEMENT_INTENT_SENDERContent; } }
        private static Java.Lang.String _EXTRA_CHOOSER_REFINEMENT_INTENT_SENDERContent = default;
        private static bool _EXTRA_CHOOSER_REFINEMENT_INTENT_SENDERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_CHOOSER_RESULT"/>
        /// </summary>
        public static Java.Lang.String EXTRA_CHOOSER_RESULT { get { if (!_EXTRA_CHOOSER_RESULTReady) { _EXTRA_CHOOSER_RESULTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_CHOOSER_RESULT"); _EXTRA_CHOOSER_RESULTReady = true; } return _EXTRA_CHOOSER_RESULTContent; } }
        private static Java.Lang.String _EXTRA_CHOOSER_RESULTContent = default;
        private static bool _EXTRA_CHOOSER_RESULTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_CHOOSER_RESULT_INTENT_SENDER"/>
        /// </summary>
        public static Java.Lang.String EXTRA_CHOOSER_RESULT_INTENT_SENDER { get { if (!_EXTRA_CHOOSER_RESULT_INTENT_SENDERReady) { _EXTRA_CHOOSER_RESULT_INTENT_SENDERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_CHOOSER_RESULT_INTENT_SENDER"); _EXTRA_CHOOSER_RESULT_INTENT_SENDERReady = true; } return _EXTRA_CHOOSER_RESULT_INTENT_SENDERContent; } }
        private static Java.Lang.String _EXTRA_CHOOSER_RESULT_INTENT_SENDERContent = default;
        private static bool _EXTRA_CHOOSER_RESULT_INTENT_SENDERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_CHOOSER_TARGETS"/>
        /// </summary>
        public static Java.Lang.String EXTRA_CHOOSER_TARGETS { get { if (!_EXTRA_CHOOSER_TARGETSReady) { _EXTRA_CHOOSER_TARGETSContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_CHOOSER_TARGETS"); _EXTRA_CHOOSER_TARGETSReady = true; } return _EXTRA_CHOOSER_TARGETSContent; } }
        private static Java.Lang.String _EXTRA_CHOOSER_TARGETSContent = default;
        private static bool _EXTRA_CHOOSER_TARGETSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_CHOSEN_COMPONENT"/>
        /// </summary>
        public static Java.Lang.String EXTRA_CHOSEN_COMPONENT { get { if (!_EXTRA_CHOSEN_COMPONENTReady) { _EXTRA_CHOSEN_COMPONENTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_CHOSEN_COMPONENT"); _EXTRA_CHOSEN_COMPONENTReady = true; } return _EXTRA_CHOSEN_COMPONENTContent; } }
        private static Java.Lang.String _EXTRA_CHOSEN_COMPONENTContent = default;
        private static bool _EXTRA_CHOSEN_COMPONENTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_CHOSEN_COMPONENT_INTENT_SENDER"/>
        /// </summary>
        public static Java.Lang.String EXTRA_CHOSEN_COMPONENT_INTENT_SENDER { get { if (!_EXTRA_CHOSEN_COMPONENT_INTENT_SENDERReady) { _EXTRA_CHOSEN_COMPONENT_INTENT_SENDERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_CHOSEN_COMPONENT_INTENT_SENDER"); _EXTRA_CHOSEN_COMPONENT_INTENT_SENDERReady = true; } return _EXTRA_CHOSEN_COMPONENT_INTENT_SENDERContent; } }
        private static Java.Lang.String _EXTRA_CHOSEN_COMPONENT_INTENT_SENDERContent = default;
        private static bool _EXTRA_CHOSEN_COMPONENT_INTENT_SENDERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_COMPONENT_NAME"/>
        /// </summary>
        public static Java.Lang.String EXTRA_COMPONENT_NAME { get { if (!_EXTRA_COMPONENT_NAMEReady) { _EXTRA_COMPONENT_NAMEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_COMPONENT_NAME"); _EXTRA_COMPONENT_NAMEReady = true; } return _EXTRA_COMPONENT_NAMEContent; } }
        private static Java.Lang.String _EXTRA_COMPONENT_NAMEContent = default;
        private static bool _EXTRA_COMPONENT_NAMEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_CONTENT_ANNOTATIONS"/>
        /// </summary>
        public static Java.Lang.String EXTRA_CONTENT_ANNOTATIONS { get { if (!_EXTRA_CONTENT_ANNOTATIONSReady) { _EXTRA_CONTENT_ANNOTATIONSContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_CONTENT_ANNOTATIONS"); _EXTRA_CONTENT_ANNOTATIONSReady = true; } return _EXTRA_CONTENT_ANNOTATIONSContent; } }
        private static Java.Lang.String _EXTRA_CONTENT_ANNOTATIONSContent = default;
        private static bool _EXTRA_CONTENT_ANNOTATIONSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_CONTENT_QUERY"/>
        /// </summary>
        public static Java.Lang.String EXTRA_CONTENT_QUERY { get { if (!_EXTRA_CONTENT_QUERYReady) { _EXTRA_CONTENT_QUERYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_CONTENT_QUERY"); _EXTRA_CONTENT_QUERYReady = true; } return _EXTRA_CONTENT_QUERYContent; } }
        private static Java.Lang.String _EXTRA_CONTENT_QUERYContent = default;
        private static bool _EXTRA_CONTENT_QUERYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_DATA_REMOVED"/>
        /// </summary>
        public static Java.Lang.String EXTRA_DATA_REMOVED { get { if (!_EXTRA_DATA_REMOVEDReady) { _EXTRA_DATA_REMOVEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_DATA_REMOVED"); _EXTRA_DATA_REMOVEDReady = true; } return _EXTRA_DATA_REMOVEDContent; } }
        private static Java.Lang.String _EXTRA_DATA_REMOVEDContent = default;
        private static bool _EXTRA_DATA_REMOVEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_DOCK_STATE"/>
        /// </summary>
        public static Java.Lang.String EXTRA_DOCK_STATE { get { if (!_EXTRA_DOCK_STATEReady) { _EXTRA_DOCK_STATEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_DOCK_STATE"); _EXTRA_DOCK_STATEReady = true; } return _EXTRA_DOCK_STATEContent; } }
        private static Java.Lang.String _EXTRA_DOCK_STATEContent = default;
        private static bool _EXTRA_DOCK_STATEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_DONT_KILL_APP"/>
        /// </summary>
        public static Java.Lang.String EXTRA_DONT_KILL_APP { get { if (!_EXTRA_DONT_KILL_APPReady) { _EXTRA_DONT_KILL_APPContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_DONT_KILL_APP"); _EXTRA_DONT_KILL_APPReady = true; } return _EXTRA_DONT_KILL_APPContent; } }
        private static Java.Lang.String _EXTRA_DONT_KILL_APPContent = default;
        private static bool _EXTRA_DONT_KILL_APPReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_DURATION_MILLIS"/>
        /// </summary>
        public static Java.Lang.String EXTRA_DURATION_MILLIS { get { if (!_EXTRA_DURATION_MILLISReady) { _EXTRA_DURATION_MILLISContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_DURATION_MILLIS"); _EXTRA_DURATION_MILLISReady = true; } return _EXTRA_DURATION_MILLISContent; } }
        private static Java.Lang.String _EXTRA_DURATION_MILLISContent = default;
        private static bool _EXTRA_DURATION_MILLISReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_EMAIL"/>
        /// </summary>
        public static Java.Lang.String EXTRA_EMAIL { get { if (!_EXTRA_EMAILReady) { _EXTRA_EMAILContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_EMAIL"); _EXTRA_EMAILReady = true; } return _EXTRA_EMAILContent; } }
        private static Java.Lang.String _EXTRA_EMAILContent = default;
        private static bool _EXTRA_EMAILReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_END_TIME"/>
        /// </summary>
        public static Java.Lang.String EXTRA_END_TIME { get { if (!_EXTRA_END_TIMEReady) { _EXTRA_END_TIMEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_END_TIME"); _EXTRA_END_TIMEReady = true; } return _EXTRA_END_TIMEContent; } }
        private static Java.Lang.String _EXTRA_END_TIMEContent = default;
        private static bool _EXTRA_END_TIMEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_EXCLUDE_COMPONENTS"/>
        /// </summary>
        public static Java.Lang.String EXTRA_EXCLUDE_COMPONENTS { get { if (!_EXTRA_EXCLUDE_COMPONENTSReady) { _EXTRA_EXCLUDE_COMPONENTSContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_EXCLUDE_COMPONENTS"); _EXTRA_EXCLUDE_COMPONENTSReady = true; } return _EXTRA_EXCLUDE_COMPONENTSContent; } }
        private static Java.Lang.String _EXTRA_EXCLUDE_COMPONENTSContent = default;
        private static bool _EXTRA_EXCLUDE_COMPONENTSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_FROM_STORAGE"/>
        /// </summary>
        public static Java.Lang.String EXTRA_FROM_STORAGE { get { if (!_EXTRA_FROM_STORAGEReady) { _EXTRA_FROM_STORAGEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_FROM_STORAGE"); _EXTRA_FROM_STORAGEReady = true; } return _EXTRA_FROM_STORAGEContent; } }
        private static Java.Lang.String _EXTRA_FROM_STORAGEContent = default;
        private static bool _EXTRA_FROM_STORAGEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_HTML_TEXT"/>
        /// </summary>
        public static Java.Lang.String EXTRA_HTML_TEXT { get { if (!_EXTRA_HTML_TEXTReady) { _EXTRA_HTML_TEXTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_HTML_TEXT"); _EXTRA_HTML_TEXTReady = true; } return _EXTRA_HTML_TEXTContent; } }
        private static Java.Lang.String _EXTRA_HTML_TEXTContent = default;
        private static bool _EXTRA_HTML_TEXTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_INDEX"/>
        /// </summary>
        public static Java.Lang.String EXTRA_INDEX { get { if (!_EXTRA_INDEXReady) { _EXTRA_INDEXContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_INDEX"); _EXTRA_INDEXReady = true; } return _EXTRA_INDEXContent; } }
        private static Java.Lang.String _EXTRA_INDEXContent = default;
        private static bool _EXTRA_INDEXReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_INITIAL_INTENTS"/>
        /// </summary>
        public static Java.Lang.String EXTRA_INITIAL_INTENTS { get { if (!_EXTRA_INITIAL_INTENTSReady) { _EXTRA_INITIAL_INTENTSContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_INITIAL_INTENTS"); _EXTRA_INITIAL_INTENTSReady = true; } return _EXTRA_INITIAL_INTENTSContent; } }
        private static Java.Lang.String _EXTRA_INITIAL_INTENTSContent = default;
        private static bool _EXTRA_INITIAL_INTENTSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_INSTALLER_PACKAGE_NAME"/>
        /// </summary>
        public static Java.Lang.String EXTRA_INSTALLER_PACKAGE_NAME { get { if (!_EXTRA_INSTALLER_PACKAGE_NAMEReady) { _EXTRA_INSTALLER_PACKAGE_NAMEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_INSTALLER_PACKAGE_NAME"); _EXTRA_INSTALLER_PACKAGE_NAMEReady = true; } return _EXTRA_INSTALLER_PACKAGE_NAMEContent; } }
        private static Java.Lang.String _EXTRA_INSTALLER_PACKAGE_NAMEContent = default;
        private static bool _EXTRA_INSTALLER_PACKAGE_NAMEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_INTENT"/>
        /// </summary>
        public static Java.Lang.String EXTRA_INTENT { get { if (!_EXTRA_INTENTReady) { _EXTRA_INTENTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_INTENT"); _EXTRA_INTENTReady = true; } return _EXTRA_INTENTContent; } }
        private static Java.Lang.String _EXTRA_INTENTContent = default;
        private static bool _EXTRA_INTENTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_KEY_EVENT"/>
        /// </summary>
        public static Java.Lang.String EXTRA_KEY_EVENT { get { if (!_EXTRA_KEY_EVENTReady) { _EXTRA_KEY_EVENTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_KEY_EVENT"); _EXTRA_KEY_EVENTReady = true; } return _EXTRA_KEY_EVENTContent; } }
        private static Java.Lang.String _EXTRA_KEY_EVENTContent = default;
        private static bool _EXTRA_KEY_EVENTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_LOCAL_ONLY"/>
        /// </summary>
        public static Java.Lang.String EXTRA_LOCAL_ONLY { get { if (!_EXTRA_LOCAL_ONLYReady) { _EXTRA_LOCAL_ONLYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_LOCAL_ONLY"); _EXTRA_LOCAL_ONLYReady = true; } return _EXTRA_LOCAL_ONLYContent; } }
        private static Java.Lang.String _EXTRA_LOCAL_ONLYContent = default;
        private static bool _EXTRA_LOCAL_ONLYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_LOCALE_LIST"/>
        /// </summary>
        public static Java.Lang.String EXTRA_LOCALE_LIST { get { if (!_EXTRA_LOCALE_LISTReady) { _EXTRA_LOCALE_LISTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_LOCALE_LIST"); _EXTRA_LOCALE_LISTReady = true; } return _EXTRA_LOCALE_LISTContent; } }
        private static Java.Lang.String _EXTRA_LOCALE_LISTContent = default;
        private static bool _EXTRA_LOCALE_LISTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_LOCUS_ID"/>
        /// </summary>
        public static Java.Lang.String EXTRA_LOCUS_ID { get { if (!_EXTRA_LOCUS_IDReady) { _EXTRA_LOCUS_IDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_LOCUS_ID"); _EXTRA_LOCUS_IDReady = true; } return _EXTRA_LOCUS_IDContent; } }
        private static Java.Lang.String _EXTRA_LOCUS_IDContent = default;
        private static bool _EXTRA_LOCUS_IDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_METADATA_TEXT"/>
        /// </summary>
        public static Java.Lang.String EXTRA_METADATA_TEXT { get { if (!_EXTRA_METADATA_TEXTReady) { _EXTRA_METADATA_TEXTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_METADATA_TEXT"); _EXTRA_METADATA_TEXTReady = true; } return _EXTRA_METADATA_TEXTContent; } }
        private static Java.Lang.String _EXTRA_METADATA_TEXTContent = default;
        private static bool _EXTRA_METADATA_TEXTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_MIME_TYPES"/>
        /// </summary>
        public static Java.Lang.String EXTRA_MIME_TYPES { get { if (!_EXTRA_MIME_TYPESReady) { _EXTRA_MIME_TYPESContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_MIME_TYPES"); _EXTRA_MIME_TYPESReady = true; } return _EXTRA_MIME_TYPESContent; } }
        private static Java.Lang.String _EXTRA_MIME_TYPESContent = default;
        private static bool _EXTRA_MIME_TYPESReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_NOT_UNKNOWN_SOURCE"/>
        /// </summary>
        public static Java.Lang.String EXTRA_NOT_UNKNOWN_SOURCE { get { if (!_EXTRA_NOT_UNKNOWN_SOURCEReady) { _EXTRA_NOT_UNKNOWN_SOURCEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_NOT_UNKNOWN_SOURCE"); _EXTRA_NOT_UNKNOWN_SOURCEReady = true; } return _EXTRA_NOT_UNKNOWN_SOURCEContent; } }
        private static Java.Lang.String _EXTRA_NOT_UNKNOWN_SOURCEContent = default;
        private static bool _EXTRA_NOT_UNKNOWN_SOURCEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_ORIGINATING_URI"/>
        /// </summary>
        public static Java.Lang.String EXTRA_ORIGINATING_URI { get { if (!_EXTRA_ORIGINATING_URIReady) { _EXTRA_ORIGINATING_URIContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_ORIGINATING_URI"); _EXTRA_ORIGINATING_URIReady = true; } return _EXTRA_ORIGINATING_URIContent; } }
        private static Java.Lang.String _EXTRA_ORIGINATING_URIContent = default;
        private static bool _EXTRA_ORIGINATING_URIReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_PACKAGE_NAME"/>
        /// </summary>
        public static Java.Lang.String EXTRA_PACKAGE_NAME { get { if (!_EXTRA_PACKAGE_NAMEReady) { _EXTRA_PACKAGE_NAMEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_PACKAGE_NAME"); _EXTRA_PACKAGE_NAMEReady = true; } return _EXTRA_PACKAGE_NAMEContent; } }
        private static Java.Lang.String _EXTRA_PACKAGE_NAMEContent = default;
        private static bool _EXTRA_PACKAGE_NAMEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_PACKAGES"/>
        /// </summary>
        public static Java.Lang.String EXTRA_PACKAGES { get { if (!_EXTRA_PACKAGESReady) { _EXTRA_PACKAGESContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_PACKAGES"); _EXTRA_PACKAGESReady = true; } return _EXTRA_PACKAGESContent; } }
        private static Java.Lang.String _EXTRA_PACKAGESContent = default;
        private static bool _EXTRA_PACKAGESReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_PERMISSION_GROUP_NAME"/>
        /// </summary>
        public static Java.Lang.String EXTRA_PERMISSION_GROUP_NAME { get { if (!_EXTRA_PERMISSION_GROUP_NAMEReady) { _EXTRA_PERMISSION_GROUP_NAMEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_PERMISSION_GROUP_NAME"); _EXTRA_PERMISSION_GROUP_NAMEReady = true; } return _EXTRA_PERMISSION_GROUP_NAMEContent; } }
        private static Java.Lang.String _EXTRA_PERMISSION_GROUP_NAMEContent = default;
        private static bool _EXTRA_PERMISSION_GROUP_NAMEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_PHONE_NUMBER"/>
        /// </summary>
        public static Java.Lang.String EXTRA_PHONE_NUMBER { get { if (!_EXTRA_PHONE_NUMBERReady) { _EXTRA_PHONE_NUMBERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_PHONE_NUMBER"); _EXTRA_PHONE_NUMBERReady = true; } return _EXTRA_PHONE_NUMBERContent; } }
        private static Java.Lang.String _EXTRA_PHONE_NUMBERContent = default;
        private static bool _EXTRA_PHONE_NUMBERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_PROCESS_TEXT"/>
        /// </summary>
        public static Java.Lang.String EXTRA_PROCESS_TEXT { get { if (!_EXTRA_PROCESS_TEXTReady) { _EXTRA_PROCESS_TEXTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_PROCESS_TEXT"); _EXTRA_PROCESS_TEXTReady = true; } return _EXTRA_PROCESS_TEXTContent; } }
        private static Java.Lang.String _EXTRA_PROCESS_TEXTContent = default;
        private static bool _EXTRA_PROCESS_TEXTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_PROCESS_TEXT_READONLY"/>
        /// </summary>
        public static Java.Lang.String EXTRA_PROCESS_TEXT_READONLY { get { if (!_EXTRA_PROCESS_TEXT_READONLYReady) { _EXTRA_PROCESS_TEXT_READONLYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_PROCESS_TEXT_READONLY"); _EXTRA_PROCESS_TEXT_READONLYReady = true; } return _EXTRA_PROCESS_TEXT_READONLYContent; } }
        private static Java.Lang.String _EXTRA_PROCESS_TEXT_READONLYContent = default;
        private static bool _EXTRA_PROCESS_TEXT_READONLYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_QUICK_VIEW_FEATURES"/>
        /// </summary>
        public static Java.Lang.String EXTRA_QUICK_VIEW_FEATURES { get { if (!_EXTRA_QUICK_VIEW_FEATURESReady) { _EXTRA_QUICK_VIEW_FEATURESContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_QUICK_VIEW_FEATURES"); _EXTRA_QUICK_VIEW_FEATURESReady = true; } return _EXTRA_QUICK_VIEW_FEATURESContent; } }
        private static Java.Lang.String _EXTRA_QUICK_VIEW_FEATURESContent = default;
        private static bool _EXTRA_QUICK_VIEW_FEATURESReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_QUIET_MODE"/>
        /// </summary>
        public static Java.Lang.String EXTRA_QUIET_MODE { get { if (!_EXTRA_QUIET_MODEReady) { _EXTRA_QUIET_MODEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_QUIET_MODE"); _EXTRA_QUIET_MODEReady = true; } return _EXTRA_QUIET_MODEContent; } }
        private static Java.Lang.String _EXTRA_QUIET_MODEContent = default;
        private static bool _EXTRA_QUIET_MODEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_REFERRER"/>
        /// </summary>
        public static Java.Lang.String EXTRA_REFERRER { get { if (!_EXTRA_REFERRERReady) { _EXTRA_REFERRERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_REFERRER"); _EXTRA_REFERRERReady = true; } return _EXTRA_REFERRERContent; } }
        private static Java.Lang.String _EXTRA_REFERRERContent = default;
        private static bool _EXTRA_REFERRERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_REFERRER_NAME"/>
        /// </summary>
        public static Java.Lang.String EXTRA_REFERRER_NAME { get { if (!_EXTRA_REFERRER_NAMEReady) { _EXTRA_REFERRER_NAMEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_REFERRER_NAME"); _EXTRA_REFERRER_NAMEReady = true; } return _EXTRA_REFERRER_NAMEContent; } }
        private static Java.Lang.String _EXTRA_REFERRER_NAMEContent = default;
        private static bool _EXTRA_REFERRER_NAMEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_REMOTE_INTENT_TOKEN"/>
        /// </summary>
        public static Java.Lang.String EXTRA_REMOTE_INTENT_TOKEN { get { if (!_EXTRA_REMOTE_INTENT_TOKENReady) { _EXTRA_REMOTE_INTENT_TOKENContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_REMOTE_INTENT_TOKEN"); _EXTRA_REMOTE_INTENT_TOKENReady = true; } return _EXTRA_REMOTE_INTENT_TOKENContent; } }
        private static Java.Lang.String _EXTRA_REMOTE_INTENT_TOKENContent = default;
        private static bool _EXTRA_REMOTE_INTENT_TOKENReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_REPLACEMENT_EXTRAS"/>
        /// </summary>
        public static Java.Lang.String EXTRA_REPLACEMENT_EXTRAS { get { if (!_EXTRA_REPLACEMENT_EXTRASReady) { _EXTRA_REPLACEMENT_EXTRASContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_REPLACEMENT_EXTRAS"); _EXTRA_REPLACEMENT_EXTRASReady = true; } return _EXTRA_REPLACEMENT_EXTRASContent; } }
        private static Java.Lang.String _EXTRA_REPLACEMENT_EXTRASContent = default;
        private static bool _EXTRA_REPLACEMENT_EXTRASReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_REPLACING"/>
        /// </summary>
        public static Java.Lang.String EXTRA_REPLACING { get { if (!_EXTRA_REPLACINGReady) { _EXTRA_REPLACINGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_REPLACING"); _EXTRA_REPLACINGReady = true; } return _EXTRA_REPLACINGContent; } }
        private static Java.Lang.String _EXTRA_REPLACINGContent = default;
        private static bool _EXTRA_REPLACINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_RESTRICTIONS_BUNDLE"/>
        /// </summary>
        public static Java.Lang.String EXTRA_RESTRICTIONS_BUNDLE { get { if (!_EXTRA_RESTRICTIONS_BUNDLEReady) { _EXTRA_RESTRICTIONS_BUNDLEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_RESTRICTIONS_BUNDLE"); _EXTRA_RESTRICTIONS_BUNDLEReady = true; } return _EXTRA_RESTRICTIONS_BUNDLEContent; } }
        private static Java.Lang.String _EXTRA_RESTRICTIONS_BUNDLEContent = default;
        private static bool _EXTRA_RESTRICTIONS_BUNDLEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_RESTRICTIONS_INTENT"/>
        /// </summary>
        public static Java.Lang.String EXTRA_RESTRICTIONS_INTENT { get { if (!_EXTRA_RESTRICTIONS_INTENTReady) { _EXTRA_RESTRICTIONS_INTENTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_RESTRICTIONS_INTENT"); _EXTRA_RESTRICTIONS_INTENTReady = true; } return _EXTRA_RESTRICTIONS_INTENTContent; } }
        private static Java.Lang.String _EXTRA_RESTRICTIONS_INTENTContent = default;
        private static bool _EXTRA_RESTRICTIONS_INTENTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_RESTRICTIONS_LIST"/>
        /// </summary>
        public static Java.Lang.String EXTRA_RESTRICTIONS_LIST { get { if (!_EXTRA_RESTRICTIONS_LISTReady) { _EXTRA_RESTRICTIONS_LISTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_RESTRICTIONS_LIST"); _EXTRA_RESTRICTIONS_LISTReady = true; } return _EXTRA_RESTRICTIONS_LISTContent; } }
        private static Java.Lang.String _EXTRA_RESTRICTIONS_LISTContent = default;
        private static bool _EXTRA_RESTRICTIONS_LISTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_RESULT_RECEIVER"/>
        /// </summary>
        public static Java.Lang.String EXTRA_RESULT_RECEIVER { get { if (!_EXTRA_RESULT_RECEIVERReady) { _EXTRA_RESULT_RECEIVERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_RESULT_RECEIVER"); _EXTRA_RESULT_RECEIVERReady = true; } return _EXTRA_RESULT_RECEIVERContent; } }
        private static Java.Lang.String _EXTRA_RESULT_RECEIVERContent = default;
        private static bool _EXTRA_RESULT_RECEIVERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_RETURN_RESULT"/>
        /// </summary>
        public static Java.Lang.String EXTRA_RETURN_RESULT { get { if (!_EXTRA_RETURN_RESULTReady) { _EXTRA_RETURN_RESULTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_RETURN_RESULT"); _EXTRA_RETURN_RESULTReady = true; } return _EXTRA_RETURN_RESULTContent; } }
        private static Java.Lang.String _EXTRA_RETURN_RESULTContent = default;
        private static bool _EXTRA_RETURN_RESULTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_SHORTCUT_ICON"/>
        /// </summary>
        [global::System.Obsolete()]
        public static Java.Lang.String EXTRA_SHORTCUT_ICON { get { if (!_EXTRA_SHORTCUT_ICONReady) { _EXTRA_SHORTCUT_ICONContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_SHORTCUT_ICON"); _EXTRA_SHORTCUT_ICONReady = true; } return _EXTRA_SHORTCUT_ICONContent; } }
        private static Java.Lang.String _EXTRA_SHORTCUT_ICONContent = default;
        private static bool _EXTRA_SHORTCUT_ICONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_SHORTCUT_ICON_RESOURCE"/>
        /// </summary>
        [global::System.Obsolete()]
        public static Java.Lang.String EXTRA_SHORTCUT_ICON_RESOURCE { get { if (!_EXTRA_SHORTCUT_ICON_RESOURCEReady) { _EXTRA_SHORTCUT_ICON_RESOURCEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_SHORTCUT_ICON_RESOURCE"); _EXTRA_SHORTCUT_ICON_RESOURCEReady = true; } return _EXTRA_SHORTCUT_ICON_RESOURCEContent; } }
        private static Java.Lang.String _EXTRA_SHORTCUT_ICON_RESOURCEContent = default;
        private static bool _EXTRA_SHORTCUT_ICON_RESOURCEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_SHORTCUT_ID"/>
        /// </summary>
        public static Java.Lang.String EXTRA_SHORTCUT_ID { get { if (!_EXTRA_SHORTCUT_IDReady) { _EXTRA_SHORTCUT_IDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_SHORTCUT_ID"); _EXTRA_SHORTCUT_IDReady = true; } return _EXTRA_SHORTCUT_IDContent; } }
        private static Java.Lang.String _EXTRA_SHORTCUT_IDContent = default;
        private static bool _EXTRA_SHORTCUT_IDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_SHORTCUT_INTENT"/>
        /// </summary>
        [global::System.Obsolete()]
        public static Java.Lang.String EXTRA_SHORTCUT_INTENT { get { if (!_EXTRA_SHORTCUT_INTENTReady) { _EXTRA_SHORTCUT_INTENTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_SHORTCUT_INTENT"); _EXTRA_SHORTCUT_INTENTReady = true; } return _EXTRA_SHORTCUT_INTENTContent; } }
        private static Java.Lang.String _EXTRA_SHORTCUT_INTENTContent = default;
        private static bool _EXTRA_SHORTCUT_INTENTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_SHORTCUT_NAME"/>
        /// </summary>
        [global::System.Obsolete()]
        public static Java.Lang.String EXTRA_SHORTCUT_NAME { get { if (!_EXTRA_SHORTCUT_NAMEReady) { _EXTRA_SHORTCUT_NAMEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_SHORTCUT_NAME"); _EXTRA_SHORTCUT_NAMEReady = true; } return _EXTRA_SHORTCUT_NAMEContent; } }
        private static Java.Lang.String _EXTRA_SHORTCUT_NAMEContent = default;
        private static bool _EXTRA_SHORTCUT_NAMEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_SHUTDOWN_USERSPACE_ONLY"/>
        /// </summary>
        public static Java.Lang.String EXTRA_SHUTDOWN_USERSPACE_ONLY { get { if (!_EXTRA_SHUTDOWN_USERSPACE_ONLYReady) { _EXTRA_SHUTDOWN_USERSPACE_ONLYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_SHUTDOWN_USERSPACE_ONLY"); _EXTRA_SHUTDOWN_USERSPACE_ONLYReady = true; } return _EXTRA_SHUTDOWN_USERSPACE_ONLYContent; } }
        private static Java.Lang.String _EXTRA_SHUTDOWN_USERSPACE_ONLYContent = default;
        private static bool _EXTRA_SHUTDOWN_USERSPACE_ONLYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_SPLIT_NAME"/>
        /// </summary>
        public static Java.Lang.String EXTRA_SPLIT_NAME { get { if (!_EXTRA_SPLIT_NAMEReady) { _EXTRA_SPLIT_NAMEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_SPLIT_NAME"); _EXTRA_SPLIT_NAMEReady = true; } return _EXTRA_SPLIT_NAMEContent; } }
        private static Java.Lang.String _EXTRA_SPLIT_NAMEContent = default;
        private static bool _EXTRA_SPLIT_NAMEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_START_TIME"/>
        /// </summary>
        public static Java.Lang.String EXTRA_START_TIME { get { if (!_EXTRA_START_TIMEReady) { _EXTRA_START_TIMEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_START_TIME"); _EXTRA_START_TIMEReady = true; } return _EXTRA_START_TIMEContent; } }
        private static Java.Lang.String _EXTRA_START_TIMEContent = default;
        private static bool _EXTRA_START_TIMEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_STREAM"/>
        /// </summary>
        public static Java.Lang.String EXTRA_STREAM { get { if (!_EXTRA_STREAMReady) { _EXTRA_STREAMContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_STREAM"); _EXTRA_STREAMReady = true; } return _EXTRA_STREAMContent; } }
        private static Java.Lang.String _EXTRA_STREAMContent = default;
        private static bool _EXTRA_STREAMReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_SUBJECT"/>
        /// </summary>
        public static Java.Lang.String EXTRA_SUBJECT { get { if (!_EXTRA_SUBJECTReady) { _EXTRA_SUBJECTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_SUBJECT"); _EXTRA_SUBJECTReady = true; } return _EXTRA_SUBJECTContent; } }
        private static Java.Lang.String _EXTRA_SUBJECTContent = default;
        private static bool _EXTRA_SUBJECTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_SUSPENDED_PACKAGE_EXTRAS"/>
        /// </summary>
        public static Java.Lang.String EXTRA_SUSPENDED_PACKAGE_EXTRAS { get { if (!_EXTRA_SUSPENDED_PACKAGE_EXTRASReady) { _EXTRA_SUSPENDED_PACKAGE_EXTRASContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_SUSPENDED_PACKAGE_EXTRAS"); _EXTRA_SUSPENDED_PACKAGE_EXTRASReady = true; } return _EXTRA_SUSPENDED_PACKAGE_EXTRASContent; } }
        private static Java.Lang.String _EXTRA_SUSPENDED_PACKAGE_EXTRASContent = default;
        private static bool _EXTRA_SUSPENDED_PACKAGE_EXTRASReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_TEMPLATE"/>
        /// </summary>
        public static Java.Lang.String EXTRA_TEMPLATE { get { if (!_EXTRA_TEMPLATEReady) { _EXTRA_TEMPLATEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_TEMPLATE"); _EXTRA_TEMPLATEReady = true; } return _EXTRA_TEMPLATEContent; } }
        private static Java.Lang.String _EXTRA_TEMPLATEContent = default;
        private static bool _EXTRA_TEMPLATEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_TEXT"/>
        /// </summary>
        public static Java.Lang.String EXTRA_TEXT { get { if (!_EXTRA_TEXTReady) { _EXTRA_TEXTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_TEXT"); _EXTRA_TEXTReady = true; } return _EXTRA_TEXTContent; } }
        private static Java.Lang.String _EXTRA_TEXTContent = default;
        private static bool _EXTRA_TEXTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_TIME"/>
        /// </summary>
        public static Java.Lang.String EXTRA_TIME { get { if (!_EXTRA_TIMEReady) { _EXTRA_TIMEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_TIME"); _EXTRA_TIMEReady = true; } return _EXTRA_TIMEContent; } }
        private static Java.Lang.String _EXTRA_TIMEContent = default;
        private static bool _EXTRA_TIMEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_TIMEZONE"/>
        /// </summary>
        public static Java.Lang.String EXTRA_TIMEZONE { get { if (!_EXTRA_TIMEZONEReady) { _EXTRA_TIMEZONEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_TIMEZONE"); _EXTRA_TIMEZONEReady = true; } return _EXTRA_TIMEZONEContent; } }
        private static Java.Lang.String _EXTRA_TIMEZONEContent = default;
        private static bool _EXTRA_TIMEZONEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_TITLE"/>
        /// </summary>
        public static Java.Lang.String EXTRA_TITLE { get { if (!_EXTRA_TITLEReady) { _EXTRA_TITLEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_TITLE"); _EXTRA_TITLEReady = true; } return _EXTRA_TITLEContent; } }
        private static Java.Lang.String _EXTRA_TITLEContent = default;
        private static bool _EXTRA_TITLEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_UID"/>
        /// </summary>
        public static Java.Lang.String EXTRA_UID { get { if (!_EXTRA_UIDReady) { _EXTRA_UIDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_UID"); _EXTRA_UIDReady = true; } return _EXTRA_UIDContent; } }
        private static Java.Lang.String _EXTRA_UIDContent = default;
        private static bool _EXTRA_UIDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_USE_STYLUS_MODE"/>
        /// </summary>
        public static Java.Lang.String EXTRA_USE_STYLUS_MODE { get { if (!_EXTRA_USE_STYLUS_MODEReady) { _EXTRA_USE_STYLUS_MODEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_USE_STYLUS_MODE"); _EXTRA_USE_STYLUS_MODEReady = true; } return _EXTRA_USE_STYLUS_MODEContent; } }
        private static Java.Lang.String _EXTRA_USE_STYLUS_MODEContent = default;
        private static bool _EXTRA_USE_STYLUS_MODEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_USER"/>
        /// </summary>
        public static Java.Lang.String EXTRA_USER { get { if (!_EXTRA_USERReady) { _EXTRA_USERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_USER"); _EXTRA_USERReady = true; } return _EXTRA_USERContent; } }
        private static Java.Lang.String _EXTRA_USERContent = default;
        private static bool _EXTRA_USERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#EXTRA_USER_INITIATED"/>
        /// </summary>
        public static Java.Lang.String EXTRA_USER_INITIATED { get { if (!_EXTRA_USER_INITIATEDReady) { _EXTRA_USER_INITIATEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_USER_INITIATED"); _EXTRA_USER_INITIATEDReady = true; } return _EXTRA_USER_INITIATEDContent; } }
        private static Java.Lang.String _EXTRA_USER_INITIATEDContent = default;
        private static bool _EXTRA_USER_INITIATEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#METADATA_DOCK_HOME"/>
        /// </summary>
        public static Java.Lang.String METADATA_DOCK_HOME { get { if (!_METADATA_DOCK_HOMEReady) { _METADATA_DOCK_HOMEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "METADATA_DOCK_HOME"); _METADATA_DOCK_HOMEReady = true; } return _METADATA_DOCK_HOMEContent; } }
        private static Java.Lang.String _METADATA_DOCK_HOMEContent = default;
        private static bool _METADATA_DOCK_HOMEReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#createChooser(android.content.Intent,java.lang.CharSequence,android.content.IntentSender)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        /// <param name="arg1"><see cref="Java.Lang.CharSequence"/></param>
        /// <param name="arg2"><see cref="Android.Content.IntentSender"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public static Android.Content.Intent CreateChooser(Android.Content.Intent arg0, Java.Lang.CharSequence arg1, Android.Content.IntentSender arg2)
        {
            return SExecute<Android.Content.Intent>(LocalBridgeClazz, "createChooser", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#createChooser(android.content.Intent,java.lang.CharSequence)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        /// <param name="arg1"><see cref="Java.Lang.CharSequence"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public static Android.Content.Intent CreateChooser(Android.Content.Intent arg0, Java.Lang.CharSequence arg1)
        {
            return SExecute<Android.Content.Intent>(LocalBridgeClazz, "createChooser", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#getIntent(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        /// <exception cref="Java.Net.URISyntaxException"/>
        [global::System.Obsolete()]
        public static Android.Content.Intent GetIntent(Java.Lang.String arg0)
        {
            return SExecuteWithSignature<Android.Content.Intent>(LocalBridgeClazz, "getIntent", "(Ljava/lang/String;)Landroid/content/Intent;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#getIntentOld(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        /// <exception cref="Java.Net.URISyntaxException"/>
        public static Android.Content.Intent GetIntentOld(Java.Lang.String arg0)
        {
            return SExecuteWithSignature<Android.Content.Intent>(LocalBridgeClazz, "getIntentOld", "(Ljava/lang/String;)Landroid/content/Intent;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#makeMainActivity(android.content.ComponentName)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.ComponentName"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public static Android.Content.Intent MakeMainActivity(Android.Content.ComponentName arg0)
        {
            return SExecuteWithSignature<Android.Content.Intent>(LocalBridgeClazz, "makeMainActivity", "(Landroid/content/ComponentName;)Landroid/content/Intent;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#makeMainSelectorActivity(java.lang.String,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public static Android.Content.Intent MakeMainSelectorActivity(Java.Lang.String arg0, Java.Lang.String arg1)
        {
            return SExecute<Android.Content.Intent>(LocalBridgeClazz, "makeMainSelectorActivity", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#makeRestartActivityTask(android.content.ComponentName)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.ComponentName"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public static Android.Content.Intent MakeRestartActivityTask(Android.Content.ComponentName arg0)
        {
            return SExecuteWithSignature<Android.Content.Intent>(LocalBridgeClazz, "makeRestartActivityTask", "(Landroid/content/ComponentName;)Landroid/content/Intent;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#parseIntent(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Res.Resources"/></param>
        /// <param name="arg1"><see cref="Org.Xmlpull.V1.XmlPullParser"/></param>
        /// <param name="arg2"><see cref="Android.Util.AttributeSet"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        /// <exception cref="Org.Xmlpull.V1.XmlPullParserException"/>
        public static Android.Content.Intent ParseIntent(Android.Content.Res.Resources arg0, Org.Xmlpull.V1.XmlPullParser arg1, Android.Util.AttributeSet arg2)
        {
            return SExecute<Android.Content.Intent>(LocalBridgeClazz, "parseIntent", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#parseUri(java.lang.String,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        /// <exception cref="Java.Net.URISyntaxException"/>
        public static Android.Content.Intent ParseUri(Java.Lang.String arg0, int arg1)
        {
            return SExecute<Android.Content.Intent>(LocalBridgeClazz, "parseUri", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#normalizeMimeType(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public static Java.Lang.String NormalizeMimeType(Java.Lang.String arg0)
        {
            return SExecuteWithSignature<Java.Lang.String>(LocalBridgeClazz, "normalizeMimeType", "(Ljava/lang/String;)Ljava/lang/String;", arg0);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#getParcelableArrayListExtra(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <typeparam name="T"><see cref="Android.Os.IParcelable"/></typeparam>
        /// <returns><see cref="Java.Util.ArrayList"/></returns>
        [global::System.Obsolete()]
        public Java.Util.ArrayList<T> GetParcelableArrayListExtra<T>(Java.Lang.String arg0) where T : Android.Os.IParcelable, new()
        {
            return IExecuteWithSignature<Java.Util.ArrayList<T>>("getParcelableArrayListExtra", "(Ljava/lang/String;)Ljava/util/ArrayList;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#getParcelableExtra(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <typeparam name="T"><see cref="Android.Os.IParcelable"/></typeparam>
        /// <returns><typeparamref name="T"/></returns>
        [global::System.Obsolete()]
        public T GetParcelableExtra<T>(Java.Lang.String arg0) where T : Android.Os.IParcelable, new()
        {
            return IExecuteWithSignature<T>("getParcelableExtra", "(Ljava/lang/String;)Landroid/os/Parcelable;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#getSerializableExtra(java.lang.String,java.lang.Class)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Java.Lang.Class"/></param>
        /// <typeparam name="T"><see cref="Java.Io.ISerializable"/></typeparam>
        /// <returns><typeparamref name="T"/></returns>
        public T GetSerializableExtra<T>(Java.Lang.String arg0, Java.Lang.Class arg1) where T : Java.Io.ISerializable, new()
        {
            return IExecute<T>("getSerializableExtra", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#getParcelableArrayListExtra(java.lang.String,java.lang.Class)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Java.Lang.Class"/></param>
        /// <typeparam name="T"></typeparam>
        /// <returns><see cref="Java.Util.ArrayList"/></returns>
        public Java.Util.ArrayList<T> GetParcelableArrayListExtra<T>(Java.Lang.String arg0, Java.Lang.Class arg1)
        {
            return IExecute<Java.Util.ArrayList<T>>("getParcelableArrayListExtra", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#getParcelableExtra(java.lang.String,java.lang.Class)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Java.Lang.Class"/></param>
        /// <typeparam name="T"></typeparam>
        /// <returns><typeparamref name="T"/></returns>
        public T GetParcelableExtra<T>(Java.Lang.String arg0, Java.Lang.Class arg1)
        {
            return IExecute<T>("getParcelableExtra", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#getParcelableArrayExtra(java.lang.String,java.lang.Class)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Java.Lang.Class"/></param>
        /// <typeparam name="T"></typeparam>
        /// <returns><typeparamref name="T"/></returns>
        public T[] GetParcelableArrayExtra<T>(Java.Lang.String arg0, Java.Lang.Class arg1)
        {
            return IExecuteArray<T>("getParcelableArrayExtra", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#getClipData()"/>
        /// </summary>
        /// <returns><see cref="Android.Content.ClipData"/></returns>
        public Android.Content.ClipData GetClipData()
        {
            return IExecuteWithSignature<Android.Content.ClipData>("getClipData", "()Landroid/content/ClipData;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#getComponent()"/>
        /// </summary>
        /// <returns><see cref="Android.Content.ComponentName"/></returns>
        public Android.Content.ComponentName GetComponent()
        {
            return IExecuteWithSignature<Android.Content.ComponentName>("getComponent", "()Landroid/content/ComponentName;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#resolveActivity(android.content.pm.PackageManager)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Pm.PackageManager"/></param>
        /// <returns><see cref="Android.Content.ComponentName"/></returns>
        public Android.Content.ComponentName ResolveActivity(Android.Content.Pm.PackageManager arg0)
        {
            return IExecuteWithSignature<Android.Content.ComponentName>("resolveActivity", "(Landroid/content/pm/PackageManager;)Landroid/content/ComponentName;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#addCategory(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public Android.Content.Intent AddCategory(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<Android.Content.Intent>("addCategory", "(Ljava/lang/String;)Landroid/content/Intent;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#addFlags(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public Android.Content.Intent AddFlags(int arg0)
        {
            return IExecuteWithSignature<Android.Content.Intent>("addFlags", "(I)Landroid/content/Intent;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#cloneFilter()"/>
        /// </summary>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public Android.Content.Intent CloneFilter()
        {
            return IExecuteWithSignature<Android.Content.Intent>("cloneFilter", "()Landroid/content/Intent;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#getSelector()"/>
        /// </summary>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public Android.Content.Intent GetSelector()
        {
            return IExecuteWithSignature<Android.Content.Intent>("getSelector", "()Landroid/content/Intent;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#putCharSequenceArrayListExtra(java.lang.String,java.util.ArrayList)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Java.Util.ArrayList"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public Android.Content.Intent PutCharSequenceArrayListExtra(Java.Lang.String arg0, Java.Util.ArrayList<Java.Lang.CharSequence> arg1)
        {
            return IExecute<Android.Content.Intent>("putCharSequenceArrayListExtra", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#putExtra(java.lang.String,android.os.Bundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Android.Os.Bundle"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public Android.Content.Intent PutExtra(Java.Lang.String arg0, Android.Os.Bundle arg1)
        {
            return IExecute<Android.Content.Intent>("putExtra", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#putExtra(java.lang.String,android.os.Parcelable)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Android.Os.Parcelable"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public Android.Content.Intent PutExtra(Java.Lang.String arg0, Android.Os.Parcelable arg1)
        {
            return IExecute<Android.Content.Intent>("putExtra", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#putExtra(java.lang.String,android.os.Parcelable[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Android.Os.Parcelable"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public Android.Content.Intent PutExtra(Java.Lang.String arg0, Android.Os.Parcelable[] arg1)
        {
            return IExecute<Android.Content.Intent>("putExtra", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#putExtra(java.lang.String,boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="bool"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public Android.Content.Intent PutExtra(Java.Lang.String arg0, bool arg1)
        {
            return IExecute<Android.Content.Intent>("putExtra", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#putExtra(java.lang.String,boolean[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="bool"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public Android.Content.Intent PutExtra(Java.Lang.String arg0, bool[] arg1)
        {
            return IExecute<Android.Content.Intent>("putExtra", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#putExtra(java.lang.String,byte)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="byte"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public Android.Content.Intent PutExtra(Java.Lang.String arg0, byte arg1)
        {
            return IExecute<Android.Content.Intent>("putExtra", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#putExtra(java.lang.String,byte[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="byte"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public Android.Content.Intent PutExtra(Java.Lang.String arg0, byte[] arg1)
        {
            return IExecute<Android.Content.Intent>("putExtra", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#putExtra(java.lang.String,char)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="char"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public Android.Content.Intent PutExtra(Java.Lang.String arg0, char arg1)
        {
            return IExecute<Android.Content.Intent>("putExtra", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#putExtra(java.lang.String,char[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="char"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public Android.Content.Intent PutExtra(Java.Lang.String arg0, char[] arg1)
        {
            return IExecute<Android.Content.Intent>("putExtra", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#putExtra(java.lang.String,double)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="double"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public Android.Content.Intent PutExtra(Java.Lang.String arg0, double arg1)
        {
            return IExecute<Android.Content.Intent>("putExtra", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#putExtra(java.lang.String,double[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="double"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public Android.Content.Intent PutExtra(Java.Lang.String arg0, double[] arg1)
        {
            return IExecute<Android.Content.Intent>("putExtra", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#putExtra(java.lang.String,float)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="float"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public Android.Content.Intent PutExtra(Java.Lang.String arg0, float arg1)
        {
            return IExecute<Android.Content.Intent>("putExtra", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#putExtra(java.lang.String,float[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="float"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public Android.Content.Intent PutExtra(Java.Lang.String arg0, float[] arg1)
        {
            return IExecute<Android.Content.Intent>("putExtra", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#putExtra(java.lang.String,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public Android.Content.Intent PutExtra(Java.Lang.String arg0, int arg1)
        {
            return IExecute<Android.Content.Intent>("putExtra", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#putExtra(java.lang.String,int[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public Android.Content.Intent PutExtra(Java.Lang.String arg0, int[] arg1)
        {
            return IExecute<Android.Content.Intent>("putExtra", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#putExtra(java.lang.String,java.io.Serializable)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Java.Io.Serializable"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public Android.Content.Intent PutExtra(Java.Lang.String arg0, Java.Io.Serializable arg1)
        {
            return IExecute<Android.Content.Intent>("putExtra", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#putExtra(java.lang.String,java.lang.CharSequence)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Java.Lang.CharSequence"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public Android.Content.Intent PutExtra(Java.Lang.String arg0, Java.Lang.CharSequence arg1)
        {
            return IExecute<Android.Content.Intent>("putExtra", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#putExtra(java.lang.String,java.lang.CharSequence[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Java.Lang.CharSequence"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public Android.Content.Intent PutExtra(Java.Lang.String arg0, Java.Lang.CharSequence[] arg1)
        {
            return IExecute<Android.Content.Intent>("putExtra", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#putExtra(java.lang.String,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public Android.Content.Intent PutExtra(Java.Lang.String arg0, Java.Lang.String arg1)
        {
            return IExecute<Android.Content.Intent>("putExtra", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#putExtra(java.lang.String,java.lang.String[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public Android.Content.Intent PutExtra(Java.Lang.String arg0, Java.Lang.String[] arg1)
        {
            return IExecute<Android.Content.Intent>("putExtra", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#putExtra(java.lang.String,long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="long"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public Android.Content.Intent PutExtra(Java.Lang.String arg0, long arg1)
        {
            return IExecute<Android.Content.Intent>("putExtra", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#putExtra(java.lang.String,long[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="long"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public Android.Content.Intent PutExtra(Java.Lang.String arg0, long[] arg1)
        {
            return IExecute<Android.Content.Intent>("putExtra", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#putExtra(java.lang.String,short)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="short"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public Android.Content.Intent PutExtra(Java.Lang.String arg0, short arg1)
        {
            return IExecute<Android.Content.Intent>("putExtra", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#putExtra(java.lang.String,short[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="short"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public Android.Content.Intent PutExtra(Java.Lang.String arg0, short[] arg1)
        {
            return IExecute<Android.Content.Intent>("putExtra", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#putExtras(android.content.Intent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public Android.Content.Intent PutExtras(Android.Content.Intent arg0)
        {
            return IExecuteWithSignature<Android.Content.Intent>("putExtras", "(Landroid/content/Intent;)Landroid/content/Intent;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#putExtras(android.os.Bundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.Bundle"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public Android.Content.Intent PutExtras(Android.Os.Bundle arg0)
        {
            return IExecuteWithSignature<Android.Content.Intent>("putExtras", "(Landroid/os/Bundle;)Landroid/content/Intent;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#putIntegerArrayListExtra(java.lang.String,java.util.ArrayList)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Java.Util.ArrayList"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public Android.Content.Intent PutIntegerArrayListExtra(Java.Lang.String arg0, Java.Util.ArrayList<Java.Lang.Integer> arg1)
        {
            return IExecute<Android.Content.Intent>("putIntegerArrayListExtra", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#putParcelableArrayListExtra(java.lang.String,java.util.ArrayList)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Java.Util.ArrayList"/></param>
        /// <typeparam name="Arg1ExtendsAndroid_Os_Parcelable"><see cref="Android.Os.Parcelable"/></typeparam>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public Android.Content.Intent PutParcelableArrayListExtra<Arg1ExtendsAndroid_Os_Parcelable>(Java.Lang.String arg0, Java.Util.ArrayList<Arg1ExtendsAndroid_Os_Parcelable> arg1) where Arg1ExtendsAndroid_Os_Parcelable : Android.Os.Parcelable
        {
            return IExecute<Android.Content.Intent>("putParcelableArrayListExtra", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#putStringArrayListExtra(java.lang.String,java.util.ArrayList)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Java.Util.ArrayList"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public Android.Content.Intent PutStringArrayListExtra(Java.Lang.String arg0, Java.Util.ArrayList<Java.Lang.String> arg1)
        {
            return IExecute<Android.Content.Intent>("putStringArrayListExtra", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#replaceExtras(android.content.Intent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public Android.Content.Intent ReplaceExtras(Android.Content.Intent arg0)
        {
            return IExecuteWithSignature<Android.Content.Intent>("replaceExtras", "(Landroid/content/Intent;)Landroid/content/Intent;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#replaceExtras(android.os.Bundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.Bundle"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public Android.Content.Intent ReplaceExtras(Android.Os.Bundle arg0)
        {
            return IExecuteWithSignature<Android.Content.Intent>("replaceExtras", "(Landroid/os/Bundle;)Landroid/content/Intent;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#setAction(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public Android.Content.Intent SetAction(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<Android.Content.Intent>("setAction", "(Ljava/lang/String;)Landroid/content/Intent;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#setClass(android.content.Context,java.lang.Class)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        /// <param name="arg1"><see cref="Java.Lang.Class"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public Android.Content.Intent SetClass(Android.Content.Context arg0, Java.Lang.Class arg1)
        {
            return IExecute<Android.Content.Intent>("setClass", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#setClassName(android.content.Context,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public Android.Content.Intent SetClassName(Android.Content.Context arg0, Java.Lang.String arg1)
        {
            return IExecute<Android.Content.Intent>("setClassName", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#setClassName(java.lang.String,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public Android.Content.Intent SetClassName(Java.Lang.String arg0, Java.Lang.String arg1)
        {
            return IExecute<Android.Content.Intent>("setClassName", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#setComponent(android.content.ComponentName)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.ComponentName"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public Android.Content.Intent SetComponent(Android.Content.ComponentName arg0)
        {
            return IExecuteWithSignature<Android.Content.Intent>("setComponent", "(Landroid/content/ComponentName;)Landroid/content/Intent;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#setData(android.net.Uri)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Net.Uri"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public Android.Content.Intent SetData(Android.Net.Uri arg0)
        {
            return IExecuteWithSignature<Android.Content.Intent>("setData", "(Landroid/net/Uri;)Landroid/content/Intent;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#setDataAndNormalize(android.net.Uri)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Net.Uri"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public Android.Content.Intent SetDataAndNormalize(Android.Net.Uri arg0)
        {
            return IExecuteWithSignature<Android.Content.Intent>("setDataAndNormalize", "(Landroid/net/Uri;)Landroid/content/Intent;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#setDataAndType(android.net.Uri,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Net.Uri"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public Android.Content.Intent SetDataAndType(Android.Net.Uri arg0, Java.Lang.String arg1)
        {
            return IExecute<Android.Content.Intent>("setDataAndType", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#setDataAndTypeAndNormalize(android.net.Uri,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Net.Uri"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public Android.Content.Intent SetDataAndTypeAndNormalize(Android.Net.Uri arg0, Java.Lang.String arg1)
        {
            return IExecute<Android.Content.Intent>("setDataAndTypeAndNormalize", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#setFlags(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public Android.Content.Intent SetFlags(int arg0)
        {
            return IExecuteWithSignature<Android.Content.Intent>("setFlags", "(I)Landroid/content/Intent;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#setIdentifier(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public Android.Content.Intent SetIdentifier(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<Android.Content.Intent>("setIdentifier", "(Ljava/lang/String;)Landroid/content/Intent;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#setPackage(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public Android.Content.Intent SetPackage(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<Android.Content.Intent>("setPackage", "(Ljava/lang/String;)Landroid/content/Intent;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#setType(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public Android.Content.Intent SetType(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<Android.Content.Intent>("setType", "(Ljava/lang/String;)Landroid/content/Intent;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#setTypeAndNormalize(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public Android.Content.Intent SetTypeAndNormalize(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<Android.Content.Intent>("setTypeAndNormalize", "(Ljava/lang/String;)Landroid/content/Intent;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#resolveActivityInfo(android.content.pm.PackageManager,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Pm.PackageManager"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="Android.Content.Pm.ActivityInfo"/></returns>
        public Android.Content.Pm.ActivityInfo ResolveActivityInfo(Android.Content.Pm.PackageManager arg0, int arg1)
        {
            return IExecute<Android.Content.Pm.ActivityInfo>("resolveActivityInfo", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#getSourceBounds()"/>
        /// </summary>
        /// <returns><see cref="Android.Graphics.Rect"/></returns>
        public Android.Graphics.Rect GetSourceBounds()
        {
            return IExecuteWithSignature<Android.Graphics.Rect>("getSourceBounds", "()Landroid/graphics/Rect;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#getData()"/>
        /// </summary>
        /// <returns><see cref="Android.Net.Uri"/></returns>
        public Android.Net.Uri GetData()
        {
            return IExecuteWithSignature<Android.Net.Uri>("getData", "()Landroid/net/Uri;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#getBundleExtra(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Android.Os.Bundle"/></returns>
        public Android.Os.Bundle GetBundleExtra(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<Android.Os.Bundle>("getBundleExtra", "(Ljava/lang/String;)Landroid/os/Bundle;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#getExtras()"/>
        /// </summary>
        /// <returns><see cref="Android.Os.Bundle"/></returns>
        public Android.Os.Bundle GetExtras()
        {
            return IExecuteWithSignature<Android.Os.Bundle>("getExtras", "()Landroid/os/Bundle;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#getParcelableArrayExtra(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Android.Os.Parcelable"/></returns>
        [global::System.Obsolete()]
        public Android.Os.Parcelable[] GetParcelableArrayExtra(Java.Lang.String arg0)
        {
            return IExecuteWithSignatureArray<Android.Os.Parcelable>("getParcelableArrayExtra", "(Ljava/lang/String;)[Landroid/os/Parcelable;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#filterEquals(android.content.Intent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool FilterEquals(Android.Content.Intent arg0)
        {
            return IExecuteWithSignature<bool>("filterEquals", "(Landroid/content/Intent;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#getBooleanExtra(java.lang.String,boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="bool"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool GetBooleanExtra(Java.Lang.String arg0, bool arg1)
        {
            return IExecute<bool>("getBooleanExtra", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#hasCategory(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool HasCategory(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<bool>("hasCategory", "(Ljava/lang/String;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#hasExtra(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool HasExtra(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<bool>("hasExtra", "(Ljava/lang/String;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#hasFileDescriptors()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool HasFileDescriptors()
        {
            return IExecuteWithSignature<bool>("hasFileDescriptors", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#isMismatchingFilter()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsMismatchingFilter()
        {
            return IExecuteWithSignature<bool>("isMismatchingFilter", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#getBooleanArrayExtra(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool[] GetBooleanArrayExtra(Java.Lang.String arg0)
        {
            return IExecuteWithSignatureArray<bool>("getBooleanArrayExtra", "(Ljava/lang/String;)[Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#getByteExtra(java.lang.String,byte)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="byte"/></param>
        /// <returns><see cref="byte"/></returns>
        public byte GetByteExtra(Java.Lang.String arg0, byte arg1)
        {
            return IExecute<byte>("getByteExtra", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#getByteArrayExtra(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="byte"/></returns>
        public byte[] GetByteArrayExtra(Java.Lang.String arg0)
        {
            return IExecuteWithSignatureArray<byte>("getByteArrayExtra", "(Ljava/lang/String;)[B", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#getCharExtra(java.lang.String,char)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="char"/></param>
        /// <returns><see cref="char"/></returns>
        public char GetCharExtra(Java.Lang.String arg0, char arg1)
        {
            return IExecute<char>("getCharExtra", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#getCharArrayExtra(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="char"/></returns>
        public char[] GetCharArrayExtra(Java.Lang.String arg0)
        {
            return IExecuteWithSignatureArray<char>("getCharArrayExtra", "(Ljava/lang/String;)[C", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#getDoubleExtra(java.lang.String,double)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="double"/></param>
        /// <returns><see cref="double"/></returns>
        public double GetDoubleExtra(Java.Lang.String arg0, double arg1)
        {
            return IExecute<double>("getDoubleExtra", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#getDoubleArrayExtra(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="double"/></returns>
        public double[] GetDoubleArrayExtra(Java.Lang.String arg0)
        {
            return IExecuteWithSignatureArray<double>("getDoubleArrayExtra", "(Ljava/lang/String;)[D", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#getFloatExtra(java.lang.String,float)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="float"/></param>
        /// <returns><see cref="float"/></returns>
        public float GetFloatExtra(Java.Lang.String arg0, float arg1)
        {
            return IExecute<float>("getFloatExtra", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#getFloatArrayExtra(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="float"/></returns>
        public float[] GetFloatArrayExtra(Java.Lang.String arg0)
        {
            return IExecuteWithSignatureArray<float>("getFloatArrayExtra", "(Ljava/lang/String;)[F", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#describeContents()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int DescribeContents()
        {
            return IExecuteWithSignature<int>("describeContents", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#fillIn(android.content.Intent,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public int FillIn(Android.Content.Intent arg0, int arg1)
        {
            return IExecute<int>("fillIn", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#filterHashCode()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int FilterHashCode()
        {
            return IExecuteWithSignature<int>("filterHashCode", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#getFlags()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetFlags()
        {
            return IExecuteWithSignature<int>("getFlags", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#getIntExtra(java.lang.String,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public int GetIntExtra(Java.Lang.String arg0, int arg1)
        {
            return IExecute<int>("getIntExtra", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#getIntArrayExtra(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="int"/></returns>
        public int[] GetIntArrayExtra(Java.Lang.String arg0)
        {
            return IExecuteWithSignatureArray<int>("getIntArrayExtra", "(Ljava/lang/String;)[I", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#getSerializableExtra(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Java.Io.Serializable"/></returns>
        [global::System.Obsolete()]
        public Java.Io.Serializable GetSerializableExtra(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<Java.Io.Serializable>("getSerializableExtra", "(Ljava/lang/String;)Ljava/io/Serializable;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#getCharSequenceExtra(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Java.Lang.CharSequence"/></returns>
        public Java.Lang.CharSequence GetCharSequenceExtra(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<Java.Lang.CharSequence>("getCharSequenceExtra", "(Ljava/lang/String;)Ljava/lang/CharSequence;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#getCharSequenceArrayExtra(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Java.Lang.CharSequence"/></returns>
        public Java.Lang.CharSequence[] GetCharSequenceArrayExtra(Java.Lang.String arg0)
        {
            return IExecuteWithSignatureArray<Java.Lang.CharSequence>("getCharSequenceArrayExtra", "(Ljava/lang/String;)[Ljava/lang/CharSequence;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#getAction()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetAction()
        {
            return IExecuteWithSignature<Java.Lang.String>("getAction", "()Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#getDataString()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetDataString()
        {
            return IExecuteWithSignature<Java.Lang.String>("getDataString", "()Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#getIdentifier()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetIdentifier()
        {
            return IExecuteWithSignature<Java.Lang.String>("getIdentifier", "()Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#getPackage()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetPackage()
        {
            return IExecuteWithSignature<Java.Lang.String>("getPackage", "()Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#getScheme()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetScheme()
        {
            return IExecuteWithSignature<Java.Lang.String>("getScheme", "()Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#getStringExtra(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetStringExtra(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<Java.Lang.String>("getStringExtra", "(Ljava/lang/String;)Ljava/lang/String;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#getType()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetType()
        {
            return IExecuteWithSignature<Java.Lang.String>("getType", "()Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#resolveType(android.content.ContentResolver)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.ContentResolver"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String ResolveType(Android.Content.ContentResolver arg0)
        {
            return IExecuteWithSignature<Java.Lang.String>("resolveType", "(Landroid/content/ContentResolver;)Ljava/lang/String;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#resolveType(android.content.Context)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String ResolveType(Android.Content.Context arg0)
        {
            return IExecuteWithSignature<Java.Lang.String>("resolveType", "(Landroid/content/Context;)Ljava/lang/String;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#resolveTypeIfNeeded(android.content.ContentResolver)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.ContentResolver"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String ResolveTypeIfNeeded(Android.Content.ContentResolver arg0)
        {
            return IExecuteWithSignature<Java.Lang.String>("resolveTypeIfNeeded", "(Landroid/content/ContentResolver;)Ljava/lang/String;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#toURI()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        [global::System.Obsolete()]
        public Java.Lang.String ToURI()
        {
            return IExecuteWithSignature<Java.Lang.String>("toURI", "()Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#toUri(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String ToUri(int arg0)
        {
            return IExecuteWithSignature<Java.Lang.String>("toUri", "(I)Ljava/lang/String;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#getStringArrayExtra(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String[] GetStringArrayExtra(Java.Lang.String arg0)
        {
            return IExecuteWithSignatureArray<Java.Lang.String>("getStringArrayExtra", "(Ljava/lang/String;)[Ljava/lang/String;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#getCharSequenceArrayListExtra(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Java.Util.ArrayList"/></returns>
        public Java.Util.ArrayList<Java.Lang.CharSequence> GetCharSequenceArrayListExtra(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<Java.Util.ArrayList<Java.Lang.CharSequence>>("getCharSequenceArrayListExtra", "(Ljava/lang/String;)Ljava/util/ArrayList;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#getIntegerArrayListExtra(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Java.Util.ArrayList"/></returns>
        public Java.Util.ArrayList<Java.Lang.Integer> GetIntegerArrayListExtra(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<Java.Util.ArrayList<Java.Lang.Integer>>("getIntegerArrayListExtra", "(Ljava/lang/String;)Ljava/util/ArrayList;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#getStringArrayListExtra(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Java.Util.ArrayList"/></returns>
        public Java.Util.ArrayList<Java.Lang.String> GetStringArrayListExtra(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<Java.Util.ArrayList<Java.Lang.String>>("getStringArrayListExtra", "(Ljava/lang/String;)Ljava/util/ArrayList;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#getCategories()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.Set"/></returns>
        public Java.Util.Set<Java.Lang.String> GetCategories()
        {
            return IExecuteWithSignature<Java.Util.Set<Java.Lang.String>>("getCategories", "()Ljava/util/Set;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#getLongExtra(java.lang.String,long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="long"/></param>
        /// <returns><see cref="long"/></returns>
        public long GetLongExtra(Java.Lang.String arg0, long arg1)
        {
            return IExecute<long>("getLongExtra", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#getLongArrayExtra(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="long"/></returns>
        public long[] GetLongArrayExtra(Java.Lang.String arg0)
        {
            return IExecuteWithSignatureArray<long>("getLongArrayExtra", "(Ljava/lang/String;)[J", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#getShortExtra(java.lang.String,short)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="short"/></param>
        /// <returns><see cref="short"/></returns>
        public short GetShortExtra(Java.Lang.String arg0, short arg1)
        {
            return IExecute<short>("getShortExtra", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#getShortArrayExtra(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="short"/></returns>
        public short[] GetShortArrayExtra(Java.Lang.String arg0)
        {
            return IExecuteWithSignatureArray<short>("getShortArrayExtra", "(Ljava/lang/String;)[S", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#readFromParcel(android.os.Parcel)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.Parcel"/></param>
        public void ReadFromParcel(Android.Os.Parcel arg0)
        {
            IExecuteWithSignature("readFromParcel", "(Landroid/os/Parcel;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#removeCategory(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        public void RemoveCategory(Java.Lang.String arg0)
        {
            IExecuteWithSignature("removeCategory", "(Ljava/lang/String;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#removeExtra(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        public void RemoveExtra(Java.Lang.String arg0)
        {
            IExecuteWithSignature("removeExtra", "(Ljava/lang/String;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#removeFlags(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void RemoveFlags(int arg0)
        {
            IExecuteWithSignature("removeFlags", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#setClipData(android.content.ClipData)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.ClipData"/></param>
        public void SetClipData(Android.Content.ClipData arg0)
        {
            IExecuteWithSignature("setClipData", "(Landroid/content/ClipData;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#setExtrasClassLoader(java.lang.ClassLoader)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.ClassLoader"/></param>
        public void SetExtrasClassLoader(Java.Lang.ClassLoader arg0)
        {
            IExecuteWithSignature("setExtrasClassLoader", "(Ljava/lang/ClassLoader;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#setSelector(android.content.Intent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        public void SetSelector(Android.Content.Intent arg0)
        {
            IExecuteWithSignature("setSelector", "(Landroid/content/Intent;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#setSourceBounds(android.graphics.Rect)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Graphics.Rect"/></param>
        public void SetSourceBounds(Android.Graphics.Rect arg0)
        {
            IExecuteWithSignature("setSourceBounds", "(Landroid/graphics/Rect;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Intent.html#writeToParcel(android.os.Parcel,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.Parcel"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void WriteToParcel(Android.Os.Parcel arg0, int arg1)
        {
            IExecute("writeToParcel", arg0, arg1);
        }

        #endregion

        #region Nested classes
        #region FilterComparison implementation
        public partial class FilterComparison
        {
            #region Constructors
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/Intent.FilterComparison.html#%3Cinit%3E(android.content.Intent)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
            public FilterComparison(Android.Content.Intent arg0)
                : base(arg0)
            {
            }

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/Intent.FilterComparison.html#getIntent()"/>
            /// </summary>
            /// <returns><see cref="Android.Content.Intent"/></returns>
            public Android.Content.Intent GetIntent()
            {
                return IExecuteWithSignature<Android.Content.Intent>("getIntent", "()Landroid/content/Intent;");
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region ShortcutIconResource implementation
        public partial class ShortcutIconResource
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/Intent.ShortcutIconResource.html#packageName"/>
            /// </summary>
            public Java.Lang.String packageName { get { return IGetField<Java.Lang.String>("packageName"); } set { ISetField("packageName", value); } }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/Intent.ShortcutIconResource.html#resourceName"/>
            /// </summary>
            public Java.Lang.String resourceName { get { return IGetField<Java.Lang.String>("resourceName"); } set { ISetField("resourceName", value); } }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/Intent.ShortcutIconResource.html#CREATOR"/>
            /// </summary>
            public static Android.Os.Parcelable.Creator CREATOR { get { if (!_CREATORReady) { _CREATORContent = SGetField<Android.Os.Parcelable.Creator>(LocalBridgeClazz, "CREATOR"); _CREATORReady = true; } return _CREATORContent; } }
            private static Android.Os.Parcelable.Creator _CREATORContent = default;
            private static bool _CREATORReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/Intent.ShortcutIconResource.html#fromContext(android.content.Context,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Content.Context"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            /// <returns><see cref="Android.Content.Intent.ShortcutIconResource"/></returns>
            public static Android.Content.Intent.ShortcutIconResource FromContext(Android.Content.Context arg0, int arg1)
            {
                return SExecute<Android.Content.Intent.ShortcutIconResource>(LocalBridgeClazz, "fromContext", arg0, arg1);
            }

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/Intent.ShortcutIconResource.html#describeContents()"/>
            /// </summary>
            /// <returns><see cref="int"/></returns>
            public int DescribeContents()
            {
                return IExecuteWithSignature<int>("describeContents", "()I");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/Intent.ShortcutIconResource.html#writeToParcel(android.os.Parcel,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Os.Parcel"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            public void WriteToParcel(Android.Os.Parcel arg0, int arg1)
            {
                IExecute("writeToParcel", arg0, arg1);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}