/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.1.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Content.Pm
{
    #region LauncherApps
    public partial class LauncherApps
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.html#ACTION_CONFIRM_PIN_APPWIDGET"/>
        /// </summary>
        public static Java.Lang.String ACTION_CONFIRM_PIN_APPWIDGET { get { if (!_ACTION_CONFIRM_PIN_APPWIDGETReady) { _ACTION_CONFIRM_PIN_APPWIDGETContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_CONFIRM_PIN_APPWIDGET"); _ACTION_CONFIRM_PIN_APPWIDGETReady = true; } return _ACTION_CONFIRM_PIN_APPWIDGETContent; } }
        private static Java.Lang.String _ACTION_CONFIRM_PIN_APPWIDGETContent = default;
        private static bool _ACTION_CONFIRM_PIN_APPWIDGETReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.html#ACTION_CONFIRM_PIN_SHORTCUT"/>
        /// </summary>
        public static Java.Lang.String ACTION_CONFIRM_PIN_SHORTCUT { get { if (!_ACTION_CONFIRM_PIN_SHORTCUTReady) { _ACTION_CONFIRM_PIN_SHORTCUTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_CONFIRM_PIN_SHORTCUT"); _ACTION_CONFIRM_PIN_SHORTCUTReady = true; } return _ACTION_CONFIRM_PIN_SHORTCUTContent; } }
        private static Java.Lang.String _ACTION_CONFIRM_PIN_SHORTCUTContent = default;
        private static bool _ACTION_CONFIRM_PIN_SHORTCUTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.html#EXTRA_PIN_ITEM_REQUEST"/>
        /// </summary>
        public static Java.Lang.String EXTRA_PIN_ITEM_REQUEST { get { if (!_EXTRA_PIN_ITEM_REQUESTReady) { _EXTRA_PIN_ITEM_REQUESTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_PIN_ITEM_REQUEST"); _EXTRA_PIN_ITEM_REQUESTReady = true; } return _EXTRA_PIN_ITEM_REQUESTContent; } }
        private static Java.Lang.String _EXTRA_PIN_ITEM_REQUESTContent = default;
        private static bool _EXTRA_PIN_ITEM_REQUESTReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.html#getShortcutIntent(java.lang.String,java.lang.String,android.os.Bundle,android.os.UserHandle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="Android.Os.Bundle"/></param>
        /// <param name="arg3"><see cref="Android.Os.UserHandle"/></param>
        /// <returns><see cref="Android.App.PendingIntent"/></returns>
        public Android.App.PendingIntent GetShortcutIntent(Java.Lang.String arg0, Java.Lang.String arg1, Android.Os.Bundle arg2, Android.Os.UserHandle arg3)
        {
            return IExecute<Android.App.PendingIntent>("getShortcutIntent", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.html#getShortcutConfigActivityIntent(android.content.pm.LauncherActivityInfo)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Pm.LauncherActivityInfo"/></param>
        /// <returns><see cref="Android.Content.IntentSender"/></returns>
        public Android.Content.IntentSender GetShortcutConfigActivityIntent(Android.Content.Pm.LauncherActivityInfo arg0)
        {
            return IExecuteWithSignature<Android.Content.IntentSender>("getShortcutConfigActivityIntent", "(Landroid/content/pm/LauncherActivityInfo;)Landroid/content/IntentSender;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.html#getApplicationInfo(java.lang.String,int,android.os.UserHandle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="Android.Os.UserHandle"/></param>
        /// <returns><see cref="Android.Content.Pm.ApplicationInfo"/></returns>
        /// <exception cref="Android.Content.Pm.PackageManager.NameNotFoundException"/>
        public Android.Content.Pm.ApplicationInfo GetApplicationInfo(Java.Lang.String arg0, int arg1, Android.Os.UserHandle arg2)
        {
            return IExecute<Android.Content.Pm.ApplicationInfo>("getApplicationInfo", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.html#resolveActivity(android.content.Intent,android.os.UserHandle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        /// <param name="arg1"><see cref="Android.Os.UserHandle"/></param>
        /// <returns><see cref="Android.Content.Pm.LauncherActivityInfo"/></returns>
        public Android.Content.Pm.LauncherActivityInfo ResolveActivity(Android.Content.Intent arg0, Android.Os.UserHandle arg1)
        {
            return IExecute<Android.Content.Pm.LauncherActivityInfo>("resolveActivity", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.html#getPinItemRequest(android.content.Intent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        /// <returns><see cref="Android.Content.Pm.LauncherApps.PinItemRequest"/></returns>
        public Android.Content.Pm.LauncherApps.PinItemRequest GetPinItemRequest(Android.Content.Intent arg0)
        {
            return IExecuteWithSignature<Android.Content.Pm.LauncherApps.PinItemRequest>("getPinItemRequest", "(Landroid/content/Intent;)Landroid/content/pm/LauncherApps$PinItemRequest;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.html#getShortcutBadgedIconDrawable(android.content.pm.ShortcutInfo,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Pm.ShortcutInfo"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="Android.Graphics.Drawable.Drawable"/></returns>
        public Android.Graphics.Drawable.Drawable GetShortcutBadgedIconDrawable(Android.Content.Pm.ShortcutInfo arg0, int arg1)
        {
            return IExecute<Android.Graphics.Drawable.Drawable>("getShortcutBadgedIconDrawable", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.html#getShortcutIconDrawable(android.content.pm.ShortcutInfo,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Pm.ShortcutInfo"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="Android.Graphics.Drawable.Drawable"/></returns>
        public Android.Graphics.Drawable.Drawable GetShortcutIconDrawable(Android.Content.Pm.ShortcutInfo arg0, int arg1)
        {
            return IExecute<Android.Graphics.Drawable.Drawable>("getShortcutIconDrawable", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.html#getSuspendedPackageLauncherExtras(java.lang.String,android.os.UserHandle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Android.Os.UserHandle"/></param>
        /// <returns><see cref="Android.Os.Bundle"/></returns>
        public Android.Os.Bundle GetSuspendedPackageLauncherExtras(Java.Lang.String arg0, Android.Os.UserHandle arg1)
        {
            return IExecute<Android.Os.Bundle>("getSuspendedPackageLauncherExtras", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.html#hasShortcutHostPermission()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool HasShortcutHostPermission()
        {
            return IExecuteWithSignature<bool>("hasShortcutHostPermission", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.html#isActivityEnabled(android.content.ComponentName,android.os.UserHandle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.ComponentName"/></param>
        /// <param name="arg1"><see cref="Android.Os.UserHandle"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool IsActivityEnabled(Android.Content.ComponentName arg0, Android.Os.UserHandle arg1)
        {
            return IExecute<bool>("isActivityEnabled", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.html#isPackageEnabled(java.lang.String,android.os.UserHandle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Android.Os.UserHandle"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool IsPackageEnabled(Java.Lang.String arg0, Android.Os.UserHandle arg1)
        {
            return IExecute<bool>("isPackageEnabled", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.html#shouldHideFromSuggestions(java.lang.String,android.os.UserHandle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Android.Os.UserHandle"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool ShouldHideFromSuggestions(Java.Lang.String arg0, Android.Os.UserHandle arg1)
        {
            return IExecute<bool>("shouldHideFromSuggestions", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.html#getActivityList(java.lang.String,android.os.UserHandle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Android.Os.UserHandle"/></param>
        /// <returns><see cref="Java.Util.List"/></returns>
        public Java.Util.List<Android.Content.Pm.LauncherActivityInfo> GetActivityList(Java.Lang.String arg0, Android.Os.UserHandle arg1)
        {
            return IExecute<Java.Util.List<Android.Content.Pm.LauncherActivityInfo>>("getActivityList", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.html#getShortcutConfigActivityList(java.lang.String,android.os.UserHandle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Android.Os.UserHandle"/></param>
        /// <returns><see cref="Java.Util.List"/></returns>
        public Java.Util.List<Android.Content.Pm.LauncherActivityInfo> GetShortcutConfigActivityList(Java.Lang.String arg0, Android.Os.UserHandle arg1)
        {
            return IExecute<Java.Util.List<Android.Content.Pm.LauncherActivityInfo>>("getShortcutConfigActivityList", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.html#getAllPackageInstallerSessions()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.List"/></returns>
        public Java.Util.List<Android.Content.Pm.PackageInstaller.SessionInfo> GetAllPackageInstallerSessions()
        {
            return IExecuteWithSignature<Java.Util.List<Android.Content.Pm.PackageInstaller.SessionInfo>>("getAllPackageInstallerSessions", "()Ljava/util/List;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.html#getShortcuts(android.content.pm.LauncherApps.ShortcutQuery,android.os.UserHandle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Pm.LauncherApps.ShortcutQuery"/></param>
        /// <param name="arg1"><see cref="Android.Os.UserHandle"/></param>
        /// <returns><see cref="Java.Util.List"/></returns>
        public Java.Util.List<Android.Content.Pm.ShortcutInfo> GetShortcuts(Android.Content.Pm.LauncherApps.ShortcutQuery arg0, Android.Os.UserHandle arg1)
        {
            return IExecute<Java.Util.List<Android.Content.Pm.ShortcutInfo>>("getShortcuts", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.html#getProfiles()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.List"/></returns>
        public Java.Util.List<Android.Os.UserHandle> GetProfiles()
        {
            return IExecuteWithSignature<Java.Util.List<Android.Os.UserHandle>>("getProfiles", "()Ljava/util/List;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.html#pinShortcuts(java.lang.String,java.util.List,android.os.UserHandle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Java.Util.List"/></param>
        /// <param name="arg2"><see cref="Android.Os.UserHandle"/></param>
        public void PinShortcuts(Java.Lang.String arg0, Java.Util.List<Java.Lang.String> arg1, Android.Os.UserHandle arg2)
        {
            IExecute("pinShortcuts", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.html#registerCallback(android.content.pm.LauncherApps.Callback,android.os.Handler)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Pm.LauncherApps.Callback"/></param>
        /// <param name="arg1"><see cref="Android.Os.Handler"/></param>
        public void RegisterCallback(Android.Content.Pm.LauncherApps.Callback arg0, Android.Os.Handler arg1)
        {
            IExecute("registerCallback", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.html#registerCallback(android.content.pm.LauncherApps.Callback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Pm.LauncherApps.Callback"/></param>
        public void RegisterCallback(Android.Content.Pm.LauncherApps.Callback arg0)
        {
            IExecuteWithSignature("registerCallback", "(Landroid/content/pm/LauncherApps$Callback;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.html#registerPackageInstallerSessionCallback(java.util.concurrent.Executor,android.content.pm.PackageInstaller.SessionCallback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Concurrent.Executor"/></param>
        /// <param name="arg1"><see cref="Android.Content.Pm.PackageInstaller.SessionCallback"/></param>
        public void RegisterPackageInstallerSessionCallback(Java.Util.Concurrent.Executor arg0, Android.Content.Pm.PackageInstaller.SessionCallback arg1)
        {
            IExecute("registerPackageInstallerSessionCallback", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.html#startAppDetailsActivity(android.content.ComponentName,android.os.UserHandle,android.graphics.Rect,android.os.Bundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.ComponentName"/></param>
        /// <param name="arg1"><see cref="Android.Os.UserHandle"/></param>
        /// <param name="arg2"><see cref="Android.Graphics.Rect"/></param>
        /// <param name="arg3"><see cref="Android.Os.Bundle"/></param>
        public void StartAppDetailsActivity(Android.Content.ComponentName arg0, Android.Os.UserHandle arg1, Android.Graphics.Rect arg2, Android.Os.Bundle arg3)
        {
            IExecute("startAppDetailsActivity", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.html#startMainActivity(android.content.ComponentName,android.os.UserHandle,android.graphics.Rect,android.os.Bundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.ComponentName"/></param>
        /// <param name="arg1"><see cref="Android.Os.UserHandle"/></param>
        /// <param name="arg2"><see cref="Android.Graphics.Rect"/></param>
        /// <param name="arg3"><see cref="Android.Os.Bundle"/></param>
        public void StartMainActivity(Android.Content.ComponentName arg0, Android.Os.UserHandle arg1, Android.Graphics.Rect arg2, Android.Os.Bundle arg3)
        {
            IExecute("startMainActivity", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.html#startPackageInstallerSessionDetailsActivity(android.content.pm.PackageInstaller.SessionInfo,android.graphics.Rect,android.os.Bundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Pm.PackageInstaller.SessionInfo"/></param>
        /// <param name="arg1"><see cref="Android.Graphics.Rect"/></param>
        /// <param name="arg2"><see cref="Android.Os.Bundle"/></param>
        public void StartPackageInstallerSessionDetailsActivity(Android.Content.Pm.PackageInstaller.SessionInfo arg0, Android.Graphics.Rect arg1, Android.Os.Bundle arg2)
        {
            IExecute("startPackageInstallerSessionDetailsActivity", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.html#startShortcut(android.content.pm.ShortcutInfo,android.graphics.Rect,android.os.Bundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Pm.ShortcutInfo"/></param>
        /// <param name="arg1"><see cref="Android.Graphics.Rect"/></param>
        /// <param name="arg2"><see cref="Android.Os.Bundle"/></param>
        public void StartShortcut(Android.Content.Pm.ShortcutInfo arg0, Android.Graphics.Rect arg1, Android.Os.Bundle arg2)
        {
            IExecute("startShortcut", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.html#startShortcut(java.lang.String,java.lang.String,android.graphics.Rect,android.os.Bundle,android.os.UserHandle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="Android.Graphics.Rect"/></param>
        /// <param name="arg3"><see cref="Android.Os.Bundle"/></param>
        /// <param name="arg4"><see cref="Android.Os.UserHandle"/></param>
        public void StartShortcut(Java.Lang.String arg0, Java.Lang.String arg1, Android.Graphics.Rect arg2, Android.Os.Bundle arg3, Android.Os.UserHandle arg4)
        {
            IExecute("startShortcut", arg0, arg1, arg2, arg3, arg4);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.html#unregisterCallback(android.content.pm.LauncherApps.Callback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Pm.LauncherApps.Callback"/></param>
        public void UnregisterCallback(Android.Content.Pm.LauncherApps.Callback arg0)
        {
            IExecuteWithSignature("unregisterCallback", "(Landroid/content/pm/LauncherApps$Callback;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.html#unregisterPackageInstallerSessionCallback(android.content.pm.PackageInstaller.SessionCallback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Pm.PackageInstaller.SessionCallback"/></param>
        public void UnregisterPackageInstallerSessionCallback(Android.Content.Pm.PackageInstaller.SessionCallback arg0)
        {
            IExecuteWithSignature("unregisterPackageInstallerSessionCallback", "(Landroid/content/pm/PackageInstaller$SessionCallback;)V", arg0);
        }

        #endregion

        #region Nested classes
        #region Callback
        public partial class Callback
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.Callback.html#onPackageAdded(java.lang.String,android.os.UserHandle)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <param name="arg1"><see cref="Android.Os.UserHandle"/></param>
            public void OnPackageAdded(Java.Lang.String arg0, Android.Os.UserHandle arg1)
            {
                IExecute("onPackageAdded", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.Callback.html#onPackageChanged(java.lang.String,android.os.UserHandle)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <param name="arg1"><see cref="Android.Os.UserHandle"/></param>
            public void OnPackageChanged(Java.Lang.String arg0, Android.Os.UserHandle arg1)
            {
                IExecute("onPackageChanged", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.Callback.html#onPackageRemoved(java.lang.String,android.os.UserHandle)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <param name="arg1"><see cref="Android.Os.UserHandle"/></param>
            public void OnPackageRemoved(Java.Lang.String arg0, Android.Os.UserHandle arg1)
            {
                IExecute("onPackageRemoved", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.Callback.html#onPackagesAvailable(java.lang.String[],android.os.UserHandle,boolean)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <param name="arg1"><see cref="Android.Os.UserHandle"/></param>
            /// <param name="arg2"><see cref="bool"/></param>
            public void OnPackagesAvailable(Java.Lang.String[] arg0, Android.Os.UserHandle arg1, bool arg2)
            {
                IExecute("onPackagesAvailable", arg0, arg1, arg2);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.Callback.html#onPackagesUnavailable(java.lang.String[],android.os.UserHandle,boolean)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <param name="arg1"><see cref="Android.Os.UserHandle"/></param>
            /// <param name="arg2"><see cref="bool"/></param>
            public void OnPackagesUnavailable(Java.Lang.String[] arg0, Android.Os.UserHandle arg1, bool arg2)
            {
                IExecute("onPackagesUnavailable", arg0, arg1, arg2);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.Callback.html#onPackageLoadingProgressChanged(java.lang.String,android.os.UserHandle,float)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <param name="arg1"><see cref="Android.Os.UserHandle"/></param>
            /// <param name="arg2"><see cref="float"/></param>
            public void OnPackageLoadingProgressChanged(Java.Lang.String arg0, Android.Os.UserHandle arg1, float arg2)
            {
                IExecute("onPackageLoadingProgressChanged", arg0, arg1, arg2);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.Callback.html#onPackagesSuspended(java.lang.String[],android.os.UserHandle,android.os.Bundle)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <param name="arg1"><see cref="Android.Os.UserHandle"/></param>
            /// <param name="arg2"><see cref="Android.Os.Bundle"/></param>
            [global::System.Obsolete()]
            public void OnPackagesSuspended(Java.Lang.String[] arg0, Android.Os.UserHandle arg1, Android.Os.Bundle arg2)
            {
                IExecute("onPackagesSuspended", arg0, arg1, arg2);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.Callback.html#onPackagesSuspended(java.lang.String[],android.os.UserHandle)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <param name="arg1"><see cref="Android.Os.UserHandle"/></param>
            public void OnPackagesSuspended(Java.Lang.String[] arg0, Android.Os.UserHandle arg1)
            {
                IExecute("onPackagesSuspended", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.Callback.html#onPackagesUnsuspended(java.lang.String[],android.os.UserHandle)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <param name="arg1"><see cref="Android.Os.UserHandle"/></param>
            public void OnPackagesUnsuspended(Java.Lang.String[] arg0, Android.Os.UserHandle arg1)
            {
                IExecute("onPackagesUnsuspended", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.Callback.html#onShortcutsChanged(java.lang.String,java.util.List,android.os.UserHandle)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <param name="arg1"><see cref="Java.Util.List"/></param>
            /// <param name="arg2"><see cref="Android.Os.UserHandle"/></param>
            public void OnShortcutsChanged(Java.Lang.String arg0, Java.Util.List<Android.Content.Pm.ShortcutInfo> arg1, Android.Os.UserHandle arg2)
            {
                IExecute("onShortcutsChanged", arg0, arg1, arg2);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region PinItemRequest
        public partial class PinItemRequest
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.PinItemRequest.html#CREATOR"/>
            /// </summary>
            public static Android.Os.Parcelable.Creator CREATOR { get { if (!_CREATORReady) { _CREATORContent = SGetField<Android.Os.Parcelable.Creator>(LocalBridgeClazz, "CREATOR"); _CREATORReady = true; } return _CREATORContent; } }
            private static Android.Os.Parcelable.Creator _CREATORContent = default;
            private static bool _CREATORReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.PinItemRequest.html#REQUEST_TYPE_APPWIDGET"/>
            /// </summary>
            public static int REQUEST_TYPE_APPWIDGET { get { if (!_REQUEST_TYPE_APPWIDGETReady) { _REQUEST_TYPE_APPWIDGETContent = SGetField<int>(LocalBridgeClazz, "REQUEST_TYPE_APPWIDGET"); _REQUEST_TYPE_APPWIDGETReady = true; } return _REQUEST_TYPE_APPWIDGETContent; } }
            private static int _REQUEST_TYPE_APPWIDGETContent = default;
            private static bool _REQUEST_TYPE_APPWIDGETReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.PinItemRequest.html#REQUEST_TYPE_SHORTCUT"/>
            /// </summary>
            public static int REQUEST_TYPE_SHORTCUT { get { if (!_REQUEST_TYPE_SHORTCUTReady) { _REQUEST_TYPE_SHORTCUTContent = SGetField<int>(LocalBridgeClazz, "REQUEST_TYPE_SHORTCUT"); _REQUEST_TYPE_SHORTCUTReady = true; } return _REQUEST_TYPE_SHORTCUTContent; } }
            private static int _REQUEST_TYPE_SHORTCUTContent = default;
            private static bool _REQUEST_TYPE_SHORTCUTReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.PinItemRequest.html#getAppWidgetProviderInfo(android.content.Context)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Content.Context"/></param>
            /// <returns><see cref="Android.Appwidget.AppWidgetProviderInfo"/></returns>
            public Android.Appwidget.AppWidgetProviderInfo GetAppWidgetProviderInfo(Android.Content.Context arg0)
            {
                return IExecuteWithSignature<Android.Appwidget.AppWidgetProviderInfo>("getAppWidgetProviderInfo", "(Landroid/content/Context;)Landroid/appwidget/AppWidgetProviderInfo;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.PinItemRequest.html#getShortcutInfo()"/>
            /// </summary>
            /// <returns><see cref="Android.Content.Pm.ShortcutInfo"/></returns>
            public Android.Content.Pm.ShortcutInfo GetShortcutInfo()
            {
                return IExecuteWithSignature<Android.Content.Pm.ShortcutInfo>("getShortcutInfo", "()Landroid/content/pm/ShortcutInfo;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.PinItemRequest.html#getExtras()"/>
            /// </summary>
            /// <returns><see cref="Android.Os.Bundle"/></returns>
            public Android.Os.Bundle GetExtras()
            {
                return IExecuteWithSignature<Android.Os.Bundle>("getExtras", "()Landroid/os/Bundle;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.PinItemRequest.html#accept()"/>
            /// </summary>
            /// <returns><see cref="bool"/></returns>
            public bool Accept()
            {
                return IExecuteWithSignature<bool>("accept", "()Z");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.PinItemRequest.html#accept(android.os.Bundle)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Os.Bundle"/></param>
            /// <returns><see cref="bool"/></returns>
            public bool Accept(Android.Os.Bundle arg0)
            {
                return IExecuteWithSignature<bool>("accept", "(Landroid/os/Bundle;)Z", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.PinItemRequest.html#isValid()"/>
            /// </summary>
            /// <returns><see cref="bool"/></returns>
            public bool IsValid()
            {
                return IExecuteWithSignature<bool>("isValid", "()Z");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.PinItemRequest.html#describeContents()"/>
            /// </summary>
            /// <returns><see cref="int"/></returns>
            public int DescribeContents()
            {
                return IExecuteWithSignature<int>("describeContents", "()I");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.PinItemRequest.html#getRequestType()"/>
            /// </summary>
            /// <returns><see cref="int"/></returns>
            public int GetRequestType()
            {
                return IExecuteWithSignature<int>("getRequestType", "()I");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.PinItemRequest.html#writeToParcel(android.os.Parcel,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Os.Parcel"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            public void WriteToParcel(Android.Os.Parcel arg0, int arg1)
            {
                IExecute("writeToParcel", arg0, arg1);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region ShortcutQuery
        public partial class ShortcutQuery
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.ShortcutQuery.html#FLAG_GET_KEY_FIELDS_ONLY"/>
            /// </summary>
            public static int FLAG_GET_KEY_FIELDS_ONLY { get { if (!_FLAG_GET_KEY_FIELDS_ONLYReady) { _FLAG_GET_KEY_FIELDS_ONLYContent = SGetField<int>(LocalBridgeClazz, "FLAG_GET_KEY_FIELDS_ONLY"); _FLAG_GET_KEY_FIELDS_ONLYReady = true; } return _FLAG_GET_KEY_FIELDS_ONLYContent; } }
            private static int _FLAG_GET_KEY_FIELDS_ONLYContent = default;
            private static bool _FLAG_GET_KEY_FIELDS_ONLYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.ShortcutQuery.html#FLAG_MATCH_CACHED"/>
            /// </summary>
            public static int FLAG_MATCH_CACHED { get { if (!_FLAG_MATCH_CACHEDReady) { _FLAG_MATCH_CACHEDContent = SGetField<int>(LocalBridgeClazz, "FLAG_MATCH_CACHED"); _FLAG_MATCH_CACHEDReady = true; } return _FLAG_MATCH_CACHEDContent; } }
            private static int _FLAG_MATCH_CACHEDContent = default;
            private static bool _FLAG_MATCH_CACHEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.ShortcutQuery.html#FLAG_MATCH_DYNAMIC"/>
            /// </summary>
            public static int FLAG_MATCH_DYNAMIC { get { if (!_FLAG_MATCH_DYNAMICReady) { _FLAG_MATCH_DYNAMICContent = SGetField<int>(LocalBridgeClazz, "FLAG_MATCH_DYNAMIC"); _FLAG_MATCH_DYNAMICReady = true; } return _FLAG_MATCH_DYNAMICContent; } }
            private static int _FLAG_MATCH_DYNAMICContent = default;
            private static bool _FLAG_MATCH_DYNAMICReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.ShortcutQuery.html#FLAG_MATCH_MANIFEST"/>
            /// </summary>
            public static int FLAG_MATCH_MANIFEST { get { if (!_FLAG_MATCH_MANIFESTReady) { _FLAG_MATCH_MANIFESTContent = SGetField<int>(LocalBridgeClazz, "FLAG_MATCH_MANIFEST"); _FLAG_MATCH_MANIFESTReady = true; } return _FLAG_MATCH_MANIFESTContent; } }
            private static int _FLAG_MATCH_MANIFESTContent = default;
            private static bool _FLAG_MATCH_MANIFESTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.ShortcutQuery.html#FLAG_MATCH_PINNED"/>
            /// </summary>
            public static int FLAG_MATCH_PINNED { get { if (!_FLAG_MATCH_PINNEDReady) { _FLAG_MATCH_PINNEDContent = SGetField<int>(LocalBridgeClazz, "FLAG_MATCH_PINNED"); _FLAG_MATCH_PINNEDReady = true; } return _FLAG_MATCH_PINNEDContent; } }
            private static int _FLAG_MATCH_PINNEDContent = default;
            private static bool _FLAG_MATCH_PINNEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.ShortcutQuery.html#FLAG_MATCH_PINNED_BY_ANY_LAUNCHER"/>
            /// </summary>
            public static int FLAG_MATCH_PINNED_BY_ANY_LAUNCHER { get { if (!_FLAG_MATCH_PINNED_BY_ANY_LAUNCHERReady) { _FLAG_MATCH_PINNED_BY_ANY_LAUNCHERContent = SGetField<int>(LocalBridgeClazz, "FLAG_MATCH_PINNED_BY_ANY_LAUNCHER"); _FLAG_MATCH_PINNED_BY_ANY_LAUNCHERReady = true; } return _FLAG_MATCH_PINNED_BY_ANY_LAUNCHERContent; } }
            private static int _FLAG_MATCH_PINNED_BY_ANY_LAUNCHERContent = default;
            private static bool _FLAG_MATCH_PINNED_BY_ANY_LAUNCHERReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.ShortcutQuery.html#setActivity(android.content.ComponentName)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Content.ComponentName"/></param>
            /// <returns><see cref="Android.Content.Pm.LauncherApps.ShortcutQuery"/></returns>
            public Android.Content.Pm.LauncherApps.ShortcutQuery SetActivity(Android.Content.ComponentName arg0)
            {
                return IExecuteWithSignature<Android.Content.Pm.LauncherApps.ShortcutQuery>("setActivity", "(Landroid/content/ComponentName;)Landroid/content/pm/LauncherApps$ShortcutQuery;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.ShortcutQuery.html#setChangedSince(long)"/>
            /// </summary>
            /// <param name="arg0"><see cref="long"/></param>
            /// <returns><see cref="Android.Content.Pm.LauncherApps.ShortcutQuery"/></returns>
            public Android.Content.Pm.LauncherApps.ShortcutQuery SetChangedSince(long arg0)
            {
                return IExecuteWithSignature<Android.Content.Pm.LauncherApps.ShortcutQuery>("setChangedSince", "(J)Landroid/content/pm/LauncherApps$ShortcutQuery;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.ShortcutQuery.html#setLocusIds(java.util.List)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Util.List"/></param>
            /// <returns><see cref="Android.Content.Pm.LauncherApps.ShortcutQuery"/></returns>
            public Android.Content.Pm.LauncherApps.ShortcutQuery SetLocusIds(Java.Util.List<Android.Content.LocusId> arg0)
            {
                return IExecuteWithSignature<Android.Content.Pm.LauncherApps.ShortcutQuery>("setLocusIds", "(Ljava/util/List;)Landroid/content/pm/LauncherApps$ShortcutQuery;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.ShortcutQuery.html#setPackage(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Android.Content.Pm.LauncherApps.ShortcutQuery"/></returns>
            public Android.Content.Pm.LauncherApps.ShortcutQuery SetPackage(Java.Lang.String arg0)
            {
                return IExecuteWithSignature<Android.Content.Pm.LauncherApps.ShortcutQuery>("setPackage", "(Ljava/lang/String;)Landroid/content/pm/LauncherApps$ShortcutQuery;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.ShortcutQuery.html#setQueryFlags(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <returns><see cref="Android.Content.Pm.LauncherApps.ShortcutQuery"/></returns>
            public Android.Content.Pm.LauncherApps.ShortcutQuery SetQueryFlags(int arg0)
            {
                return IExecuteWithSignature<Android.Content.Pm.LauncherApps.ShortcutQuery>("setQueryFlags", "(I)Landroid/content/pm/LauncherApps$ShortcutQuery;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/pm/LauncherApps.ShortcutQuery.html#setShortcutIds(java.util.List)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Util.List"/></param>
            /// <returns><see cref="Android.Content.Pm.LauncherApps.ShortcutQuery"/></returns>
            public Android.Content.Pm.LauncherApps.ShortcutQuery SetShortcutIds(Java.Util.List<Java.Lang.String> arg0)
            {
                return IExecuteWithSignature<Android.Content.Pm.LauncherApps.ShortcutQuery>("setShortcutIds", "(Ljava/util/List;)Landroid/content/pm/LauncherApps$ShortcutQuery;", arg0);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}