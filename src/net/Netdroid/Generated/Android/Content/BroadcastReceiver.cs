/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.10.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Content
{
    #region BroadcastReceiver declaration
    /// <summary>
    /// <see href="https://developer.android.com/reference/android/content/BroadcastReceiver.html"/>
    /// </summary>
    public partial class BroadcastReceiver : MASES.JCOBridge.C2JBridge.JVMBridgeBase<BroadcastReceiver>
    {
        const string _bridgeClassName = "android.content.BroadcastReceiver";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        [global::System.Obsolete("BroadcastReceiver class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public BroadcastReceiver() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        [global::System.Obsolete("BroadcastReceiver class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public BroadcastReceiver(params object[] args) : base(args) { }
    
        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
    
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => true;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;
    
        // TODO: complete the class
        #region PendingResult declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/BroadcastReceiver.PendingResult.html"/>
        /// </summary>
        public partial class PendingResult : MASES.JCOBridge.C2JBridge.JVMBridgeBase<PendingResult>
        {
            const string _bridgeClassName = "android.content.BroadcastReceiver$PendingResult";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public PendingResult() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public PendingResult(params object[] args) : base(args) { }
        
            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
        
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;
        
            // TODO: complete the class
        
        }
        #endregion

    
    }
    #endregion

    #region BroadcastReceiver implementation
    public partial class BroadcastReceiver
    {
        #region Constructors
    
        #endregion
    
        #region Class/Interface conversion operators
    
        #endregion
    
        #region Fields
    
        #endregion
    
        #region Static methods
    
        #endregion
    
        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/BroadcastReceiver.html#onReceive(android.content.Context,android.content.Intent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        /// <param name="arg1"><see cref="Android.Content.Intent"/></param>
        public void OnReceive(Android.Content.Context arg0, Android.Content.Intent arg1)
        {
            IExecuteWithSignature("onReceive", "(Landroid/content/Context;Landroid/content/Intent;)V", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/BroadcastReceiver.html#peekService(android.content.Context,android.content.Intent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        /// <param name="arg1"><see cref="Android.Content.Intent"/></param>
        /// <returns><see cref="Android.Os.IBinder"/></returns>
        public Android.Os.IBinder PeekService(Android.Content.Context arg0, Android.Content.Intent arg1)
        {
            return IExecuteWithSignature<Android.Os.IBinder>("peekService", "(Landroid/content/Context;Landroid/content/Intent;)Landroid/os/IBinder;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/BroadcastReceiver.html#goAsync()"/>
        /// </summary>
        /// <returns><see cref="Android.Content.BroadcastReceiver.PendingResult"/></returns>
        public Android.Content.BroadcastReceiver.PendingResult GoAsync()
        {
            return IExecuteWithSignature<Android.Content.BroadcastReceiver.PendingResult>("goAsync", "()Landroid/content/BroadcastReceiver$PendingResult;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/BroadcastReceiver.html#getResultExtras(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        /// <returns><see cref="Android.Os.Bundle"/></returns>
        public Android.Os.Bundle GetResultExtras(bool arg0)
        {
            return IExecuteWithSignature<Android.Os.Bundle>("getResultExtras", "(Z)Landroid/os/Bundle;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/BroadcastReceiver.html#getAbortBroadcast()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool GetAbortBroadcast()
        {
            return IExecuteWithSignature<bool>("getAbortBroadcast", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/BroadcastReceiver.html#getDebugUnregister()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool GetDebugUnregister()
        {
            return IExecuteWithSignature<bool>("getDebugUnregister", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/BroadcastReceiver.html#isInitialStickyBroadcast()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsInitialStickyBroadcast()
        {
            return IExecuteWithSignature<bool>("isInitialStickyBroadcast", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/BroadcastReceiver.html#isOrderedBroadcast()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsOrderedBroadcast()
        {
            return IExecuteWithSignature<bool>("isOrderedBroadcast", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/BroadcastReceiver.html#getResultCode()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetResultCode()
        {
            return IExecuteWithSignature<int>("getResultCode", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/BroadcastReceiver.html#getResultData()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetResultData()
        {
            return IExecuteWithSignature<Java.Lang.String>("getResultData", "()Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/BroadcastReceiver.html#abortBroadcast()"/>
        /// </summary>
        public void AbortBroadcast()
        {
            IExecuteWithSignature("abortBroadcast", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/BroadcastReceiver.html#clearAbortBroadcast()"/>
        /// </summary>
        public void ClearAbortBroadcast()
        {
            IExecuteWithSignature("clearAbortBroadcast", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/BroadcastReceiver.html#setDebugUnregister(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetDebugUnregister(bool arg0)
        {
            IExecuteWithSignature("setDebugUnregister", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/BroadcastReceiver.html#setOrderedHint(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetOrderedHint(bool arg0)
        {
            IExecuteWithSignature("setOrderedHint", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/BroadcastReceiver.html#setResult(int,java.lang.String,android.os.Bundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="Android.Os.Bundle"/></param>
        public void SetResult(int arg0, Java.Lang.String arg1, Android.Os.Bundle arg2)
        {
            IExecuteWithSignature("setResult", "(ILjava/lang/String;Landroid/os/Bundle;)V", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/BroadcastReceiver.html#setResultCode(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetResultCode(int arg0)
        {
            IExecuteWithSignature("setResultCode", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/BroadcastReceiver.html#setResultData(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        public void SetResultData(Java.Lang.String arg0)
        {
            IExecuteWithSignature("setResultData", "(Ljava/lang/String;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/BroadcastReceiver.html#setResultExtras(android.os.Bundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.Bundle"/></param>
        public void SetResultExtras(Android.Os.Bundle arg0)
        {
            IExecuteWithSignature("setResultExtras", "(Landroid/os/Bundle;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/BroadcastReceiver.html#getSentFromUid()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetSentFromUid()
        {
            return IExecuteWithSignature<int>("getSentFromUid", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/BroadcastReceiver.html#getSentFromPackage()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetSentFromPackage()
        {
            return IExecuteWithSignature<Java.Lang.String>("getSentFromPackage", "()Ljava/lang/String;");
        }
    
        #endregion
    
        #region Nested classes
        #region PendingResult implementation
        public partial class PendingResult
        {
            #region Constructors
        
            #endregion
        
            #region Class/Interface conversion operators
        
            #endregion
        
            #region Fields
        
            #endregion
        
            #region Static methods
        
            #endregion
        
            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/BroadcastReceiver.PendingResult.html#getResultExtras(boolean)"/>
            /// </summary>
            /// <param name="arg0"><see cref="bool"/></param>
            /// <returns><see cref="Android.Os.Bundle"/></returns>
            public Android.Os.Bundle GetResultExtras(bool arg0)
            {
                return IExecuteWithSignature<Android.Os.Bundle>("getResultExtras", "(Z)Landroid/os/Bundle;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/BroadcastReceiver.PendingResult.html#getAbortBroadcast()"/>
            /// </summary>
            /// <returns><see cref="bool"/></returns>
            public bool GetAbortBroadcast()
            {
                return IExecuteWithSignature<bool>("getAbortBroadcast", "()Z");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/BroadcastReceiver.PendingResult.html#getResultCode()"/>
            /// </summary>
            /// <returns><see cref="int"/></returns>
            public int GetResultCode()
            {
                return IExecuteWithSignature<int>("getResultCode", "()I");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/BroadcastReceiver.PendingResult.html#getResultData()"/>
            /// </summary>
            /// <returns><see cref="Java.Lang.String"/></returns>
            public Java.Lang.String GetResultData()
            {
                return IExecuteWithSignature<Java.Lang.String>("getResultData", "()Ljava/lang/String;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/BroadcastReceiver.PendingResult.html#abortBroadcast()"/>
            /// </summary>
            public void AbortBroadcast()
            {
                IExecuteWithSignature("abortBroadcast", "()V");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/BroadcastReceiver.PendingResult.html#clearAbortBroadcast()"/>
            /// </summary>
            public void ClearAbortBroadcast()
            {
                IExecuteWithSignature("clearAbortBroadcast", "()V");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/BroadcastReceiver.PendingResult.html#finish()"/>
            /// </summary>
            public void Finish()
            {
                IExecuteWithSignature("finish", "()V");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/BroadcastReceiver.PendingResult.html#setResult(int,java.lang.String,android.os.Bundle)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <param name="arg1"><see cref="Java.Lang.String"/></param>
            /// <param name="arg2"><see cref="Android.Os.Bundle"/></param>
            public void SetResult(int arg0, Java.Lang.String arg1, Android.Os.Bundle arg2)
            {
                IExecuteWithSignature("setResult", "(ILjava/lang/String;Landroid/os/Bundle;)V", arg0, arg1, arg2);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/BroadcastReceiver.PendingResult.html#setResultCode(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            public void SetResultCode(int arg0)
            {
                IExecuteWithSignature("setResultCode", "(I)V", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/BroadcastReceiver.PendingResult.html#setResultData(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            public void SetResultData(Java.Lang.String arg0)
            {
                IExecuteWithSignature("setResultData", "(Ljava/lang/String;)V", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/BroadcastReceiver.PendingResult.html#setResultExtras(android.os.Bundle)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Os.Bundle"/></param>
            public void SetResultExtras(Android.Os.Bundle arg0)
            {
                IExecuteWithSignature("setResultExtras", "(Landroid/os/Bundle;)V", arg0);
            }
        
            #endregion
        
            #region Nested classes
        
            #endregion
        
            // TODO: complete the class
        }
        #endregion

    
        #endregion
    
        // TODO: complete the class
    }
    #endregion
}