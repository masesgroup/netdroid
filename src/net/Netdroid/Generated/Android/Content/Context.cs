/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.1.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Content
{
    #region Context
    public partial class Context
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#BIND_ABOVE_CLIENT"/>
        /// </summary>
        public static int BIND_ABOVE_CLIENT { get { if (!_BIND_ABOVE_CLIENTReady) { _BIND_ABOVE_CLIENTContent = SGetField<int>(LocalBridgeClazz, "BIND_ABOVE_CLIENT"); _BIND_ABOVE_CLIENTReady = true; } return _BIND_ABOVE_CLIENTContent; } }
        private static int _BIND_ABOVE_CLIENTContent = default;
        private static bool _BIND_ABOVE_CLIENTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#BIND_ADJUST_WITH_ACTIVITY"/>
        /// </summary>
        public static int BIND_ADJUST_WITH_ACTIVITY { get { if (!_BIND_ADJUST_WITH_ACTIVITYReady) { _BIND_ADJUST_WITH_ACTIVITYContent = SGetField<int>(LocalBridgeClazz, "BIND_ADJUST_WITH_ACTIVITY"); _BIND_ADJUST_WITH_ACTIVITYReady = true; } return _BIND_ADJUST_WITH_ACTIVITYContent; } }
        private static int _BIND_ADJUST_WITH_ACTIVITYContent = default;
        private static bool _BIND_ADJUST_WITH_ACTIVITYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#BIND_ALLOW_ACTIVITY_STARTS"/>
        /// </summary>
        public static int BIND_ALLOW_ACTIVITY_STARTS { get { if (!_BIND_ALLOW_ACTIVITY_STARTSReady) { _BIND_ALLOW_ACTIVITY_STARTSContent = SGetField<int>(LocalBridgeClazz, "BIND_ALLOW_ACTIVITY_STARTS"); _BIND_ALLOW_ACTIVITY_STARTSReady = true; } return _BIND_ALLOW_ACTIVITY_STARTSContent; } }
        private static int _BIND_ALLOW_ACTIVITY_STARTSContent = default;
        private static bool _BIND_ALLOW_ACTIVITY_STARTSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#BIND_ALLOW_OOM_MANAGEMENT"/>
        /// </summary>
        public static int BIND_ALLOW_OOM_MANAGEMENT { get { if (!_BIND_ALLOW_OOM_MANAGEMENTReady) { _BIND_ALLOW_OOM_MANAGEMENTContent = SGetField<int>(LocalBridgeClazz, "BIND_ALLOW_OOM_MANAGEMENT"); _BIND_ALLOW_OOM_MANAGEMENTReady = true; } return _BIND_ALLOW_OOM_MANAGEMENTContent; } }
        private static int _BIND_ALLOW_OOM_MANAGEMENTContent = default;
        private static bool _BIND_ALLOW_OOM_MANAGEMENTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#BIND_AUTO_CREATE"/>
        /// </summary>
        public static int BIND_AUTO_CREATE { get { if (!_BIND_AUTO_CREATEReady) { _BIND_AUTO_CREATEContent = SGetField<int>(LocalBridgeClazz, "BIND_AUTO_CREATE"); _BIND_AUTO_CREATEReady = true; } return _BIND_AUTO_CREATEContent; } }
        private static int _BIND_AUTO_CREATEContent = default;
        private static bool _BIND_AUTO_CREATEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#BIND_DEBUG_UNBIND"/>
        /// </summary>
        public static int BIND_DEBUG_UNBIND { get { if (!_BIND_DEBUG_UNBINDReady) { _BIND_DEBUG_UNBINDContent = SGetField<int>(LocalBridgeClazz, "BIND_DEBUG_UNBIND"); _BIND_DEBUG_UNBINDReady = true; } return _BIND_DEBUG_UNBINDContent; } }
        private static int _BIND_DEBUG_UNBINDContent = default;
        private static bool _BIND_DEBUG_UNBINDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#BIND_EXTERNAL_SERVICE"/>
        /// </summary>
        public static int BIND_EXTERNAL_SERVICE { get { if (!_BIND_EXTERNAL_SERVICEReady) { _BIND_EXTERNAL_SERVICEContent = SGetField<int>(LocalBridgeClazz, "BIND_EXTERNAL_SERVICE"); _BIND_EXTERNAL_SERVICEReady = true; } return _BIND_EXTERNAL_SERVICEContent; } }
        private static int _BIND_EXTERNAL_SERVICEContent = default;
        private static bool _BIND_EXTERNAL_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#BIND_IMPORTANT"/>
        /// </summary>
        public static int BIND_IMPORTANT { get { if (!_BIND_IMPORTANTReady) { _BIND_IMPORTANTContent = SGetField<int>(LocalBridgeClazz, "BIND_IMPORTANT"); _BIND_IMPORTANTReady = true; } return _BIND_IMPORTANTContent; } }
        private static int _BIND_IMPORTANTContent = default;
        private static bool _BIND_IMPORTANTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#BIND_INCLUDE_CAPABILITIES"/>
        /// </summary>
        public static int BIND_INCLUDE_CAPABILITIES { get { if (!_BIND_INCLUDE_CAPABILITIESReady) { _BIND_INCLUDE_CAPABILITIESContent = SGetField<int>(LocalBridgeClazz, "BIND_INCLUDE_CAPABILITIES"); _BIND_INCLUDE_CAPABILITIESReady = true; } return _BIND_INCLUDE_CAPABILITIESContent; } }
        private static int _BIND_INCLUDE_CAPABILITIESContent = default;
        private static bool _BIND_INCLUDE_CAPABILITIESReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#BIND_NOT_FOREGROUND"/>
        /// </summary>
        public static int BIND_NOT_FOREGROUND { get { if (!_BIND_NOT_FOREGROUNDReady) { _BIND_NOT_FOREGROUNDContent = SGetField<int>(LocalBridgeClazz, "BIND_NOT_FOREGROUND"); _BIND_NOT_FOREGROUNDReady = true; } return _BIND_NOT_FOREGROUNDContent; } }
        private static int _BIND_NOT_FOREGROUNDContent = default;
        private static bool _BIND_NOT_FOREGROUNDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#BIND_NOT_PERCEPTIBLE"/>
        /// </summary>
        public static int BIND_NOT_PERCEPTIBLE { get { if (!_BIND_NOT_PERCEPTIBLEReady) { _BIND_NOT_PERCEPTIBLEContent = SGetField<int>(LocalBridgeClazz, "BIND_NOT_PERCEPTIBLE"); _BIND_NOT_PERCEPTIBLEReady = true; } return _BIND_NOT_PERCEPTIBLEContent; } }
        private static int _BIND_NOT_PERCEPTIBLEContent = default;
        private static bool _BIND_NOT_PERCEPTIBLEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#BIND_SHARED_ISOLATED_PROCESS"/>
        /// </summary>
        public static int BIND_SHARED_ISOLATED_PROCESS { get { if (!_BIND_SHARED_ISOLATED_PROCESSReady) { _BIND_SHARED_ISOLATED_PROCESSContent = SGetField<int>(LocalBridgeClazz, "BIND_SHARED_ISOLATED_PROCESS"); _BIND_SHARED_ISOLATED_PROCESSReady = true; } return _BIND_SHARED_ISOLATED_PROCESSContent; } }
        private static int _BIND_SHARED_ISOLATED_PROCESSContent = default;
        private static bool _BIND_SHARED_ISOLATED_PROCESSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#BIND_WAIVE_PRIORITY"/>
        /// </summary>
        public static int BIND_WAIVE_PRIORITY { get { if (!_BIND_WAIVE_PRIORITYReady) { _BIND_WAIVE_PRIORITYContent = SGetField<int>(LocalBridgeClazz, "BIND_WAIVE_PRIORITY"); _BIND_WAIVE_PRIORITYReady = true; } return _BIND_WAIVE_PRIORITYContent; } }
        private static int _BIND_WAIVE_PRIORITYContent = default;
        private static bool _BIND_WAIVE_PRIORITYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#CONTEXT_IGNORE_SECURITY"/>
        /// </summary>
        public static int CONTEXT_IGNORE_SECURITY { get { if (!_CONTEXT_IGNORE_SECURITYReady) { _CONTEXT_IGNORE_SECURITYContent = SGetField<int>(LocalBridgeClazz, "CONTEXT_IGNORE_SECURITY"); _CONTEXT_IGNORE_SECURITYReady = true; } return _CONTEXT_IGNORE_SECURITYContent; } }
        private static int _CONTEXT_IGNORE_SECURITYContent = default;
        private static bool _CONTEXT_IGNORE_SECURITYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#CONTEXT_INCLUDE_CODE"/>
        /// </summary>
        public static int CONTEXT_INCLUDE_CODE { get { if (!_CONTEXT_INCLUDE_CODEReady) { _CONTEXT_INCLUDE_CODEContent = SGetField<int>(LocalBridgeClazz, "CONTEXT_INCLUDE_CODE"); _CONTEXT_INCLUDE_CODEReady = true; } return _CONTEXT_INCLUDE_CODEContent; } }
        private static int _CONTEXT_INCLUDE_CODEContent = default;
        private static bool _CONTEXT_INCLUDE_CODEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#CONTEXT_RESTRICTED"/>
        /// </summary>
        public static int CONTEXT_RESTRICTED { get { if (!_CONTEXT_RESTRICTEDReady) { _CONTEXT_RESTRICTEDContent = SGetField<int>(LocalBridgeClazz, "CONTEXT_RESTRICTED"); _CONTEXT_RESTRICTEDReady = true; } return _CONTEXT_RESTRICTEDContent; } }
        private static int _CONTEXT_RESTRICTEDContent = default;
        private static bool _CONTEXT_RESTRICTEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#DEVICE_ID_DEFAULT"/>
        /// </summary>
        public static int DEVICE_ID_DEFAULT { get { if (!_DEVICE_ID_DEFAULTReady) { _DEVICE_ID_DEFAULTContent = SGetField<int>(LocalBridgeClazz, "DEVICE_ID_DEFAULT"); _DEVICE_ID_DEFAULTReady = true; } return _DEVICE_ID_DEFAULTContent; } }
        private static int _DEVICE_ID_DEFAULTContent = default;
        private static bool _DEVICE_ID_DEFAULTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#DEVICE_ID_INVALID"/>
        /// </summary>
        public static int DEVICE_ID_INVALID { get { if (!_DEVICE_ID_INVALIDReady) { _DEVICE_ID_INVALIDContent = SGetField<int>(LocalBridgeClazz, "DEVICE_ID_INVALID"); _DEVICE_ID_INVALIDReady = true; } return _DEVICE_ID_INVALIDContent; } }
        private static int _DEVICE_ID_INVALIDContent = default;
        private static bool _DEVICE_ID_INVALIDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#MODE_APPEND"/>
        /// </summary>
        public static int MODE_APPEND { get { if (!_MODE_APPENDReady) { _MODE_APPENDContent = SGetField<int>(LocalBridgeClazz, "MODE_APPEND"); _MODE_APPENDReady = true; } return _MODE_APPENDContent; } }
        private static int _MODE_APPENDContent = default;
        private static bool _MODE_APPENDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#MODE_ENABLE_WRITE_AHEAD_LOGGING"/>
        /// </summary>
        public static int MODE_ENABLE_WRITE_AHEAD_LOGGING { get { if (!_MODE_ENABLE_WRITE_AHEAD_LOGGINGReady) { _MODE_ENABLE_WRITE_AHEAD_LOGGINGContent = SGetField<int>(LocalBridgeClazz, "MODE_ENABLE_WRITE_AHEAD_LOGGING"); _MODE_ENABLE_WRITE_AHEAD_LOGGINGReady = true; } return _MODE_ENABLE_WRITE_AHEAD_LOGGINGContent; } }
        private static int _MODE_ENABLE_WRITE_AHEAD_LOGGINGContent = default;
        private static bool _MODE_ENABLE_WRITE_AHEAD_LOGGINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#MODE_MULTI_PROCESS"/>
        /// </summary>
        [System.Obsolete()]
        public static int MODE_MULTI_PROCESS { get { if (!_MODE_MULTI_PROCESSReady) { _MODE_MULTI_PROCESSContent = SGetField<int>(LocalBridgeClazz, "MODE_MULTI_PROCESS"); _MODE_MULTI_PROCESSReady = true; } return _MODE_MULTI_PROCESSContent; } }
        private static int _MODE_MULTI_PROCESSContent = default;
        private static bool _MODE_MULTI_PROCESSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#MODE_NO_LOCALIZED_COLLATORS"/>
        /// </summary>
        public static int MODE_NO_LOCALIZED_COLLATORS { get { if (!_MODE_NO_LOCALIZED_COLLATORSReady) { _MODE_NO_LOCALIZED_COLLATORSContent = SGetField<int>(LocalBridgeClazz, "MODE_NO_LOCALIZED_COLLATORS"); _MODE_NO_LOCALIZED_COLLATORSReady = true; } return _MODE_NO_LOCALIZED_COLLATORSContent; } }
        private static int _MODE_NO_LOCALIZED_COLLATORSContent = default;
        private static bool _MODE_NO_LOCALIZED_COLLATORSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#MODE_PRIVATE"/>
        /// </summary>
        public static int MODE_PRIVATE { get { if (!_MODE_PRIVATEReady) { _MODE_PRIVATEContent = SGetField<int>(LocalBridgeClazz, "MODE_PRIVATE"); _MODE_PRIVATEReady = true; } return _MODE_PRIVATEContent; } }
        private static int _MODE_PRIVATEContent = default;
        private static bool _MODE_PRIVATEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#MODE_WORLD_READABLE"/>
        /// </summary>
        [System.Obsolete()]
        public static int MODE_WORLD_READABLE { get { if (!_MODE_WORLD_READABLEReady) { _MODE_WORLD_READABLEContent = SGetField<int>(LocalBridgeClazz, "MODE_WORLD_READABLE"); _MODE_WORLD_READABLEReady = true; } return _MODE_WORLD_READABLEContent; } }
        private static int _MODE_WORLD_READABLEContent = default;
        private static bool _MODE_WORLD_READABLEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#MODE_WORLD_WRITEABLE"/>
        /// </summary>
        [System.Obsolete()]
        public static int MODE_WORLD_WRITEABLE { get { if (!_MODE_WORLD_WRITEABLEReady) { _MODE_WORLD_WRITEABLEContent = SGetField<int>(LocalBridgeClazz, "MODE_WORLD_WRITEABLE"); _MODE_WORLD_WRITEABLEReady = true; } return _MODE_WORLD_WRITEABLEContent; } }
        private static int _MODE_WORLD_WRITEABLEContent = default;
        private static bool _MODE_WORLD_WRITEABLEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#RECEIVER_EXPORTED"/>
        /// </summary>
        public static int RECEIVER_EXPORTED { get { if (!_RECEIVER_EXPORTEDReady) { _RECEIVER_EXPORTEDContent = SGetField<int>(LocalBridgeClazz, "RECEIVER_EXPORTED"); _RECEIVER_EXPORTEDReady = true; } return _RECEIVER_EXPORTEDContent; } }
        private static int _RECEIVER_EXPORTEDContent = default;
        private static bool _RECEIVER_EXPORTEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#RECEIVER_NOT_EXPORTED"/>
        /// </summary>
        public static int RECEIVER_NOT_EXPORTED { get { if (!_RECEIVER_NOT_EXPORTEDReady) { _RECEIVER_NOT_EXPORTEDContent = SGetField<int>(LocalBridgeClazz, "RECEIVER_NOT_EXPORTED"); _RECEIVER_NOT_EXPORTEDReady = true; } return _RECEIVER_NOT_EXPORTEDContent; } }
        private static int _RECEIVER_NOT_EXPORTEDContent = default;
        private static bool _RECEIVER_NOT_EXPORTEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#RECEIVER_VISIBLE_TO_INSTANT_APPS"/>
        /// </summary>
        public static int RECEIVER_VISIBLE_TO_INSTANT_APPS { get { if (!_RECEIVER_VISIBLE_TO_INSTANT_APPSReady) { _RECEIVER_VISIBLE_TO_INSTANT_APPSContent = SGetField<int>(LocalBridgeClazz, "RECEIVER_VISIBLE_TO_INSTANT_APPS"); _RECEIVER_VISIBLE_TO_INSTANT_APPSReady = true; } return _RECEIVER_VISIBLE_TO_INSTANT_APPSContent; } }
        private static int _RECEIVER_VISIBLE_TO_INSTANT_APPSContent = default;
        private static bool _RECEIVER_VISIBLE_TO_INSTANT_APPSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#ACCESSIBILITY_SERVICE"/>
        /// </summary>
        public static Java.Lang.String ACCESSIBILITY_SERVICE { get { if (!_ACCESSIBILITY_SERVICEReady) { _ACCESSIBILITY_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACCESSIBILITY_SERVICE"); _ACCESSIBILITY_SERVICEReady = true; } return _ACCESSIBILITY_SERVICEContent; } }
        private static Java.Lang.String _ACCESSIBILITY_SERVICEContent = default;
        private static bool _ACCESSIBILITY_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#ACCOUNT_SERVICE"/>
        /// </summary>
        public static Java.Lang.String ACCOUNT_SERVICE { get { if (!_ACCOUNT_SERVICEReady) { _ACCOUNT_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACCOUNT_SERVICE"); _ACCOUNT_SERVICEReady = true; } return _ACCOUNT_SERVICEContent; } }
        private static Java.Lang.String _ACCOUNT_SERVICEContent = default;
        private static bool _ACCOUNT_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#ACTIVITY_SERVICE"/>
        /// </summary>
        public static Java.Lang.String ACTIVITY_SERVICE { get { if (!_ACTIVITY_SERVICEReady) { _ACTIVITY_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTIVITY_SERVICE"); _ACTIVITY_SERVICEReady = true; } return _ACTIVITY_SERVICEContent; } }
        private static Java.Lang.String _ACTIVITY_SERVICEContent = default;
        private static bool _ACTIVITY_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#ALARM_SERVICE"/>
        /// </summary>
        public static Java.Lang.String ALARM_SERVICE { get { if (!_ALARM_SERVICEReady) { _ALARM_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ALARM_SERVICE"); _ALARM_SERVICEReady = true; } return _ALARM_SERVICEContent; } }
        private static Java.Lang.String _ALARM_SERVICEContent = default;
        private static bool _ALARM_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#APP_OPS_SERVICE"/>
        /// </summary>
        public static Java.Lang.String APP_OPS_SERVICE { get { if (!_APP_OPS_SERVICEReady) { _APP_OPS_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "APP_OPS_SERVICE"); _APP_OPS_SERVICEReady = true; } return _APP_OPS_SERVICEContent; } }
        private static Java.Lang.String _APP_OPS_SERVICEContent = default;
        private static bool _APP_OPS_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#APP_SEARCH_SERVICE"/>
        /// </summary>
        public static Java.Lang.String APP_SEARCH_SERVICE { get { if (!_APP_SEARCH_SERVICEReady) { _APP_SEARCH_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "APP_SEARCH_SERVICE"); _APP_SEARCH_SERVICEReady = true; } return _APP_SEARCH_SERVICEContent; } }
        private static Java.Lang.String _APP_SEARCH_SERVICEContent = default;
        private static bool _APP_SEARCH_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#APPWIDGET_SERVICE"/>
        /// </summary>
        public static Java.Lang.String APPWIDGET_SERVICE { get { if (!_APPWIDGET_SERVICEReady) { _APPWIDGET_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "APPWIDGET_SERVICE"); _APPWIDGET_SERVICEReady = true; } return _APPWIDGET_SERVICEContent; } }
        private static Java.Lang.String _APPWIDGET_SERVICEContent = default;
        private static bool _APPWIDGET_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#AUDIO_SERVICE"/>
        /// </summary>
        public static Java.Lang.String AUDIO_SERVICE { get { if (!_AUDIO_SERVICEReady) { _AUDIO_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "AUDIO_SERVICE"); _AUDIO_SERVICEReady = true; } return _AUDIO_SERVICEContent; } }
        private static Java.Lang.String _AUDIO_SERVICEContent = default;
        private static bool _AUDIO_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#BATTERY_SERVICE"/>
        /// </summary>
        public static Java.Lang.String BATTERY_SERVICE { get { if (!_BATTERY_SERVICEReady) { _BATTERY_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "BATTERY_SERVICE"); _BATTERY_SERVICEReady = true; } return _BATTERY_SERVICEContent; } }
        private static Java.Lang.String _BATTERY_SERVICEContent = default;
        private static bool _BATTERY_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#BIOMETRIC_SERVICE"/>
        /// </summary>
        public static Java.Lang.String BIOMETRIC_SERVICE { get { if (!_BIOMETRIC_SERVICEReady) { _BIOMETRIC_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "BIOMETRIC_SERVICE"); _BIOMETRIC_SERVICEReady = true; } return _BIOMETRIC_SERVICEContent; } }
        private static Java.Lang.String _BIOMETRIC_SERVICEContent = default;
        private static bool _BIOMETRIC_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#BLOB_STORE_SERVICE"/>
        /// </summary>
        public static Java.Lang.String BLOB_STORE_SERVICE { get { if (!_BLOB_STORE_SERVICEReady) { _BLOB_STORE_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "BLOB_STORE_SERVICE"); _BLOB_STORE_SERVICEReady = true; } return _BLOB_STORE_SERVICEContent; } }
        private static Java.Lang.String _BLOB_STORE_SERVICEContent = default;
        private static bool _BLOB_STORE_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#BLUETOOTH_SERVICE"/>
        /// </summary>
        public static Java.Lang.String BLUETOOTH_SERVICE { get { if (!_BLUETOOTH_SERVICEReady) { _BLUETOOTH_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "BLUETOOTH_SERVICE"); _BLUETOOTH_SERVICEReady = true; } return _BLUETOOTH_SERVICEContent; } }
        private static Java.Lang.String _BLUETOOTH_SERVICEContent = default;
        private static bool _BLUETOOTH_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#BUGREPORT_SERVICE"/>
        /// </summary>
        public static Java.Lang.String BUGREPORT_SERVICE { get { if (!_BUGREPORT_SERVICEReady) { _BUGREPORT_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "BUGREPORT_SERVICE"); _BUGREPORT_SERVICEReady = true; } return _BUGREPORT_SERVICEContent; } }
        private static Java.Lang.String _BUGREPORT_SERVICEContent = default;
        private static bool _BUGREPORT_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#CAMERA_SERVICE"/>
        /// </summary>
        public static Java.Lang.String CAMERA_SERVICE { get { if (!_CAMERA_SERVICEReady) { _CAMERA_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CAMERA_SERVICE"); _CAMERA_SERVICEReady = true; } return _CAMERA_SERVICEContent; } }
        private static Java.Lang.String _CAMERA_SERVICEContent = default;
        private static bool _CAMERA_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#CAPTIONING_SERVICE"/>
        /// </summary>
        public static Java.Lang.String CAPTIONING_SERVICE { get { if (!_CAPTIONING_SERVICEReady) { _CAPTIONING_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CAPTIONING_SERVICE"); _CAPTIONING_SERVICEReady = true; } return _CAPTIONING_SERVICEContent; } }
        private static Java.Lang.String _CAPTIONING_SERVICEContent = default;
        private static bool _CAPTIONING_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#CARRIER_CONFIG_SERVICE"/>
        /// </summary>
        public static Java.Lang.String CARRIER_CONFIG_SERVICE { get { if (!_CARRIER_CONFIG_SERVICEReady) { _CARRIER_CONFIG_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CARRIER_CONFIG_SERVICE"); _CARRIER_CONFIG_SERVICEReady = true; } return _CARRIER_CONFIG_SERVICEContent; } }
        private static Java.Lang.String _CARRIER_CONFIG_SERVICEContent = default;
        private static bool _CARRIER_CONFIG_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#CLIPBOARD_SERVICE"/>
        /// </summary>
        public static Java.Lang.String CLIPBOARD_SERVICE { get { if (!_CLIPBOARD_SERVICEReady) { _CLIPBOARD_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CLIPBOARD_SERVICE"); _CLIPBOARD_SERVICEReady = true; } return _CLIPBOARD_SERVICEContent; } }
        private static Java.Lang.String _CLIPBOARD_SERVICEContent = default;
        private static bool _CLIPBOARD_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#COMPANION_DEVICE_SERVICE"/>
        /// </summary>
        public static Java.Lang.String COMPANION_DEVICE_SERVICE { get { if (!_COMPANION_DEVICE_SERVICEReady) { _COMPANION_DEVICE_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "COMPANION_DEVICE_SERVICE"); _COMPANION_DEVICE_SERVICEReady = true; } return _COMPANION_DEVICE_SERVICEContent; } }
        private static Java.Lang.String _COMPANION_DEVICE_SERVICEContent = default;
        private static bool _COMPANION_DEVICE_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#CONNECTIVITY_DIAGNOSTICS_SERVICE"/>
        /// </summary>
        public static Java.Lang.String CONNECTIVITY_DIAGNOSTICS_SERVICE { get { if (!_CONNECTIVITY_DIAGNOSTICS_SERVICEReady) { _CONNECTIVITY_DIAGNOSTICS_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CONNECTIVITY_DIAGNOSTICS_SERVICE"); _CONNECTIVITY_DIAGNOSTICS_SERVICEReady = true; } return _CONNECTIVITY_DIAGNOSTICS_SERVICEContent; } }
        private static Java.Lang.String _CONNECTIVITY_DIAGNOSTICS_SERVICEContent = default;
        private static bool _CONNECTIVITY_DIAGNOSTICS_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#CONNECTIVITY_SERVICE"/>
        /// </summary>
        public static Java.Lang.String CONNECTIVITY_SERVICE { get { if (!_CONNECTIVITY_SERVICEReady) { _CONNECTIVITY_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CONNECTIVITY_SERVICE"); _CONNECTIVITY_SERVICEReady = true; } return _CONNECTIVITY_SERVICEContent; } }
        private static Java.Lang.String _CONNECTIVITY_SERVICEContent = default;
        private static bool _CONNECTIVITY_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#CONSUMER_IR_SERVICE"/>
        /// </summary>
        public static Java.Lang.String CONSUMER_IR_SERVICE { get { if (!_CONSUMER_IR_SERVICEReady) { _CONSUMER_IR_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CONSUMER_IR_SERVICE"); _CONSUMER_IR_SERVICEReady = true; } return _CONSUMER_IR_SERVICEContent; } }
        private static Java.Lang.String _CONSUMER_IR_SERVICEContent = default;
        private static bool _CONSUMER_IR_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#CREDENTIAL_SERVICE"/>
        /// </summary>
        public static Java.Lang.String CREDENTIAL_SERVICE { get { if (!_CREDENTIAL_SERVICEReady) { _CREDENTIAL_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CREDENTIAL_SERVICE"); _CREDENTIAL_SERVICEReady = true; } return _CREDENTIAL_SERVICEContent; } }
        private static Java.Lang.String _CREDENTIAL_SERVICEContent = default;
        private static bool _CREDENTIAL_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#CROSS_PROFILE_APPS_SERVICE"/>
        /// </summary>
        public static Java.Lang.String CROSS_PROFILE_APPS_SERVICE { get { if (!_CROSS_PROFILE_APPS_SERVICEReady) { _CROSS_PROFILE_APPS_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CROSS_PROFILE_APPS_SERVICE"); _CROSS_PROFILE_APPS_SERVICEReady = true; } return _CROSS_PROFILE_APPS_SERVICEContent; } }
        private static Java.Lang.String _CROSS_PROFILE_APPS_SERVICEContent = default;
        private static bool _CROSS_PROFILE_APPS_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#DEVICE_LOCK_SERVICE"/>
        /// </summary>
        public static Java.Lang.String DEVICE_LOCK_SERVICE { get { if (!_DEVICE_LOCK_SERVICEReady) { _DEVICE_LOCK_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "DEVICE_LOCK_SERVICE"); _DEVICE_LOCK_SERVICEReady = true; } return _DEVICE_LOCK_SERVICEContent; } }
        private static Java.Lang.String _DEVICE_LOCK_SERVICEContent = default;
        private static bool _DEVICE_LOCK_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#DEVICE_POLICY_SERVICE"/>
        /// </summary>
        public static Java.Lang.String DEVICE_POLICY_SERVICE { get { if (!_DEVICE_POLICY_SERVICEReady) { _DEVICE_POLICY_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "DEVICE_POLICY_SERVICE"); _DEVICE_POLICY_SERVICEReady = true; } return _DEVICE_POLICY_SERVICEContent; } }
        private static Java.Lang.String _DEVICE_POLICY_SERVICEContent = default;
        private static bool _DEVICE_POLICY_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#DISPLAY_HASH_SERVICE"/>
        /// </summary>
        public static Java.Lang.String DISPLAY_HASH_SERVICE { get { if (!_DISPLAY_HASH_SERVICEReady) { _DISPLAY_HASH_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "DISPLAY_HASH_SERVICE"); _DISPLAY_HASH_SERVICEReady = true; } return _DISPLAY_HASH_SERVICEContent; } }
        private static Java.Lang.String _DISPLAY_HASH_SERVICEContent = default;
        private static bool _DISPLAY_HASH_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#DISPLAY_SERVICE"/>
        /// </summary>
        public static Java.Lang.String DISPLAY_SERVICE { get { if (!_DISPLAY_SERVICEReady) { _DISPLAY_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "DISPLAY_SERVICE"); _DISPLAY_SERVICEReady = true; } return _DISPLAY_SERVICEContent; } }
        private static Java.Lang.String _DISPLAY_SERVICEContent = default;
        private static bool _DISPLAY_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#DOMAIN_VERIFICATION_SERVICE"/>
        /// </summary>
        public static Java.Lang.String DOMAIN_VERIFICATION_SERVICE { get { if (!_DOMAIN_VERIFICATION_SERVICEReady) { _DOMAIN_VERIFICATION_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "DOMAIN_VERIFICATION_SERVICE"); _DOMAIN_VERIFICATION_SERVICEReady = true; } return _DOMAIN_VERIFICATION_SERVICEContent; } }
        private static Java.Lang.String _DOMAIN_VERIFICATION_SERVICEContent = default;
        private static bool _DOMAIN_VERIFICATION_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#DOWNLOAD_SERVICE"/>
        /// </summary>
        public static Java.Lang.String DOWNLOAD_SERVICE { get { if (!_DOWNLOAD_SERVICEReady) { _DOWNLOAD_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "DOWNLOAD_SERVICE"); _DOWNLOAD_SERVICEReady = true; } return _DOWNLOAD_SERVICEContent; } }
        private static Java.Lang.String _DOWNLOAD_SERVICEContent = default;
        private static bool _DOWNLOAD_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#DROPBOX_SERVICE"/>
        /// </summary>
        public static Java.Lang.String DROPBOX_SERVICE { get { if (!_DROPBOX_SERVICEReady) { _DROPBOX_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "DROPBOX_SERVICE"); _DROPBOX_SERVICEReady = true; } return _DROPBOX_SERVICEContent; } }
        private static Java.Lang.String _DROPBOX_SERVICEContent = default;
        private static bool _DROPBOX_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#EUICC_SERVICE"/>
        /// </summary>
        public static Java.Lang.String EUICC_SERVICE { get { if (!_EUICC_SERVICEReady) { _EUICC_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EUICC_SERVICE"); _EUICC_SERVICEReady = true; } return _EUICC_SERVICEContent; } }
        private static Java.Lang.String _EUICC_SERVICEContent = default;
        private static bool _EUICC_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#FILE_INTEGRITY_SERVICE"/>
        /// </summary>
        public static Java.Lang.String FILE_INTEGRITY_SERVICE { get { if (!_FILE_INTEGRITY_SERVICEReady) { _FILE_INTEGRITY_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "FILE_INTEGRITY_SERVICE"); _FILE_INTEGRITY_SERVICEReady = true; } return _FILE_INTEGRITY_SERVICEContent; } }
        private static Java.Lang.String _FILE_INTEGRITY_SERVICEContent = default;
        private static bool _FILE_INTEGRITY_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#FINGERPRINT_SERVICE"/>
        /// </summary>
        public static Java.Lang.String FINGERPRINT_SERVICE { get { if (!_FINGERPRINT_SERVICEReady) { _FINGERPRINT_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "FINGERPRINT_SERVICE"); _FINGERPRINT_SERVICEReady = true; } return _FINGERPRINT_SERVICEContent; } }
        private static Java.Lang.String _FINGERPRINT_SERVICEContent = default;
        private static bool _FINGERPRINT_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#GAME_SERVICE"/>
        /// </summary>
        public static Java.Lang.String GAME_SERVICE { get { if (!_GAME_SERVICEReady) { _GAME_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "GAME_SERVICE"); _GAME_SERVICEReady = true; } return _GAME_SERVICEContent; } }
        private static Java.Lang.String _GAME_SERVICEContent = default;
        private static bool _GAME_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#GRAMMATICAL_INFLECTION_SERVICE"/>
        /// </summary>
        public static Java.Lang.String GRAMMATICAL_INFLECTION_SERVICE { get { if (!_GRAMMATICAL_INFLECTION_SERVICEReady) { _GRAMMATICAL_INFLECTION_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "GRAMMATICAL_INFLECTION_SERVICE"); _GRAMMATICAL_INFLECTION_SERVICEReady = true; } return _GRAMMATICAL_INFLECTION_SERVICEContent; } }
        private static Java.Lang.String _GRAMMATICAL_INFLECTION_SERVICEContent = default;
        private static bool _GRAMMATICAL_INFLECTION_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#HARDWARE_PROPERTIES_SERVICE"/>
        /// </summary>
        public static Java.Lang.String HARDWARE_PROPERTIES_SERVICE { get { if (!_HARDWARE_PROPERTIES_SERVICEReady) { _HARDWARE_PROPERTIES_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "HARDWARE_PROPERTIES_SERVICE"); _HARDWARE_PROPERTIES_SERVICEReady = true; } return _HARDWARE_PROPERTIES_SERVICEContent; } }
        private static Java.Lang.String _HARDWARE_PROPERTIES_SERVICEContent = default;
        private static bool _HARDWARE_PROPERTIES_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#HEALTHCONNECT_SERVICE"/>
        /// </summary>
        public static Java.Lang.String HEALTHCONNECT_SERVICE { get { if (!_HEALTHCONNECT_SERVICEReady) { _HEALTHCONNECT_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "HEALTHCONNECT_SERVICE"); _HEALTHCONNECT_SERVICEReady = true; } return _HEALTHCONNECT_SERVICEContent; } }
        private static Java.Lang.String _HEALTHCONNECT_SERVICEContent = default;
        private static bool _HEALTHCONNECT_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#INPUT_METHOD_SERVICE"/>
        /// </summary>
        public static Java.Lang.String INPUT_METHOD_SERVICE { get { if (!_INPUT_METHOD_SERVICEReady) { _INPUT_METHOD_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "INPUT_METHOD_SERVICE"); _INPUT_METHOD_SERVICEReady = true; } return _INPUT_METHOD_SERVICEContent; } }
        private static Java.Lang.String _INPUT_METHOD_SERVICEContent = default;
        private static bool _INPUT_METHOD_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#INPUT_SERVICE"/>
        /// </summary>
        public static Java.Lang.String INPUT_SERVICE { get { if (!_INPUT_SERVICEReady) { _INPUT_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "INPUT_SERVICE"); _INPUT_SERVICEReady = true; } return _INPUT_SERVICEContent; } }
        private static Java.Lang.String _INPUT_SERVICEContent = default;
        private static bool _INPUT_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#IPSEC_SERVICE"/>
        /// </summary>
        public static Java.Lang.String IPSEC_SERVICE { get { if (!_IPSEC_SERVICEReady) { _IPSEC_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "IPSEC_SERVICE"); _IPSEC_SERVICEReady = true; } return _IPSEC_SERVICEContent; } }
        private static Java.Lang.String _IPSEC_SERVICEContent = default;
        private static bool _IPSEC_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#JOB_SCHEDULER_SERVICE"/>
        /// </summary>
        public static Java.Lang.String JOB_SCHEDULER_SERVICE { get { if (!_JOB_SCHEDULER_SERVICEReady) { _JOB_SCHEDULER_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "JOB_SCHEDULER_SERVICE"); _JOB_SCHEDULER_SERVICEReady = true; } return _JOB_SCHEDULER_SERVICEContent; } }
        private static Java.Lang.String _JOB_SCHEDULER_SERVICEContent = default;
        private static bool _JOB_SCHEDULER_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#KEYGUARD_SERVICE"/>
        /// </summary>
        public static Java.Lang.String KEYGUARD_SERVICE { get { if (!_KEYGUARD_SERVICEReady) { _KEYGUARD_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEYGUARD_SERVICE"); _KEYGUARD_SERVICEReady = true; } return _KEYGUARD_SERVICEContent; } }
        private static Java.Lang.String _KEYGUARD_SERVICEContent = default;
        private static bool _KEYGUARD_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#LAUNCHER_APPS_SERVICE"/>
        /// </summary>
        public static Java.Lang.String LAUNCHER_APPS_SERVICE { get { if (!_LAUNCHER_APPS_SERVICEReady) { _LAUNCHER_APPS_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "LAUNCHER_APPS_SERVICE"); _LAUNCHER_APPS_SERVICEReady = true; } return _LAUNCHER_APPS_SERVICEContent; } }
        private static Java.Lang.String _LAUNCHER_APPS_SERVICEContent = default;
        private static bool _LAUNCHER_APPS_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#LAYOUT_INFLATER_SERVICE"/>
        /// </summary>
        public static Java.Lang.String LAYOUT_INFLATER_SERVICE { get { if (!_LAYOUT_INFLATER_SERVICEReady) { _LAYOUT_INFLATER_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "LAYOUT_INFLATER_SERVICE"); _LAYOUT_INFLATER_SERVICEReady = true; } return _LAYOUT_INFLATER_SERVICEContent; } }
        private static Java.Lang.String _LAYOUT_INFLATER_SERVICEContent = default;
        private static bool _LAYOUT_INFLATER_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#LOCALE_SERVICE"/>
        /// </summary>
        public static Java.Lang.String LOCALE_SERVICE { get { if (!_LOCALE_SERVICEReady) { _LOCALE_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "LOCALE_SERVICE"); _LOCALE_SERVICEReady = true; } return _LOCALE_SERVICEContent; } }
        private static Java.Lang.String _LOCALE_SERVICEContent = default;
        private static bool _LOCALE_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#LOCATION_SERVICE"/>
        /// </summary>
        public static Java.Lang.String LOCATION_SERVICE { get { if (!_LOCATION_SERVICEReady) { _LOCATION_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "LOCATION_SERVICE"); _LOCATION_SERVICEReady = true; } return _LOCATION_SERVICEContent; } }
        private static Java.Lang.String _LOCATION_SERVICEContent = default;
        private static bool _LOCATION_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#MEDIA_COMMUNICATION_SERVICE"/>
        /// </summary>
        public static Java.Lang.String MEDIA_COMMUNICATION_SERVICE { get { if (!_MEDIA_COMMUNICATION_SERVICEReady) { _MEDIA_COMMUNICATION_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "MEDIA_COMMUNICATION_SERVICE"); _MEDIA_COMMUNICATION_SERVICEReady = true; } return _MEDIA_COMMUNICATION_SERVICEContent; } }
        private static Java.Lang.String _MEDIA_COMMUNICATION_SERVICEContent = default;
        private static bool _MEDIA_COMMUNICATION_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#MEDIA_METRICS_SERVICE"/>
        /// </summary>
        public static Java.Lang.String MEDIA_METRICS_SERVICE { get { if (!_MEDIA_METRICS_SERVICEReady) { _MEDIA_METRICS_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "MEDIA_METRICS_SERVICE"); _MEDIA_METRICS_SERVICEReady = true; } return _MEDIA_METRICS_SERVICEContent; } }
        private static Java.Lang.String _MEDIA_METRICS_SERVICEContent = default;
        private static bool _MEDIA_METRICS_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#MEDIA_PROJECTION_SERVICE"/>
        /// </summary>
        public static Java.Lang.String MEDIA_PROJECTION_SERVICE { get { if (!_MEDIA_PROJECTION_SERVICEReady) { _MEDIA_PROJECTION_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "MEDIA_PROJECTION_SERVICE"); _MEDIA_PROJECTION_SERVICEReady = true; } return _MEDIA_PROJECTION_SERVICEContent; } }
        private static Java.Lang.String _MEDIA_PROJECTION_SERVICEContent = default;
        private static bool _MEDIA_PROJECTION_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#MEDIA_ROUTER_SERVICE"/>
        /// </summary>
        public static Java.Lang.String MEDIA_ROUTER_SERVICE { get { if (!_MEDIA_ROUTER_SERVICEReady) { _MEDIA_ROUTER_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "MEDIA_ROUTER_SERVICE"); _MEDIA_ROUTER_SERVICEReady = true; } return _MEDIA_ROUTER_SERVICEContent; } }
        private static Java.Lang.String _MEDIA_ROUTER_SERVICEContent = default;
        private static bool _MEDIA_ROUTER_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#MEDIA_SESSION_SERVICE"/>
        /// </summary>
        public static Java.Lang.String MEDIA_SESSION_SERVICE { get { if (!_MEDIA_SESSION_SERVICEReady) { _MEDIA_SESSION_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "MEDIA_SESSION_SERVICE"); _MEDIA_SESSION_SERVICEReady = true; } return _MEDIA_SESSION_SERVICEContent; } }
        private static Java.Lang.String _MEDIA_SESSION_SERVICEContent = default;
        private static bool _MEDIA_SESSION_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#MIDI_SERVICE"/>
        /// </summary>
        public static Java.Lang.String MIDI_SERVICE { get { if (!_MIDI_SERVICEReady) { _MIDI_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "MIDI_SERVICE"); _MIDI_SERVICEReady = true; } return _MIDI_SERVICEContent; } }
        private static Java.Lang.String _MIDI_SERVICEContent = default;
        private static bool _MIDI_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#NETWORK_STATS_SERVICE"/>
        /// </summary>
        public static Java.Lang.String NETWORK_STATS_SERVICE { get { if (!_NETWORK_STATS_SERVICEReady) { _NETWORK_STATS_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "NETWORK_STATS_SERVICE"); _NETWORK_STATS_SERVICEReady = true; } return _NETWORK_STATS_SERVICEContent; } }
        private static Java.Lang.String _NETWORK_STATS_SERVICEContent = default;
        private static bool _NETWORK_STATS_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#NFC_SERVICE"/>
        /// </summary>
        public static Java.Lang.String NFC_SERVICE { get { if (!_NFC_SERVICEReady) { _NFC_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "NFC_SERVICE"); _NFC_SERVICEReady = true; } return _NFC_SERVICEContent; } }
        private static Java.Lang.String _NFC_SERVICEContent = default;
        private static bool _NFC_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#NOTIFICATION_SERVICE"/>
        /// </summary>
        public static Java.Lang.String NOTIFICATION_SERVICE { get { if (!_NOTIFICATION_SERVICEReady) { _NOTIFICATION_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "NOTIFICATION_SERVICE"); _NOTIFICATION_SERVICEReady = true; } return _NOTIFICATION_SERVICEContent; } }
        private static Java.Lang.String _NOTIFICATION_SERVICEContent = default;
        private static bool _NOTIFICATION_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#NSD_SERVICE"/>
        /// </summary>
        public static Java.Lang.String NSD_SERVICE { get { if (!_NSD_SERVICEReady) { _NSD_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "NSD_SERVICE"); _NSD_SERVICEReady = true; } return _NSD_SERVICEContent; } }
        private static Java.Lang.String _NSD_SERVICEContent = default;
        private static bool _NSD_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#OVERLAY_SERVICE"/>
        /// </summary>
        public static Java.Lang.String OVERLAY_SERVICE { get { if (!_OVERLAY_SERVICEReady) { _OVERLAY_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "OVERLAY_SERVICE"); _OVERLAY_SERVICEReady = true; } return _OVERLAY_SERVICEContent; } }
        private static Java.Lang.String _OVERLAY_SERVICEContent = default;
        private static bool _OVERLAY_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#PEOPLE_SERVICE"/>
        /// </summary>
        public static Java.Lang.String PEOPLE_SERVICE { get { if (!_PEOPLE_SERVICEReady) { _PEOPLE_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "PEOPLE_SERVICE"); _PEOPLE_SERVICEReady = true; } return _PEOPLE_SERVICEContent; } }
        private static Java.Lang.String _PEOPLE_SERVICEContent = default;
        private static bool _PEOPLE_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#PERFORMANCE_HINT_SERVICE"/>
        /// </summary>
        public static Java.Lang.String PERFORMANCE_HINT_SERVICE { get { if (!_PERFORMANCE_HINT_SERVICEReady) { _PERFORMANCE_HINT_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "PERFORMANCE_HINT_SERVICE"); _PERFORMANCE_HINT_SERVICEReady = true; } return _PERFORMANCE_HINT_SERVICEContent; } }
        private static Java.Lang.String _PERFORMANCE_HINT_SERVICEContent = default;
        private static bool _PERFORMANCE_HINT_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#POWER_SERVICE"/>
        /// </summary>
        public static Java.Lang.String POWER_SERVICE { get { if (!_POWER_SERVICEReady) { _POWER_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "POWER_SERVICE"); _POWER_SERVICEReady = true; } return _POWER_SERVICEContent; } }
        private static Java.Lang.String _POWER_SERVICEContent = default;
        private static bool _POWER_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#PRINT_SERVICE"/>
        /// </summary>
        public static Java.Lang.String PRINT_SERVICE { get { if (!_PRINT_SERVICEReady) { _PRINT_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "PRINT_SERVICE"); _PRINT_SERVICEReady = true; } return _PRINT_SERVICEContent; } }
        private static Java.Lang.String _PRINT_SERVICEContent = default;
        private static bool _PRINT_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#RESTRICTIONS_SERVICE"/>
        /// </summary>
        public static Java.Lang.String RESTRICTIONS_SERVICE { get { if (!_RESTRICTIONS_SERVICEReady) { _RESTRICTIONS_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "RESTRICTIONS_SERVICE"); _RESTRICTIONS_SERVICEReady = true; } return _RESTRICTIONS_SERVICEContent; } }
        private static Java.Lang.String _RESTRICTIONS_SERVICEContent = default;
        private static bool _RESTRICTIONS_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#ROLE_SERVICE"/>
        /// </summary>
        public static Java.Lang.String ROLE_SERVICE { get { if (!_ROLE_SERVICEReady) { _ROLE_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ROLE_SERVICE"); _ROLE_SERVICEReady = true; } return _ROLE_SERVICEContent; } }
        private static Java.Lang.String _ROLE_SERVICEContent = default;
        private static bool _ROLE_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#SEARCH_SERVICE"/>
        /// </summary>
        public static Java.Lang.String SEARCH_SERVICE { get { if (!_SEARCH_SERVICEReady) { _SEARCH_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SEARCH_SERVICE"); _SEARCH_SERVICEReady = true; } return _SEARCH_SERVICEContent; } }
        private static Java.Lang.String _SEARCH_SERVICEContent = default;
        private static bool _SEARCH_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#SENSOR_SERVICE"/>
        /// </summary>
        public static Java.Lang.String SENSOR_SERVICE { get { if (!_SENSOR_SERVICEReady) { _SENSOR_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SENSOR_SERVICE"); _SENSOR_SERVICEReady = true; } return _SENSOR_SERVICEContent; } }
        private static Java.Lang.String _SENSOR_SERVICEContent = default;
        private static bool _SENSOR_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#SHORTCUT_SERVICE"/>
        /// </summary>
        public static Java.Lang.String SHORTCUT_SERVICE { get { if (!_SHORTCUT_SERVICEReady) { _SHORTCUT_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SHORTCUT_SERVICE"); _SHORTCUT_SERVICEReady = true; } return _SHORTCUT_SERVICEContent; } }
        private static Java.Lang.String _SHORTCUT_SERVICEContent = default;
        private static bool _SHORTCUT_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#STATUS_BAR_SERVICE"/>
        /// </summary>
        public static Java.Lang.String STATUS_BAR_SERVICE { get { if (!_STATUS_BAR_SERVICEReady) { _STATUS_BAR_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "STATUS_BAR_SERVICE"); _STATUS_BAR_SERVICEReady = true; } return _STATUS_BAR_SERVICEContent; } }
        private static Java.Lang.String _STATUS_BAR_SERVICEContent = default;
        private static bool _STATUS_BAR_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#STORAGE_SERVICE"/>
        /// </summary>
        public static Java.Lang.String STORAGE_SERVICE { get { if (!_STORAGE_SERVICEReady) { _STORAGE_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "STORAGE_SERVICE"); _STORAGE_SERVICEReady = true; } return _STORAGE_SERVICEContent; } }
        private static Java.Lang.String _STORAGE_SERVICEContent = default;
        private static bool _STORAGE_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#STORAGE_STATS_SERVICE"/>
        /// </summary>
        public static Java.Lang.String STORAGE_STATS_SERVICE { get { if (!_STORAGE_STATS_SERVICEReady) { _STORAGE_STATS_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "STORAGE_STATS_SERVICE"); _STORAGE_STATS_SERVICEReady = true; } return _STORAGE_STATS_SERVICEContent; } }
        private static Java.Lang.String _STORAGE_STATS_SERVICEContent = default;
        private static bool _STORAGE_STATS_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#SYSTEM_HEALTH_SERVICE"/>
        /// </summary>
        public static Java.Lang.String SYSTEM_HEALTH_SERVICE { get { if (!_SYSTEM_HEALTH_SERVICEReady) { _SYSTEM_HEALTH_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SYSTEM_HEALTH_SERVICE"); _SYSTEM_HEALTH_SERVICEReady = true; } return _SYSTEM_HEALTH_SERVICEContent; } }
        private static Java.Lang.String _SYSTEM_HEALTH_SERVICEContent = default;
        private static bool _SYSTEM_HEALTH_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#TELECOM_SERVICE"/>
        /// </summary>
        public static Java.Lang.String TELECOM_SERVICE { get { if (!_TELECOM_SERVICEReady) { _TELECOM_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "TELECOM_SERVICE"); _TELECOM_SERVICEReady = true; } return _TELECOM_SERVICEContent; } }
        private static Java.Lang.String _TELECOM_SERVICEContent = default;
        private static bool _TELECOM_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#TELEPHONY_IMS_SERVICE"/>
        /// </summary>
        public static Java.Lang.String TELEPHONY_IMS_SERVICE { get { if (!_TELEPHONY_IMS_SERVICEReady) { _TELEPHONY_IMS_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "TELEPHONY_IMS_SERVICE"); _TELEPHONY_IMS_SERVICEReady = true; } return _TELEPHONY_IMS_SERVICEContent; } }
        private static Java.Lang.String _TELEPHONY_IMS_SERVICEContent = default;
        private static bool _TELEPHONY_IMS_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#TELEPHONY_SERVICE"/>
        /// </summary>
        public static Java.Lang.String TELEPHONY_SERVICE { get { if (!_TELEPHONY_SERVICEReady) { _TELEPHONY_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "TELEPHONY_SERVICE"); _TELEPHONY_SERVICEReady = true; } return _TELEPHONY_SERVICEContent; } }
        private static Java.Lang.String _TELEPHONY_SERVICEContent = default;
        private static bool _TELEPHONY_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#TELEPHONY_SUBSCRIPTION_SERVICE"/>
        /// </summary>
        public static Java.Lang.String TELEPHONY_SUBSCRIPTION_SERVICE { get { if (!_TELEPHONY_SUBSCRIPTION_SERVICEReady) { _TELEPHONY_SUBSCRIPTION_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "TELEPHONY_SUBSCRIPTION_SERVICE"); _TELEPHONY_SUBSCRIPTION_SERVICEReady = true; } return _TELEPHONY_SUBSCRIPTION_SERVICEContent; } }
        private static Java.Lang.String _TELEPHONY_SUBSCRIPTION_SERVICEContent = default;
        private static bool _TELEPHONY_SUBSCRIPTION_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#TEXT_CLASSIFICATION_SERVICE"/>
        /// </summary>
        public static Java.Lang.String TEXT_CLASSIFICATION_SERVICE { get { if (!_TEXT_CLASSIFICATION_SERVICEReady) { _TEXT_CLASSIFICATION_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "TEXT_CLASSIFICATION_SERVICE"); _TEXT_CLASSIFICATION_SERVICEReady = true; } return _TEXT_CLASSIFICATION_SERVICEContent; } }
        private static Java.Lang.String _TEXT_CLASSIFICATION_SERVICEContent = default;
        private static bool _TEXT_CLASSIFICATION_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#TEXT_SERVICES_MANAGER_SERVICE"/>
        /// </summary>
        public static Java.Lang.String TEXT_SERVICES_MANAGER_SERVICE { get { if (!_TEXT_SERVICES_MANAGER_SERVICEReady) { _TEXT_SERVICES_MANAGER_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "TEXT_SERVICES_MANAGER_SERVICE"); _TEXT_SERVICES_MANAGER_SERVICEReady = true; } return _TEXT_SERVICES_MANAGER_SERVICEContent; } }
        private static Java.Lang.String _TEXT_SERVICES_MANAGER_SERVICEContent = default;
        private static bool _TEXT_SERVICES_MANAGER_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#TV_INPUT_SERVICE"/>
        /// </summary>
        public static Java.Lang.String TV_INPUT_SERVICE { get { if (!_TV_INPUT_SERVICEReady) { _TV_INPUT_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "TV_INPUT_SERVICE"); _TV_INPUT_SERVICEReady = true; } return _TV_INPUT_SERVICEContent; } }
        private static Java.Lang.String _TV_INPUT_SERVICEContent = default;
        private static bool _TV_INPUT_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#TV_INTERACTIVE_APP_SERVICE"/>
        /// </summary>
        public static Java.Lang.String TV_INTERACTIVE_APP_SERVICE { get { if (!_TV_INTERACTIVE_APP_SERVICEReady) { _TV_INTERACTIVE_APP_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "TV_INTERACTIVE_APP_SERVICE"); _TV_INTERACTIVE_APP_SERVICEReady = true; } return _TV_INTERACTIVE_APP_SERVICEContent; } }
        private static Java.Lang.String _TV_INTERACTIVE_APP_SERVICEContent = default;
        private static bool _TV_INTERACTIVE_APP_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#UI_MODE_SERVICE"/>
        /// </summary>
        public static Java.Lang.String UI_MODE_SERVICE { get { if (!_UI_MODE_SERVICEReady) { _UI_MODE_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "UI_MODE_SERVICE"); _UI_MODE_SERVICEReady = true; } return _UI_MODE_SERVICEContent; } }
        private static Java.Lang.String _UI_MODE_SERVICEContent = default;
        private static bool _UI_MODE_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#USAGE_STATS_SERVICE"/>
        /// </summary>
        public static Java.Lang.String USAGE_STATS_SERVICE { get { if (!_USAGE_STATS_SERVICEReady) { _USAGE_STATS_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "USAGE_STATS_SERVICE"); _USAGE_STATS_SERVICEReady = true; } return _USAGE_STATS_SERVICEContent; } }
        private static Java.Lang.String _USAGE_STATS_SERVICEContent = default;
        private static bool _USAGE_STATS_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#USB_SERVICE"/>
        /// </summary>
        public static Java.Lang.String USB_SERVICE { get { if (!_USB_SERVICEReady) { _USB_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "USB_SERVICE"); _USB_SERVICEReady = true; } return _USB_SERVICEContent; } }
        private static Java.Lang.String _USB_SERVICEContent = default;
        private static bool _USB_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#USER_SERVICE"/>
        /// </summary>
        public static Java.Lang.String USER_SERVICE { get { if (!_USER_SERVICEReady) { _USER_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "USER_SERVICE"); _USER_SERVICEReady = true; } return _USER_SERVICEContent; } }
        private static Java.Lang.String _USER_SERVICEContent = default;
        private static bool _USER_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#VIBRATOR_MANAGER_SERVICE"/>
        /// </summary>
        public static Java.Lang.String VIBRATOR_MANAGER_SERVICE { get { if (!_VIBRATOR_MANAGER_SERVICEReady) { _VIBRATOR_MANAGER_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "VIBRATOR_MANAGER_SERVICE"); _VIBRATOR_MANAGER_SERVICEReady = true; } return _VIBRATOR_MANAGER_SERVICEContent; } }
        private static Java.Lang.String _VIBRATOR_MANAGER_SERVICEContent = default;
        private static bool _VIBRATOR_MANAGER_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#VIBRATOR_SERVICE"/>
        /// </summary>
        [System.Obsolete()]
        public static Java.Lang.String VIBRATOR_SERVICE { get { if (!_VIBRATOR_SERVICEReady) { _VIBRATOR_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "VIBRATOR_SERVICE"); _VIBRATOR_SERVICEReady = true; } return _VIBRATOR_SERVICEContent; } }
        private static Java.Lang.String _VIBRATOR_SERVICEContent = default;
        private static bool _VIBRATOR_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#VIRTUAL_DEVICE_SERVICE"/>
        /// </summary>
        public static Java.Lang.String VIRTUAL_DEVICE_SERVICE { get { if (!_VIRTUAL_DEVICE_SERVICEReady) { _VIRTUAL_DEVICE_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "VIRTUAL_DEVICE_SERVICE"); _VIRTUAL_DEVICE_SERVICEReady = true; } return _VIRTUAL_DEVICE_SERVICEContent; } }
        private static Java.Lang.String _VIRTUAL_DEVICE_SERVICEContent = default;
        private static bool _VIRTUAL_DEVICE_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#VPN_MANAGEMENT_SERVICE"/>
        /// </summary>
        public static Java.Lang.String VPN_MANAGEMENT_SERVICE { get { if (!_VPN_MANAGEMENT_SERVICEReady) { _VPN_MANAGEMENT_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "VPN_MANAGEMENT_SERVICE"); _VPN_MANAGEMENT_SERVICEReady = true; } return _VPN_MANAGEMENT_SERVICEContent; } }
        private static Java.Lang.String _VPN_MANAGEMENT_SERVICEContent = default;
        private static bool _VPN_MANAGEMENT_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#WALLPAPER_SERVICE"/>
        /// </summary>
        public static Java.Lang.String WALLPAPER_SERVICE { get { if (!_WALLPAPER_SERVICEReady) { _WALLPAPER_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "WALLPAPER_SERVICE"); _WALLPAPER_SERVICEReady = true; } return _WALLPAPER_SERVICEContent; } }
        private static Java.Lang.String _WALLPAPER_SERVICEContent = default;
        private static bool _WALLPAPER_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#WIFI_AWARE_SERVICE"/>
        /// </summary>
        public static Java.Lang.String WIFI_AWARE_SERVICE { get { if (!_WIFI_AWARE_SERVICEReady) { _WIFI_AWARE_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "WIFI_AWARE_SERVICE"); _WIFI_AWARE_SERVICEReady = true; } return _WIFI_AWARE_SERVICEContent; } }
        private static Java.Lang.String _WIFI_AWARE_SERVICEContent = default;
        private static bool _WIFI_AWARE_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#WIFI_P2P_SERVICE"/>
        /// </summary>
        public static Java.Lang.String WIFI_P2P_SERVICE { get { if (!_WIFI_P2P_SERVICEReady) { _WIFI_P2P_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "WIFI_P2P_SERVICE"); _WIFI_P2P_SERVICEReady = true; } return _WIFI_P2P_SERVICEContent; } }
        private static Java.Lang.String _WIFI_P2P_SERVICEContent = default;
        private static bool _WIFI_P2P_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#WIFI_RTT_RANGING_SERVICE"/>
        /// </summary>
        public static Java.Lang.String WIFI_RTT_RANGING_SERVICE { get { if (!_WIFI_RTT_RANGING_SERVICEReady) { _WIFI_RTT_RANGING_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "WIFI_RTT_RANGING_SERVICE"); _WIFI_RTT_RANGING_SERVICEReady = true; } return _WIFI_RTT_RANGING_SERVICEContent; } }
        private static Java.Lang.String _WIFI_RTT_RANGING_SERVICEContent = default;
        private static bool _WIFI_RTT_RANGING_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#WIFI_SERVICE"/>
        /// </summary>
        public static Java.Lang.String WIFI_SERVICE { get { if (!_WIFI_SERVICEReady) { _WIFI_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "WIFI_SERVICE"); _WIFI_SERVICEReady = true; } return _WIFI_SERVICEContent; } }
        private static Java.Lang.String _WIFI_SERVICEContent = default;
        private static bool _WIFI_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#WINDOW_SERVICE"/>
        /// </summary>
        public static Java.Lang.String WINDOW_SERVICE { get { if (!_WINDOW_SERVICEReady) { _WINDOW_SERVICEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "WINDOW_SERVICE"); _WINDOW_SERVICEReady = true; } return _WINDOW_SERVICEContent; } }
        private static Java.Lang.String _WINDOW_SERVICEContent = default;
        private static bool _WINDOW_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#BIND_EXTERNAL_SERVICE_LONG"/>
        /// </summary>
        public static long BIND_EXTERNAL_SERVICE_LONG { get { if (!_BIND_EXTERNAL_SERVICE_LONGReady) { _BIND_EXTERNAL_SERVICE_LONGContent = SGetField<long>(LocalBridgeClazz, "BIND_EXTERNAL_SERVICE_LONG"); _BIND_EXTERNAL_SERVICE_LONGReady = true; } return _BIND_EXTERNAL_SERVICE_LONGContent; } }
        private static long _BIND_EXTERNAL_SERVICE_LONGContent = default;
        private static bool _BIND_EXTERNAL_SERVICE_LONGReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#getApplicationContext()"/> 
        /// </summary>
        public Android.Content.Context ApplicationContext
        {
            get { return IExecuteWithSignature<Android.Content.Context>("getApplicationContext", "()Landroid/content/Context;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#getApplicationInfo()"/> 
        /// </summary>
        public Android.Content.Pm.ApplicationInfo ApplicationInfo
        {
            get { return IExecuteWithSignature<Android.Content.Pm.ApplicationInfo>("getApplicationInfo", "()Landroid/content/pm/ApplicationInfo;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#getAssets()"/> 
        /// </summary>
        public Android.Content.Res.AssetManager Assets
        {
            get { return IExecuteWithSignature<Android.Content.Res.AssetManager>("getAssets", "()Landroid/content/res/AssetManager;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#getAttributionSource()"/> 
        /// </summary>
        public Android.Content.AttributionSource AttributionSource
        {
            get { return IExecuteWithSignature<Android.Content.AttributionSource>("getAttributionSource", "()Landroid/content/AttributionSource;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#getAttributionTag()"/> 
        /// </summary>
        public Java.Lang.String AttributionTag
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getAttributionTag", "()Ljava/lang/String;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#getCacheDir()"/> 
        /// </summary>
        public Java.Io.File CacheDir
        {
            get { return IExecuteWithSignature<Java.Io.File>("getCacheDir", "()Ljava/io/File;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#getClassLoader()"/> 
        /// </summary>
        public Java.Lang.ClassLoader ClassLoader
        {
            get { return IExecuteWithSignature<Java.Lang.ClassLoader>("getClassLoader", "()Ljava/lang/ClassLoader;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#getCodeCacheDir()"/> 
        /// </summary>
        public Java.Io.File CodeCacheDir
        {
            get { return IExecuteWithSignature<Java.Io.File>("getCodeCacheDir", "()Ljava/io/File;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#getContentResolver()"/> 
        /// </summary>
        public Android.Content.ContentResolver ContentResolver
        {
            get { return IExecuteWithSignature<Android.Content.ContentResolver>("getContentResolver", "()Landroid/content/ContentResolver;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#getDataDir()"/> 
        /// </summary>
        public Java.Io.File DataDir
        {
            get { return IExecuteWithSignature<Java.Io.File>("getDataDir", "()Ljava/io/File;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#getDeviceId()"/> 
        /// </summary>
        public int DeviceId
        {
            get { return IExecuteWithSignature<int>("getDeviceId", "()I"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#getDisplay()"/> 
        /// </summary>
        public Android.View.Display Display
        {
            get { return IExecuteWithSignature<Android.View.Display>("getDisplay", "()Landroid/view/Display;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#getExternalCacheDir()"/> 
        /// </summary>
        public Java.Io.File ExternalCacheDir
        {
            get { return IExecuteWithSignature<Java.Io.File>("getExternalCacheDir", "()Ljava/io/File;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#getExternalCacheDirs()"/> 
        /// </summary>
        public Java.Io.File[] ExternalCacheDirs
        {
            get { return IExecuteWithSignatureArray<Java.Io.File>("getExternalCacheDirs", "()[Ljava/io/File;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#getExternalMediaDirs()"/> 
        /// </summary>
        [System.Obsolete()]
        public Java.Io.File[] ExternalMediaDirs
        {
            get { return IExecuteWithSignatureArray<Java.Io.File>("getExternalMediaDirs", "()[Ljava/io/File;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#getFilesDir()"/> 
        /// </summary>
        public Java.Io.File FilesDir
        {
            get { return IExecuteWithSignature<Java.Io.File>("getFilesDir", "()Ljava/io/File;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#getMainExecutor()"/> 
        /// </summary>
        public Java.Util.Concurrent.Executor MainExecutor
        {
            get { return IExecuteWithSignature<Java.Util.Concurrent.Executor>("getMainExecutor", "()Ljava/util/concurrent/Executor;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#getMainLooper()"/> 
        /// </summary>
        public Android.Os.Looper MainLooper
        {
            get { return IExecuteWithSignature<Android.Os.Looper>("getMainLooper", "()Landroid/os/Looper;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#getNoBackupFilesDir()"/> 
        /// </summary>
        public Java.Io.File NoBackupFilesDir
        {
            get { return IExecuteWithSignature<Java.Io.File>("getNoBackupFilesDir", "()Ljava/io/File;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#getObbDir()"/> 
        /// </summary>
        public Java.Io.File ObbDir
        {
            get { return IExecuteWithSignature<Java.Io.File>("getObbDir", "()Ljava/io/File;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#getObbDirs()"/> 
        /// </summary>
        public Java.Io.File[] ObbDirs
        {
            get { return IExecuteWithSignatureArray<Java.Io.File>("getObbDirs", "()[Ljava/io/File;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#getOpPackageName()"/> 
        /// </summary>
        public Java.Lang.String OpPackageName
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getOpPackageName", "()Ljava/lang/String;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#getPackageCodePath()"/> 
        /// </summary>
        public Java.Lang.String PackageCodePath
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getPackageCodePath", "()Ljava/lang/String;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#getPackageManager()"/> 
        /// </summary>
        public Android.Content.Pm.PackageManager PackageManager
        {
            get { return IExecuteWithSignature<Android.Content.Pm.PackageManager>("getPackageManager", "()Landroid/content/pm/PackageManager;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#getPackageName()"/> 
        /// </summary>
        public Java.Lang.String PackageName
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getPackageName", "()Ljava/lang/String;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#getPackageResourcePath()"/> 
        /// </summary>
        public Java.Lang.String PackageResourcePath
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getPackageResourcePath", "()Ljava/lang/String;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#getParams()"/> 
        /// </summary>
        public Android.Content.ContextParams Params
        {
            get { return IExecuteWithSignature<Android.Content.ContextParams>("getParams", "()Landroid/content/ContextParams;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#getResources()"/> 
        /// </summary>
        public Android.Content.Res.Resources Resources
        {
            get { return IExecuteWithSignature<Android.Content.Res.Resources>("getResources", "()Landroid/content/res/Resources;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#getTheme()"/> <see href="https://developer.android.com/reference/android/content/Context.html#setTheme(int)"/>
        /// </summary>
        public Android.Content.Res.Resources.Theme Theme
        {
            get { return IExecuteWithSignature<Android.Content.Res.Resources.Theme>("getTheme", "()Landroid/content/res/Resources$Theme;"); } set { IExecuteWithSignature("setTheme", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#getWallpaper()"/> 
        /// </summary>
        [System.Obsolete()]
        public Android.Graphics.Drawable.Drawable Wallpaper
        {
            get { return IExecuteWithSignature<Android.Graphics.Drawable.Drawable>("getWallpaper", "()Landroid/graphics/drawable/Drawable;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#getWallpaperDesiredMinimumHeight()"/> 
        /// </summary>
        [System.Obsolete()]
        public int WallpaperDesiredMinimumHeight
        {
            get { return IExecuteWithSignature<int>("getWallpaperDesiredMinimumHeight", "()I"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#getWallpaperDesiredMinimumWidth()"/> 
        /// </summary>
        [System.Obsolete()]
        public int WallpaperDesiredMinimumWidth
        {
            get { return IExecuteWithSignature<int>("getWallpaperDesiredMinimumWidth", "()I"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#startForegroundService(android.content.Intent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        /// <returns><see cref="Android.Content.ComponentName"/></returns>
        public Android.Content.ComponentName StartForegroundService(Android.Content.Intent arg0)
        {
            return IExecuteWithSignature<Android.Content.ComponentName>("startForegroundService", "(Landroid/content/Intent;)Landroid/content/ComponentName;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#startService(android.content.Intent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        /// <returns><see cref="Android.Content.ComponentName"/></returns>
        public Android.Content.ComponentName StartService(Android.Content.Intent arg0)
        {
            return IExecuteWithSignature<Android.Content.ComponentName>("startService", "(Landroid/content/Intent;)Landroid/content/ComponentName;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#createConfigurationContext(android.content.res.Configuration)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Res.Configuration"/></param>
        /// <returns><see cref="Android.Content.Context"/></returns>
        public Android.Content.Context CreateConfigurationContext(Android.Content.Res.Configuration arg0)
        {
            return IExecuteWithSignature<Android.Content.Context>("createConfigurationContext", "(Landroid/content/res/Configuration;)Landroid/content/Context;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#createContextForSplit(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Android.Content.Context"/></returns>
        /// <exception cref="Android.Content.Pm.PackageManager.NameNotFoundException"/>
        public Android.Content.Context CreateContextForSplit(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<Android.Content.Context>("createContextForSplit", "(Ljava/lang/String;)Landroid/content/Context;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#createDeviceProtectedStorageContext()"/>
        /// </summary>
        /// <returns><see cref="Android.Content.Context"/></returns>
        public Android.Content.Context CreateDeviceProtectedStorageContext()
        {
            return IExecuteWithSignature<Android.Content.Context>("createDeviceProtectedStorageContext", "()Landroid/content/Context;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#createDisplayContext(android.view.Display)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.Display"/></param>
        /// <returns><see cref="Android.Content.Context"/></returns>
        public Android.Content.Context CreateDisplayContext(Android.View.Display arg0)
        {
            return IExecuteWithSignature<Android.Content.Context>("createDisplayContext", "(Landroid/view/Display;)Landroid/content/Context;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#createPackageContext(java.lang.String,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="Android.Content.Context"/></returns>
        /// <exception cref="Android.Content.Pm.PackageManager.NameNotFoundException"/>
        public Android.Content.Context CreatePackageContext(Java.Lang.String arg0, int arg1)
        {
            return IExecute<Android.Content.Context>("createPackageContext", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.BroadcastReceiver"/></param>
        /// <param name="arg1"><see cref="Android.Content.IntentFilter"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public Android.Content.Intent RegisterReceiver(Android.Content.BroadcastReceiver arg0, Android.Content.IntentFilter arg1, int arg2)
        {
            return IExecute<Android.Content.Intent>("registerReceiver", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.BroadcastReceiver"/></param>
        /// <param name="arg1"><see cref="Android.Content.IntentFilter"/></param>
        /// <param name="arg2"><see cref="Java.Lang.String"/></param>
        /// <param name="arg3"><see cref="Android.Os.Handler"/></param>
        /// <param name="arg4"><see cref="int"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public Android.Content.Intent RegisterReceiver(Android.Content.BroadcastReceiver arg0, Android.Content.IntentFilter arg1, Java.Lang.String arg2, Android.Os.Handler arg3, int arg4)
        {
            return IExecute<Android.Content.Intent>("registerReceiver", arg0, arg1, arg2, arg3, arg4);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.BroadcastReceiver"/></param>
        /// <param name="arg1"><see cref="Android.Content.IntentFilter"/></param>
        /// <param name="arg2"><see cref="Java.Lang.String"/></param>
        /// <param name="arg3"><see cref="Android.Os.Handler"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public Android.Content.Intent RegisterReceiver(Android.Content.BroadcastReceiver arg0, Android.Content.IntentFilter arg1, Java.Lang.String arg2, Android.Os.Handler arg3)
        {
            return IExecute<Android.Content.Intent>("registerReceiver", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.BroadcastReceiver"/></param>
        /// <param name="arg1"><see cref="Android.Content.IntentFilter"/></param>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public Android.Content.Intent RegisterReceiver(Android.Content.BroadcastReceiver arg0, Android.Content.IntentFilter arg1)
        {
            return IExecute<Android.Content.Intent>("registerReceiver", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#getSharedPreferences(java.lang.String,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="Android.Content.SharedPreferences"/></returns>
        public Android.Content.SharedPreferences GetSharedPreferences(Java.Lang.String arg0, int arg1)
        {
            return IExecute<Android.Content.SharedPreferences>("getSharedPreferences", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase.CursorFactory,android.database.DatabaseErrorHandler)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="Android.Database.Sqlite.SQLiteDatabase.CursorFactory"/></param>
        /// <param name="arg3"><see cref="Android.Database.DatabaseErrorHandler"/></param>
        /// <returns><see cref="Android.Database.Sqlite.SQLiteDatabase"/></returns>
        public Android.Database.Sqlite.SQLiteDatabase OpenOrCreateDatabase(Java.Lang.String arg0, int arg1, Android.Database.Sqlite.SQLiteDatabase.CursorFactory arg2, Android.Database.DatabaseErrorHandler arg3)
        {
            return IExecute<Android.Database.Sqlite.SQLiteDatabase>("openOrCreateDatabase", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase.CursorFactory)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="Android.Database.Sqlite.SQLiteDatabase.CursorFactory"/></param>
        /// <returns><see cref="Android.Database.Sqlite.SQLiteDatabase"/></returns>
        public Android.Database.Sqlite.SQLiteDatabase OpenOrCreateDatabase(Java.Lang.String arg0, int arg1, Android.Database.Sqlite.SQLiteDatabase.CursorFactory arg2)
        {
            return IExecute<Android.Database.Sqlite.SQLiteDatabase>("openOrCreateDatabase", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#peekWallpaper()"/>
        /// </summary>
        /// <returns><see cref="Android.Graphics.Drawable.Drawable"/></returns>
        [System.Obsolete()]
        public Android.Graphics.Drawable.Drawable PeekWallpaper()
        {
            return IExecuteWithSignature<Android.Graphics.Drawable.Drawable>("peekWallpaper", "()Landroid/graphics/drawable/Drawable;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#bindService(android.content.Intent,android.content.ServiceConnection,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        /// <param name="arg1"><see cref="Android.Content.ServiceConnection"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool BindService(Android.Content.Intent arg0, Android.Content.ServiceConnection arg1, int arg2)
        {
            return IExecute<bool>("bindService", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#deleteDatabase(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool DeleteDatabase(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<bool>("deleteDatabase", "(Ljava/lang/String;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#deleteFile(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool DeleteFile(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<bool>("deleteFile", "(Ljava/lang/String;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#deleteSharedPreferences(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool DeleteSharedPreferences(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<bool>("deleteSharedPreferences", "(Ljava/lang/String;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#isDeviceProtectedStorage()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsDeviceProtectedStorage()
        {
            return IExecuteWithSignature<bool>("isDeviceProtectedStorage", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#moveDatabaseFrom(android.content.Context,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool MoveDatabaseFrom(Android.Content.Context arg0, Java.Lang.String arg1)
        {
            return IExecute<bool>("moveDatabaseFrom", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#moveSharedPreferencesFrom(android.content.Context,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool MoveSharedPreferencesFrom(Android.Content.Context arg0, Java.Lang.String arg1)
        {
            return IExecute<bool>("moveSharedPreferencesFrom", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#startInstrumentation(android.content.ComponentName,java.lang.String,android.os.Bundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.ComponentName"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="Android.Os.Bundle"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool StartInstrumentation(Android.Content.ComponentName arg0, Java.Lang.String arg1, Android.Os.Bundle arg2)
        {
            return IExecute<bool>("startInstrumentation", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#stopService(android.content.Intent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool StopService(Android.Content.Intent arg0)
        {
            return IExecuteWithSignature<bool>("stopService", "(Landroid/content/Intent;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#checkCallingOrSelfPermission(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="int"/></returns>
        public int CheckCallingOrSelfPermission(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<int>("checkCallingOrSelfPermission", "(Ljava/lang/String;)I", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#checkCallingOrSelfUriPermission(android.net.Uri,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Net.Uri"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public int CheckCallingOrSelfUriPermission(Android.Net.Uri arg0, int arg1)
        {
            return IExecute<int>("checkCallingOrSelfUriPermission", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#checkCallingPermission(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="int"/></returns>
        public int CheckCallingPermission(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<int>("checkCallingPermission", "(Ljava/lang/String;)I", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#checkCallingUriPermission(android.net.Uri,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Net.Uri"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public int CheckCallingUriPermission(Android.Net.Uri arg0, int arg1)
        {
            return IExecute<int>("checkCallingUriPermission", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#checkPermission(java.lang.String,int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public int CheckPermission(Java.Lang.String arg0, int arg1, int arg2)
        {
            return IExecute<int>("checkPermission", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#checkSelfPermission(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="int"/></returns>
        public int CheckSelfPermission(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<int>("checkSelfPermission", "(Ljava/lang/String;)I", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#checkUriPermission(android.net.Uri,int,int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Net.Uri"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <param name="arg3"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public int CheckUriPermission(Android.Net.Uri arg0, int arg1, int arg2, int arg3)
        {
            return IExecute<int>("checkUriPermission", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#checkUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Net.Uri"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="Java.Lang.String"/></param>
        /// <param name="arg3"><see cref="int"/></param>
        /// <param name="arg4"><see cref="int"/></param>
        /// <param name="arg5"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public int CheckUriPermission(Android.Net.Uri arg0, Java.Lang.String arg1, Java.Lang.String arg2, int arg3, int arg4, int arg5)
        {
            return IExecute<int>("checkUriPermission", arg0, arg1, arg2, arg3, arg4, arg5);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#getDatabasePath(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Java.Io.File"/></returns>
        public Java.Io.File GetDatabasePath(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<Java.Io.File>("getDatabasePath", "(Ljava/lang/String;)Ljava/io/File;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#getDir(java.lang.String,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="Java.Io.File"/></returns>
        public Java.Io.File GetDir(Java.Lang.String arg0, int arg1)
        {
            return IExecute<Java.Io.File>("getDir", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#getExternalFilesDir(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Java.Io.File"/></returns>
        public Java.Io.File GetExternalFilesDir(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<Java.Io.File>("getExternalFilesDir", "(Ljava/lang/String;)Ljava/io/File;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#getFileStreamPath(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Java.Io.File"/></returns>
        public Java.Io.File GetFileStreamPath(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<Java.Io.File>("getFileStreamPath", "(Ljava/lang/String;)Ljava/io/File;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#getExternalFilesDirs(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Java.Io.File"/></returns>
        public Java.Io.File[] GetExternalFilesDirs(Java.Lang.String arg0)
        {
            return IExecuteWithSignatureArray<Java.Io.File>("getExternalFilesDirs", "(Ljava/lang/String;)[Ljava/io/File;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#openFileInput(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Java.Io.FileInputStream"/></returns>
        /// <exception cref="Java.Io.FileNotFoundException"/>
        public Java.Io.FileInputStream OpenFileInput(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<Java.Io.FileInputStream>("openFileInput", "(Ljava/lang/String;)Ljava/io/FileInputStream;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#openFileOutput(java.lang.String,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="Java.Io.FileOutputStream"/></returns>
        /// <exception cref="Java.Io.FileNotFoundException"/>
        public Java.Io.FileOutputStream OpenFileOutput(Java.Lang.String arg0, int arg1)
        {
            return IExecute<Java.Io.FileOutputStream>("openFileOutput", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#getSystemService(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="object"/></returns>
        public object GetSystemService(Java.Lang.String arg0)
        {
            return IExecuteWithSignature("getSystemService", "(Ljava/lang/String;)Ljava/lang/Object;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#getSystemServiceName(java.lang.Class)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.Class"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetSystemServiceName(Java.Lang.Class arg0)
        {
            return IExecuteWithSignature<Java.Lang.String>("getSystemServiceName", "(Ljava/lang/Class;)Ljava/lang/String;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#databaseList()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String[] DatabaseList()
        {
            return IExecuteWithSignatureArray<Java.Lang.String>("databaseList", "()[Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#fileList()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String[] FileList()
        {
            return IExecuteWithSignatureArray<Java.Lang.String>("fileList", "()[Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#clearWallpaper()"/>
        /// </summary>
        /// <exception cref="Java.Io.IOException"/>
        [System.Obsolete()]
        public void ClearWallpaper()
        {
            IExecuteWithSignature("clearWallpaper", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#enforceCallingOrSelfPermission(java.lang.String,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        public void EnforceCallingOrSelfPermission(Java.Lang.String arg0, Java.Lang.String arg1)
        {
            IExecute("enforceCallingOrSelfPermission", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#enforceCallingOrSelfUriPermission(android.net.Uri,int,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Net.Uri"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="Java.Lang.String"/></param>
        public void EnforceCallingOrSelfUriPermission(Android.Net.Uri arg0, int arg1, Java.Lang.String arg2)
        {
            IExecute("enforceCallingOrSelfUriPermission", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#enforceCallingPermission(java.lang.String,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        public void EnforceCallingPermission(Java.Lang.String arg0, Java.Lang.String arg1)
        {
            IExecute("enforceCallingPermission", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#enforceCallingUriPermission(android.net.Uri,int,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Net.Uri"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="Java.Lang.String"/></param>
        public void EnforceCallingUriPermission(Android.Net.Uri arg0, int arg1, Java.Lang.String arg2)
        {
            IExecute("enforceCallingUriPermission", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#enforcePermission(java.lang.String,int,int,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <param name="arg3"><see cref="Java.Lang.String"/></param>
        public void EnforcePermission(Java.Lang.String arg0, int arg1, int arg2, Java.Lang.String arg3)
        {
            IExecute("enforcePermission", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#enforceUriPermission(android.net.Uri,int,int,int,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Net.Uri"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <param name="arg3"><see cref="int"/></param>
        /// <param name="arg4"><see cref="Java.Lang.String"/></param>
        public void EnforceUriPermission(Android.Net.Uri arg0, int arg1, int arg2, int arg3, Java.Lang.String arg4)
        {
            IExecute("enforceUriPermission", arg0, arg1, arg2, arg3, arg4);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#enforceUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Net.Uri"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="Java.Lang.String"/></param>
        /// <param name="arg3"><see cref="int"/></param>
        /// <param name="arg4"><see cref="int"/></param>
        /// <param name="arg5"><see cref="int"/></param>
        /// <param name="arg6"><see cref="Java.Lang.String"/></param>
        public void EnforceUriPermission(Android.Net.Uri arg0, Java.Lang.String arg1, Java.Lang.String arg2, int arg3, int arg4, int arg5, Java.Lang.String arg6)
        {
            IExecute("enforceUriPermission", arg0, arg1, arg2, arg3, arg4, arg5, arg6);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#grantUriPermission(java.lang.String,android.net.Uri,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Android.Net.Uri"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        public void GrantUriPermission(Java.Lang.String arg0, Android.Net.Uri arg1, int arg2)
        {
            IExecute("grantUriPermission", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#removeStickyBroadcast(android.content.Intent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        [System.Obsolete()]
        public void RemoveStickyBroadcast(Android.Content.Intent arg0)
        {
            IExecuteWithSignature("removeStickyBroadcast", "(Landroid/content/Intent;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        /// <param name="arg1"><see cref="Android.Os.UserHandle"/></param>
        [System.Obsolete()]
        public void RemoveStickyBroadcastAsUser(Android.Content.Intent arg0, Android.Os.UserHandle arg1)
        {
            IExecute("removeStickyBroadcastAsUser", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#revokeUriPermission(android.net.Uri,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Net.Uri"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void RevokeUriPermission(Android.Net.Uri arg0, int arg1)
        {
            IExecute("revokeUriPermission", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#revokeUriPermission(java.lang.String,android.net.Uri,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Android.Net.Uri"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        public void RevokeUriPermission(Java.Lang.String arg0, Android.Net.Uri arg1, int arg2)
        {
            IExecute("revokeUriPermission", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#sendBroadcast(android.content.Intent,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        public void SendBroadcast(Android.Content.Intent arg0, Java.Lang.String arg1)
        {
            IExecute("sendBroadcast", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#sendBroadcast(android.content.Intent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        public void SendBroadcast(Android.Content.Intent arg0)
        {
            IExecuteWithSignature("sendBroadcast", "(Landroid/content/Intent;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        /// <param name="arg1"><see cref="Android.Os.UserHandle"/></param>
        /// <param name="arg2"><see cref="Java.Lang.String"/></param>
        public void SendBroadcastAsUser(Android.Content.Intent arg0, Android.Os.UserHandle arg1, Java.Lang.String arg2)
        {
            IExecute("sendBroadcastAsUser", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        /// <param name="arg1"><see cref="Android.Os.UserHandle"/></param>
        public void SendBroadcastAsUser(Android.Content.Intent arg0, Android.Os.UserHandle arg1)
        {
            IExecute("sendBroadcastAsUser", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="Android.Content.BroadcastReceiver"/></param>
        /// <param name="arg3"><see cref="Android.Os.Handler"/></param>
        /// <param name="arg4"><see cref="int"/></param>
        /// <param name="arg5"><see cref="Java.Lang.String"/></param>
        /// <param name="arg6"><see cref="Android.Os.Bundle"/></param>
        public void SendOrderedBroadcast(Android.Content.Intent arg0, Java.Lang.String arg1, Android.Content.BroadcastReceiver arg2, Android.Os.Handler arg3, int arg4, Java.Lang.String arg5, Android.Os.Bundle arg6)
        {
            IExecute("sendOrderedBroadcast", arg0, arg1, arg2, arg3, arg4, arg5, arg6);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#sendOrderedBroadcast(android.content.Intent,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        public void SendOrderedBroadcast(Android.Content.Intent arg0, Java.Lang.String arg1)
        {
            IExecute("sendOrderedBroadcast", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        /// <param name="arg1"><see cref="Android.Os.UserHandle"/></param>
        /// <param name="arg2"><see cref="Java.Lang.String"/></param>
        /// <param name="arg3"><see cref="Android.Content.BroadcastReceiver"/></param>
        /// <param name="arg4"><see cref="Android.Os.Handler"/></param>
        /// <param name="arg5"><see cref="int"/></param>
        /// <param name="arg6"><see cref="Java.Lang.String"/></param>
        /// <param name="arg7"><see cref="Android.Os.Bundle"/></param>
        public void SendOrderedBroadcastAsUser(Android.Content.Intent arg0, Android.Os.UserHandle arg1, Java.Lang.String arg2, Android.Content.BroadcastReceiver arg3, Android.Os.Handler arg4, int arg5, Java.Lang.String arg6, Android.Os.Bundle arg7)
        {
            IExecute("sendOrderedBroadcastAsUser", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#sendStickyBroadcast(android.content.Intent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        [System.Obsolete()]
        public void SendStickyBroadcast(Android.Content.Intent arg0)
        {
            IExecuteWithSignature("sendStickyBroadcast", "(Landroid/content/Intent;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        /// <param name="arg1"><see cref="Android.Os.UserHandle"/></param>
        [System.Obsolete()]
        public void SendStickyBroadcastAsUser(Android.Content.Intent arg0, Android.Os.UserHandle arg1)
        {
            IExecute("sendStickyBroadcastAsUser", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        /// <param name="arg1"><see cref="Android.Content.BroadcastReceiver"/></param>
        /// <param name="arg2"><see cref="Android.Os.Handler"/></param>
        /// <param name="arg3"><see cref="int"/></param>
        /// <param name="arg4"><see cref="Java.Lang.String"/></param>
        /// <param name="arg5"><see cref="Android.Os.Bundle"/></param>
        [System.Obsolete()]
        public void SendStickyOrderedBroadcast(Android.Content.Intent arg0, Android.Content.BroadcastReceiver arg1, Android.Os.Handler arg2, int arg3, Java.Lang.String arg4, Android.Os.Bundle arg5)
        {
            IExecute("sendStickyOrderedBroadcast", arg0, arg1, arg2, arg3, arg4, arg5);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        /// <param name="arg1"><see cref="Android.Os.UserHandle"/></param>
        /// <param name="arg2"><see cref="Android.Content.BroadcastReceiver"/></param>
        /// <param name="arg3"><see cref="Android.Os.Handler"/></param>
        /// <param name="arg4"><see cref="int"/></param>
        /// <param name="arg5"><see cref="Java.Lang.String"/></param>
        /// <param name="arg6"><see cref="Android.Os.Bundle"/></param>
        [System.Obsolete()]
        public void SendStickyOrderedBroadcastAsUser(Android.Content.Intent arg0, Android.Os.UserHandle arg1, Android.Content.BroadcastReceiver arg2, Android.Os.Handler arg3, int arg4, Java.Lang.String arg5, Android.Os.Bundle arg6)
        {
            IExecute("sendStickyOrderedBroadcastAsUser", arg0, arg1, arg2, arg3, arg4, arg5, arg6);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#setWallpaper(android.graphics.Bitmap)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Graphics.Bitmap"/></param>
        /// <exception cref="Java.Io.IOException"/>
        [System.Obsolete()]
        public void SetWallpaper(Android.Graphics.Bitmap arg0)
        {
            IExecuteWithSignature("setWallpaper", "(Landroid/graphics/Bitmap;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#setWallpaper(java.io.InputStream)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Io.InputStream"/></param>
        /// <exception cref="Java.Io.IOException"/>
        [System.Obsolete()]
        public void SetWallpaper(Java.Io.InputStream arg0)
        {
            IExecuteWithSignature("setWallpaper", "(Ljava/io/InputStream;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#startActivities(android.content.Intent[],android.os.Bundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        /// <param name="arg1"><see cref="Android.Os.Bundle"/></param>
        public void StartActivities(Android.Content.Intent[] arg0, Android.Os.Bundle arg1)
        {
            IExecute("startActivities", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#startActivities(android.content.Intent[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        public void StartActivities(Android.Content.Intent[] arg0)
        {
            IExecuteWithSignature("startActivities", "([Landroid/content/Intent;)V", new object[] { arg0 });
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#startActivity(android.content.Intent,android.os.Bundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        /// <param name="arg1"><see cref="Android.Os.Bundle"/></param>
        public void StartActivity(Android.Content.Intent arg0, Android.Os.Bundle arg1)
        {
            IExecute("startActivity", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#startActivity(android.content.Intent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        public void StartActivity(Android.Content.Intent arg0)
        {
            IExecuteWithSignature("startActivity", "(Landroid/content/Intent;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int,android.os.Bundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.IntentSender"/></param>
        /// <param name="arg1"><see cref="Android.Content.Intent"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <param name="arg3"><see cref="int"/></param>
        /// <param name="arg4"><see cref="int"/></param>
        /// <param name="arg5"><see cref="Android.Os.Bundle"/></param>
        /// <exception cref="Android.Content.IntentSender.SendIntentException"/>
        public void StartIntentSender(Android.Content.IntentSender arg0, Android.Content.Intent arg1, int arg2, int arg3, int arg4, Android.Os.Bundle arg5)
        {
            IExecute("startIntentSender", arg0, arg1, arg2, arg3, arg4, arg5);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.IntentSender"/></param>
        /// <param name="arg1"><see cref="Android.Content.Intent"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <param name="arg3"><see cref="int"/></param>
        /// <param name="arg4"><see cref="int"/></param>
        /// <exception cref="Android.Content.IntentSender.SendIntentException"/>
        public void StartIntentSender(Android.Content.IntentSender arg0, Android.Content.Intent arg1, int arg2, int arg3, int arg4)
        {
            IExecute("startIntentSender", arg0, arg1, arg2, arg3, arg4);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#unbindService(android.content.ServiceConnection)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.ServiceConnection"/></param>
        public void UnbindService(Android.Content.ServiceConnection arg0)
        {
            IExecuteWithSignature("unbindService", "(Landroid/content/ServiceConnection;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#unregisterReceiver(android.content.BroadcastReceiver)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.BroadcastReceiver"/></param>
        public void UnregisterReceiver(Android.Content.BroadcastReceiver arg0)
        {
            IExecuteWithSignature("unregisterReceiver", "(Landroid/content/BroadcastReceiver;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#createAttributionContext(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Android.Content.Context"/></returns>
        public Android.Content.Context CreateAttributionContext(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<Android.Content.Context>("createAttributionContext", "(Ljava/lang/String;)Landroid/content/Context;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#createContext(android.content.ContextParams)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.ContextParams"/></param>
        /// <returns><see cref="Android.Content.Context"/></returns>
        public Android.Content.Context CreateContext(Android.Content.ContextParams arg0)
        {
            return IExecuteWithSignature<Android.Content.Context>("createContext", "(Landroid/content/ContextParams;)Landroid/content/Context;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#createDeviceContext(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Android.Content.Context"/></returns>
        public Android.Content.Context CreateDeviceContext(int arg0)
        {
            return IExecuteWithSignature<Android.Content.Context>("createDeviceContext", "(I)Landroid/content/Context;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#createWindowContext(android.view.Display,int,android.os.Bundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.Display"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="Android.Os.Bundle"/></param>
        /// <returns><see cref="Android.Content.Context"/></returns>
        public Android.Content.Context CreateWindowContext(Android.View.Display arg0, int arg1, Android.Os.Bundle arg2)
        {
            return IExecute<Android.Content.Context>("createWindowContext", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#createWindowContext(int,android.os.Bundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="Android.Os.Bundle"/></param>
        /// <returns><see cref="Android.Content.Context"/></returns>
        public Android.Content.Context CreateWindowContext(int arg0, Android.Os.Bundle arg1)
        {
            return IExecute<Android.Content.Context>("createWindowContext", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#bindIsolatedService(android.content.Intent,android.content.Context.BindServiceFlags,java.lang.String,java.util.concurrent.Executor,android.content.ServiceConnection)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        /// <param name="arg1"><see cref="Android.Content.Context.BindServiceFlags"/></param>
        /// <param name="arg2"><see cref="Java.Lang.String"/></param>
        /// <param name="arg3"><see cref="Java.Util.Concurrent.Executor"/></param>
        /// <param name="arg4"><see cref="Android.Content.ServiceConnection"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool BindIsolatedService(Android.Content.Intent arg0, Android.Content.Context.BindServiceFlags arg1, Java.Lang.String arg2, Java.Util.Concurrent.Executor arg3, Android.Content.ServiceConnection arg4)
        {
            return IExecute<bool>("bindIsolatedService", arg0, arg1, arg2, arg3, arg4);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#bindIsolatedService(android.content.Intent,int,java.lang.String,java.util.concurrent.Executor,android.content.ServiceConnection)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="Java.Lang.String"/></param>
        /// <param name="arg3"><see cref="Java.Util.Concurrent.Executor"/></param>
        /// <param name="arg4"><see cref="Android.Content.ServiceConnection"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool BindIsolatedService(Android.Content.Intent arg0, int arg1, Java.Lang.String arg2, Java.Util.Concurrent.Executor arg3, Android.Content.ServiceConnection arg4)
        {
            return IExecute<bool>("bindIsolatedService", arg0, arg1, arg2, arg3, arg4);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#bindService(android.content.Intent,android.content.Context.BindServiceFlags,java.util.concurrent.Executor,android.content.ServiceConnection)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        /// <param name="arg1"><see cref="Android.Content.Context.BindServiceFlags"/></param>
        /// <param name="arg2"><see cref="Java.Util.Concurrent.Executor"/></param>
        /// <param name="arg3"><see cref="Android.Content.ServiceConnection"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool BindService(Android.Content.Intent arg0, Android.Content.Context.BindServiceFlags arg1, Java.Util.Concurrent.Executor arg2, Android.Content.ServiceConnection arg3)
        {
            return IExecute<bool>("bindService", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#bindService(android.content.Intent,android.content.ServiceConnection,android.content.Context.BindServiceFlags)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        /// <param name="arg1"><see cref="Android.Content.ServiceConnection"/></param>
        /// <param name="arg2"><see cref="Android.Content.Context.BindServiceFlags"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool BindService(Android.Content.Intent arg0, Android.Content.ServiceConnection arg1, Android.Content.Context.BindServiceFlags arg2)
        {
            return IExecute<bool>("bindService", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#bindService(android.content.Intent,int,java.util.concurrent.Executor,android.content.ServiceConnection)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="Java.Util.Concurrent.Executor"/></param>
        /// <param name="arg3"><see cref="Android.Content.ServiceConnection"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool BindService(Android.Content.Intent arg0, int arg1, Java.Util.Concurrent.Executor arg2, Android.Content.ServiceConnection arg3)
        {
            return IExecute<bool>("bindService", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,android.content.Context.BindServiceFlags,android.os.UserHandle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        /// <param name="arg1"><see cref="Android.Content.ServiceConnection"/></param>
        /// <param name="arg2"><see cref="Android.Content.Context.BindServiceFlags"/></param>
        /// <param name="arg3"><see cref="Android.Os.UserHandle"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool BindServiceAsUser(Android.Content.Intent arg0, Android.Content.ServiceConnection arg1, Android.Content.Context.BindServiceFlags arg2, Android.Os.UserHandle arg3)
        {
            return IExecute<bool>("bindServiceAsUser", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.UserHandle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        /// <param name="arg1"><see cref="Android.Content.ServiceConnection"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <param name="arg3"><see cref="Android.Os.UserHandle"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool BindServiceAsUser(Android.Content.Intent arg0, Android.Content.ServiceConnection arg1, int arg2, Android.Os.UserHandle arg3)
        {
            return IExecute<bool>("bindServiceAsUser", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#isRestricted()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsRestricted()
        {
            return IExecuteWithSignature<bool>("isRestricted", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#isUiContext()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsUiContext()
        {
            return IExecuteWithSignature<bool>("isUiContext", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#getSystemService(java.lang.Class)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.Class"/></param>
        /// <typeparam name="T"></typeparam>
        /// <returns><typeparamref name="T"/></returns>
        public T GetSystemService<T>(Java.Lang.Class arg0)
        {
            return IExecuteWithSignature<T>("getSystemService", "(Ljava/lang/Class;)Ljava/lang/Object;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#getColorStateList(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Android.Content.Res.ColorStateList"/></returns>
        public Android.Content.Res.ColorStateList GetColorStateList(int arg0)
        {
            return IExecuteWithSignature<Android.Content.Res.ColorStateList>("getColorStateList", "(I)Landroid/content/res/ColorStateList;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#obtainStyledAttributes(android.util.AttributeSet,int[],int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Util.AttributeSet"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <param name="arg3"><see cref="int"/></param>
        /// <returns><see cref="Android.Content.Res.TypedArray"/></returns>
        public Android.Content.Res.TypedArray ObtainStyledAttributes(Android.Util.AttributeSet arg0, int[] arg1, int arg2, int arg3)
        {
            return IExecute<Android.Content.Res.TypedArray>("obtainStyledAttributes", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#obtainStyledAttributes(android.util.AttributeSet,int[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Util.AttributeSet"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="Android.Content.Res.TypedArray"/></returns>
        public Android.Content.Res.TypedArray ObtainStyledAttributes(Android.Util.AttributeSet arg0, int[] arg1)
        {
            return IExecute<Android.Content.Res.TypedArray>("obtainStyledAttributes", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#obtainStyledAttributes(int,int[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="Android.Content.Res.TypedArray"/></returns>
        /// <exception cref="Android.Content.Res.Resources.NotFoundException"/>
        public Android.Content.Res.TypedArray ObtainStyledAttributes(int arg0, int[] arg1)
        {
            return IExecute<Android.Content.Res.TypedArray>("obtainStyledAttributes", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#obtainStyledAttributes(int[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Android.Content.Res.TypedArray"/></returns>
        public Android.Content.Res.TypedArray ObtainStyledAttributes(int[] arg0)
        {
            return IExecuteWithSignature<Android.Content.Res.TypedArray>("obtainStyledAttributes", "([I)Landroid/content/res/TypedArray;", new object[] { arg0 });
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#getDrawable(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Android.Graphics.Drawable.Drawable"/></returns>
        public Android.Graphics.Drawable.Drawable GetDrawable(int arg0)
        {
            return IExecuteWithSignature<Android.Graphics.Drawable.Drawable>("getDrawable", "(I)Landroid/graphics/drawable/Drawable;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#getColor(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public int GetColor(int arg0)
        {
            return IExecuteWithSignature<int>("getColor", "(I)I", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#getText(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Java.Lang.CharSequence"/></returns>
        public Java.Lang.CharSequence GetText(int arg0)
        {
            return IExecuteWithSignature<Java.Lang.CharSequence>("getText", "(I)Ljava/lang/CharSequence;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#getString(int,java.lang.Object[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="object"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetString(int arg0, params object[] arg1)
        {
            if (arg1.Length == 0) return IExecute<Java.Lang.String>("getString", arg0); else return IExecute<Java.Lang.String>("getString", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#getString(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetString(int arg0)
        {
            return IExecuteWithSignature<Java.Lang.String>("getString", "(I)Ljava/lang/String;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#checkCallingOrSelfUriPermissions(java.util.List,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.List"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public int[] CheckCallingOrSelfUriPermissions(Java.Util.List<Android.Net.Uri> arg0, int arg1)
        {
            return IExecuteArray<int>("checkCallingOrSelfUriPermissions", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#checkCallingUriPermissions(java.util.List,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.List"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public int[] CheckCallingUriPermissions(Java.Util.List<Android.Net.Uri> arg0, int arg1)
        {
            return IExecuteArray<int>("checkCallingUriPermissions", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#checkUriPermissions(java.util.List,int,int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.List"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <param name="arg3"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public int[] CheckUriPermissions(Java.Util.List<Android.Net.Uri> arg0, int arg1, int arg2, int arg3)
        {
            return IExecuteArray<int>("checkUriPermissions", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#registerComponentCallbacks(android.content.ComponentCallbacks)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.ComponentCallbacks"/></param>
        public void RegisterComponentCallbacks(Android.Content.ComponentCallbacks arg0)
        {
            IExecuteWithSignature("registerComponentCallbacks", "(Landroid/content/ComponentCallbacks;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#registerDeviceIdChangeListener(java.util.concurrent.Executor,java.util.function.IntConsumer)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Concurrent.Executor"/></param>
        /// <param name="arg1"><see cref="Java.Util.Function.IntConsumer"/></param>
        public void RegisterDeviceIdChangeListener(Java.Util.Concurrent.Executor arg0, Java.Util.Function.IntConsumer arg1)
        {
            IExecute("registerDeviceIdChangeListener", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#revokeSelfPermissionOnKill(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        public void RevokeSelfPermissionOnKill(Java.Lang.String arg0)
        {
            IExecuteWithSignature("revokeSelfPermissionOnKill", "(Ljava/lang/String;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#revokeSelfPermissionsOnKill(java.util.Collection)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Collection"/></param>
        public void RevokeSelfPermissionsOnKill(Java.Util.Collection<Java.Lang.String> arg0)
        {
            IExecuteWithSignature("revokeSelfPermissionsOnKill", "(Ljava/util/Collection;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#sendBroadcast(android.content.Intent,java.lang.String,android.os.Bundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="Android.Os.Bundle"/></param>
        public void SendBroadcast(Android.Content.Intent arg0, Java.Lang.String arg1, Android.Os.Bundle arg2)
        {
            IExecute("sendBroadcast", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#sendBroadcastWithMultiplePermissions(android.content.Intent,java.lang.String[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        public void SendBroadcastWithMultiplePermissions(Android.Content.Intent arg0, Java.Lang.String[] arg1)
        {
            IExecute("sendBroadcastWithMultiplePermissions", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#sendOrderedBroadcast(android.content.Intent,java.lang.String,android.os.Bundle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="Android.Os.Bundle"/></param>
        /// <param name="arg3"><see cref="Android.Content.BroadcastReceiver"/></param>
        /// <param name="arg4"><see cref="Android.Os.Handler"/></param>
        /// <param name="arg5"><see cref="int"/></param>
        /// <param name="arg6"><see cref="Java.Lang.String"/></param>
        /// <param name="arg7"><see cref="Android.Os.Bundle"/></param>
        public void SendOrderedBroadcast(Android.Content.Intent arg0, Java.Lang.String arg1, Android.Os.Bundle arg2, Android.Content.BroadcastReceiver arg3, Android.Os.Handler arg4, int arg5, Java.Lang.String arg6, Android.Os.Bundle arg7)
        {
            IExecute("sendOrderedBroadcast", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#sendOrderedBroadcast(android.content.Intent,java.lang.String,android.os.Bundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="Android.Os.Bundle"/></param>
        public void SendOrderedBroadcast(Android.Content.Intent arg0, Java.Lang.String arg1, Android.Os.Bundle arg2)
        {
            IExecute("sendOrderedBroadcast", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#sendOrderedBroadcast(android.content.Intent,java.lang.String,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="Java.Lang.String"/></param>
        /// <param name="arg3"><see cref="Android.Content.BroadcastReceiver"/></param>
        /// <param name="arg4"><see cref="Android.Os.Handler"/></param>
        /// <param name="arg5"><see cref="int"/></param>
        /// <param name="arg6"><see cref="Java.Lang.String"/></param>
        /// <param name="arg7"><see cref="Android.Os.Bundle"/></param>
        public void SendOrderedBroadcast(Android.Content.Intent arg0, Java.Lang.String arg1, Java.Lang.String arg2, Android.Content.BroadcastReceiver arg3, Android.Os.Handler arg4, int arg5, Java.Lang.String arg6, Android.Os.Bundle arg7)
        {
            IExecute("sendOrderedBroadcast", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#sendStickyBroadcast(android.content.Intent,android.os.Bundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        /// <param name="arg1"><see cref="Android.Os.Bundle"/></param>
        [System.Obsolete()]
        public void SendStickyBroadcast(Android.Content.Intent arg0, Android.Os.Bundle arg1)
        {
            IExecute("sendStickyBroadcast", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#unregisterComponentCallbacks(android.content.ComponentCallbacks)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.ComponentCallbacks"/></param>
        public void UnregisterComponentCallbacks(Android.Content.ComponentCallbacks arg0)
        {
            IExecuteWithSignature("unregisterComponentCallbacks", "(Landroid/content/ComponentCallbacks;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#unregisterDeviceIdChangeListener(java.util.function.IntConsumer)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Function.IntConsumer"/></param>
        public void UnregisterDeviceIdChangeListener(Java.Util.Function.IntConsumer arg0)
        {
            IExecuteWithSignature("unregisterDeviceIdChangeListener", "(Ljava/util/function/IntConsumer;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/content/Context.html#updateServiceGroup(android.content.ServiceConnection,int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.ServiceConnection"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        public void UpdateServiceGroup(Android.Content.ServiceConnection arg0, int arg1, int arg2)
        {
            IExecute("updateServiceGroup", arg0, arg1, arg2);
        }

        #endregion

        #region Nested classes
        #region BindServiceFlags
        public partial class BindServiceFlags
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/content/Context.BindServiceFlags.html#of(long)"/>
            /// </summary>
            /// <param name="arg0"><see cref="long"/></param>
            /// <returns><see cref="Android.Content.Context.BindServiceFlags"/></returns>
            public static Android.Content.Context.BindServiceFlags Of(long arg0)
            {
                return SExecuteWithSignature<Android.Content.Context.BindServiceFlags>(LocalBridgeClazz, "of", "(J)Landroid/content/Context$BindServiceFlags;", arg0);
            }

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}