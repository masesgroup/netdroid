/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.8.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Credentials
{
    #region GetCredentialRequest
    public partial class GetCredentialRequest
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/credentials/GetCredentialRequest.html#CREATOR"/>
        /// </summary>
        public static Android.Os.Parcelable.Creator CREATOR { get { if (!_CREATORReady) { _CREATORContent = SGetField<Android.Os.Parcelable.Creator>(LocalBridgeClazz, "CREATOR"); _CREATORReady = true; } return _CREATORContent; } }
        private static Android.Os.Parcelable.Creator _CREATORContent = default;
        private static bool _CREATORReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/credentials/GetCredentialRequest.html#getData()"/>
        /// </summary>
        /// <returns><see cref="Android.Os.Bundle"/></returns>
        public Android.Os.Bundle GetData()
        {
            return IExecuteWithSignature<Android.Os.Bundle>("getData", "()Landroid/os/Bundle;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/credentials/GetCredentialRequest.html#alwaysSendAppInfoToProvider()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool AlwaysSendAppInfoToProvider()
        {
            return IExecuteWithSignature<bool>("alwaysSendAppInfoToProvider", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/credentials/GetCredentialRequest.html#describeContents()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int DescribeContents()
        {
            return IExecuteWithSignature<int>("describeContents", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/credentials/GetCredentialRequest.html#getOrigin()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetOrigin()
        {
            return IExecuteWithSignature<Java.Lang.String>("getOrigin", "()Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/credentials/GetCredentialRequest.html#getCredentialOptions()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.List"/></returns>
        public Java.Util.List<Android.Credentials.CredentialOption> GetCredentialOptions()
        {
            return IExecuteWithSignature<Java.Util.List<Android.Credentials.CredentialOption>>("getCredentialOptions", "()Ljava/util/List;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/credentials/GetCredentialRequest.html#writeToParcel(android.os.Parcel,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.Parcel"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void WriteToParcel(Android.Os.Parcel arg0, int arg1)
        {
            IExecute("writeToParcel", arg0, arg1);
        }

        #endregion

        #region Nested classes
        #region Builder
        public partial class Builder
        {
            #region Constructors
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/credentials/GetCredentialRequest.Builder.html#%3Cinit%3E(android.os.Bundle)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Os.Bundle"/></param>
            public Builder(Android.Os.Bundle arg0)
                : base(arg0)
            {
            }

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/credentials/GetCredentialRequest.Builder.html#build()"/>
            /// </summary>
            /// <returns><see cref="Android.Credentials.GetCredentialRequest"/></returns>
            public Android.Credentials.GetCredentialRequest Build()
            {
                return IExecuteWithSignature<Android.Credentials.GetCredentialRequest>("build", "()Landroid/credentials/GetCredentialRequest;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/credentials/GetCredentialRequest.Builder.html#addCredentialOption(android.credentials.CredentialOption)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Credentials.CredentialOption"/></param>
            /// <returns><see cref="Android.Credentials.GetCredentialRequest.Builder"/></returns>
            public Android.Credentials.GetCredentialRequest.Builder AddCredentialOption(Android.Credentials.CredentialOption arg0)
            {
                return IExecuteWithSignature<Android.Credentials.GetCredentialRequest.Builder>("addCredentialOption", "(Landroid/credentials/CredentialOption;)Landroid/credentials/GetCredentialRequest$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/credentials/GetCredentialRequest.Builder.html#setAlwaysSendAppInfoToProvider(boolean)"/>
            /// </summary>
            /// <param name="arg0"><see cref="bool"/></param>
            /// <returns><see cref="Android.Credentials.GetCredentialRequest.Builder"/></returns>
            public Android.Credentials.GetCredentialRequest.Builder SetAlwaysSendAppInfoToProvider(bool arg0)
            {
                return IExecuteWithSignature<Android.Credentials.GetCredentialRequest.Builder>("setAlwaysSendAppInfoToProvider", "(Z)Landroid/credentials/GetCredentialRequest$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/credentials/GetCredentialRequest.Builder.html#setCredentialOptions(java.util.List)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Util.List"/></param>
            /// <returns><see cref="Android.Credentials.GetCredentialRequest.Builder"/></returns>
            public Android.Credentials.GetCredentialRequest.Builder SetCredentialOptions(Java.Util.List<Android.Credentials.CredentialOption> arg0)
            {
                return IExecuteWithSignature<Android.Credentials.GetCredentialRequest.Builder>("setCredentialOptions", "(Ljava/util/List;)Landroid/credentials/GetCredentialRequest$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/credentials/GetCredentialRequest.Builder.html#setOrigin(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Android.Credentials.GetCredentialRequest.Builder"/></returns>
            public Android.Credentials.GetCredentialRequest.Builder SetOrigin(Java.Lang.String arg0)
            {
                return IExecuteWithSignature<Android.Credentials.GetCredentialRequest.Builder>("setOrigin", "(Ljava/lang/String;)Landroid/credentials/GetCredentialRequest$Builder;", arg0);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}