/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.5.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Icu.Number
{
    #region NumberRangeFormatter
    public partial class NumberRangeFormatter
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/number/NumberRangeFormatter.html#withLocale(android.icu.util.ULocale)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Util.ULocale"/></param>
        /// <returns><see cref="Android.Icu.Number.LocalizedNumberRangeFormatter"/></returns>
        public static Android.Icu.Number.LocalizedNumberRangeFormatter WithLocale(Android.Icu.Util.ULocale arg0)
        {
            return SExecuteWithSignature<Android.Icu.Number.LocalizedNumberRangeFormatter>(LocalBridgeClazz, "withLocale", "(Landroid/icu/util/ULocale;)Landroid/icu/number/LocalizedNumberRangeFormatter;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/number/NumberRangeFormatter.html#withLocale(java.util.Locale)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Locale"/></param>
        /// <returns><see cref="Android.Icu.Number.LocalizedNumberRangeFormatter"/></returns>
        public static Android.Icu.Number.LocalizedNumberRangeFormatter WithLocale(Java.Util.Locale arg0)
        {
            return SExecuteWithSignature<Android.Icu.Number.LocalizedNumberRangeFormatter>(LocalBridgeClazz, "withLocale", "(Ljava/util/Locale;)Landroid/icu/number/LocalizedNumberRangeFormatter;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/number/NumberRangeFormatter.html#with()"/>
        /// </summary>
        /// <returns><see cref="Android.Icu.Number.UnlocalizedNumberRangeFormatter"/></returns>
        public static Android.Icu.Number.UnlocalizedNumberRangeFormatter With()
        {
            return SExecuteWithSignature<Android.Icu.Number.UnlocalizedNumberRangeFormatter>(LocalBridgeClazz, "with", "()Landroid/icu/number/UnlocalizedNumberRangeFormatter;");
        }

        #endregion

        #region Instance methods

        #endregion

        #region Nested classes
        #region RangeCollapse
        public partial class RangeCollapse
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/number/NumberRangeFormatter.RangeCollapse.html#ALL"/>
            /// </summary>
            public static Android.Icu.Number.NumberRangeFormatter.RangeCollapse ALL { get { if (!_ALLReady) { _ALLContent = SGetField<Android.Icu.Number.NumberRangeFormatter.RangeCollapse>(LocalBridgeClazz, "ALL"); _ALLReady = true; } return _ALLContent; } }
            private static Android.Icu.Number.NumberRangeFormatter.RangeCollapse _ALLContent = default;
            private static bool _ALLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/number/NumberRangeFormatter.RangeCollapse.html#AUTO"/>
            /// </summary>
            public static Android.Icu.Number.NumberRangeFormatter.RangeCollapse AUTO { get { if (!_AUTOReady) { _AUTOContent = SGetField<Android.Icu.Number.NumberRangeFormatter.RangeCollapse>(LocalBridgeClazz, "AUTO"); _AUTOReady = true; } return _AUTOContent; } }
            private static Android.Icu.Number.NumberRangeFormatter.RangeCollapse _AUTOContent = default;
            private static bool _AUTOReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/number/NumberRangeFormatter.RangeCollapse.html#NONE"/>
            /// </summary>
            public static Android.Icu.Number.NumberRangeFormatter.RangeCollapse NONE { get { if (!_NONEReady) { _NONEContent = SGetField<Android.Icu.Number.NumberRangeFormatter.RangeCollapse>(LocalBridgeClazz, "NONE"); _NONEReady = true; } return _NONEContent; } }
            private static Android.Icu.Number.NumberRangeFormatter.RangeCollapse _NONEContent = default;
            private static bool _NONEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/number/NumberRangeFormatter.RangeCollapse.html#UNIT"/>
            /// </summary>
            public static Android.Icu.Number.NumberRangeFormatter.RangeCollapse UNIT { get { if (!_UNITReady) { _UNITContent = SGetField<Android.Icu.Number.NumberRangeFormatter.RangeCollapse>(LocalBridgeClazz, "UNIT"); _UNITReady = true; } return _UNITContent; } }
            private static Android.Icu.Number.NumberRangeFormatter.RangeCollapse _UNITContent = default;
            private static bool _UNITReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/number/NumberRangeFormatter.RangeCollapse.html#valueOf(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Android.Icu.Number.NumberRangeFormatter.RangeCollapse"/></returns>
            public static Android.Icu.Number.NumberRangeFormatter.RangeCollapse ValueOf(Java.Lang.String arg0)
            {
                return SExecuteWithSignature<Android.Icu.Number.NumberRangeFormatter.RangeCollapse>(LocalBridgeClazz, "valueOf", "(Ljava/lang/String;)Landroid/icu/number/NumberRangeFormatter$RangeCollapse;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/number/NumberRangeFormatter.RangeCollapse.html#values()"/>
            /// </summary>
            /// <returns><see cref="Android.Icu.Number.NumberRangeFormatter.RangeCollapse"/></returns>
            public static Android.Icu.Number.NumberRangeFormatter.RangeCollapse[] Values()
            {
                return SExecuteWithSignatureArray<Android.Icu.Number.NumberRangeFormatter.RangeCollapse>(LocalBridgeClazz, "values", "()[Landroid/icu/number/NumberRangeFormatter$RangeCollapse;");
            }

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region RangeIdentityFallback
        public partial class RangeIdentityFallback
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/number/NumberRangeFormatter.RangeIdentityFallback.html#APPROXIMATELY"/>
            /// </summary>
            public static Android.Icu.Number.NumberRangeFormatter.RangeIdentityFallback APPROXIMATELY { get { if (!_APPROXIMATELYReady) { _APPROXIMATELYContent = SGetField<Android.Icu.Number.NumberRangeFormatter.RangeIdentityFallback>(LocalBridgeClazz, "APPROXIMATELY"); _APPROXIMATELYReady = true; } return _APPROXIMATELYContent; } }
            private static Android.Icu.Number.NumberRangeFormatter.RangeIdentityFallback _APPROXIMATELYContent = default;
            private static bool _APPROXIMATELYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/number/NumberRangeFormatter.RangeIdentityFallback.html#APPROXIMATELY_OR_SINGLE_VALUE"/>
            /// </summary>
            public static Android.Icu.Number.NumberRangeFormatter.RangeIdentityFallback APPROXIMATELY_OR_SINGLE_VALUE { get { if (!_APPROXIMATELY_OR_SINGLE_VALUEReady) { _APPROXIMATELY_OR_SINGLE_VALUEContent = SGetField<Android.Icu.Number.NumberRangeFormatter.RangeIdentityFallback>(LocalBridgeClazz, "APPROXIMATELY_OR_SINGLE_VALUE"); _APPROXIMATELY_OR_SINGLE_VALUEReady = true; } return _APPROXIMATELY_OR_SINGLE_VALUEContent; } }
            private static Android.Icu.Number.NumberRangeFormatter.RangeIdentityFallback _APPROXIMATELY_OR_SINGLE_VALUEContent = default;
            private static bool _APPROXIMATELY_OR_SINGLE_VALUEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/number/NumberRangeFormatter.RangeIdentityFallback.html#RANGE"/>
            /// </summary>
            public static Android.Icu.Number.NumberRangeFormatter.RangeIdentityFallback RANGE { get { if (!_RANGEReady) { _RANGEContent = SGetField<Android.Icu.Number.NumberRangeFormatter.RangeIdentityFallback>(LocalBridgeClazz, "RANGE"); _RANGEReady = true; } return _RANGEContent; } }
            private static Android.Icu.Number.NumberRangeFormatter.RangeIdentityFallback _RANGEContent = default;
            private static bool _RANGEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/number/NumberRangeFormatter.RangeIdentityFallback.html#SINGLE_VALUE"/>
            /// </summary>
            public static Android.Icu.Number.NumberRangeFormatter.RangeIdentityFallback SINGLE_VALUE { get { if (!_SINGLE_VALUEReady) { _SINGLE_VALUEContent = SGetField<Android.Icu.Number.NumberRangeFormatter.RangeIdentityFallback>(LocalBridgeClazz, "SINGLE_VALUE"); _SINGLE_VALUEReady = true; } return _SINGLE_VALUEContent; } }
            private static Android.Icu.Number.NumberRangeFormatter.RangeIdentityFallback _SINGLE_VALUEContent = default;
            private static bool _SINGLE_VALUEReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/number/NumberRangeFormatter.RangeIdentityFallback.html#valueOf(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Android.Icu.Number.NumberRangeFormatter.RangeIdentityFallback"/></returns>
            public static Android.Icu.Number.NumberRangeFormatter.RangeIdentityFallback ValueOf(Java.Lang.String arg0)
            {
                return SExecuteWithSignature<Android.Icu.Number.NumberRangeFormatter.RangeIdentityFallback>(LocalBridgeClazz, "valueOf", "(Ljava/lang/String;)Landroid/icu/number/NumberRangeFormatter$RangeIdentityFallback;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/number/NumberRangeFormatter.RangeIdentityFallback.html#values()"/>
            /// </summary>
            /// <returns><see cref="Android.Icu.Number.NumberRangeFormatter.RangeIdentityFallback"/></returns>
            public static Android.Icu.Number.NumberRangeFormatter.RangeIdentityFallback[] Values()
            {
                return SExecuteWithSignatureArray<Android.Icu.Number.NumberRangeFormatter.RangeIdentityFallback>(LocalBridgeClazz, "values", "()[Landroid/icu/number/NumberRangeFormatter$RangeIdentityFallback;");
            }

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region RangeIdentityResult
        public partial class RangeIdentityResult
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/number/NumberRangeFormatter.RangeIdentityResult.html#EQUAL_AFTER_ROUNDING"/>
            /// </summary>
            public static Android.Icu.Number.NumberRangeFormatter.RangeIdentityResult EQUAL_AFTER_ROUNDING { get { if (!_EQUAL_AFTER_ROUNDINGReady) { _EQUAL_AFTER_ROUNDINGContent = SGetField<Android.Icu.Number.NumberRangeFormatter.RangeIdentityResult>(LocalBridgeClazz, "EQUAL_AFTER_ROUNDING"); _EQUAL_AFTER_ROUNDINGReady = true; } return _EQUAL_AFTER_ROUNDINGContent; } }
            private static Android.Icu.Number.NumberRangeFormatter.RangeIdentityResult _EQUAL_AFTER_ROUNDINGContent = default;
            private static bool _EQUAL_AFTER_ROUNDINGReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/number/NumberRangeFormatter.RangeIdentityResult.html#EQUAL_BEFORE_ROUNDING"/>
            /// </summary>
            public static Android.Icu.Number.NumberRangeFormatter.RangeIdentityResult EQUAL_BEFORE_ROUNDING { get { if (!_EQUAL_BEFORE_ROUNDINGReady) { _EQUAL_BEFORE_ROUNDINGContent = SGetField<Android.Icu.Number.NumberRangeFormatter.RangeIdentityResult>(LocalBridgeClazz, "EQUAL_BEFORE_ROUNDING"); _EQUAL_BEFORE_ROUNDINGReady = true; } return _EQUAL_BEFORE_ROUNDINGContent; } }
            private static Android.Icu.Number.NumberRangeFormatter.RangeIdentityResult _EQUAL_BEFORE_ROUNDINGContent = default;
            private static bool _EQUAL_BEFORE_ROUNDINGReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/number/NumberRangeFormatter.RangeIdentityResult.html#NOT_EQUAL"/>
            /// </summary>
            public static Android.Icu.Number.NumberRangeFormatter.RangeIdentityResult NOT_EQUAL { get { if (!_NOT_EQUALReady) { _NOT_EQUALContent = SGetField<Android.Icu.Number.NumberRangeFormatter.RangeIdentityResult>(LocalBridgeClazz, "NOT_EQUAL"); _NOT_EQUALReady = true; } return _NOT_EQUALContent; } }
            private static Android.Icu.Number.NumberRangeFormatter.RangeIdentityResult _NOT_EQUALContent = default;
            private static bool _NOT_EQUALReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/number/NumberRangeFormatter.RangeIdentityResult.html#valueOf(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Android.Icu.Number.NumberRangeFormatter.RangeIdentityResult"/></returns>
            public static Android.Icu.Number.NumberRangeFormatter.RangeIdentityResult ValueOf(Java.Lang.String arg0)
            {
                return SExecuteWithSignature<Android.Icu.Number.NumberRangeFormatter.RangeIdentityResult>(LocalBridgeClazz, "valueOf", "(Ljava/lang/String;)Landroid/icu/number/NumberRangeFormatter$RangeIdentityResult;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/number/NumberRangeFormatter.RangeIdentityResult.html#values()"/>
            /// </summary>
            /// <returns><see cref="Android.Icu.Number.NumberRangeFormatter.RangeIdentityResult"/></returns>
            public static Android.Icu.Number.NumberRangeFormatter.RangeIdentityResult[] Values()
            {
                return SExecuteWithSignatureArray<Android.Icu.Number.NumberRangeFormatter.RangeIdentityResult>(LocalBridgeClazz, "values", "()[Landroid/icu/number/NumberRangeFormatter$RangeIdentityResult;");
            }

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}