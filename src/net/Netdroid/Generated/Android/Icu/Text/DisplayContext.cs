/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.5.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Icu.Text
{
    #region DisplayContext
    public partial class DisplayContext
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DisplayContext.html#CAPITALIZATION_FOR_BEGINNING_OF_SENTENCE"/>
        /// </summary>
        public static Android.Icu.Text.DisplayContext CAPITALIZATION_FOR_BEGINNING_OF_SENTENCE { get { if (!_CAPITALIZATION_FOR_BEGINNING_OF_SENTENCEReady) { _CAPITALIZATION_FOR_BEGINNING_OF_SENTENCEContent = SGetField<Android.Icu.Text.DisplayContext>(LocalBridgeClazz, "CAPITALIZATION_FOR_BEGINNING_OF_SENTENCE"); _CAPITALIZATION_FOR_BEGINNING_OF_SENTENCEReady = true; } return _CAPITALIZATION_FOR_BEGINNING_OF_SENTENCEContent; } }
        private static Android.Icu.Text.DisplayContext _CAPITALIZATION_FOR_BEGINNING_OF_SENTENCEContent = default;
        private static bool _CAPITALIZATION_FOR_BEGINNING_OF_SENTENCEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DisplayContext.html#CAPITALIZATION_FOR_MIDDLE_OF_SENTENCE"/>
        /// </summary>
        public static Android.Icu.Text.DisplayContext CAPITALIZATION_FOR_MIDDLE_OF_SENTENCE { get { if (!_CAPITALIZATION_FOR_MIDDLE_OF_SENTENCEReady) { _CAPITALIZATION_FOR_MIDDLE_OF_SENTENCEContent = SGetField<Android.Icu.Text.DisplayContext>(LocalBridgeClazz, "CAPITALIZATION_FOR_MIDDLE_OF_SENTENCE"); _CAPITALIZATION_FOR_MIDDLE_OF_SENTENCEReady = true; } return _CAPITALIZATION_FOR_MIDDLE_OF_SENTENCEContent; } }
        private static Android.Icu.Text.DisplayContext _CAPITALIZATION_FOR_MIDDLE_OF_SENTENCEContent = default;
        private static bool _CAPITALIZATION_FOR_MIDDLE_OF_SENTENCEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DisplayContext.html#CAPITALIZATION_FOR_STANDALONE"/>
        /// </summary>
        public static Android.Icu.Text.DisplayContext CAPITALIZATION_FOR_STANDALONE { get { if (!_CAPITALIZATION_FOR_STANDALONEReady) { _CAPITALIZATION_FOR_STANDALONEContent = SGetField<Android.Icu.Text.DisplayContext>(LocalBridgeClazz, "CAPITALIZATION_FOR_STANDALONE"); _CAPITALIZATION_FOR_STANDALONEReady = true; } return _CAPITALIZATION_FOR_STANDALONEContent; } }
        private static Android.Icu.Text.DisplayContext _CAPITALIZATION_FOR_STANDALONEContent = default;
        private static bool _CAPITALIZATION_FOR_STANDALONEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DisplayContext.html#CAPITALIZATION_FOR_UI_LIST_OR_MENU"/>
        /// </summary>
        public static Android.Icu.Text.DisplayContext CAPITALIZATION_FOR_UI_LIST_OR_MENU { get { if (!_CAPITALIZATION_FOR_UI_LIST_OR_MENUReady) { _CAPITALIZATION_FOR_UI_LIST_OR_MENUContent = SGetField<Android.Icu.Text.DisplayContext>(LocalBridgeClazz, "CAPITALIZATION_FOR_UI_LIST_OR_MENU"); _CAPITALIZATION_FOR_UI_LIST_OR_MENUReady = true; } return _CAPITALIZATION_FOR_UI_LIST_OR_MENUContent; } }
        private static Android.Icu.Text.DisplayContext _CAPITALIZATION_FOR_UI_LIST_OR_MENUContent = default;
        private static bool _CAPITALIZATION_FOR_UI_LIST_OR_MENUReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DisplayContext.html#CAPITALIZATION_NONE"/>
        /// </summary>
        public static Android.Icu.Text.DisplayContext CAPITALIZATION_NONE { get { if (!_CAPITALIZATION_NONEReady) { _CAPITALIZATION_NONEContent = SGetField<Android.Icu.Text.DisplayContext>(LocalBridgeClazz, "CAPITALIZATION_NONE"); _CAPITALIZATION_NONEReady = true; } return _CAPITALIZATION_NONEContent; } }
        private static Android.Icu.Text.DisplayContext _CAPITALIZATION_NONEContent = default;
        private static bool _CAPITALIZATION_NONEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DisplayContext.html#DIALECT_NAMES"/>
        /// </summary>
        public static Android.Icu.Text.DisplayContext DIALECT_NAMES { get { if (!_DIALECT_NAMESReady) { _DIALECT_NAMESContent = SGetField<Android.Icu.Text.DisplayContext>(LocalBridgeClazz, "DIALECT_NAMES"); _DIALECT_NAMESReady = true; } return _DIALECT_NAMESContent; } }
        private static Android.Icu.Text.DisplayContext _DIALECT_NAMESContent = default;
        private static bool _DIALECT_NAMESReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DisplayContext.html#LENGTH_FULL"/>
        /// </summary>
        public static Android.Icu.Text.DisplayContext LENGTH_FULL { get { if (!_LENGTH_FULLReady) { _LENGTH_FULLContent = SGetField<Android.Icu.Text.DisplayContext>(LocalBridgeClazz, "LENGTH_FULL"); _LENGTH_FULLReady = true; } return _LENGTH_FULLContent; } }
        private static Android.Icu.Text.DisplayContext _LENGTH_FULLContent = default;
        private static bool _LENGTH_FULLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DisplayContext.html#LENGTH_SHORT"/>
        /// </summary>
        public static Android.Icu.Text.DisplayContext LENGTH_SHORT { get { if (!_LENGTH_SHORTReady) { _LENGTH_SHORTContent = SGetField<Android.Icu.Text.DisplayContext>(LocalBridgeClazz, "LENGTH_SHORT"); _LENGTH_SHORTReady = true; } return _LENGTH_SHORTContent; } }
        private static Android.Icu.Text.DisplayContext _LENGTH_SHORTContent = default;
        private static bool _LENGTH_SHORTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DisplayContext.html#NO_SUBSTITUTE"/>
        /// </summary>
        public static Android.Icu.Text.DisplayContext NO_SUBSTITUTE { get { if (!_NO_SUBSTITUTEReady) { _NO_SUBSTITUTEContent = SGetField<Android.Icu.Text.DisplayContext>(LocalBridgeClazz, "NO_SUBSTITUTE"); _NO_SUBSTITUTEReady = true; } return _NO_SUBSTITUTEContent; } }
        private static Android.Icu.Text.DisplayContext _NO_SUBSTITUTEContent = default;
        private static bool _NO_SUBSTITUTEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DisplayContext.html#STANDARD_NAMES"/>
        /// </summary>
        public static Android.Icu.Text.DisplayContext STANDARD_NAMES { get { if (!_STANDARD_NAMESReady) { _STANDARD_NAMESContent = SGetField<Android.Icu.Text.DisplayContext>(LocalBridgeClazz, "STANDARD_NAMES"); _STANDARD_NAMESReady = true; } return _STANDARD_NAMESContent; } }
        private static Android.Icu.Text.DisplayContext _STANDARD_NAMESContent = default;
        private static bool _STANDARD_NAMESReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DisplayContext.html#SUBSTITUTE"/>
        /// </summary>
        public static Android.Icu.Text.DisplayContext SUBSTITUTE { get { if (!_SUBSTITUTEReady) { _SUBSTITUTEContent = SGetField<Android.Icu.Text.DisplayContext>(LocalBridgeClazz, "SUBSTITUTE"); _SUBSTITUTEReady = true; } return _SUBSTITUTEContent; } }
        private static Android.Icu.Text.DisplayContext _SUBSTITUTEContent = default;
        private static bool _SUBSTITUTEReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DisplayContext.html#valueOf(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Android.Icu.Text.DisplayContext"/></returns>
        public static Android.Icu.Text.DisplayContext ValueOf(Java.Lang.String arg0)
        {
            return SExecuteWithSignature<Android.Icu.Text.DisplayContext>(LocalBridgeClazz, "valueOf", "(Ljava/lang/String;)Landroid/icu/text/DisplayContext;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DisplayContext.html#values()"/>
        /// </summary>
        /// <returns><see cref="Android.Icu.Text.DisplayContext"/></returns>
        public static Android.Icu.Text.DisplayContext[] Values()
        {
            return SExecuteWithSignatureArray<Android.Icu.Text.DisplayContext>(LocalBridgeClazz, "values", "()[Landroid/icu/text/DisplayContext;");
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DisplayContext.html#type()"/>
        /// </summary>
        /// <returns><see cref="Android.Icu.Text.DisplayContext.Type"/></returns>
        public Android.Icu.Text.DisplayContext.Type TypeMethod()
        {
            return IExecuteWithSignature<Android.Icu.Text.DisplayContext.Type>("type", "()Landroid/icu/text/DisplayContext$Type;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DisplayContext.html#value()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int Value()
        {
            return IExecuteWithSignature<int>("value", "()I");
        }

        #endregion

        #region Nested classes
        #region Type
        public partial class Type
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayContext.Type.html#CAPITALIZATION"/>
            /// </summary>
            public static Android.Icu.Text.DisplayContext.Type CAPITALIZATION { get { if (!_CAPITALIZATIONReady) { _CAPITALIZATIONContent = SGetField<Android.Icu.Text.DisplayContext.Type>(LocalBridgeClazz, "CAPITALIZATION"); _CAPITALIZATIONReady = true; } return _CAPITALIZATIONContent; } }
            private static Android.Icu.Text.DisplayContext.Type _CAPITALIZATIONContent = default;
            private static bool _CAPITALIZATIONReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayContext.Type.html#DIALECT_HANDLING"/>
            /// </summary>
            public static Android.Icu.Text.DisplayContext.Type DIALECT_HANDLING { get { if (!_DIALECT_HANDLINGReady) { _DIALECT_HANDLINGContent = SGetField<Android.Icu.Text.DisplayContext.Type>(LocalBridgeClazz, "DIALECT_HANDLING"); _DIALECT_HANDLINGReady = true; } return _DIALECT_HANDLINGContent; } }
            private static Android.Icu.Text.DisplayContext.Type _DIALECT_HANDLINGContent = default;
            private static bool _DIALECT_HANDLINGReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayContext.Type.html#DISPLAY_LENGTH"/>
            /// </summary>
            public static Android.Icu.Text.DisplayContext.Type DISPLAY_LENGTH { get { if (!_DISPLAY_LENGTHReady) { _DISPLAY_LENGTHContent = SGetField<Android.Icu.Text.DisplayContext.Type>(LocalBridgeClazz, "DISPLAY_LENGTH"); _DISPLAY_LENGTHReady = true; } return _DISPLAY_LENGTHContent; } }
            private static Android.Icu.Text.DisplayContext.Type _DISPLAY_LENGTHContent = default;
            private static bool _DISPLAY_LENGTHReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayContext.Type.html#SUBSTITUTE_HANDLING"/>
            /// </summary>
            public static Android.Icu.Text.DisplayContext.Type SUBSTITUTE_HANDLING { get { if (!_SUBSTITUTE_HANDLINGReady) { _SUBSTITUTE_HANDLINGContent = SGetField<Android.Icu.Text.DisplayContext.Type>(LocalBridgeClazz, "SUBSTITUTE_HANDLING"); _SUBSTITUTE_HANDLINGReady = true; } return _SUBSTITUTE_HANDLINGContent; } }
            private static Android.Icu.Text.DisplayContext.Type _SUBSTITUTE_HANDLINGContent = default;
            private static bool _SUBSTITUTE_HANDLINGReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayContext.Type.html#valueOf(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Android.Icu.Text.DisplayContext.Type"/></returns>
            public static Android.Icu.Text.DisplayContext.Type ValueOf(Java.Lang.String arg0)
            {
                return SExecuteWithSignature<Android.Icu.Text.DisplayContext.Type>(LocalBridgeClazz, "valueOf", "(Ljava/lang/String;)Landroid/icu/text/DisplayContext$Type;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayContext.Type.html#values()"/>
            /// </summary>
            /// <returns><see cref="Android.Icu.Text.DisplayContext.Type"/></returns>
            public static Android.Icu.Text.DisplayContext.Type[] Values()
            {
                return SExecuteWithSignatureArray<Android.Icu.Text.DisplayContext.Type>(LocalBridgeClazz, "values", "()[Landroid/icu/text/DisplayContext$Type;");
            }

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}