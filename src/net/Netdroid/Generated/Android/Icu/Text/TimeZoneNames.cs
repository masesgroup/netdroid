/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.4.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Icu.Text
{
    #region TimeZoneNames
    public partial class TimeZoneNames
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneNames.html#getInstance(android.icu.util.ULocale)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Util.ULocale"/></param>
        /// <returns><see cref="Android.Icu.Text.TimeZoneNames"/></returns>
        public static Android.Icu.Text.TimeZoneNames GetInstance(Android.Icu.Util.ULocale arg0)
        {
            return SExecuteWithSignature<Android.Icu.Text.TimeZoneNames>(LocalBridgeClazz, "getInstance", "(Landroid/icu/util/ULocale;)Landroid/icu/text/TimeZoneNames;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneNames.html#getInstance(java.util.Locale)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Locale"/></param>
        /// <returns><see cref="Android.Icu.Text.TimeZoneNames"/></returns>
        public static Android.Icu.Text.TimeZoneNames GetInstance(Java.Util.Locale arg0)
        {
            return SExecuteWithSignature<Android.Icu.Text.TimeZoneNames>(LocalBridgeClazz, "getInstance", "(Ljava/util/Locale;)Landroid/icu/text/TimeZoneNames;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneNames.html#getTZDBInstance(android.icu.util.ULocale)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Util.ULocale"/></param>
        /// <returns><see cref="Android.Icu.Text.TimeZoneNames"/></returns>
        public static Android.Icu.Text.TimeZoneNames GetTZDBInstance(Android.Icu.Util.ULocale arg0)
        {
            return SExecuteWithSignature<Android.Icu.Text.TimeZoneNames>(LocalBridgeClazz, "getTZDBInstance", "(Landroid/icu/util/ULocale;)Landroid/icu/text/TimeZoneNames;", arg0);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneNames.html#getMetaZoneDisplayName(java.lang.String,android.icu.text.TimeZoneNames.NameType)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Android.Icu.Text.TimeZoneNames.NameType"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetMetaZoneDisplayName(Java.Lang.String arg0, Android.Icu.Text.TimeZoneNames.NameType arg1)
        {
            return IExecute<Java.Lang.String>("getMetaZoneDisplayName", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneNames.html#getMetaZoneID(java.lang.String,long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="long"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetMetaZoneID(Java.Lang.String arg0, long arg1)
        {
            return IExecute<Java.Lang.String>("getMetaZoneID", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneNames.html#getReferenceZoneID(java.lang.String,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetReferenceZoneID(Java.Lang.String arg0, Java.Lang.String arg1)
        {
            return IExecute<Java.Lang.String>("getReferenceZoneID", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneNames.html#getTimeZoneDisplayName(java.lang.String,android.icu.text.TimeZoneNames.NameType)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Android.Icu.Text.TimeZoneNames.NameType"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetTimeZoneDisplayName(Java.Lang.String arg0, Android.Icu.Text.TimeZoneNames.NameType arg1)
        {
            return IExecute<Java.Lang.String>("getTimeZoneDisplayName", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneNames.html#getAvailableMetaZoneIDs()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.Set"/></returns>
        public Java.Util.Set<Java.Lang.String> GetAvailableMetaZoneIDs()
        {
            return IExecuteWithSignature<Java.Util.Set<Java.Lang.String>>("getAvailableMetaZoneIDs", "()Ljava/util/Set;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneNames.html#getAvailableMetaZoneIDs(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Java.Util.Set"/></returns>
        public Java.Util.Set<Java.Lang.String> GetAvailableMetaZoneIDs(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<Java.Util.Set<Java.Lang.String>>("getAvailableMetaZoneIDs", "(Ljava/lang/String;)Ljava/util/Set;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneNames.html#getDisplayName(java.lang.String,android.icu.text.TimeZoneNames.NameType,long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Android.Icu.Text.TimeZoneNames.NameType"/></param>
        /// <param name="arg2"><see cref="long"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetDisplayName(Java.Lang.String arg0, Android.Icu.Text.TimeZoneNames.NameType arg1, long arg2)
        {
            return IExecute<Java.Lang.String>("getDisplayName", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneNames.html#getExemplarLocationName(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetExemplarLocationName(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<Java.Lang.String>("getExemplarLocationName", "(Ljava/lang/String;)Ljava/lang/String;", arg0);
        }

        #endregion

        #region Nested classes
        #region NameType
        public partial class NameType
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneNames.NameType.html#EXEMPLAR_LOCATION"/>
            /// </summary>
            public static Android.Icu.Text.TimeZoneNames.NameType EXEMPLAR_LOCATION { get { if (!_EXEMPLAR_LOCATIONReady) { _EXEMPLAR_LOCATIONContent = SGetField<Android.Icu.Text.TimeZoneNames.NameType>(LocalBridgeClazz, "EXEMPLAR_LOCATION"); _EXEMPLAR_LOCATIONReady = true; } return _EXEMPLAR_LOCATIONContent; } }
            private static Android.Icu.Text.TimeZoneNames.NameType _EXEMPLAR_LOCATIONContent = default;
            private static bool _EXEMPLAR_LOCATIONReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneNames.NameType.html#LONG_DAYLIGHT"/>
            /// </summary>
            public static Android.Icu.Text.TimeZoneNames.NameType LONG_DAYLIGHT { get { if (!_LONG_DAYLIGHTReady) { _LONG_DAYLIGHTContent = SGetField<Android.Icu.Text.TimeZoneNames.NameType>(LocalBridgeClazz, "LONG_DAYLIGHT"); _LONG_DAYLIGHTReady = true; } return _LONG_DAYLIGHTContent; } }
            private static Android.Icu.Text.TimeZoneNames.NameType _LONG_DAYLIGHTContent = default;
            private static bool _LONG_DAYLIGHTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneNames.NameType.html#LONG_GENERIC"/>
            /// </summary>
            public static Android.Icu.Text.TimeZoneNames.NameType LONG_GENERIC { get { if (!_LONG_GENERICReady) { _LONG_GENERICContent = SGetField<Android.Icu.Text.TimeZoneNames.NameType>(LocalBridgeClazz, "LONG_GENERIC"); _LONG_GENERICReady = true; } return _LONG_GENERICContent; } }
            private static Android.Icu.Text.TimeZoneNames.NameType _LONG_GENERICContent = default;
            private static bool _LONG_GENERICReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneNames.NameType.html#LONG_STANDARD"/>
            /// </summary>
            public static Android.Icu.Text.TimeZoneNames.NameType LONG_STANDARD { get { if (!_LONG_STANDARDReady) { _LONG_STANDARDContent = SGetField<Android.Icu.Text.TimeZoneNames.NameType>(LocalBridgeClazz, "LONG_STANDARD"); _LONG_STANDARDReady = true; } return _LONG_STANDARDContent; } }
            private static Android.Icu.Text.TimeZoneNames.NameType _LONG_STANDARDContent = default;
            private static bool _LONG_STANDARDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneNames.NameType.html#SHORT_DAYLIGHT"/>
            /// </summary>
            public static Android.Icu.Text.TimeZoneNames.NameType SHORT_DAYLIGHT { get { if (!_SHORT_DAYLIGHTReady) { _SHORT_DAYLIGHTContent = SGetField<Android.Icu.Text.TimeZoneNames.NameType>(LocalBridgeClazz, "SHORT_DAYLIGHT"); _SHORT_DAYLIGHTReady = true; } return _SHORT_DAYLIGHTContent; } }
            private static Android.Icu.Text.TimeZoneNames.NameType _SHORT_DAYLIGHTContent = default;
            private static bool _SHORT_DAYLIGHTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneNames.NameType.html#SHORT_GENERIC"/>
            /// </summary>
            public static Android.Icu.Text.TimeZoneNames.NameType SHORT_GENERIC { get { if (!_SHORT_GENERICReady) { _SHORT_GENERICContent = SGetField<Android.Icu.Text.TimeZoneNames.NameType>(LocalBridgeClazz, "SHORT_GENERIC"); _SHORT_GENERICReady = true; } return _SHORT_GENERICContent; } }
            private static Android.Icu.Text.TimeZoneNames.NameType _SHORT_GENERICContent = default;
            private static bool _SHORT_GENERICReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneNames.NameType.html#SHORT_STANDARD"/>
            /// </summary>
            public static Android.Icu.Text.TimeZoneNames.NameType SHORT_STANDARD { get { if (!_SHORT_STANDARDReady) { _SHORT_STANDARDContent = SGetField<Android.Icu.Text.TimeZoneNames.NameType>(LocalBridgeClazz, "SHORT_STANDARD"); _SHORT_STANDARDReady = true; } return _SHORT_STANDARDContent; } }
            private static Android.Icu.Text.TimeZoneNames.NameType _SHORT_STANDARDContent = default;
            private static bool _SHORT_STANDARDReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneNames.NameType.html#valueOf(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Android.Icu.Text.TimeZoneNames.NameType"/></returns>
            public static Android.Icu.Text.TimeZoneNames.NameType ValueOf(Java.Lang.String arg0)
            {
                return SExecuteWithSignature<Android.Icu.Text.TimeZoneNames.NameType>(LocalBridgeClazz, "valueOf", "(Ljava/lang/String;)Landroid/icu/text/TimeZoneNames$NameType;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneNames.NameType.html#values()"/>
            /// </summary>
            /// <returns><see cref="Android.Icu.Text.TimeZoneNames.NameType"/></returns>
            public static Android.Icu.Text.TimeZoneNames.NameType[] Values()
            {
                return SExecuteWithSignatureArray<Android.Icu.Text.TimeZoneNames.NameType>(LocalBridgeClazz, "values", "()[Landroid/icu/text/TimeZoneNames$NameType;");
            }

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}