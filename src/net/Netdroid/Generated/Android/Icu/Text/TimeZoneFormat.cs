/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.2.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Icu.Text
{
    #region TimeZoneFormat
    public partial class TimeZoneFormat : Android.Icu.Util.IFreezable<Android.Icu.Text.TimeZoneFormat>, Java.Io.ISerializable
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Android.Icu.Text.TimeZoneFormat"/> to <see cref="Android.Icu.Util.Freezable"/>
        /// </summary>
        public static implicit operator Android.Icu.Util.Freezable(Android.Icu.Text.TimeZoneFormat t) => t.Cast<Android.Icu.Util.Freezable>();
        /// <summary>
        /// Converter from <see cref="Android.Icu.Text.TimeZoneFormat"/> to <see cref="Java.Io.Serializable"/>
        /// </summary>
        public static implicit operator Java.Io.Serializable(Android.Icu.Text.TimeZoneFormat t) => t.Cast<Java.Io.Serializable>();

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#getInstance(android.icu.util.ULocale)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Util.ULocale"/></param>
        /// <returns><see cref="Android.Icu.Text.TimeZoneFormat"/></returns>
        public static Android.Icu.Text.TimeZoneFormat GetInstance(Android.Icu.Util.ULocale arg0)
        {
            return SExecuteWithSignature<Android.Icu.Text.TimeZoneFormat>(LocalBridgeClazz, "getInstance", "(Landroid/icu/util/ULocale;)Landroid/icu/text/TimeZoneFormat;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#getInstance(java.util.Locale)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Locale"/></param>
        /// <returns><see cref="Android.Icu.Text.TimeZoneFormat"/></returns>
        public static Android.Icu.Text.TimeZoneFormat GetInstance(Java.Util.Locale arg0)
        {
            return SExecuteWithSignature<Android.Icu.Text.TimeZoneFormat>(LocalBridgeClazz, "getInstance", "(Ljava/util/Locale;)Landroid/icu/text/TimeZoneFormat;", arg0);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#setDefaultParseOptions(java.util.EnumSet)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.EnumSet"/></param>
        /// <returns><see cref="Android.Icu.Text.TimeZoneFormat"/></returns>
        public Android.Icu.Text.TimeZoneFormat SetDefaultParseOptions(Java.Util.EnumSet<Android.Icu.Text.TimeZoneFormat.ParseOption> arg0)
        {
            return IExecuteWithSignature<Android.Icu.Text.TimeZoneFormat>("setDefaultParseOptions", "(Ljava/util/EnumSet;)Landroid/icu/text/TimeZoneFormat;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#setGMTOffsetDigits(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Android.Icu.Text.TimeZoneFormat"/></returns>
        public Android.Icu.Text.TimeZoneFormat SetGMTOffsetDigits(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<Android.Icu.Text.TimeZoneFormat>("setGMTOffsetDigits", "(Ljava/lang/String;)Landroid/icu/text/TimeZoneFormat;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#setGMTOffsetPattern(android.icu.text.TimeZoneFormat.GMTOffsetPatternType,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Text.TimeZoneFormat.GMTOffsetPatternType"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Android.Icu.Text.TimeZoneFormat"/></returns>
        public Android.Icu.Text.TimeZoneFormat SetGMTOffsetPattern(Android.Icu.Text.TimeZoneFormat.GMTOffsetPatternType arg0, Java.Lang.String arg1)
        {
            return IExecute<Android.Icu.Text.TimeZoneFormat>("setGMTOffsetPattern", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#setGMTPattern(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Android.Icu.Text.TimeZoneFormat"/></returns>
        public Android.Icu.Text.TimeZoneFormat SetGMTPattern(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<Android.Icu.Text.TimeZoneFormat>("setGMTPattern", "(Ljava/lang/String;)Landroid/icu/text/TimeZoneFormat;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#setGMTZeroFormat(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Android.Icu.Text.TimeZoneFormat"/></returns>
        public Android.Icu.Text.TimeZoneFormat SetGMTZeroFormat(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<Android.Icu.Text.TimeZoneFormat>("setGMTZeroFormat", "(Ljava/lang/String;)Landroid/icu/text/TimeZoneFormat;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#setTimeZoneNames(android.icu.text.TimeZoneNames)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Text.TimeZoneNames"/></param>
        /// <returns><see cref="Android.Icu.Text.TimeZoneFormat"/></returns>
        public Android.Icu.Text.TimeZoneFormat SetTimeZoneNames(Android.Icu.Text.TimeZoneNames arg0)
        {
            return IExecuteWithSignature<Android.Icu.Text.TimeZoneFormat>("setTimeZoneNames", "(Landroid/icu/text/TimeZoneNames;)Landroid/icu/text/TimeZoneFormat;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#getTimeZoneNames()"/>
        /// </summary>
        /// <returns><see cref="Android.Icu.Text.TimeZoneNames"/></returns>
        public Android.Icu.Text.TimeZoneNames GetTimeZoneNames()
        {
            return IExecuteWithSignature<Android.Icu.Text.TimeZoneNames>("getTimeZoneNames", "()Landroid/icu/text/TimeZoneNames;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#parse(android.icu.text.TimeZoneFormat.Style,java.lang.String,java.text.ParsePosition,android.icu.util.Output)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Text.TimeZoneFormat.Style"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="Java.Text.ParsePosition"/></param>
        /// <param name="arg3"><see cref="Android.Icu.Util.Output"/></param>
        /// <returns><see cref="Android.Icu.Util.TimeZone"/></returns>
        public Android.Icu.Util.TimeZone Parse(Android.Icu.Text.TimeZoneFormat.Style arg0, Java.Lang.String arg1, Java.Text.ParsePosition arg2, Android.Icu.Util.Output<Android.Icu.Text.TimeZoneFormat.TimeType> arg3)
        {
            return IExecute<Android.Icu.Util.TimeZone>("parse", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#parse(android.icu.text.TimeZoneFormat.Style,java.lang.String,java.text.ParsePosition,java.util.EnumSet,android.icu.util.Output)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Text.TimeZoneFormat.Style"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="Java.Text.ParsePosition"/></param>
        /// <param name="arg3"><see cref="Java.Util.EnumSet"/></param>
        /// <param name="arg4"><see cref="Android.Icu.Util.Output"/></param>
        /// <returns><see cref="Android.Icu.Util.TimeZone"/></returns>
        public Android.Icu.Util.TimeZone Parse(Android.Icu.Text.TimeZoneFormat.Style arg0, Java.Lang.String arg1, Java.Text.ParsePosition arg2, Java.Util.EnumSet<Android.Icu.Text.TimeZoneFormat.ParseOption> arg3, Android.Icu.Util.Output<Android.Icu.Text.TimeZoneFormat.TimeType> arg4)
        {
            return IExecute<Android.Icu.Util.TimeZone>("parse", arg0, arg1, arg2, arg3, arg4);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#isFrozen()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsFrozen()
        {
            return IExecuteWithSignature<bool>("isFrozen", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#parse(java.lang.String,java.text.ParsePosition)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Java.Text.ParsePosition"/></param>
        /// <returns><see cref="Android.Icu.Util.TimeZone"/></returns>
        public Android.Icu.Util.TimeZone Parse(Java.Lang.String arg0, Java.Text.ParsePosition arg1)
        {
            return IExecute<Android.Icu.Util.TimeZone>("parse", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#parse(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Android.Icu.Util.TimeZone"/></returns>
        /// <exception cref="Java.Text.ParseException"/>
        public Android.Icu.Util.TimeZone Parse(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<Android.Icu.Util.TimeZone>("parse", "(Ljava/lang/String;)Landroid/icu/util/TimeZone;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#parseOffsetISO8601(java.lang.String,java.text.ParsePosition)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Java.Text.ParsePosition"/></param>
        /// <returns><see cref="int"/></returns>
        public int ParseOffsetISO8601(Java.Lang.String arg0, Java.Text.ParsePosition arg1)
        {
            return IExecute<int>("parseOffsetISO8601", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#format(android.icu.text.TimeZoneFormat.Style,android.icu.util.TimeZone,long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Text.TimeZoneFormat.Style"/></param>
        /// <param name="arg1"><see cref="Android.Icu.Util.TimeZone"/></param>
        /// <param name="arg2"><see cref="long"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String Format(Android.Icu.Text.TimeZoneFormat.Style arg0, Android.Icu.Util.TimeZone arg1, long arg2)
        {
            return IExecute<Java.Lang.String>("format", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#formatOffsetISO8601Basic(int,boolean,boolean,boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="bool"/></param>
        /// <param name="arg2"><see cref="bool"/></param>
        /// <param name="arg3"><see cref="bool"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String FormatOffsetISO8601Basic(int arg0, bool arg1, bool arg2, bool arg3)
        {
            return IExecute<Java.Lang.String>("formatOffsetISO8601Basic", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#formatOffsetISO8601Extended(int,boolean,boolean,boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="bool"/></param>
        /// <param name="arg2"><see cref="bool"/></param>
        /// <param name="arg3"><see cref="bool"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String FormatOffsetISO8601Extended(int arg0, bool arg1, bool arg2, bool arg3)
        {
            return IExecute<Java.Lang.String>("formatOffsetISO8601Extended", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#parseOffsetLocalizedGMT(java.lang.String,java.text.ParsePosition)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Java.Text.ParsePosition"/></param>
        /// <returns><see cref="int"/></returns>
        public int ParseOffsetLocalizedGMT(Java.Lang.String arg0, Java.Text.ParsePosition arg1)
        {
            return IExecute<int>("parseOffsetLocalizedGMT", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#parseOffsetShortLocalizedGMT(java.lang.String,java.text.ParsePosition)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Java.Text.ParsePosition"/></param>
        /// <returns><see cref="int"/></returns>
        public int ParseOffsetShortLocalizedGMT(Java.Lang.String arg0, Java.Text.ParsePosition arg1)
        {
            return IExecute<int>("parseOffsetShortLocalizedGMT", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#cloneAsThawed()"/>
        /// </summary>
        /// <returns><see cref="object"/></returns>
        public object CloneAsThawed()
        {
            return IExecuteWithSignature("cloneAsThawed", "()Ljava/lang/Object;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#freeze()"/>
        /// </summary>
        /// <returns><see cref="object"/></returns>
        public object Freeze()
        {
            return IExecuteWithSignature("freeze", "()Ljava/lang/Object;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#format(android.icu.text.TimeZoneFormat.Style,android.icu.util.TimeZone,long,android.icu.util.Output)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Text.TimeZoneFormat.Style"/></param>
        /// <param name="arg1"><see cref="Android.Icu.Util.TimeZone"/></param>
        /// <param name="arg2"><see cref="long"/></param>
        /// <param name="arg3"><see cref="Android.Icu.Util.Output"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String Format(Android.Icu.Text.TimeZoneFormat.Style arg0, Android.Icu.Util.TimeZone arg1, long arg2, Android.Icu.Util.Output<Android.Icu.Text.TimeZoneFormat.TimeType> arg3)
        {
            return IExecute<Java.Lang.String>("format", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#formatOffsetLocalizedGMT(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String FormatOffsetLocalizedGMT(int arg0)
        {
            return IExecuteWithSignature<Java.Lang.String>("formatOffsetLocalizedGMT", "(I)Ljava/lang/String;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#formatOffsetShortLocalizedGMT(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String FormatOffsetShortLocalizedGMT(int arg0)
        {
            return IExecuteWithSignature<Java.Lang.String>("formatOffsetShortLocalizedGMT", "(I)Ljava/lang/String;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#getGMTOffsetDigits()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetGMTOffsetDigits()
        {
            return IExecuteWithSignature<Java.Lang.String>("getGMTOffsetDigits", "()Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#getGMTOffsetPattern(android.icu.text.TimeZoneFormat.GMTOffsetPatternType)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Text.TimeZoneFormat.GMTOffsetPatternType"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetGMTOffsetPattern(Android.Icu.Text.TimeZoneFormat.GMTOffsetPatternType arg0)
        {
            return IExecuteWithSignature<Java.Lang.String>("getGMTOffsetPattern", "(Landroid/icu/text/TimeZoneFormat$GMTOffsetPatternType;)Ljava/lang/String;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#getGMTPattern()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetGMTPattern()
        {
            return IExecuteWithSignature<Java.Lang.String>("getGMTPattern", "()Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#getGMTZeroFormat()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetGMTZeroFormat()
        {
            return IExecuteWithSignature<Java.Lang.String>("getGMTZeroFormat", "()Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html#getDefaultParseOptions()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.EnumSet"/></returns>
        public Java.Util.EnumSet<Android.Icu.Text.TimeZoneFormat.ParseOption> GetDefaultParseOptions()
        {
            return IExecuteWithSignature<Java.Util.EnumSet<Android.Icu.Text.TimeZoneFormat.ParseOption>>("getDefaultParseOptions", "()Ljava/util/EnumSet;");
        }

        #endregion

        #region Nested classes
        #region GMTOffsetPatternType
        public partial class GMTOffsetPatternType
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.GMTOffsetPatternType.html#NEGATIVE_H"/>
            /// </summary>
            public static Android.Icu.Text.TimeZoneFormat.GMTOffsetPatternType NEGATIVE_H { get { if (!_NEGATIVE_HReady) { _NEGATIVE_HContent = SGetField<Android.Icu.Text.TimeZoneFormat.GMTOffsetPatternType>(LocalBridgeClazz, "NEGATIVE_H"); _NEGATIVE_HReady = true; } return _NEGATIVE_HContent; } }
            private static Android.Icu.Text.TimeZoneFormat.GMTOffsetPatternType _NEGATIVE_HContent = default;
            private static bool _NEGATIVE_HReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.GMTOffsetPatternType.html#NEGATIVE_HM"/>
            /// </summary>
            public static Android.Icu.Text.TimeZoneFormat.GMTOffsetPatternType NEGATIVE_HM { get { if (!_NEGATIVE_HMReady) { _NEGATIVE_HMContent = SGetField<Android.Icu.Text.TimeZoneFormat.GMTOffsetPatternType>(LocalBridgeClazz, "NEGATIVE_HM"); _NEGATIVE_HMReady = true; } return _NEGATIVE_HMContent; } }
            private static Android.Icu.Text.TimeZoneFormat.GMTOffsetPatternType _NEGATIVE_HMContent = default;
            private static bool _NEGATIVE_HMReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.GMTOffsetPatternType.html#NEGATIVE_HMS"/>
            /// </summary>
            public static Android.Icu.Text.TimeZoneFormat.GMTOffsetPatternType NEGATIVE_HMS { get { if (!_NEGATIVE_HMSReady) { _NEGATIVE_HMSContent = SGetField<Android.Icu.Text.TimeZoneFormat.GMTOffsetPatternType>(LocalBridgeClazz, "NEGATIVE_HMS"); _NEGATIVE_HMSReady = true; } return _NEGATIVE_HMSContent; } }
            private static Android.Icu.Text.TimeZoneFormat.GMTOffsetPatternType _NEGATIVE_HMSContent = default;
            private static bool _NEGATIVE_HMSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.GMTOffsetPatternType.html#POSITIVE_H"/>
            /// </summary>
            public static Android.Icu.Text.TimeZoneFormat.GMTOffsetPatternType POSITIVE_H { get { if (!_POSITIVE_HReady) { _POSITIVE_HContent = SGetField<Android.Icu.Text.TimeZoneFormat.GMTOffsetPatternType>(LocalBridgeClazz, "POSITIVE_H"); _POSITIVE_HReady = true; } return _POSITIVE_HContent; } }
            private static Android.Icu.Text.TimeZoneFormat.GMTOffsetPatternType _POSITIVE_HContent = default;
            private static bool _POSITIVE_HReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.GMTOffsetPatternType.html#POSITIVE_HM"/>
            /// </summary>
            public static Android.Icu.Text.TimeZoneFormat.GMTOffsetPatternType POSITIVE_HM { get { if (!_POSITIVE_HMReady) { _POSITIVE_HMContent = SGetField<Android.Icu.Text.TimeZoneFormat.GMTOffsetPatternType>(LocalBridgeClazz, "POSITIVE_HM"); _POSITIVE_HMReady = true; } return _POSITIVE_HMContent; } }
            private static Android.Icu.Text.TimeZoneFormat.GMTOffsetPatternType _POSITIVE_HMContent = default;
            private static bool _POSITIVE_HMReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.GMTOffsetPatternType.html#POSITIVE_HMS"/>
            /// </summary>
            public static Android.Icu.Text.TimeZoneFormat.GMTOffsetPatternType POSITIVE_HMS { get { if (!_POSITIVE_HMSReady) { _POSITIVE_HMSContent = SGetField<Android.Icu.Text.TimeZoneFormat.GMTOffsetPatternType>(LocalBridgeClazz, "POSITIVE_HMS"); _POSITIVE_HMSReady = true; } return _POSITIVE_HMSContent; } }
            private static Android.Icu.Text.TimeZoneFormat.GMTOffsetPatternType _POSITIVE_HMSContent = default;
            private static bool _POSITIVE_HMSReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.GMTOffsetPatternType.html#valueOf(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Android.Icu.Text.TimeZoneFormat.GMTOffsetPatternType"/></returns>
            public static Android.Icu.Text.TimeZoneFormat.GMTOffsetPatternType ValueOf(Java.Lang.String arg0)
            {
                return SExecuteWithSignature<Android.Icu.Text.TimeZoneFormat.GMTOffsetPatternType>(LocalBridgeClazz, "valueOf", "(Ljava/lang/String;)Landroid/icu/text/TimeZoneFormat$GMTOffsetPatternType;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.GMTOffsetPatternType.html#values()"/>
            /// </summary>
            /// <returns><see cref="Android.Icu.Text.TimeZoneFormat.GMTOffsetPatternType"/></returns>
            public static Android.Icu.Text.TimeZoneFormat.GMTOffsetPatternType[] Values()
            {
                return SExecuteWithSignatureArray<Android.Icu.Text.TimeZoneFormat.GMTOffsetPatternType>(LocalBridgeClazz, "values", "()[Landroid/icu/text/TimeZoneFormat$GMTOffsetPatternType;");
            }

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region ParseOption
        public partial class ParseOption
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.ParseOption.html#ALL_STYLES"/>
            /// </summary>
            public static Android.Icu.Text.TimeZoneFormat.ParseOption ALL_STYLES { get { if (!_ALL_STYLESReady) { _ALL_STYLESContent = SGetField<Android.Icu.Text.TimeZoneFormat.ParseOption>(LocalBridgeClazz, "ALL_STYLES"); _ALL_STYLESReady = true; } return _ALL_STYLESContent; } }
            private static Android.Icu.Text.TimeZoneFormat.ParseOption _ALL_STYLESContent = default;
            private static bool _ALL_STYLESReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.ParseOption.html#TZ_DATABASE_ABBREVIATIONS"/>
            /// </summary>
            public static Android.Icu.Text.TimeZoneFormat.ParseOption TZ_DATABASE_ABBREVIATIONS { get { if (!_TZ_DATABASE_ABBREVIATIONSReady) { _TZ_DATABASE_ABBREVIATIONSContent = SGetField<Android.Icu.Text.TimeZoneFormat.ParseOption>(LocalBridgeClazz, "TZ_DATABASE_ABBREVIATIONS"); _TZ_DATABASE_ABBREVIATIONSReady = true; } return _TZ_DATABASE_ABBREVIATIONSContent; } }
            private static Android.Icu.Text.TimeZoneFormat.ParseOption _TZ_DATABASE_ABBREVIATIONSContent = default;
            private static bool _TZ_DATABASE_ABBREVIATIONSReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.ParseOption.html#valueOf(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Android.Icu.Text.TimeZoneFormat.ParseOption"/></returns>
            public static Android.Icu.Text.TimeZoneFormat.ParseOption ValueOf(Java.Lang.String arg0)
            {
                return SExecuteWithSignature<Android.Icu.Text.TimeZoneFormat.ParseOption>(LocalBridgeClazz, "valueOf", "(Ljava/lang/String;)Landroid/icu/text/TimeZoneFormat$ParseOption;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.ParseOption.html#values()"/>
            /// </summary>
            /// <returns><see cref="Android.Icu.Text.TimeZoneFormat.ParseOption"/></returns>
            public static Android.Icu.Text.TimeZoneFormat.ParseOption[] Values()
            {
                return SExecuteWithSignatureArray<Android.Icu.Text.TimeZoneFormat.ParseOption>(LocalBridgeClazz, "values", "()[Landroid/icu/text/TimeZoneFormat$ParseOption;");
            }

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region Style
        public partial class Style
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.Style.html#EXEMPLAR_LOCATION"/>
            /// </summary>
            public static Android.Icu.Text.TimeZoneFormat.Style EXEMPLAR_LOCATION { get { if (!_EXEMPLAR_LOCATIONReady) { _EXEMPLAR_LOCATIONContent = SGetField<Android.Icu.Text.TimeZoneFormat.Style>(LocalBridgeClazz, "EXEMPLAR_LOCATION"); _EXEMPLAR_LOCATIONReady = true; } return _EXEMPLAR_LOCATIONContent; } }
            private static Android.Icu.Text.TimeZoneFormat.Style _EXEMPLAR_LOCATIONContent = default;
            private static bool _EXEMPLAR_LOCATIONReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.Style.html#GENERIC_LOCATION"/>
            /// </summary>
            public static Android.Icu.Text.TimeZoneFormat.Style GENERIC_LOCATION { get { if (!_GENERIC_LOCATIONReady) { _GENERIC_LOCATIONContent = SGetField<Android.Icu.Text.TimeZoneFormat.Style>(LocalBridgeClazz, "GENERIC_LOCATION"); _GENERIC_LOCATIONReady = true; } return _GENERIC_LOCATIONContent; } }
            private static Android.Icu.Text.TimeZoneFormat.Style _GENERIC_LOCATIONContent = default;
            private static bool _GENERIC_LOCATIONReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.Style.html#GENERIC_LONG"/>
            /// </summary>
            public static Android.Icu.Text.TimeZoneFormat.Style GENERIC_LONG { get { if (!_GENERIC_LONGReady) { _GENERIC_LONGContent = SGetField<Android.Icu.Text.TimeZoneFormat.Style>(LocalBridgeClazz, "GENERIC_LONG"); _GENERIC_LONGReady = true; } return _GENERIC_LONGContent; } }
            private static Android.Icu.Text.TimeZoneFormat.Style _GENERIC_LONGContent = default;
            private static bool _GENERIC_LONGReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.Style.html#GENERIC_SHORT"/>
            /// </summary>
            public static Android.Icu.Text.TimeZoneFormat.Style GENERIC_SHORT { get { if (!_GENERIC_SHORTReady) { _GENERIC_SHORTContent = SGetField<Android.Icu.Text.TimeZoneFormat.Style>(LocalBridgeClazz, "GENERIC_SHORT"); _GENERIC_SHORTReady = true; } return _GENERIC_SHORTContent; } }
            private static Android.Icu.Text.TimeZoneFormat.Style _GENERIC_SHORTContent = default;
            private static bool _GENERIC_SHORTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.Style.html#ISO_BASIC_FIXED"/>
            /// </summary>
            public static Android.Icu.Text.TimeZoneFormat.Style ISO_BASIC_FIXED { get { if (!_ISO_BASIC_FIXEDReady) { _ISO_BASIC_FIXEDContent = SGetField<Android.Icu.Text.TimeZoneFormat.Style>(LocalBridgeClazz, "ISO_BASIC_FIXED"); _ISO_BASIC_FIXEDReady = true; } return _ISO_BASIC_FIXEDContent; } }
            private static Android.Icu.Text.TimeZoneFormat.Style _ISO_BASIC_FIXEDContent = default;
            private static bool _ISO_BASIC_FIXEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.Style.html#ISO_BASIC_FULL"/>
            /// </summary>
            public static Android.Icu.Text.TimeZoneFormat.Style ISO_BASIC_FULL { get { if (!_ISO_BASIC_FULLReady) { _ISO_BASIC_FULLContent = SGetField<Android.Icu.Text.TimeZoneFormat.Style>(LocalBridgeClazz, "ISO_BASIC_FULL"); _ISO_BASIC_FULLReady = true; } return _ISO_BASIC_FULLContent; } }
            private static Android.Icu.Text.TimeZoneFormat.Style _ISO_BASIC_FULLContent = default;
            private static bool _ISO_BASIC_FULLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.Style.html#ISO_BASIC_LOCAL_FIXED"/>
            /// </summary>
            public static Android.Icu.Text.TimeZoneFormat.Style ISO_BASIC_LOCAL_FIXED { get { if (!_ISO_BASIC_LOCAL_FIXEDReady) { _ISO_BASIC_LOCAL_FIXEDContent = SGetField<Android.Icu.Text.TimeZoneFormat.Style>(LocalBridgeClazz, "ISO_BASIC_LOCAL_FIXED"); _ISO_BASIC_LOCAL_FIXEDReady = true; } return _ISO_BASIC_LOCAL_FIXEDContent; } }
            private static Android.Icu.Text.TimeZoneFormat.Style _ISO_BASIC_LOCAL_FIXEDContent = default;
            private static bool _ISO_BASIC_LOCAL_FIXEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.Style.html#ISO_BASIC_LOCAL_FULL"/>
            /// </summary>
            public static Android.Icu.Text.TimeZoneFormat.Style ISO_BASIC_LOCAL_FULL { get { if (!_ISO_BASIC_LOCAL_FULLReady) { _ISO_BASIC_LOCAL_FULLContent = SGetField<Android.Icu.Text.TimeZoneFormat.Style>(LocalBridgeClazz, "ISO_BASIC_LOCAL_FULL"); _ISO_BASIC_LOCAL_FULLReady = true; } return _ISO_BASIC_LOCAL_FULLContent; } }
            private static Android.Icu.Text.TimeZoneFormat.Style _ISO_BASIC_LOCAL_FULLContent = default;
            private static bool _ISO_BASIC_LOCAL_FULLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.Style.html#ISO_BASIC_LOCAL_SHORT"/>
            /// </summary>
            public static Android.Icu.Text.TimeZoneFormat.Style ISO_BASIC_LOCAL_SHORT { get { if (!_ISO_BASIC_LOCAL_SHORTReady) { _ISO_BASIC_LOCAL_SHORTContent = SGetField<Android.Icu.Text.TimeZoneFormat.Style>(LocalBridgeClazz, "ISO_BASIC_LOCAL_SHORT"); _ISO_BASIC_LOCAL_SHORTReady = true; } return _ISO_BASIC_LOCAL_SHORTContent; } }
            private static Android.Icu.Text.TimeZoneFormat.Style _ISO_BASIC_LOCAL_SHORTContent = default;
            private static bool _ISO_BASIC_LOCAL_SHORTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.Style.html#ISO_BASIC_SHORT"/>
            /// </summary>
            public static Android.Icu.Text.TimeZoneFormat.Style ISO_BASIC_SHORT { get { if (!_ISO_BASIC_SHORTReady) { _ISO_BASIC_SHORTContent = SGetField<Android.Icu.Text.TimeZoneFormat.Style>(LocalBridgeClazz, "ISO_BASIC_SHORT"); _ISO_BASIC_SHORTReady = true; } return _ISO_BASIC_SHORTContent; } }
            private static Android.Icu.Text.TimeZoneFormat.Style _ISO_BASIC_SHORTContent = default;
            private static bool _ISO_BASIC_SHORTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.Style.html#ISO_EXTENDED_FIXED"/>
            /// </summary>
            public static Android.Icu.Text.TimeZoneFormat.Style ISO_EXTENDED_FIXED { get { if (!_ISO_EXTENDED_FIXEDReady) { _ISO_EXTENDED_FIXEDContent = SGetField<Android.Icu.Text.TimeZoneFormat.Style>(LocalBridgeClazz, "ISO_EXTENDED_FIXED"); _ISO_EXTENDED_FIXEDReady = true; } return _ISO_EXTENDED_FIXEDContent; } }
            private static Android.Icu.Text.TimeZoneFormat.Style _ISO_EXTENDED_FIXEDContent = default;
            private static bool _ISO_EXTENDED_FIXEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.Style.html#ISO_EXTENDED_FULL"/>
            /// </summary>
            public static Android.Icu.Text.TimeZoneFormat.Style ISO_EXTENDED_FULL { get { if (!_ISO_EXTENDED_FULLReady) { _ISO_EXTENDED_FULLContent = SGetField<Android.Icu.Text.TimeZoneFormat.Style>(LocalBridgeClazz, "ISO_EXTENDED_FULL"); _ISO_EXTENDED_FULLReady = true; } return _ISO_EXTENDED_FULLContent; } }
            private static Android.Icu.Text.TimeZoneFormat.Style _ISO_EXTENDED_FULLContent = default;
            private static bool _ISO_EXTENDED_FULLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.Style.html#ISO_EXTENDED_LOCAL_FIXED"/>
            /// </summary>
            public static Android.Icu.Text.TimeZoneFormat.Style ISO_EXTENDED_LOCAL_FIXED { get { if (!_ISO_EXTENDED_LOCAL_FIXEDReady) { _ISO_EXTENDED_LOCAL_FIXEDContent = SGetField<Android.Icu.Text.TimeZoneFormat.Style>(LocalBridgeClazz, "ISO_EXTENDED_LOCAL_FIXED"); _ISO_EXTENDED_LOCAL_FIXEDReady = true; } return _ISO_EXTENDED_LOCAL_FIXEDContent; } }
            private static Android.Icu.Text.TimeZoneFormat.Style _ISO_EXTENDED_LOCAL_FIXEDContent = default;
            private static bool _ISO_EXTENDED_LOCAL_FIXEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.Style.html#ISO_EXTENDED_LOCAL_FULL"/>
            /// </summary>
            public static Android.Icu.Text.TimeZoneFormat.Style ISO_EXTENDED_LOCAL_FULL { get { if (!_ISO_EXTENDED_LOCAL_FULLReady) { _ISO_EXTENDED_LOCAL_FULLContent = SGetField<Android.Icu.Text.TimeZoneFormat.Style>(LocalBridgeClazz, "ISO_EXTENDED_LOCAL_FULL"); _ISO_EXTENDED_LOCAL_FULLReady = true; } return _ISO_EXTENDED_LOCAL_FULLContent; } }
            private static Android.Icu.Text.TimeZoneFormat.Style _ISO_EXTENDED_LOCAL_FULLContent = default;
            private static bool _ISO_EXTENDED_LOCAL_FULLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.Style.html#LOCALIZED_GMT"/>
            /// </summary>
            public static Android.Icu.Text.TimeZoneFormat.Style LOCALIZED_GMT { get { if (!_LOCALIZED_GMTReady) { _LOCALIZED_GMTContent = SGetField<Android.Icu.Text.TimeZoneFormat.Style>(LocalBridgeClazz, "LOCALIZED_GMT"); _LOCALIZED_GMTReady = true; } return _LOCALIZED_GMTContent; } }
            private static Android.Icu.Text.TimeZoneFormat.Style _LOCALIZED_GMTContent = default;
            private static bool _LOCALIZED_GMTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.Style.html#LOCALIZED_GMT_SHORT"/>
            /// </summary>
            public static Android.Icu.Text.TimeZoneFormat.Style LOCALIZED_GMT_SHORT { get { if (!_LOCALIZED_GMT_SHORTReady) { _LOCALIZED_GMT_SHORTContent = SGetField<Android.Icu.Text.TimeZoneFormat.Style>(LocalBridgeClazz, "LOCALIZED_GMT_SHORT"); _LOCALIZED_GMT_SHORTReady = true; } return _LOCALIZED_GMT_SHORTContent; } }
            private static Android.Icu.Text.TimeZoneFormat.Style _LOCALIZED_GMT_SHORTContent = default;
            private static bool _LOCALIZED_GMT_SHORTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.Style.html#SPECIFIC_LONG"/>
            /// </summary>
            public static Android.Icu.Text.TimeZoneFormat.Style SPECIFIC_LONG { get { if (!_SPECIFIC_LONGReady) { _SPECIFIC_LONGContent = SGetField<Android.Icu.Text.TimeZoneFormat.Style>(LocalBridgeClazz, "SPECIFIC_LONG"); _SPECIFIC_LONGReady = true; } return _SPECIFIC_LONGContent; } }
            private static Android.Icu.Text.TimeZoneFormat.Style _SPECIFIC_LONGContent = default;
            private static bool _SPECIFIC_LONGReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.Style.html#SPECIFIC_SHORT"/>
            /// </summary>
            public static Android.Icu.Text.TimeZoneFormat.Style SPECIFIC_SHORT { get { if (!_SPECIFIC_SHORTReady) { _SPECIFIC_SHORTContent = SGetField<Android.Icu.Text.TimeZoneFormat.Style>(LocalBridgeClazz, "SPECIFIC_SHORT"); _SPECIFIC_SHORTReady = true; } return _SPECIFIC_SHORTContent; } }
            private static Android.Icu.Text.TimeZoneFormat.Style _SPECIFIC_SHORTContent = default;
            private static bool _SPECIFIC_SHORTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.Style.html#ZONE_ID"/>
            /// </summary>
            public static Android.Icu.Text.TimeZoneFormat.Style ZONE_ID { get { if (!_ZONE_IDReady) { _ZONE_IDContent = SGetField<Android.Icu.Text.TimeZoneFormat.Style>(LocalBridgeClazz, "ZONE_ID"); _ZONE_IDReady = true; } return _ZONE_IDContent; } }
            private static Android.Icu.Text.TimeZoneFormat.Style _ZONE_IDContent = default;
            private static bool _ZONE_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.Style.html#ZONE_ID_SHORT"/>
            /// </summary>
            public static Android.Icu.Text.TimeZoneFormat.Style ZONE_ID_SHORT { get { if (!_ZONE_ID_SHORTReady) { _ZONE_ID_SHORTContent = SGetField<Android.Icu.Text.TimeZoneFormat.Style>(LocalBridgeClazz, "ZONE_ID_SHORT"); _ZONE_ID_SHORTReady = true; } return _ZONE_ID_SHORTContent; } }
            private static Android.Icu.Text.TimeZoneFormat.Style _ZONE_ID_SHORTContent = default;
            private static bool _ZONE_ID_SHORTReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.Style.html#valueOf(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Android.Icu.Text.TimeZoneFormat.Style"/></returns>
            public static Android.Icu.Text.TimeZoneFormat.Style ValueOf(Java.Lang.String arg0)
            {
                return SExecuteWithSignature<Android.Icu.Text.TimeZoneFormat.Style>(LocalBridgeClazz, "valueOf", "(Ljava/lang/String;)Landroid/icu/text/TimeZoneFormat$Style;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.Style.html#values()"/>
            /// </summary>
            /// <returns><see cref="Android.Icu.Text.TimeZoneFormat.Style"/></returns>
            public static Android.Icu.Text.TimeZoneFormat.Style[] Values()
            {
                return SExecuteWithSignatureArray<Android.Icu.Text.TimeZoneFormat.Style>(LocalBridgeClazz, "values", "()[Landroid/icu/text/TimeZoneFormat$Style;");
            }

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region TimeType
        public partial class TimeType
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.TimeType.html#DAYLIGHT"/>
            /// </summary>
            public static Android.Icu.Text.TimeZoneFormat.TimeType DAYLIGHT { get { if (!_DAYLIGHTReady) { _DAYLIGHTContent = SGetField<Android.Icu.Text.TimeZoneFormat.TimeType>(LocalBridgeClazz, "DAYLIGHT"); _DAYLIGHTReady = true; } return _DAYLIGHTContent; } }
            private static Android.Icu.Text.TimeZoneFormat.TimeType _DAYLIGHTContent = default;
            private static bool _DAYLIGHTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.TimeType.html#STANDARD"/>
            /// </summary>
            public static Android.Icu.Text.TimeZoneFormat.TimeType STANDARD { get { if (!_STANDARDReady) { _STANDARDContent = SGetField<Android.Icu.Text.TimeZoneFormat.TimeType>(LocalBridgeClazz, "STANDARD"); _STANDARDReady = true; } return _STANDARDContent; } }
            private static Android.Icu.Text.TimeZoneFormat.TimeType _STANDARDContent = default;
            private static bool _STANDARDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.TimeType.html#UNKNOWN"/>
            /// </summary>
            public static Android.Icu.Text.TimeZoneFormat.TimeType UNKNOWN { get { if (!_UNKNOWNReady) { _UNKNOWNContent = SGetField<Android.Icu.Text.TimeZoneFormat.TimeType>(LocalBridgeClazz, "UNKNOWN"); _UNKNOWNReady = true; } return _UNKNOWNContent; } }
            private static Android.Icu.Text.TimeZoneFormat.TimeType _UNKNOWNContent = default;
            private static bool _UNKNOWNReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.TimeType.html#valueOf(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Android.Icu.Text.TimeZoneFormat.TimeType"/></returns>
            public static Android.Icu.Text.TimeZoneFormat.TimeType ValueOf(Java.Lang.String arg0)
            {
                return SExecuteWithSignature<Android.Icu.Text.TimeZoneFormat.TimeType>(LocalBridgeClazz, "valueOf", "(Ljava/lang/String;)Landroid/icu/text/TimeZoneFormat$TimeType;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/TimeZoneFormat.TimeType.html#values()"/>
            /// </summary>
            /// <returns><see cref="Android.Icu.Text.TimeZoneFormat.TimeType"/></returns>
            public static Android.Icu.Text.TimeZoneFormat.TimeType[] Values()
            {
                return SExecuteWithSignatureArray<Android.Icu.Text.TimeZoneFormat.TimeType>(LocalBridgeClazz, "values", "()[Landroid/icu/text/TimeZoneFormat$TimeType;");
            }

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}