/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.5.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Icu.Text
{
    #region DateFormat
    public partial class DateFormat
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#AM_PM_FIELD"/>
        /// </summary>
        public static int AM_PM_FIELD { get { if (!_AM_PM_FIELDReady) { _AM_PM_FIELDContent = SGetField<int>(LocalBridgeClazz, "AM_PM_FIELD"); _AM_PM_FIELDReady = true; } return _AM_PM_FIELDContent; } }
        private static int _AM_PM_FIELDContent = default;
        private static bool _AM_PM_FIELDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#AM_PM_MIDNIGHT_NOON_FIELD"/>
        /// </summary>
        public static int AM_PM_MIDNIGHT_NOON_FIELD { get { if (!_AM_PM_MIDNIGHT_NOON_FIELDReady) { _AM_PM_MIDNIGHT_NOON_FIELDContent = SGetField<int>(LocalBridgeClazz, "AM_PM_MIDNIGHT_NOON_FIELD"); _AM_PM_MIDNIGHT_NOON_FIELDReady = true; } return _AM_PM_MIDNIGHT_NOON_FIELDContent; } }
        private static int _AM_PM_MIDNIGHT_NOON_FIELDContent = default;
        private static bool _AM_PM_MIDNIGHT_NOON_FIELDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#DATE_FIELD"/>
        /// </summary>
        public static int DATE_FIELD { get { if (!_DATE_FIELDReady) { _DATE_FIELDContent = SGetField<int>(LocalBridgeClazz, "DATE_FIELD"); _DATE_FIELDReady = true; } return _DATE_FIELDContent; } }
        private static int _DATE_FIELDContent = default;
        private static bool _DATE_FIELDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#DAY_OF_WEEK_FIELD"/>
        /// </summary>
        public static int DAY_OF_WEEK_FIELD { get { if (!_DAY_OF_WEEK_FIELDReady) { _DAY_OF_WEEK_FIELDContent = SGetField<int>(LocalBridgeClazz, "DAY_OF_WEEK_FIELD"); _DAY_OF_WEEK_FIELDReady = true; } return _DAY_OF_WEEK_FIELDContent; } }
        private static int _DAY_OF_WEEK_FIELDContent = default;
        private static bool _DAY_OF_WEEK_FIELDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#DAY_OF_WEEK_IN_MONTH_FIELD"/>
        /// </summary>
        public static int DAY_OF_WEEK_IN_MONTH_FIELD { get { if (!_DAY_OF_WEEK_IN_MONTH_FIELDReady) { _DAY_OF_WEEK_IN_MONTH_FIELDContent = SGetField<int>(LocalBridgeClazz, "DAY_OF_WEEK_IN_MONTH_FIELD"); _DAY_OF_WEEK_IN_MONTH_FIELDReady = true; } return _DAY_OF_WEEK_IN_MONTH_FIELDContent; } }
        private static int _DAY_OF_WEEK_IN_MONTH_FIELDContent = default;
        private static bool _DAY_OF_WEEK_IN_MONTH_FIELDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#DAY_OF_YEAR_FIELD"/>
        /// </summary>
        public static int DAY_OF_YEAR_FIELD { get { if (!_DAY_OF_YEAR_FIELDReady) { _DAY_OF_YEAR_FIELDContent = SGetField<int>(LocalBridgeClazz, "DAY_OF_YEAR_FIELD"); _DAY_OF_YEAR_FIELDReady = true; } return _DAY_OF_YEAR_FIELDContent; } }
        private static int _DAY_OF_YEAR_FIELDContent = default;
        private static bool _DAY_OF_YEAR_FIELDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#DEFAULT"/>
        /// </summary>
        public static int DEFAULT { get { if (!_DEFAULTReady) { _DEFAULTContent = SGetField<int>(LocalBridgeClazz, "DEFAULT"); _DEFAULTReady = true; } return _DEFAULTContent; } }
        private static int _DEFAULTContent = default;
        private static bool _DEFAULTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#DOW_LOCAL_FIELD"/>
        /// </summary>
        public static int DOW_LOCAL_FIELD { get { if (!_DOW_LOCAL_FIELDReady) { _DOW_LOCAL_FIELDContent = SGetField<int>(LocalBridgeClazz, "DOW_LOCAL_FIELD"); _DOW_LOCAL_FIELDReady = true; } return _DOW_LOCAL_FIELDContent; } }
        private static int _DOW_LOCAL_FIELDContent = default;
        private static bool _DOW_LOCAL_FIELDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#ERA_FIELD"/>
        /// </summary>
        public static int ERA_FIELD { get { if (!_ERA_FIELDReady) { _ERA_FIELDContent = SGetField<int>(LocalBridgeClazz, "ERA_FIELD"); _ERA_FIELDReady = true; } return _ERA_FIELDContent; } }
        private static int _ERA_FIELDContent = default;
        private static bool _ERA_FIELDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#EXTENDED_YEAR_FIELD"/>
        /// </summary>
        public static int EXTENDED_YEAR_FIELD { get { if (!_EXTENDED_YEAR_FIELDReady) { _EXTENDED_YEAR_FIELDContent = SGetField<int>(LocalBridgeClazz, "EXTENDED_YEAR_FIELD"); _EXTENDED_YEAR_FIELDReady = true; } return _EXTENDED_YEAR_FIELDContent; } }
        private static int _EXTENDED_YEAR_FIELDContent = default;
        private static bool _EXTENDED_YEAR_FIELDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#FLEXIBLE_DAY_PERIOD_FIELD"/>
        /// </summary>
        public static int FLEXIBLE_DAY_PERIOD_FIELD { get { if (!_FLEXIBLE_DAY_PERIOD_FIELDReady) { _FLEXIBLE_DAY_PERIOD_FIELDContent = SGetField<int>(LocalBridgeClazz, "FLEXIBLE_DAY_PERIOD_FIELD"); _FLEXIBLE_DAY_PERIOD_FIELDReady = true; } return _FLEXIBLE_DAY_PERIOD_FIELDContent; } }
        private static int _FLEXIBLE_DAY_PERIOD_FIELDContent = default;
        private static bool _FLEXIBLE_DAY_PERIOD_FIELDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#FRACTIONAL_SECOND_FIELD"/>
        /// </summary>
        public static int FRACTIONAL_SECOND_FIELD { get { if (!_FRACTIONAL_SECOND_FIELDReady) { _FRACTIONAL_SECOND_FIELDContent = SGetField<int>(LocalBridgeClazz, "FRACTIONAL_SECOND_FIELD"); _FRACTIONAL_SECOND_FIELDReady = true; } return _FRACTIONAL_SECOND_FIELDContent; } }
        private static int _FRACTIONAL_SECOND_FIELDContent = default;
        private static bool _FRACTIONAL_SECOND_FIELDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#FULL"/>
        /// </summary>
        public static int FULL { get { if (!_FULLReady) { _FULLContent = SGetField<int>(LocalBridgeClazz, "FULL"); _FULLReady = true; } return _FULLContent; } }
        private static int _FULLContent = default;
        private static bool _FULLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#HOUR_OF_DAY0_FIELD"/>
        /// </summary>
        public static int HOUR_OF_DAY0_FIELD { get { if (!_HOUR_OF_DAY0_FIELDReady) { _HOUR_OF_DAY0_FIELDContent = SGetField<int>(LocalBridgeClazz, "HOUR_OF_DAY0_FIELD"); _HOUR_OF_DAY0_FIELDReady = true; } return _HOUR_OF_DAY0_FIELDContent; } }
        private static int _HOUR_OF_DAY0_FIELDContent = default;
        private static bool _HOUR_OF_DAY0_FIELDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#HOUR_OF_DAY1_FIELD"/>
        /// </summary>
        public static int HOUR_OF_DAY1_FIELD { get { if (!_HOUR_OF_DAY1_FIELDReady) { _HOUR_OF_DAY1_FIELDContent = SGetField<int>(LocalBridgeClazz, "HOUR_OF_DAY1_FIELD"); _HOUR_OF_DAY1_FIELDReady = true; } return _HOUR_OF_DAY1_FIELDContent; } }
        private static int _HOUR_OF_DAY1_FIELDContent = default;
        private static bool _HOUR_OF_DAY1_FIELDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#HOUR0_FIELD"/>
        /// </summary>
        public static int HOUR0_FIELD { get { if (!_HOUR0_FIELDReady) { _HOUR0_FIELDContent = SGetField<int>(LocalBridgeClazz, "HOUR0_FIELD"); _HOUR0_FIELDReady = true; } return _HOUR0_FIELDContent; } }
        private static int _HOUR0_FIELDContent = default;
        private static bool _HOUR0_FIELDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#HOUR1_FIELD"/>
        /// </summary>
        public static int HOUR1_FIELD { get { if (!_HOUR1_FIELDReady) { _HOUR1_FIELDContent = SGetField<int>(LocalBridgeClazz, "HOUR1_FIELD"); _HOUR1_FIELDReady = true; } return _HOUR1_FIELDContent; } }
        private static int _HOUR1_FIELDContent = default;
        private static bool _HOUR1_FIELDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#JULIAN_DAY_FIELD"/>
        /// </summary>
        public static int JULIAN_DAY_FIELD { get { if (!_JULIAN_DAY_FIELDReady) { _JULIAN_DAY_FIELDContent = SGetField<int>(LocalBridgeClazz, "JULIAN_DAY_FIELD"); _JULIAN_DAY_FIELDReady = true; } return _JULIAN_DAY_FIELDContent; } }
        private static int _JULIAN_DAY_FIELDContent = default;
        private static bool _JULIAN_DAY_FIELDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#LONG"/>
        /// </summary>
        public static int LONG { get { if (!_LONGReady) { _LONGContent = SGetField<int>(LocalBridgeClazz, "LONG"); _LONGReady = true; } return _LONGContent; } }
        private static int _LONGContent = default;
        private static bool _LONGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#MEDIUM"/>
        /// </summary>
        public static int MEDIUM { get { if (!_MEDIUMReady) { _MEDIUMContent = SGetField<int>(LocalBridgeClazz, "MEDIUM"); _MEDIUMReady = true; } return _MEDIUMContent; } }
        private static int _MEDIUMContent = default;
        private static bool _MEDIUMReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#MILLISECOND_FIELD"/>
        /// </summary>
        public static int MILLISECOND_FIELD { get { if (!_MILLISECOND_FIELDReady) { _MILLISECOND_FIELDContent = SGetField<int>(LocalBridgeClazz, "MILLISECOND_FIELD"); _MILLISECOND_FIELDReady = true; } return _MILLISECOND_FIELDContent; } }
        private static int _MILLISECOND_FIELDContent = default;
        private static bool _MILLISECOND_FIELDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#MILLISECONDS_IN_DAY_FIELD"/>
        /// </summary>
        public static int MILLISECONDS_IN_DAY_FIELD { get { if (!_MILLISECONDS_IN_DAY_FIELDReady) { _MILLISECONDS_IN_DAY_FIELDContent = SGetField<int>(LocalBridgeClazz, "MILLISECONDS_IN_DAY_FIELD"); _MILLISECONDS_IN_DAY_FIELDReady = true; } return _MILLISECONDS_IN_DAY_FIELDContent; } }
        private static int _MILLISECONDS_IN_DAY_FIELDContent = default;
        private static bool _MILLISECONDS_IN_DAY_FIELDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#MINUTE_FIELD"/>
        /// </summary>
        public static int MINUTE_FIELD { get { if (!_MINUTE_FIELDReady) { _MINUTE_FIELDContent = SGetField<int>(LocalBridgeClazz, "MINUTE_FIELD"); _MINUTE_FIELDReady = true; } return _MINUTE_FIELDContent; } }
        private static int _MINUTE_FIELDContent = default;
        private static bool _MINUTE_FIELDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#MONTH_FIELD"/>
        /// </summary>
        public static int MONTH_FIELD { get { if (!_MONTH_FIELDReady) { _MONTH_FIELDContent = SGetField<int>(LocalBridgeClazz, "MONTH_FIELD"); _MONTH_FIELDReady = true; } return _MONTH_FIELDContent; } }
        private static int _MONTH_FIELDContent = default;
        private static bool _MONTH_FIELDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#NONE"/>
        /// </summary>
        public static int NONE { get { if (!_NONEReady) { _NONEContent = SGetField<int>(LocalBridgeClazz, "NONE"); _NONEReady = true; } return _NONEContent; } }
        private static int _NONEContent = default;
        private static bool _NONEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#QUARTER_FIELD"/>
        /// </summary>
        public static int QUARTER_FIELD { get { if (!_QUARTER_FIELDReady) { _QUARTER_FIELDContent = SGetField<int>(LocalBridgeClazz, "QUARTER_FIELD"); _QUARTER_FIELDReady = true; } return _QUARTER_FIELDContent; } }
        private static int _QUARTER_FIELDContent = default;
        private static bool _QUARTER_FIELDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#RELATIVE"/>
        /// </summary>
        public static int RELATIVE { get { if (!_RELATIVEReady) { _RELATIVEContent = SGetField<int>(LocalBridgeClazz, "RELATIVE"); _RELATIVEReady = true; } return _RELATIVEContent; } }
        private static int _RELATIVEContent = default;
        private static bool _RELATIVEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#RELATIVE_DEFAULT"/>
        /// </summary>
        public static int RELATIVE_DEFAULT { get { if (!_RELATIVE_DEFAULTReady) { _RELATIVE_DEFAULTContent = SGetField<int>(LocalBridgeClazz, "RELATIVE_DEFAULT"); _RELATIVE_DEFAULTReady = true; } return _RELATIVE_DEFAULTContent; } }
        private static int _RELATIVE_DEFAULTContent = default;
        private static bool _RELATIVE_DEFAULTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#RELATIVE_FULL"/>
        /// </summary>
        public static int RELATIVE_FULL { get { if (!_RELATIVE_FULLReady) { _RELATIVE_FULLContent = SGetField<int>(LocalBridgeClazz, "RELATIVE_FULL"); _RELATIVE_FULLReady = true; } return _RELATIVE_FULLContent; } }
        private static int _RELATIVE_FULLContent = default;
        private static bool _RELATIVE_FULLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#RELATIVE_LONG"/>
        /// </summary>
        public static int RELATIVE_LONG { get { if (!_RELATIVE_LONGReady) { _RELATIVE_LONGContent = SGetField<int>(LocalBridgeClazz, "RELATIVE_LONG"); _RELATIVE_LONGReady = true; } return _RELATIVE_LONGContent; } }
        private static int _RELATIVE_LONGContent = default;
        private static bool _RELATIVE_LONGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#RELATIVE_MEDIUM"/>
        /// </summary>
        public static int RELATIVE_MEDIUM { get { if (!_RELATIVE_MEDIUMReady) { _RELATIVE_MEDIUMContent = SGetField<int>(LocalBridgeClazz, "RELATIVE_MEDIUM"); _RELATIVE_MEDIUMReady = true; } return _RELATIVE_MEDIUMContent; } }
        private static int _RELATIVE_MEDIUMContent = default;
        private static bool _RELATIVE_MEDIUMReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#RELATIVE_SHORT"/>
        /// </summary>
        public static int RELATIVE_SHORT { get { if (!_RELATIVE_SHORTReady) { _RELATIVE_SHORTContent = SGetField<int>(LocalBridgeClazz, "RELATIVE_SHORT"); _RELATIVE_SHORTReady = true; } return _RELATIVE_SHORTContent; } }
        private static int _RELATIVE_SHORTContent = default;
        private static bool _RELATIVE_SHORTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#SECOND_FIELD"/>
        /// </summary>
        public static int SECOND_FIELD { get { if (!_SECOND_FIELDReady) { _SECOND_FIELDContent = SGetField<int>(LocalBridgeClazz, "SECOND_FIELD"); _SECOND_FIELDReady = true; } return _SECOND_FIELDContent; } }
        private static int _SECOND_FIELDContent = default;
        private static bool _SECOND_FIELDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#SHORT"/>
        /// </summary>
        public static int SHORT { get { if (!_SHORTReady) { _SHORTContent = SGetField<int>(LocalBridgeClazz, "SHORT"); _SHORTReady = true; } return _SHORTContent; } }
        private static int _SHORTContent = default;
        private static bool _SHORTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#STANDALONE_DAY_FIELD"/>
        /// </summary>
        public static int STANDALONE_DAY_FIELD { get { if (!_STANDALONE_DAY_FIELDReady) { _STANDALONE_DAY_FIELDContent = SGetField<int>(LocalBridgeClazz, "STANDALONE_DAY_FIELD"); _STANDALONE_DAY_FIELDReady = true; } return _STANDALONE_DAY_FIELDContent; } }
        private static int _STANDALONE_DAY_FIELDContent = default;
        private static bool _STANDALONE_DAY_FIELDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#STANDALONE_MONTH_FIELD"/>
        /// </summary>
        public static int STANDALONE_MONTH_FIELD { get { if (!_STANDALONE_MONTH_FIELDReady) { _STANDALONE_MONTH_FIELDContent = SGetField<int>(LocalBridgeClazz, "STANDALONE_MONTH_FIELD"); _STANDALONE_MONTH_FIELDReady = true; } return _STANDALONE_MONTH_FIELDContent; } }
        private static int _STANDALONE_MONTH_FIELDContent = default;
        private static bool _STANDALONE_MONTH_FIELDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#STANDALONE_QUARTER_FIELD"/>
        /// </summary>
        public static int STANDALONE_QUARTER_FIELD { get { if (!_STANDALONE_QUARTER_FIELDReady) { _STANDALONE_QUARTER_FIELDContent = SGetField<int>(LocalBridgeClazz, "STANDALONE_QUARTER_FIELD"); _STANDALONE_QUARTER_FIELDReady = true; } return _STANDALONE_QUARTER_FIELDContent; } }
        private static int _STANDALONE_QUARTER_FIELDContent = default;
        private static bool _STANDALONE_QUARTER_FIELDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#TIMEZONE_FIELD"/>
        /// </summary>
        public static int TIMEZONE_FIELD { get { if (!_TIMEZONE_FIELDReady) { _TIMEZONE_FIELDContent = SGetField<int>(LocalBridgeClazz, "TIMEZONE_FIELD"); _TIMEZONE_FIELDReady = true; } return _TIMEZONE_FIELDContent; } }
        private static int _TIMEZONE_FIELDContent = default;
        private static bool _TIMEZONE_FIELDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#TIMEZONE_GENERIC_FIELD"/>
        /// </summary>
        public static int TIMEZONE_GENERIC_FIELD { get { if (!_TIMEZONE_GENERIC_FIELDReady) { _TIMEZONE_GENERIC_FIELDContent = SGetField<int>(LocalBridgeClazz, "TIMEZONE_GENERIC_FIELD"); _TIMEZONE_GENERIC_FIELDReady = true; } return _TIMEZONE_GENERIC_FIELDContent; } }
        private static int _TIMEZONE_GENERIC_FIELDContent = default;
        private static bool _TIMEZONE_GENERIC_FIELDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#TIMEZONE_ISO_FIELD"/>
        /// </summary>
        public static int TIMEZONE_ISO_FIELD { get { if (!_TIMEZONE_ISO_FIELDReady) { _TIMEZONE_ISO_FIELDContent = SGetField<int>(LocalBridgeClazz, "TIMEZONE_ISO_FIELD"); _TIMEZONE_ISO_FIELDReady = true; } return _TIMEZONE_ISO_FIELDContent; } }
        private static int _TIMEZONE_ISO_FIELDContent = default;
        private static bool _TIMEZONE_ISO_FIELDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#TIMEZONE_ISO_LOCAL_FIELD"/>
        /// </summary>
        public static int TIMEZONE_ISO_LOCAL_FIELD { get { if (!_TIMEZONE_ISO_LOCAL_FIELDReady) { _TIMEZONE_ISO_LOCAL_FIELDContent = SGetField<int>(LocalBridgeClazz, "TIMEZONE_ISO_LOCAL_FIELD"); _TIMEZONE_ISO_LOCAL_FIELDReady = true; } return _TIMEZONE_ISO_LOCAL_FIELDContent; } }
        private static int _TIMEZONE_ISO_LOCAL_FIELDContent = default;
        private static bool _TIMEZONE_ISO_LOCAL_FIELDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#TIMEZONE_LOCALIZED_GMT_OFFSET_FIELD"/>
        /// </summary>
        public static int TIMEZONE_LOCALIZED_GMT_OFFSET_FIELD { get { if (!_TIMEZONE_LOCALIZED_GMT_OFFSET_FIELDReady) { _TIMEZONE_LOCALIZED_GMT_OFFSET_FIELDContent = SGetField<int>(LocalBridgeClazz, "TIMEZONE_LOCALIZED_GMT_OFFSET_FIELD"); _TIMEZONE_LOCALIZED_GMT_OFFSET_FIELDReady = true; } return _TIMEZONE_LOCALIZED_GMT_OFFSET_FIELDContent; } }
        private static int _TIMEZONE_LOCALIZED_GMT_OFFSET_FIELDContent = default;
        private static bool _TIMEZONE_LOCALIZED_GMT_OFFSET_FIELDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#TIMEZONE_RFC_FIELD"/>
        /// </summary>
        public static int TIMEZONE_RFC_FIELD { get { if (!_TIMEZONE_RFC_FIELDReady) { _TIMEZONE_RFC_FIELDContent = SGetField<int>(LocalBridgeClazz, "TIMEZONE_RFC_FIELD"); _TIMEZONE_RFC_FIELDReady = true; } return _TIMEZONE_RFC_FIELDContent; } }
        private static int _TIMEZONE_RFC_FIELDContent = default;
        private static bool _TIMEZONE_RFC_FIELDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#TIMEZONE_SPECIAL_FIELD"/>
        /// </summary>
        public static int TIMEZONE_SPECIAL_FIELD { get { if (!_TIMEZONE_SPECIAL_FIELDReady) { _TIMEZONE_SPECIAL_FIELDContent = SGetField<int>(LocalBridgeClazz, "TIMEZONE_SPECIAL_FIELD"); _TIMEZONE_SPECIAL_FIELDReady = true; } return _TIMEZONE_SPECIAL_FIELDContent; } }
        private static int _TIMEZONE_SPECIAL_FIELDContent = default;
        private static bool _TIMEZONE_SPECIAL_FIELDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#WEEK_OF_MONTH_FIELD"/>
        /// </summary>
        public static int WEEK_OF_MONTH_FIELD { get { if (!_WEEK_OF_MONTH_FIELDReady) { _WEEK_OF_MONTH_FIELDContent = SGetField<int>(LocalBridgeClazz, "WEEK_OF_MONTH_FIELD"); _WEEK_OF_MONTH_FIELDReady = true; } return _WEEK_OF_MONTH_FIELDContent; } }
        private static int _WEEK_OF_MONTH_FIELDContent = default;
        private static bool _WEEK_OF_MONTH_FIELDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#WEEK_OF_YEAR_FIELD"/>
        /// </summary>
        public static int WEEK_OF_YEAR_FIELD { get { if (!_WEEK_OF_YEAR_FIELDReady) { _WEEK_OF_YEAR_FIELDContent = SGetField<int>(LocalBridgeClazz, "WEEK_OF_YEAR_FIELD"); _WEEK_OF_YEAR_FIELDReady = true; } return _WEEK_OF_YEAR_FIELDContent; } }
        private static int _WEEK_OF_YEAR_FIELDContent = default;
        private static bool _WEEK_OF_YEAR_FIELDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#YEAR_FIELD"/>
        /// </summary>
        public static int YEAR_FIELD { get { if (!_YEAR_FIELDReady) { _YEAR_FIELDContent = SGetField<int>(LocalBridgeClazz, "YEAR_FIELD"); _YEAR_FIELDReady = true; } return _YEAR_FIELDContent; } }
        private static int _YEAR_FIELDContent = default;
        private static bool _YEAR_FIELDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#YEAR_NAME_FIELD"/>
        /// </summary>
        public static int YEAR_NAME_FIELD { get { if (!_YEAR_NAME_FIELDReady) { _YEAR_NAME_FIELDContent = SGetField<int>(LocalBridgeClazz, "YEAR_NAME_FIELD"); _YEAR_NAME_FIELDReady = true; } return _YEAR_NAME_FIELDContent; } }
        private static int _YEAR_NAME_FIELDContent = default;
        private static bool _YEAR_NAME_FIELDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#YEAR_WOY_FIELD"/>
        /// </summary>
        public static int YEAR_WOY_FIELD { get { if (!_YEAR_WOY_FIELDReady) { _YEAR_WOY_FIELDContent = SGetField<int>(LocalBridgeClazz, "YEAR_WOY_FIELD"); _YEAR_WOY_FIELDReady = true; } return _YEAR_WOY_FIELDContent; } }
        private static int _YEAR_WOY_FIELDContent = default;
        private static bool _YEAR_WOY_FIELDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#ABBR_GENERIC_TZ"/>
        /// </summary>
        public static Java.Lang.String ABBR_GENERIC_TZ { get { if (!_ABBR_GENERIC_TZReady) { _ABBR_GENERIC_TZContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ABBR_GENERIC_TZ"); _ABBR_GENERIC_TZReady = true; } return _ABBR_GENERIC_TZContent; } }
        private static Java.Lang.String _ABBR_GENERIC_TZContent = default;
        private static bool _ABBR_GENERIC_TZReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#ABBR_MONTH"/>
        /// </summary>
        public static Java.Lang.String ABBR_MONTH { get { if (!_ABBR_MONTHReady) { _ABBR_MONTHContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ABBR_MONTH"); _ABBR_MONTHReady = true; } return _ABBR_MONTHContent; } }
        private static Java.Lang.String _ABBR_MONTHContent = default;
        private static bool _ABBR_MONTHReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#ABBR_MONTH_DAY"/>
        /// </summary>
        public static Java.Lang.String ABBR_MONTH_DAY { get { if (!_ABBR_MONTH_DAYReady) { _ABBR_MONTH_DAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ABBR_MONTH_DAY"); _ABBR_MONTH_DAYReady = true; } return _ABBR_MONTH_DAYContent; } }
        private static Java.Lang.String _ABBR_MONTH_DAYContent = default;
        private static bool _ABBR_MONTH_DAYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#ABBR_MONTH_WEEKDAY_DAY"/>
        /// </summary>
        public static Java.Lang.String ABBR_MONTH_WEEKDAY_DAY { get { if (!_ABBR_MONTH_WEEKDAY_DAYReady) { _ABBR_MONTH_WEEKDAY_DAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ABBR_MONTH_WEEKDAY_DAY"); _ABBR_MONTH_WEEKDAY_DAYReady = true; } return _ABBR_MONTH_WEEKDAY_DAYContent; } }
        private static Java.Lang.String _ABBR_MONTH_WEEKDAY_DAYContent = default;
        private static bool _ABBR_MONTH_WEEKDAY_DAYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#ABBR_QUARTER"/>
        /// </summary>
        public static Java.Lang.String ABBR_QUARTER { get { if (!_ABBR_QUARTERReady) { _ABBR_QUARTERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ABBR_QUARTER"); _ABBR_QUARTERReady = true; } return _ABBR_QUARTERContent; } }
        private static Java.Lang.String _ABBR_QUARTERContent = default;
        private static bool _ABBR_QUARTERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#ABBR_SPECIFIC_TZ"/>
        /// </summary>
        public static Java.Lang.String ABBR_SPECIFIC_TZ { get { if (!_ABBR_SPECIFIC_TZReady) { _ABBR_SPECIFIC_TZContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ABBR_SPECIFIC_TZ"); _ABBR_SPECIFIC_TZReady = true; } return _ABBR_SPECIFIC_TZContent; } }
        private static Java.Lang.String _ABBR_SPECIFIC_TZContent = default;
        private static bool _ABBR_SPECIFIC_TZReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#ABBR_UTC_TZ"/>
        /// </summary>
        public static Java.Lang.String ABBR_UTC_TZ { get { if (!_ABBR_UTC_TZReady) { _ABBR_UTC_TZContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ABBR_UTC_TZ"); _ABBR_UTC_TZReady = true; } return _ABBR_UTC_TZContent; } }
        private static Java.Lang.String _ABBR_UTC_TZContent = default;
        private static bool _ABBR_UTC_TZReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#ABBR_WEEKDAY"/>
        /// </summary>
        public static Java.Lang.String ABBR_WEEKDAY { get { if (!_ABBR_WEEKDAYReady) { _ABBR_WEEKDAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ABBR_WEEKDAY"); _ABBR_WEEKDAYReady = true; } return _ABBR_WEEKDAYContent; } }
        private static Java.Lang.String _ABBR_WEEKDAYContent = default;
        private static bool _ABBR_WEEKDAYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#DAY"/>
        /// </summary>
        public static Java.Lang.String DAY { get { if (!_DAYReady) { _DAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "DAY"); _DAYReady = true; } return _DAYContent; } }
        private static Java.Lang.String _DAYContent = default;
        private static bool _DAYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#GENERIC_TZ"/>
        /// </summary>
        public static Java.Lang.String GENERIC_TZ { get { if (!_GENERIC_TZReady) { _GENERIC_TZContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "GENERIC_TZ"); _GENERIC_TZReady = true; } return _GENERIC_TZContent; } }
        private static Java.Lang.String _GENERIC_TZContent = default;
        private static bool _GENERIC_TZReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#HOUR"/>
        /// </summary>
        public static Java.Lang.String HOUR { get { if (!_HOURReady) { _HOURContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "HOUR"); _HOURReady = true; } return _HOURContent; } }
        private static Java.Lang.String _HOURContent = default;
        private static bool _HOURReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#HOUR_MINUTE"/>
        /// </summary>
        public static Java.Lang.String HOUR_MINUTE { get { if (!_HOUR_MINUTEReady) { _HOUR_MINUTEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "HOUR_MINUTE"); _HOUR_MINUTEReady = true; } return _HOUR_MINUTEContent; } }
        private static Java.Lang.String _HOUR_MINUTEContent = default;
        private static bool _HOUR_MINUTEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#HOUR_MINUTE_SECOND"/>
        /// </summary>
        public static Java.Lang.String HOUR_MINUTE_SECOND { get { if (!_HOUR_MINUTE_SECONDReady) { _HOUR_MINUTE_SECONDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "HOUR_MINUTE_SECOND"); _HOUR_MINUTE_SECONDReady = true; } return _HOUR_MINUTE_SECONDContent; } }
        private static Java.Lang.String _HOUR_MINUTE_SECONDContent = default;
        private static bool _HOUR_MINUTE_SECONDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#HOUR24"/>
        /// </summary>
        public static Java.Lang.String HOUR24 { get { if (!_HOUR24Ready) { _HOUR24Content = SGetField<Java.Lang.String>(LocalBridgeClazz, "HOUR24"); _HOUR24Ready = true; } return _HOUR24Content; } }
        private static Java.Lang.String _HOUR24Content = default;
        private static bool _HOUR24Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#HOUR24_MINUTE"/>
        /// </summary>
        public static Java.Lang.String HOUR24_MINUTE { get { if (!_HOUR24_MINUTEReady) { _HOUR24_MINUTEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "HOUR24_MINUTE"); _HOUR24_MINUTEReady = true; } return _HOUR24_MINUTEContent; } }
        private static Java.Lang.String _HOUR24_MINUTEContent = default;
        private static bool _HOUR24_MINUTEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#HOUR24_MINUTE_SECOND"/>
        /// </summary>
        public static Java.Lang.String HOUR24_MINUTE_SECOND { get { if (!_HOUR24_MINUTE_SECONDReady) { _HOUR24_MINUTE_SECONDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "HOUR24_MINUTE_SECOND"); _HOUR24_MINUTE_SECONDReady = true; } return _HOUR24_MINUTE_SECONDContent; } }
        private static Java.Lang.String _HOUR24_MINUTE_SECONDContent = default;
        private static bool _HOUR24_MINUTE_SECONDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#LOCATION_TZ"/>
        /// </summary>
        public static Java.Lang.String LOCATION_TZ { get { if (!_LOCATION_TZReady) { _LOCATION_TZContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "LOCATION_TZ"); _LOCATION_TZReady = true; } return _LOCATION_TZContent; } }
        private static Java.Lang.String _LOCATION_TZContent = default;
        private static bool _LOCATION_TZReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#MINUTE"/>
        /// </summary>
        public static Java.Lang.String MINUTE { get { if (!_MINUTEReady) { _MINUTEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "MINUTE"); _MINUTEReady = true; } return _MINUTEContent; } }
        private static Java.Lang.String _MINUTEContent = default;
        private static bool _MINUTEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#MINUTE_SECOND"/>
        /// </summary>
        public static Java.Lang.String MINUTE_SECOND { get { if (!_MINUTE_SECONDReady) { _MINUTE_SECONDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "MINUTE_SECOND"); _MINUTE_SECONDReady = true; } return _MINUTE_SECONDContent; } }
        private static Java.Lang.String _MINUTE_SECONDContent = default;
        private static bool _MINUTE_SECONDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#MONTH"/>
        /// </summary>
        public static Java.Lang.String MONTH { get { if (!_MONTHReady) { _MONTHContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "MONTH"); _MONTHReady = true; } return _MONTHContent; } }
        private static Java.Lang.String _MONTHContent = default;
        private static bool _MONTHReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#MONTH_DAY"/>
        /// </summary>
        public static Java.Lang.String MONTH_DAY { get { if (!_MONTH_DAYReady) { _MONTH_DAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "MONTH_DAY"); _MONTH_DAYReady = true; } return _MONTH_DAYContent; } }
        private static Java.Lang.String _MONTH_DAYContent = default;
        private static bool _MONTH_DAYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#MONTH_WEEKDAY_DAY"/>
        /// </summary>
        public static Java.Lang.String MONTH_WEEKDAY_DAY { get { if (!_MONTH_WEEKDAY_DAYReady) { _MONTH_WEEKDAY_DAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "MONTH_WEEKDAY_DAY"); _MONTH_WEEKDAY_DAYReady = true; } return _MONTH_WEEKDAY_DAYContent; } }
        private static Java.Lang.String _MONTH_WEEKDAY_DAYContent = default;
        private static bool _MONTH_WEEKDAY_DAYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#NUM_MONTH"/>
        /// </summary>
        public static Java.Lang.String NUM_MONTH { get { if (!_NUM_MONTHReady) { _NUM_MONTHContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "NUM_MONTH"); _NUM_MONTHReady = true; } return _NUM_MONTHContent; } }
        private static Java.Lang.String _NUM_MONTHContent = default;
        private static bool _NUM_MONTHReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#NUM_MONTH_DAY"/>
        /// </summary>
        public static Java.Lang.String NUM_MONTH_DAY { get { if (!_NUM_MONTH_DAYReady) { _NUM_MONTH_DAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "NUM_MONTH_DAY"); _NUM_MONTH_DAYReady = true; } return _NUM_MONTH_DAYContent; } }
        private static Java.Lang.String _NUM_MONTH_DAYContent = default;
        private static bool _NUM_MONTH_DAYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#NUM_MONTH_WEEKDAY_DAY"/>
        /// </summary>
        public static Java.Lang.String NUM_MONTH_WEEKDAY_DAY { get { if (!_NUM_MONTH_WEEKDAY_DAYReady) { _NUM_MONTH_WEEKDAY_DAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "NUM_MONTH_WEEKDAY_DAY"); _NUM_MONTH_WEEKDAY_DAYReady = true; } return _NUM_MONTH_WEEKDAY_DAYContent; } }
        private static Java.Lang.String _NUM_MONTH_WEEKDAY_DAYContent = default;
        private static bool _NUM_MONTH_WEEKDAY_DAYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#QUARTER"/>
        /// </summary>
        public static Java.Lang.String QUARTER { get { if (!_QUARTERReady) { _QUARTERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "QUARTER"); _QUARTERReady = true; } return _QUARTERContent; } }
        private static Java.Lang.String _QUARTERContent = default;
        private static bool _QUARTERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#SECOND"/>
        /// </summary>
        public static Java.Lang.String SECOND { get { if (!_SECONDReady) { _SECONDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SECOND"); _SECONDReady = true; } return _SECONDContent; } }
        private static Java.Lang.String _SECONDContent = default;
        private static bool _SECONDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#SPECIFIC_TZ"/>
        /// </summary>
        public static Java.Lang.String SPECIFIC_TZ { get { if (!_SPECIFIC_TZReady) { _SPECIFIC_TZContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SPECIFIC_TZ"); _SPECIFIC_TZReady = true; } return _SPECIFIC_TZContent; } }
        private static Java.Lang.String _SPECIFIC_TZContent = default;
        private static bool _SPECIFIC_TZReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#WEEKDAY"/>
        /// </summary>
        public static Java.Lang.String WEEKDAY { get { if (!_WEEKDAYReady) { _WEEKDAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "WEEKDAY"); _WEEKDAYReady = true; } return _WEEKDAYContent; } }
        private static Java.Lang.String _WEEKDAYContent = default;
        private static bool _WEEKDAYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#YEAR"/>
        /// </summary>
        public static Java.Lang.String YEAR { get { if (!_YEARReady) { _YEARContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "YEAR"); _YEARReady = true; } return _YEARContent; } }
        private static Java.Lang.String _YEARContent = default;
        private static bool _YEARReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#YEAR_ABBR_MONTH"/>
        /// </summary>
        public static Java.Lang.String YEAR_ABBR_MONTH { get { if (!_YEAR_ABBR_MONTHReady) { _YEAR_ABBR_MONTHContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "YEAR_ABBR_MONTH"); _YEAR_ABBR_MONTHReady = true; } return _YEAR_ABBR_MONTHContent; } }
        private static Java.Lang.String _YEAR_ABBR_MONTHContent = default;
        private static bool _YEAR_ABBR_MONTHReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#YEAR_ABBR_MONTH_DAY"/>
        /// </summary>
        public static Java.Lang.String YEAR_ABBR_MONTH_DAY { get { if (!_YEAR_ABBR_MONTH_DAYReady) { _YEAR_ABBR_MONTH_DAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "YEAR_ABBR_MONTH_DAY"); _YEAR_ABBR_MONTH_DAYReady = true; } return _YEAR_ABBR_MONTH_DAYContent; } }
        private static Java.Lang.String _YEAR_ABBR_MONTH_DAYContent = default;
        private static bool _YEAR_ABBR_MONTH_DAYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#YEAR_ABBR_MONTH_WEEKDAY_DAY"/>
        /// </summary>
        public static Java.Lang.String YEAR_ABBR_MONTH_WEEKDAY_DAY { get { if (!_YEAR_ABBR_MONTH_WEEKDAY_DAYReady) { _YEAR_ABBR_MONTH_WEEKDAY_DAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "YEAR_ABBR_MONTH_WEEKDAY_DAY"); _YEAR_ABBR_MONTH_WEEKDAY_DAYReady = true; } return _YEAR_ABBR_MONTH_WEEKDAY_DAYContent; } }
        private static Java.Lang.String _YEAR_ABBR_MONTH_WEEKDAY_DAYContent = default;
        private static bool _YEAR_ABBR_MONTH_WEEKDAY_DAYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#YEAR_ABBR_QUARTER"/>
        /// </summary>
        public static Java.Lang.String YEAR_ABBR_QUARTER { get { if (!_YEAR_ABBR_QUARTERReady) { _YEAR_ABBR_QUARTERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "YEAR_ABBR_QUARTER"); _YEAR_ABBR_QUARTERReady = true; } return _YEAR_ABBR_QUARTERContent; } }
        private static Java.Lang.String _YEAR_ABBR_QUARTERContent = default;
        private static bool _YEAR_ABBR_QUARTERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#YEAR_MONTH"/>
        /// </summary>
        public static Java.Lang.String YEAR_MONTH { get { if (!_YEAR_MONTHReady) { _YEAR_MONTHContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "YEAR_MONTH"); _YEAR_MONTHReady = true; } return _YEAR_MONTHContent; } }
        private static Java.Lang.String _YEAR_MONTHContent = default;
        private static bool _YEAR_MONTHReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#YEAR_MONTH_DAY"/>
        /// </summary>
        public static Java.Lang.String YEAR_MONTH_DAY { get { if (!_YEAR_MONTH_DAYReady) { _YEAR_MONTH_DAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "YEAR_MONTH_DAY"); _YEAR_MONTH_DAYReady = true; } return _YEAR_MONTH_DAYContent; } }
        private static Java.Lang.String _YEAR_MONTH_DAYContent = default;
        private static bool _YEAR_MONTH_DAYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#YEAR_MONTH_WEEKDAY_DAY"/>
        /// </summary>
        public static Java.Lang.String YEAR_MONTH_WEEKDAY_DAY { get { if (!_YEAR_MONTH_WEEKDAY_DAYReady) { _YEAR_MONTH_WEEKDAY_DAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "YEAR_MONTH_WEEKDAY_DAY"); _YEAR_MONTH_WEEKDAY_DAYReady = true; } return _YEAR_MONTH_WEEKDAY_DAYContent; } }
        private static Java.Lang.String _YEAR_MONTH_WEEKDAY_DAYContent = default;
        private static bool _YEAR_MONTH_WEEKDAY_DAYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#YEAR_NUM_MONTH"/>
        /// </summary>
        public static Java.Lang.String YEAR_NUM_MONTH { get { if (!_YEAR_NUM_MONTHReady) { _YEAR_NUM_MONTHContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "YEAR_NUM_MONTH"); _YEAR_NUM_MONTHReady = true; } return _YEAR_NUM_MONTHContent; } }
        private static Java.Lang.String _YEAR_NUM_MONTHContent = default;
        private static bool _YEAR_NUM_MONTHReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#YEAR_NUM_MONTH_DAY"/>
        /// </summary>
        public static Java.Lang.String YEAR_NUM_MONTH_DAY { get { if (!_YEAR_NUM_MONTH_DAYReady) { _YEAR_NUM_MONTH_DAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "YEAR_NUM_MONTH_DAY"); _YEAR_NUM_MONTH_DAYReady = true; } return _YEAR_NUM_MONTH_DAYContent; } }
        private static Java.Lang.String _YEAR_NUM_MONTH_DAYContent = default;
        private static bool _YEAR_NUM_MONTH_DAYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#YEAR_NUM_MONTH_WEEKDAY_DAY"/>
        /// </summary>
        public static Java.Lang.String YEAR_NUM_MONTH_WEEKDAY_DAY { get { if (!_YEAR_NUM_MONTH_WEEKDAY_DAYReady) { _YEAR_NUM_MONTH_WEEKDAY_DAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "YEAR_NUM_MONTH_WEEKDAY_DAY"); _YEAR_NUM_MONTH_WEEKDAY_DAYReady = true; } return _YEAR_NUM_MONTH_WEEKDAY_DAYContent; } }
        private static Java.Lang.String _YEAR_NUM_MONTH_WEEKDAY_DAYContent = default;
        private static bool _YEAR_NUM_MONTH_WEEKDAY_DAYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#YEAR_QUARTER"/>
        /// </summary>
        public static Java.Lang.String YEAR_QUARTER { get { if (!_YEAR_QUARTERReady) { _YEAR_QUARTERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "YEAR_QUARTER"); _YEAR_QUARTERReady = true; } return _YEAR_QUARTERContent; } }
        private static Java.Lang.String _YEAR_QUARTERContent = default;
        private static bool _YEAR_QUARTERReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#getDateInstance()"/>
        /// </summary>
        /// <returns><see cref="Android.Icu.Text.DateFormat"/></returns>
        public static Android.Icu.Text.DateFormat GetDateInstance()
        {
            return SExecuteWithSignature<Android.Icu.Text.DateFormat>(LocalBridgeClazz, "getDateInstance", "()Landroid/icu/text/DateFormat;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#getDateInstance(android.icu.util.Calendar,int,android.icu.util.ULocale)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Util.Calendar"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="Android.Icu.Util.ULocale"/></param>
        /// <returns><see cref="Android.Icu.Text.DateFormat"/></returns>
        public static Android.Icu.Text.DateFormat GetDateInstance(Android.Icu.Util.Calendar arg0, int arg1, Android.Icu.Util.ULocale arg2)
        {
            return SExecute<Android.Icu.Text.DateFormat>(LocalBridgeClazz, "getDateInstance", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#getDateInstance(android.icu.util.Calendar,int,java.util.Locale)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Util.Calendar"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="Java.Util.Locale"/></param>
        /// <returns><see cref="Android.Icu.Text.DateFormat"/></returns>
        public static Android.Icu.Text.DateFormat GetDateInstance(Android.Icu.Util.Calendar arg0, int arg1, Java.Util.Locale arg2)
        {
            return SExecute<Android.Icu.Text.DateFormat>(LocalBridgeClazz, "getDateInstance", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#getDateInstance(android.icu.util.Calendar,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Util.Calendar"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="Android.Icu.Text.DateFormat"/></returns>
        public static Android.Icu.Text.DateFormat GetDateInstance(Android.Icu.Util.Calendar arg0, int arg1)
        {
            return SExecute<Android.Icu.Text.DateFormat>(LocalBridgeClazz, "getDateInstance", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#getDateInstance(int,android.icu.util.ULocale)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="Android.Icu.Util.ULocale"/></param>
        /// <returns><see cref="Android.Icu.Text.DateFormat"/></returns>
        public static Android.Icu.Text.DateFormat GetDateInstance(int arg0, Android.Icu.Util.ULocale arg1)
        {
            return SExecute<Android.Icu.Text.DateFormat>(LocalBridgeClazz, "getDateInstance", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#getDateInstance(int,java.util.Locale)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="Java.Util.Locale"/></param>
        /// <returns><see cref="Android.Icu.Text.DateFormat"/></returns>
        public static Android.Icu.Text.DateFormat GetDateInstance(int arg0, Java.Util.Locale arg1)
        {
            return SExecute<Android.Icu.Text.DateFormat>(LocalBridgeClazz, "getDateInstance", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#getDateInstance(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Android.Icu.Text.DateFormat"/></returns>
        public static Android.Icu.Text.DateFormat GetDateInstance(int arg0)
        {
            return SExecuteWithSignature<Android.Icu.Text.DateFormat>(LocalBridgeClazz, "getDateInstance", "(I)Landroid/icu/text/DateFormat;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#getDateTimeInstance()"/>
        /// </summary>
        /// <returns><see cref="Android.Icu.Text.DateFormat"/></returns>
        public static Android.Icu.Text.DateFormat GetDateTimeInstance()
        {
            return SExecuteWithSignature<Android.Icu.Text.DateFormat>(LocalBridgeClazz, "getDateTimeInstance", "()Landroid/icu/text/DateFormat;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#getDateTimeInstance(android.icu.util.Calendar,int,int,android.icu.util.ULocale)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Util.Calendar"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <param name="arg3"><see cref="Android.Icu.Util.ULocale"/></param>
        /// <returns><see cref="Android.Icu.Text.DateFormat"/></returns>
        public static Android.Icu.Text.DateFormat GetDateTimeInstance(Android.Icu.Util.Calendar arg0, int arg1, int arg2, Android.Icu.Util.ULocale arg3)
        {
            return SExecute<Android.Icu.Text.DateFormat>(LocalBridgeClazz, "getDateTimeInstance", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#getDateTimeInstance(android.icu.util.Calendar,int,int,java.util.Locale)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Util.Calendar"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <param name="arg3"><see cref="Java.Util.Locale"/></param>
        /// <returns><see cref="Android.Icu.Text.DateFormat"/></returns>
        public static Android.Icu.Text.DateFormat GetDateTimeInstance(Android.Icu.Util.Calendar arg0, int arg1, int arg2, Java.Util.Locale arg3)
        {
            return SExecute<Android.Icu.Text.DateFormat>(LocalBridgeClazz, "getDateTimeInstance", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#getDateTimeInstance(android.icu.util.Calendar,int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Util.Calendar"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <returns><see cref="Android.Icu.Text.DateFormat"/></returns>
        public static Android.Icu.Text.DateFormat GetDateTimeInstance(Android.Icu.Util.Calendar arg0, int arg1, int arg2)
        {
            return SExecute<Android.Icu.Text.DateFormat>(LocalBridgeClazz, "getDateTimeInstance", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#getDateTimeInstance(int,int,android.icu.util.ULocale)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="Android.Icu.Util.ULocale"/></param>
        /// <returns><see cref="Android.Icu.Text.DateFormat"/></returns>
        public static Android.Icu.Text.DateFormat GetDateTimeInstance(int arg0, int arg1, Android.Icu.Util.ULocale arg2)
        {
            return SExecute<Android.Icu.Text.DateFormat>(LocalBridgeClazz, "getDateTimeInstance", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#getDateTimeInstance(int,int,java.util.Locale)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="Java.Util.Locale"/></param>
        /// <returns><see cref="Android.Icu.Text.DateFormat"/></returns>
        public static Android.Icu.Text.DateFormat GetDateTimeInstance(int arg0, int arg1, Java.Util.Locale arg2)
        {
            return SExecute<Android.Icu.Text.DateFormat>(LocalBridgeClazz, "getDateTimeInstance", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#getDateTimeInstance(int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="Android.Icu.Text.DateFormat"/></returns>
        public static Android.Icu.Text.DateFormat GetDateTimeInstance(int arg0, int arg1)
        {
            return SExecute<Android.Icu.Text.DateFormat>(LocalBridgeClazz, "getDateTimeInstance", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#getInstance()"/>
        /// </summary>
        /// <returns><see cref="Android.Icu.Text.DateFormat"/></returns>
        public static Android.Icu.Text.DateFormat GetInstance()
        {
            return SExecuteWithSignature<Android.Icu.Text.DateFormat>(LocalBridgeClazz, "getInstance", "()Landroid/icu/text/DateFormat;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#getInstance(android.icu.util.Calendar,android.icu.util.ULocale)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Util.Calendar"/></param>
        /// <param name="arg1"><see cref="Android.Icu.Util.ULocale"/></param>
        /// <returns><see cref="Android.Icu.Text.DateFormat"/></returns>
        public static Android.Icu.Text.DateFormat GetInstance(Android.Icu.Util.Calendar arg0, Android.Icu.Util.ULocale arg1)
        {
            return SExecute<Android.Icu.Text.DateFormat>(LocalBridgeClazz, "getInstance", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#getInstance(android.icu.util.Calendar,java.util.Locale)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Util.Calendar"/></param>
        /// <param name="arg1"><see cref="Java.Util.Locale"/></param>
        /// <returns><see cref="Android.Icu.Text.DateFormat"/></returns>
        public static Android.Icu.Text.DateFormat GetInstance(Android.Icu.Util.Calendar arg0, Java.Util.Locale arg1)
        {
            return SExecute<Android.Icu.Text.DateFormat>(LocalBridgeClazz, "getInstance", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#getInstance(android.icu.util.Calendar)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Util.Calendar"/></param>
        /// <returns><see cref="Android.Icu.Text.DateFormat"/></returns>
        public static Android.Icu.Text.DateFormat GetInstance(Android.Icu.Util.Calendar arg0)
        {
            return SExecuteWithSignature<Android.Icu.Text.DateFormat>(LocalBridgeClazz, "getInstance", "(Landroid/icu/util/Calendar;)Landroid/icu/text/DateFormat;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#getInstanceForSkeleton(android.icu.util.Calendar,java.lang.String,android.icu.util.ULocale)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Util.Calendar"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="Android.Icu.Util.ULocale"/></param>
        /// <returns><see cref="Android.Icu.Text.DateFormat"/></returns>
        public static Android.Icu.Text.DateFormat GetInstanceForSkeleton(Android.Icu.Util.Calendar arg0, Java.Lang.String arg1, Android.Icu.Util.ULocale arg2)
        {
            return SExecute<Android.Icu.Text.DateFormat>(LocalBridgeClazz, "getInstanceForSkeleton", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#getInstanceForSkeleton(android.icu.util.Calendar,java.lang.String,java.util.Locale)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Util.Calendar"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="Java.Util.Locale"/></param>
        /// <returns><see cref="Android.Icu.Text.DateFormat"/></returns>
        public static Android.Icu.Text.DateFormat GetInstanceForSkeleton(Android.Icu.Util.Calendar arg0, Java.Lang.String arg1, Java.Util.Locale arg2)
        {
            return SExecute<Android.Icu.Text.DateFormat>(LocalBridgeClazz, "getInstanceForSkeleton", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#getInstanceForSkeleton(java.lang.String,android.icu.util.ULocale)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Android.Icu.Util.ULocale"/></param>
        /// <returns><see cref="Android.Icu.Text.DateFormat"/></returns>
        public static Android.Icu.Text.DateFormat GetInstanceForSkeleton(Java.Lang.String arg0, Android.Icu.Util.ULocale arg1)
        {
            return SExecute<Android.Icu.Text.DateFormat>(LocalBridgeClazz, "getInstanceForSkeleton", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#getInstanceForSkeleton(java.lang.String,java.util.Locale)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Java.Util.Locale"/></param>
        /// <returns><see cref="Android.Icu.Text.DateFormat"/></returns>
        public static Android.Icu.Text.DateFormat GetInstanceForSkeleton(Java.Lang.String arg0, Java.Util.Locale arg1)
        {
            return SExecute<Android.Icu.Text.DateFormat>(LocalBridgeClazz, "getInstanceForSkeleton", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#getInstanceForSkeleton(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Android.Icu.Text.DateFormat"/></returns>
        public static Android.Icu.Text.DateFormat GetInstanceForSkeleton(Java.Lang.String arg0)
        {
            return SExecuteWithSignature<Android.Icu.Text.DateFormat>(LocalBridgeClazz, "getInstanceForSkeleton", "(Ljava/lang/String;)Landroid/icu/text/DateFormat;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#getPatternInstance(android.icu.util.Calendar,java.lang.String,android.icu.util.ULocale)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Util.Calendar"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="Android.Icu.Util.ULocale"/></param>
        /// <returns><see cref="Android.Icu.Text.DateFormat"/></returns>
        public static Android.Icu.Text.DateFormat GetPatternInstance(Android.Icu.Util.Calendar arg0, Java.Lang.String arg1, Android.Icu.Util.ULocale arg2)
        {
            return SExecute<Android.Icu.Text.DateFormat>(LocalBridgeClazz, "getPatternInstance", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#getPatternInstance(android.icu.util.Calendar,java.lang.String,java.util.Locale)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Util.Calendar"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="Java.Util.Locale"/></param>
        /// <returns><see cref="Android.Icu.Text.DateFormat"/></returns>
        public static Android.Icu.Text.DateFormat GetPatternInstance(Android.Icu.Util.Calendar arg0, Java.Lang.String arg1, Java.Util.Locale arg2)
        {
            return SExecute<Android.Icu.Text.DateFormat>(LocalBridgeClazz, "getPatternInstance", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#getPatternInstance(java.lang.String,android.icu.util.ULocale)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Android.Icu.Util.ULocale"/></param>
        /// <returns><see cref="Android.Icu.Text.DateFormat"/></returns>
        public static Android.Icu.Text.DateFormat GetPatternInstance(Java.Lang.String arg0, Android.Icu.Util.ULocale arg1)
        {
            return SExecute<Android.Icu.Text.DateFormat>(LocalBridgeClazz, "getPatternInstance", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#getPatternInstance(java.lang.String,java.util.Locale)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Java.Util.Locale"/></param>
        /// <returns><see cref="Android.Icu.Text.DateFormat"/></returns>
        public static Android.Icu.Text.DateFormat GetPatternInstance(Java.Lang.String arg0, Java.Util.Locale arg1)
        {
            return SExecute<Android.Icu.Text.DateFormat>(LocalBridgeClazz, "getPatternInstance", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#getPatternInstance(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Android.Icu.Text.DateFormat"/></returns>
        public static Android.Icu.Text.DateFormat GetPatternInstance(Java.Lang.String arg0)
        {
            return SExecuteWithSignature<Android.Icu.Text.DateFormat>(LocalBridgeClazz, "getPatternInstance", "(Ljava/lang/String;)Landroid/icu/text/DateFormat;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#getTimeInstance()"/>
        /// </summary>
        /// <returns><see cref="Android.Icu.Text.DateFormat"/></returns>
        public static Android.Icu.Text.DateFormat GetTimeInstance()
        {
            return SExecuteWithSignature<Android.Icu.Text.DateFormat>(LocalBridgeClazz, "getTimeInstance", "()Landroid/icu/text/DateFormat;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#getTimeInstance(android.icu.util.Calendar,int,android.icu.util.ULocale)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Util.Calendar"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="Android.Icu.Util.ULocale"/></param>
        /// <returns><see cref="Android.Icu.Text.DateFormat"/></returns>
        public static Android.Icu.Text.DateFormat GetTimeInstance(Android.Icu.Util.Calendar arg0, int arg1, Android.Icu.Util.ULocale arg2)
        {
            return SExecute<Android.Icu.Text.DateFormat>(LocalBridgeClazz, "getTimeInstance", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#getTimeInstance(android.icu.util.Calendar,int,java.util.Locale)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Util.Calendar"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="Java.Util.Locale"/></param>
        /// <returns><see cref="Android.Icu.Text.DateFormat"/></returns>
        public static Android.Icu.Text.DateFormat GetTimeInstance(Android.Icu.Util.Calendar arg0, int arg1, Java.Util.Locale arg2)
        {
            return SExecute<Android.Icu.Text.DateFormat>(LocalBridgeClazz, "getTimeInstance", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#getTimeInstance(android.icu.util.Calendar,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Util.Calendar"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="Android.Icu.Text.DateFormat"/></returns>
        public static Android.Icu.Text.DateFormat GetTimeInstance(Android.Icu.Util.Calendar arg0, int arg1)
        {
            return SExecute<Android.Icu.Text.DateFormat>(LocalBridgeClazz, "getTimeInstance", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#getTimeInstance(int,android.icu.util.ULocale)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="Android.Icu.Util.ULocale"/></param>
        /// <returns><see cref="Android.Icu.Text.DateFormat"/></returns>
        public static Android.Icu.Text.DateFormat GetTimeInstance(int arg0, Android.Icu.Util.ULocale arg1)
        {
            return SExecute<Android.Icu.Text.DateFormat>(LocalBridgeClazz, "getTimeInstance", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#getTimeInstance(int,java.util.Locale)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="Java.Util.Locale"/></param>
        /// <returns><see cref="Android.Icu.Text.DateFormat"/></returns>
        public static Android.Icu.Text.DateFormat GetTimeInstance(int arg0, Java.Util.Locale arg1)
        {
            return SExecute<Android.Icu.Text.DateFormat>(LocalBridgeClazz, "getTimeInstance", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#getTimeInstance(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Android.Icu.Text.DateFormat"/></returns>
        public static Android.Icu.Text.DateFormat GetTimeInstance(int arg0)
        {
            return SExecuteWithSignature<Android.Icu.Text.DateFormat>(LocalBridgeClazz, "getTimeInstance", "(I)Landroid/icu/text/DateFormat;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#getAvailableLocales()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.Locale"/></returns>
        public static Java.Util.Locale[] GetAvailableLocales()
        {
            return SExecuteWithSignatureArray<Java.Util.Locale>(LocalBridgeClazz, "getAvailableLocales", "()[Ljava/util/Locale;");
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#format(android.icu.util.Calendar,java.lang.StringBuffer,java.text.FieldPosition)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Util.Calendar"/></param>
        /// <param name="arg1"><see cref="Java.Lang.StringBuffer"/></param>
        /// <param name="arg2"><see cref="Java.Text.FieldPosition"/></param>
        /// <returns><see cref="Java.Lang.StringBuffer"/></returns>
        public Java.Lang.StringBuffer Format(Android.Icu.Util.Calendar arg0, Java.Lang.StringBuffer arg1, Java.Text.FieldPosition arg2)
        {
            return IExecute<Java.Lang.StringBuffer>("format", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#parse(java.lang.String,android.icu.util.Calendar,java.text.ParsePosition)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Android.Icu.Util.Calendar"/></param>
        /// <param name="arg2"><see cref="Java.Text.ParsePosition"/></param>
        public void Parse(Java.Lang.String arg0, Android.Icu.Util.Calendar arg1, Java.Text.ParsePosition arg2)
        {
            IExecute("parse", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#setBooleanAttribute(android.icu.text.DateFormat.BooleanAttribute,boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Text.DateFormat.BooleanAttribute"/></param>
        /// <param name="arg1"><see cref="bool"/></param>
        /// <returns><see cref="Android.Icu.Text.DateFormat"/></returns>
        public Android.Icu.Text.DateFormat SetBooleanAttribute(Android.Icu.Text.DateFormat.BooleanAttribute arg0, bool arg1)
        {
            return IExecute<Android.Icu.Text.DateFormat>("setBooleanAttribute", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#getContext(android.icu.text.DisplayContext.Type)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Text.DisplayContext.Type"/></param>
        /// <returns><see cref="Android.Icu.Text.DisplayContext"/></returns>
        public Android.Icu.Text.DisplayContext GetContext(Android.Icu.Text.DisplayContext.Type arg0)
        {
            return IExecuteWithSignature<Android.Icu.Text.DisplayContext>("getContext", "(Landroid/icu/text/DisplayContext$Type;)Landroid/icu/text/DisplayContext;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#getNumberFormat()"/>
        /// </summary>
        /// <returns><see cref="Android.Icu.Text.NumberFormat"/></returns>
        public Android.Icu.Text.NumberFormat GetNumberFormat()
        {
            return IExecuteWithSignature<Android.Icu.Text.NumberFormat>("getNumberFormat", "()Landroid/icu/text/NumberFormat;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#getCalendar()"/>
        /// </summary>
        /// <returns><see cref="Android.Icu.Util.Calendar"/></returns>
        public Android.Icu.Util.Calendar GetCalendar()
        {
            return IExecuteWithSignature<Android.Icu.Util.Calendar>("getCalendar", "()Landroid/icu/util/Calendar;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#getTimeZone()"/>
        /// </summary>
        /// <returns><see cref="Android.Icu.Util.TimeZone"/></returns>
        public Android.Icu.Util.TimeZone GetTimeZone()
        {
            return IExecuteWithSignature<Android.Icu.Util.TimeZone>("getTimeZone", "()Landroid/icu/util/TimeZone;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#getBooleanAttribute(android.icu.text.DateFormat.BooleanAttribute)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Text.DateFormat.BooleanAttribute"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool GetBooleanAttribute(Android.Icu.Text.DateFormat.BooleanAttribute arg0)
        {
            return IExecuteWithSignature<bool>("getBooleanAttribute", "(Landroid/icu/text/DateFormat$BooleanAttribute;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#isCalendarLenient()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsCalendarLenient()
        {
            return IExecuteWithSignature<bool>("isCalendarLenient", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#isLenient()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsLenient()
        {
            return IExecuteWithSignature<bool>("isLenient", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#format(java.util.Date)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Date"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String Format(Java.Util.Date arg0)
        {
            return IExecuteWithSignature<Java.Lang.String>("format", "(Ljava/util/Date;)Ljava/lang/String;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Date"/></param>
        /// <param name="arg1"><see cref="Java.Lang.StringBuffer"/></param>
        /// <param name="arg2"><see cref="Java.Text.FieldPosition"/></param>
        /// <returns><see cref="Java.Lang.StringBuffer"/></returns>
        public Java.Lang.StringBuffer Format(Java.Util.Date arg0, Java.Lang.StringBuffer arg1, Java.Text.FieldPosition arg2)
        {
            return IExecute<Java.Lang.StringBuffer>("format", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#parse(java.lang.String,java.text.ParsePosition)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Java.Text.ParsePosition"/></param>
        /// <returns><see cref="Java.Util.Date"/></returns>
        public Java.Util.Date Parse(Java.Lang.String arg0, Java.Text.ParsePosition arg1)
        {
            return IExecute<Java.Util.Date>("parse", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#parse(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Java.Util.Date"/></returns>
        /// <exception cref="Java.Text.ParseException"/>
        public Java.Util.Date Parse(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<Java.Util.Date>("parse", "(Ljava/lang/String;)Ljava/util/Date;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#setCalendar(android.icu.util.Calendar)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Util.Calendar"/></param>
        public void SetCalendar(Android.Icu.Util.Calendar arg0)
        {
            IExecuteWithSignature("setCalendar", "(Landroid/icu/util/Calendar;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#setCalendarLenient(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetCalendarLenient(bool arg0)
        {
            IExecuteWithSignature("setCalendarLenient", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#setContext(android.icu.text.DisplayContext)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Text.DisplayContext"/></param>
        public void SetContext(Android.Icu.Text.DisplayContext arg0)
        {
            IExecuteWithSignature("setContext", "(Landroid/icu/text/DisplayContext;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#setLenient(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetLenient(bool arg0)
        {
            IExecuteWithSignature("setLenient", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#setNumberFormat(android.icu.text.NumberFormat)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Text.NumberFormat"/></param>
        public void SetNumberFormat(Android.Icu.Text.NumberFormat arg0)
        {
            IExecuteWithSignature("setNumberFormat", "(Landroid/icu/text/NumberFormat;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.html#setTimeZone(android.icu.util.TimeZone)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Util.TimeZone"/></param>
        public void SetTimeZone(Android.Icu.Util.TimeZone arg0)
        {
            IExecuteWithSignature("setTimeZone", "(Landroid/icu/util/TimeZone;)V", arg0);
        }

        #endregion

        #region Nested classes
        #region BooleanAttribute
        public partial class BooleanAttribute
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.BooleanAttribute.html#PARSE_ALLOW_NUMERIC"/>
            /// </summary>
            public static Android.Icu.Text.DateFormat.BooleanAttribute PARSE_ALLOW_NUMERIC { get { if (!_PARSE_ALLOW_NUMERICReady) { _PARSE_ALLOW_NUMERICContent = SGetField<Android.Icu.Text.DateFormat.BooleanAttribute>(LocalBridgeClazz, "PARSE_ALLOW_NUMERIC"); _PARSE_ALLOW_NUMERICReady = true; } return _PARSE_ALLOW_NUMERICContent; } }
            private static Android.Icu.Text.DateFormat.BooleanAttribute _PARSE_ALLOW_NUMERICContent = default;
            private static bool _PARSE_ALLOW_NUMERICReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.BooleanAttribute.html#PARSE_ALLOW_WHITESPACE"/>
            /// </summary>
            public static Android.Icu.Text.DateFormat.BooleanAttribute PARSE_ALLOW_WHITESPACE { get { if (!_PARSE_ALLOW_WHITESPACEReady) { _PARSE_ALLOW_WHITESPACEContent = SGetField<Android.Icu.Text.DateFormat.BooleanAttribute>(LocalBridgeClazz, "PARSE_ALLOW_WHITESPACE"); _PARSE_ALLOW_WHITESPACEReady = true; } return _PARSE_ALLOW_WHITESPACEContent; } }
            private static Android.Icu.Text.DateFormat.BooleanAttribute _PARSE_ALLOW_WHITESPACEContent = default;
            private static bool _PARSE_ALLOW_WHITESPACEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.BooleanAttribute.html#PARSE_MULTIPLE_PATTERNS_FOR_MATCH"/>
            /// </summary>
            public static Android.Icu.Text.DateFormat.BooleanAttribute PARSE_MULTIPLE_PATTERNS_FOR_MATCH { get { if (!_PARSE_MULTIPLE_PATTERNS_FOR_MATCHReady) { _PARSE_MULTIPLE_PATTERNS_FOR_MATCHContent = SGetField<Android.Icu.Text.DateFormat.BooleanAttribute>(LocalBridgeClazz, "PARSE_MULTIPLE_PATTERNS_FOR_MATCH"); _PARSE_MULTIPLE_PATTERNS_FOR_MATCHReady = true; } return _PARSE_MULTIPLE_PATTERNS_FOR_MATCHContent; } }
            private static Android.Icu.Text.DateFormat.BooleanAttribute _PARSE_MULTIPLE_PATTERNS_FOR_MATCHContent = default;
            private static bool _PARSE_MULTIPLE_PATTERNS_FOR_MATCHReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.BooleanAttribute.html#PARSE_PARTIAL_LITERAL_MATCH"/>
            /// </summary>
            public static Android.Icu.Text.DateFormat.BooleanAttribute PARSE_PARTIAL_LITERAL_MATCH { get { if (!_PARSE_PARTIAL_LITERAL_MATCHReady) { _PARSE_PARTIAL_LITERAL_MATCHContent = SGetField<Android.Icu.Text.DateFormat.BooleanAttribute>(LocalBridgeClazz, "PARSE_PARTIAL_LITERAL_MATCH"); _PARSE_PARTIAL_LITERAL_MATCHReady = true; } return _PARSE_PARTIAL_LITERAL_MATCHContent; } }
            private static Android.Icu.Text.DateFormat.BooleanAttribute _PARSE_PARTIAL_LITERAL_MATCHContent = default;
            private static bool _PARSE_PARTIAL_LITERAL_MATCHReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.BooleanAttribute.html#valueOf(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Android.Icu.Text.DateFormat.BooleanAttribute"/></returns>
            public static Android.Icu.Text.DateFormat.BooleanAttribute ValueOf(Java.Lang.String arg0)
            {
                return SExecuteWithSignature<Android.Icu.Text.DateFormat.BooleanAttribute>(LocalBridgeClazz, "valueOf", "(Ljava/lang/String;)Landroid/icu/text/DateFormat$BooleanAttribute;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.BooleanAttribute.html#values()"/>
            /// </summary>
            /// <returns><see cref="Android.Icu.Text.DateFormat.BooleanAttribute"/></returns>
            public static Android.Icu.Text.DateFormat.BooleanAttribute[] Values()
            {
                return SExecuteWithSignatureArray<Android.Icu.Text.DateFormat.BooleanAttribute>(LocalBridgeClazz, "values", "()[Landroid/icu/text/DateFormat$BooleanAttribute;");
            }

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region Field
        public partial class Field
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.Field.html#AM_PM"/>
            /// </summary>
            public static Android.Icu.Text.DateFormat.Field AM_PM { get { if (!_AM_PMReady) { _AM_PMContent = SGetField<Android.Icu.Text.DateFormat.Field>(LocalBridgeClazz, "AM_PM"); _AM_PMReady = true; } return _AM_PMContent; } }
            private static Android.Icu.Text.DateFormat.Field _AM_PMContent = default;
            private static bool _AM_PMReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.Field.html#AM_PM_MIDNIGHT_NOON"/>
            /// </summary>
            public static Android.Icu.Text.DateFormat.Field AM_PM_MIDNIGHT_NOON { get { if (!_AM_PM_MIDNIGHT_NOONReady) { _AM_PM_MIDNIGHT_NOONContent = SGetField<Android.Icu.Text.DateFormat.Field>(LocalBridgeClazz, "AM_PM_MIDNIGHT_NOON"); _AM_PM_MIDNIGHT_NOONReady = true; } return _AM_PM_MIDNIGHT_NOONContent; } }
            private static Android.Icu.Text.DateFormat.Field _AM_PM_MIDNIGHT_NOONContent = default;
            private static bool _AM_PM_MIDNIGHT_NOONReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.Field.html#DAY_OF_MONTH"/>
            /// </summary>
            public static Android.Icu.Text.DateFormat.Field DAY_OF_MONTH { get { if (!_DAY_OF_MONTHReady) { _DAY_OF_MONTHContent = SGetField<Android.Icu.Text.DateFormat.Field>(LocalBridgeClazz, "DAY_OF_MONTH"); _DAY_OF_MONTHReady = true; } return _DAY_OF_MONTHContent; } }
            private static Android.Icu.Text.DateFormat.Field _DAY_OF_MONTHContent = default;
            private static bool _DAY_OF_MONTHReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.Field.html#DAY_OF_WEEK"/>
            /// </summary>
            public static Android.Icu.Text.DateFormat.Field DAY_OF_WEEK { get { if (!_DAY_OF_WEEKReady) { _DAY_OF_WEEKContent = SGetField<Android.Icu.Text.DateFormat.Field>(LocalBridgeClazz, "DAY_OF_WEEK"); _DAY_OF_WEEKReady = true; } return _DAY_OF_WEEKContent; } }
            private static Android.Icu.Text.DateFormat.Field _DAY_OF_WEEKContent = default;
            private static bool _DAY_OF_WEEKReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.Field.html#DAY_OF_WEEK_IN_MONTH"/>
            /// </summary>
            public static Android.Icu.Text.DateFormat.Field DAY_OF_WEEK_IN_MONTH { get { if (!_DAY_OF_WEEK_IN_MONTHReady) { _DAY_OF_WEEK_IN_MONTHContent = SGetField<Android.Icu.Text.DateFormat.Field>(LocalBridgeClazz, "DAY_OF_WEEK_IN_MONTH"); _DAY_OF_WEEK_IN_MONTHReady = true; } return _DAY_OF_WEEK_IN_MONTHContent; } }
            private static Android.Icu.Text.DateFormat.Field _DAY_OF_WEEK_IN_MONTHContent = default;
            private static bool _DAY_OF_WEEK_IN_MONTHReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.Field.html#DAY_OF_YEAR"/>
            /// </summary>
            public static Android.Icu.Text.DateFormat.Field DAY_OF_YEAR { get { if (!_DAY_OF_YEARReady) { _DAY_OF_YEARContent = SGetField<Android.Icu.Text.DateFormat.Field>(LocalBridgeClazz, "DAY_OF_YEAR"); _DAY_OF_YEARReady = true; } return _DAY_OF_YEARContent; } }
            private static Android.Icu.Text.DateFormat.Field _DAY_OF_YEARContent = default;
            private static bool _DAY_OF_YEARReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.Field.html#DOW_LOCAL"/>
            /// </summary>
            public static Android.Icu.Text.DateFormat.Field DOW_LOCAL { get { if (!_DOW_LOCALReady) { _DOW_LOCALContent = SGetField<Android.Icu.Text.DateFormat.Field>(LocalBridgeClazz, "DOW_LOCAL"); _DOW_LOCALReady = true; } return _DOW_LOCALContent; } }
            private static Android.Icu.Text.DateFormat.Field _DOW_LOCALContent = default;
            private static bool _DOW_LOCALReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.Field.html#ERA"/>
            /// </summary>
            public static Android.Icu.Text.DateFormat.Field ERA { get { if (!_ERAReady) { _ERAContent = SGetField<Android.Icu.Text.DateFormat.Field>(LocalBridgeClazz, "ERA"); _ERAReady = true; } return _ERAContent; } }
            private static Android.Icu.Text.DateFormat.Field _ERAContent = default;
            private static bool _ERAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.Field.html#EXTENDED_YEAR"/>
            /// </summary>
            public static Android.Icu.Text.DateFormat.Field EXTENDED_YEAR { get { if (!_EXTENDED_YEARReady) { _EXTENDED_YEARContent = SGetField<Android.Icu.Text.DateFormat.Field>(LocalBridgeClazz, "EXTENDED_YEAR"); _EXTENDED_YEARReady = true; } return _EXTENDED_YEARContent; } }
            private static Android.Icu.Text.DateFormat.Field _EXTENDED_YEARContent = default;
            private static bool _EXTENDED_YEARReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.Field.html#FLEXIBLE_DAY_PERIOD"/>
            /// </summary>
            public static Android.Icu.Text.DateFormat.Field FLEXIBLE_DAY_PERIOD { get { if (!_FLEXIBLE_DAY_PERIODReady) { _FLEXIBLE_DAY_PERIODContent = SGetField<Android.Icu.Text.DateFormat.Field>(LocalBridgeClazz, "FLEXIBLE_DAY_PERIOD"); _FLEXIBLE_DAY_PERIODReady = true; } return _FLEXIBLE_DAY_PERIODContent; } }
            private static Android.Icu.Text.DateFormat.Field _FLEXIBLE_DAY_PERIODContent = default;
            private static bool _FLEXIBLE_DAY_PERIODReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.Field.html#HOUR_OF_DAY0"/>
            /// </summary>
            public static Android.Icu.Text.DateFormat.Field HOUR_OF_DAY0 { get { if (!_HOUR_OF_DAY0Ready) { _HOUR_OF_DAY0Content = SGetField<Android.Icu.Text.DateFormat.Field>(LocalBridgeClazz, "HOUR_OF_DAY0"); _HOUR_OF_DAY0Ready = true; } return _HOUR_OF_DAY0Content; } }
            private static Android.Icu.Text.DateFormat.Field _HOUR_OF_DAY0Content = default;
            private static bool _HOUR_OF_DAY0Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.Field.html#HOUR_OF_DAY1"/>
            /// </summary>
            public static Android.Icu.Text.DateFormat.Field HOUR_OF_DAY1 { get { if (!_HOUR_OF_DAY1Ready) { _HOUR_OF_DAY1Content = SGetField<Android.Icu.Text.DateFormat.Field>(LocalBridgeClazz, "HOUR_OF_DAY1"); _HOUR_OF_DAY1Ready = true; } return _HOUR_OF_DAY1Content; } }
            private static Android.Icu.Text.DateFormat.Field _HOUR_OF_DAY1Content = default;
            private static bool _HOUR_OF_DAY1Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.Field.html#HOUR0"/>
            /// </summary>
            public static Android.Icu.Text.DateFormat.Field HOUR0 { get { if (!_HOUR0Ready) { _HOUR0Content = SGetField<Android.Icu.Text.DateFormat.Field>(LocalBridgeClazz, "HOUR0"); _HOUR0Ready = true; } return _HOUR0Content; } }
            private static Android.Icu.Text.DateFormat.Field _HOUR0Content = default;
            private static bool _HOUR0Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.Field.html#HOUR1"/>
            /// </summary>
            public static Android.Icu.Text.DateFormat.Field HOUR1 { get { if (!_HOUR1Ready) { _HOUR1Content = SGetField<Android.Icu.Text.DateFormat.Field>(LocalBridgeClazz, "HOUR1"); _HOUR1Ready = true; } return _HOUR1Content; } }
            private static Android.Icu.Text.DateFormat.Field _HOUR1Content = default;
            private static bool _HOUR1Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.Field.html#JULIAN_DAY"/>
            /// </summary>
            public static Android.Icu.Text.DateFormat.Field JULIAN_DAY { get { if (!_JULIAN_DAYReady) { _JULIAN_DAYContent = SGetField<Android.Icu.Text.DateFormat.Field>(LocalBridgeClazz, "JULIAN_DAY"); _JULIAN_DAYReady = true; } return _JULIAN_DAYContent; } }
            private static Android.Icu.Text.DateFormat.Field _JULIAN_DAYContent = default;
            private static bool _JULIAN_DAYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.Field.html#MILLISECOND"/>
            /// </summary>
            public static Android.Icu.Text.DateFormat.Field MILLISECOND { get { if (!_MILLISECONDReady) { _MILLISECONDContent = SGetField<Android.Icu.Text.DateFormat.Field>(LocalBridgeClazz, "MILLISECOND"); _MILLISECONDReady = true; } return _MILLISECONDContent; } }
            private static Android.Icu.Text.DateFormat.Field _MILLISECONDContent = default;
            private static bool _MILLISECONDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.Field.html#MILLISECONDS_IN_DAY"/>
            /// </summary>
            public static Android.Icu.Text.DateFormat.Field MILLISECONDS_IN_DAY { get { if (!_MILLISECONDS_IN_DAYReady) { _MILLISECONDS_IN_DAYContent = SGetField<Android.Icu.Text.DateFormat.Field>(LocalBridgeClazz, "MILLISECONDS_IN_DAY"); _MILLISECONDS_IN_DAYReady = true; } return _MILLISECONDS_IN_DAYContent; } }
            private static Android.Icu.Text.DateFormat.Field _MILLISECONDS_IN_DAYContent = default;
            private static bool _MILLISECONDS_IN_DAYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.Field.html#MINUTE"/>
            /// </summary>
            public static Android.Icu.Text.DateFormat.Field MINUTE { get { if (!_MINUTEReady) { _MINUTEContent = SGetField<Android.Icu.Text.DateFormat.Field>(LocalBridgeClazz, "MINUTE"); _MINUTEReady = true; } return _MINUTEContent; } }
            private static Android.Icu.Text.DateFormat.Field _MINUTEContent = default;
            private static bool _MINUTEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.Field.html#MONTH"/>
            /// </summary>
            public static Android.Icu.Text.DateFormat.Field MONTH { get { if (!_MONTHReady) { _MONTHContent = SGetField<Android.Icu.Text.DateFormat.Field>(LocalBridgeClazz, "MONTH"); _MONTHReady = true; } return _MONTHContent; } }
            private static Android.Icu.Text.DateFormat.Field _MONTHContent = default;
            private static bool _MONTHReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.Field.html#QUARTER"/>
            /// </summary>
            public static Android.Icu.Text.DateFormat.Field QUARTER { get { if (!_QUARTERReady) { _QUARTERContent = SGetField<Android.Icu.Text.DateFormat.Field>(LocalBridgeClazz, "QUARTER"); _QUARTERReady = true; } return _QUARTERContent; } }
            private static Android.Icu.Text.DateFormat.Field _QUARTERContent = default;
            private static bool _QUARTERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.Field.html#SECOND"/>
            /// </summary>
            public static Android.Icu.Text.DateFormat.Field SECOND { get { if (!_SECONDReady) { _SECONDContent = SGetField<Android.Icu.Text.DateFormat.Field>(LocalBridgeClazz, "SECOND"); _SECONDReady = true; } return _SECONDContent; } }
            private static Android.Icu.Text.DateFormat.Field _SECONDContent = default;
            private static bool _SECONDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.Field.html#TIME_ZONE"/>
            /// </summary>
            public static Android.Icu.Text.DateFormat.Field TIME_ZONE { get { if (!_TIME_ZONEReady) { _TIME_ZONEContent = SGetField<Android.Icu.Text.DateFormat.Field>(LocalBridgeClazz, "TIME_ZONE"); _TIME_ZONEReady = true; } return _TIME_ZONEContent; } }
            private static Android.Icu.Text.DateFormat.Field _TIME_ZONEContent = default;
            private static bool _TIME_ZONEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.Field.html#WEEK_OF_MONTH"/>
            /// </summary>
            public static Android.Icu.Text.DateFormat.Field WEEK_OF_MONTH { get { if (!_WEEK_OF_MONTHReady) { _WEEK_OF_MONTHContent = SGetField<Android.Icu.Text.DateFormat.Field>(LocalBridgeClazz, "WEEK_OF_MONTH"); _WEEK_OF_MONTHReady = true; } return _WEEK_OF_MONTHContent; } }
            private static Android.Icu.Text.DateFormat.Field _WEEK_OF_MONTHContent = default;
            private static bool _WEEK_OF_MONTHReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.Field.html#WEEK_OF_YEAR"/>
            /// </summary>
            public static Android.Icu.Text.DateFormat.Field WEEK_OF_YEAR { get { if (!_WEEK_OF_YEARReady) { _WEEK_OF_YEARContent = SGetField<Android.Icu.Text.DateFormat.Field>(LocalBridgeClazz, "WEEK_OF_YEAR"); _WEEK_OF_YEARReady = true; } return _WEEK_OF_YEARContent; } }
            private static Android.Icu.Text.DateFormat.Field _WEEK_OF_YEARContent = default;
            private static bool _WEEK_OF_YEARReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.Field.html#YEAR"/>
            /// </summary>
            public static Android.Icu.Text.DateFormat.Field YEAR { get { if (!_YEARReady) { _YEARContent = SGetField<Android.Icu.Text.DateFormat.Field>(LocalBridgeClazz, "YEAR"); _YEARReady = true; } return _YEARContent; } }
            private static Android.Icu.Text.DateFormat.Field _YEARContent = default;
            private static bool _YEARReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.Field.html#YEAR_WOY"/>
            /// </summary>
            public static Android.Icu.Text.DateFormat.Field YEAR_WOY { get { if (!_YEAR_WOYReady) { _YEAR_WOYContent = SGetField<Android.Icu.Text.DateFormat.Field>(LocalBridgeClazz, "YEAR_WOY"); _YEAR_WOYReady = true; } return _YEAR_WOYContent; } }
            private static Android.Icu.Text.DateFormat.Field _YEAR_WOYContent = default;
            private static bool _YEAR_WOYReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.Field.html#ofCalendarField(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <returns><see cref="Android.Icu.Text.DateFormat.Field"/></returns>
            public static Android.Icu.Text.DateFormat.Field OfCalendarField(int arg0)
            {
                return SExecuteWithSignature<Android.Icu.Text.DateFormat.Field>(LocalBridgeClazz, "ofCalendarField", "(I)Landroid/icu/text/DateFormat$Field;", arg0);
            }

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.Field.html#getCalendarField()"/>
            /// </summary>
            /// <returns><see cref="int"/></returns>
            public int GetCalendarField()
            {
                return IExecuteWithSignature<int>("getCalendarField", "()I");
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region HourCycle
        public partial class HourCycle
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.HourCycle.html#HOUR_CYCLE_11"/>
            /// </summary>
            public static Android.Icu.Text.DateFormat.HourCycle HOUR_CYCLE_11 { get { if (!_HOUR_CYCLE_11Ready) { _HOUR_CYCLE_11Content = SGetField<Android.Icu.Text.DateFormat.HourCycle>(LocalBridgeClazz, "HOUR_CYCLE_11"); _HOUR_CYCLE_11Ready = true; } return _HOUR_CYCLE_11Content; } }
            private static Android.Icu.Text.DateFormat.HourCycle _HOUR_CYCLE_11Content = default;
            private static bool _HOUR_CYCLE_11Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.HourCycle.html#HOUR_CYCLE_12"/>
            /// </summary>
            public static Android.Icu.Text.DateFormat.HourCycle HOUR_CYCLE_12 { get { if (!_HOUR_CYCLE_12Ready) { _HOUR_CYCLE_12Content = SGetField<Android.Icu.Text.DateFormat.HourCycle>(LocalBridgeClazz, "HOUR_CYCLE_12"); _HOUR_CYCLE_12Ready = true; } return _HOUR_CYCLE_12Content; } }
            private static Android.Icu.Text.DateFormat.HourCycle _HOUR_CYCLE_12Content = default;
            private static bool _HOUR_CYCLE_12Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.HourCycle.html#HOUR_CYCLE_23"/>
            /// </summary>
            public static Android.Icu.Text.DateFormat.HourCycle HOUR_CYCLE_23 { get { if (!_HOUR_CYCLE_23Ready) { _HOUR_CYCLE_23Content = SGetField<Android.Icu.Text.DateFormat.HourCycle>(LocalBridgeClazz, "HOUR_CYCLE_23"); _HOUR_CYCLE_23Ready = true; } return _HOUR_CYCLE_23Content; } }
            private static Android.Icu.Text.DateFormat.HourCycle _HOUR_CYCLE_23Content = default;
            private static bool _HOUR_CYCLE_23Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.HourCycle.html#HOUR_CYCLE_24"/>
            /// </summary>
            public static Android.Icu.Text.DateFormat.HourCycle HOUR_CYCLE_24 { get { if (!_HOUR_CYCLE_24Ready) { _HOUR_CYCLE_24Content = SGetField<Android.Icu.Text.DateFormat.HourCycle>(LocalBridgeClazz, "HOUR_CYCLE_24"); _HOUR_CYCLE_24Ready = true; } return _HOUR_CYCLE_24Content; } }
            private static Android.Icu.Text.DateFormat.HourCycle _HOUR_CYCLE_24Content = default;
            private static bool _HOUR_CYCLE_24Ready = false; // this is used because in case of generics 

            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.HourCycle.html#valueOf(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Android.Icu.Text.DateFormat.HourCycle"/></returns>
            public static Android.Icu.Text.DateFormat.HourCycle ValueOf(Java.Lang.String arg0)
            {
                return SExecuteWithSignature<Android.Icu.Text.DateFormat.HourCycle>(LocalBridgeClazz, "valueOf", "(Ljava/lang/String;)Landroid/icu/text/DateFormat$HourCycle;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DateFormat.HourCycle.html#values()"/>
            /// </summary>
            /// <returns><see cref="Android.Icu.Text.DateFormat.HourCycle"/></returns>
            public static Android.Icu.Text.DateFormat.HourCycle[] Values()
            {
                return SExecuteWithSignatureArray<Android.Icu.Text.DateFormat.HourCycle>(LocalBridgeClazz, "values", "()[Landroid/icu/text/DateFormat$HourCycle;");
            }

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}