/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.4.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Icu.Text
{
    #region DisplayOptions
    public partial class DisplayOptions
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.html#builder()"/>
        /// </summary>
        /// <returns><see cref="Android.Icu.Text.DisplayOptions.Builder"/></returns>
        public static Android.Icu.Text.DisplayOptions.Builder BuilderMethod()
        {
            return SExecuteWithSignature<Android.Icu.Text.DisplayOptions.Builder>(LocalBridgeClazz, "builder", "()Landroid/icu/text/DisplayOptions$Builder;");
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.html#copyToBuilder()"/>
        /// </summary>
        /// <returns><see cref="Android.Icu.Text.DisplayOptions.Builder"/></returns>
        public Android.Icu.Text.DisplayOptions.Builder CopyToBuilder()
        {
            return IExecuteWithSignature<Android.Icu.Text.DisplayOptions.Builder>("copyToBuilder", "()Landroid/icu/text/DisplayOptions$Builder;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.html#getCapitalization()"/>
        /// </summary>
        /// <returns><see cref="Android.Icu.Text.DisplayOptions.Capitalization"/></returns>
        public Android.Icu.Text.DisplayOptions.Capitalization GetCapitalization()
        {
            return IExecuteWithSignature<Android.Icu.Text.DisplayOptions.Capitalization>("getCapitalization", "()Landroid/icu/text/DisplayOptions$Capitalization;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.html#getDisplayLength()"/>
        /// </summary>
        /// <returns><see cref="Android.Icu.Text.DisplayOptions.DisplayLength"/></returns>
        public Android.Icu.Text.DisplayOptions.DisplayLength GetDisplayLength()
        {
            return IExecuteWithSignature<Android.Icu.Text.DisplayOptions.DisplayLength>("getDisplayLength", "()Landroid/icu/text/DisplayOptions$DisplayLength;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.html#getGrammaticalCase()"/>
        /// </summary>
        /// <returns><see cref="Android.Icu.Text.DisplayOptions.GrammaticalCase"/></returns>
        public Android.Icu.Text.DisplayOptions.GrammaticalCase GetGrammaticalCase()
        {
            return IExecuteWithSignature<Android.Icu.Text.DisplayOptions.GrammaticalCase>("getGrammaticalCase", "()Landroid/icu/text/DisplayOptions$GrammaticalCase;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.html#getNameStyle()"/>
        /// </summary>
        /// <returns><see cref="Android.Icu.Text.DisplayOptions.NameStyle"/></returns>
        public Android.Icu.Text.DisplayOptions.NameStyle GetNameStyle()
        {
            return IExecuteWithSignature<Android.Icu.Text.DisplayOptions.NameStyle>("getNameStyle", "()Landroid/icu/text/DisplayOptions$NameStyle;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.html#getNounClass()"/>
        /// </summary>
        /// <returns><see cref="Android.Icu.Text.DisplayOptions.NounClass"/></returns>
        public Android.Icu.Text.DisplayOptions.NounClass GetNounClass()
        {
            return IExecuteWithSignature<Android.Icu.Text.DisplayOptions.NounClass>("getNounClass", "()Landroid/icu/text/DisplayOptions$NounClass;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.html#getPluralCategory()"/>
        /// </summary>
        /// <returns><see cref="Android.Icu.Text.DisplayOptions.PluralCategory"/></returns>
        public Android.Icu.Text.DisplayOptions.PluralCategory GetPluralCategory()
        {
            return IExecuteWithSignature<Android.Icu.Text.DisplayOptions.PluralCategory>("getPluralCategory", "()Landroid/icu/text/DisplayOptions$PluralCategory;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.html#getSubstituteHandling()"/>
        /// </summary>
        /// <returns><see cref="Android.Icu.Text.DisplayOptions.SubstituteHandling"/></returns>
        public Android.Icu.Text.DisplayOptions.SubstituteHandling GetSubstituteHandling()
        {
            return IExecuteWithSignature<Android.Icu.Text.DisplayOptions.SubstituteHandling>("getSubstituteHandling", "()Landroid/icu/text/DisplayOptions$SubstituteHandling;");
        }

        #endregion

        #region Nested classes
        #region Builder
        public partial class Builder
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.Builder.html#build()"/>
            /// </summary>
            /// <returns><see cref="Android.Icu.Text.DisplayOptions"/></returns>
            public Android.Icu.Text.DisplayOptions Build()
            {
                return IExecuteWithSignature<Android.Icu.Text.DisplayOptions>("build", "()Landroid/icu/text/DisplayOptions;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.Builder.html#setCapitalization(android.icu.text.DisplayOptions.Capitalization)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Icu.Text.DisplayOptions.Capitalization"/></param>
            /// <returns><see cref="Android.Icu.Text.DisplayOptions.Builder"/></returns>
            public Android.Icu.Text.DisplayOptions.Builder SetCapitalization(Android.Icu.Text.DisplayOptions.Capitalization arg0)
            {
                return IExecuteWithSignature<Android.Icu.Text.DisplayOptions.Builder>("setCapitalization", "(Landroid/icu/text/DisplayOptions$Capitalization;)Landroid/icu/text/DisplayOptions$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.Builder.html#setDisplayLength(android.icu.text.DisplayOptions.DisplayLength)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Icu.Text.DisplayOptions.DisplayLength"/></param>
            /// <returns><see cref="Android.Icu.Text.DisplayOptions.Builder"/></returns>
            public Android.Icu.Text.DisplayOptions.Builder SetDisplayLength(Android.Icu.Text.DisplayOptions.DisplayLength arg0)
            {
                return IExecuteWithSignature<Android.Icu.Text.DisplayOptions.Builder>("setDisplayLength", "(Landroid/icu/text/DisplayOptions$DisplayLength;)Landroid/icu/text/DisplayOptions$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.Builder.html#setGrammaticalCase(android.icu.text.DisplayOptions.GrammaticalCase)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Icu.Text.DisplayOptions.GrammaticalCase"/></param>
            /// <returns><see cref="Android.Icu.Text.DisplayOptions.Builder"/></returns>
            public Android.Icu.Text.DisplayOptions.Builder SetGrammaticalCase(Android.Icu.Text.DisplayOptions.GrammaticalCase arg0)
            {
                return IExecuteWithSignature<Android.Icu.Text.DisplayOptions.Builder>("setGrammaticalCase", "(Landroid/icu/text/DisplayOptions$GrammaticalCase;)Landroid/icu/text/DisplayOptions$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.Builder.html#setNameStyle(android.icu.text.DisplayOptions.NameStyle)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Icu.Text.DisplayOptions.NameStyle"/></param>
            /// <returns><see cref="Android.Icu.Text.DisplayOptions.Builder"/></returns>
            public Android.Icu.Text.DisplayOptions.Builder SetNameStyle(Android.Icu.Text.DisplayOptions.NameStyle arg0)
            {
                return IExecuteWithSignature<Android.Icu.Text.DisplayOptions.Builder>("setNameStyle", "(Landroid/icu/text/DisplayOptions$NameStyle;)Landroid/icu/text/DisplayOptions$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.Builder.html#setNounClass(android.icu.text.DisplayOptions.NounClass)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Icu.Text.DisplayOptions.NounClass"/></param>
            /// <returns><see cref="Android.Icu.Text.DisplayOptions.Builder"/></returns>
            public Android.Icu.Text.DisplayOptions.Builder SetNounClass(Android.Icu.Text.DisplayOptions.NounClass arg0)
            {
                return IExecuteWithSignature<Android.Icu.Text.DisplayOptions.Builder>("setNounClass", "(Landroid/icu/text/DisplayOptions$NounClass;)Landroid/icu/text/DisplayOptions$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.Builder.html#setPluralCategory(android.icu.text.DisplayOptions.PluralCategory)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Icu.Text.DisplayOptions.PluralCategory"/></param>
            /// <returns><see cref="Android.Icu.Text.DisplayOptions.Builder"/></returns>
            public Android.Icu.Text.DisplayOptions.Builder SetPluralCategory(Android.Icu.Text.DisplayOptions.PluralCategory arg0)
            {
                return IExecuteWithSignature<Android.Icu.Text.DisplayOptions.Builder>("setPluralCategory", "(Landroid/icu/text/DisplayOptions$PluralCategory;)Landroid/icu/text/DisplayOptions$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.Builder.html#setSubstituteHandling(android.icu.text.DisplayOptions.SubstituteHandling)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Icu.Text.DisplayOptions.SubstituteHandling"/></param>
            /// <returns><see cref="Android.Icu.Text.DisplayOptions.Builder"/></returns>
            public Android.Icu.Text.DisplayOptions.Builder SetSubstituteHandling(Android.Icu.Text.DisplayOptions.SubstituteHandling arg0)
            {
                return IExecuteWithSignature<Android.Icu.Text.DisplayOptions.Builder>("setSubstituteHandling", "(Landroid/icu/text/DisplayOptions$SubstituteHandling;)Landroid/icu/text/DisplayOptions$Builder;", arg0);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region Capitalization
        public partial class Capitalization
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.Capitalization.html#BEGINNING_OF_SENTENCE"/>
            /// </summary>
            public static Android.Icu.Text.DisplayOptions.Capitalization BEGINNING_OF_SENTENCE { get { if (!_BEGINNING_OF_SENTENCEReady) { _BEGINNING_OF_SENTENCEContent = SGetField<Android.Icu.Text.DisplayOptions.Capitalization>(LocalBridgeClazz, "BEGINNING_OF_SENTENCE"); _BEGINNING_OF_SENTENCEReady = true; } return _BEGINNING_OF_SENTENCEContent; } }
            private static Android.Icu.Text.DisplayOptions.Capitalization _BEGINNING_OF_SENTENCEContent = default;
            private static bool _BEGINNING_OF_SENTENCEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.Capitalization.html#MIDDLE_OF_SENTENCE"/>
            /// </summary>
            public static Android.Icu.Text.DisplayOptions.Capitalization MIDDLE_OF_SENTENCE { get { if (!_MIDDLE_OF_SENTENCEReady) { _MIDDLE_OF_SENTENCEContent = SGetField<Android.Icu.Text.DisplayOptions.Capitalization>(LocalBridgeClazz, "MIDDLE_OF_SENTENCE"); _MIDDLE_OF_SENTENCEReady = true; } return _MIDDLE_OF_SENTENCEContent; } }
            private static Android.Icu.Text.DisplayOptions.Capitalization _MIDDLE_OF_SENTENCEContent = default;
            private static bool _MIDDLE_OF_SENTENCEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.Capitalization.html#STANDALONE"/>
            /// </summary>
            public static Android.Icu.Text.DisplayOptions.Capitalization STANDALONE { get { if (!_STANDALONEReady) { _STANDALONEContent = SGetField<Android.Icu.Text.DisplayOptions.Capitalization>(LocalBridgeClazz, "STANDALONE"); _STANDALONEReady = true; } return _STANDALONEContent; } }
            private static Android.Icu.Text.DisplayOptions.Capitalization _STANDALONEContent = default;
            private static bool _STANDALONEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.Capitalization.html#UI_LIST_OR_MENU"/>
            /// </summary>
            public static Android.Icu.Text.DisplayOptions.Capitalization UI_LIST_OR_MENU { get { if (!_UI_LIST_OR_MENUReady) { _UI_LIST_OR_MENUContent = SGetField<Android.Icu.Text.DisplayOptions.Capitalization>(LocalBridgeClazz, "UI_LIST_OR_MENU"); _UI_LIST_OR_MENUReady = true; } return _UI_LIST_OR_MENUContent; } }
            private static Android.Icu.Text.DisplayOptions.Capitalization _UI_LIST_OR_MENUContent = default;
            private static bool _UI_LIST_OR_MENUReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.Capitalization.html#UNDEFINED"/>
            /// </summary>
            public static Android.Icu.Text.DisplayOptions.Capitalization UNDEFINED { get { if (!_UNDEFINEDReady) { _UNDEFINEDContent = SGetField<Android.Icu.Text.DisplayOptions.Capitalization>(LocalBridgeClazz, "UNDEFINED"); _UNDEFINEDReady = true; } return _UNDEFINEDContent; } }
            private static Android.Icu.Text.DisplayOptions.Capitalization _UNDEFINEDContent = default;
            private static bool _UNDEFINEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.Capitalization.html#VALUES"/>
            /// </summary>
            public static Java.Util.List VALUES { get { if (!_VALUESReady) { _VALUESContent = SGetField<Java.Util.List>(LocalBridgeClazz, "VALUES"); _VALUESReady = true; } return _VALUESContent; } }
            private static Java.Util.List _VALUESContent = default;
            private static bool _VALUESReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.Capitalization.html#valueOf(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Android.Icu.Text.DisplayOptions.Capitalization"/></returns>
            public static Android.Icu.Text.DisplayOptions.Capitalization ValueOf(Java.Lang.String arg0)
            {
                return SExecuteWithSignature<Android.Icu.Text.DisplayOptions.Capitalization>(LocalBridgeClazz, "valueOf", "(Ljava/lang/String;)Landroid/icu/text/DisplayOptions$Capitalization;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.Capitalization.html#values()"/>
            /// </summary>
            /// <returns><see cref="Android.Icu.Text.DisplayOptions.Capitalization"/></returns>
            public static Android.Icu.Text.DisplayOptions.Capitalization[] Values()
            {
                return SExecuteWithSignatureArray<Android.Icu.Text.DisplayOptions.Capitalization>(LocalBridgeClazz, "values", "()[Landroid/icu/text/DisplayOptions$Capitalization;");
            }

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region DisplayLength
        public partial class DisplayLength
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.DisplayLength.html#LENGTH_FULL"/>
            /// </summary>
            public static Android.Icu.Text.DisplayOptions.DisplayLength LENGTH_FULL { get { if (!_LENGTH_FULLReady) { _LENGTH_FULLContent = SGetField<Android.Icu.Text.DisplayOptions.DisplayLength>(LocalBridgeClazz, "LENGTH_FULL"); _LENGTH_FULLReady = true; } return _LENGTH_FULLContent; } }
            private static Android.Icu.Text.DisplayOptions.DisplayLength _LENGTH_FULLContent = default;
            private static bool _LENGTH_FULLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.DisplayLength.html#LENGTH_SHORT"/>
            /// </summary>
            public static Android.Icu.Text.DisplayOptions.DisplayLength LENGTH_SHORT { get { if (!_LENGTH_SHORTReady) { _LENGTH_SHORTContent = SGetField<Android.Icu.Text.DisplayOptions.DisplayLength>(LocalBridgeClazz, "LENGTH_SHORT"); _LENGTH_SHORTReady = true; } return _LENGTH_SHORTContent; } }
            private static Android.Icu.Text.DisplayOptions.DisplayLength _LENGTH_SHORTContent = default;
            private static bool _LENGTH_SHORTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.DisplayLength.html#UNDEFINED"/>
            /// </summary>
            public static Android.Icu.Text.DisplayOptions.DisplayLength UNDEFINED { get { if (!_UNDEFINEDReady) { _UNDEFINEDContent = SGetField<Android.Icu.Text.DisplayOptions.DisplayLength>(LocalBridgeClazz, "UNDEFINED"); _UNDEFINEDReady = true; } return _UNDEFINEDContent; } }
            private static Android.Icu.Text.DisplayOptions.DisplayLength _UNDEFINEDContent = default;
            private static bool _UNDEFINEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.DisplayLength.html#VALUES"/>
            /// </summary>
            public static Java.Util.List VALUES { get { if (!_VALUESReady) { _VALUESContent = SGetField<Java.Util.List>(LocalBridgeClazz, "VALUES"); _VALUESReady = true; } return _VALUESContent; } }
            private static Java.Util.List _VALUESContent = default;
            private static bool _VALUESReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.DisplayLength.html#valueOf(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Android.Icu.Text.DisplayOptions.DisplayLength"/></returns>
            public static Android.Icu.Text.DisplayOptions.DisplayLength ValueOf(Java.Lang.String arg0)
            {
                return SExecuteWithSignature<Android.Icu.Text.DisplayOptions.DisplayLength>(LocalBridgeClazz, "valueOf", "(Ljava/lang/String;)Landroid/icu/text/DisplayOptions$DisplayLength;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.DisplayLength.html#values()"/>
            /// </summary>
            /// <returns><see cref="Android.Icu.Text.DisplayOptions.DisplayLength"/></returns>
            public static Android.Icu.Text.DisplayOptions.DisplayLength[] Values()
            {
                return SExecuteWithSignatureArray<Android.Icu.Text.DisplayOptions.DisplayLength>(LocalBridgeClazz, "values", "()[Landroid/icu/text/DisplayOptions$DisplayLength;");
            }

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region GrammaticalCase
        public partial class GrammaticalCase
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.GrammaticalCase.html#ABLATIVE"/>
            /// </summary>
            public static Android.Icu.Text.DisplayOptions.GrammaticalCase ABLATIVE { get { if (!_ABLATIVEReady) { _ABLATIVEContent = SGetField<Android.Icu.Text.DisplayOptions.GrammaticalCase>(LocalBridgeClazz, "ABLATIVE"); _ABLATIVEReady = true; } return _ABLATIVEContent; } }
            private static Android.Icu.Text.DisplayOptions.GrammaticalCase _ABLATIVEContent = default;
            private static bool _ABLATIVEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.GrammaticalCase.html#ACCUSATIVE"/>
            /// </summary>
            public static Android.Icu.Text.DisplayOptions.GrammaticalCase ACCUSATIVE { get { if (!_ACCUSATIVEReady) { _ACCUSATIVEContent = SGetField<Android.Icu.Text.DisplayOptions.GrammaticalCase>(LocalBridgeClazz, "ACCUSATIVE"); _ACCUSATIVEReady = true; } return _ACCUSATIVEContent; } }
            private static Android.Icu.Text.DisplayOptions.GrammaticalCase _ACCUSATIVEContent = default;
            private static bool _ACCUSATIVEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.GrammaticalCase.html#COMITATIVE"/>
            /// </summary>
            public static Android.Icu.Text.DisplayOptions.GrammaticalCase COMITATIVE { get { if (!_COMITATIVEReady) { _COMITATIVEContent = SGetField<Android.Icu.Text.DisplayOptions.GrammaticalCase>(LocalBridgeClazz, "COMITATIVE"); _COMITATIVEReady = true; } return _COMITATIVEContent; } }
            private static Android.Icu.Text.DisplayOptions.GrammaticalCase _COMITATIVEContent = default;
            private static bool _COMITATIVEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.GrammaticalCase.html#DATIVE"/>
            /// </summary>
            public static Android.Icu.Text.DisplayOptions.GrammaticalCase DATIVE { get { if (!_DATIVEReady) { _DATIVEContent = SGetField<Android.Icu.Text.DisplayOptions.GrammaticalCase>(LocalBridgeClazz, "DATIVE"); _DATIVEReady = true; } return _DATIVEContent; } }
            private static Android.Icu.Text.DisplayOptions.GrammaticalCase _DATIVEContent = default;
            private static bool _DATIVEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.GrammaticalCase.html#ERGATIVE"/>
            /// </summary>
            public static Android.Icu.Text.DisplayOptions.GrammaticalCase ERGATIVE { get { if (!_ERGATIVEReady) { _ERGATIVEContent = SGetField<Android.Icu.Text.DisplayOptions.GrammaticalCase>(LocalBridgeClazz, "ERGATIVE"); _ERGATIVEReady = true; } return _ERGATIVEContent; } }
            private static Android.Icu.Text.DisplayOptions.GrammaticalCase _ERGATIVEContent = default;
            private static bool _ERGATIVEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.GrammaticalCase.html#GENITIVE"/>
            /// </summary>
            public static Android.Icu.Text.DisplayOptions.GrammaticalCase GENITIVE { get { if (!_GENITIVEReady) { _GENITIVEContent = SGetField<Android.Icu.Text.DisplayOptions.GrammaticalCase>(LocalBridgeClazz, "GENITIVE"); _GENITIVEReady = true; } return _GENITIVEContent; } }
            private static Android.Icu.Text.DisplayOptions.GrammaticalCase _GENITIVEContent = default;
            private static bool _GENITIVEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.GrammaticalCase.html#INSTRUMENTAL"/>
            /// </summary>
            public static Android.Icu.Text.DisplayOptions.GrammaticalCase INSTRUMENTAL { get { if (!_INSTRUMENTALReady) { _INSTRUMENTALContent = SGetField<Android.Icu.Text.DisplayOptions.GrammaticalCase>(LocalBridgeClazz, "INSTRUMENTAL"); _INSTRUMENTALReady = true; } return _INSTRUMENTALContent; } }
            private static Android.Icu.Text.DisplayOptions.GrammaticalCase _INSTRUMENTALContent = default;
            private static bool _INSTRUMENTALReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.GrammaticalCase.html#LOCATIVE"/>
            /// </summary>
            public static Android.Icu.Text.DisplayOptions.GrammaticalCase LOCATIVE { get { if (!_LOCATIVEReady) { _LOCATIVEContent = SGetField<Android.Icu.Text.DisplayOptions.GrammaticalCase>(LocalBridgeClazz, "LOCATIVE"); _LOCATIVEReady = true; } return _LOCATIVEContent; } }
            private static Android.Icu.Text.DisplayOptions.GrammaticalCase _LOCATIVEContent = default;
            private static bool _LOCATIVEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.GrammaticalCase.html#LOCATIVE_COPULATIVE"/>
            /// </summary>
            public static Android.Icu.Text.DisplayOptions.GrammaticalCase LOCATIVE_COPULATIVE { get { if (!_LOCATIVE_COPULATIVEReady) { _LOCATIVE_COPULATIVEContent = SGetField<Android.Icu.Text.DisplayOptions.GrammaticalCase>(LocalBridgeClazz, "LOCATIVE_COPULATIVE"); _LOCATIVE_COPULATIVEReady = true; } return _LOCATIVE_COPULATIVEContent; } }
            private static Android.Icu.Text.DisplayOptions.GrammaticalCase _LOCATIVE_COPULATIVEContent = default;
            private static bool _LOCATIVE_COPULATIVEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.GrammaticalCase.html#NOMINATIVE"/>
            /// </summary>
            public static Android.Icu.Text.DisplayOptions.GrammaticalCase NOMINATIVE { get { if (!_NOMINATIVEReady) { _NOMINATIVEContent = SGetField<Android.Icu.Text.DisplayOptions.GrammaticalCase>(LocalBridgeClazz, "NOMINATIVE"); _NOMINATIVEReady = true; } return _NOMINATIVEContent; } }
            private static Android.Icu.Text.DisplayOptions.GrammaticalCase _NOMINATIVEContent = default;
            private static bool _NOMINATIVEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.GrammaticalCase.html#OBLIQUE"/>
            /// </summary>
            public static Android.Icu.Text.DisplayOptions.GrammaticalCase OBLIQUE { get { if (!_OBLIQUEReady) { _OBLIQUEContent = SGetField<Android.Icu.Text.DisplayOptions.GrammaticalCase>(LocalBridgeClazz, "OBLIQUE"); _OBLIQUEReady = true; } return _OBLIQUEContent; } }
            private static Android.Icu.Text.DisplayOptions.GrammaticalCase _OBLIQUEContent = default;
            private static bool _OBLIQUEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.GrammaticalCase.html#PREPOSITIONAL"/>
            /// </summary>
            public static Android.Icu.Text.DisplayOptions.GrammaticalCase PREPOSITIONAL { get { if (!_PREPOSITIONALReady) { _PREPOSITIONALContent = SGetField<Android.Icu.Text.DisplayOptions.GrammaticalCase>(LocalBridgeClazz, "PREPOSITIONAL"); _PREPOSITIONALReady = true; } return _PREPOSITIONALContent; } }
            private static Android.Icu.Text.DisplayOptions.GrammaticalCase _PREPOSITIONALContent = default;
            private static bool _PREPOSITIONALReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.GrammaticalCase.html#SOCIATIVE"/>
            /// </summary>
            public static Android.Icu.Text.DisplayOptions.GrammaticalCase SOCIATIVE { get { if (!_SOCIATIVEReady) { _SOCIATIVEContent = SGetField<Android.Icu.Text.DisplayOptions.GrammaticalCase>(LocalBridgeClazz, "SOCIATIVE"); _SOCIATIVEReady = true; } return _SOCIATIVEContent; } }
            private static Android.Icu.Text.DisplayOptions.GrammaticalCase _SOCIATIVEContent = default;
            private static bool _SOCIATIVEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.GrammaticalCase.html#UNDEFINED"/>
            /// </summary>
            public static Android.Icu.Text.DisplayOptions.GrammaticalCase UNDEFINED { get { if (!_UNDEFINEDReady) { _UNDEFINEDContent = SGetField<Android.Icu.Text.DisplayOptions.GrammaticalCase>(LocalBridgeClazz, "UNDEFINED"); _UNDEFINEDReady = true; } return _UNDEFINEDContent; } }
            private static Android.Icu.Text.DisplayOptions.GrammaticalCase _UNDEFINEDContent = default;
            private static bool _UNDEFINEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.GrammaticalCase.html#VOCATIVE"/>
            /// </summary>
            public static Android.Icu.Text.DisplayOptions.GrammaticalCase VOCATIVE { get { if (!_VOCATIVEReady) { _VOCATIVEContent = SGetField<Android.Icu.Text.DisplayOptions.GrammaticalCase>(LocalBridgeClazz, "VOCATIVE"); _VOCATIVEReady = true; } return _VOCATIVEContent; } }
            private static Android.Icu.Text.DisplayOptions.GrammaticalCase _VOCATIVEContent = default;
            private static bool _VOCATIVEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.GrammaticalCase.html#VALUES"/>
            /// </summary>
            public static Java.Util.List VALUES { get { if (!_VALUESReady) { _VALUESContent = SGetField<Java.Util.List>(LocalBridgeClazz, "VALUES"); _VALUESReady = true; } return _VALUESContent; } }
            private static Java.Util.List _VALUESContent = default;
            private static bool _VALUESReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.GrammaticalCase.html#fromIdentifier(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Android.Icu.Text.DisplayOptions.GrammaticalCase"/></returns>
            public static Android.Icu.Text.DisplayOptions.GrammaticalCase FromIdentifier(Java.Lang.String arg0)
            {
                return SExecuteWithSignature<Android.Icu.Text.DisplayOptions.GrammaticalCase>(LocalBridgeClazz, "fromIdentifier", "(Ljava/lang/String;)Landroid/icu/text/DisplayOptions$GrammaticalCase;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.GrammaticalCase.html#valueOf(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Android.Icu.Text.DisplayOptions.GrammaticalCase"/></returns>
            public static Android.Icu.Text.DisplayOptions.GrammaticalCase ValueOf(Java.Lang.String arg0)
            {
                return SExecuteWithSignature<Android.Icu.Text.DisplayOptions.GrammaticalCase>(LocalBridgeClazz, "valueOf", "(Ljava/lang/String;)Landroid/icu/text/DisplayOptions$GrammaticalCase;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.GrammaticalCase.html#values()"/>
            /// </summary>
            /// <returns><see cref="Android.Icu.Text.DisplayOptions.GrammaticalCase"/></returns>
            public static Android.Icu.Text.DisplayOptions.GrammaticalCase[] Values()
            {
                return SExecuteWithSignatureArray<Android.Icu.Text.DisplayOptions.GrammaticalCase>(LocalBridgeClazz, "values", "()[Landroid/icu/text/DisplayOptions$GrammaticalCase;");
            }

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.GrammaticalCase.html#getIdentifier()"/>
            /// </summary>
            /// <returns><see cref="Java.Lang.String"/></returns>
            public Java.Lang.String GetIdentifier()
            {
                return IExecuteWithSignature<Java.Lang.String>("getIdentifier", "()Ljava/lang/String;");
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region NameStyle
        public partial class NameStyle
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.NameStyle.html#DIALECT_NAMES"/>
            /// </summary>
            public static Android.Icu.Text.DisplayOptions.NameStyle DIALECT_NAMES { get { if (!_DIALECT_NAMESReady) { _DIALECT_NAMESContent = SGetField<Android.Icu.Text.DisplayOptions.NameStyle>(LocalBridgeClazz, "DIALECT_NAMES"); _DIALECT_NAMESReady = true; } return _DIALECT_NAMESContent; } }
            private static Android.Icu.Text.DisplayOptions.NameStyle _DIALECT_NAMESContent = default;
            private static bool _DIALECT_NAMESReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.NameStyle.html#STANDARD_NAMES"/>
            /// </summary>
            public static Android.Icu.Text.DisplayOptions.NameStyle STANDARD_NAMES { get { if (!_STANDARD_NAMESReady) { _STANDARD_NAMESContent = SGetField<Android.Icu.Text.DisplayOptions.NameStyle>(LocalBridgeClazz, "STANDARD_NAMES"); _STANDARD_NAMESReady = true; } return _STANDARD_NAMESContent; } }
            private static Android.Icu.Text.DisplayOptions.NameStyle _STANDARD_NAMESContent = default;
            private static bool _STANDARD_NAMESReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.NameStyle.html#UNDEFINED"/>
            /// </summary>
            public static Android.Icu.Text.DisplayOptions.NameStyle UNDEFINED { get { if (!_UNDEFINEDReady) { _UNDEFINEDContent = SGetField<Android.Icu.Text.DisplayOptions.NameStyle>(LocalBridgeClazz, "UNDEFINED"); _UNDEFINEDReady = true; } return _UNDEFINEDContent; } }
            private static Android.Icu.Text.DisplayOptions.NameStyle _UNDEFINEDContent = default;
            private static bool _UNDEFINEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.NameStyle.html#VALUES"/>
            /// </summary>
            public static Java.Util.List VALUES { get { if (!_VALUESReady) { _VALUESContent = SGetField<Java.Util.List>(LocalBridgeClazz, "VALUES"); _VALUESReady = true; } return _VALUESContent; } }
            private static Java.Util.List _VALUESContent = default;
            private static bool _VALUESReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.NameStyle.html#valueOf(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Android.Icu.Text.DisplayOptions.NameStyle"/></returns>
            public static Android.Icu.Text.DisplayOptions.NameStyle ValueOf(Java.Lang.String arg0)
            {
                return SExecuteWithSignature<Android.Icu.Text.DisplayOptions.NameStyle>(LocalBridgeClazz, "valueOf", "(Ljava/lang/String;)Landroid/icu/text/DisplayOptions$NameStyle;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.NameStyle.html#values()"/>
            /// </summary>
            /// <returns><see cref="Android.Icu.Text.DisplayOptions.NameStyle"/></returns>
            public static Android.Icu.Text.DisplayOptions.NameStyle[] Values()
            {
                return SExecuteWithSignatureArray<Android.Icu.Text.DisplayOptions.NameStyle>(LocalBridgeClazz, "values", "()[Landroid/icu/text/DisplayOptions$NameStyle;");
            }

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region NounClass
        public partial class NounClass
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.NounClass.html#ANIMATE"/>
            /// </summary>
            public static Android.Icu.Text.DisplayOptions.NounClass ANIMATE { get { if (!_ANIMATEReady) { _ANIMATEContent = SGetField<Android.Icu.Text.DisplayOptions.NounClass>(LocalBridgeClazz, "ANIMATE"); _ANIMATEReady = true; } return _ANIMATEContent; } }
            private static Android.Icu.Text.DisplayOptions.NounClass _ANIMATEContent = default;
            private static bool _ANIMATEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.NounClass.html#COMMON"/>
            /// </summary>
            public static Android.Icu.Text.DisplayOptions.NounClass COMMON { get { if (!_COMMONReady) { _COMMONContent = SGetField<Android.Icu.Text.DisplayOptions.NounClass>(LocalBridgeClazz, "COMMON"); _COMMONReady = true; } return _COMMONContent; } }
            private static Android.Icu.Text.DisplayOptions.NounClass _COMMONContent = default;
            private static bool _COMMONReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.NounClass.html#FEMININE"/>
            /// </summary>
            public static Android.Icu.Text.DisplayOptions.NounClass FEMININE { get { if (!_FEMININEReady) { _FEMININEContent = SGetField<Android.Icu.Text.DisplayOptions.NounClass>(LocalBridgeClazz, "FEMININE"); _FEMININEReady = true; } return _FEMININEContent; } }
            private static Android.Icu.Text.DisplayOptions.NounClass _FEMININEContent = default;
            private static bool _FEMININEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.NounClass.html#INANIMATE"/>
            /// </summary>
            public static Android.Icu.Text.DisplayOptions.NounClass INANIMATE { get { if (!_INANIMATEReady) { _INANIMATEContent = SGetField<Android.Icu.Text.DisplayOptions.NounClass>(LocalBridgeClazz, "INANIMATE"); _INANIMATEReady = true; } return _INANIMATEContent; } }
            private static Android.Icu.Text.DisplayOptions.NounClass _INANIMATEContent = default;
            private static bool _INANIMATEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.NounClass.html#MASCULINE"/>
            /// </summary>
            public static Android.Icu.Text.DisplayOptions.NounClass MASCULINE { get { if (!_MASCULINEReady) { _MASCULINEContent = SGetField<Android.Icu.Text.DisplayOptions.NounClass>(LocalBridgeClazz, "MASCULINE"); _MASCULINEReady = true; } return _MASCULINEContent; } }
            private static Android.Icu.Text.DisplayOptions.NounClass _MASCULINEContent = default;
            private static bool _MASCULINEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.NounClass.html#NEUTER"/>
            /// </summary>
            public static Android.Icu.Text.DisplayOptions.NounClass NEUTER { get { if (!_NEUTERReady) { _NEUTERContent = SGetField<Android.Icu.Text.DisplayOptions.NounClass>(LocalBridgeClazz, "NEUTER"); _NEUTERReady = true; } return _NEUTERContent; } }
            private static Android.Icu.Text.DisplayOptions.NounClass _NEUTERContent = default;
            private static bool _NEUTERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.NounClass.html#OTHER"/>
            /// </summary>
            public static Android.Icu.Text.DisplayOptions.NounClass OTHER { get { if (!_OTHERReady) { _OTHERContent = SGetField<Android.Icu.Text.DisplayOptions.NounClass>(LocalBridgeClazz, "OTHER"); _OTHERReady = true; } return _OTHERContent; } }
            private static Android.Icu.Text.DisplayOptions.NounClass _OTHERContent = default;
            private static bool _OTHERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.NounClass.html#PERSONAL"/>
            /// </summary>
            public static Android.Icu.Text.DisplayOptions.NounClass PERSONAL { get { if (!_PERSONALReady) { _PERSONALContent = SGetField<Android.Icu.Text.DisplayOptions.NounClass>(LocalBridgeClazz, "PERSONAL"); _PERSONALReady = true; } return _PERSONALContent; } }
            private static Android.Icu.Text.DisplayOptions.NounClass _PERSONALContent = default;
            private static bool _PERSONALReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.NounClass.html#UNDEFINED"/>
            /// </summary>
            public static Android.Icu.Text.DisplayOptions.NounClass UNDEFINED { get { if (!_UNDEFINEDReady) { _UNDEFINEDContent = SGetField<Android.Icu.Text.DisplayOptions.NounClass>(LocalBridgeClazz, "UNDEFINED"); _UNDEFINEDReady = true; } return _UNDEFINEDContent; } }
            private static Android.Icu.Text.DisplayOptions.NounClass _UNDEFINEDContent = default;
            private static bool _UNDEFINEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.NounClass.html#VALUES"/>
            /// </summary>
            public static Java.Util.List VALUES { get { if (!_VALUESReady) { _VALUESContent = SGetField<Java.Util.List>(LocalBridgeClazz, "VALUES"); _VALUESReady = true; } return _VALUESContent; } }
            private static Java.Util.List _VALUESContent = default;
            private static bool _VALUESReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.NounClass.html#fromIdentifier(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Android.Icu.Text.DisplayOptions.NounClass"/></returns>
            public static Android.Icu.Text.DisplayOptions.NounClass FromIdentifier(Java.Lang.String arg0)
            {
                return SExecuteWithSignature<Android.Icu.Text.DisplayOptions.NounClass>(LocalBridgeClazz, "fromIdentifier", "(Ljava/lang/String;)Landroid/icu/text/DisplayOptions$NounClass;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.NounClass.html#valueOf(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Android.Icu.Text.DisplayOptions.NounClass"/></returns>
            public static Android.Icu.Text.DisplayOptions.NounClass ValueOf(Java.Lang.String arg0)
            {
                return SExecuteWithSignature<Android.Icu.Text.DisplayOptions.NounClass>(LocalBridgeClazz, "valueOf", "(Ljava/lang/String;)Landroid/icu/text/DisplayOptions$NounClass;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.NounClass.html#values()"/>
            /// </summary>
            /// <returns><see cref="Android.Icu.Text.DisplayOptions.NounClass"/></returns>
            public static Android.Icu.Text.DisplayOptions.NounClass[] Values()
            {
                return SExecuteWithSignatureArray<Android.Icu.Text.DisplayOptions.NounClass>(LocalBridgeClazz, "values", "()[Landroid/icu/text/DisplayOptions$NounClass;");
            }

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.NounClass.html#getIdentifier()"/>
            /// </summary>
            /// <returns><see cref="Java.Lang.String"/></returns>
            public Java.Lang.String GetIdentifier()
            {
                return IExecuteWithSignature<Java.Lang.String>("getIdentifier", "()Ljava/lang/String;");
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region PluralCategory
        public partial class PluralCategory
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.PluralCategory.html#FEW"/>
            /// </summary>
            public static Android.Icu.Text.DisplayOptions.PluralCategory FEW { get { if (!_FEWReady) { _FEWContent = SGetField<Android.Icu.Text.DisplayOptions.PluralCategory>(LocalBridgeClazz, "FEW"); _FEWReady = true; } return _FEWContent; } }
            private static Android.Icu.Text.DisplayOptions.PluralCategory _FEWContent = default;
            private static bool _FEWReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.PluralCategory.html#MANY"/>
            /// </summary>
            public static Android.Icu.Text.DisplayOptions.PluralCategory MANY { get { if (!_MANYReady) { _MANYContent = SGetField<Android.Icu.Text.DisplayOptions.PluralCategory>(LocalBridgeClazz, "MANY"); _MANYReady = true; } return _MANYContent; } }
            private static Android.Icu.Text.DisplayOptions.PluralCategory _MANYContent = default;
            private static bool _MANYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.PluralCategory.html#ONE"/>
            /// </summary>
            public static Android.Icu.Text.DisplayOptions.PluralCategory ONE { get { if (!_ONEReady) { _ONEContent = SGetField<Android.Icu.Text.DisplayOptions.PluralCategory>(LocalBridgeClazz, "ONE"); _ONEReady = true; } return _ONEContent; } }
            private static Android.Icu.Text.DisplayOptions.PluralCategory _ONEContent = default;
            private static bool _ONEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.PluralCategory.html#OTHER"/>
            /// </summary>
            public static Android.Icu.Text.DisplayOptions.PluralCategory OTHER { get { if (!_OTHERReady) { _OTHERContent = SGetField<Android.Icu.Text.DisplayOptions.PluralCategory>(LocalBridgeClazz, "OTHER"); _OTHERReady = true; } return _OTHERContent; } }
            private static Android.Icu.Text.DisplayOptions.PluralCategory _OTHERContent = default;
            private static bool _OTHERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.PluralCategory.html#TWO"/>
            /// </summary>
            public static Android.Icu.Text.DisplayOptions.PluralCategory TWO { get { if (!_TWOReady) { _TWOContent = SGetField<Android.Icu.Text.DisplayOptions.PluralCategory>(LocalBridgeClazz, "TWO"); _TWOReady = true; } return _TWOContent; } }
            private static Android.Icu.Text.DisplayOptions.PluralCategory _TWOContent = default;
            private static bool _TWOReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.PluralCategory.html#UNDEFINED"/>
            /// </summary>
            public static Android.Icu.Text.DisplayOptions.PluralCategory UNDEFINED { get { if (!_UNDEFINEDReady) { _UNDEFINEDContent = SGetField<Android.Icu.Text.DisplayOptions.PluralCategory>(LocalBridgeClazz, "UNDEFINED"); _UNDEFINEDReady = true; } return _UNDEFINEDContent; } }
            private static Android.Icu.Text.DisplayOptions.PluralCategory _UNDEFINEDContent = default;
            private static bool _UNDEFINEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.PluralCategory.html#ZERO"/>
            /// </summary>
            public static Android.Icu.Text.DisplayOptions.PluralCategory ZERO { get { if (!_ZEROReady) { _ZEROContent = SGetField<Android.Icu.Text.DisplayOptions.PluralCategory>(LocalBridgeClazz, "ZERO"); _ZEROReady = true; } return _ZEROContent; } }
            private static Android.Icu.Text.DisplayOptions.PluralCategory _ZEROContent = default;
            private static bool _ZEROReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.PluralCategory.html#VALUES"/>
            /// </summary>
            public static Java.Util.List VALUES { get { if (!_VALUESReady) { _VALUESContent = SGetField<Java.Util.List>(LocalBridgeClazz, "VALUES"); _VALUESReady = true; } return _VALUESContent; } }
            private static Java.Util.List _VALUESContent = default;
            private static bool _VALUESReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.PluralCategory.html#fromIdentifier(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Android.Icu.Text.DisplayOptions.PluralCategory"/></returns>
            public static Android.Icu.Text.DisplayOptions.PluralCategory FromIdentifier(Java.Lang.String arg0)
            {
                return SExecuteWithSignature<Android.Icu.Text.DisplayOptions.PluralCategory>(LocalBridgeClazz, "fromIdentifier", "(Ljava/lang/String;)Landroid/icu/text/DisplayOptions$PluralCategory;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.PluralCategory.html#valueOf(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Android.Icu.Text.DisplayOptions.PluralCategory"/></returns>
            public static Android.Icu.Text.DisplayOptions.PluralCategory ValueOf(Java.Lang.String arg0)
            {
                return SExecuteWithSignature<Android.Icu.Text.DisplayOptions.PluralCategory>(LocalBridgeClazz, "valueOf", "(Ljava/lang/String;)Landroid/icu/text/DisplayOptions$PluralCategory;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.PluralCategory.html#values()"/>
            /// </summary>
            /// <returns><see cref="Android.Icu.Text.DisplayOptions.PluralCategory"/></returns>
            public static Android.Icu.Text.DisplayOptions.PluralCategory[] Values()
            {
                return SExecuteWithSignatureArray<Android.Icu.Text.DisplayOptions.PluralCategory>(LocalBridgeClazz, "values", "()[Landroid/icu/text/DisplayOptions$PluralCategory;");
            }

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.PluralCategory.html#getIdentifier()"/>
            /// </summary>
            /// <returns><see cref="Java.Lang.String"/></returns>
            public Java.Lang.String GetIdentifier()
            {
                return IExecuteWithSignature<Java.Lang.String>("getIdentifier", "()Ljava/lang/String;");
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region SubstituteHandling
        public partial class SubstituteHandling
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.SubstituteHandling.html#NO_SUBSTITUTE"/>
            /// </summary>
            public static Android.Icu.Text.DisplayOptions.SubstituteHandling NO_SUBSTITUTE { get { if (!_NO_SUBSTITUTEReady) { _NO_SUBSTITUTEContent = SGetField<Android.Icu.Text.DisplayOptions.SubstituteHandling>(LocalBridgeClazz, "NO_SUBSTITUTE"); _NO_SUBSTITUTEReady = true; } return _NO_SUBSTITUTEContent; } }
            private static Android.Icu.Text.DisplayOptions.SubstituteHandling _NO_SUBSTITUTEContent = default;
            private static bool _NO_SUBSTITUTEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.SubstituteHandling.html#SUBSTITUTE"/>
            /// </summary>
            public static Android.Icu.Text.DisplayOptions.SubstituteHandling SUBSTITUTE { get { if (!_SUBSTITUTEReady) { _SUBSTITUTEContent = SGetField<Android.Icu.Text.DisplayOptions.SubstituteHandling>(LocalBridgeClazz, "SUBSTITUTE"); _SUBSTITUTEReady = true; } return _SUBSTITUTEContent; } }
            private static Android.Icu.Text.DisplayOptions.SubstituteHandling _SUBSTITUTEContent = default;
            private static bool _SUBSTITUTEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.SubstituteHandling.html#UNDEFINED"/>
            /// </summary>
            public static Android.Icu.Text.DisplayOptions.SubstituteHandling UNDEFINED { get { if (!_UNDEFINEDReady) { _UNDEFINEDContent = SGetField<Android.Icu.Text.DisplayOptions.SubstituteHandling>(LocalBridgeClazz, "UNDEFINED"); _UNDEFINEDReady = true; } return _UNDEFINEDContent; } }
            private static Android.Icu.Text.DisplayOptions.SubstituteHandling _UNDEFINEDContent = default;
            private static bool _UNDEFINEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.SubstituteHandling.html#VALUES"/>
            /// </summary>
            public static Java.Util.List VALUES { get { if (!_VALUESReady) { _VALUESContent = SGetField<Java.Util.List>(LocalBridgeClazz, "VALUES"); _VALUESReady = true; } return _VALUESContent; } }
            private static Java.Util.List _VALUESContent = default;
            private static bool _VALUESReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.SubstituteHandling.html#valueOf(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Android.Icu.Text.DisplayOptions.SubstituteHandling"/></returns>
            public static Android.Icu.Text.DisplayOptions.SubstituteHandling ValueOf(Java.Lang.String arg0)
            {
                return SExecuteWithSignature<Android.Icu.Text.DisplayOptions.SubstituteHandling>(LocalBridgeClazz, "valueOf", "(Ljava/lang/String;)Landroid/icu/text/DisplayOptions$SubstituteHandling;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/DisplayOptions.SubstituteHandling.html#values()"/>
            /// </summary>
            /// <returns><see cref="Android.Icu.Text.DisplayOptions.SubstituteHandling"/></returns>
            public static Android.Icu.Text.DisplayOptions.SubstituteHandling[] Values()
            {
                return SExecuteWithSignatureArray<Android.Icu.Text.DisplayOptions.SubstituteHandling>(LocalBridgeClazz, "values", "()[Landroid/icu/text/DisplayOptions$SubstituteHandling;");
            }

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}