/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.8.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Icu.Text
{
    #region UnicodeSet
    public partial class UnicodeSet : Java.Lang.IIterable<Java.Lang.String>, Java.Lang.IComparable<Android.Icu.Text.UnicodeSet>, Android.Icu.Util.IFreezable<Android.Icu.Text.UnicodeSet>
    {
        #region Constructors
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#%3Cinit%3E(android.icu.text.UnicodeSet)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Text.UnicodeSet"/></param>
        public UnicodeSet(Android.Icu.Text.UnicodeSet arg0)
            : base(arg0)
        {
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#%3Cinit%3E(int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public UnicodeSet(int arg0, int arg1)
            : base(arg0, arg1)
        {
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#%3Cinit%3E(int[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public UnicodeSet(params int[] arg0)
            : base(arg0)
        {
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#%3Cinit%3E(java.lang.String,boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="bool"/></param>
        public UnicodeSet(Java.Lang.String arg0, bool arg1)
            : base(arg0, arg1)
        {
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#%3Cinit%3E(java.lang.String,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public UnicodeSet(Java.Lang.String arg0, int arg1)
            : base(arg0, arg1)
        {
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#%3Cinit%3E(java.lang.String,java.text.ParsePosition,android.icu.text.SymbolTable,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Java.Text.ParsePosition"/></param>
        /// <param name="arg2"><see cref="Android.Icu.Text.SymbolTable"/></param>
        /// <param name="arg3"><see cref="int"/></param>
        public UnicodeSet(Java.Lang.String arg0, Java.Text.ParsePosition arg1, Android.Icu.Text.SymbolTable arg2, int arg3)
            : base(arg0, arg1, arg2, arg3)
        {
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#%3Cinit%3E(java.lang.String,java.text.ParsePosition,android.icu.text.SymbolTable)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Java.Text.ParsePosition"/></param>
        /// <param name="arg2"><see cref="Android.Icu.Text.SymbolTable"/></param>
        public UnicodeSet(Java.Lang.String arg0, Java.Text.ParsePosition arg1, Android.Icu.Text.SymbolTable arg2)
            : base(arg0, arg1, arg2)
        {
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#%3Cinit%3E(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        public UnicodeSet(Java.Lang.String arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Android.Icu.Text.UnicodeSet"/> to <see cref="Java.Lang.Comparable"/>
        /// </summary>
        public static implicit operator Java.Lang.Comparable(Android.Icu.Text.UnicodeSet t) => t.Cast<Java.Lang.Comparable>();
        /// <summary>
        /// Converter from <see cref="Android.Icu.Text.UnicodeSet"/> to <see cref="Android.Icu.Util.Freezable"/>
        /// </summary>
        public static implicit operator Android.Icu.Util.Freezable(Android.Icu.Text.UnicodeSet t) => t.Cast<Android.Icu.Util.Freezable>();

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#ALL_CODE_POINTS"/>
        /// </summary>
        public static Android.Icu.Text.UnicodeSet ALL_CODE_POINTS { get { if (!_ALL_CODE_POINTSReady) { _ALL_CODE_POINTSContent = SGetField<Android.Icu.Text.UnicodeSet>(LocalBridgeClazz, "ALL_CODE_POINTS"); _ALL_CODE_POINTSReady = true; } return _ALL_CODE_POINTSContent; } }
        private static Android.Icu.Text.UnicodeSet _ALL_CODE_POINTSContent = default;
        private static bool _ALL_CODE_POINTSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#EMPTY"/>
        /// </summary>
        public static Android.Icu.Text.UnicodeSet EMPTY { get { if (!_EMPTYReady) { _EMPTYContent = SGetField<Android.Icu.Text.UnicodeSet>(LocalBridgeClazz, "EMPTY"); _EMPTYReady = true; } return _EMPTYContent; } }
        private static Android.Icu.Text.UnicodeSet _EMPTYContent = default;
        private static bool _EMPTYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#ADD_CASE_MAPPINGS"/>
        /// </summary>
        public static int ADD_CASE_MAPPINGS { get { if (!_ADD_CASE_MAPPINGSReady) { _ADD_CASE_MAPPINGSContent = SGetField<int>(LocalBridgeClazz, "ADD_CASE_MAPPINGS"); _ADD_CASE_MAPPINGSReady = true; } return _ADD_CASE_MAPPINGSContent; } }
        private static int _ADD_CASE_MAPPINGSContent = default;
        private static bool _ADD_CASE_MAPPINGSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#CASE"/>
        /// </summary>
        [global::System.Obsolete()]
        public static int CASE { get { if (!_CASEReady) { _CASEContent = SGetField<int>(LocalBridgeClazz, "CASE"); _CASEReady = true; } return _CASEContent; } }
        private static int _CASEContent = default;
        private static bool _CASEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#CASE_INSENSITIVE"/>
        /// </summary>
        public static int CASE_INSENSITIVE { get { if (!_CASE_INSENSITIVEReady) { _CASE_INSENSITIVEContent = SGetField<int>(LocalBridgeClazz, "CASE_INSENSITIVE"); _CASE_INSENSITIVEReady = true; } return _CASE_INSENSITIVEContent; } }
        private static int _CASE_INSENSITIVEContent = default;
        private static bool _CASE_INSENSITIVEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#IGNORE_SPACE"/>
        /// </summary>
        public static int IGNORE_SPACE { get { if (!_IGNORE_SPACEReady) { _IGNORE_SPACEContent = SGetField<int>(LocalBridgeClazz, "IGNORE_SPACE"); _IGNORE_SPACEReady = true; } return _IGNORE_SPACEContent; } }
        private static int _IGNORE_SPACEContent = default;
        private static bool _IGNORE_SPACEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#MAX_VALUE"/>
        /// </summary>
        public static int MAX_VALUE { get { if (!_MAX_VALUEReady) { _MAX_VALUEContent = SGetField<int>(LocalBridgeClazz, "MAX_VALUE"); _MAX_VALUEReady = true; } return _MAX_VALUEContent; } }
        private static int _MAX_VALUEContent = default;
        private static bool _MAX_VALUEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#MIN_VALUE"/>
        /// </summary>
        public static int MIN_VALUE { get { if (!_MIN_VALUEReady) { _MIN_VALUEContent = SGetField<int>(LocalBridgeClazz, "MIN_VALUE"); _MIN_VALUEReady = true; } return _MIN_VALUEContent; } }
        private static int _MIN_VALUEContent = default;
        private static bool _MIN_VALUEReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#from(java.lang.CharSequence)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.CharSequence"/></param>
        /// <returns><see cref="Android.Icu.Text.UnicodeSet"/></returns>
        public static Android.Icu.Text.UnicodeSet From(Java.Lang.CharSequence arg0)
        {
            return SExecuteWithSignature<Android.Icu.Text.UnicodeSet>(LocalBridgeClazz, "from", "(Ljava/lang/CharSequence;)Landroid/icu/text/UnicodeSet;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#fromAll(java.lang.CharSequence)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.CharSequence"/></param>
        /// <returns><see cref="Android.Icu.Text.UnicodeSet"/></returns>
        public static Android.Icu.Text.UnicodeSet FromAll(Java.Lang.CharSequence arg0)
        {
            return SExecuteWithSignature<Android.Icu.Text.UnicodeSet>(LocalBridgeClazz, "fromAll", "(Ljava/lang/CharSequence;)Landroid/icu/text/UnicodeSet;", arg0);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#addAll(java.lang.CharSequence[])"/>
        /// </summary>
        /// <param name="arg0"><typeparamref name="T"/></param>
        /// <typeparam name="T"><see cref="Java.Lang.ICharSequence"/></typeparam>
        /// <returns><see cref="Android.Icu.Text.UnicodeSet"/></returns>
        public Android.Icu.Text.UnicodeSet AddAll<T>(params T[] arg0) where T : Java.Lang.ICharSequence, new()
        {
            if (arg0.Length == 0) return IExecuteWithSignature<Android.Icu.Text.UnicodeSet>("addAll", "([Ljava/lang/CharSequence;)Landroid/icu/text/UnicodeSet;"); else return IExecuteWithSignature<Android.Icu.Text.UnicodeSet>("addAll", "([Ljava/lang/CharSequence;)Landroid/icu/text/UnicodeSet;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#removeAll(java.lang.Iterable)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.Iterable"/></param>
        /// <typeparam name="T"><see cref="Java.Lang.ICharSequence"/></typeparam>
        /// <returns><see cref="Android.Icu.Text.UnicodeSet"/></returns>
        public Android.Icu.Text.UnicodeSet RemoveAll<T>(Java.Lang.Iterable<T> arg0) where T : Java.Lang.ICharSequence, new()
        {
            return IExecuteWithSignature<Android.Icu.Text.UnicodeSet>("removeAll", "(Ljava/lang/Iterable;)Landroid/icu/text/UnicodeSet;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#retainAll(java.lang.Iterable)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.Iterable"/></param>
        /// <typeparam name="T"><see cref="Java.Lang.ICharSequence"/></typeparam>
        /// <returns><see cref="Android.Icu.Text.UnicodeSet"/></returns>
        public Android.Icu.Text.UnicodeSet RetainAll<T>(Java.Lang.Iterable<T> arg0) where T : Java.Lang.ICharSequence, new()
        {
            return IExecuteWithSignature<Android.Icu.Text.UnicodeSet>("retainAll", "(Ljava/lang/Iterable;)Landroid/icu/text/UnicodeSet;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#containsAll(java.lang.Iterable)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.Iterable"/></param>
        /// <typeparam name="T"><see cref="Java.Lang.ICharSequence"/></typeparam>
        /// <returns><see cref="bool"/></returns>
        public bool ContainsAll<T>(Java.Lang.Iterable<T> arg0) where T : Java.Lang.ICharSequence, new()
        {
            return IExecuteWithSignature<bool>("containsAll", "(Ljava/lang/Iterable;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#containsNone(java.lang.Iterable)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.Iterable"/></param>
        /// <typeparam name="T"><see cref="Java.Lang.ICharSequence"/></typeparam>
        /// <returns><see cref="bool"/></returns>
        public bool ContainsNone<T>(Java.Lang.Iterable<T> arg0) where T : Java.Lang.ICharSequence, new()
        {
            return IExecuteWithSignature<bool>("containsNone", "(Ljava/lang/Iterable;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#addAllTo(java.util.Collection)"/>
        /// </summary>
        /// <param name="arg0"><typeparamref name="T"/></param>
        /// <typeparam name="T"><see cref="Java.Util.Collection{Java.Lang.String}"/></typeparam>
        /// <returns><typeparamref name="T"/></returns>
        public T AddAllTo<T>(T arg0) where T : Java.Util.Collection<Java.Lang.String>
        {
            return IExecuteWithSignature<T>("addAllTo", "(Ljava/util/Collection;)Ljava/util/Collection;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#add(int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="Android.Icu.Text.UnicodeSet"/></returns>
        public Android.Icu.Text.UnicodeSet Add(int arg0, int arg1)
        {
            return IExecute<Android.Icu.Text.UnicodeSet>("add", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#add(java.lang.Iterable)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.Iterable"/></param>
        /// <returns><see cref="Android.Icu.Text.UnicodeSet"/></returns>
        public Android.Icu.Text.UnicodeSet Add(Java.Lang.Iterable<object> arg0)
        {
            return IExecuteWithSignature<Android.Icu.Text.UnicodeSet>("add", "(Ljava/lang/Iterable;)Landroid/icu/text/UnicodeSet;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#addAll(android.icu.text.UnicodeSet)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Text.UnicodeSet"/></param>
        /// <returns><see cref="Android.Icu.Text.UnicodeSet"/></returns>
        public Android.Icu.Text.UnicodeSet AddAll(Android.Icu.Text.UnicodeSet arg0)
        {
            return IExecuteWithSignature<Android.Icu.Text.UnicodeSet>("addAll", "(Landroid/icu/text/UnicodeSet;)Landroid/icu/text/UnicodeSet;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#addAll(int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="Android.Icu.Text.UnicodeSet"/></returns>
        public Android.Icu.Text.UnicodeSet AddAll(int arg0, int arg1)
        {
            return IExecute<Android.Icu.Text.UnicodeSet>("addAll", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#addAll(java.lang.Iterable)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.Iterable"/></param>
        /// <returns><see cref="Android.Icu.Text.UnicodeSet"/></returns>
        public Android.Icu.Text.UnicodeSet AddAll(Java.Lang.Iterable<object> arg0)
        {
            return IExecuteWithSignature<Android.Icu.Text.UnicodeSet>("addAll", "(Ljava/lang/Iterable;)Landroid/icu/text/UnicodeSet;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#applyIntPropertyValue(int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="Android.Icu.Text.UnicodeSet"/></returns>
        public Android.Icu.Text.UnicodeSet ApplyIntPropertyValue(int arg0, int arg1)
        {
            return IExecute<Android.Icu.Text.UnicodeSet>("applyIntPropertyValue", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#applyPattern(java.lang.String,boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="bool"/></param>
        /// <returns><see cref="Android.Icu.Text.UnicodeSet"/></returns>
        public Android.Icu.Text.UnicodeSet ApplyPattern(Java.Lang.String arg0, bool arg1)
        {
            return IExecute<Android.Icu.Text.UnicodeSet>("applyPattern", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#applyPattern(java.lang.String,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="Android.Icu.Text.UnicodeSet"/></returns>
        public Android.Icu.Text.UnicodeSet ApplyPattern(Java.Lang.String arg0, int arg1)
        {
            return IExecute<Android.Icu.Text.UnicodeSet>("applyPattern", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#applyPropertyAlias(java.lang.String,java.lang.String,android.icu.text.SymbolTable)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="Android.Icu.Text.SymbolTable"/></param>
        /// <returns><see cref="Android.Icu.Text.UnicodeSet"/></returns>
        public Android.Icu.Text.UnicodeSet ApplyPropertyAlias(Java.Lang.String arg0, Java.Lang.String arg1, Android.Icu.Text.SymbolTable arg2)
        {
            return IExecute<Android.Icu.Text.UnicodeSet>("applyPropertyAlias", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#applyPropertyAlias(java.lang.String,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Android.Icu.Text.UnicodeSet"/></returns>
        public Android.Icu.Text.UnicodeSet ApplyPropertyAlias(Java.Lang.String arg0, Java.Lang.String arg1)
        {
            return IExecute<Android.Icu.Text.UnicodeSet>("applyPropertyAlias", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#clear()"/>
        /// </summary>
        /// <returns><see cref="Android.Icu.Text.UnicodeSet"/></returns>
        public Android.Icu.Text.UnicodeSet Clear()
        {
            return IExecuteWithSignature<Android.Icu.Text.UnicodeSet>("clear", "()Landroid/icu/text/UnicodeSet;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#closeOver(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Android.Icu.Text.UnicodeSet"/></returns>
        public Android.Icu.Text.UnicodeSet CloseOver(int arg0)
        {
            return IExecuteWithSignature<Android.Icu.Text.UnicodeSet>("closeOver", "(I)Landroid/icu/text/UnicodeSet;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#compact()"/>
        /// </summary>
        /// <returns><see cref="Android.Icu.Text.UnicodeSet"/></returns>
        public Android.Icu.Text.UnicodeSet Compact()
        {
            return IExecuteWithSignature<Android.Icu.Text.UnicodeSet>("compact", "()Landroid/icu/text/UnicodeSet;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#complement()"/>
        /// </summary>
        /// <returns><see cref="Android.Icu.Text.UnicodeSet"/></returns>
        public Android.Icu.Text.UnicodeSet Complement()
        {
            return IExecuteWithSignature<Android.Icu.Text.UnicodeSet>("complement", "()Landroid/icu/text/UnicodeSet;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#complement(int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="Android.Icu.Text.UnicodeSet"/></returns>
        public Android.Icu.Text.UnicodeSet Complement(int arg0, int arg1)
        {
            return IExecute<Android.Icu.Text.UnicodeSet>("complement", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#complementAll(android.icu.text.UnicodeSet)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Text.UnicodeSet"/></param>
        /// <returns><see cref="Android.Icu.Text.UnicodeSet"/></returns>
        public Android.Icu.Text.UnicodeSet ComplementAll(Android.Icu.Text.UnicodeSet arg0)
        {
            return IExecuteWithSignature<Android.Icu.Text.UnicodeSet>("complementAll", "(Landroid/icu/text/UnicodeSet;)Landroid/icu/text/UnicodeSet;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#remove(int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="Android.Icu.Text.UnicodeSet"/></returns>
        public Android.Icu.Text.UnicodeSet Remove(int arg0, int arg1)
        {
            return IExecute<Android.Icu.Text.UnicodeSet>("remove", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#removeAll(android.icu.text.UnicodeSet)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Text.UnicodeSet"/></param>
        /// <returns><see cref="Android.Icu.Text.UnicodeSet"/></returns>
        public Android.Icu.Text.UnicodeSet RemoveAll(Android.Icu.Text.UnicodeSet arg0)
        {
            return IExecuteWithSignature<Android.Icu.Text.UnicodeSet>("removeAll", "(Landroid/icu/text/UnicodeSet;)Landroid/icu/text/UnicodeSet;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#retain(int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="Android.Icu.Text.UnicodeSet"/></returns>
        public Android.Icu.Text.UnicodeSet Retain(int arg0, int arg1)
        {
            return IExecute<Android.Icu.Text.UnicodeSet>("retain", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#retainAll(android.icu.text.UnicodeSet)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Text.UnicodeSet"/></param>
        /// <returns><see cref="Android.Icu.Text.UnicodeSet"/></returns>
        public Android.Icu.Text.UnicodeSet RetainAll(Android.Icu.Text.UnicodeSet arg0)
        {
            return IExecuteWithSignature<Android.Icu.Text.UnicodeSet>("retainAll", "(Landroid/icu/text/UnicodeSet;)Landroid/icu/text/UnicodeSet;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#set(android.icu.text.UnicodeSet)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Text.UnicodeSet"/></param>
        /// <returns><see cref="Android.Icu.Text.UnicodeSet"/></returns>
        public Android.Icu.Text.UnicodeSet Set(Android.Icu.Text.UnicodeSet arg0)
        {
            return IExecuteWithSignature<Android.Icu.Text.UnicodeSet>("set", "(Landroid/icu/text/UnicodeSet;)Landroid/icu/text/UnicodeSet;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#set(int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="Android.Icu.Text.UnicodeSet"/></returns>
        public Android.Icu.Text.UnicodeSet Set(int arg0, int arg1)
        {
            return IExecute<Android.Icu.Text.UnicodeSet>("set", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#contains(int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool Contains(int arg0, int arg1)
        {
            return IExecute<bool>("contains", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#containsAll(android.icu.text.UnicodeSet)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Text.UnicodeSet"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool ContainsAll(Android.Icu.Text.UnicodeSet arg0)
        {
            return IExecuteWithSignature<bool>("containsAll", "(Landroid/icu/text/UnicodeSet;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#containsAll(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool ContainsAll(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<bool>("containsAll", "(Ljava/lang/String;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#containsNone(android.icu.text.UnicodeSet)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Text.UnicodeSet"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool ContainsNone(Android.Icu.Text.UnicodeSet arg0)
        {
            return IExecuteWithSignature<bool>("containsNone", "(Landroid/icu/text/UnicodeSet;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#containsNone(int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool ContainsNone(int arg0, int arg1)
        {
            return IExecute<bool>("containsNone", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#containsNone(java.lang.CharSequence)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.CharSequence"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool ContainsNone(Java.Lang.CharSequence arg0)
        {
            return IExecuteWithSignature<bool>("containsNone", "(Ljava/lang/CharSequence;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#hasStrings()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool HasStrings()
        {
            return IExecuteWithSignature<bool>("hasStrings", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#isEmpty()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsEmpty()
        {
            return IExecuteWithSignature<bool>("isEmpty", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#isFrozen()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsFrozen()
        {
            return IExecuteWithSignature<bool>("isFrozen", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#containsSome(java.lang.Iterable)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.Iterable"/></param>
        /// <typeparam name="T"><see cref="Java.Lang.ICharSequence"/></typeparam>
        /// <returns><see cref="bool"/></returns>
        public bool ContainsSome<T>(Java.Lang.Iterable<T> arg0) where T : Java.Lang.ICharSequence, new()
        {
            return IExecuteWithSignature<bool>("containsSome", "(Ljava/lang/Iterable;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#add(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Android.Icu.Text.UnicodeSet"/></returns>
        public Android.Icu.Text.UnicodeSet Add(int arg0)
        {
            return IExecuteWithSignature<Android.Icu.Text.UnicodeSet>("add", "(I)Landroid/icu/text/UnicodeSet;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#add(java.lang.CharSequence)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.CharSequence"/></param>
        /// <returns><see cref="Android.Icu.Text.UnicodeSet"/></returns>
        public Android.Icu.Text.UnicodeSet Add(Java.Lang.CharSequence arg0)
        {
            return IExecuteWithSignature<Android.Icu.Text.UnicodeSet>("add", "(Ljava/lang/CharSequence;)Landroid/icu/text/UnicodeSet;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#addAll(java.lang.CharSequence)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.CharSequence"/></param>
        /// <returns><see cref="Android.Icu.Text.UnicodeSet"/></returns>
        public Android.Icu.Text.UnicodeSet AddAll(Java.Lang.CharSequence arg0)
        {
            return IExecuteWithSignature<Android.Icu.Text.UnicodeSet>("addAll", "(Ljava/lang/CharSequence;)Landroid/icu/text/UnicodeSet;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#applyPattern(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Android.Icu.Text.UnicodeSet"/></returns>
        public Android.Icu.Text.UnicodeSet ApplyPattern(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<Android.Icu.Text.UnicodeSet>("applyPattern", "(Ljava/lang/String;)Landroid/icu/text/UnicodeSet;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#complement(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Android.Icu.Text.UnicodeSet"/></returns>
        public Android.Icu.Text.UnicodeSet Complement(int arg0)
        {
            return IExecuteWithSignature<Android.Icu.Text.UnicodeSet>("complement", "(I)Landroid/icu/text/UnicodeSet;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#complement(java.lang.CharSequence)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.CharSequence"/></param>
        /// <returns><see cref="Android.Icu.Text.UnicodeSet"/></returns>
        public Android.Icu.Text.UnicodeSet Complement(Java.Lang.CharSequence arg0)
        {
            return IExecuteWithSignature<Android.Icu.Text.UnicodeSet>("complement", "(Ljava/lang/CharSequence;)Landroid/icu/text/UnicodeSet;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#complementAll(java.lang.CharSequence)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.CharSequence"/></param>
        /// <returns><see cref="Android.Icu.Text.UnicodeSet"/></returns>
        public Android.Icu.Text.UnicodeSet ComplementAll(Java.Lang.CharSequence arg0)
        {
            return IExecuteWithSignature<Android.Icu.Text.UnicodeSet>("complementAll", "(Ljava/lang/CharSequence;)Landroid/icu/text/UnicodeSet;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#remove(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Android.Icu.Text.UnicodeSet"/></returns>
        public Android.Icu.Text.UnicodeSet Remove(int arg0)
        {
            return IExecuteWithSignature<Android.Icu.Text.UnicodeSet>("remove", "(I)Landroid/icu/text/UnicodeSet;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#remove(java.lang.CharSequence)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.CharSequence"/></param>
        /// <returns><see cref="Android.Icu.Text.UnicodeSet"/></returns>
        public Android.Icu.Text.UnicodeSet Remove(Java.Lang.CharSequence arg0)
        {
            return IExecuteWithSignature<Android.Icu.Text.UnicodeSet>("remove", "(Ljava/lang/CharSequence;)Landroid/icu/text/UnicodeSet;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#removeAll(java.lang.CharSequence)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.CharSequence"/></param>
        /// <returns><see cref="Android.Icu.Text.UnicodeSet"/></returns>
        public Android.Icu.Text.UnicodeSet RemoveAll(Java.Lang.CharSequence arg0)
        {
            return IExecuteWithSignature<Android.Icu.Text.UnicodeSet>("removeAll", "(Ljava/lang/CharSequence;)Landroid/icu/text/UnicodeSet;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#removeAllStrings()"/>
        /// </summary>
        /// <returns><see cref="Android.Icu.Text.UnicodeSet"/></returns>
        public Android.Icu.Text.UnicodeSet RemoveAllStrings()
        {
            return IExecuteWithSignature<Android.Icu.Text.UnicodeSet>("removeAllStrings", "()Landroid/icu/text/UnicodeSet;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#retain(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Android.Icu.Text.UnicodeSet"/></returns>
        public Android.Icu.Text.UnicodeSet Retain(int arg0)
        {
            return IExecuteWithSignature<Android.Icu.Text.UnicodeSet>("retain", "(I)Landroid/icu/text/UnicodeSet;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#retain(java.lang.CharSequence)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.CharSequence"/></param>
        /// <returns><see cref="Android.Icu.Text.UnicodeSet"/></returns>
        public Android.Icu.Text.UnicodeSet Retain(Java.Lang.CharSequence arg0)
        {
            return IExecuteWithSignature<Android.Icu.Text.UnicodeSet>("retain", "(Ljava/lang/CharSequence;)Landroid/icu/text/UnicodeSet;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#retainAll(java.lang.CharSequence)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.CharSequence"/></param>
        /// <returns><see cref="Android.Icu.Text.UnicodeSet"/></returns>
        public Android.Icu.Text.UnicodeSet RetainAll(Java.Lang.CharSequence arg0)
        {
            return IExecuteWithSignature<Android.Icu.Text.UnicodeSet>("retainAll", "(Ljava/lang/CharSequence;)Landroid/icu/text/UnicodeSet;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#contains(java.lang.CharSequence)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.CharSequence"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool Contains(Java.Lang.CharSequence arg0)
        {
            return IExecuteWithSignature<bool>("contains", "(Ljava/lang/CharSequence;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#containsSome(android.icu.text.UnicodeSet)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Text.UnicodeSet"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool ContainsSome(Android.Icu.Text.UnicodeSet arg0)
        {
            return IExecuteWithSignature<bool>("containsSome", "(Landroid/icu/text/UnicodeSet;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#containsSome(int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool ContainsSome(int arg0, int arg1)
        {
            return IExecute<bool>("containsSome", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#containsSome(java.lang.CharSequence)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.CharSequence"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool ContainsSome(Java.Lang.CharSequence arg0)
        {
            return IExecuteWithSignature<bool>("containsSome", "(Ljava/lang/CharSequence;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#charAt(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public int CharAt(int arg0)
        {
            return IExecuteWithSignature<int>("charAt", "(I)I", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#compareTo(android.icu.text.UnicodeSet,android.icu.text.UnicodeSet.ComparisonStyle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Text.UnicodeSet"/></param>
        /// <param name="arg1"><see cref="Android.Icu.Text.UnicodeSet.ComparisonStyle"/></param>
        /// <returns><see cref="int"/></returns>
        public int CompareTo(Android.Icu.Text.UnicodeSet arg0, Android.Icu.Text.UnicodeSet.ComparisonStyle arg1)
        {
            return IExecute<int>("compareTo", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#compareTo(android.icu.text.UnicodeSet)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Text.UnicodeSet"/></param>
        /// <returns><see cref="int"/></returns>
        public int CompareTo(Android.Icu.Text.UnicodeSet arg0)
        {
            return IExecuteWithSignature<int>("compareTo", "(Landroid/icu/text/UnicodeSet;)I", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#compareTo(java.lang.Iterable)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.Iterable"/></param>
        /// <returns><see cref="int"/></returns>
        public int CompareTo(Java.Lang.Iterable<Java.Lang.String> arg0)
        {
            return IExecuteWithSignature<int>("compareTo", "(Ljava/lang/Iterable;)I", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#compareTo(java.lang.Object)"/>
        /// </summary>
        /// <param name="arg0"><see cref="object"/></param>
        /// <returns><see cref="int"/></returns>
        public int CompareTo(object arg0)
        {
            return IExecuteWithSignature<int>("compareTo", "(Ljava/lang/Object;)I", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#getRangeCount()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetRangeCount()
        {
            return IExecuteWithSignature<int>("getRangeCount", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#getRangeEnd(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public int GetRangeEnd(int arg0)
        {
            return IExecuteWithSignature<int>("getRangeEnd", "(I)I", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#getRangeStart(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public int GetRangeStart(int arg0)
        {
            return IExecuteWithSignature<int>("getRangeStart", "(I)I", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#indexOf(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public int IndexOf(int arg0)
        {
            return IExecuteWithSignature<int>("indexOf", "(I)I", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#size()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int Size()
        {
            return IExecuteWithSignature<int>("size", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#span(java.lang.CharSequence,android.icu.text.UnicodeSet.SpanCondition)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.CharSequence"/></param>
        /// <param name="arg1"><see cref="Android.Icu.Text.UnicodeSet.SpanCondition"/></param>
        /// <returns><see cref="int"/></returns>
        public int Span(Java.Lang.CharSequence arg0, Android.Icu.Text.UnicodeSet.SpanCondition arg1)
        {
            return IExecute<int>("span", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#span(java.lang.CharSequence,int,android.icu.text.UnicodeSet.SpanCondition)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.CharSequence"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="Android.Icu.Text.UnicodeSet.SpanCondition"/></param>
        /// <returns><see cref="int"/></returns>
        public int Span(Java.Lang.CharSequence arg0, int arg1, Android.Icu.Text.UnicodeSet.SpanCondition arg2)
        {
            return IExecute<int>("span", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#spanBack(java.lang.CharSequence,android.icu.text.UnicodeSet.SpanCondition)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.CharSequence"/></param>
        /// <param name="arg1"><see cref="Android.Icu.Text.UnicodeSet.SpanCondition"/></param>
        /// <returns><see cref="int"/></returns>
        public int SpanBack(Java.Lang.CharSequence arg0, Android.Icu.Text.UnicodeSet.SpanCondition arg1)
        {
            return IExecute<int>("spanBack", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#spanBack(java.lang.CharSequence,int,android.icu.text.UnicodeSet.SpanCondition)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.CharSequence"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="Android.Icu.Text.UnicodeSet.SpanCondition"/></param>
        /// <returns><see cref="int"/></returns>
        public int SpanBack(Java.Lang.CharSequence arg0, int arg1, Android.Icu.Text.UnicodeSet.SpanCondition arg2)
        {
            return IExecute<int>("spanBack", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#ranges()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.Iterable"/></returns>
        public Java.Lang.Iterable<Android.Icu.Text.UnicodeSet.EntryRange> Ranges()
        {
            return IExecuteWithSignature<Java.Lang.Iterable<Android.Icu.Text.UnicodeSet.EntryRange>>("ranges", "()Ljava/lang/Iterable;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#cloneAsThawed()"/>
        /// </summary>
        /// <returns><see cref="object"/></returns>
        public object CloneAsThawed()
        {
            return IExecuteWithSignature("cloneAsThawed", "()Ljava/lang/Object;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#freeze()"/>
        /// </summary>
        /// <returns><see cref="object"/></returns>
        public object Freeze()
        {
            return IExecuteWithSignature("freeze", "()Ljava/lang/Object;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#_generatePattern(java.lang.StringBuffer,boolean,boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.StringBuffer"/></param>
        /// <param name="arg1"><see cref="bool"/></param>
        /// <param name="arg2"><see cref="bool"/></param>
        /// <returns><see cref="Java.Lang.StringBuffer"/></returns>
        public Java.Lang.StringBuffer _generatePattern(Java.Lang.StringBuffer arg0, bool arg1, bool arg2)
        {
            return IExecute<Java.Lang.StringBuffer>("_generatePattern", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#_generatePattern(java.lang.StringBuffer,boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.StringBuffer"/></param>
        /// <param name="arg1"><see cref="bool"/></param>
        /// <returns><see cref="Java.Lang.StringBuffer"/></returns>
        public Java.Lang.StringBuffer _generatePattern(Java.Lang.StringBuffer arg0, bool arg1)
        {
            return IExecute<Java.Lang.StringBuffer>("_generatePattern", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#strings()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.Collection"/></returns>
        public Java.Util.Collection<Java.Lang.String> Strings()
        {
            return IExecuteWithSignature<Java.Util.Collection<Java.Lang.String>>("strings", "()Ljava/util/Collection;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.html#iterator()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.Iterator"/></returns>
        public Java.Util.Iterator<Java.Lang.String> Iterator()
        {
            return IExecuteWithSignature<Java.Util.Iterator<Java.Lang.String>>("iterator", "()Ljava/util/Iterator;");
        }

        #endregion

        #region Nested classes
        #region ComparisonStyle
        public partial class ComparisonStyle
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.ComparisonStyle.html#LEXICOGRAPHIC"/>
            /// </summary>
            public static Android.Icu.Text.UnicodeSet.ComparisonStyle LEXICOGRAPHIC { get { if (!_LEXICOGRAPHICReady) { _LEXICOGRAPHICContent = SGetField<Android.Icu.Text.UnicodeSet.ComparisonStyle>(LocalBridgeClazz, "LEXICOGRAPHIC"); _LEXICOGRAPHICReady = true; } return _LEXICOGRAPHICContent; } }
            private static Android.Icu.Text.UnicodeSet.ComparisonStyle _LEXICOGRAPHICContent = default;
            private static bool _LEXICOGRAPHICReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.ComparisonStyle.html#LONGER_FIRST"/>
            /// </summary>
            public static Android.Icu.Text.UnicodeSet.ComparisonStyle LONGER_FIRST { get { if (!_LONGER_FIRSTReady) { _LONGER_FIRSTContent = SGetField<Android.Icu.Text.UnicodeSet.ComparisonStyle>(LocalBridgeClazz, "LONGER_FIRST"); _LONGER_FIRSTReady = true; } return _LONGER_FIRSTContent; } }
            private static Android.Icu.Text.UnicodeSet.ComparisonStyle _LONGER_FIRSTContent = default;
            private static bool _LONGER_FIRSTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.ComparisonStyle.html#SHORTER_FIRST"/>
            /// </summary>
            public static Android.Icu.Text.UnicodeSet.ComparisonStyle SHORTER_FIRST { get { if (!_SHORTER_FIRSTReady) { _SHORTER_FIRSTContent = SGetField<Android.Icu.Text.UnicodeSet.ComparisonStyle>(LocalBridgeClazz, "SHORTER_FIRST"); _SHORTER_FIRSTReady = true; } return _SHORTER_FIRSTContent; } }
            private static Android.Icu.Text.UnicodeSet.ComparisonStyle _SHORTER_FIRSTContent = default;
            private static bool _SHORTER_FIRSTReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.ComparisonStyle.html#valueOf(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Android.Icu.Text.UnicodeSet.ComparisonStyle"/></returns>
            public static Android.Icu.Text.UnicodeSet.ComparisonStyle ValueOf(Java.Lang.String arg0)
            {
                return SExecuteWithSignature<Android.Icu.Text.UnicodeSet.ComparisonStyle>(LocalBridgeClazz, "valueOf", "(Ljava/lang/String;)Landroid/icu/text/UnicodeSet$ComparisonStyle;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.ComparisonStyle.html#values()"/>
            /// </summary>
            /// <returns><see cref="Android.Icu.Text.UnicodeSet.ComparisonStyle"/></returns>
            public static Android.Icu.Text.UnicodeSet.ComparisonStyle[] Values()
            {
                return SExecuteWithSignatureArray<Android.Icu.Text.UnicodeSet.ComparisonStyle>(LocalBridgeClazz, "values", "()[Landroid/icu/text/UnicodeSet$ComparisonStyle;");
            }

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region EntryRange
        public partial class EntryRange
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.EntryRange.html#codepoint"/>
            /// </summary>
            public int codepoint { get { return IGetField<int>("codepoint"); } set { ISetField("codepoint", value); } }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.EntryRange.html#codepointEnd"/>
            /// </summary>
            public int codepointEnd { get { return IGetField<int>("codepointEnd"); } set { ISetField("codepointEnd", value); } }

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region SpanCondition
        public partial class SpanCondition
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.SpanCondition.html#CONDITION_COUNT"/>
            /// </summary>
            public static Android.Icu.Text.UnicodeSet.SpanCondition CONDITION_COUNT { get { if (!_CONDITION_COUNTReady) { _CONDITION_COUNTContent = SGetField<Android.Icu.Text.UnicodeSet.SpanCondition>(LocalBridgeClazz, "CONDITION_COUNT"); _CONDITION_COUNTReady = true; } return _CONDITION_COUNTContent; } }
            private static Android.Icu.Text.UnicodeSet.SpanCondition _CONDITION_COUNTContent = default;
            private static bool _CONDITION_COUNTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.SpanCondition.html#CONTAINED"/>
            /// </summary>
            public static Android.Icu.Text.UnicodeSet.SpanCondition CONTAINED { get { if (!_CONTAINEDReady) { _CONTAINEDContent = SGetField<Android.Icu.Text.UnicodeSet.SpanCondition>(LocalBridgeClazz, "CONTAINED"); _CONTAINEDReady = true; } return _CONTAINEDContent; } }
            private static Android.Icu.Text.UnicodeSet.SpanCondition _CONTAINEDContent = default;
            private static bool _CONTAINEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.SpanCondition.html#NOT_CONTAINED"/>
            /// </summary>
            public static Android.Icu.Text.UnicodeSet.SpanCondition NOT_CONTAINED { get { if (!_NOT_CONTAINEDReady) { _NOT_CONTAINEDContent = SGetField<Android.Icu.Text.UnicodeSet.SpanCondition>(LocalBridgeClazz, "NOT_CONTAINED"); _NOT_CONTAINEDReady = true; } return _NOT_CONTAINEDContent; } }
            private static Android.Icu.Text.UnicodeSet.SpanCondition _NOT_CONTAINEDContent = default;
            private static bool _NOT_CONTAINEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.SpanCondition.html#SIMPLE"/>
            /// </summary>
            public static Android.Icu.Text.UnicodeSet.SpanCondition SIMPLE { get { if (!_SIMPLEReady) { _SIMPLEContent = SGetField<Android.Icu.Text.UnicodeSet.SpanCondition>(LocalBridgeClazz, "SIMPLE"); _SIMPLEReady = true; } return _SIMPLEContent; } }
            private static Android.Icu.Text.UnicodeSet.SpanCondition _SIMPLEContent = default;
            private static bool _SIMPLEReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.SpanCondition.html#valueOf(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Android.Icu.Text.UnicodeSet.SpanCondition"/></returns>
            public static Android.Icu.Text.UnicodeSet.SpanCondition ValueOf(Java.Lang.String arg0)
            {
                return SExecuteWithSignature<Android.Icu.Text.UnicodeSet.SpanCondition>(LocalBridgeClazz, "valueOf", "(Ljava/lang/String;)Landroid/icu/text/UnicodeSet$SpanCondition;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/text/UnicodeSet.SpanCondition.html#values()"/>
            /// </summary>
            /// <returns><see cref="Android.Icu.Text.UnicodeSet.SpanCondition"/></returns>
            public static Android.Icu.Text.UnicodeSet.SpanCondition[] Values()
            {
                return SExecuteWithSignatureArray<Android.Icu.Text.UnicodeSet.SpanCondition>(LocalBridgeClazz, "values", "()[Landroid/icu/text/UnicodeSet$SpanCondition;");
            }

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}