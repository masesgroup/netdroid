/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.8.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Icu.Util
{
    #region Calendar
    public partial class Calendar : Java.Io.ISerializable, Java.Lang.ICloneable, Java.Lang.IComparable<Android.Icu.Util.Calendar>
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Android.Icu.Util.Calendar"/> to <see cref="Java.Io.Serializable"/>
        /// </summary>
        public static implicit operator Java.Io.Serializable(Android.Icu.Util.Calendar t) => t.Cast<Java.Io.Serializable>();
        /// <summary>
        /// Converter from <see cref="Android.Icu.Util.Calendar"/> to <see cref="Java.Lang.Cloneable"/>
        /// </summary>
        public static implicit operator Java.Lang.Cloneable(Android.Icu.Util.Calendar t) => t.Cast<Java.Lang.Cloneable>();
        /// <summary>
        /// Converter from <see cref="Android.Icu.Util.Calendar"/> to <see cref="Java.Lang.Comparable"/>
        /// </summary>
        public static implicit operator Java.Lang.Comparable(Android.Icu.Util.Calendar t) => t.Cast<Java.Lang.Comparable>();

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#AM"/>
        /// </summary>
        public static int AM { get { if (!_AMReady) { _AMContent = SGetField<int>(LocalBridgeClazz, "AM"); _AMReady = true; } return _AMContent; } }
        private static int _AMContent = default;
        private static bool _AMReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#AM_PM"/>
        /// </summary>
        public static int AM_PM { get { if (!_AM_PMReady) { _AM_PMContent = SGetField<int>(LocalBridgeClazz, "AM_PM"); _AM_PMReady = true; } return _AM_PMContent; } }
        private static int _AM_PMContent = default;
        private static bool _AM_PMReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#APRIL"/>
        /// </summary>
        public static int APRIL { get { if (!_APRILReady) { _APRILContent = SGetField<int>(LocalBridgeClazz, "APRIL"); _APRILReady = true; } return _APRILContent; } }
        private static int _APRILContent = default;
        private static bool _APRILReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#AUGUST"/>
        /// </summary>
        public static int AUGUST { get { if (!_AUGUSTReady) { _AUGUSTContent = SGetField<int>(LocalBridgeClazz, "AUGUST"); _AUGUSTReady = true; } return _AUGUSTContent; } }
        private static int _AUGUSTContent = default;
        private static bool _AUGUSTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#DATE"/>
        /// </summary>
        public static int DATE { get { if (!_DATEReady) { _DATEContent = SGetField<int>(LocalBridgeClazz, "DATE"); _DATEReady = true; } return _DATEContent; } }
        private static int _DATEContent = default;
        private static bool _DATEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#DAY_OF_MONTH"/>
        /// </summary>
        public static int DAY_OF_MONTH { get { if (!_DAY_OF_MONTHReady) { _DAY_OF_MONTHContent = SGetField<int>(LocalBridgeClazz, "DAY_OF_MONTH"); _DAY_OF_MONTHReady = true; } return _DAY_OF_MONTHContent; } }
        private static int _DAY_OF_MONTHContent = default;
        private static bool _DAY_OF_MONTHReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#DAY_OF_WEEK"/>
        /// </summary>
        public static int DAY_OF_WEEK { get { if (!_DAY_OF_WEEKReady) { _DAY_OF_WEEKContent = SGetField<int>(LocalBridgeClazz, "DAY_OF_WEEK"); _DAY_OF_WEEKReady = true; } return _DAY_OF_WEEKContent; } }
        private static int _DAY_OF_WEEKContent = default;
        private static bool _DAY_OF_WEEKReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#DAY_OF_WEEK_IN_MONTH"/>
        /// </summary>
        public static int DAY_OF_WEEK_IN_MONTH { get { if (!_DAY_OF_WEEK_IN_MONTHReady) { _DAY_OF_WEEK_IN_MONTHContent = SGetField<int>(LocalBridgeClazz, "DAY_OF_WEEK_IN_MONTH"); _DAY_OF_WEEK_IN_MONTHReady = true; } return _DAY_OF_WEEK_IN_MONTHContent; } }
        private static int _DAY_OF_WEEK_IN_MONTHContent = default;
        private static bool _DAY_OF_WEEK_IN_MONTHReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#DAY_OF_YEAR"/>
        /// </summary>
        public static int DAY_OF_YEAR { get { if (!_DAY_OF_YEARReady) { _DAY_OF_YEARContent = SGetField<int>(LocalBridgeClazz, "DAY_OF_YEAR"); _DAY_OF_YEARReady = true; } return _DAY_OF_YEARContent; } }
        private static int _DAY_OF_YEARContent = default;
        private static bool _DAY_OF_YEARReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#DECEMBER"/>
        /// </summary>
        public static int DECEMBER { get { if (!_DECEMBERReady) { _DECEMBERContent = SGetField<int>(LocalBridgeClazz, "DECEMBER"); _DECEMBERReady = true; } return _DECEMBERContent; } }
        private static int _DECEMBERContent = default;
        private static bool _DECEMBERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#DOW_LOCAL"/>
        /// </summary>
        public static int DOW_LOCAL { get { if (!_DOW_LOCALReady) { _DOW_LOCALContent = SGetField<int>(LocalBridgeClazz, "DOW_LOCAL"); _DOW_LOCALReady = true; } return _DOW_LOCALContent; } }
        private static int _DOW_LOCALContent = default;
        private static bool _DOW_LOCALReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#DST_OFFSET"/>
        /// </summary>
        public static int DST_OFFSET { get { if (!_DST_OFFSETReady) { _DST_OFFSETContent = SGetField<int>(LocalBridgeClazz, "DST_OFFSET"); _DST_OFFSETReady = true; } return _DST_OFFSETContent; } }
        private static int _DST_OFFSETContent = default;
        private static bool _DST_OFFSETReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#ERA"/>
        /// </summary>
        public static int ERA { get { if (!_ERAReady) { _ERAContent = SGetField<int>(LocalBridgeClazz, "ERA"); _ERAReady = true; } return _ERAContent; } }
        private static int _ERAContent = default;
        private static bool _ERAReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#EXTENDED_YEAR"/>
        /// </summary>
        public static int EXTENDED_YEAR { get { if (!_EXTENDED_YEARReady) { _EXTENDED_YEARContent = SGetField<int>(LocalBridgeClazz, "EXTENDED_YEAR"); _EXTENDED_YEARReady = true; } return _EXTENDED_YEARContent; } }
        private static int _EXTENDED_YEARContent = default;
        private static bool _EXTENDED_YEARReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#FEBRUARY"/>
        /// </summary>
        public static int FEBRUARY { get { if (!_FEBRUARYReady) { _FEBRUARYContent = SGetField<int>(LocalBridgeClazz, "FEBRUARY"); _FEBRUARYReady = true; } return _FEBRUARYContent; } }
        private static int _FEBRUARYContent = default;
        private static bool _FEBRUARYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#FRIDAY"/>
        /// </summary>
        public static int FRIDAY { get { if (!_FRIDAYReady) { _FRIDAYContent = SGetField<int>(LocalBridgeClazz, "FRIDAY"); _FRIDAYReady = true; } return _FRIDAYContent; } }
        private static int _FRIDAYContent = default;
        private static bool _FRIDAYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#HOUR"/>
        /// </summary>
        public static int HOUR { get { if (!_HOURReady) { _HOURContent = SGetField<int>(LocalBridgeClazz, "HOUR"); _HOURReady = true; } return _HOURContent; } }
        private static int _HOURContent = default;
        private static bool _HOURReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#HOUR_OF_DAY"/>
        /// </summary>
        public static int HOUR_OF_DAY { get { if (!_HOUR_OF_DAYReady) { _HOUR_OF_DAYContent = SGetField<int>(LocalBridgeClazz, "HOUR_OF_DAY"); _HOUR_OF_DAYReady = true; } return _HOUR_OF_DAYContent; } }
        private static int _HOUR_OF_DAYContent = default;
        private static bool _HOUR_OF_DAYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#IS_LEAP_MONTH"/>
        /// </summary>
        public static int IS_LEAP_MONTH { get { if (!_IS_LEAP_MONTHReady) { _IS_LEAP_MONTHContent = SGetField<int>(LocalBridgeClazz, "IS_LEAP_MONTH"); _IS_LEAP_MONTHReady = true; } return _IS_LEAP_MONTHContent; } }
        private static int _IS_LEAP_MONTHContent = default;
        private static bool _IS_LEAP_MONTHReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#JANUARY"/>
        /// </summary>
        public static int JANUARY { get { if (!_JANUARYReady) { _JANUARYContent = SGetField<int>(LocalBridgeClazz, "JANUARY"); _JANUARYReady = true; } return _JANUARYContent; } }
        private static int _JANUARYContent = default;
        private static bool _JANUARYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#JULIAN_DAY"/>
        /// </summary>
        public static int JULIAN_DAY { get { if (!_JULIAN_DAYReady) { _JULIAN_DAYContent = SGetField<int>(LocalBridgeClazz, "JULIAN_DAY"); _JULIAN_DAYReady = true; } return _JULIAN_DAYContent; } }
        private static int _JULIAN_DAYContent = default;
        private static bool _JULIAN_DAYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#JULY"/>
        /// </summary>
        public static int JULY { get { if (!_JULYReady) { _JULYContent = SGetField<int>(LocalBridgeClazz, "JULY"); _JULYReady = true; } return _JULYContent; } }
        private static int _JULYContent = default;
        private static bool _JULYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#JUNE"/>
        /// </summary>
        public static int JUNE { get { if (!_JUNEReady) { _JUNEContent = SGetField<int>(LocalBridgeClazz, "JUNE"); _JUNEReady = true; } return _JUNEContent; } }
        private static int _JUNEContent = default;
        private static bool _JUNEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#MARCH"/>
        /// </summary>
        public static int MARCH { get { if (!_MARCHReady) { _MARCHContent = SGetField<int>(LocalBridgeClazz, "MARCH"); _MARCHReady = true; } return _MARCHContent; } }
        private static int _MARCHContent = default;
        private static bool _MARCHReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#MAY"/>
        /// </summary>
        public static int MAY { get { if (!_MAYReady) { _MAYContent = SGetField<int>(LocalBridgeClazz, "MAY"); _MAYReady = true; } return _MAYContent; } }
        private static int _MAYContent = default;
        private static bool _MAYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#MILLISECOND"/>
        /// </summary>
        public static int MILLISECOND { get { if (!_MILLISECONDReady) { _MILLISECONDContent = SGetField<int>(LocalBridgeClazz, "MILLISECOND"); _MILLISECONDReady = true; } return _MILLISECONDContent; } }
        private static int _MILLISECONDContent = default;
        private static bool _MILLISECONDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#MILLISECONDS_IN_DAY"/>
        /// </summary>
        public static int MILLISECONDS_IN_DAY { get { if (!_MILLISECONDS_IN_DAYReady) { _MILLISECONDS_IN_DAYContent = SGetField<int>(LocalBridgeClazz, "MILLISECONDS_IN_DAY"); _MILLISECONDS_IN_DAYReady = true; } return _MILLISECONDS_IN_DAYContent; } }
        private static int _MILLISECONDS_IN_DAYContent = default;
        private static bool _MILLISECONDS_IN_DAYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#MINUTE"/>
        /// </summary>
        public static int MINUTE { get { if (!_MINUTEReady) { _MINUTEContent = SGetField<int>(LocalBridgeClazz, "MINUTE"); _MINUTEReady = true; } return _MINUTEContent; } }
        private static int _MINUTEContent = default;
        private static bool _MINUTEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#MONDAY"/>
        /// </summary>
        public static int MONDAY { get { if (!_MONDAYReady) { _MONDAYContent = SGetField<int>(LocalBridgeClazz, "MONDAY"); _MONDAYReady = true; } return _MONDAYContent; } }
        private static int _MONDAYContent = default;
        private static bool _MONDAYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#MONTH"/>
        /// </summary>
        public static int MONTH { get { if (!_MONTHReady) { _MONTHContent = SGetField<int>(LocalBridgeClazz, "MONTH"); _MONTHReady = true; } return _MONTHContent; } }
        private static int _MONTHContent = default;
        private static bool _MONTHReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#NOVEMBER"/>
        /// </summary>
        public static int NOVEMBER { get { if (!_NOVEMBERReady) { _NOVEMBERContent = SGetField<int>(LocalBridgeClazz, "NOVEMBER"); _NOVEMBERReady = true; } return _NOVEMBERContent; } }
        private static int _NOVEMBERContent = default;
        private static bool _NOVEMBERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#OCTOBER"/>
        /// </summary>
        public static int OCTOBER { get { if (!_OCTOBERReady) { _OCTOBERContent = SGetField<int>(LocalBridgeClazz, "OCTOBER"); _OCTOBERReady = true; } return _OCTOBERContent; } }
        private static int _OCTOBERContent = default;
        private static bool _OCTOBERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#PM"/>
        /// </summary>
        public static int PM { get { if (!_PMReady) { _PMContent = SGetField<int>(LocalBridgeClazz, "PM"); _PMReady = true; } return _PMContent; } }
        private static int _PMContent = default;
        private static bool _PMReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#SATURDAY"/>
        /// </summary>
        public static int SATURDAY { get { if (!_SATURDAYReady) { _SATURDAYContent = SGetField<int>(LocalBridgeClazz, "SATURDAY"); _SATURDAYReady = true; } return _SATURDAYContent; } }
        private static int _SATURDAYContent = default;
        private static bool _SATURDAYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#SECOND"/>
        /// </summary>
        public static int SECOND { get { if (!_SECONDReady) { _SECONDContent = SGetField<int>(LocalBridgeClazz, "SECOND"); _SECONDReady = true; } return _SECONDContent; } }
        private static int _SECONDContent = default;
        private static bool _SECONDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#SEPTEMBER"/>
        /// </summary>
        public static int SEPTEMBER { get { if (!_SEPTEMBERReady) { _SEPTEMBERContent = SGetField<int>(LocalBridgeClazz, "SEPTEMBER"); _SEPTEMBERReady = true; } return _SEPTEMBERContent; } }
        private static int _SEPTEMBERContent = default;
        private static bool _SEPTEMBERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#SUNDAY"/>
        /// </summary>
        public static int SUNDAY { get { if (!_SUNDAYReady) { _SUNDAYContent = SGetField<int>(LocalBridgeClazz, "SUNDAY"); _SUNDAYReady = true; } return _SUNDAYContent; } }
        private static int _SUNDAYContent = default;
        private static bool _SUNDAYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#THURSDAY"/>
        /// </summary>
        public static int THURSDAY { get { if (!_THURSDAYReady) { _THURSDAYContent = SGetField<int>(LocalBridgeClazz, "THURSDAY"); _THURSDAYReady = true; } return _THURSDAYContent; } }
        private static int _THURSDAYContent = default;
        private static bool _THURSDAYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#TUESDAY"/>
        /// </summary>
        public static int TUESDAY { get { if (!_TUESDAYReady) { _TUESDAYContent = SGetField<int>(LocalBridgeClazz, "TUESDAY"); _TUESDAYReady = true; } return _TUESDAYContent; } }
        private static int _TUESDAYContent = default;
        private static bool _TUESDAYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#UNDECIMBER"/>
        /// </summary>
        public static int UNDECIMBER { get { if (!_UNDECIMBERReady) { _UNDECIMBERContent = SGetField<int>(LocalBridgeClazz, "UNDECIMBER"); _UNDECIMBERReady = true; } return _UNDECIMBERContent; } }
        private static int _UNDECIMBERContent = default;
        private static bool _UNDECIMBERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#WALLTIME_FIRST"/>
        /// </summary>
        public static int WALLTIME_FIRST { get { if (!_WALLTIME_FIRSTReady) { _WALLTIME_FIRSTContent = SGetField<int>(LocalBridgeClazz, "WALLTIME_FIRST"); _WALLTIME_FIRSTReady = true; } return _WALLTIME_FIRSTContent; } }
        private static int _WALLTIME_FIRSTContent = default;
        private static bool _WALLTIME_FIRSTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#WALLTIME_LAST"/>
        /// </summary>
        public static int WALLTIME_LAST { get { if (!_WALLTIME_LASTReady) { _WALLTIME_LASTContent = SGetField<int>(LocalBridgeClazz, "WALLTIME_LAST"); _WALLTIME_LASTReady = true; } return _WALLTIME_LASTContent; } }
        private static int _WALLTIME_LASTContent = default;
        private static bool _WALLTIME_LASTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#WALLTIME_NEXT_VALID"/>
        /// </summary>
        public static int WALLTIME_NEXT_VALID { get { if (!_WALLTIME_NEXT_VALIDReady) { _WALLTIME_NEXT_VALIDContent = SGetField<int>(LocalBridgeClazz, "WALLTIME_NEXT_VALID"); _WALLTIME_NEXT_VALIDReady = true; } return _WALLTIME_NEXT_VALIDContent; } }
        private static int _WALLTIME_NEXT_VALIDContent = default;
        private static bool _WALLTIME_NEXT_VALIDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#WEDNESDAY"/>
        /// </summary>
        public static int WEDNESDAY { get { if (!_WEDNESDAYReady) { _WEDNESDAYContent = SGetField<int>(LocalBridgeClazz, "WEDNESDAY"); _WEDNESDAYReady = true; } return _WEDNESDAYContent; } }
        private static int _WEDNESDAYContent = default;
        private static bool _WEDNESDAYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#WEEK_OF_MONTH"/>
        /// </summary>
        public static int WEEK_OF_MONTH { get { if (!_WEEK_OF_MONTHReady) { _WEEK_OF_MONTHContent = SGetField<int>(LocalBridgeClazz, "WEEK_OF_MONTH"); _WEEK_OF_MONTHReady = true; } return _WEEK_OF_MONTHContent; } }
        private static int _WEEK_OF_MONTHContent = default;
        private static bool _WEEK_OF_MONTHReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#WEEK_OF_YEAR"/>
        /// </summary>
        public static int WEEK_OF_YEAR { get { if (!_WEEK_OF_YEARReady) { _WEEK_OF_YEARContent = SGetField<int>(LocalBridgeClazz, "WEEK_OF_YEAR"); _WEEK_OF_YEARReady = true; } return _WEEK_OF_YEARContent; } }
        private static int _WEEK_OF_YEARContent = default;
        private static bool _WEEK_OF_YEARReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#YEAR"/>
        /// </summary>
        public static int YEAR { get { if (!_YEARReady) { _YEARContent = SGetField<int>(LocalBridgeClazz, "YEAR"); _YEARReady = true; } return _YEARContent; } }
        private static int _YEARContent = default;
        private static bool _YEARReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#YEAR_WOY"/>
        /// </summary>
        public static int YEAR_WOY { get { if (!_YEAR_WOYReady) { _YEAR_WOYContent = SGetField<int>(LocalBridgeClazz, "YEAR_WOY"); _YEAR_WOYReady = true; } return _YEAR_WOYContent; } }
        private static int _YEAR_WOYContent = default;
        private static bool _YEAR_WOYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#ZONE_OFFSET"/>
        /// </summary>
        public static int ZONE_OFFSET { get { if (!_ZONE_OFFSETReady) { _ZONE_OFFSETContent = SGetField<int>(LocalBridgeClazz, "ZONE_OFFSET"); _ZONE_OFFSETReady = true; } return _ZONE_OFFSETContent; } }
        private static int _ZONE_OFFSETContent = default;
        private static bool _ZONE_OFFSETReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#getInstance()"/>
        /// </summary>
        /// <returns><see cref="Android.Icu.Util.Calendar"/></returns>
        public static Android.Icu.Util.Calendar GetInstance()
        {
            return SExecuteWithSignature<Android.Icu.Util.Calendar>(LocalBridgeClazz, "getInstance", "()Landroid/icu/util/Calendar;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#getInstance(android.icu.util.TimeZone,android.icu.util.ULocale)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Util.TimeZone"/></param>
        /// <param name="arg1"><see cref="Android.Icu.Util.ULocale"/></param>
        /// <returns><see cref="Android.Icu.Util.Calendar"/></returns>
        public static Android.Icu.Util.Calendar GetInstance(Android.Icu.Util.TimeZone arg0, Android.Icu.Util.ULocale arg1)
        {
            return SExecute<Android.Icu.Util.Calendar>(LocalBridgeClazz, "getInstance", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#getInstance(android.icu.util.TimeZone,java.util.Locale)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Util.TimeZone"/></param>
        /// <param name="arg1"><see cref="Java.Util.Locale"/></param>
        /// <returns><see cref="Android.Icu.Util.Calendar"/></returns>
        public static Android.Icu.Util.Calendar GetInstance(Android.Icu.Util.TimeZone arg0, Java.Util.Locale arg1)
        {
            return SExecute<Android.Icu.Util.Calendar>(LocalBridgeClazz, "getInstance", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#getInstance(android.icu.util.TimeZone)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Util.TimeZone"/></param>
        /// <returns><see cref="Android.Icu.Util.Calendar"/></returns>
        public static Android.Icu.Util.Calendar GetInstance(Android.Icu.Util.TimeZone arg0)
        {
            return SExecuteWithSignature<Android.Icu.Util.Calendar>(LocalBridgeClazz, "getInstance", "(Landroid/icu/util/TimeZone;)Landroid/icu/util/Calendar;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#getInstance(android.icu.util.ULocale)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Util.ULocale"/></param>
        /// <returns><see cref="Android.Icu.Util.Calendar"/></returns>
        public static Android.Icu.Util.Calendar GetInstance(Android.Icu.Util.ULocale arg0)
        {
            return SExecuteWithSignature<Android.Icu.Util.Calendar>(LocalBridgeClazz, "getInstance", "(Landroid/icu/util/ULocale;)Landroid/icu/util/Calendar;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#getInstance(java.util.Locale)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Locale"/></param>
        /// <returns><see cref="Android.Icu.Util.Calendar"/></returns>
        public static Android.Icu.Util.Calendar GetInstance(Java.Util.Locale arg0)
        {
            return SExecuteWithSignature<Android.Icu.Util.Calendar>(LocalBridgeClazz, "getInstance", "(Ljava/util/Locale;)Landroid/icu/util/Calendar;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#getWeekDataForRegion(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Android.Icu.Util.Calendar.WeekData"/></returns>
        public static Android.Icu.Util.Calendar.WeekData GetWeekDataForRegion(Java.Lang.String arg0)
        {
            return SExecuteWithSignature<Android.Icu.Util.Calendar.WeekData>(LocalBridgeClazz, "getWeekDataForRegion", "(Ljava/lang/String;)Landroid/icu/util/Calendar$WeekData;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#getKeywordValuesForLocale(java.lang.String,android.icu.util.ULocale,boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Android.Icu.Util.ULocale"/></param>
        /// <param name="arg2"><see cref="bool"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public static Java.Lang.String[] GetKeywordValuesForLocale(Java.Lang.String arg0, Android.Icu.Util.ULocale arg1, bool arg2)
        {
            return SExecuteArray<Java.Lang.String>(LocalBridgeClazz, "getKeywordValuesForLocale", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#getAvailableLocales()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.Locale"/></returns>
        public static Java.Util.Locale[] GetAvailableLocales()
        {
            return SExecuteWithSignatureArray<Java.Util.Locale>(LocalBridgeClazz, "getAvailableLocales", "()[Ljava/util/Locale;");
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#getDateTimeFormat(int,int,android.icu.util.ULocale)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="Android.Icu.Util.ULocale"/></param>
        /// <returns><see cref="Android.Icu.Text.DateFormat"/></returns>
        public Android.Icu.Text.DateFormat GetDateTimeFormat(int arg0, int arg1, Android.Icu.Util.ULocale arg2)
        {
            return IExecute<Android.Icu.Text.DateFormat>("getDateTimeFormat", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#getDateTimeFormat(int,int,java.util.Locale)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="Java.Util.Locale"/></param>
        /// <returns><see cref="Android.Icu.Text.DateFormat"/></returns>
        public Android.Icu.Text.DateFormat GetDateTimeFormat(int arg0, int arg1, Java.Util.Locale arg2)
        {
            return IExecute<Android.Icu.Text.DateFormat>("getDateTimeFormat", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#setWeekData(android.icu.util.Calendar.WeekData)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Util.Calendar.WeekData"/></param>
        /// <returns><see cref="Android.Icu.Util.Calendar"/></returns>
        public Android.Icu.Util.Calendar SetWeekData(Android.Icu.Util.Calendar.WeekData arg0)
        {
            return IExecuteWithSignature<Android.Icu.Util.Calendar>("setWeekData", "(Landroid/icu/util/Calendar$WeekData;)Landroid/icu/util/Calendar;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#getWeekData()"/>
        /// </summary>
        /// <returns><see cref="Android.Icu.Util.Calendar.WeekData"/></returns>
        public Android.Icu.Util.Calendar.WeekData GetWeekData()
        {
            return IExecuteWithSignature<Android.Icu.Util.Calendar.WeekData>("getWeekData", "()Landroid/icu/util/Calendar$WeekData;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#getTimeZone()"/>
        /// </summary>
        /// <returns><see cref="Android.Icu.Util.TimeZone"/></returns>
        public Android.Icu.Util.TimeZone GetTimeZone()
        {
            return IExecuteWithSignature<Android.Icu.Util.TimeZone>("getTimeZone", "()Landroid/icu/util/TimeZone;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#after(java.lang.Object)"/>
        /// </summary>
        /// <param name="arg0"><see cref="object"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool After(object arg0)
        {
            return IExecuteWithSignature<bool>("after", "(Ljava/lang/Object;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#before(java.lang.Object)"/>
        /// </summary>
        /// <param name="arg0"><see cref="object"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool Before(object arg0)
        {
            return IExecuteWithSignature<bool>("before", "(Ljava/lang/Object;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#isEquivalentTo(android.icu.util.Calendar)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Util.Calendar"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool IsEquivalentTo(Android.Icu.Util.Calendar arg0)
        {
            return IExecuteWithSignature<bool>("isEquivalentTo", "(Landroid/icu/util/Calendar;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#isLenient()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsLenient()
        {
            return IExecuteWithSignature<bool>("isLenient", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#isWeekend()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsWeekend()
        {
            return IExecuteWithSignature<bool>("isWeekend", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#isWeekend(java.util.Date)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Date"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool IsWeekend(Java.Util.Date arg0)
        {
            return IExecuteWithSignature<bool>("isWeekend", "(Ljava/util/Date;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#isSet(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool IsSet(int arg0)
        {
            return IExecuteWithSignature<bool>("isSet", "(I)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#get(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public int Get(int arg0)
        {
            return IExecuteWithSignature<int>("get", "(I)I", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#getFieldCount()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetFieldCount()
        {
            return IExecuteWithSignature<int>("getFieldCount", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#getGreatestMinimum(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public int GetGreatestMinimum(int arg0)
        {
            return IExecuteWithSignature<int>("getGreatestMinimum", "(I)I", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#getLeastMaximum(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public int GetLeastMaximum(int arg0)
        {
            return IExecuteWithSignature<int>("getLeastMaximum", "(I)I", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#getMaximum(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public int GetMaximum(int arg0)
        {
            return IExecuteWithSignature<int>("getMaximum", "(I)I", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#getMinimum(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public int GetMinimum(int arg0)
        {
            return IExecuteWithSignature<int>("getMinimum", "(I)I", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#getTime()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.Date"/></returns>
        public Java.Util.Date GetTime()
        {
            return IExecuteWithSignature<Java.Util.Date>("getTime", "()Ljava/util/Date;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#clear()"/>
        /// </summary>
        public void Clear()
        {
            IExecuteWithSignature("clear", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#clear(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void Clear(int arg0)
        {
            IExecuteWithSignature("clear", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#roll(int,boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="bool"/></param>
        public void Roll(int arg0, bool arg1)
        {
            IExecute("roll", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#set(int,int,int,int,int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <param name="arg3"><see cref="int"/></param>
        /// <param name="arg4"><see cref="int"/></param>
        /// <param name="arg5"><see cref="int"/></param>
        public void Set(int arg0, int arg1, int arg2, int arg3, int arg4, int arg5)
        {
            IExecute("set", arg0, arg1, arg2, arg3, arg4, arg5);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#set(int,int,int,int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <param name="arg3"><see cref="int"/></param>
        /// <param name="arg4"><see cref="int"/></param>
        public void Set(int arg0, int arg1, int arg2, int arg3, int arg4)
        {
            IExecute("set", arg0, arg1, arg2, arg3, arg4);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#set(int,int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        public void Set(int arg0, int arg1, int arg2)
        {
            IExecute("set", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#set(int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void Set(int arg0, int arg1)
        {
            IExecute("set", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#setTime(java.util.Date)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Date"/></param>
        public void SetTime(Java.Util.Date arg0)
        {
            IExecuteWithSignature("setTime", "(Ljava/util/Date;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#compareTo(android.icu.util.Calendar)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Util.Calendar"/></param>
        /// <returns><see cref="int"/></returns>
        public int CompareTo(Android.Icu.Util.Calendar arg0)
        {
            return IExecuteWithSignature<int>("compareTo", "(Landroid/icu/util/Calendar;)I", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#compareTo(java.lang.Object)"/>
        /// </summary>
        /// <param name="arg0"><see cref="object"/></param>
        /// <returns><see cref="int"/></returns>
        public int CompareTo(object arg0)
        {
            return IExecuteWithSignature<int>("compareTo", "(Ljava/lang/Object;)I", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#fieldDifference(java.util.Date,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Date"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public int FieldDifference(Java.Util.Date arg0, int arg1)
        {
            return IExecute<int>("fieldDifference", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#getActualMaximum(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public int GetActualMaximum(int arg0)
        {
            return IExecuteWithSignature<int>("getActualMaximum", "(I)I", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#getActualMinimum(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public int GetActualMinimum(int arg0)
        {
            return IExecuteWithSignature<int>("getActualMinimum", "(I)I", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#getFirstDayOfWeek()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetFirstDayOfWeek()
        {
            return IExecuteWithSignature<int>("getFirstDayOfWeek", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#getMinimalDaysInFirstWeek()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetMinimalDaysInFirstWeek()
        {
            return IExecuteWithSignature<int>("getMinimalDaysInFirstWeek", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#getRepeatedWallTimeOption()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetRepeatedWallTimeOption()
        {
            return IExecuteWithSignature<int>("getRepeatedWallTimeOption", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#getSkippedWallTimeOption()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetSkippedWallTimeOption()
        {
            return IExecuteWithSignature<int>("getSkippedWallTimeOption", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#getDisplayName(android.icu.util.ULocale)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Util.ULocale"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetDisplayName(Android.Icu.Util.ULocale arg0)
        {
            return IExecuteWithSignature<Java.Lang.String>("getDisplayName", "(Landroid/icu/util/ULocale;)Ljava/lang/String;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#getDisplayName(java.util.Locale)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Locale"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetDisplayName(Java.Util.Locale arg0)
        {
            return IExecuteWithSignature<Java.Lang.String>("getDisplayName", "(Ljava/util/Locale;)Ljava/lang/String;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#getType()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetType()
        {
            return IExecuteWithSignature<Java.Lang.String>("getType", "()Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#getTimeInMillis()"/>
        /// </summary>
        /// <returns><see cref="long"/></returns>
        public long GetTimeInMillis()
        {
            return IExecuteWithSignature<long>("getTimeInMillis", "()J");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#add(int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void Add(int arg0, int arg1)
        {
            IExecute("add", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#roll(int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void Roll(int arg0, int arg1)
        {
            IExecute("roll", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#setFirstDayOfWeek(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetFirstDayOfWeek(int arg0)
        {
            IExecuteWithSignature("setFirstDayOfWeek", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#setLenient(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetLenient(bool arg0)
        {
            IExecuteWithSignature("setLenient", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#setMinimalDaysInFirstWeek(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetMinimalDaysInFirstWeek(int arg0)
        {
            IExecuteWithSignature("setMinimalDaysInFirstWeek", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#setRepeatedWallTimeOption(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetRepeatedWallTimeOption(int arg0)
        {
            IExecuteWithSignature("setRepeatedWallTimeOption", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#setSkippedWallTimeOption(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetSkippedWallTimeOption(int arg0)
        {
            IExecuteWithSignature("setSkippedWallTimeOption", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#setTimeInMillis(long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        public void SetTimeInMillis(long arg0)
        {
            IExecuteWithSignature("setTimeInMillis", "(J)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.html#setTimeZone(android.icu.util.TimeZone)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Util.TimeZone"/></param>
        public void SetTimeZone(Android.Icu.Util.TimeZone arg0)
        {
            IExecuteWithSignature("setTimeZone", "(Landroid/icu/util/TimeZone;)V", arg0);
        }

        #endregion

        #region Nested classes
        #region WeekData
        public partial class WeekData
        {
            #region Constructors
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.WeekData.html#%3Cinit%3E(int,int,int,int,int,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            /// <param name="arg2"><see cref="int"/></param>
            /// <param name="arg3"><see cref="int"/></param>
            /// <param name="arg4"><see cref="int"/></param>
            /// <param name="arg5"><see cref="int"/></param>
            public WeekData(int arg0, int arg1, int arg2, int arg3, int arg4, int arg5)
                : base(arg0, arg1, arg2, arg3, arg4, arg5)
            {
            }

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.WeekData.html#firstDayOfWeek"/>
            /// </summary>
            public int firstDayOfWeek { get { if (!_firstDayOfWeekReady) { _firstDayOfWeekContent = IGetField<int>("firstDayOfWeek"); _firstDayOfWeekReady = true; } return _firstDayOfWeekContent; } }
            private int _firstDayOfWeekContent = default;
            private bool _firstDayOfWeekReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.WeekData.html#minimalDaysInFirstWeek"/>
            /// </summary>
            public int minimalDaysInFirstWeek { get { if (!_minimalDaysInFirstWeekReady) { _minimalDaysInFirstWeekContent = IGetField<int>("minimalDaysInFirstWeek"); _minimalDaysInFirstWeekReady = true; } return _minimalDaysInFirstWeekContent; } }
            private int _minimalDaysInFirstWeekContent = default;
            private bool _minimalDaysInFirstWeekReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.WeekData.html#weekendCease"/>
            /// </summary>
            public int weekendCease { get { if (!_weekendCeaseReady) { _weekendCeaseContent = IGetField<int>("weekendCease"); _weekendCeaseReady = true; } return _weekendCeaseContent; } }
            private int _weekendCeaseContent = default;
            private bool _weekendCeaseReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.WeekData.html#weekendCeaseMillis"/>
            /// </summary>
            public int weekendCeaseMillis { get { if (!_weekendCeaseMillisReady) { _weekendCeaseMillisContent = IGetField<int>("weekendCeaseMillis"); _weekendCeaseMillisReady = true; } return _weekendCeaseMillisContent; } }
            private int _weekendCeaseMillisContent = default;
            private bool _weekendCeaseMillisReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.WeekData.html#weekendOnset"/>
            /// </summary>
            public int weekendOnset { get { if (!_weekendOnsetReady) { _weekendOnsetContent = IGetField<int>("weekendOnset"); _weekendOnsetReady = true; } return _weekendOnsetContent; } }
            private int _weekendOnsetContent = default;
            private bool _weekendOnsetReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/util/Calendar.WeekData.html#weekendOnsetMillis"/>
            /// </summary>
            public int weekendOnsetMillis { get { if (!_weekendOnsetMillisReady) { _weekendOnsetMillisContent = IGetField<int>("weekendOnsetMillis"); _weekendOnsetMillisReady = true; } return _weekendOnsetMillisContent; } }
            private int _weekendOnsetMillisContent = default;
            private bool _weekendOnsetMillisReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}