/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.8.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Icu.Util
{
    #region MeasureUnit
    public partial class MeasureUnit
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#ACRE"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit ACRE { get { if (!_ACREReady) { _ACREContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "ACRE"); _ACREReady = true; } return _ACREContent; } }
        private static Android.Icu.Util.MeasureUnit _ACREContent = default;
        private static bool _ACREReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#ACRE_FOOT"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit ACRE_FOOT { get { if (!_ACRE_FOOTReady) { _ACRE_FOOTContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "ACRE_FOOT"); _ACRE_FOOTReady = true; } return _ACRE_FOOTContent; } }
        private static Android.Icu.Util.MeasureUnit _ACRE_FOOTContent = default;
        private static bool _ACRE_FOOTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#AMPERE"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit AMPERE { get { if (!_AMPEREReady) { _AMPEREContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "AMPERE"); _AMPEREReady = true; } return _AMPEREContent; } }
        private static Android.Icu.Util.MeasureUnit _AMPEREContent = default;
        private static bool _AMPEREReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#ARC_MINUTE"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit ARC_MINUTE { get { if (!_ARC_MINUTEReady) { _ARC_MINUTEContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "ARC_MINUTE"); _ARC_MINUTEReady = true; } return _ARC_MINUTEContent; } }
        private static Android.Icu.Util.MeasureUnit _ARC_MINUTEContent = default;
        private static bool _ARC_MINUTEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#ARC_SECOND"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit ARC_SECOND { get { if (!_ARC_SECONDReady) { _ARC_SECONDContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "ARC_SECOND"); _ARC_SECONDReady = true; } return _ARC_SECONDContent; } }
        private static Android.Icu.Util.MeasureUnit _ARC_SECONDContent = default;
        private static bool _ARC_SECONDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#ASTRONOMICAL_UNIT"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit ASTRONOMICAL_UNIT { get { if (!_ASTRONOMICAL_UNITReady) { _ASTRONOMICAL_UNITContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "ASTRONOMICAL_UNIT"); _ASTRONOMICAL_UNITReady = true; } return _ASTRONOMICAL_UNITContent; } }
        private static Android.Icu.Util.MeasureUnit _ASTRONOMICAL_UNITContent = default;
        private static bool _ASTRONOMICAL_UNITReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#ATMOSPHERE"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit ATMOSPHERE { get { if (!_ATMOSPHEREReady) { _ATMOSPHEREContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "ATMOSPHERE"); _ATMOSPHEREReady = true; } return _ATMOSPHEREContent; } }
        private static Android.Icu.Util.MeasureUnit _ATMOSPHEREContent = default;
        private static bool _ATMOSPHEREReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#BIT"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit BIT { get { if (!_BITReady) { _BITContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "BIT"); _BITReady = true; } return _BITContent; } }
        private static Android.Icu.Util.MeasureUnit _BITContent = default;
        private static bool _BITReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#BUSHEL"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit BUSHEL { get { if (!_BUSHELReady) { _BUSHELContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "BUSHEL"); _BUSHELReady = true; } return _BUSHELContent; } }
        private static Android.Icu.Util.MeasureUnit _BUSHELContent = default;
        private static bool _BUSHELReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#BYTE"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit BYTE { get { if (!_BYTEReady) { _BYTEContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "BYTE"); _BYTEReady = true; } return _BYTEContent; } }
        private static Android.Icu.Util.MeasureUnit _BYTEContent = default;
        private static bool _BYTEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#CALORIE"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit CALORIE { get { if (!_CALORIEReady) { _CALORIEContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "CALORIE"); _CALORIEReady = true; } return _CALORIEContent; } }
        private static Android.Icu.Util.MeasureUnit _CALORIEContent = default;
        private static bool _CALORIEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#CANDELA"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit CANDELA { get { if (!_CANDELAReady) { _CANDELAContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "CANDELA"); _CANDELAReady = true; } return _CANDELAContent; } }
        private static Android.Icu.Util.MeasureUnit _CANDELAContent = default;
        private static bool _CANDELAReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#CARAT"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit CARAT { get { if (!_CARATReady) { _CARATContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "CARAT"); _CARATReady = true; } return _CARATContent; } }
        private static Android.Icu.Util.MeasureUnit _CARATContent = default;
        private static bool _CARATReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#CELSIUS"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit CELSIUS { get { if (!_CELSIUSReady) { _CELSIUSContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "CELSIUS"); _CELSIUSReady = true; } return _CELSIUSContent; } }
        private static Android.Icu.Util.MeasureUnit _CELSIUSContent = default;
        private static bool _CELSIUSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#CENTILITER"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit CENTILITER { get { if (!_CENTILITERReady) { _CENTILITERContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "CENTILITER"); _CENTILITERReady = true; } return _CENTILITERContent; } }
        private static Android.Icu.Util.MeasureUnit _CENTILITERContent = default;
        private static bool _CENTILITERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#CENTIMETER"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit CENTIMETER { get { if (!_CENTIMETERReady) { _CENTIMETERContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "CENTIMETER"); _CENTIMETERReady = true; } return _CENTIMETERContent; } }
        private static Android.Icu.Util.MeasureUnit _CENTIMETERContent = default;
        private static bool _CENTIMETERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#CENTURY"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit CENTURY { get { if (!_CENTURYReady) { _CENTURYContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "CENTURY"); _CENTURYReady = true; } return _CENTURYContent; } }
        private static Android.Icu.Util.MeasureUnit _CENTURYContent = default;
        private static bool _CENTURYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#CUBIC_CENTIMETER"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit CUBIC_CENTIMETER { get { if (!_CUBIC_CENTIMETERReady) { _CUBIC_CENTIMETERContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "CUBIC_CENTIMETER"); _CUBIC_CENTIMETERReady = true; } return _CUBIC_CENTIMETERContent; } }
        private static Android.Icu.Util.MeasureUnit _CUBIC_CENTIMETERContent = default;
        private static bool _CUBIC_CENTIMETERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#CUBIC_FOOT"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit CUBIC_FOOT { get { if (!_CUBIC_FOOTReady) { _CUBIC_FOOTContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "CUBIC_FOOT"); _CUBIC_FOOTReady = true; } return _CUBIC_FOOTContent; } }
        private static Android.Icu.Util.MeasureUnit _CUBIC_FOOTContent = default;
        private static bool _CUBIC_FOOTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#CUBIC_INCH"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit CUBIC_INCH { get { if (!_CUBIC_INCHReady) { _CUBIC_INCHContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "CUBIC_INCH"); _CUBIC_INCHReady = true; } return _CUBIC_INCHContent; } }
        private static Android.Icu.Util.MeasureUnit _CUBIC_INCHContent = default;
        private static bool _CUBIC_INCHReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#CUBIC_KILOMETER"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit CUBIC_KILOMETER { get { if (!_CUBIC_KILOMETERReady) { _CUBIC_KILOMETERContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "CUBIC_KILOMETER"); _CUBIC_KILOMETERReady = true; } return _CUBIC_KILOMETERContent; } }
        private static Android.Icu.Util.MeasureUnit _CUBIC_KILOMETERContent = default;
        private static bool _CUBIC_KILOMETERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#CUBIC_METER"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit CUBIC_METER { get { if (!_CUBIC_METERReady) { _CUBIC_METERContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "CUBIC_METER"); _CUBIC_METERReady = true; } return _CUBIC_METERContent; } }
        private static Android.Icu.Util.MeasureUnit _CUBIC_METERContent = default;
        private static bool _CUBIC_METERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#CUBIC_MILE"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit CUBIC_MILE { get { if (!_CUBIC_MILEReady) { _CUBIC_MILEContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "CUBIC_MILE"); _CUBIC_MILEReady = true; } return _CUBIC_MILEContent; } }
        private static Android.Icu.Util.MeasureUnit _CUBIC_MILEContent = default;
        private static bool _CUBIC_MILEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#CUBIC_YARD"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit CUBIC_YARD { get { if (!_CUBIC_YARDReady) { _CUBIC_YARDContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "CUBIC_YARD"); _CUBIC_YARDReady = true; } return _CUBIC_YARDContent; } }
        private static Android.Icu.Util.MeasureUnit _CUBIC_YARDContent = default;
        private static bool _CUBIC_YARDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#CUP"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit CUP { get { if (!_CUPReady) { _CUPContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "CUP"); _CUPReady = true; } return _CUPContent; } }
        private static Android.Icu.Util.MeasureUnit _CUPContent = default;
        private static bool _CUPReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#CUP_METRIC"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit CUP_METRIC { get { if (!_CUP_METRICReady) { _CUP_METRICContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "CUP_METRIC"); _CUP_METRICReady = true; } return _CUP_METRICContent; } }
        private static Android.Icu.Util.MeasureUnit _CUP_METRICContent = default;
        private static bool _CUP_METRICReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#DECADE"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit DECADE { get { if (!_DECADEReady) { _DECADEContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "DECADE"); _DECADEReady = true; } return _DECADEContent; } }
        private static Android.Icu.Util.MeasureUnit _DECADEContent = default;
        private static bool _DECADEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#DECILITER"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit DECILITER { get { if (!_DECILITERReady) { _DECILITERContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "DECILITER"); _DECILITERReady = true; } return _DECILITERContent; } }
        private static Android.Icu.Util.MeasureUnit _DECILITERContent = default;
        private static bool _DECILITERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#DECIMETER"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit DECIMETER { get { if (!_DECIMETERReady) { _DECIMETERContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "DECIMETER"); _DECIMETERReady = true; } return _DECIMETERContent; } }
        private static Android.Icu.Util.MeasureUnit _DECIMETERContent = default;
        private static bool _DECIMETERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#DEGREE"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit DEGREE { get { if (!_DEGREEReady) { _DEGREEContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "DEGREE"); _DEGREEReady = true; } return _DEGREEContent; } }
        private static Android.Icu.Util.MeasureUnit _DEGREEContent = default;
        private static bool _DEGREEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#DOT"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit DOT { get { if (!_DOTReady) { _DOTContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "DOT"); _DOTReady = true; } return _DOTContent; } }
        private static Android.Icu.Util.MeasureUnit _DOTContent = default;
        private static bool _DOTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#DOT_PER_CENTIMETER"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit DOT_PER_CENTIMETER { get { if (!_DOT_PER_CENTIMETERReady) { _DOT_PER_CENTIMETERContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "DOT_PER_CENTIMETER"); _DOT_PER_CENTIMETERReady = true; } return _DOT_PER_CENTIMETERContent; } }
        private static Android.Icu.Util.MeasureUnit _DOT_PER_CENTIMETERContent = default;
        private static bool _DOT_PER_CENTIMETERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#DOT_PER_INCH"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit DOT_PER_INCH { get { if (!_DOT_PER_INCHReady) { _DOT_PER_INCHContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "DOT_PER_INCH"); _DOT_PER_INCHReady = true; } return _DOT_PER_INCHContent; } }
        private static Android.Icu.Util.MeasureUnit _DOT_PER_INCHContent = default;
        private static bool _DOT_PER_INCHReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#EM"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit EM { get { if (!_EMReady) { _EMContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "EM"); _EMReady = true; } return _EMContent; } }
        private static Android.Icu.Util.MeasureUnit _EMContent = default;
        private static bool _EMReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#FAHRENHEIT"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit FAHRENHEIT { get { if (!_FAHRENHEITReady) { _FAHRENHEITContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "FAHRENHEIT"); _FAHRENHEITReady = true; } return _FAHRENHEITContent; } }
        private static Android.Icu.Util.MeasureUnit _FAHRENHEITContent = default;
        private static bool _FAHRENHEITReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#FATHOM"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit FATHOM { get { if (!_FATHOMReady) { _FATHOMContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "FATHOM"); _FATHOMReady = true; } return _FATHOMContent; } }
        private static Android.Icu.Util.MeasureUnit _FATHOMContent = default;
        private static bool _FATHOMReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#FLUID_OUNCE"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit FLUID_OUNCE { get { if (!_FLUID_OUNCEReady) { _FLUID_OUNCEContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "FLUID_OUNCE"); _FLUID_OUNCEReady = true; } return _FLUID_OUNCEContent; } }
        private static Android.Icu.Util.MeasureUnit _FLUID_OUNCEContent = default;
        private static bool _FLUID_OUNCEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#FOODCALORIE"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit FOODCALORIE { get { if (!_FOODCALORIEReady) { _FOODCALORIEContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "FOODCALORIE"); _FOODCALORIEReady = true; } return _FOODCALORIEContent; } }
        private static Android.Icu.Util.MeasureUnit _FOODCALORIEContent = default;
        private static bool _FOODCALORIEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#FOOT"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit FOOT { get { if (!_FOOTReady) { _FOOTContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "FOOT"); _FOOTReady = true; } return _FOOTContent; } }
        private static Android.Icu.Util.MeasureUnit _FOOTContent = default;
        private static bool _FOOTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#FURLONG"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit FURLONG { get { if (!_FURLONGReady) { _FURLONGContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "FURLONG"); _FURLONGReady = true; } return _FURLONGContent; } }
        private static Android.Icu.Util.MeasureUnit _FURLONGContent = default;
        private static bool _FURLONGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#G_FORCE"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit G_FORCE { get { if (!_G_FORCEReady) { _G_FORCEContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "G_FORCE"); _G_FORCEReady = true; } return _G_FORCEContent; } }
        private static Android.Icu.Util.MeasureUnit _G_FORCEContent = default;
        private static bool _G_FORCEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#GALLON"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit GALLON { get { if (!_GALLONReady) { _GALLONContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "GALLON"); _GALLONReady = true; } return _GALLONContent; } }
        private static Android.Icu.Util.MeasureUnit _GALLONContent = default;
        private static bool _GALLONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#GALLON_IMPERIAL"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit GALLON_IMPERIAL { get { if (!_GALLON_IMPERIALReady) { _GALLON_IMPERIALContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "GALLON_IMPERIAL"); _GALLON_IMPERIALReady = true; } return _GALLON_IMPERIALContent; } }
        private static Android.Icu.Util.MeasureUnit _GALLON_IMPERIALContent = default;
        private static bool _GALLON_IMPERIALReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#GENERIC_TEMPERATURE"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit GENERIC_TEMPERATURE { get { if (!_GENERIC_TEMPERATUREReady) { _GENERIC_TEMPERATUREContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "GENERIC_TEMPERATURE"); _GENERIC_TEMPERATUREReady = true; } return _GENERIC_TEMPERATUREContent; } }
        private static Android.Icu.Util.MeasureUnit _GENERIC_TEMPERATUREContent = default;
        private static bool _GENERIC_TEMPERATUREReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#GIGABIT"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit GIGABIT { get { if (!_GIGABITReady) { _GIGABITContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "GIGABIT"); _GIGABITReady = true; } return _GIGABITContent; } }
        private static Android.Icu.Util.MeasureUnit _GIGABITContent = default;
        private static bool _GIGABITReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#GIGABYTE"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit GIGABYTE { get { if (!_GIGABYTEReady) { _GIGABYTEContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "GIGABYTE"); _GIGABYTEReady = true; } return _GIGABYTEContent; } }
        private static Android.Icu.Util.MeasureUnit _GIGABYTEContent = default;
        private static bool _GIGABYTEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#GIGAHERTZ"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit GIGAHERTZ { get { if (!_GIGAHERTZReady) { _GIGAHERTZContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "GIGAHERTZ"); _GIGAHERTZReady = true; } return _GIGAHERTZContent; } }
        private static Android.Icu.Util.MeasureUnit _GIGAHERTZContent = default;
        private static bool _GIGAHERTZReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#GIGAWATT"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit GIGAWATT { get { if (!_GIGAWATTReady) { _GIGAWATTContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "GIGAWATT"); _GIGAWATTReady = true; } return _GIGAWATTContent; } }
        private static Android.Icu.Util.MeasureUnit _GIGAWATTContent = default;
        private static bool _GIGAWATTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#GRAM"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit GRAM { get { if (!_GRAMReady) { _GRAMContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "GRAM"); _GRAMReady = true; } return _GRAMContent; } }
        private static Android.Icu.Util.MeasureUnit _GRAMContent = default;
        private static bool _GRAMReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#HECTARE"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit HECTARE { get { if (!_HECTAREReady) { _HECTAREContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "HECTARE"); _HECTAREReady = true; } return _HECTAREContent; } }
        private static Android.Icu.Util.MeasureUnit _HECTAREContent = default;
        private static bool _HECTAREReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#HECTOLITER"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit HECTOLITER { get { if (!_HECTOLITERReady) { _HECTOLITERContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "HECTOLITER"); _HECTOLITERReady = true; } return _HECTOLITERContent; } }
        private static Android.Icu.Util.MeasureUnit _HECTOLITERContent = default;
        private static bool _HECTOLITERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#HECTOPASCAL"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit HECTOPASCAL { get { if (!_HECTOPASCALReady) { _HECTOPASCALContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "HECTOPASCAL"); _HECTOPASCALReady = true; } return _HECTOPASCALContent; } }
        private static Android.Icu.Util.MeasureUnit _HECTOPASCALContent = default;
        private static bool _HECTOPASCALReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#HERTZ"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit HERTZ { get { if (!_HERTZReady) { _HERTZContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "HERTZ"); _HERTZReady = true; } return _HERTZContent; } }
        private static Android.Icu.Util.MeasureUnit _HERTZContent = default;
        private static bool _HERTZReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#HORSEPOWER"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit HORSEPOWER { get { if (!_HORSEPOWERReady) { _HORSEPOWERContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "HORSEPOWER"); _HORSEPOWERReady = true; } return _HORSEPOWERContent; } }
        private static Android.Icu.Util.MeasureUnit _HORSEPOWERContent = default;
        private static bool _HORSEPOWERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#INCH"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit INCH { get { if (!_INCHReady) { _INCHContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "INCH"); _INCHReady = true; } return _INCHContent; } }
        private static Android.Icu.Util.MeasureUnit _INCHContent = default;
        private static bool _INCHReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#INCH_HG"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit INCH_HG { get { if (!_INCH_HGReady) { _INCH_HGContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "INCH_HG"); _INCH_HGReady = true; } return _INCH_HGContent; } }
        private static Android.Icu.Util.MeasureUnit _INCH_HGContent = default;
        private static bool _INCH_HGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#ITEM"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit ITEM { get { if (!_ITEMReady) { _ITEMContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "ITEM"); _ITEMReady = true; } return _ITEMContent; } }
        private static Android.Icu.Util.MeasureUnit _ITEMContent = default;
        private static bool _ITEMReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#JOULE"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit JOULE { get { if (!_JOULEReady) { _JOULEContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "JOULE"); _JOULEReady = true; } return _JOULEContent; } }
        private static Android.Icu.Util.MeasureUnit _JOULEContent = default;
        private static bool _JOULEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#KARAT"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit KARAT { get { if (!_KARATReady) { _KARATContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "KARAT"); _KARATReady = true; } return _KARATContent; } }
        private static Android.Icu.Util.MeasureUnit _KARATContent = default;
        private static bool _KARATReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#KELVIN"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit KELVIN { get { if (!_KELVINReady) { _KELVINContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "KELVIN"); _KELVINReady = true; } return _KELVINContent; } }
        private static Android.Icu.Util.MeasureUnit _KELVINContent = default;
        private static bool _KELVINReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#KILOBIT"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit KILOBIT { get { if (!_KILOBITReady) { _KILOBITContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "KILOBIT"); _KILOBITReady = true; } return _KILOBITContent; } }
        private static Android.Icu.Util.MeasureUnit _KILOBITContent = default;
        private static bool _KILOBITReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#KILOBYTE"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit KILOBYTE { get { if (!_KILOBYTEReady) { _KILOBYTEContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "KILOBYTE"); _KILOBYTEReady = true; } return _KILOBYTEContent; } }
        private static Android.Icu.Util.MeasureUnit _KILOBYTEContent = default;
        private static bool _KILOBYTEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#KILOCALORIE"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit KILOCALORIE { get { if (!_KILOCALORIEReady) { _KILOCALORIEContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "KILOCALORIE"); _KILOCALORIEReady = true; } return _KILOCALORIEContent; } }
        private static Android.Icu.Util.MeasureUnit _KILOCALORIEContent = default;
        private static bool _KILOCALORIEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#KILOGRAM"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit KILOGRAM { get { if (!_KILOGRAMReady) { _KILOGRAMContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "KILOGRAM"); _KILOGRAMReady = true; } return _KILOGRAMContent; } }
        private static Android.Icu.Util.MeasureUnit _KILOGRAMContent = default;
        private static bool _KILOGRAMReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#KILOHERTZ"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit KILOHERTZ { get { if (!_KILOHERTZReady) { _KILOHERTZContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "KILOHERTZ"); _KILOHERTZReady = true; } return _KILOHERTZContent; } }
        private static Android.Icu.Util.MeasureUnit _KILOHERTZContent = default;
        private static bool _KILOHERTZReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#KILOJOULE"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit KILOJOULE { get { if (!_KILOJOULEReady) { _KILOJOULEContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "KILOJOULE"); _KILOJOULEReady = true; } return _KILOJOULEContent; } }
        private static Android.Icu.Util.MeasureUnit _KILOJOULEContent = default;
        private static bool _KILOJOULEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#KILOMETER"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit KILOMETER { get { if (!_KILOMETERReady) { _KILOMETERContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "KILOMETER"); _KILOMETERReady = true; } return _KILOMETERContent; } }
        private static Android.Icu.Util.MeasureUnit _KILOMETERContent = default;
        private static bool _KILOMETERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#KILOMETER_PER_HOUR"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit KILOMETER_PER_HOUR { get { if (!_KILOMETER_PER_HOURReady) { _KILOMETER_PER_HOURContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "KILOMETER_PER_HOUR"); _KILOMETER_PER_HOURReady = true; } return _KILOMETER_PER_HOURContent; } }
        private static Android.Icu.Util.MeasureUnit _KILOMETER_PER_HOURContent = default;
        private static bool _KILOMETER_PER_HOURReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#KILOWATT"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit KILOWATT { get { if (!_KILOWATTReady) { _KILOWATTContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "KILOWATT"); _KILOWATTReady = true; } return _KILOWATTContent; } }
        private static Android.Icu.Util.MeasureUnit _KILOWATTContent = default;
        private static bool _KILOWATTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#KILOWATT_HOUR"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit KILOWATT_HOUR { get { if (!_KILOWATT_HOURReady) { _KILOWATT_HOURContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "KILOWATT_HOUR"); _KILOWATT_HOURReady = true; } return _KILOWATT_HOURContent; } }
        private static Android.Icu.Util.MeasureUnit _KILOWATT_HOURContent = default;
        private static bool _KILOWATT_HOURReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#KILOWATT_HOUR_PER_100_KILOMETER"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit KILOWATT_HOUR_PER_100_KILOMETER { get { if (!_KILOWATT_HOUR_PER_100_KILOMETERReady) { _KILOWATT_HOUR_PER_100_KILOMETERContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "KILOWATT_HOUR_PER_100_KILOMETER"); _KILOWATT_HOUR_PER_100_KILOMETERReady = true; } return _KILOWATT_HOUR_PER_100_KILOMETERContent; } }
        private static Android.Icu.Util.MeasureUnit _KILOWATT_HOUR_PER_100_KILOMETERContent = default;
        private static bool _KILOWATT_HOUR_PER_100_KILOMETERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#KNOT"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit KNOT { get { if (!_KNOTReady) { _KNOTContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "KNOT"); _KNOTReady = true; } return _KNOTContent; } }
        private static Android.Icu.Util.MeasureUnit _KNOTContent = default;
        private static bool _KNOTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#LIGHT_YEAR"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit LIGHT_YEAR { get { if (!_LIGHT_YEARReady) { _LIGHT_YEARContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "LIGHT_YEAR"); _LIGHT_YEARReady = true; } return _LIGHT_YEARContent; } }
        private static Android.Icu.Util.MeasureUnit _LIGHT_YEARContent = default;
        private static bool _LIGHT_YEARReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#LITER"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit LITER { get { if (!_LITERReady) { _LITERContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "LITER"); _LITERReady = true; } return _LITERContent; } }
        private static Android.Icu.Util.MeasureUnit _LITERContent = default;
        private static bool _LITERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#LITER_PER_100KILOMETERS"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit LITER_PER_100KILOMETERS { get { if (!_LITER_PER_100KILOMETERSReady) { _LITER_PER_100KILOMETERSContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "LITER_PER_100KILOMETERS"); _LITER_PER_100KILOMETERSReady = true; } return _LITER_PER_100KILOMETERSContent; } }
        private static Android.Icu.Util.MeasureUnit _LITER_PER_100KILOMETERSContent = default;
        private static bool _LITER_PER_100KILOMETERSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#LITER_PER_KILOMETER"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit LITER_PER_KILOMETER { get { if (!_LITER_PER_KILOMETERReady) { _LITER_PER_KILOMETERContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "LITER_PER_KILOMETER"); _LITER_PER_KILOMETERReady = true; } return _LITER_PER_KILOMETERContent; } }
        private static Android.Icu.Util.MeasureUnit _LITER_PER_KILOMETERContent = default;
        private static bool _LITER_PER_KILOMETERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#LUMEN"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit LUMEN { get { if (!_LUMENReady) { _LUMENContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "LUMEN"); _LUMENReady = true; } return _LUMENContent; } }
        private static Android.Icu.Util.MeasureUnit _LUMENContent = default;
        private static bool _LUMENReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#LUX"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit LUX { get { if (!_LUXReady) { _LUXContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "LUX"); _LUXReady = true; } return _LUXContent; } }
        private static Android.Icu.Util.MeasureUnit _LUXContent = default;
        private static bool _LUXReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#MEGABIT"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit MEGABIT { get { if (!_MEGABITReady) { _MEGABITContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "MEGABIT"); _MEGABITReady = true; } return _MEGABITContent; } }
        private static Android.Icu.Util.MeasureUnit _MEGABITContent = default;
        private static bool _MEGABITReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#MEGABYTE"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit MEGABYTE { get { if (!_MEGABYTEReady) { _MEGABYTEContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "MEGABYTE"); _MEGABYTEReady = true; } return _MEGABYTEContent; } }
        private static Android.Icu.Util.MeasureUnit _MEGABYTEContent = default;
        private static bool _MEGABYTEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#MEGAHERTZ"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit MEGAHERTZ { get { if (!_MEGAHERTZReady) { _MEGAHERTZContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "MEGAHERTZ"); _MEGAHERTZReady = true; } return _MEGAHERTZContent; } }
        private static Android.Icu.Util.MeasureUnit _MEGAHERTZContent = default;
        private static bool _MEGAHERTZReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#MEGALITER"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit MEGALITER { get { if (!_MEGALITERReady) { _MEGALITERContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "MEGALITER"); _MEGALITERReady = true; } return _MEGALITERContent; } }
        private static Android.Icu.Util.MeasureUnit _MEGALITERContent = default;
        private static bool _MEGALITERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#MEGAPIXEL"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit MEGAPIXEL { get { if (!_MEGAPIXELReady) { _MEGAPIXELContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "MEGAPIXEL"); _MEGAPIXELReady = true; } return _MEGAPIXELContent; } }
        private static Android.Icu.Util.MeasureUnit _MEGAPIXELContent = default;
        private static bool _MEGAPIXELReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#MEGAWATT"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit MEGAWATT { get { if (!_MEGAWATTReady) { _MEGAWATTContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "MEGAWATT"); _MEGAWATTReady = true; } return _MEGAWATTContent; } }
        private static Android.Icu.Util.MeasureUnit _MEGAWATTContent = default;
        private static bool _MEGAWATTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#METER"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit METER { get { if (!_METERReady) { _METERContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "METER"); _METERReady = true; } return _METERContent; } }
        private static Android.Icu.Util.MeasureUnit _METERContent = default;
        private static bool _METERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#METER_PER_SECOND"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit METER_PER_SECOND { get { if (!_METER_PER_SECONDReady) { _METER_PER_SECONDContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "METER_PER_SECOND"); _METER_PER_SECONDReady = true; } return _METER_PER_SECONDContent; } }
        private static Android.Icu.Util.MeasureUnit _METER_PER_SECONDContent = default;
        private static bool _METER_PER_SECONDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#METER_PER_SECOND_SQUARED"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit METER_PER_SECOND_SQUARED { get { if (!_METER_PER_SECOND_SQUAREDReady) { _METER_PER_SECOND_SQUAREDContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "METER_PER_SECOND_SQUARED"); _METER_PER_SECOND_SQUAREDReady = true; } return _METER_PER_SECOND_SQUAREDContent; } }
        private static Android.Icu.Util.MeasureUnit _METER_PER_SECOND_SQUAREDContent = default;
        private static bool _METER_PER_SECOND_SQUAREDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#METRIC_TON"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit METRIC_TON { get { if (!_METRIC_TONReady) { _METRIC_TONContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "METRIC_TON"); _METRIC_TONReady = true; } return _METRIC_TONContent; } }
        private static Android.Icu.Util.MeasureUnit _METRIC_TONContent = default;
        private static bool _METRIC_TONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#MICROGRAM"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit MICROGRAM { get { if (!_MICROGRAMReady) { _MICROGRAMContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "MICROGRAM"); _MICROGRAMReady = true; } return _MICROGRAMContent; } }
        private static Android.Icu.Util.MeasureUnit _MICROGRAMContent = default;
        private static bool _MICROGRAMReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#MICROMETER"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit MICROMETER { get { if (!_MICROMETERReady) { _MICROMETERContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "MICROMETER"); _MICROMETERReady = true; } return _MICROMETERContent; } }
        private static Android.Icu.Util.MeasureUnit _MICROMETERContent = default;
        private static bool _MICROMETERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#MICROSECOND"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit MICROSECOND { get { if (!_MICROSECONDReady) { _MICROSECONDContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "MICROSECOND"); _MICROSECONDReady = true; } return _MICROSECONDContent; } }
        private static Android.Icu.Util.MeasureUnit _MICROSECONDContent = default;
        private static bool _MICROSECONDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#MILE"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit MILE { get { if (!_MILEReady) { _MILEContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "MILE"); _MILEReady = true; } return _MILEContent; } }
        private static Android.Icu.Util.MeasureUnit _MILEContent = default;
        private static bool _MILEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#MILE_PER_GALLON"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit MILE_PER_GALLON { get { if (!_MILE_PER_GALLONReady) { _MILE_PER_GALLONContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "MILE_PER_GALLON"); _MILE_PER_GALLONReady = true; } return _MILE_PER_GALLONContent; } }
        private static Android.Icu.Util.MeasureUnit _MILE_PER_GALLONContent = default;
        private static bool _MILE_PER_GALLONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#MILE_PER_GALLON_IMPERIAL"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit MILE_PER_GALLON_IMPERIAL { get { if (!_MILE_PER_GALLON_IMPERIALReady) { _MILE_PER_GALLON_IMPERIALContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "MILE_PER_GALLON_IMPERIAL"); _MILE_PER_GALLON_IMPERIALReady = true; } return _MILE_PER_GALLON_IMPERIALContent; } }
        private static Android.Icu.Util.MeasureUnit _MILE_PER_GALLON_IMPERIALContent = default;
        private static bool _MILE_PER_GALLON_IMPERIALReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#MILE_PER_HOUR"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit MILE_PER_HOUR { get { if (!_MILE_PER_HOURReady) { _MILE_PER_HOURContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "MILE_PER_HOUR"); _MILE_PER_HOURReady = true; } return _MILE_PER_HOURContent; } }
        private static Android.Icu.Util.MeasureUnit _MILE_PER_HOURContent = default;
        private static bool _MILE_PER_HOURReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#MILE_SCANDINAVIAN"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit MILE_SCANDINAVIAN { get { if (!_MILE_SCANDINAVIANReady) { _MILE_SCANDINAVIANContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "MILE_SCANDINAVIAN"); _MILE_SCANDINAVIANReady = true; } return _MILE_SCANDINAVIANContent; } }
        private static Android.Icu.Util.MeasureUnit _MILE_SCANDINAVIANContent = default;
        private static bool _MILE_SCANDINAVIANReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#MILLIAMPERE"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit MILLIAMPERE { get { if (!_MILLIAMPEREReady) { _MILLIAMPEREContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "MILLIAMPERE"); _MILLIAMPEREReady = true; } return _MILLIAMPEREContent; } }
        private static Android.Icu.Util.MeasureUnit _MILLIAMPEREContent = default;
        private static bool _MILLIAMPEREReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#MILLIBAR"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit MILLIBAR { get { if (!_MILLIBARReady) { _MILLIBARContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "MILLIBAR"); _MILLIBARReady = true; } return _MILLIBARContent; } }
        private static Android.Icu.Util.MeasureUnit _MILLIBARContent = default;
        private static bool _MILLIBARReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#MILLIGRAM"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit MILLIGRAM { get { if (!_MILLIGRAMReady) { _MILLIGRAMContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "MILLIGRAM"); _MILLIGRAMReady = true; } return _MILLIGRAMContent; } }
        private static Android.Icu.Util.MeasureUnit _MILLIGRAMContent = default;
        private static bool _MILLIGRAMReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#MILLIGRAM_OFGLUCOSE_PER_DECILITER"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit MILLIGRAM_OFGLUCOSE_PER_DECILITER { get { if (!_MILLIGRAM_OFGLUCOSE_PER_DECILITERReady) { _MILLIGRAM_OFGLUCOSE_PER_DECILITERContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "MILLIGRAM_OFGLUCOSE_PER_DECILITER"); _MILLIGRAM_OFGLUCOSE_PER_DECILITERReady = true; } return _MILLIGRAM_OFGLUCOSE_PER_DECILITERContent; } }
        private static Android.Icu.Util.MeasureUnit _MILLIGRAM_OFGLUCOSE_PER_DECILITERContent = default;
        private static bool _MILLIGRAM_OFGLUCOSE_PER_DECILITERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#MILLIGRAM_PER_DECILITER"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit MILLIGRAM_PER_DECILITER { get { if (!_MILLIGRAM_PER_DECILITERReady) { _MILLIGRAM_PER_DECILITERContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "MILLIGRAM_PER_DECILITER"); _MILLIGRAM_PER_DECILITERReady = true; } return _MILLIGRAM_PER_DECILITERContent; } }
        private static Android.Icu.Util.MeasureUnit _MILLIGRAM_PER_DECILITERContent = default;
        private static bool _MILLIGRAM_PER_DECILITERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#MILLILITER"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit MILLILITER { get { if (!_MILLILITERReady) { _MILLILITERContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "MILLILITER"); _MILLILITERReady = true; } return _MILLILITERContent; } }
        private static Android.Icu.Util.MeasureUnit _MILLILITERContent = default;
        private static bool _MILLILITERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#MILLIMETER"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit MILLIMETER { get { if (!_MILLIMETERReady) { _MILLIMETERContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "MILLIMETER"); _MILLIMETERReady = true; } return _MILLIMETERContent; } }
        private static Android.Icu.Util.MeasureUnit _MILLIMETERContent = default;
        private static bool _MILLIMETERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#MILLIMETER_OF_MERCURY"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit MILLIMETER_OF_MERCURY { get { if (!_MILLIMETER_OF_MERCURYReady) { _MILLIMETER_OF_MERCURYContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "MILLIMETER_OF_MERCURY"); _MILLIMETER_OF_MERCURYReady = true; } return _MILLIMETER_OF_MERCURYContent; } }
        private static Android.Icu.Util.MeasureUnit _MILLIMETER_OF_MERCURYContent = default;
        private static bool _MILLIMETER_OF_MERCURYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#MILLIMOLE_PER_LITER"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit MILLIMOLE_PER_LITER { get { if (!_MILLIMOLE_PER_LITERReady) { _MILLIMOLE_PER_LITERContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "MILLIMOLE_PER_LITER"); _MILLIMOLE_PER_LITERReady = true; } return _MILLIMOLE_PER_LITERContent; } }
        private static Android.Icu.Util.MeasureUnit _MILLIMOLE_PER_LITERContent = default;
        private static bool _MILLIMOLE_PER_LITERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#MILLISECOND"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit MILLISECOND { get { if (!_MILLISECONDReady) { _MILLISECONDContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "MILLISECOND"); _MILLISECONDReady = true; } return _MILLISECONDContent; } }
        private static Android.Icu.Util.MeasureUnit _MILLISECONDContent = default;
        private static bool _MILLISECONDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#MILLIWATT"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit MILLIWATT { get { if (!_MILLIWATTReady) { _MILLIWATTContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "MILLIWATT"); _MILLIWATTReady = true; } return _MILLIWATTContent; } }
        private static Android.Icu.Util.MeasureUnit _MILLIWATTContent = default;
        private static bool _MILLIWATTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#NANOMETER"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit NANOMETER { get { if (!_NANOMETERReady) { _NANOMETERContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "NANOMETER"); _NANOMETERReady = true; } return _NANOMETERContent; } }
        private static Android.Icu.Util.MeasureUnit _NANOMETERContent = default;
        private static bool _NANOMETERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#NANOSECOND"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit NANOSECOND { get { if (!_NANOSECONDReady) { _NANOSECONDContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "NANOSECOND"); _NANOSECONDReady = true; } return _NANOSECONDContent; } }
        private static Android.Icu.Util.MeasureUnit _NANOSECONDContent = default;
        private static bool _NANOSECONDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#NAUTICAL_MILE"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit NAUTICAL_MILE { get { if (!_NAUTICAL_MILEReady) { _NAUTICAL_MILEContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "NAUTICAL_MILE"); _NAUTICAL_MILEReady = true; } return _NAUTICAL_MILEContent; } }
        private static Android.Icu.Util.MeasureUnit _NAUTICAL_MILEContent = default;
        private static bool _NAUTICAL_MILEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#OHM"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit OHM { get { if (!_OHMReady) { _OHMContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "OHM"); _OHMReady = true; } return _OHMContent; } }
        private static Android.Icu.Util.MeasureUnit _OHMContent = default;
        private static bool _OHMReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#OUNCE"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit OUNCE { get { if (!_OUNCEReady) { _OUNCEContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "OUNCE"); _OUNCEReady = true; } return _OUNCEContent; } }
        private static Android.Icu.Util.MeasureUnit _OUNCEContent = default;
        private static bool _OUNCEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#OUNCE_TROY"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit OUNCE_TROY { get { if (!_OUNCE_TROYReady) { _OUNCE_TROYContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "OUNCE_TROY"); _OUNCE_TROYReady = true; } return _OUNCE_TROYContent; } }
        private static Android.Icu.Util.MeasureUnit _OUNCE_TROYContent = default;
        private static bool _OUNCE_TROYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#PARSEC"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit PARSEC { get { if (!_PARSECReady) { _PARSECContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "PARSEC"); _PARSECReady = true; } return _PARSECContent; } }
        private static Android.Icu.Util.MeasureUnit _PARSECContent = default;
        private static bool _PARSECReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#PART_PER_MILLION"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit PART_PER_MILLION { get { if (!_PART_PER_MILLIONReady) { _PART_PER_MILLIONContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "PART_PER_MILLION"); _PART_PER_MILLIONReady = true; } return _PART_PER_MILLIONContent; } }
        private static Android.Icu.Util.MeasureUnit _PART_PER_MILLIONContent = default;
        private static bool _PART_PER_MILLIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#PERCENT"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit PERCENT { get { if (!_PERCENTReady) { _PERCENTContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "PERCENT"); _PERCENTReady = true; } return _PERCENTContent; } }
        private static Android.Icu.Util.MeasureUnit _PERCENTContent = default;
        private static bool _PERCENTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#PERMILLE"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit PERMILLE { get { if (!_PERMILLEReady) { _PERMILLEContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "PERMILLE"); _PERMILLEReady = true; } return _PERMILLEContent; } }
        private static Android.Icu.Util.MeasureUnit _PERMILLEContent = default;
        private static bool _PERMILLEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#PETABYTE"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit PETABYTE { get { if (!_PETABYTEReady) { _PETABYTEContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "PETABYTE"); _PETABYTEReady = true; } return _PETABYTEContent; } }
        private static Android.Icu.Util.MeasureUnit _PETABYTEContent = default;
        private static bool _PETABYTEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#PICOMETER"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit PICOMETER { get { if (!_PICOMETERReady) { _PICOMETERContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "PICOMETER"); _PICOMETERReady = true; } return _PICOMETERContent; } }
        private static Android.Icu.Util.MeasureUnit _PICOMETERContent = default;
        private static bool _PICOMETERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#PINT"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit PINT { get { if (!_PINTReady) { _PINTContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "PINT"); _PINTReady = true; } return _PINTContent; } }
        private static Android.Icu.Util.MeasureUnit _PINTContent = default;
        private static bool _PINTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#PINT_METRIC"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit PINT_METRIC { get { if (!_PINT_METRICReady) { _PINT_METRICContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "PINT_METRIC"); _PINT_METRICReady = true; } return _PINT_METRICContent; } }
        private static Android.Icu.Util.MeasureUnit _PINT_METRICContent = default;
        private static bool _PINT_METRICReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#PIXEL"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit PIXEL { get { if (!_PIXELReady) { _PIXELContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "PIXEL"); _PIXELReady = true; } return _PIXELContent; } }
        private static Android.Icu.Util.MeasureUnit _PIXELContent = default;
        private static bool _PIXELReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#PIXEL_PER_CENTIMETER"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit PIXEL_PER_CENTIMETER { get { if (!_PIXEL_PER_CENTIMETERReady) { _PIXEL_PER_CENTIMETERContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "PIXEL_PER_CENTIMETER"); _PIXEL_PER_CENTIMETERReady = true; } return _PIXEL_PER_CENTIMETERContent; } }
        private static Android.Icu.Util.MeasureUnit _PIXEL_PER_CENTIMETERContent = default;
        private static bool _PIXEL_PER_CENTIMETERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#PIXEL_PER_INCH"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit PIXEL_PER_INCH { get { if (!_PIXEL_PER_INCHReady) { _PIXEL_PER_INCHContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "PIXEL_PER_INCH"); _PIXEL_PER_INCHReady = true; } return _PIXEL_PER_INCHContent; } }
        private static Android.Icu.Util.MeasureUnit _PIXEL_PER_INCHContent = default;
        private static bool _PIXEL_PER_INCHReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#POINT"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit POINT { get { if (!_POINTReady) { _POINTContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "POINT"); _POINTReady = true; } return _POINTContent; } }
        private static Android.Icu.Util.MeasureUnit _POINTContent = default;
        private static bool _POINTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#POUND"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit POUND { get { if (!_POUNDReady) { _POUNDContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "POUND"); _POUNDReady = true; } return _POUNDContent; } }
        private static Android.Icu.Util.MeasureUnit _POUNDContent = default;
        private static bool _POUNDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#POUND_PER_SQUARE_INCH"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit POUND_PER_SQUARE_INCH { get { if (!_POUND_PER_SQUARE_INCHReady) { _POUND_PER_SQUARE_INCHContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "POUND_PER_SQUARE_INCH"); _POUND_PER_SQUARE_INCHReady = true; } return _POUND_PER_SQUARE_INCHContent; } }
        private static Android.Icu.Util.MeasureUnit _POUND_PER_SQUARE_INCHContent = default;
        private static bool _POUND_PER_SQUARE_INCHReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#QUART"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit QUART { get { if (!_QUARTReady) { _QUARTContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "QUART"); _QUARTReady = true; } return _QUARTContent; } }
        private static Android.Icu.Util.MeasureUnit _QUARTContent = default;
        private static bool _QUARTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#QUARTER"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit QUARTER { get { if (!_QUARTERReady) { _QUARTERContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "QUARTER"); _QUARTERReady = true; } return _QUARTERContent; } }
        private static Android.Icu.Util.MeasureUnit _QUARTERContent = default;
        private static bool _QUARTERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#RADIAN"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit RADIAN { get { if (!_RADIANReady) { _RADIANContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "RADIAN"); _RADIANReady = true; } return _RADIANContent; } }
        private static Android.Icu.Util.MeasureUnit _RADIANContent = default;
        private static bool _RADIANReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#REVOLUTION_ANGLE"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit REVOLUTION_ANGLE { get { if (!_REVOLUTION_ANGLEReady) { _REVOLUTION_ANGLEContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "REVOLUTION_ANGLE"); _REVOLUTION_ANGLEReady = true; } return _REVOLUTION_ANGLEContent; } }
        private static Android.Icu.Util.MeasureUnit _REVOLUTION_ANGLEContent = default;
        private static bool _REVOLUTION_ANGLEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#SQUARE_CENTIMETER"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit SQUARE_CENTIMETER { get { if (!_SQUARE_CENTIMETERReady) { _SQUARE_CENTIMETERContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "SQUARE_CENTIMETER"); _SQUARE_CENTIMETERReady = true; } return _SQUARE_CENTIMETERContent; } }
        private static Android.Icu.Util.MeasureUnit _SQUARE_CENTIMETERContent = default;
        private static bool _SQUARE_CENTIMETERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#SQUARE_FOOT"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit SQUARE_FOOT { get { if (!_SQUARE_FOOTReady) { _SQUARE_FOOTContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "SQUARE_FOOT"); _SQUARE_FOOTReady = true; } return _SQUARE_FOOTContent; } }
        private static Android.Icu.Util.MeasureUnit _SQUARE_FOOTContent = default;
        private static bool _SQUARE_FOOTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#SQUARE_INCH"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit SQUARE_INCH { get { if (!_SQUARE_INCHReady) { _SQUARE_INCHContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "SQUARE_INCH"); _SQUARE_INCHReady = true; } return _SQUARE_INCHContent; } }
        private static Android.Icu.Util.MeasureUnit _SQUARE_INCHContent = default;
        private static bool _SQUARE_INCHReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#SQUARE_KILOMETER"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit SQUARE_KILOMETER { get { if (!_SQUARE_KILOMETERReady) { _SQUARE_KILOMETERContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "SQUARE_KILOMETER"); _SQUARE_KILOMETERReady = true; } return _SQUARE_KILOMETERContent; } }
        private static Android.Icu.Util.MeasureUnit _SQUARE_KILOMETERContent = default;
        private static bool _SQUARE_KILOMETERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#SQUARE_METER"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit SQUARE_METER { get { if (!_SQUARE_METERReady) { _SQUARE_METERContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "SQUARE_METER"); _SQUARE_METERReady = true; } return _SQUARE_METERContent; } }
        private static Android.Icu.Util.MeasureUnit _SQUARE_METERContent = default;
        private static bool _SQUARE_METERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#SQUARE_MILE"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit SQUARE_MILE { get { if (!_SQUARE_MILEReady) { _SQUARE_MILEContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "SQUARE_MILE"); _SQUARE_MILEReady = true; } return _SQUARE_MILEContent; } }
        private static Android.Icu.Util.MeasureUnit _SQUARE_MILEContent = default;
        private static bool _SQUARE_MILEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#SQUARE_YARD"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit SQUARE_YARD { get { if (!_SQUARE_YARDReady) { _SQUARE_YARDContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "SQUARE_YARD"); _SQUARE_YARDReady = true; } return _SQUARE_YARDContent; } }
        private static Android.Icu.Util.MeasureUnit _SQUARE_YARDContent = default;
        private static bool _SQUARE_YARDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#STONE"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit STONE { get { if (!_STONEReady) { _STONEContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "STONE"); _STONEReady = true; } return _STONEContent; } }
        private static Android.Icu.Util.MeasureUnit _STONEContent = default;
        private static bool _STONEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#TABLESPOON"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit TABLESPOON { get { if (!_TABLESPOONReady) { _TABLESPOONContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "TABLESPOON"); _TABLESPOONReady = true; } return _TABLESPOONContent; } }
        private static Android.Icu.Util.MeasureUnit _TABLESPOONContent = default;
        private static bool _TABLESPOONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#TEASPOON"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit TEASPOON { get { if (!_TEASPOONReady) { _TEASPOONContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "TEASPOON"); _TEASPOONReady = true; } return _TEASPOONContent; } }
        private static Android.Icu.Util.MeasureUnit _TEASPOONContent = default;
        private static bool _TEASPOONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#TERABIT"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit TERABIT { get { if (!_TERABITReady) { _TERABITContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "TERABIT"); _TERABITReady = true; } return _TERABITContent; } }
        private static Android.Icu.Util.MeasureUnit _TERABITContent = default;
        private static bool _TERABITReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#TERABYTE"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit TERABYTE { get { if (!_TERABYTEReady) { _TERABYTEContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "TERABYTE"); _TERABYTEReady = true; } return _TERABYTEContent; } }
        private static Android.Icu.Util.MeasureUnit _TERABYTEContent = default;
        private static bool _TERABYTEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#TON"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit TON { get { if (!_TONReady) { _TONContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "TON"); _TONReady = true; } return _TONContent; } }
        private static Android.Icu.Util.MeasureUnit _TONContent = default;
        private static bool _TONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#TONNE"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit TONNE { get { if (!_TONNEReady) { _TONNEContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "TONNE"); _TONNEReady = true; } return _TONNEContent; } }
        private static Android.Icu.Util.MeasureUnit _TONNEContent = default;
        private static bool _TONNEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#VOLT"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit VOLT { get { if (!_VOLTReady) { _VOLTContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "VOLT"); _VOLTReady = true; } return _VOLTContent; } }
        private static Android.Icu.Util.MeasureUnit _VOLTContent = default;
        private static bool _VOLTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#WATT"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit WATT { get { if (!_WATTReady) { _WATTContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "WATT"); _WATTReady = true; } return _WATTContent; } }
        private static Android.Icu.Util.MeasureUnit _WATTContent = default;
        private static bool _WATTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#YARD"/>
        /// </summary>
        public static Android.Icu.Util.MeasureUnit YARD { get { if (!_YARDReady) { _YARDContent = SGetField<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "YARD"); _YARDReady = true; } return _YARDContent; } }
        private static Android.Icu.Util.MeasureUnit _YARDContent = default;
        private static bool _YARDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#DAY"/>
        /// </summary>
        public static Android.Icu.Util.TimeUnit DAY { get { if (!_DAYReady) { _DAYContent = SGetField<Android.Icu.Util.TimeUnit>(LocalBridgeClazz, "DAY"); _DAYReady = true; } return _DAYContent; } }
        private static Android.Icu.Util.TimeUnit _DAYContent = default;
        private static bool _DAYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#HOUR"/>
        /// </summary>
        public static Android.Icu.Util.TimeUnit HOUR { get { if (!_HOURReady) { _HOURContent = SGetField<Android.Icu.Util.TimeUnit>(LocalBridgeClazz, "HOUR"); _HOURReady = true; } return _HOURContent; } }
        private static Android.Icu.Util.TimeUnit _HOURContent = default;
        private static bool _HOURReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#MINUTE"/>
        /// </summary>
        public static Android.Icu.Util.TimeUnit MINUTE { get { if (!_MINUTEReady) { _MINUTEContent = SGetField<Android.Icu.Util.TimeUnit>(LocalBridgeClazz, "MINUTE"); _MINUTEReady = true; } return _MINUTEContent; } }
        private static Android.Icu.Util.TimeUnit _MINUTEContent = default;
        private static bool _MINUTEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#MONTH"/>
        /// </summary>
        public static Android.Icu.Util.TimeUnit MONTH { get { if (!_MONTHReady) { _MONTHContent = SGetField<Android.Icu.Util.TimeUnit>(LocalBridgeClazz, "MONTH"); _MONTHReady = true; } return _MONTHContent; } }
        private static Android.Icu.Util.TimeUnit _MONTHContent = default;
        private static bool _MONTHReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#SECOND"/>
        /// </summary>
        public static Android.Icu.Util.TimeUnit SECOND { get { if (!_SECONDReady) { _SECONDContent = SGetField<Android.Icu.Util.TimeUnit>(LocalBridgeClazz, "SECOND"); _SECONDReady = true; } return _SECONDContent; } }
        private static Android.Icu.Util.TimeUnit _SECONDContent = default;
        private static bool _SECONDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#WEEK"/>
        /// </summary>
        public static Android.Icu.Util.TimeUnit WEEK { get { if (!_WEEKReady) { _WEEKContent = SGetField<Android.Icu.Util.TimeUnit>(LocalBridgeClazz, "WEEK"); _WEEKReady = true; } return _WEEKContent; } }
        private static Android.Icu.Util.TimeUnit _WEEKContent = default;
        private static bool _WEEKReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#YEAR"/>
        /// </summary>
        public static Android.Icu.Util.TimeUnit YEAR { get { if (!_YEARReady) { _YEARContent = SGetField<Android.Icu.Util.TimeUnit>(LocalBridgeClazz, "YEAR"); _YEARReady = true; } return _YEARContent; } }
        private static Android.Icu.Util.TimeUnit _YEARContent = default;
        private static bool _YEARReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#forIdentifier(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Android.Icu.Util.MeasureUnit"/></returns>
        public static Android.Icu.Util.MeasureUnit ForIdentifier(Java.Lang.String arg0)
        {
            return SExecuteWithSignature<Android.Icu.Util.MeasureUnit>(LocalBridgeClazz, "forIdentifier", "(Ljava/lang/String;)Landroid/icu/util/MeasureUnit;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#getAvailable(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Java.Util.Set"/></returns>
        public static Java.Util.Set<Android.Icu.Util.MeasureUnit> GetAvailable(Java.Lang.String arg0)
        {
            return SExecuteWithSignature<Java.Util.Set<Android.Icu.Util.MeasureUnit>>(LocalBridgeClazz, "getAvailable", "(Ljava/lang/String;)Ljava/util/Set;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#getAvailableTypes()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.Set"/></returns>
        public static Java.Util.Set<Java.Lang.String> GetAvailableTypes()
        {
            return SExecuteWithSignature<Java.Util.Set<Java.Lang.String>>(LocalBridgeClazz, "getAvailableTypes", "()Ljava/util/Set;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#getAvailable()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.Set"/></returns>
        public static Java.Util.Set<Android.Icu.Util.MeasureUnit> GetAvailable()
        {
            return SExecuteWithSignature<Java.Util.Set<Android.Icu.Util.MeasureUnit>>(LocalBridgeClazz, "getAvailable", "()Ljava/util/Set;");
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#product(android.icu.util.MeasureUnit)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Util.MeasureUnit"/></param>
        /// <returns><see cref="Android.Icu.Util.MeasureUnit"/></returns>
        public Android.Icu.Util.MeasureUnit Product(Android.Icu.Util.MeasureUnit arg0)
        {
            return IExecuteWithSignature<Android.Icu.Util.MeasureUnit>("product", "(Landroid/icu/util/MeasureUnit;)Landroid/icu/util/MeasureUnit;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#reciprocal()"/>
        /// </summary>
        /// <returns><see cref="Android.Icu.Util.MeasureUnit"/></returns>
        public Android.Icu.Util.MeasureUnit Reciprocal()
        {
            return IExecuteWithSignature<Android.Icu.Util.MeasureUnit>("reciprocal", "()Landroid/icu/util/MeasureUnit;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#withDimensionality(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Android.Icu.Util.MeasureUnit"/></returns>
        public Android.Icu.Util.MeasureUnit WithDimensionality(int arg0)
        {
            return IExecuteWithSignature<Android.Icu.Util.MeasureUnit>("withDimensionality", "(I)Landroid/icu/util/MeasureUnit;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#withPrefix(android.icu.util.MeasureUnit.MeasurePrefix)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Util.MeasureUnit.MeasurePrefix"/></param>
        /// <returns><see cref="Android.Icu.Util.MeasureUnit"/></returns>
        public Android.Icu.Util.MeasureUnit WithPrefix(Android.Icu.Util.MeasureUnit.MeasurePrefix arg0)
        {
            return IExecuteWithSignature<Android.Icu.Util.MeasureUnit>("withPrefix", "(Landroid/icu/util/MeasureUnit$MeasurePrefix;)Landroid/icu/util/MeasureUnit;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#getComplexity()"/>
        /// </summary>
        /// <returns><see cref="Android.Icu.Util.MeasureUnit.Complexity"/></returns>
        public Android.Icu.Util.MeasureUnit.Complexity GetComplexity()
        {
            return IExecuteWithSignature<Android.Icu.Util.MeasureUnit.Complexity>("getComplexity", "()Landroid/icu/util/MeasureUnit$Complexity;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#getPrefix()"/>
        /// </summary>
        /// <returns><see cref="Android.Icu.Util.MeasureUnit.MeasurePrefix"/></returns>
        public Android.Icu.Util.MeasureUnit.MeasurePrefix GetPrefix()
        {
            return IExecuteWithSignature<Android.Icu.Util.MeasureUnit.MeasurePrefix>("getPrefix", "()Landroid/icu/util/MeasureUnit$MeasurePrefix;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#getDimensionality()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetDimensionality()
        {
            return IExecuteWithSignature<int>("getDimensionality", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#getIdentifier()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetIdentifier()
        {
            return IExecuteWithSignature<Java.Lang.String>("getIdentifier", "()Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#getSubtype()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetSubtype()
        {
            return IExecuteWithSignature<Java.Lang.String>("getSubtype", "()Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#getType()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetType()
        {
            return IExecuteWithSignature<Java.Lang.String>("getType", "()Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.html#splitToSingleUnits()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.List"/></returns>
        public Java.Util.List<Android.Icu.Util.MeasureUnit> SplitToSingleUnits()
        {
            return IExecuteWithSignature<Java.Util.List<Android.Icu.Util.MeasureUnit>>("splitToSingleUnits", "()Ljava/util/List;");
        }

        #endregion

        #region Nested classes
        #region Complexity
        public partial class Complexity
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.Complexity.html#COMPOUND"/>
            /// </summary>
            public static Android.Icu.Util.MeasureUnit.Complexity COMPOUND { get { if (!_COMPOUNDReady) { _COMPOUNDContent = SGetField<Android.Icu.Util.MeasureUnit.Complexity>(LocalBridgeClazz, "COMPOUND"); _COMPOUNDReady = true; } return _COMPOUNDContent; } }
            private static Android.Icu.Util.MeasureUnit.Complexity _COMPOUNDContent = default;
            private static bool _COMPOUNDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.Complexity.html#MIXED"/>
            /// </summary>
            public static Android.Icu.Util.MeasureUnit.Complexity MIXED { get { if (!_MIXEDReady) { _MIXEDContent = SGetField<Android.Icu.Util.MeasureUnit.Complexity>(LocalBridgeClazz, "MIXED"); _MIXEDReady = true; } return _MIXEDContent; } }
            private static Android.Icu.Util.MeasureUnit.Complexity _MIXEDContent = default;
            private static bool _MIXEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.Complexity.html#SINGLE"/>
            /// </summary>
            public static Android.Icu.Util.MeasureUnit.Complexity SINGLE { get { if (!_SINGLEReady) { _SINGLEContent = SGetField<Android.Icu.Util.MeasureUnit.Complexity>(LocalBridgeClazz, "SINGLE"); _SINGLEReady = true; } return _SINGLEContent; } }
            private static Android.Icu.Util.MeasureUnit.Complexity _SINGLEContent = default;
            private static bool _SINGLEReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.Complexity.html#valueOf(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Android.Icu.Util.MeasureUnit.Complexity"/></returns>
            public static Android.Icu.Util.MeasureUnit.Complexity ValueOf(Java.Lang.String arg0)
            {
                return SExecuteWithSignature<Android.Icu.Util.MeasureUnit.Complexity>(LocalBridgeClazz, "valueOf", "(Ljava/lang/String;)Landroid/icu/util/MeasureUnit$Complexity;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.Complexity.html#values()"/>
            /// </summary>
            /// <returns><see cref="Android.Icu.Util.MeasureUnit.Complexity"/></returns>
            public static Android.Icu.Util.MeasureUnit.Complexity[] Values()
            {
                return SExecuteWithSignatureArray<Android.Icu.Util.MeasureUnit.Complexity>(LocalBridgeClazz, "values", "()[Landroid/icu/util/MeasureUnit$Complexity;");
            }

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region MeasurePrefix
        public partial class MeasurePrefix
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.MeasurePrefix.html#ATTO"/>
            /// </summary>
            public static Android.Icu.Util.MeasureUnit.MeasurePrefix ATTO { get { if (!_ATTOReady) { _ATTOContent = SGetField<Android.Icu.Util.MeasureUnit.MeasurePrefix>(LocalBridgeClazz, "ATTO"); _ATTOReady = true; } return _ATTOContent; } }
            private static Android.Icu.Util.MeasureUnit.MeasurePrefix _ATTOContent = default;
            private static bool _ATTOReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.MeasurePrefix.html#CENTI"/>
            /// </summary>
            public static Android.Icu.Util.MeasureUnit.MeasurePrefix CENTI { get { if (!_CENTIReady) { _CENTIContent = SGetField<Android.Icu.Util.MeasureUnit.MeasurePrefix>(LocalBridgeClazz, "CENTI"); _CENTIReady = true; } return _CENTIContent; } }
            private static Android.Icu.Util.MeasureUnit.MeasurePrefix _CENTIContent = default;
            private static bool _CENTIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.MeasurePrefix.html#DECI"/>
            /// </summary>
            public static Android.Icu.Util.MeasureUnit.MeasurePrefix DECI { get { if (!_DECIReady) { _DECIContent = SGetField<Android.Icu.Util.MeasureUnit.MeasurePrefix>(LocalBridgeClazz, "DECI"); _DECIReady = true; } return _DECIContent; } }
            private static Android.Icu.Util.MeasureUnit.MeasurePrefix _DECIContent = default;
            private static bool _DECIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.MeasurePrefix.html#DEKA"/>
            /// </summary>
            public static Android.Icu.Util.MeasureUnit.MeasurePrefix DEKA { get { if (!_DEKAReady) { _DEKAContent = SGetField<Android.Icu.Util.MeasureUnit.MeasurePrefix>(LocalBridgeClazz, "DEKA"); _DEKAReady = true; } return _DEKAContent; } }
            private static Android.Icu.Util.MeasureUnit.MeasurePrefix _DEKAContent = default;
            private static bool _DEKAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.MeasurePrefix.html#EXA"/>
            /// </summary>
            public static Android.Icu.Util.MeasureUnit.MeasurePrefix EXA { get { if (!_EXAReady) { _EXAContent = SGetField<Android.Icu.Util.MeasureUnit.MeasurePrefix>(LocalBridgeClazz, "EXA"); _EXAReady = true; } return _EXAContent; } }
            private static Android.Icu.Util.MeasureUnit.MeasurePrefix _EXAContent = default;
            private static bool _EXAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.MeasurePrefix.html#EXBI"/>
            /// </summary>
            public static Android.Icu.Util.MeasureUnit.MeasurePrefix EXBI { get { if (!_EXBIReady) { _EXBIContent = SGetField<Android.Icu.Util.MeasureUnit.MeasurePrefix>(LocalBridgeClazz, "EXBI"); _EXBIReady = true; } return _EXBIContent; } }
            private static Android.Icu.Util.MeasureUnit.MeasurePrefix _EXBIContent = default;
            private static bool _EXBIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.MeasurePrefix.html#FEMTO"/>
            /// </summary>
            public static Android.Icu.Util.MeasureUnit.MeasurePrefix FEMTO { get { if (!_FEMTOReady) { _FEMTOContent = SGetField<Android.Icu.Util.MeasureUnit.MeasurePrefix>(LocalBridgeClazz, "FEMTO"); _FEMTOReady = true; } return _FEMTOContent; } }
            private static Android.Icu.Util.MeasureUnit.MeasurePrefix _FEMTOContent = default;
            private static bool _FEMTOReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.MeasurePrefix.html#GIBI"/>
            /// </summary>
            public static Android.Icu.Util.MeasureUnit.MeasurePrefix GIBI { get { if (!_GIBIReady) { _GIBIContent = SGetField<Android.Icu.Util.MeasureUnit.MeasurePrefix>(LocalBridgeClazz, "GIBI"); _GIBIReady = true; } return _GIBIContent; } }
            private static Android.Icu.Util.MeasureUnit.MeasurePrefix _GIBIContent = default;
            private static bool _GIBIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.MeasurePrefix.html#GIGA"/>
            /// </summary>
            public static Android.Icu.Util.MeasureUnit.MeasurePrefix GIGA { get { if (!_GIGAReady) { _GIGAContent = SGetField<Android.Icu.Util.MeasureUnit.MeasurePrefix>(LocalBridgeClazz, "GIGA"); _GIGAReady = true; } return _GIGAContent; } }
            private static Android.Icu.Util.MeasureUnit.MeasurePrefix _GIGAContent = default;
            private static bool _GIGAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.MeasurePrefix.html#HECTO"/>
            /// </summary>
            public static Android.Icu.Util.MeasureUnit.MeasurePrefix HECTO { get { if (!_HECTOReady) { _HECTOContent = SGetField<Android.Icu.Util.MeasureUnit.MeasurePrefix>(LocalBridgeClazz, "HECTO"); _HECTOReady = true; } return _HECTOContent; } }
            private static Android.Icu.Util.MeasureUnit.MeasurePrefix _HECTOContent = default;
            private static bool _HECTOReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.MeasurePrefix.html#KIBI"/>
            /// </summary>
            public static Android.Icu.Util.MeasureUnit.MeasurePrefix KIBI { get { if (!_KIBIReady) { _KIBIContent = SGetField<Android.Icu.Util.MeasureUnit.MeasurePrefix>(LocalBridgeClazz, "KIBI"); _KIBIReady = true; } return _KIBIContent; } }
            private static Android.Icu.Util.MeasureUnit.MeasurePrefix _KIBIContent = default;
            private static bool _KIBIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.MeasurePrefix.html#KILO"/>
            /// </summary>
            public static Android.Icu.Util.MeasureUnit.MeasurePrefix KILO { get { if (!_KILOReady) { _KILOContent = SGetField<Android.Icu.Util.MeasureUnit.MeasurePrefix>(LocalBridgeClazz, "KILO"); _KILOReady = true; } return _KILOContent; } }
            private static Android.Icu.Util.MeasureUnit.MeasurePrefix _KILOContent = default;
            private static bool _KILOReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.MeasurePrefix.html#MEBI"/>
            /// </summary>
            public static Android.Icu.Util.MeasureUnit.MeasurePrefix MEBI { get { if (!_MEBIReady) { _MEBIContent = SGetField<Android.Icu.Util.MeasureUnit.MeasurePrefix>(LocalBridgeClazz, "MEBI"); _MEBIReady = true; } return _MEBIContent; } }
            private static Android.Icu.Util.MeasureUnit.MeasurePrefix _MEBIContent = default;
            private static bool _MEBIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.MeasurePrefix.html#MEGA"/>
            /// </summary>
            public static Android.Icu.Util.MeasureUnit.MeasurePrefix MEGA { get { if (!_MEGAReady) { _MEGAContent = SGetField<Android.Icu.Util.MeasureUnit.MeasurePrefix>(LocalBridgeClazz, "MEGA"); _MEGAReady = true; } return _MEGAContent; } }
            private static Android.Icu.Util.MeasureUnit.MeasurePrefix _MEGAContent = default;
            private static bool _MEGAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.MeasurePrefix.html#MICRO"/>
            /// </summary>
            public static Android.Icu.Util.MeasureUnit.MeasurePrefix MICRO { get { if (!_MICROReady) { _MICROContent = SGetField<Android.Icu.Util.MeasureUnit.MeasurePrefix>(LocalBridgeClazz, "MICRO"); _MICROReady = true; } return _MICROContent; } }
            private static Android.Icu.Util.MeasureUnit.MeasurePrefix _MICROContent = default;
            private static bool _MICROReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.MeasurePrefix.html#MILLI"/>
            /// </summary>
            public static Android.Icu.Util.MeasureUnit.MeasurePrefix MILLI { get { if (!_MILLIReady) { _MILLIContent = SGetField<Android.Icu.Util.MeasureUnit.MeasurePrefix>(LocalBridgeClazz, "MILLI"); _MILLIReady = true; } return _MILLIContent; } }
            private static Android.Icu.Util.MeasureUnit.MeasurePrefix _MILLIContent = default;
            private static bool _MILLIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.MeasurePrefix.html#NANO"/>
            /// </summary>
            public static Android.Icu.Util.MeasureUnit.MeasurePrefix NANO { get { if (!_NANOReady) { _NANOContent = SGetField<Android.Icu.Util.MeasureUnit.MeasurePrefix>(LocalBridgeClazz, "NANO"); _NANOReady = true; } return _NANOContent; } }
            private static Android.Icu.Util.MeasureUnit.MeasurePrefix _NANOContent = default;
            private static bool _NANOReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.MeasurePrefix.html#ONE"/>
            /// </summary>
            public static Android.Icu.Util.MeasureUnit.MeasurePrefix ONE { get { if (!_ONEReady) { _ONEContent = SGetField<Android.Icu.Util.MeasureUnit.MeasurePrefix>(LocalBridgeClazz, "ONE"); _ONEReady = true; } return _ONEContent; } }
            private static Android.Icu.Util.MeasureUnit.MeasurePrefix _ONEContent = default;
            private static bool _ONEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.MeasurePrefix.html#PEBI"/>
            /// </summary>
            public static Android.Icu.Util.MeasureUnit.MeasurePrefix PEBI { get { if (!_PEBIReady) { _PEBIContent = SGetField<Android.Icu.Util.MeasureUnit.MeasurePrefix>(LocalBridgeClazz, "PEBI"); _PEBIReady = true; } return _PEBIContent; } }
            private static Android.Icu.Util.MeasureUnit.MeasurePrefix _PEBIContent = default;
            private static bool _PEBIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.MeasurePrefix.html#PETA"/>
            /// </summary>
            public static Android.Icu.Util.MeasureUnit.MeasurePrefix PETA { get { if (!_PETAReady) { _PETAContent = SGetField<Android.Icu.Util.MeasureUnit.MeasurePrefix>(LocalBridgeClazz, "PETA"); _PETAReady = true; } return _PETAContent; } }
            private static Android.Icu.Util.MeasureUnit.MeasurePrefix _PETAContent = default;
            private static bool _PETAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.MeasurePrefix.html#PICO"/>
            /// </summary>
            public static Android.Icu.Util.MeasureUnit.MeasurePrefix PICO { get { if (!_PICOReady) { _PICOContent = SGetField<Android.Icu.Util.MeasureUnit.MeasurePrefix>(LocalBridgeClazz, "PICO"); _PICOReady = true; } return _PICOContent; } }
            private static Android.Icu.Util.MeasureUnit.MeasurePrefix _PICOContent = default;
            private static bool _PICOReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.MeasurePrefix.html#TEBI"/>
            /// </summary>
            public static Android.Icu.Util.MeasureUnit.MeasurePrefix TEBI { get { if (!_TEBIReady) { _TEBIContent = SGetField<Android.Icu.Util.MeasureUnit.MeasurePrefix>(LocalBridgeClazz, "TEBI"); _TEBIReady = true; } return _TEBIContent; } }
            private static Android.Icu.Util.MeasureUnit.MeasurePrefix _TEBIContent = default;
            private static bool _TEBIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.MeasurePrefix.html#TERA"/>
            /// </summary>
            public static Android.Icu.Util.MeasureUnit.MeasurePrefix TERA { get { if (!_TERAReady) { _TERAContent = SGetField<Android.Icu.Util.MeasureUnit.MeasurePrefix>(LocalBridgeClazz, "TERA"); _TERAReady = true; } return _TERAContent; } }
            private static Android.Icu.Util.MeasureUnit.MeasurePrefix _TERAContent = default;
            private static bool _TERAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.MeasurePrefix.html#YOBI"/>
            /// </summary>
            public static Android.Icu.Util.MeasureUnit.MeasurePrefix YOBI { get { if (!_YOBIReady) { _YOBIContent = SGetField<Android.Icu.Util.MeasureUnit.MeasurePrefix>(LocalBridgeClazz, "YOBI"); _YOBIReady = true; } return _YOBIContent; } }
            private static Android.Icu.Util.MeasureUnit.MeasurePrefix _YOBIContent = default;
            private static bool _YOBIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.MeasurePrefix.html#YOCTO"/>
            /// </summary>
            public static Android.Icu.Util.MeasureUnit.MeasurePrefix YOCTO { get { if (!_YOCTOReady) { _YOCTOContent = SGetField<Android.Icu.Util.MeasureUnit.MeasurePrefix>(LocalBridgeClazz, "YOCTO"); _YOCTOReady = true; } return _YOCTOContent; } }
            private static Android.Icu.Util.MeasureUnit.MeasurePrefix _YOCTOContent = default;
            private static bool _YOCTOReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.MeasurePrefix.html#YOTTA"/>
            /// </summary>
            public static Android.Icu.Util.MeasureUnit.MeasurePrefix YOTTA { get { if (!_YOTTAReady) { _YOTTAContent = SGetField<Android.Icu.Util.MeasureUnit.MeasurePrefix>(LocalBridgeClazz, "YOTTA"); _YOTTAReady = true; } return _YOTTAContent; } }
            private static Android.Icu.Util.MeasureUnit.MeasurePrefix _YOTTAContent = default;
            private static bool _YOTTAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.MeasurePrefix.html#ZEBI"/>
            /// </summary>
            public static Android.Icu.Util.MeasureUnit.MeasurePrefix ZEBI { get { if (!_ZEBIReady) { _ZEBIContent = SGetField<Android.Icu.Util.MeasureUnit.MeasurePrefix>(LocalBridgeClazz, "ZEBI"); _ZEBIReady = true; } return _ZEBIContent; } }
            private static Android.Icu.Util.MeasureUnit.MeasurePrefix _ZEBIContent = default;
            private static bool _ZEBIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.MeasurePrefix.html#ZEPTO"/>
            /// </summary>
            public static Android.Icu.Util.MeasureUnit.MeasurePrefix ZEPTO { get { if (!_ZEPTOReady) { _ZEPTOContent = SGetField<Android.Icu.Util.MeasureUnit.MeasurePrefix>(LocalBridgeClazz, "ZEPTO"); _ZEPTOReady = true; } return _ZEPTOContent; } }
            private static Android.Icu.Util.MeasureUnit.MeasurePrefix _ZEPTOContent = default;
            private static bool _ZEPTOReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.MeasurePrefix.html#ZETTA"/>
            /// </summary>
            public static Android.Icu.Util.MeasureUnit.MeasurePrefix ZETTA { get { if (!_ZETTAReady) { _ZETTAContent = SGetField<Android.Icu.Util.MeasureUnit.MeasurePrefix>(LocalBridgeClazz, "ZETTA"); _ZETTAReady = true; } return _ZETTAContent; } }
            private static Android.Icu.Util.MeasureUnit.MeasurePrefix _ZETTAContent = default;
            private static bool _ZETTAReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.MeasurePrefix.html#valueOf(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Android.Icu.Util.MeasureUnit.MeasurePrefix"/></returns>
            public static Android.Icu.Util.MeasureUnit.MeasurePrefix ValueOf(Java.Lang.String arg0)
            {
                return SExecuteWithSignature<Android.Icu.Util.MeasureUnit.MeasurePrefix>(LocalBridgeClazz, "valueOf", "(Ljava/lang/String;)Landroid/icu/util/MeasureUnit$MeasurePrefix;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.MeasurePrefix.html#values()"/>
            /// </summary>
            /// <returns><see cref="Android.Icu.Util.MeasureUnit.MeasurePrefix"/></returns>
            public static Android.Icu.Util.MeasureUnit.MeasurePrefix[] Values()
            {
                return SExecuteWithSignatureArray<Android.Icu.Util.MeasureUnit.MeasurePrefix>(LocalBridgeClazz, "values", "()[Landroid/icu/util/MeasureUnit$MeasurePrefix;");
            }

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.MeasurePrefix.html#getBase()"/>
            /// </summary>
            /// <returns><see cref="int"/></returns>
            public int GetBase()
            {
                return IExecuteWithSignature<int>("getBase", "()I");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/util/MeasureUnit.MeasurePrefix.html#getPower()"/>
            /// </summary>
            /// <returns><see cref="int"/></returns>
            public int GetPower()
            {
                return IExecuteWithSignature<int>("getPower", "()I");
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}