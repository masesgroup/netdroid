/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.5.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Icu.Lang
{
    #region UCharacter
    public partial class UCharacter
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#MAX_HIGH_SURROGATE"/>
        /// </summary>
        public static char MAX_HIGH_SURROGATE { get { if (!_MAX_HIGH_SURROGATEReady) { _MAX_HIGH_SURROGATEContent = SGetField<char>(LocalBridgeClazz, "MAX_HIGH_SURROGATE"); _MAX_HIGH_SURROGATEReady = true; } return _MAX_HIGH_SURROGATEContent; } }
        private static char _MAX_HIGH_SURROGATEContent = default;
        private static bool _MAX_HIGH_SURROGATEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#MAX_LOW_SURROGATE"/>
        /// </summary>
        public static char MAX_LOW_SURROGATE { get { if (!_MAX_LOW_SURROGATEReady) { _MAX_LOW_SURROGATEContent = SGetField<char>(LocalBridgeClazz, "MAX_LOW_SURROGATE"); _MAX_LOW_SURROGATEReady = true; } return _MAX_LOW_SURROGATEContent; } }
        private static char _MAX_LOW_SURROGATEContent = default;
        private static bool _MAX_LOW_SURROGATEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#MAX_SURROGATE"/>
        /// </summary>
        public static char MAX_SURROGATE { get { if (!_MAX_SURROGATEReady) { _MAX_SURROGATEContent = SGetField<char>(LocalBridgeClazz, "MAX_SURROGATE"); _MAX_SURROGATEReady = true; } return _MAX_SURROGATEContent; } }
        private static char _MAX_SURROGATEContent = default;
        private static bool _MAX_SURROGATEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#MIN_HIGH_SURROGATE"/>
        /// </summary>
        public static char MIN_HIGH_SURROGATE { get { if (!_MIN_HIGH_SURROGATEReady) { _MIN_HIGH_SURROGATEContent = SGetField<char>(LocalBridgeClazz, "MIN_HIGH_SURROGATE"); _MIN_HIGH_SURROGATEReady = true; } return _MIN_HIGH_SURROGATEContent; } }
        private static char _MIN_HIGH_SURROGATEContent = default;
        private static bool _MIN_HIGH_SURROGATEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#MIN_LOW_SURROGATE"/>
        /// </summary>
        public static char MIN_LOW_SURROGATE { get { if (!_MIN_LOW_SURROGATEReady) { _MIN_LOW_SURROGATEContent = SGetField<char>(LocalBridgeClazz, "MIN_LOW_SURROGATE"); _MIN_LOW_SURROGATEReady = true; } return _MIN_LOW_SURROGATEContent; } }
        private static char _MIN_LOW_SURROGATEContent = default;
        private static bool _MIN_LOW_SURROGATEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#MIN_SURROGATE"/>
        /// </summary>
        public static char MIN_SURROGATE { get { if (!_MIN_SURROGATEReady) { _MIN_SURROGATEContent = SGetField<char>(LocalBridgeClazz, "MIN_SURROGATE"); _MIN_SURROGATEReady = true; } return _MIN_SURROGATEContent; } }
        private static char _MIN_SURROGATEContent = default;
        private static bool _MIN_SURROGATEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#NO_NUMERIC_VALUE"/>
        /// </summary>
        public static double NO_NUMERIC_VALUE { get { if (!_NO_NUMERIC_VALUEReady) { _NO_NUMERIC_VALUEContent = SGetField<double>(LocalBridgeClazz, "NO_NUMERIC_VALUE"); _NO_NUMERIC_VALUEReady = true; } return _NO_NUMERIC_VALUEContent; } }
        private static double _NO_NUMERIC_VALUEContent = default;
        private static bool _NO_NUMERIC_VALUEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#FOLD_CASE_DEFAULT"/>
        /// </summary>
        public static int FOLD_CASE_DEFAULT { get { if (!_FOLD_CASE_DEFAULTReady) { _FOLD_CASE_DEFAULTContent = SGetField<int>(LocalBridgeClazz, "FOLD_CASE_DEFAULT"); _FOLD_CASE_DEFAULTReady = true; } return _FOLD_CASE_DEFAULTContent; } }
        private static int _FOLD_CASE_DEFAULTContent = default;
        private static bool _FOLD_CASE_DEFAULTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#FOLD_CASE_EXCLUDE_SPECIAL_I"/>
        /// </summary>
        public static int FOLD_CASE_EXCLUDE_SPECIAL_I { get { if (!_FOLD_CASE_EXCLUDE_SPECIAL_IReady) { _FOLD_CASE_EXCLUDE_SPECIAL_IContent = SGetField<int>(LocalBridgeClazz, "FOLD_CASE_EXCLUDE_SPECIAL_I"); _FOLD_CASE_EXCLUDE_SPECIAL_IReady = true; } return _FOLD_CASE_EXCLUDE_SPECIAL_IContent; } }
        private static int _FOLD_CASE_EXCLUDE_SPECIAL_IContent = default;
        private static bool _FOLD_CASE_EXCLUDE_SPECIAL_IReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#MAX_CODE_POINT"/>
        /// </summary>
        public static int MAX_CODE_POINT { get { if (!_MAX_CODE_POINTReady) { _MAX_CODE_POINTContent = SGetField<int>(LocalBridgeClazz, "MAX_CODE_POINT"); _MAX_CODE_POINTReady = true; } return _MAX_CODE_POINTContent; } }
        private static int _MAX_CODE_POINTContent = default;
        private static bool _MAX_CODE_POINTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#MAX_RADIX"/>
        /// </summary>
        public static int MAX_RADIX { get { if (!_MAX_RADIXReady) { _MAX_RADIXContent = SGetField<int>(LocalBridgeClazz, "MAX_RADIX"); _MAX_RADIXReady = true; } return _MAX_RADIXContent; } }
        private static int _MAX_RADIXContent = default;
        private static bool _MAX_RADIXReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#MAX_VALUE"/>
        /// </summary>
        public static int MAX_VALUE { get { if (!_MAX_VALUEReady) { _MAX_VALUEContent = SGetField<int>(LocalBridgeClazz, "MAX_VALUE"); _MAX_VALUEReady = true; } return _MAX_VALUEContent; } }
        private static int _MAX_VALUEContent = default;
        private static bool _MAX_VALUEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#MIN_CODE_POINT"/>
        /// </summary>
        public static int MIN_CODE_POINT { get { if (!_MIN_CODE_POINTReady) { _MIN_CODE_POINTContent = SGetField<int>(LocalBridgeClazz, "MIN_CODE_POINT"); _MIN_CODE_POINTReady = true; } return _MIN_CODE_POINTContent; } }
        private static int _MIN_CODE_POINTContent = default;
        private static bool _MIN_CODE_POINTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#MIN_RADIX"/>
        /// </summary>
        public static int MIN_RADIX { get { if (!_MIN_RADIXReady) { _MIN_RADIXContent = SGetField<int>(LocalBridgeClazz, "MIN_RADIX"); _MIN_RADIXReady = true; } return _MIN_RADIXContent; } }
        private static int _MIN_RADIXContent = default;
        private static bool _MIN_RADIXReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#MIN_SUPPLEMENTARY_CODE_POINT"/>
        /// </summary>
        public static int MIN_SUPPLEMENTARY_CODE_POINT { get { if (!_MIN_SUPPLEMENTARY_CODE_POINTReady) { _MIN_SUPPLEMENTARY_CODE_POINTContent = SGetField<int>(LocalBridgeClazz, "MIN_SUPPLEMENTARY_CODE_POINT"); _MIN_SUPPLEMENTARY_CODE_POINTReady = true; } return _MIN_SUPPLEMENTARY_CODE_POINTContent; } }
        private static int _MIN_SUPPLEMENTARY_CODE_POINTContent = default;
        private static bool _MIN_SUPPLEMENTARY_CODE_POINTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#MIN_VALUE"/>
        /// </summary>
        public static int MIN_VALUE { get { if (!_MIN_VALUEReady) { _MIN_VALUEContent = SGetField<int>(LocalBridgeClazz, "MIN_VALUE"); _MIN_VALUEReady = true; } return _MIN_VALUEContent; } }
        private static int _MIN_VALUEContent = default;
        private static bool _MIN_VALUEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#REPLACEMENT_CHAR"/>
        /// </summary>
        public static int REPLACEMENT_CHAR { get { if (!_REPLACEMENT_CHARReady) { _REPLACEMENT_CHARContent = SGetField<int>(LocalBridgeClazz, "REPLACEMENT_CHAR"); _REPLACEMENT_CHARReady = true; } return _REPLACEMENT_CHARContent; } }
        private static int _REPLACEMENT_CHARContent = default;
        private static bool _REPLACEMENT_CHARReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#SUPPLEMENTARY_MIN_VALUE"/>
        /// </summary>
        public static int SUPPLEMENTARY_MIN_VALUE { get { if (!_SUPPLEMENTARY_MIN_VALUEReady) { _SUPPLEMENTARY_MIN_VALUEContent = SGetField<int>(LocalBridgeClazz, "SUPPLEMENTARY_MIN_VALUE"); _SUPPLEMENTARY_MIN_VALUEReady = true; } return _SUPPLEMENTARY_MIN_VALUEContent; } }
        private static int _SUPPLEMENTARY_MIN_VALUEContent = default;
        private static bool _SUPPLEMENTARY_MIN_VALUEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#TITLECASE_NO_BREAK_ADJUSTMENT"/>
        /// </summary>
        public static int TITLECASE_NO_BREAK_ADJUSTMENT { get { if (!_TITLECASE_NO_BREAK_ADJUSTMENTReady) { _TITLECASE_NO_BREAK_ADJUSTMENTContent = SGetField<int>(LocalBridgeClazz, "TITLECASE_NO_BREAK_ADJUSTMENT"); _TITLECASE_NO_BREAK_ADJUSTMENTReady = true; } return _TITLECASE_NO_BREAK_ADJUSTMENTContent; } }
        private static int _TITLECASE_NO_BREAK_ADJUSTMENTContent = default;
        private static bool _TITLECASE_NO_BREAK_ADJUSTMENTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#TITLECASE_NO_LOWERCASE"/>
        /// </summary>
        public static int TITLECASE_NO_LOWERCASE { get { if (!_TITLECASE_NO_LOWERCASEReady) { _TITLECASE_NO_LOWERCASEContent = SGetField<int>(LocalBridgeClazz, "TITLECASE_NO_LOWERCASE"); _TITLECASE_NO_LOWERCASEReady = true; } return _TITLECASE_NO_LOWERCASEContent; } }
        private static int _TITLECASE_NO_LOWERCASEContent = default;
        private static bool _TITLECASE_NO_LOWERCASEReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#getTypeIterator()"/>
        /// </summary>
        /// <returns><see cref="Android.Icu.Util.RangeValueIterator"/></returns>
        public static Android.Icu.Util.RangeValueIterator GetTypeIterator()
        {
            return SExecuteWithSignature<Android.Icu.Util.RangeValueIterator>(LocalBridgeClazz, "getTypeIterator", "()Landroid/icu/util/RangeValueIterator;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#getExtendedNameIterator()"/>
        /// </summary>
        /// <returns><see cref="Android.Icu.Util.ValueIterator"/></returns>
        public static Android.Icu.Util.ValueIterator GetExtendedNameIterator()
        {
            return SExecuteWithSignature<Android.Icu.Util.ValueIterator>(LocalBridgeClazz, "getExtendedNameIterator", "()Landroid/icu/util/ValueIterator;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#getNameIterator()"/>
        /// </summary>
        /// <returns><see cref="Android.Icu.Util.ValueIterator"/></returns>
        public static Android.Icu.Util.ValueIterator GetNameIterator()
        {
            return SExecuteWithSignature<Android.Icu.Util.ValueIterator>(LocalBridgeClazz, "getNameIterator", "()Landroid/icu/util/ValueIterator;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#getAge(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Android.Icu.Util.VersionInfo"/></returns>
        public static Android.Icu.Util.VersionInfo GetAge(int arg0)
        {
            return SExecuteWithSignature<Android.Icu.Util.VersionInfo>(LocalBridgeClazz, "getAge", "(I)Landroid/icu/util/VersionInfo;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#getUnicodeVersion()"/>
        /// </summary>
        /// <returns><see cref="Android.Icu.Util.VersionInfo"/></returns>
        public static Android.Icu.Util.VersionInfo GetUnicodeVersion()
        {
            return SExecuteWithSignature<Android.Icu.Util.VersionInfo>(LocalBridgeClazz, "getUnicodeVersion", "()Landroid/icu/util/VersionInfo;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#hasBinaryProperty(int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool HasBinaryProperty(int arg0, int arg1)
        {
            return SExecute<bool>(LocalBridgeClazz, "hasBinaryProperty", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#hasBinaryProperty(java.lang.CharSequence,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.CharSequence"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool HasBinaryProperty(Java.Lang.CharSequence arg0, int arg1)
        {
            return SExecute<bool>(LocalBridgeClazz, "hasBinaryProperty", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#isBaseForm(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool IsBaseForm(int arg0)
        {
            return SExecuteWithSignature<bool>(LocalBridgeClazz, "isBaseForm", "(I)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#isBMP(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool IsBMP(int arg0)
        {
            return SExecuteWithSignature<bool>(LocalBridgeClazz, "isBMP", "(I)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#isDefined(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool IsDefined(int arg0)
        {
            return SExecuteWithSignature<bool>(LocalBridgeClazz, "isDefined", "(I)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#isDigit(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool IsDigit(int arg0)
        {
            return SExecuteWithSignature<bool>(LocalBridgeClazz, "isDigit", "(I)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#isHighSurrogate(char)"/>
        /// </summary>
        /// <param name="arg0"><see cref="char"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool IsHighSurrogate(char arg0)
        {
            return SExecuteWithSignature<bool>(LocalBridgeClazz, "isHighSurrogate", "(C)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#isHighSurrogate(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool IsHighSurrogate(int arg0)
        {
            return SExecuteWithSignature<bool>(LocalBridgeClazz, "isHighSurrogate", "(I)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#isIdentifierIgnorable(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool IsIdentifierIgnorable(int arg0)
        {
            return SExecuteWithSignature<bool>(LocalBridgeClazz, "isIdentifierIgnorable", "(I)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#isISOControl(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool IsISOControl(int arg0)
        {
            return SExecuteWithSignature<bool>(LocalBridgeClazz, "isISOControl", "(I)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#isJavaIdentifierPart(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool IsJavaIdentifierPart(int arg0)
        {
            return SExecuteWithSignature<bool>(LocalBridgeClazz, "isJavaIdentifierPart", "(I)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#isJavaIdentifierStart(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool IsJavaIdentifierStart(int arg0)
        {
            return SExecuteWithSignature<bool>(LocalBridgeClazz, "isJavaIdentifierStart", "(I)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#isLegal(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool IsLegal(int arg0)
        {
            return SExecuteWithSignature<bool>(LocalBridgeClazz, "isLegal", "(I)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#isLegal(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool IsLegal(Java.Lang.String arg0)
        {
            return SExecuteWithSignature<bool>(LocalBridgeClazz, "isLegal", "(Ljava/lang/String;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#isLetter(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool IsLetter(int arg0)
        {
            return SExecuteWithSignature<bool>(LocalBridgeClazz, "isLetter", "(I)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#isLetterOrDigit(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool IsLetterOrDigit(int arg0)
        {
            return SExecuteWithSignature<bool>(LocalBridgeClazz, "isLetterOrDigit", "(I)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#isLowerCase(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool IsLowerCase(int arg0)
        {
            return SExecuteWithSignature<bool>(LocalBridgeClazz, "isLowerCase", "(I)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#isLowSurrogate(char)"/>
        /// </summary>
        /// <param name="arg0"><see cref="char"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool IsLowSurrogate(char arg0)
        {
            return SExecuteWithSignature<bool>(LocalBridgeClazz, "isLowSurrogate", "(C)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#isLowSurrogate(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool IsLowSurrogate(int arg0)
        {
            return SExecuteWithSignature<bool>(LocalBridgeClazz, "isLowSurrogate", "(I)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#isMirrored(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool IsMirrored(int arg0)
        {
            return SExecuteWithSignature<bool>(LocalBridgeClazz, "isMirrored", "(I)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#isPrintable(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool IsPrintable(int arg0)
        {
            return SExecuteWithSignature<bool>(LocalBridgeClazz, "isPrintable", "(I)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#isSpaceChar(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool IsSpaceChar(int arg0)
        {
            return SExecuteWithSignature<bool>(LocalBridgeClazz, "isSpaceChar", "(I)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#isSupplementary(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool IsSupplementary(int arg0)
        {
            return SExecuteWithSignature<bool>(LocalBridgeClazz, "isSupplementary", "(I)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#isSupplementaryCodePoint(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool IsSupplementaryCodePoint(int arg0)
        {
            return SExecuteWithSignature<bool>(LocalBridgeClazz, "isSupplementaryCodePoint", "(I)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#isSurrogatePair(char,char)"/>
        /// </summary>
        /// <param name="arg0"><see cref="char"/></param>
        /// <param name="arg1"><see cref="char"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool IsSurrogatePair(char arg0, char arg1)
        {
            return SExecute<bool>(LocalBridgeClazz, "isSurrogatePair", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#isSurrogatePair(int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool IsSurrogatePair(int arg0, int arg1)
        {
            return SExecute<bool>(LocalBridgeClazz, "isSurrogatePair", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#isTitleCase(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool IsTitleCase(int arg0)
        {
            return SExecuteWithSignature<bool>(LocalBridgeClazz, "isTitleCase", "(I)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#isUAlphabetic(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool IsUAlphabetic(int arg0)
        {
            return SExecuteWithSignature<bool>(LocalBridgeClazz, "isUAlphabetic", "(I)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#isULowercase(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool IsULowercase(int arg0)
        {
            return SExecuteWithSignature<bool>(LocalBridgeClazz, "isULowercase", "(I)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#isUnicodeIdentifierPart(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool IsUnicodeIdentifierPart(int arg0)
        {
            return SExecuteWithSignature<bool>(LocalBridgeClazz, "isUnicodeIdentifierPart", "(I)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#isUnicodeIdentifierStart(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool IsUnicodeIdentifierStart(int arg0)
        {
            return SExecuteWithSignature<bool>(LocalBridgeClazz, "isUnicodeIdentifierStart", "(I)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#isUpperCase(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool IsUpperCase(int arg0)
        {
            return SExecuteWithSignature<bool>(LocalBridgeClazz, "isUpperCase", "(I)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#isUUppercase(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool IsUUppercase(int arg0)
        {
            return SExecuteWithSignature<bool>(LocalBridgeClazz, "isUUppercase", "(I)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#isUWhiteSpace(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool IsUWhiteSpace(int arg0)
        {
            return SExecuteWithSignature<bool>(LocalBridgeClazz, "isUWhiteSpace", "(I)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#isValidCodePoint(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool IsValidCodePoint(int arg0)
        {
            return SExecuteWithSignature<bool>(LocalBridgeClazz, "isValidCodePoint", "(I)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#isWhitespace(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool IsWhitespace(int arg0)
        {
            return SExecuteWithSignature<bool>(LocalBridgeClazz, "isWhitespace", "(I)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#getDirectionality(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="byte"/></returns>
        public static byte GetDirectionality(int arg0)
        {
            return SExecuteWithSignature<byte>(LocalBridgeClazz, "getDirectionality", "(I)B", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#forDigit(int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="char"/></returns>
        public static char ForDigit(int arg0, int arg1)
        {
            return SExecute<char>(LocalBridgeClazz, "forDigit", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#toChars(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="char"/></returns>
        public static char[] ToChars(int arg0)
        {
            return SExecuteWithSignatureArray<char>(LocalBridgeClazz, "toChars", "(I)[C", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#getUnicodeNumericValue(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="double"/></returns>
        public static double GetUnicodeNumericValue(int arg0)
        {
            return SExecuteWithSignature<double>(LocalBridgeClazz, "getUnicodeNumericValue", "(I)D", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#charCount(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public static int CharCount(int arg0)
        {
            return SExecuteWithSignature<int>(LocalBridgeClazz, "charCount", "(I)I", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#codePointAt(char[],int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="char"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public static int CodePointAt(char[] arg0, int arg1, int arg2)
        {
            return SExecute<int>(LocalBridgeClazz, "codePointAt", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#codePointAt(char[],int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="char"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public static int CodePointAt(char[] arg0, int arg1)
        {
            return SExecute<int>(LocalBridgeClazz, "codePointAt", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#codePointAt(java.lang.CharSequence,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.CharSequence"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public static int CodePointAt(Java.Lang.CharSequence arg0, int arg1)
        {
            return SExecute<int>(LocalBridgeClazz, "codePointAt", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#codePointBefore(char[],int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="char"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public static int CodePointBefore(char[] arg0, int arg1, int arg2)
        {
            return SExecute<int>(LocalBridgeClazz, "codePointBefore", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#codePointBefore(char[],int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="char"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public static int CodePointBefore(char[] arg0, int arg1)
        {
            return SExecute<int>(LocalBridgeClazz, "codePointBefore", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#codePointBefore(java.lang.CharSequence,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.CharSequence"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public static int CodePointBefore(Java.Lang.CharSequence arg0, int arg1)
        {
            return SExecute<int>(LocalBridgeClazz, "codePointBefore", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#codePointCount(char[],int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="char"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public static int CodePointCount(char[] arg0, int arg1, int arg2)
        {
            return SExecute<int>(LocalBridgeClazz, "codePointCount", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#codePointCount(java.lang.CharSequence,int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.CharSequence"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public static int CodePointCount(Java.Lang.CharSequence arg0, int arg1, int arg2)
        {
            return SExecute<int>(LocalBridgeClazz, "codePointCount", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#digit(int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public static int Digit(int arg0, int arg1)
        {
            return SExecute<int>(LocalBridgeClazz, "digit", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#digit(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public static int Digit(int arg0)
        {
            return SExecuteWithSignature<int>(LocalBridgeClazz, "digit", "(I)I", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#foldCase(int,boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="bool"/></param>
        /// <returns><see cref="int"/></returns>
        public static int FoldCase(int arg0, bool arg1)
        {
            return SExecute<int>(LocalBridgeClazz, "foldCase", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#foldCase(int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public static int FoldCase(int arg0, int arg1)
        {
            return SExecute<int>(LocalBridgeClazz, "foldCase", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#getBidiPairedBracket(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public static int GetBidiPairedBracket(int arg0)
        {
            return SExecuteWithSignature<int>(LocalBridgeClazz, "getBidiPairedBracket", "(I)I", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#getCharFromExtendedName(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="int"/></returns>
        public static int GetCharFromExtendedName(Java.Lang.String arg0)
        {
            return SExecuteWithSignature<int>(LocalBridgeClazz, "getCharFromExtendedName", "(Ljava/lang/String;)I", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#getCharFromName(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="int"/></returns>
        public static int GetCharFromName(Java.Lang.String arg0)
        {
            return SExecuteWithSignature<int>(LocalBridgeClazz, "getCharFromName", "(Ljava/lang/String;)I", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#getCharFromNameAlias(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="int"/></returns>
        public static int GetCharFromNameAlias(Java.Lang.String arg0)
        {
            return SExecuteWithSignature<int>(LocalBridgeClazz, "getCharFromNameAlias", "(Ljava/lang/String;)I", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#getCodePoint(char,char)"/>
        /// </summary>
        /// <param name="arg0"><see cref="char"/></param>
        /// <param name="arg1"><see cref="char"/></param>
        /// <returns><see cref="int"/></returns>
        public static int GetCodePoint(char arg0, char arg1)
        {
            return SExecute<int>(LocalBridgeClazz, "getCodePoint", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#getCodePoint(char)"/>
        /// </summary>
        /// <param name="arg0"><see cref="char"/></param>
        /// <returns><see cref="int"/></returns>
        public static int GetCodePoint(char arg0)
        {
            return SExecuteWithSignature<int>(LocalBridgeClazz, "getCodePoint", "(C)I", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#getCodePoint(int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public static int GetCodePoint(int arg0, int arg1)
        {
            return SExecute<int>(LocalBridgeClazz, "getCodePoint", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#getCombiningClass(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public static int GetCombiningClass(int arg0)
        {
            return SExecuteWithSignature<int>(LocalBridgeClazz, "getCombiningClass", "(I)I", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#getDirection(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public static int GetDirection(int arg0)
        {
            return SExecuteWithSignature<int>(LocalBridgeClazz, "getDirection", "(I)I", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#getHanNumericValue(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public static int GetHanNumericValue(int arg0)
        {
            return SExecuteWithSignature<int>(LocalBridgeClazz, "getHanNumericValue", "(I)I", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#getIntPropertyMaxValue(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public static int GetIntPropertyMaxValue(int arg0)
        {
            return SExecuteWithSignature<int>(LocalBridgeClazz, "getIntPropertyMaxValue", "(I)I", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#getIntPropertyMinValue(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public static int GetIntPropertyMinValue(int arg0)
        {
            return SExecuteWithSignature<int>(LocalBridgeClazz, "getIntPropertyMinValue", "(I)I", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#getIntPropertyValue(int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public static int GetIntPropertyValue(int arg0, int arg1)
        {
            return SExecute<int>(LocalBridgeClazz, "getIntPropertyValue", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#getMirror(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public static int GetMirror(int arg0)
        {
            return SExecuteWithSignature<int>(LocalBridgeClazz, "getMirror", "(I)I", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#getNumericValue(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public static int GetNumericValue(int arg0)
        {
            return SExecuteWithSignature<int>(LocalBridgeClazz, "getNumericValue", "(I)I", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#getPropertyEnum(java.lang.CharSequence)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.CharSequence"/></param>
        /// <returns><see cref="int"/></returns>
        public static int GetPropertyEnum(Java.Lang.CharSequence arg0)
        {
            return SExecuteWithSignature<int>(LocalBridgeClazz, "getPropertyEnum", "(Ljava/lang/CharSequence;)I", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#getPropertyValueEnum(int,java.lang.CharSequence)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="Java.Lang.CharSequence"/></param>
        /// <returns><see cref="int"/></returns>
        public static int GetPropertyValueEnum(int arg0, Java.Lang.CharSequence arg1)
        {
            return SExecute<int>(LocalBridgeClazz, "getPropertyValueEnum", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#getType(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public static int GetType(int arg0)
        {
            return SExecuteWithSignature<int>(LocalBridgeClazz, "getType", "(I)I", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#offsetByCodePoints(char[],int,int,int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="char"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <param name="arg3"><see cref="int"/></param>
        /// <param name="arg4"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public static int OffsetByCodePoints(char[] arg0, int arg1, int arg2, int arg3, int arg4)
        {
            return SExecute<int>(LocalBridgeClazz, "offsetByCodePoints", arg0, arg1, arg2, arg3, arg4);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#offsetByCodePoints(java.lang.CharSequence,int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.CharSequence"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public static int OffsetByCodePoints(Java.Lang.CharSequence arg0, int arg1, int arg2)
        {
            return SExecute<int>(LocalBridgeClazz, "offsetByCodePoints", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#toChars(int,char[],int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="char"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public static int ToChars(int arg0, char[] arg1, int arg2)
        {
            return SExecute<int>(LocalBridgeClazz, "toChars", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#toCodePoint(char,char)"/>
        /// </summary>
        /// <param name="arg0"><see cref="char"/></param>
        /// <param name="arg1"><see cref="char"/></param>
        /// <returns><see cref="int"/></returns>
        public static int ToCodePoint(char arg0, char arg1)
        {
            return SExecute<int>(LocalBridgeClazz, "toCodePoint", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#toCodePoint(int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public static int ToCodePoint(int arg0, int arg1)
        {
            return SExecute<int>(LocalBridgeClazz, "toCodePoint", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#toLowerCase(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public static int ToLowerCase(int arg0)
        {
            return SExecuteWithSignature<int>(LocalBridgeClazz, "toLowerCase", "(I)I", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#toTitleCase(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public static int ToTitleCase(int arg0)
        {
            return SExecuteWithSignature<int>(LocalBridgeClazz, "toTitleCase", "(I)I", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#toUpperCase(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public static int ToUpperCase(int arg0)
        {
            return SExecuteWithSignature<int>(LocalBridgeClazz, "toUpperCase", "(I)I", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#foldCase(java.lang.String,boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="bool"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public static Java.Lang.String FoldCase(Java.Lang.String arg0, bool arg1)
        {
            return SExecute<Java.Lang.String>(LocalBridgeClazz, "foldCase", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#foldCase(java.lang.String,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public static Java.Lang.String FoldCase(Java.Lang.String arg0, int arg1)
        {
            return SExecute<Java.Lang.String>(LocalBridgeClazz, "foldCase", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#getExtendedName(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public static Java.Lang.String GetExtendedName(int arg0)
        {
            return SExecuteWithSignature<Java.Lang.String>(LocalBridgeClazz, "getExtendedName", "(I)Ljava/lang/String;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#getName(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public static Java.Lang.String GetName(int arg0)
        {
            return SExecuteWithSignature<Java.Lang.String>(LocalBridgeClazz, "getName", "(I)Ljava/lang/String;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#getName(java.lang.String,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public static Java.Lang.String GetName(Java.Lang.String arg0, Java.Lang.String arg1)
        {
            return SExecute<Java.Lang.String>(LocalBridgeClazz, "getName", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#getNameAlias(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public static Java.Lang.String GetNameAlias(int arg0)
        {
            return SExecuteWithSignature<Java.Lang.String>(LocalBridgeClazz, "getNameAlias", "(I)Ljava/lang/String;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#getPropertyName(int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public static Java.Lang.String GetPropertyName(int arg0, int arg1)
        {
            return SExecute<Java.Lang.String>(LocalBridgeClazz, "getPropertyName", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#getPropertyValueName(int,int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public static Java.Lang.String GetPropertyValueName(int arg0, int arg1, int arg2)
        {
            return SExecute<Java.Lang.String>(LocalBridgeClazz, "getPropertyValueName", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#toLowerCase(android.icu.util.ULocale,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Util.ULocale"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public static Java.Lang.String ToLowerCase(Android.Icu.Util.ULocale arg0, Java.Lang.String arg1)
        {
            return SExecute<Java.Lang.String>(LocalBridgeClazz, "toLowerCase", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#toLowerCase(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public static Java.Lang.String ToLowerCase(Java.Lang.String arg0)
        {
            return SExecuteWithSignature<Java.Lang.String>(LocalBridgeClazz, "toLowerCase", "(Ljava/lang/String;)Ljava/lang/String;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#toLowerCase(java.util.Locale,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Locale"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public static Java.Lang.String ToLowerCase(Java.Util.Locale arg0, Java.Lang.String arg1)
        {
            return SExecute<Java.Lang.String>(LocalBridgeClazz, "toLowerCase", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#toString(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public static Java.Lang.String ToString(int arg0)
        {
            return SExecuteWithSignature<Java.Lang.String>(LocalBridgeClazz, "toString", "(I)Ljava/lang/String;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#toTitleCase(android.icu.util.ULocale,java.lang.String,android.icu.text.BreakIterator,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Util.ULocale"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="Android.Icu.Text.BreakIterator"/></param>
        /// <param name="arg3"><see cref="int"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public static Java.Lang.String ToTitleCase(Android.Icu.Util.ULocale arg0, Java.Lang.String arg1, Android.Icu.Text.BreakIterator arg2, int arg3)
        {
            return SExecute<Java.Lang.String>(LocalBridgeClazz, "toTitleCase", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#toTitleCase(android.icu.util.ULocale,java.lang.String,android.icu.text.BreakIterator)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Util.ULocale"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="Android.Icu.Text.BreakIterator"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public static Java.Lang.String ToTitleCase(Android.Icu.Util.ULocale arg0, Java.Lang.String arg1, Android.Icu.Text.BreakIterator arg2)
        {
            return SExecute<Java.Lang.String>(LocalBridgeClazz, "toTitleCase", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#toTitleCase(java.lang.String,android.icu.text.BreakIterator)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Android.Icu.Text.BreakIterator"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public static Java.Lang.String ToTitleCase(Java.Lang.String arg0, Android.Icu.Text.BreakIterator arg1)
        {
            return SExecute<Java.Lang.String>(LocalBridgeClazz, "toTitleCase", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#toTitleCase(java.util.Locale,java.lang.String,android.icu.text.BreakIterator,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Locale"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="Android.Icu.Text.BreakIterator"/></param>
        /// <param name="arg3"><see cref="int"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public static Java.Lang.String ToTitleCase(Java.Util.Locale arg0, Java.Lang.String arg1, Android.Icu.Text.BreakIterator arg2, int arg3)
        {
            return SExecute<Java.Lang.String>(LocalBridgeClazz, "toTitleCase", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#toTitleCase(java.util.Locale,java.lang.String,android.icu.text.BreakIterator)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Locale"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="Android.Icu.Text.BreakIterator"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public static Java.Lang.String ToTitleCase(Java.Util.Locale arg0, Java.Lang.String arg1, Android.Icu.Text.BreakIterator arg2)
        {
            return SExecute<Java.Lang.String>(LocalBridgeClazz, "toTitleCase", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#toUpperCase(android.icu.util.ULocale,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Icu.Util.ULocale"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public static Java.Lang.String ToUpperCase(Android.Icu.Util.ULocale arg0, Java.Lang.String arg1)
        {
            return SExecute<Java.Lang.String>(LocalBridgeClazz, "toUpperCase", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#toUpperCase(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public static Java.Lang.String ToUpperCase(Java.Lang.String arg0)
        {
            return SExecuteWithSignature<Java.Lang.String>(LocalBridgeClazz, "toUpperCase", "(Ljava/lang/String;)Ljava/lang/String;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.html#toUpperCase(java.util.Locale,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Locale"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public static Java.Lang.String ToUpperCase(Java.Util.Locale arg0, Java.Lang.String arg1)
        {
            return SExecute<Java.Lang.String>(LocalBridgeClazz, "toUpperCase", arg0, arg1);
        }

        #endregion

        #region Instance methods

        #endregion

        #region Nested classes
        #region BidiPairedBracketType
        public partial class BidiPairedBracketType
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.BidiPairedBracketType.html#CLOSE"/>
            /// </summary>
            public static int CLOSE { get { if (!_CLOSEReady) { _CLOSEContent = SGetField<int>(LocalBridgeClazz, "CLOSE"); _CLOSEReady = true; } return _CLOSEContent; } }
            private static int _CLOSEContent = default;
            private static bool _CLOSEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.BidiPairedBracketType.html#NONE"/>
            /// </summary>
            public static int NONE { get { if (!_NONEReady) { _NONEContent = SGetField<int>(LocalBridgeClazz, "NONE"); _NONEReady = true; } return _NONEContent; } }
            private static int _NONEContent = default;
            private static bool _NONEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.BidiPairedBracketType.html#OPEN"/>
            /// </summary>
            public static int OPEN { get { if (!_OPENReady) { _OPENContent = SGetField<int>(LocalBridgeClazz, "OPEN"); _OPENReady = true; } return _OPENContent; } }
            private static int _OPENContent = default;
            private static bool _OPENReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region DecompositionType
        public partial class DecompositionType
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.DecompositionType.html#CANONICAL"/>
            /// </summary>
            public static int CANONICAL { get { if (!_CANONICALReady) { _CANONICALContent = SGetField<int>(LocalBridgeClazz, "CANONICAL"); _CANONICALReady = true; } return _CANONICALContent; } }
            private static int _CANONICALContent = default;
            private static bool _CANONICALReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.DecompositionType.html#CIRCLE"/>
            /// </summary>
            public static int CIRCLE { get { if (!_CIRCLEReady) { _CIRCLEContent = SGetField<int>(LocalBridgeClazz, "CIRCLE"); _CIRCLEReady = true; } return _CIRCLEContent; } }
            private static int _CIRCLEContent = default;
            private static bool _CIRCLEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.DecompositionType.html#COMPAT"/>
            /// </summary>
            public static int COMPAT { get { if (!_COMPATReady) { _COMPATContent = SGetField<int>(LocalBridgeClazz, "COMPAT"); _COMPATReady = true; } return _COMPATContent; } }
            private static int _COMPATContent = default;
            private static bool _COMPATReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.DecompositionType.html#FINAL"/>
            /// </summary>
            public static int FINAL { get { if (!_FINALReady) { _FINALContent = SGetField<int>(LocalBridgeClazz, "FINAL"); _FINALReady = true; } return _FINALContent; } }
            private static int _FINALContent = default;
            private static bool _FINALReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.DecompositionType.html#FONT"/>
            /// </summary>
            public static int FONT { get { if (!_FONTReady) { _FONTContent = SGetField<int>(LocalBridgeClazz, "FONT"); _FONTReady = true; } return _FONTContent; } }
            private static int _FONTContent = default;
            private static bool _FONTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.DecompositionType.html#FRACTION"/>
            /// </summary>
            public static int FRACTION { get { if (!_FRACTIONReady) { _FRACTIONContent = SGetField<int>(LocalBridgeClazz, "FRACTION"); _FRACTIONReady = true; } return _FRACTIONContent; } }
            private static int _FRACTIONContent = default;
            private static bool _FRACTIONReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.DecompositionType.html#INITIAL"/>
            /// </summary>
            public static int INITIAL { get { if (!_INITIALReady) { _INITIALContent = SGetField<int>(LocalBridgeClazz, "INITIAL"); _INITIALReady = true; } return _INITIALContent; } }
            private static int _INITIALContent = default;
            private static bool _INITIALReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.DecompositionType.html#ISOLATED"/>
            /// </summary>
            public static int ISOLATED { get { if (!_ISOLATEDReady) { _ISOLATEDContent = SGetField<int>(LocalBridgeClazz, "ISOLATED"); _ISOLATEDReady = true; } return _ISOLATEDContent; } }
            private static int _ISOLATEDContent = default;
            private static bool _ISOLATEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.DecompositionType.html#MEDIAL"/>
            /// </summary>
            public static int MEDIAL { get { if (!_MEDIALReady) { _MEDIALContent = SGetField<int>(LocalBridgeClazz, "MEDIAL"); _MEDIALReady = true; } return _MEDIALContent; } }
            private static int _MEDIALContent = default;
            private static bool _MEDIALReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.DecompositionType.html#NARROW"/>
            /// </summary>
            public static int NARROW { get { if (!_NARROWReady) { _NARROWContent = SGetField<int>(LocalBridgeClazz, "NARROW"); _NARROWReady = true; } return _NARROWContent; } }
            private static int _NARROWContent = default;
            private static bool _NARROWReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.DecompositionType.html#NOBREAK"/>
            /// </summary>
            public static int NOBREAK { get { if (!_NOBREAKReady) { _NOBREAKContent = SGetField<int>(LocalBridgeClazz, "NOBREAK"); _NOBREAKReady = true; } return _NOBREAKContent; } }
            private static int _NOBREAKContent = default;
            private static bool _NOBREAKReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.DecompositionType.html#NONE"/>
            /// </summary>
            public static int NONE { get { if (!_NONEReady) { _NONEContent = SGetField<int>(LocalBridgeClazz, "NONE"); _NONEReady = true; } return _NONEContent; } }
            private static int _NONEContent = default;
            private static bool _NONEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.DecompositionType.html#SMALL"/>
            /// </summary>
            public static int SMALL { get { if (!_SMALLReady) { _SMALLContent = SGetField<int>(LocalBridgeClazz, "SMALL"); _SMALLReady = true; } return _SMALLContent; } }
            private static int _SMALLContent = default;
            private static bool _SMALLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.DecompositionType.html#SQUARE"/>
            /// </summary>
            public static int SQUARE { get { if (!_SQUAREReady) { _SQUAREContent = SGetField<int>(LocalBridgeClazz, "SQUARE"); _SQUAREReady = true; } return _SQUAREContent; } }
            private static int _SQUAREContent = default;
            private static bool _SQUAREReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.DecompositionType.html#SUB"/>
            /// </summary>
            public static int SUB { get { if (!_SUBReady) { _SUBContent = SGetField<int>(LocalBridgeClazz, "SUB"); _SUBReady = true; } return _SUBContent; } }
            private static int _SUBContent = default;
            private static bool _SUBReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.DecompositionType.html#SUPER"/>
            /// </summary>
            public static int SUPER { get { if (!_SUPERReady) { _SUPERContent = SGetField<int>(LocalBridgeClazz, "SUPER"); _SUPERReady = true; } return _SUPERContent; } }
            private static int _SUPERContent = default;
            private static bool _SUPERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.DecompositionType.html#VERTICAL"/>
            /// </summary>
            public static int VERTICAL { get { if (!_VERTICALReady) { _VERTICALContent = SGetField<int>(LocalBridgeClazz, "VERTICAL"); _VERTICALReady = true; } return _VERTICALContent; } }
            private static int _VERTICALContent = default;
            private static bool _VERTICALReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.DecompositionType.html#WIDE"/>
            /// </summary>
            public static int WIDE { get { if (!_WIDEReady) { _WIDEContent = SGetField<int>(LocalBridgeClazz, "WIDE"); _WIDEReady = true; } return _WIDEContent; } }
            private static int _WIDEContent = default;
            private static bool _WIDEReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region EastAsianWidth
        public partial class EastAsianWidth
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.EastAsianWidth.html#AMBIGUOUS"/>
            /// </summary>
            public static int AMBIGUOUS { get { if (!_AMBIGUOUSReady) { _AMBIGUOUSContent = SGetField<int>(LocalBridgeClazz, "AMBIGUOUS"); _AMBIGUOUSReady = true; } return _AMBIGUOUSContent; } }
            private static int _AMBIGUOUSContent = default;
            private static bool _AMBIGUOUSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.EastAsianWidth.html#FULLWIDTH"/>
            /// </summary>
            public static int FULLWIDTH { get { if (!_FULLWIDTHReady) { _FULLWIDTHContent = SGetField<int>(LocalBridgeClazz, "FULLWIDTH"); _FULLWIDTHReady = true; } return _FULLWIDTHContent; } }
            private static int _FULLWIDTHContent = default;
            private static bool _FULLWIDTHReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.EastAsianWidth.html#HALFWIDTH"/>
            /// </summary>
            public static int HALFWIDTH { get { if (!_HALFWIDTHReady) { _HALFWIDTHContent = SGetField<int>(LocalBridgeClazz, "HALFWIDTH"); _HALFWIDTHReady = true; } return _HALFWIDTHContent; } }
            private static int _HALFWIDTHContent = default;
            private static bool _HALFWIDTHReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.EastAsianWidth.html#NARROW"/>
            /// </summary>
            public static int NARROW { get { if (!_NARROWReady) { _NARROWContent = SGetField<int>(LocalBridgeClazz, "NARROW"); _NARROWReady = true; } return _NARROWContent; } }
            private static int _NARROWContent = default;
            private static bool _NARROWReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.EastAsianWidth.html#NEUTRAL"/>
            /// </summary>
            public static int NEUTRAL { get { if (!_NEUTRALReady) { _NEUTRALContent = SGetField<int>(LocalBridgeClazz, "NEUTRAL"); _NEUTRALReady = true; } return _NEUTRALContent; } }
            private static int _NEUTRALContent = default;
            private static bool _NEUTRALReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.EastAsianWidth.html#WIDE"/>
            /// </summary>
            public static int WIDE { get { if (!_WIDEReady) { _WIDEContent = SGetField<int>(LocalBridgeClazz, "WIDE"); _WIDEReady = true; } return _WIDEContent; } }
            private static int _WIDEContent = default;
            private static bool _WIDEReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region GraphemeClusterBreak
        public partial class GraphemeClusterBreak
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.GraphemeClusterBreak.html#CONTROL"/>
            /// </summary>
            public static int CONTROL { get { if (!_CONTROLReady) { _CONTROLContent = SGetField<int>(LocalBridgeClazz, "CONTROL"); _CONTROLReady = true; } return _CONTROLContent; } }
            private static int _CONTROLContent = default;
            private static bool _CONTROLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.GraphemeClusterBreak.html#CR"/>
            /// </summary>
            public static int CR { get { if (!_CRReady) { _CRContent = SGetField<int>(LocalBridgeClazz, "CR"); _CRReady = true; } return _CRContent; } }
            private static int _CRContent = default;
            private static bool _CRReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.GraphemeClusterBreak.html#E_BASE"/>
            /// </summary>
            public static int E_BASE { get { if (!_E_BASEReady) { _E_BASEContent = SGetField<int>(LocalBridgeClazz, "E_BASE"); _E_BASEReady = true; } return _E_BASEContent; } }
            private static int _E_BASEContent = default;
            private static bool _E_BASEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.GraphemeClusterBreak.html#E_BASE_GAZ"/>
            /// </summary>
            public static int E_BASE_GAZ { get { if (!_E_BASE_GAZReady) { _E_BASE_GAZContent = SGetField<int>(LocalBridgeClazz, "E_BASE_GAZ"); _E_BASE_GAZReady = true; } return _E_BASE_GAZContent; } }
            private static int _E_BASE_GAZContent = default;
            private static bool _E_BASE_GAZReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.GraphemeClusterBreak.html#E_MODIFIER"/>
            /// </summary>
            public static int E_MODIFIER { get { if (!_E_MODIFIERReady) { _E_MODIFIERContent = SGetField<int>(LocalBridgeClazz, "E_MODIFIER"); _E_MODIFIERReady = true; } return _E_MODIFIERContent; } }
            private static int _E_MODIFIERContent = default;
            private static bool _E_MODIFIERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.GraphemeClusterBreak.html#EXTEND"/>
            /// </summary>
            public static int EXTEND { get { if (!_EXTENDReady) { _EXTENDContent = SGetField<int>(LocalBridgeClazz, "EXTEND"); _EXTENDReady = true; } return _EXTENDContent; } }
            private static int _EXTENDContent = default;
            private static bool _EXTENDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.GraphemeClusterBreak.html#GLUE_AFTER_ZWJ"/>
            /// </summary>
            public static int GLUE_AFTER_ZWJ { get { if (!_GLUE_AFTER_ZWJReady) { _GLUE_AFTER_ZWJContent = SGetField<int>(LocalBridgeClazz, "GLUE_AFTER_ZWJ"); _GLUE_AFTER_ZWJReady = true; } return _GLUE_AFTER_ZWJContent; } }
            private static int _GLUE_AFTER_ZWJContent = default;
            private static bool _GLUE_AFTER_ZWJReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.GraphemeClusterBreak.html#L"/>
            /// </summary>
            public static int L { get { if (!_LReady) { _LContent = SGetField<int>(LocalBridgeClazz, "L"); _LReady = true; } return _LContent; } }
            private static int _LContent = default;
            private static bool _LReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.GraphemeClusterBreak.html#LF"/>
            /// </summary>
            public static int LF { get { if (!_LFReady) { _LFContent = SGetField<int>(LocalBridgeClazz, "LF"); _LFReady = true; } return _LFContent; } }
            private static int _LFContent = default;
            private static bool _LFReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.GraphemeClusterBreak.html#LV"/>
            /// </summary>
            public static int LV { get { if (!_LVReady) { _LVContent = SGetField<int>(LocalBridgeClazz, "LV"); _LVReady = true; } return _LVContent; } }
            private static int _LVContent = default;
            private static bool _LVReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.GraphemeClusterBreak.html#LVT"/>
            /// </summary>
            public static int LVT { get { if (!_LVTReady) { _LVTContent = SGetField<int>(LocalBridgeClazz, "LVT"); _LVTReady = true; } return _LVTContent; } }
            private static int _LVTContent = default;
            private static bool _LVTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.GraphemeClusterBreak.html#OTHER"/>
            /// </summary>
            public static int OTHER { get { if (!_OTHERReady) { _OTHERContent = SGetField<int>(LocalBridgeClazz, "OTHER"); _OTHERReady = true; } return _OTHERContent; } }
            private static int _OTHERContent = default;
            private static bool _OTHERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.GraphemeClusterBreak.html#PREPEND"/>
            /// </summary>
            public static int PREPEND { get { if (!_PREPENDReady) { _PREPENDContent = SGetField<int>(LocalBridgeClazz, "PREPEND"); _PREPENDReady = true; } return _PREPENDContent; } }
            private static int _PREPENDContent = default;
            private static bool _PREPENDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.GraphemeClusterBreak.html#REGIONAL_INDICATOR"/>
            /// </summary>
            public static int REGIONAL_INDICATOR { get { if (!_REGIONAL_INDICATORReady) { _REGIONAL_INDICATORContent = SGetField<int>(LocalBridgeClazz, "REGIONAL_INDICATOR"); _REGIONAL_INDICATORReady = true; } return _REGIONAL_INDICATORContent; } }
            private static int _REGIONAL_INDICATORContent = default;
            private static bool _REGIONAL_INDICATORReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.GraphemeClusterBreak.html#SPACING_MARK"/>
            /// </summary>
            public static int SPACING_MARK { get { if (!_SPACING_MARKReady) { _SPACING_MARKContent = SGetField<int>(LocalBridgeClazz, "SPACING_MARK"); _SPACING_MARKReady = true; } return _SPACING_MARKContent; } }
            private static int _SPACING_MARKContent = default;
            private static bool _SPACING_MARKReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.GraphemeClusterBreak.html#T"/>
            /// </summary>
            public static int T { get { if (!_TReady) { _TContent = SGetField<int>(LocalBridgeClazz, "T"); _TReady = true; } return _TContent; } }
            private static int _TContent = default;
            private static bool _TReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.GraphemeClusterBreak.html#V"/>
            /// </summary>
            public static int V { get { if (!_VReady) { _VContent = SGetField<int>(LocalBridgeClazz, "V"); _VReady = true; } return _VContent; } }
            private static int _VContent = default;
            private static bool _VReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.GraphemeClusterBreak.html#ZWJ"/>
            /// </summary>
            public static int ZWJ { get { if (!_ZWJReady) { _ZWJContent = SGetField<int>(LocalBridgeClazz, "ZWJ"); _ZWJReady = true; } return _ZWJContent; } }
            private static int _ZWJContent = default;
            private static bool _ZWJReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region HangulSyllableType
        public partial class HangulSyllableType
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.HangulSyllableType.html#LEADING_JAMO"/>
            /// </summary>
            public static int LEADING_JAMO { get { if (!_LEADING_JAMOReady) { _LEADING_JAMOContent = SGetField<int>(LocalBridgeClazz, "LEADING_JAMO"); _LEADING_JAMOReady = true; } return _LEADING_JAMOContent; } }
            private static int _LEADING_JAMOContent = default;
            private static bool _LEADING_JAMOReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.HangulSyllableType.html#LV_SYLLABLE"/>
            /// </summary>
            public static int LV_SYLLABLE { get { if (!_LV_SYLLABLEReady) { _LV_SYLLABLEContent = SGetField<int>(LocalBridgeClazz, "LV_SYLLABLE"); _LV_SYLLABLEReady = true; } return _LV_SYLLABLEContent; } }
            private static int _LV_SYLLABLEContent = default;
            private static bool _LV_SYLLABLEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.HangulSyllableType.html#LVT_SYLLABLE"/>
            /// </summary>
            public static int LVT_SYLLABLE { get { if (!_LVT_SYLLABLEReady) { _LVT_SYLLABLEContent = SGetField<int>(LocalBridgeClazz, "LVT_SYLLABLE"); _LVT_SYLLABLEReady = true; } return _LVT_SYLLABLEContent; } }
            private static int _LVT_SYLLABLEContent = default;
            private static bool _LVT_SYLLABLEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.HangulSyllableType.html#NOT_APPLICABLE"/>
            /// </summary>
            public static int NOT_APPLICABLE { get { if (!_NOT_APPLICABLEReady) { _NOT_APPLICABLEContent = SGetField<int>(LocalBridgeClazz, "NOT_APPLICABLE"); _NOT_APPLICABLEReady = true; } return _NOT_APPLICABLEContent; } }
            private static int _NOT_APPLICABLEContent = default;
            private static bool _NOT_APPLICABLEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.HangulSyllableType.html#TRAILING_JAMO"/>
            /// </summary>
            public static int TRAILING_JAMO { get { if (!_TRAILING_JAMOReady) { _TRAILING_JAMOContent = SGetField<int>(LocalBridgeClazz, "TRAILING_JAMO"); _TRAILING_JAMOReady = true; } return _TRAILING_JAMOContent; } }
            private static int _TRAILING_JAMOContent = default;
            private static bool _TRAILING_JAMOReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.HangulSyllableType.html#VOWEL_JAMO"/>
            /// </summary>
            public static int VOWEL_JAMO { get { if (!_VOWEL_JAMOReady) { _VOWEL_JAMOContent = SGetField<int>(LocalBridgeClazz, "VOWEL_JAMO"); _VOWEL_JAMOReady = true; } return _VOWEL_JAMOContent; } }
            private static int _VOWEL_JAMOContent = default;
            private static bool _VOWEL_JAMOReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region IndicPositionalCategory
        public partial class IndicPositionalCategory
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.IndicPositionalCategory.html#BOTTOM"/>
            /// </summary>
            public static int BOTTOM { get { if (!_BOTTOMReady) { _BOTTOMContent = SGetField<int>(LocalBridgeClazz, "BOTTOM"); _BOTTOMReady = true; } return _BOTTOMContent; } }
            private static int _BOTTOMContent = default;
            private static bool _BOTTOMReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.IndicPositionalCategory.html#BOTTOM_AND_LEFT"/>
            /// </summary>
            public static int BOTTOM_AND_LEFT { get { if (!_BOTTOM_AND_LEFTReady) { _BOTTOM_AND_LEFTContent = SGetField<int>(LocalBridgeClazz, "BOTTOM_AND_LEFT"); _BOTTOM_AND_LEFTReady = true; } return _BOTTOM_AND_LEFTContent; } }
            private static int _BOTTOM_AND_LEFTContent = default;
            private static bool _BOTTOM_AND_LEFTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.IndicPositionalCategory.html#BOTTOM_AND_RIGHT"/>
            /// </summary>
            public static int BOTTOM_AND_RIGHT { get { if (!_BOTTOM_AND_RIGHTReady) { _BOTTOM_AND_RIGHTContent = SGetField<int>(LocalBridgeClazz, "BOTTOM_AND_RIGHT"); _BOTTOM_AND_RIGHTReady = true; } return _BOTTOM_AND_RIGHTContent; } }
            private static int _BOTTOM_AND_RIGHTContent = default;
            private static bool _BOTTOM_AND_RIGHTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.IndicPositionalCategory.html#LEFT"/>
            /// </summary>
            public static int LEFT { get { if (!_LEFTReady) { _LEFTContent = SGetField<int>(LocalBridgeClazz, "LEFT"); _LEFTReady = true; } return _LEFTContent; } }
            private static int _LEFTContent = default;
            private static bool _LEFTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.IndicPositionalCategory.html#LEFT_AND_RIGHT"/>
            /// </summary>
            public static int LEFT_AND_RIGHT { get { if (!_LEFT_AND_RIGHTReady) { _LEFT_AND_RIGHTContent = SGetField<int>(LocalBridgeClazz, "LEFT_AND_RIGHT"); _LEFT_AND_RIGHTReady = true; } return _LEFT_AND_RIGHTContent; } }
            private static int _LEFT_AND_RIGHTContent = default;
            private static bool _LEFT_AND_RIGHTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.IndicPositionalCategory.html#NA"/>
            /// </summary>
            public static int NA { get { if (!_NAReady) { _NAContent = SGetField<int>(LocalBridgeClazz, "NA"); _NAReady = true; } return _NAContent; } }
            private static int _NAContent = default;
            private static bool _NAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.IndicPositionalCategory.html#OVERSTRUCK"/>
            /// </summary>
            public static int OVERSTRUCK { get { if (!_OVERSTRUCKReady) { _OVERSTRUCKContent = SGetField<int>(LocalBridgeClazz, "OVERSTRUCK"); _OVERSTRUCKReady = true; } return _OVERSTRUCKContent; } }
            private static int _OVERSTRUCKContent = default;
            private static bool _OVERSTRUCKReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.IndicPositionalCategory.html#RIGHT"/>
            /// </summary>
            public static int RIGHT { get { if (!_RIGHTReady) { _RIGHTContent = SGetField<int>(LocalBridgeClazz, "RIGHT"); _RIGHTReady = true; } return _RIGHTContent; } }
            private static int _RIGHTContent = default;
            private static bool _RIGHTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.IndicPositionalCategory.html#TOP"/>
            /// </summary>
            public static int TOP { get { if (!_TOPReady) { _TOPContent = SGetField<int>(LocalBridgeClazz, "TOP"); _TOPReady = true; } return _TOPContent; } }
            private static int _TOPContent = default;
            private static bool _TOPReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.IndicPositionalCategory.html#TOP_AND_BOTTOM"/>
            /// </summary>
            public static int TOP_AND_BOTTOM { get { if (!_TOP_AND_BOTTOMReady) { _TOP_AND_BOTTOMContent = SGetField<int>(LocalBridgeClazz, "TOP_AND_BOTTOM"); _TOP_AND_BOTTOMReady = true; } return _TOP_AND_BOTTOMContent; } }
            private static int _TOP_AND_BOTTOMContent = default;
            private static bool _TOP_AND_BOTTOMReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.IndicPositionalCategory.html#TOP_AND_BOTTOM_AND_LEFT"/>
            /// </summary>
            public static int TOP_AND_BOTTOM_AND_LEFT { get { if (!_TOP_AND_BOTTOM_AND_LEFTReady) { _TOP_AND_BOTTOM_AND_LEFTContent = SGetField<int>(LocalBridgeClazz, "TOP_AND_BOTTOM_AND_LEFT"); _TOP_AND_BOTTOM_AND_LEFTReady = true; } return _TOP_AND_BOTTOM_AND_LEFTContent; } }
            private static int _TOP_AND_BOTTOM_AND_LEFTContent = default;
            private static bool _TOP_AND_BOTTOM_AND_LEFTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.IndicPositionalCategory.html#TOP_AND_BOTTOM_AND_RIGHT"/>
            /// </summary>
            public static int TOP_AND_BOTTOM_AND_RIGHT { get { if (!_TOP_AND_BOTTOM_AND_RIGHTReady) { _TOP_AND_BOTTOM_AND_RIGHTContent = SGetField<int>(LocalBridgeClazz, "TOP_AND_BOTTOM_AND_RIGHT"); _TOP_AND_BOTTOM_AND_RIGHTReady = true; } return _TOP_AND_BOTTOM_AND_RIGHTContent; } }
            private static int _TOP_AND_BOTTOM_AND_RIGHTContent = default;
            private static bool _TOP_AND_BOTTOM_AND_RIGHTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.IndicPositionalCategory.html#TOP_AND_LEFT"/>
            /// </summary>
            public static int TOP_AND_LEFT { get { if (!_TOP_AND_LEFTReady) { _TOP_AND_LEFTContent = SGetField<int>(LocalBridgeClazz, "TOP_AND_LEFT"); _TOP_AND_LEFTReady = true; } return _TOP_AND_LEFTContent; } }
            private static int _TOP_AND_LEFTContent = default;
            private static bool _TOP_AND_LEFTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.IndicPositionalCategory.html#TOP_AND_LEFT_AND_RIGHT"/>
            /// </summary>
            public static int TOP_AND_LEFT_AND_RIGHT { get { if (!_TOP_AND_LEFT_AND_RIGHTReady) { _TOP_AND_LEFT_AND_RIGHTContent = SGetField<int>(LocalBridgeClazz, "TOP_AND_LEFT_AND_RIGHT"); _TOP_AND_LEFT_AND_RIGHTReady = true; } return _TOP_AND_LEFT_AND_RIGHTContent; } }
            private static int _TOP_AND_LEFT_AND_RIGHTContent = default;
            private static bool _TOP_AND_LEFT_AND_RIGHTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.IndicPositionalCategory.html#TOP_AND_RIGHT"/>
            /// </summary>
            public static int TOP_AND_RIGHT { get { if (!_TOP_AND_RIGHTReady) { _TOP_AND_RIGHTContent = SGetField<int>(LocalBridgeClazz, "TOP_AND_RIGHT"); _TOP_AND_RIGHTReady = true; } return _TOP_AND_RIGHTContent; } }
            private static int _TOP_AND_RIGHTContent = default;
            private static bool _TOP_AND_RIGHTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.IndicPositionalCategory.html#VISUAL_ORDER_LEFT"/>
            /// </summary>
            public static int VISUAL_ORDER_LEFT { get { if (!_VISUAL_ORDER_LEFTReady) { _VISUAL_ORDER_LEFTContent = SGetField<int>(LocalBridgeClazz, "VISUAL_ORDER_LEFT"); _VISUAL_ORDER_LEFTReady = true; } return _VISUAL_ORDER_LEFTContent; } }
            private static int _VISUAL_ORDER_LEFTContent = default;
            private static bool _VISUAL_ORDER_LEFTReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region IndicSyllabicCategory
        public partial class IndicSyllabicCategory
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.IndicSyllabicCategory.html#AVAGRAHA"/>
            /// </summary>
            public static int AVAGRAHA { get { if (!_AVAGRAHAReady) { _AVAGRAHAContent = SGetField<int>(LocalBridgeClazz, "AVAGRAHA"); _AVAGRAHAReady = true; } return _AVAGRAHAContent; } }
            private static int _AVAGRAHAContent = default;
            private static bool _AVAGRAHAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.IndicSyllabicCategory.html#BINDU"/>
            /// </summary>
            public static int BINDU { get { if (!_BINDUReady) { _BINDUContent = SGetField<int>(LocalBridgeClazz, "BINDU"); _BINDUReady = true; } return _BINDUContent; } }
            private static int _BINDUContent = default;
            private static bool _BINDUReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.IndicSyllabicCategory.html#BRAHMI_JOINING_NUMBER"/>
            /// </summary>
            public static int BRAHMI_JOINING_NUMBER { get { if (!_BRAHMI_JOINING_NUMBERReady) { _BRAHMI_JOINING_NUMBERContent = SGetField<int>(LocalBridgeClazz, "BRAHMI_JOINING_NUMBER"); _BRAHMI_JOINING_NUMBERReady = true; } return _BRAHMI_JOINING_NUMBERContent; } }
            private static int _BRAHMI_JOINING_NUMBERContent = default;
            private static bool _BRAHMI_JOINING_NUMBERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.IndicSyllabicCategory.html#CANTILLATION_MARK"/>
            /// </summary>
            public static int CANTILLATION_MARK { get { if (!_CANTILLATION_MARKReady) { _CANTILLATION_MARKContent = SGetField<int>(LocalBridgeClazz, "CANTILLATION_MARK"); _CANTILLATION_MARKReady = true; } return _CANTILLATION_MARKContent; } }
            private static int _CANTILLATION_MARKContent = default;
            private static bool _CANTILLATION_MARKReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.IndicSyllabicCategory.html#CONSONANT"/>
            /// </summary>
            public static int CONSONANT { get { if (!_CONSONANTReady) { _CONSONANTContent = SGetField<int>(LocalBridgeClazz, "CONSONANT"); _CONSONANTReady = true; } return _CONSONANTContent; } }
            private static int _CONSONANTContent = default;
            private static bool _CONSONANTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.IndicSyllabicCategory.html#CONSONANT_DEAD"/>
            /// </summary>
            public static int CONSONANT_DEAD { get { if (!_CONSONANT_DEADReady) { _CONSONANT_DEADContent = SGetField<int>(LocalBridgeClazz, "CONSONANT_DEAD"); _CONSONANT_DEADReady = true; } return _CONSONANT_DEADContent; } }
            private static int _CONSONANT_DEADContent = default;
            private static bool _CONSONANT_DEADReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.IndicSyllabicCategory.html#CONSONANT_FINAL"/>
            /// </summary>
            public static int CONSONANT_FINAL { get { if (!_CONSONANT_FINALReady) { _CONSONANT_FINALContent = SGetField<int>(LocalBridgeClazz, "CONSONANT_FINAL"); _CONSONANT_FINALReady = true; } return _CONSONANT_FINALContent; } }
            private static int _CONSONANT_FINALContent = default;
            private static bool _CONSONANT_FINALReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.IndicSyllabicCategory.html#CONSONANT_HEAD_LETTER"/>
            /// </summary>
            public static int CONSONANT_HEAD_LETTER { get { if (!_CONSONANT_HEAD_LETTERReady) { _CONSONANT_HEAD_LETTERContent = SGetField<int>(LocalBridgeClazz, "CONSONANT_HEAD_LETTER"); _CONSONANT_HEAD_LETTERReady = true; } return _CONSONANT_HEAD_LETTERContent; } }
            private static int _CONSONANT_HEAD_LETTERContent = default;
            private static bool _CONSONANT_HEAD_LETTERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.IndicSyllabicCategory.html#CONSONANT_INITIAL_POSTFIXED"/>
            /// </summary>
            public static int CONSONANT_INITIAL_POSTFIXED { get { if (!_CONSONANT_INITIAL_POSTFIXEDReady) { _CONSONANT_INITIAL_POSTFIXEDContent = SGetField<int>(LocalBridgeClazz, "CONSONANT_INITIAL_POSTFIXED"); _CONSONANT_INITIAL_POSTFIXEDReady = true; } return _CONSONANT_INITIAL_POSTFIXEDContent; } }
            private static int _CONSONANT_INITIAL_POSTFIXEDContent = default;
            private static bool _CONSONANT_INITIAL_POSTFIXEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.IndicSyllabicCategory.html#CONSONANT_KILLER"/>
            /// </summary>
            public static int CONSONANT_KILLER { get { if (!_CONSONANT_KILLERReady) { _CONSONANT_KILLERContent = SGetField<int>(LocalBridgeClazz, "CONSONANT_KILLER"); _CONSONANT_KILLERReady = true; } return _CONSONANT_KILLERContent; } }
            private static int _CONSONANT_KILLERContent = default;
            private static bool _CONSONANT_KILLERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.IndicSyllabicCategory.html#CONSONANT_MEDIAL"/>
            /// </summary>
            public static int CONSONANT_MEDIAL { get { if (!_CONSONANT_MEDIALReady) { _CONSONANT_MEDIALContent = SGetField<int>(LocalBridgeClazz, "CONSONANT_MEDIAL"); _CONSONANT_MEDIALReady = true; } return _CONSONANT_MEDIALContent; } }
            private static int _CONSONANT_MEDIALContent = default;
            private static bool _CONSONANT_MEDIALReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.IndicSyllabicCategory.html#CONSONANT_PLACEHOLDER"/>
            /// </summary>
            public static int CONSONANT_PLACEHOLDER { get { if (!_CONSONANT_PLACEHOLDERReady) { _CONSONANT_PLACEHOLDERContent = SGetField<int>(LocalBridgeClazz, "CONSONANT_PLACEHOLDER"); _CONSONANT_PLACEHOLDERReady = true; } return _CONSONANT_PLACEHOLDERContent; } }
            private static int _CONSONANT_PLACEHOLDERContent = default;
            private static bool _CONSONANT_PLACEHOLDERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.IndicSyllabicCategory.html#CONSONANT_PRECEDING_REPHA"/>
            /// </summary>
            public static int CONSONANT_PRECEDING_REPHA { get { if (!_CONSONANT_PRECEDING_REPHAReady) { _CONSONANT_PRECEDING_REPHAContent = SGetField<int>(LocalBridgeClazz, "CONSONANT_PRECEDING_REPHA"); _CONSONANT_PRECEDING_REPHAReady = true; } return _CONSONANT_PRECEDING_REPHAContent; } }
            private static int _CONSONANT_PRECEDING_REPHAContent = default;
            private static bool _CONSONANT_PRECEDING_REPHAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.IndicSyllabicCategory.html#CONSONANT_PREFIXED"/>
            /// </summary>
            public static int CONSONANT_PREFIXED { get { if (!_CONSONANT_PREFIXEDReady) { _CONSONANT_PREFIXEDContent = SGetField<int>(LocalBridgeClazz, "CONSONANT_PREFIXED"); _CONSONANT_PREFIXEDReady = true; } return _CONSONANT_PREFIXEDContent; } }
            private static int _CONSONANT_PREFIXEDContent = default;
            private static bool _CONSONANT_PREFIXEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.IndicSyllabicCategory.html#CONSONANT_SUBJOINED"/>
            /// </summary>
            public static int CONSONANT_SUBJOINED { get { if (!_CONSONANT_SUBJOINEDReady) { _CONSONANT_SUBJOINEDContent = SGetField<int>(LocalBridgeClazz, "CONSONANT_SUBJOINED"); _CONSONANT_SUBJOINEDReady = true; } return _CONSONANT_SUBJOINEDContent; } }
            private static int _CONSONANT_SUBJOINEDContent = default;
            private static bool _CONSONANT_SUBJOINEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.IndicSyllabicCategory.html#CONSONANT_SUCCEEDING_REPHA"/>
            /// </summary>
            public static int CONSONANT_SUCCEEDING_REPHA { get { if (!_CONSONANT_SUCCEEDING_REPHAReady) { _CONSONANT_SUCCEEDING_REPHAContent = SGetField<int>(LocalBridgeClazz, "CONSONANT_SUCCEEDING_REPHA"); _CONSONANT_SUCCEEDING_REPHAReady = true; } return _CONSONANT_SUCCEEDING_REPHAContent; } }
            private static int _CONSONANT_SUCCEEDING_REPHAContent = default;
            private static bool _CONSONANT_SUCCEEDING_REPHAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.IndicSyllabicCategory.html#CONSONANT_WITH_STACKER"/>
            /// </summary>
            public static int CONSONANT_WITH_STACKER { get { if (!_CONSONANT_WITH_STACKERReady) { _CONSONANT_WITH_STACKERContent = SGetField<int>(LocalBridgeClazz, "CONSONANT_WITH_STACKER"); _CONSONANT_WITH_STACKERReady = true; } return _CONSONANT_WITH_STACKERContent; } }
            private static int _CONSONANT_WITH_STACKERContent = default;
            private static bool _CONSONANT_WITH_STACKERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.IndicSyllabicCategory.html#GEMINATION_MARK"/>
            /// </summary>
            public static int GEMINATION_MARK { get { if (!_GEMINATION_MARKReady) { _GEMINATION_MARKContent = SGetField<int>(LocalBridgeClazz, "GEMINATION_MARK"); _GEMINATION_MARKReady = true; } return _GEMINATION_MARKContent; } }
            private static int _GEMINATION_MARKContent = default;
            private static bool _GEMINATION_MARKReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.IndicSyllabicCategory.html#INVISIBLE_STACKER"/>
            /// </summary>
            public static int INVISIBLE_STACKER { get { if (!_INVISIBLE_STACKERReady) { _INVISIBLE_STACKERContent = SGetField<int>(LocalBridgeClazz, "INVISIBLE_STACKER"); _INVISIBLE_STACKERReady = true; } return _INVISIBLE_STACKERContent; } }
            private static int _INVISIBLE_STACKERContent = default;
            private static bool _INVISIBLE_STACKERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.IndicSyllabicCategory.html#JOINER"/>
            /// </summary>
            public static int JOINER { get { if (!_JOINERReady) { _JOINERContent = SGetField<int>(LocalBridgeClazz, "JOINER"); _JOINERReady = true; } return _JOINERContent; } }
            private static int _JOINERContent = default;
            private static bool _JOINERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.IndicSyllabicCategory.html#MODIFYING_LETTER"/>
            /// </summary>
            public static int MODIFYING_LETTER { get { if (!_MODIFYING_LETTERReady) { _MODIFYING_LETTERContent = SGetField<int>(LocalBridgeClazz, "MODIFYING_LETTER"); _MODIFYING_LETTERReady = true; } return _MODIFYING_LETTERContent; } }
            private static int _MODIFYING_LETTERContent = default;
            private static bool _MODIFYING_LETTERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.IndicSyllabicCategory.html#NON_JOINER"/>
            /// </summary>
            public static int NON_JOINER { get { if (!_NON_JOINERReady) { _NON_JOINERContent = SGetField<int>(LocalBridgeClazz, "NON_JOINER"); _NON_JOINERReady = true; } return _NON_JOINERContent; } }
            private static int _NON_JOINERContent = default;
            private static bool _NON_JOINERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.IndicSyllabicCategory.html#NUKTA"/>
            /// </summary>
            public static int NUKTA { get { if (!_NUKTAReady) { _NUKTAContent = SGetField<int>(LocalBridgeClazz, "NUKTA"); _NUKTAReady = true; } return _NUKTAContent; } }
            private static int _NUKTAContent = default;
            private static bool _NUKTAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.IndicSyllabicCategory.html#NUMBER"/>
            /// </summary>
            public static int NUMBER { get { if (!_NUMBERReady) { _NUMBERContent = SGetField<int>(LocalBridgeClazz, "NUMBER"); _NUMBERReady = true; } return _NUMBERContent; } }
            private static int _NUMBERContent = default;
            private static bool _NUMBERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.IndicSyllabicCategory.html#NUMBER_JOINER"/>
            /// </summary>
            public static int NUMBER_JOINER { get { if (!_NUMBER_JOINERReady) { _NUMBER_JOINERContent = SGetField<int>(LocalBridgeClazz, "NUMBER_JOINER"); _NUMBER_JOINERReady = true; } return _NUMBER_JOINERContent; } }
            private static int _NUMBER_JOINERContent = default;
            private static bool _NUMBER_JOINERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.IndicSyllabicCategory.html#OTHER"/>
            /// </summary>
            public static int OTHER { get { if (!_OTHERReady) { _OTHERContent = SGetField<int>(LocalBridgeClazz, "OTHER"); _OTHERReady = true; } return _OTHERContent; } }
            private static int _OTHERContent = default;
            private static bool _OTHERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.IndicSyllabicCategory.html#PURE_KILLER"/>
            /// </summary>
            public static int PURE_KILLER { get { if (!_PURE_KILLERReady) { _PURE_KILLERContent = SGetField<int>(LocalBridgeClazz, "PURE_KILLER"); _PURE_KILLERReady = true; } return _PURE_KILLERContent; } }
            private static int _PURE_KILLERContent = default;
            private static bool _PURE_KILLERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.IndicSyllabicCategory.html#REGISTER_SHIFTER"/>
            /// </summary>
            public static int REGISTER_SHIFTER { get { if (!_REGISTER_SHIFTERReady) { _REGISTER_SHIFTERContent = SGetField<int>(LocalBridgeClazz, "REGISTER_SHIFTER"); _REGISTER_SHIFTERReady = true; } return _REGISTER_SHIFTERContent; } }
            private static int _REGISTER_SHIFTERContent = default;
            private static bool _REGISTER_SHIFTERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.IndicSyllabicCategory.html#SYLLABLE_MODIFIER"/>
            /// </summary>
            public static int SYLLABLE_MODIFIER { get { if (!_SYLLABLE_MODIFIERReady) { _SYLLABLE_MODIFIERContent = SGetField<int>(LocalBridgeClazz, "SYLLABLE_MODIFIER"); _SYLLABLE_MODIFIERReady = true; } return _SYLLABLE_MODIFIERContent; } }
            private static int _SYLLABLE_MODIFIERContent = default;
            private static bool _SYLLABLE_MODIFIERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.IndicSyllabicCategory.html#TONE_LETTER"/>
            /// </summary>
            public static int TONE_LETTER { get { if (!_TONE_LETTERReady) { _TONE_LETTERContent = SGetField<int>(LocalBridgeClazz, "TONE_LETTER"); _TONE_LETTERReady = true; } return _TONE_LETTERContent; } }
            private static int _TONE_LETTERContent = default;
            private static bool _TONE_LETTERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.IndicSyllabicCategory.html#TONE_MARK"/>
            /// </summary>
            public static int TONE_MARK { get { if (!_TONE_MARKReady) { _TONE_MARKContent = SGetField<int>(LocalBridgeClazz, "TONE_MARK"); _TONE_MARKReady = true; } return _TONE_MARKContent; } }
            private static int _TONE_MARKContent = default;
            private static bool _TONE_MARKReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.IndicSyllabicCategory.html#VIRAMA"/>
            /// </summary>
            public static int VIRAMA { get { if (!_VIRAMAReady) { _VIRAMAContent = SGetField<int>(LocalBridgeClazz, "VIRAMA"); _VIRAMAReady = true; } return _VIRAMAContent; } }
            private static int _VIRAMAContent = default;
            private static bool _VIRAMAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.IndicSyllabicCategory.html#VISARGA"/>
            /// </summary>
            public static int VISARGA { get { if (!_VISARGAReady) { _VISARGAContent = SGetField<int>(LocalBridgeClazz, "VISARGA"); _VISARGAReady = true; } return _VISARGAContent; } }
            private static int _VISARGAContent = default;
            private static bool _VISARGAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.IndicSyllabicCategory.html#VOWEL"/>
            /// </summary>
            public static int VOWEL { get { if (!_VOWELReady) { _VOWELContent = SGetField<int>(LocalBridgeClazz, "VOWEL"); _VOWELReady = true; } return _VOWELContent; } }
            private static int _VOWELContent = default;
            private static bool _VOWELReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.IndicSyllabicCategory.html#VOWEL_DEPENDENT"/>
            /// </summary>
            public static int VOWEL_DEPENDENT { get { if (!_VOWEL_DEPENDENTReady) { _VOWEL_DEPENDENTContent = SGetField<int>(LocalBridgeClazz, "VOWEL_DEPENDENT"); _VOWEL_DEPENDENTReady = true; } return _VOWEL_DEPENDENTContent; } }
            private static int _VOWEL_DEPENDENTContent = default;
            private static bool _VOWEL_DEPENDENTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.IndicSyllabicCategory.html#VOWEL_INDEPENDENT"/>
            /// </summary>
            public static int VOWEL_INDEPENDENT { get { if (!_VOWEL_INDEPENDENTReady) { _VOWEL_INDEPENDENTContent = SGetField<int>(LocalBridgeClazz, "VOWEL_INDEPENDENT"); _VOWEL_INDEPENDENTReady = true; } return _VOWEL_INDEPENDENTContent; } }
            private static int _VOWEL_INDEPENDENTContent = default;
            private static bool _VOWEL_INDEPENDENTReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region JoiningGroup
        public partial class JoiningGroup
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#AFRICAN_FEH"/>
            /// </summary>
            public static int AFRICAN_FEH { get { if (!_AFRICAN_FEHReady) { _AFRICAN_FEHContent = SGetField<int>(LocalBridgeClazz, "AFRICAN_FEH"); _AFRICAN_FEHReady = true; } return _AFRICAN_FEHContent; } }
            private static int _AFRICAN_FEHContent = default;
            private static bool _AFRICAN_FEHReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#AFRICAN_NOON"/>
            /// </summary>
            public static int AFRICAN_NOON { get { if (!_AFRICAN_NOONReady) { _AFRICAN_NOONContent = SGetField<int>(LocalBridgeClazz, "AFRICAN_NOON"); _AFRICAN_NOONReady = true; } return _AFRICAN_NOONContent; } }
            private static int _AFRICAN_NOONContent = default;
            private static bool _AFRICAN_NOONReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#AFRICAN_QAF"/>
            /// </summary>
            public static int AFRICAN_QAF { get { if (!_AFRICAN_QAFReady) { _AFRICAN_QAFContent = SGetField<int>(LocalBridgeClazz, "AFRICAN_QAF"); _AFRICAN_QAFReady = true; } return _AFRICAN_QAFContent; } }
            private static int _AFRICAN_QAFContent = default;
            private static bool _AFRICAN_QAFReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#AIN"/>
            /// </summary>
            public static int AIN { get { if (!_AINReady) { _AINContent = SGetField<int>(LocalBridgeClazz, "AIN"); _AINReady = true; } return _AINContent; } }
            private static int _AINContent = default;
            private static bool _AINReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#ALAPH"/>
            /// </summary>
            public static int ALAPH { get { if (!_ALAPHReady) { _ALAPHContent = SGetField<int>(LocalBridgeClazz, "ALAPH"); _ALAPHReady = true; } return _ALAPHContent; } }
            private static int _ALAPHContent = default;
            private static bool _ALAPHReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#ALEF"/>
            /// </summary>
            public static int ALEF { get { if (!_ALEFReady) { _ALEFContent = SGetField<int>(LocalBridgeClazz, "ALEF"); _ALEFReady = true; } return _ALEFContent; } }
            private static int _ALEFContent = default;
            private static bool _ALEFReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#BEH"/>
            /// </summary>
            public static int BEH { get { if (!_BEHReady) { _BEHContent = SGetField<int>(LocalBridgeClazz, "BEH"); _BEHReady = true; } return _BEHContent; } }
            private static int _BEHContent = default;
            private static bool _BEHReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#BETH"/>
            /// </summary>
            public static int BETH { get { if (!_BETHReady) { _BETHContent = SGetField<int>(LocalBridgeClazz, "BETH"); _BETHReady = true; } return _BETHContent; } }
            private static int _BETHContent = default;
            private static bool _BETHReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#BURUSHASKI_YEH_BARREE"/>
            /// </summary>
            public static int BURUSHASKI_YEH_BARREE { get { if (!_BURUSHASKI_YEH_BARREEReady) { _BURUSHASKI_YEH_BARREEContent = SGetField<int>(LocalBridgeClazz, "BURUSHASKI_YEH_BARREE"); _BURUSHASKI_YEH_BARREEReady = true; } return _BURUSHASKI_YEH_BARREEContent; } }
            private static int _BURUSHASKI_YEH_BARREEContent = default;
            private static bool _BURUSHASKI_YEH_BARREEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#DAL"/>
            /// </summary>
            public static int DAL { get { if (!_DALReady) { _DALContent = SGetField<int>(LocalBridgeClazz, "DAL"); _DALReady = true; } return _DALContent; } }
            private static int _DALContent = default;
            private static bool _DALReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#DALATH_RISH"/>
            /// </summary>
            public static int DALATH_RISH { get { if (!_DALATH_RISHReady) { _DALATH_RISHContent = SGetField<int>(LocalBridgeClazz, "DALATH_RISH"); _DALATH_RISHReady = true; } return _DALATH_RISHContent; } }
            private static int _DALATH_RISHContent = default;
            private static bool _DALATH_RISHReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#E"/>
            /// </summary>
            public static int E { get { if (!_EReady) { _EContent = SGetField<int>(LocalBridgeClazz, "E"); _EReady = true; } return _EContent; } }
            private static int _EContent = default;
            private static bool _EReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#FARSI_YEH"/>
            /// </summary>
            public static int FARSI_YEH { get { if (!_FARSI_YEHReady) { _FARSI_YEHContent = SGetField<int>(LocalBridgeClazz, "FARSI_YEH"); _FARSI_YEHReady = true; } return _FARSI_YEHContent; } }
            private static int _FARSI_YEHContent = default;
            private static bool _FARSI_YEHReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#FE"/>
            /// </summary>
            public static int FE { get { if (!_FEReady) { _FEContent = SGetField<int>(LocalBridgeClazz, "FE"); _FEReady = true; } return _FEContent; } }
            private static int _FEContent = default;
            private static bool _FEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#FEH"/>
            /// </summary>
            public static int FEH { get { if (!_FEHReady) { _FEHContent = SGetField<int>(LocalBridgeClazz, "FEH"); _FEHReady = true; } return _FEHContent; } }
            private static int _FEHContent = default;
            private static bool _FEHReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#FINAL_SEMKATH"/>
            /// </summary>
            public static int FINAL_SEMKATH { get { if (!_FINAL_SEMKATHReady) { _FINAL_SEMKATHContent = SGetField<int>(LocalBridgeClazz, "FINAL_SEMKATH"); _FINAL_SEMKATHReady = true; } return _FINAL_SEMKATHContent; } }
            private static int _FINAL_SEMKATHContent = default;
            private static bool _FINAL_SEMKATHReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#GAF"/>
            /// </summary>
            public static int GAF { get { if (!_GAFReady) { _GAFContent = SGetField<int>(LocalBridgeClazz, "GAF"); _GAFReady = true; } return _GAFContent; } }
            private static int _GAFContent = default;
            private static bool _GAFReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#GAMAL"/>
            /// </summary>
            public static int GAMAL { get { if (!_GAMALReady) { _GAMALContent = SGetField<int>(LocalBridgeClazz, "GAMAL"); _GAMALReady = true; } return _GAMALContent; } }
            private static int _GAMALContent = default;
            private static bool _GAMALReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#HAH"/>
            /// </summary>
            public static int HAH { get { if (!_HAHReady) { _HAHContent = SGetField<int>(LocalBridgeClazz, "HAH"); _HAHReady = true; } return _HAHContent; } }
            private static int _HAHContent = default;
            private static bool _HAHReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#HAMZA_ON_HEH_GOAL"/>
            /// </summary>
            public static int HAMZA_ON_HEH_GOAL { get { if (!_HAMZA_ON_HEH_GOALReady) { _HAMZA_ON_HEH_GOALContent = SGetField<int>(LocalBridgeClazz, "HAMZA_ON_HEH_GOAL"); _HAMZA_ON_HEH_GOALReady = true; } return _HAMZA_ON_HEH_GOALContent; } }
            private static int _HAMZA_ON_HEH_GOALContent = default;
            private static bool _HAMZA_ON_HEH_GOALReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#HANIFI_ROHINGYA_KINNA_YA"/>
            /// </summary>
            public static int HANIFI_ROHINGYA_KINNA_YA { get { if (!_HANIFI_ROHINGYA_KINNA_YAReady) { _HANIFI_ROHINGYA_KINNA_YAContent = SGetField<int>(LocalBridgeClazz, "HANIFI_ROHINGYA_KINNA_YA"); _HANIFI_ROHINGYA_KINNA_YAReady = true; } return _HANIFI_ROHINGYA_KINNA_YAContent; } }
            private static int _HANIFI_ROHINGYA_KINNA_YAContent = default;
            private static bool _HANIFI_ROHINGYA_KINNA_YAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#HANIFI_ROHINGYA_PA"/>
            /// </summary>
            public static int HANIFI_ROHINGYA_PA { get { if (!_HANIFI_ROHINGYA_PAReady) { _HANIFI_ROHINGYA_PAContent = SGetField<int>(LocalBridgeClazz, "HANIFI_ROHINGYA_PA"); _HANIFI_ROHINGYA_PAReady = true; } return _HANIFI_ROHINGYA_PAContent; } }
            private static int _HANIFI_ROHINGYA_PAContent = default;
            private static bool _HANIFI_ROHINGYA_PAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#HE"/>
            /// </summary>
            public static int HE { get { if (!_HEReady) { _HEContent = SGetField<int>(LocalBridgeClazz, "HE"); _HEReady = true; } return _HEContent; } }
            private static int _HEContent = default;
            private static bool _HEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#HEH"/>
            /// </summary>
            public static int HEH { get { if (!_HEHReady) { _HEHContent = SGetField<int>(LocalBridgeClazz, "HEH"); _HEHReady = true; } return _HEHContent; } }
            private static int _HEHContent = default;
            private static bool _HEHReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#HEH_GOAL"/>
            /// </summary>
            public static int HEH_GOAL { get { if (!_HEH_GOALReady) { _HEH_GOALContent = SGetField<int>(LocalBridgeClazz, "HEH_GOAL"); _HEH_GOALReady = true; } return _HEH_GOALContent; } }
            private static int _HEH_GOALContent = default;
            private static bool _HEH_GOALReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#HETH"/>
            /// </summary>
            public static int HETH { get { if (!_HETHReady) { _HETHContent = SGetField<int>(LocalBridgeClazz, "HETH"); _HETHReady = true; } return _HETHContent; } }
            private static int _HETHContent = default;
            private static bool _HETHReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#KAF"/>
            /// </summary>
            public static int KAF { get { if (!_KAFReady) { _KAFContent = SGetField<int>(LocalBridgeClazz, "KAF"); _KAFReady = true; } return _KAFContent; } }
            private static int _KAFContent = default;
            private static bool _KAFReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#KAPH"/>
            /// </summary>
            public static int KAPH { get { if (!_KAPHReady) { _KAPHContent = SGetField<int>(LocalBridgeClazz, "KAPH"); _KAPHReady = true; } return _KAPHContent; } }
            private static int _KAPHContent = default;
            private static bool _KAPHReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#KHAPH"/>
            /// </summary>
            public static int KHAPH { get { if (!_KHAPHReady) { _KHAPHContent = SGetField<int>(LocalBridgeClazz, "KHAPH"); _KHAPHReady = true; } return _KHAPHContent; } }
            private static int _KHAPHContent = default;
            private static bool _KHAPHReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#KNOTTED_HEH"/>
            /// </summary>
            public static int KNOTTED_HEH { get { if (!_KNOTTED_HEHReady) { _KNOTTED_HEHContent = SGetField<int>(LocalBridgeClazz, "KNOTTED_HEH"); _KNOTTED_HEHReady = true; } return _KNOTTED_HEHContent; } }
            private static int _KNOTTED_HEHContent = default;
            private static bool _KNOTTED_HEHReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#LAM"/>
            /// </summary>
            public static int LAM { get { if (!_LAMReady) { _LAMContent = SGetField<int>(LocalBridgeClazz, "LAM"); _LAMReady = true; } return _LAMContent; } }
            private static int _LAMContent = default;
            private static bool _LAMReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#LAMADH"/>
            /// </summary>
            public static int LAMADH { get { if (!_LAMADHReady) { _LAMADHContent = SGetField<int>(LocalBridgeClazz, "LAMADH"); _LAMADHReady = true; } return _LAMADHContent; } }
            private static int _LAMADHContent = default;
            private static bool _LAMADHReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#MALAYALAM_BHA"/>
            /// </summary>
            public static int MALAYALAM_BHA { get { if (!_MALAYALAM_BHAReady) { _MALAYALAM_BHAContent = SGetField<int>(LocalBridgeClazz, "MALAYALAM_BHA"); _MALAYALAM_BHAReady = true; } return _MALAYALAM_BHAContent; } }
            private static int _MALAYALAM_BHAContent = default;
            private static bool _MALAYALAM_BHAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#MALAYALAM_JA"/>
            /// </summary>
            public static int MALAYALAM_JA { get { if (!_MALAYALAM_JAReady) { _MALAYALAM_JAContent = SGetField<int>(LocalBridgeClazz, "MALAYALAM_JA"); _MALAYALAM_JAReady = true; } return _MALAYALAM_JAContent; } }
            private static int _MALAYALAM_JAContent = default;
            private static bool _MALAYALAM_JAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#MALAYALAM_LLA"/>
            /// </summary>
            public static int MALAYALAM_LLA { get { if (!_MALAYALAM_LLAReady) { _MALAYALAM_LLAContent = SGetField<int>(LocalBridgeClazz, "MALAYALAM_LLA"); _MALAYALAM_LLAReady = true; } return _MALAYALAM_LLAContent; } }
            private static int _MALAYALAM_LLAContent = default;
            private static bool _MALAYALAM_LLAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#MALAYALAM_LLLA"/>
            /// </summary>
            public static int MALAYALAM_LLLA { get { if (!_MALAYALAM_LLLAReady) { _MALAYALAM_LLLAContent = SGetField<int>(LocalBridgeClazz, "MALAYALAM_LLLA"); _MALAYALAM_LLLAReady = true; } return _MALAYALAM_LLLAContent; } }
            private static int _MALAYALAM_LLLAContent = default;
            private static bool _MALAYALAM_LLLAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#MALAYALAM_NGA"/>
            /// </summary>
            public static int MALAYALAM_NGA { get { if (!_MALAYALAM_NGAReady) { _MALAYALAM_NGAContent = SGetField<int>(LocalBridgeClazz, "MALAYALAM_NGA"); _MALAYALAM_NGAReady = true; } return _MALAYALAM_NGAContent; } }
            private static int _MALAYALAM_NGAContent = default;
            private static bool _MALAYALAM_NGAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#MALAYALAM_NNA"/>
            /// </summary>
            public static int MALAYALAM_NNA { get { if (!_MALAYALAM_NNAReady) { _MALAYALAM_NNAContent = SGetField<int>(LocalBridgeClazz, "MALAYALAM_NNA"); _MALAYALAM_NNAReady = true; } return _MALAYALAM_NNAContent; } }
            private static int _MALAYALAM_NNAContent = default;
            private static bool _MALAYALAM_NNAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#MALAYALAM_NNNA"/>
            /// </summary>
            public static int MALAYALAM_NNNA { get { if (!_MALAYALAM_NNNAReady) { _MALAYALAM_NNNAContent = SGetField<int>(LocalBridgeClazz, "MALAYALAM_NNNA"); _MALAYALAM_NNNAReady = true; } return _MALAYALAM_NNNAContent; } }
            private static int _MALAYALAM_NNNAContent = default;
            private static bool _MALAYALAM_NNNAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#MALAYALAM_NYA"/>
            /// </summary>
            public static int MALAYALAM_NYA { get { if (!_MALAYALAM_NYAReady) { _MALAYALAM_NYAContent = SGetField<int>(LocalBridgeClazz, "MALAYALAM_NYA"); _MALAYALAM_NYAReady = true; } return _MALAYALAM_NYAContent; } }
            private static int _MALAYALAM_NYAContent = default;
            private static bool _MALAYALAM_NYAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#MALAYALAM_RA"/>
            /// </summary>
            public static int MALAYALAM_RA { get { if (!_MALAYALAM_RAReady) { _MALAYALAM_RAContent = SGetField<int>(LocalBridgeClazz, "MALAYALAM_RA"); _MALAYALAM_RAReady = true; } return _MALAYALAM_RAContent; } }
            private static int _MALAYALAM_RAContent = default;
            private static bool _MALAYALAM_RAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#MALAYALAM_SSA"/>
            /// </summary>
            public static int MALAYALAM_SSA { get { if (!_MALAYALAM_SSAReady) { _MALAYALAM_SSAContent = SGetField<int>(LocalBridgeClazz, "MALAYALAM_SSA"); _MALAYALAM_SSAReady = true; } return _MALAYALAM_SSAContent; } }
            private static int _MALAYALAM_SSAContent = default;
            private static bool _MALAYALAM_SSAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#MALAYALAM_TTA"/>
            /// </summary>
            public static int MALAYALAM_TTA { get { if (!_MALAYALAM_TTAReady) { _MALAYALAM_TTAContent = SGetField<int>(LocalBridgeClazz, "MALAYALAM_TTA"); _MALAYALAM_TTAReady = true; } return _MALAYALAM_TTAContent; } }
            private static int _MALAYALAM_TTAContent = default;
            private static bool _MALAYALAM_TTAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#MANICHAEAN_ALEPH"/>
            /// </summary>
            public static int MANICHAEAN_ALEPH { get { if (!_MANICHAEAN_ALEPHReady) { _MANICHAEAN_ALEPHContent = SGetField<int>(LocalBridgeClazz, "MANICHAEAN_ALEPH"); _MANICHAEAN_ALEPHReady = true; } return _MANICHAEAN_ALEPHContent; } }
            private static int _MANICHAEAN_ALEPHContent = default;
            private static bool _MANICHAEAN_ALEPHReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#MANICHAEAN_AYIN"/>
            /// </summary>
            public static int MANICHAEAN_AYIN { get { if (!_MANICHAEAN_AYINReady) { _MANICHAEAN_AYINContent = SGetField<int>(LocalBridgeClazz, "MANICHAEAN_AYIN"); _MANICHAEAN_AYINReady = true; } return _MANICHAEAN_AYINContent; } }
            private static int _MANICHAEAN_AYINContent = default;
            private static bool _MANICHAEAN_AYINReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#MANICHAEAN_BETH"/>
            /// </summary>
            public static int MANICHAEAN_BETH { get { if (!_MANICHAEAN_BETHReady) { _MANICHAEAN_BETHContent = SGetField<int>(LocalBridgeClazz, "MANICHAEAN_BETH"); _MANICHAEAN_BETHReady = true; } return _MANICHAEAN_BETHContent; } }
            private static int _MANICHAEAN_BETHContent = default;
            private static bool _MANICHAEAN_BETHReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#MANICHAEAN_DALETH"/>
            /// </summary>
            public static int MANICHAEAN_DALETH { get { if (!_MANICHAEAN_DALETHReady) { _MANICHAEAN_DALETHContent = SGetField<int>(LocalBridgeClazz, "MANICHAEAN_DALETH"); _MANICHAEAN_DALETHReady = true; } return _MANICHAEAN_DALETHContent; } }
            private static int _MANICHAEAN_DALETHContent = default;
            private static bool _MANICHAEAN_DALETHReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#MANICHAEAN_DHAMEDH"/>
            /// </summary>
            public static int MANICHAEAN_DHAMEDH { get { if (!_MANICHAEAN_DHAMEDHReady) { _MANICHAEAN_DHAMEDHContent = SGetField<int>(LocalBridgeClazz, "MANICHAEAN_DHAMEDH"); _MANICHAEAN_DHAMEDHReady = true; } return _MANICHAEAN_DHAMEDHContent; } }
            private static int _MANICHAEAN_DHAMEDHContent = default;
            private static bool _MANICHAEAN_DHAMEDHReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#MANICHAEAN_FIVE"/>
            /// </summary>
            public static int MANICHAEAN_FIVE { get { if (!_MANICHAEAN_FIVEReady) { _MANICHAEAN_FIVEContent = SGetField<int>(LocalBridgeClazz, "MANICHAEAN_FIVE"); _MANICHAEAN_FIVEReady = true; } return _MANICHAEAN_FIVEContent; } }
            private static int _MANICHAEAN_FIVEContent = default;
            private static bool _MANICHAEAN_FIVEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#MANICHAEAN_GIMEL"/>
            /// </summary>
            public static int MANICHAEAN_GIMEL { get { if (!_MANICHAEAN_GIMELReady) { _MANICHAEAN_GIMELContent = SGetField<int>(LocalBridgeClazz, "MANICHAEAN_GIMEL"); _MANICHAEAN_GIMELReady = true; } return _MANICHAEAN_GIMELContent; } }
            private static int _MANICHAEAN_GIMELContent = default;
            private static bool _MANICHAEAN_GIMELReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#MANICHAEAN_HETH"/>
            /// </summary>
            public static int MANICHAEAN_HETH { get { if (!_MANICHAEAN_HETHReady) { _MANICHAEAN_HETHContent = SGetField<int>(LocalBridgeClazz, "MANICHAEAN_HETH"); _MANICHAEAN_HETHReady = true; } return _MANICHAEAN_HETHContent; } }
            private static int _MANICHAEAN_HETHContent = default;
            private static bool _MANICHAEAN_HETHReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#MANICHAEAN_HUNDRED"/>
            /// </summary>
            public static int MANICHAEAN_HUNDRED { get { if (!_MANICHAEAN_HUNDREDReady) { _MANICHAEAN_HUNDREDContent = SGetField<int>(LocalBridgeClazz, "MANICHAEAN_HUNDRED"); _MANICHAEAN_HUNDREDReady = true; } return _MANICHAEAN_HUNDREDContent; } }
            private static int _MANICHAEAN_HUNDREDContent = default;
            private static bool _MANICHAEAN_HUNDREDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#MANICHAEAN_KAPH"/>
            /// </summary>
            public static int MANICHAEAN_KAPH { get { if (!_MANICHAEAN_KAPHReady) { _MANICHAEAN_KAPHContent = SGetField<int>(LocalBridgeClazz, "MANICHAEAN_KAPH"); _MANICHAEAN_KAPHReady = true; } return _MANICHAEAN_KAPHContent; } }
            private static int _MANICHAEAN_KAPHContent = default;
            private static bool _MANICHAEAN_KAPHReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#MANICHAEAN_LAMEDH"/>
            /// </summary>
            public static int MANICHAEAN_LAMEDH { get { if (!_MANICHAEAN_LAMEDHReady) { _MANICHAEAN_LAMEDHContent = SGetField<int>(LocalBridgeClazz, "MANICHAEAN_LAMEDH"); _MANICHAEAN_LAMEDHReady = true; } return _MANICHAEAN_LAMEDHContent; } }
            private static int _MANICHAEAN_LAMEDHContent = default;
            private static bool _MANICHAEAN_LAMEDHReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#MANICHAEAN_MEM"/>
            /// </summary>
            public static int MANICHAEAN_MEM { get { if (!_MANICHAEAN_MEMReady) { _MANICHAEAN_MEMContent = SGetField<int>(LocalBridgeClazz, "MANICHAEAN_MEM"); _MANICHAEAN_MEMReady = true; } return _MANICHAEAN_MEMContent; } }
            private static int _MANICHAEAN_MEMContent = default;
            private static bool _MANICHAEAN_MEMReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#MANICHAEAN_NUN"/>
            /// </summary>
            public static int MANICHAEAN_NUN { get { if (!_MANICHAEAN_NUNReady) { _MANICHAEAN_NUNContent = SGetField<int>(LocalBridgeClazz, "MANICHAEAN_NUN"); _MANICHAEAN_NUNReady = true; } return _MANICHAEAN_NUNContent; } }
            private static int _MANICHAEAN_NUNContent = default;
            private static bool _MANICHAEAN_NUNReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#MANICHAEAN_ONE"/>
            /// </summary>
            public static int MANICHAEAN_ONE { get { if (!_MANICHAEAN_ONEReady) { _MANICHAEAN_ONEContent = SGetField<int>(LocalBridgeClazz, "MANICHAEAN_ONE"); _MANICHAEAN_ONEReady = true; } return _MANICHAEAN_ONEContent; } }
            private static int _MANICHAEAN_ONEContent = default;
            private static bool _MANICHAEAN_ONEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#MANICHAEAN_PE"/>
            /// </summary>
            public static int MANICHAEAN_PE { get { if (!_MANICHAEAN_PEReady) { _MANICHAEAN_PEContent = SGetField<int>(LocalBridgeClazz, "MANICHAEAN_PE"); _MANICHAEAN_PEReady = true; } return _MANICHAEAN_PEContent; } }
            private static int _MANICHAEAN_PEContent = default;
            private static bool _MANICHAEAN_PEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#MANICHAEAN_QOPH"/>
            /// </summary>
            public static int MANICHAEAN_QOPH { get { if (!_MANICHAEAN_QOPHReady) { _MANICHAEAN_QOPHContent = SGetField<int>(LocalBridgeClazz, "MANICHAEAN_QOPH"); _MANICHAEAN_QOPHReady = true; } return _MANICHAEAN_QOPHContent; } }
            private static int _MANICHAEAN_QOPHContent = default;
            private static bool _MANICHAEAN_QOPHReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#MANICHAEAN_RESH"/>
            /// </summary>
            public static int MANICHAEAN_RESH { get { if (!_MANICHAEAN_RESHReady) { _MANICHAEAN_RESHContent = SGetField<int>(LocalBridgeClazz, "MANICHAEAN_RESH"); _MANICHAEAN_RESHReady = true; } return _MANICHAEAN_RESHContent; } }
            private static int _MANICHAEAN_RESHContent = default;
            private static bool _MANICHAEAN_RESHReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#MANICHAEAN_SADHE"/>
            /// </summary>
            public static int MANICHAEAN_SADHE { get { if (!_MANICHAEAN_SADHEReady) { _MANICHAEAN_SADHEContent = SGetField<int>(LocalBridgeClazz, "MANICHAEAN_SADHE"); _MANICHAEAN_SADHEReady = true; } return _MANICHAEAN_SADHEContent; } }
            private static int _MANICHAEAN_SADHEContent = default;
            private static bool _MANICHAEAN_SADHEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#MANICHAEAN_SAMEKH"/>
            /// </summary>
            public static int MANICHAEAN_SAMEKH { get { if (!_MANICHAEAN_SAMEKHReady) { _MANICHAEAN_SAMEKHContent = SGetField<int>(LocalBridgeClazz, "MANICHAEAN_SAMEKH"); _MANICHAEAN_SAMEKHReady = true; } return _MANICHAEAN_SAMEKHContent; } }
            private static int _MANICHAEAN_SAMEKHContent = default;
            private static bool _MANICHAEAN_SAMEKHReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#MANICHAEAN_TAW"/>
            /// </summary>
            public static int MANICHAEAN_TAW { get { if (!_MANICHAEAN_TAWReady) { _MANICHAEAN_TAWContent = SGetField<int>(LocalBridgeClazz, "MANICHAEAN_TAW"); _MANICHAEAN_TAWReady = true; } return _MANICHAEAN_TAWContent; } }
            private static int _MANICHAEAN_TAWContent = default;
            private static bool _MANICHAEAN_TAWReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#MANICHAEAN_TEN"/>
            /// </summary>
            public static int MANICHAEAN_TEN { get { if (!_MANICHAEAN_TENReady) { _MANICHAEAN_TENContent = SGetField<int>(LocalBridgeClazz, "MANICHAEAN_TEN"); _MANICHAEAN_TENReady = true; } return _MANICHAEAN_TENContent; } }
            private static int _MANICHAEAN_TENContent = default;
            private static bool _MANICHAEAN_TENReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#MANICHAEAN_TETH"/>
            /// </summary>
            public static int MANICHAEAN_TETH { get { if (!_MANICHAEAN_TETHReady) { _MANICHAEAN_TETHContent = SGetField<int>(LocalBridgeClazz, "MANICHAEAN_TETH"); _MANICHAEAN_TETHReady = true; } return _MANICHAEAN_TETHContent; } }
            private static int _MANICHAEAN_TETHContent = default;
            private static bool _MANICHAEAN_TETHReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#MANICHAEAN_THAMEDH"/>
            /// </summary>
            public static int MANICHAEAN_THAMEDH { get { if (!_MANICHAEAN_THAMEDHReady) { _MANICHAEAN_THAMEDHContent = SGetField<int>(LocalBridgeClazz, "MANICHAEAN_THAMEDH"); _MANICHAEAN_THAMEDHReady = true; } return _MANICHAEAN_THAMEDHContent; } }
            private static int _MANICHAEAN_THAMEDHContent = default;
            private static bool _MANICHAEAN_THAMEDHReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#MANICHAEAN_TWENTY"/>
            /// </summary>
            public static int MANICHAEAN_TWENTY { get { if (!_MANICHAEAN_TWENTYReady) { _MANICHAEAN_TWENTYContent = SGetField<int>(LocalBridgeClazz, "MANICHAEAN_TWENTY"); _MANICHAEAN_TWENTYReady = true; } return _MANICHAEAN_TWENTYContent; } }
            private static int _MANICHAEAN_TWENTYContent = default;
            private static bool _MANICHAEAN_TWENTYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#MANICHAEAN_WAW"/>
            /// </summary>
            public static int MANICHAEAN_WAW { get { if (!_MANICHAEAN_WAWReady) { _MANICHAEAN_WAWContent = SGetField<int>(LocalBridgeClazz, "MANICHAEAN_WAW"); _MANICHAEAN_WAWReady = true; } return _MANICHAEAN_WAWContent; } }
            private static int _MANICHAEAN_WAWContent = default;
            private static bool _MANICHAEAN_WAWReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#MANICHAEAN_YODH"/>
            /// </summary>
            public static int MANICHAEAN_YODH { get { if (!_MANICHAEAN_YODHReady) { _MANICHAEAN_YODHContent = SGetField<int>(LocalBridgeClazz, "MANICHAEAN_YODH"); _MANICHAEAN_YODHReady = true; } return _MANICHAEAN_YODHContent; } }
            private static int _MANICHAEAN_YODHContent = default;
            private static bool _MANICHAEAN_YODHReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#MANICHAEAN_ZAYIN"/>
            /// </summary>
            public static int MANICHAEAN_ZAYIN { get { if (!_MANICHAEAN_ZAYINReady) { _MANICHAEAN_ZAYINContent = SGetField<int>(LocalBridgeClazz, "MANICHAEAN_ZAYIN"); _MANICHAEAN_ZAYINReady = true; } return _MANICHAEAN_ZAYINContent; } }
            private static int _MANICHAEAN_ZAYINContent = default;
            private static bool _MANICHAEAN_ZAYINReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#MEEM"/>
            /// </summary>
            public static int MEEM { get { if (!_MEEMReady) { _MEEMContent = SGetField<int>(LocalBridgeClazz, "MEEM"); _MEEMReady = true; } return _MEEMContent; } }
            private static int _MEEMContent = default;
            private static bool _MEEMReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#MIM"/>
            /// </summary>
            public static int MIM { get { if (!_MIMReady) { _MIMContent = SGetField<int>(LocalBridgeClazz, "MIM"); _MIMReady = true; } return _MIMContent; } }
            private static int _MIMContent = default;
            private static bool _MIMReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#NO_JOINING_GROUP"/>
            /// </summary>
            public static int NO_JOINING_GROUP { get { if (!_NO_JOINING_GROUPReady) { _NO_JOINING_GROUPContent = SGetField<int>(LocalBridgeClazz, "NO_JOINING_GROUP"); _NO_JOINING_GROUPReady = true; } return _NO_JOINING_GROUPContent; } }
            private static int _NO_JOINING_GROUPContent = default;
            private static bool _NO_JOINING_GROUPReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#NOON"/>
            /// </summary>
            public static int NOON { get { if (!_NOONReady) { _NOONContent = SGetField<int>(LocalBridgeClazz, "NOON"); _NOONReady = true; } return _NOONContent; } }
            private static int _NOONContent = default;
            private static bool _NOONReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#NUN"/>
            /// </summary>
            public static int NUN { get { if (!_NUNReady) { _NUNContent = SGetField<int>(LocalBridgeClazz, "NUN"); _NUNReady = true; } return _NUNContent; } }
            private static int _NUNContent = default;
            private static bool _NUNReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#NYA"/>
            /// </summary>
            public static int NYA { get { if (!_NYAReady) { _NYAContent = SGetField<int>(LocalBridgeClazz, "NYA"); _NYAReady = true; } return _NYAContent; } }
            private static int _NYAContent = default;
            private static bool _NYAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#PE"/>
            /// </summary>
            public static int PE { get { if (!_PEReady) { _PEContent = SGetField<int>(LocalBridgeClazz, "PE"); _PEReady = true; } return _PEContent; } }
            private static int _PEContent = default;
            private static bool _PEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#QAF"/>
            /// </summary>
            public static int QAF { get { if (!_QAFReady) { _QAFContent = SGetField<int>(LocalBridgeClazz, "QAF"); _QAFReady = true; } return _QAFContent; } }
            private static int _QAFContent = default;
            private static bool _QAFReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#QAPH"/>
            /// </summary>
            public static int QAPH { get { if (!_QAPHReady) { _QAPHContent = SGetField<int>(LocalBridgeClazz, "QAPH"); _QAPHReady = true; } return _QAPHContent; } }
            private static int _QAPHContent = default;
            private static bool _QAPHReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#REH"/>
            /// </summary>
            public static int REH { get { if (!_REHReady) { _REHContent = SGetField<int>(LocalBridgeClazz, "REH"); _REHReady = true; } return _REHContent; } }
            private static int _REHContent = default;
            private static bool _REHReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#REVERSED_PE"/>
            /// </summary>
            public static int REVERSED_PE { get { if (!_REVERSED_PEReady) { _REVERSED_PEContent = SGetField<int>(LocalBridgeClazz, "REVERSED_PE"); _REVERSED_PEReady = true; } return _REVERSED_PEContent; } }
            private static int _REVERSED_PEContent = default;
            private static bool _REVERSED_PEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#ROHINGYA_YEH"/>
            /// </summary>
            public static int ROHINGYA_YEH { get { if (!_ROHINGYA_YEHReady) { _ROHINGYA_YEHContent = SGetField<int>(LocalBridgeClazz, "ROHINGYA_YEH"); _ROHINGYA_YEHReady = true; } return _ROHINGYA_YEHContent; } }
            private static int _ROHINGYA_YEHContent = default;
            private static bool _ROHINGYA_YEHReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#SAD"/>
            /// </summary>
            public static int SAD { get { if (!_SADReady) { _SADContent = SGetField<int>(LocalBridgeClazz, "SAD"); _SADReady = true; } return _SADContent; } }
            private static int _SADContent = default;
            private static bool _SADReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#SADHE"/>
            /// </summary>
            public static int SADHE { get { if (!_SADHEReady) { _SADHEContent = SGetField<int>(LocalBridgeClazz, "SADHE"); _SADHEReady = true; } return _SADHEContent; } }
            private static int _SADHEContent = default;
            private static bool _SADHEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#SEEN"/>
            /// </summary>
            public static int SEEN { get { if (!_SEENReady) { _SEENContent = SGetField<int>(LocalBridgeClazz, "SEEN"); _SEENReady = true; } return _SEENContent; } }
            private static int _SEENContent = default;
            private static bool _SEENReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#SEMKATH"/>
            /// </summary>
            public static int SEMKATH { get { if (!_SEMKATHReady) { _SEMKATHContent = SGetField<int>(LocalBridgeClazz, "SEMKATH"); _SEMKATHReady = true; } return _SEMKATHContent; } }
            private static int _SEMKATHContent = default;
            private static bool _SEMKATHReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#SHIN"/>
            /// </summary>
            public static int SHIN { get { if (!_SHINReady) { _SHINContent = SGetField<int>(LocalBridgeClazz, "SHIN"); _SHINReady = true; } return _SHINContent; } }
            private static int _SHINContent = default;
            private static bool _SHINReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#STRAIGHT_WAW"/>
            /// </summary>
            public static int STRAIGHT_WAW { get { if (!_STRAIGHT_WAWReady) { _STRAIGHT_WAWContent = SGetField<int>(LocalBridgeClazz, "STRAIGHT_WAW"); _STRAIGHT_WAWReady = true; } return _STRAIGHT_WAWContent; } }
            private static int _STRAIGHT_WAWContent = default;
            private static bool _STRAIGHT_WAWReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#SWASH_KAF"/>
            /// </summary>
            public static int SWASH_KAF { get { if (!_SWASH_KAFReady) { _SWASH_KAFContent = SGetField<int>(LocalBridgeClazz, "SWASH_KAF"); _SWASH_KAFReady = true; } return _SWASH_KAFContent; } }
            private static int _SWASH_KAFContent = default;
            private static bool _SWASH_KAFReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#SYRIAC_WAW"/>
            /// </summary>
            public static int SYRIAC_WAW { get { if (!_SYRIAC_WAWReady) { _SYRIAC_WAWContent = SGetField<int>(LocalBridgeClazz, "SYRIAC_WAW"); _SYRIAC_WAWReady = true; } return _SYRIAC_WAWContent; } }
            private static int _SYRIAC_WAWContent = default;
            private static bool _SYRIAC_WAWReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#TAH"/>
            /// </summary>
            public static int TAH { get { if (!_TAHReady) { _TAHContent = SGetField<int>(LocalBridgeClazz, "TAH"); _TAHReady = true; } return _TAHContent; } }
            private static int _TAHContent = default;
            private static bool _TAHReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#TAW"/>
            /// </summary>
            public static int TAW { get { if (!_TAWReady) { _TAWContent = SGetField<int>(LocalBridgeClazz, "TAW"); _TAWReady = true; } return _TAWContent; } }
            private static int _TAWContent = default;
            private static bool _TAWReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#TEH_MARBUTA"/>
            /// </summary>
            public static int TEH_MARBUTA { get { if (!_TEH_MARBUTAReady) { _TEH_MARBUTAContent = SGetField<int>(LocalBridgeClazz, "TEH_MARBUTA"); _TEH_MARBUTAReady = true; } return _TEH_MARBUTAContent; } }
            private static int _TEH_MARBUTAContent = default;
            private static bool _TEH_MARBUTAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#TEH_MARBUTA_GOAL"/>
            /// </summary>
            public static int TEH_MARBUTA_GOAL { get { if (!_TEH_MARBUTA_GOALReady) { _TEH_MARBUTA_GOALContent = SGetField<int>(LocalBridgeClazz, "TEH_MARBUTA_GOAL"); _TEH_MARBUTA_GOALReady = true; } return _TEH_MARBUTA_GOALContent; } }
            private static int _TEH_MARBUTA_GOALContent = default;
            private static bool _TEH_MARBUTA_GOALReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#TETH"/>
            /// </summary>
            public static int TETH { get { if (!_TETHReady) { _TETHContent = SGetField<int>(LocalBridgeClazz, "TETH"); _TETHReady = true; } return _TETHContent; } }
            private static int _TETHContent = default;
            private static bool _TETHReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#THIN_YEH"/>
            /// </summary>
            public static int THIN_YEH { get { if (!_THIN_YEHReady) { _THIN_YEHContent = SGetField<int>(LocalBridgeClazz, "THIN_YEH"); _THIN_YEHReady = true; } return _THIN_YEHContent; } }
            private static int _THIN_YEHContent = default;
            private static bool _THIN_YEHReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#VERTICAL_TAIL"/>
            /// </summary>
            public static int VERTICAL_TAIL { get { if (!_VERTICAL_TAILReady) { _VERTICAL_TAILContent = SGetField<int>(LocalBridgeClazz, "VERTICAL_TAIL"); _VERTICAL_TAILReady = true; } return _VERTICAL_TAILContent; } }
            private static int _VERTICAL_TAILContent = default;
            private static bool _VERTICAL_TAILReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#WAW"/>
            /// </summary>
            public static int WAW { get { if (!_WAWReady) { _WAWContent = SGetField<int>(LocalBridgeClazz, "WAW"); _WAWReady = true; } return _WAWContent; } }
            private static int _WAWContent = default;
            private static bool _WAWReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#YEH"/>
            /// </summary>
            public static int YEH { get { if (!_YEHReady) { _YEHContent = SGetField<int>(LocalBridgeClazz, "YEH"); _YEHReady = true; } return _YEHContent; } }
            private static int _YEHContent = default;
            private static bool _YEHReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#YEH_BARREE"/>
            /// </summary>
            public static int YEH_BARREE { get { if (!_YEH_BARREEReady) { _YEH_BARREEContent = SGetField<int>(LocalBridgeClazz, "YEH_BARREE"); _YEH_BARREEReady = true; } return _YEH_BARREEContent; } }
            private static int _YEH_BARREEContent = default;
            private static bool _YEH_BARREEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#YEH_WITH_TAIL"/>
            /// </summary>
            public static int YEH_WITH_TAIL { get { if (!_YEH_WITH_TAILReady) { _YEH_WITH_TAILContent = SGetField<int>(LocalBridgeClazz, "YEH_WITH_TAIL"); _YEH_WITH_TAILReady = true; } return _YEH_WITH_TAILContent; } }
            private static int _YEH_WITH_TAILContent = default;
            private static bool _YEH_WITH_TAILReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#YUDH"/>
            /// </summary>
            public static int YUDH { get { if (!_YUDHReady) { _YUDHContent = SGetField<int>(LocalBridgeClazz, "YUDH"); _YUDHReady = true; } return _YUDHContent; } }
            private static int _YUDHContent = default;
            private static bool _YUDHReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#YUDH_HE"/>
            /// </summary>
            public static int YUDH_HE { get { if (!_YUDH_HEReady) { _YUDH_HEContent = SGetField<int>(LocalBridgeClazz, "YUDH_HE"); _YUDH_HEReady = true; } return _YUDH_HEContent; } }
            private static int _YUDH_HEContent = default;
            private static bool _YUDH_HEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#ZAIN"/>
            /// </summary>
            public static int ZAIN { get { if (!_ZAINReady) { _ZAINContent = SGetField<int>(LocalBridgeClazz, "ZAIN"); _ZAINReady = true; } return _ZAINContent; } }
            private static int _ZAINContent = default;
            private static bool _ZAINReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html#ZHAIN"/>
            /// </summary>
            public static int ZHAIN { get { if (!_ZHAINReady) { _ZHAINContent = SGetField<int>(LocalBridgeClazz, "ZHAIN"); _ZHAINReady = true; } return _ZHAINContent; } }
            private static int _ZHAINContent = default;
            private static bool _ZHAINReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region JoiningType
        public partial class JoiningType
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningType.html#DUAL_JOINING"/>
            /// </summary>
            public static int DUAL_JOINING { get { if (!_DUAL_JOININGReady) { _DUAL_JOININGContent = SGetField<int>(LocalBridgeClazz, "DUAL_JOINING"); _DUAL_JOININGReady = true; } return _DUAL_JOININGContent; } }
            private static int _DUAL_JOININGContent = default;
            private static bool _DUAL_JOININGReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningType.html#JOIN_CAUSING"/>
            /// </summary>
            public static int JOIN_CAUSING { get { if (!_JOIN_CAUSINGReady) { _JOIN_CAUSINGContent = SGetField<int>(LocalBridgeClazz, "JOIN_CAUSING"); _JOIN_CAUSINGReady = true; } return _JOIN_CAUSINGContent; } }
            private static int _JOIN_CAUSINGContent = default;
            private static bool _JOIN_CAUSINGReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningType.html#LEFT_JOINING"/>
            /// </summary>
            public static int LEFT_JOINING { get { if (!_LEFT_JOININGReady) { _LEFT_JOININGContent = SGetField<int>(LocalBridgeClazz, "LEFT_JOINING"); _LEFT_JOININGReady = true; } return _LEFT_JOININGContent; } }
            private static int _LEFT_JOININGContent = default;
            private static bool _LEFT_JOININGReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningType.html#NON_JOINING"/>
            /// </summary>
            public static int NON_JOINING { get { if (!_NON_JOININGReady) { _NON_JOININGContent = SGetField<int>(LocalBridgeClazz, "NON_JOINING"); _NON_JOININGReady = true; } return _NON_JOININGContent; } }
            private static int _NON_JOININGContent = default;
            private static bool _NON_JOININGReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningType.html#RIGHT_JOINING"/>
            /// </summary>
            public static int RIGHT_JOINING { get { if (!_RIGHT_JOININGReady) { _RIGHT_JOININGContent = SGetField<int>(LocalBridgeClazz, "RIGHT_JOINING"); _RIGHT_JOININGReady = true; } return _RIGHT_JOININGContent; } }
            private static int _RIGHT_JOININGContent = default;
            private static bool _RIGHT_JOININGReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningType.html#TRANSPARENT"/>
            /// </summary>
            public static int TRANSPARENT { get { if (!_TRANSPARENTReady) { _TRANSPARENTContent = SGetField<int>(LocalBridgeClazz, "TRANSPARENT"); _TRANSPARENTReady = true; } return _TRANSPARENTContent; } }
            private static int _TRANSPARENTContent = default;
            private static bool _TRANSPARENTReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region LineBreak
        public partial class LineBreak
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.LineBreak.html#AKSARA"/>
            /// </summary>
            public static int AKSARA { get { if (!_AKSARAReady) { _AKSARAContent = SGetField<int>(LocalBridgeClazz, "AKSARA"); _AKSARAReady = true; } return _AKSARAContent; } }
            private static int _AKSARAContent = default;
            private static bool _AKSARAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.LineBreak.html#AKSARA_PREBASE"/>
            /// </summary>
            public static int AKSARA_PREBASE { get { if (!_AKSARA_PREBASEReady) { _AKSARA_PREBASEContent = SGetField<int>(LocalBridgeClazz, "AKSARA_PREBASE"); _AKSARA_PREBASEReady = true; } return _AKSARA_PREBASEContent; } }
            private static int _AKSARA_PREBASEContent = default;
            private static bool _AKSARA_PREBASEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.LineBreak.html#AKSARA_START"/>
            /// </summary>
            public static int AKSARA_START { get { if (!_AKSARA_STARTReady) { _AKSARA_STARTContent = SGetField<int>(LocalBridgeClazz, "AKSARA_START"); _AKSARA_STARTReady = true; } return _AKSARA_STARTContent; } }
            private static int _AKSARA_STARTContent = default;
            private static bool _AKSARA_STARTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.LineBreak.html#ALPHABETIC"/>
            /// </summary>
            public static int ALPHABETIC { get { if (!_ALPHABETICReady) { _ALPHABETICContent = SGetField<int>(LocalBridgeClazz, "ALPHABETIC"); _ALPHABETICReady = true; } return _ALPHABETICContent; } }
            private static int _ALPHABETICContent = default;
            private static bool _ALPHABETICReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.LineBreak.html#AMBIGUOUS"/>
            /// </summary>
            public static int AMBIGUOUS { get { if (!_AMBIGUOUSReady) { _AMBIGUOUSContent = SGetField<int>(LocalBridgeClazz, "AMBIGUOUS"); _AMBIGUOUSReady = true; } return _AMBIGUOUSContent; } }
            private static int _AMBIGUOUSContent = default;
            private static bool _AMBIGUOUSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.LineBreak.html#BREAK_AFTER"/>
            /// </summary>
            public static int BREAK_AFTER { get { if (!_BREAK_AFTERReady) { _BREAK_AFTERContent = SGetField<int>(LocalBridgeClazz, "BREAK_AFTER"); _BREAK_AFTERReady = true; } return _BREAK_AFTERContent; } }
            private static int _BREAK_AFTERContent = default;
            private static bool _BREAK_AFTERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.LineBreak.html#BREAK_BEFORE"/>
            /// </summary>
            public static int BREAK_BEFORE { get { if (!_BREAK_BEFOREReady) { _BREAK_BEFOREContent = SGetField<int>(LocalBridgeClazz, "BREAK_BEFORE"); _BREAK_BEFOREReady = true; } return _BREAK_BEFOREContent; } }
            private static int _BREAK_BEFOREContent = default;
            private static bool _BREAK_BEFOREReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.LineBreak.html#BREAK_BOTH"/>
            /// </summary>
            public static int BREAK_BOTH { get { if (!_BREAK_BOTHReady) { _BREAK_BOTHContent = SGetField<int>(LocalBridgeClazz, "BREAK_BOTH"); _BREAK_BOTHReady = true; } return _BREAK_BOTHContent; } }
            private static int _BREAK_BOTHContent = default;
            private static bool _BREAK_BOTHReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.LineBreak.html#BREAK_SYMBOLS"/>
            /// </summary>
            public static int BREAK_SYMBOLS { get { if (!_BREAK_SYMBOLSReady) { _BREAK_SYMBOLSContent = SGetField<int>(LocalBridgeClazz, "BREAK_SYMBOLS"); _BREAK_SYMBOLSReady = true; } return _BREAK_SYMBOLSContent; } }
            private static int _BREAK_SYMBOLSContent = default;
            private static bool _BREAK_SYMBOLSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.LineBreak.html#CARRIAGE_RETURN"/>
            /// </summary>
            public static int CARRIAGE_RETURN { get { if (!_CARRIAGE_RETURNReady) { _CARRIAGE_RETURNContent = SGetField<int>(LocalBridgeClazz, "CARRIAGE_RETURN"); _CARRIAGE_RETURNReady = true; } return _CARRIAGE_RETURNContent; } }
            private static int _CARRIAGE_RETURNContent = default;
            private static bool _CARRIAGE_RETURNReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.LineBreak.html#CLOSE_PARENTHESIS"/>
            /// </summary>
            public static int CLOSE_PARENTHESIS { get { if (!_CLOSE_PARENTHESISReady) { _CLOSE_PARENTHESISContent = SGetField<int>(LocalBridgeClazz, "CLOSE_PARENTHESIS"); _CLOSE_PARENTHESISReady = true; } return _CLOSE_PARENTHESISContent; } }
            private static int _CLOSE_PARENTHESISContent = default;
            private static bool _CLOSE_PARENTHESISReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.LineBreak.html#CLOSE_PUNCTUATION"/>
            /// </summary>
            public static int CLOSE_PUNCTUATION { get { if (!_CLOSE_PUNCTUATIONReady) { _CLOSE_PUNCTUATIONContent = SGetField<int>(LocalBridgeClazz, "CLOSE_PUNCTUATION"); _CLOSE_PUNCTUATIONReady = true; } return _CLOSE_PUNCTUATIONContent; } }
            private static int _CLOSE_PUNCTUATIONContent = default;
            private static bool _CLOSE_PUNCTUATIONReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.LineBreak.html#COMBINING_MARK"/>
            /// </summary>
            public static int COMBINING_MARK { get { if (!_COMBINING_MARKReady) { _COMBINING_MARKContent = SGetField<int>(LocalBridgeClazz, "COMBINING_MARK"); _COMBINING_MARKReady = true; } return _COMBINING_MARKContent; } }
            private static int _COMBINING_MARKContent = default;
            private static bool _COMBINING_MARKReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.LineBreak.html#COMPLEX_CONTEXT"/>
            /// </summary>
            public static int COMPLEX_CONTEXT { get { if (!_COMPLEX_CONTEXTReady) { _COMPLEX_CONTEXTContent = SGetField<int>(LocalBridgeClazz, "COMPLEX_CONTEXT"); _COMPLEX_CONTEXTReady = true; } return _COMPLEX_CONTEXTContent; } }
            private static int _COMPLEX_CONTEXTContent = default;
            private static bool _COMPLEX_CONTEXTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.LineBreak.html#CONDITIONAL_JAPANESE_STARTER"/>
            /// </summary>
            public static int CONDITIONAL_JAPANESE_STARTER { get { if (!_CONDITIONAL_JAPANESE_STARTERReady) { _CONDITIONAL_JAPANESE_STARTERContent = SGetField<int>(LocalBridgeClazz, "CONDITIONAL_JAPANESE_STARTER"); _CONDITIONAL_JAPANESE_STARTERReady = true; } return _CONDITIONAL_JAPANESE_STARTERContent; } }
            private static int _CONDITIONAL_JAPANESE_STARTERContent = default;
            private static bool _CONDITIONAL_JAPANESE_STARTERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.LineBreak.html#CONTINGENT_BREAK"/>
            /// </summary>
            public static int CONTINGENT_BREAK { get { if (!_CONTINGENT_BREAKReady) { _CONTINGENT_BREAKContent = SGetField<int>(LocalBridgeClazz, "CONTINGENT_BREAK"); _CONTINGENT_BREAKReady = true; } return _CONTINGENT_BREAKContent; } }
            private static int _CONTINGENT_BREAKContent = default;
            private static bool _CONTINGENT_BREAKReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.LineBreak.html#E_BASE"/>
            /// </summary>
            public static int E_BASE { get { if (!_E_BASEReady) { _E_BASEContent = SGetField<int>(LocalBridgeClazz, "E_BASE"); _E_BASEReady = true; } return _E_BASEContent; } }
            private static int _E_BASEContent = default;
            private static bool _E_BASEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.LineBreak.html#E_MODIFIER"/>
            /// </summary>
            public static int E_MODIFIER { get { if (!_E_MODIFIERReady) { _E_MODIFIERContent = SGetField<int>(LocalBridgeClazz, "E_MODIFIER"); _E_MODIFIERReady = true; } return _E_MODIFIERContent; } }
            private static int _E_MODIFIERContent = default;
            private static bool _E_MODIFIERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.LineBreak.html#EXCLAMATION"/>
            /// </summary>
            public static int EXCLAMATION { get { if (!_EXCLAMATIONReady) { _EXCLAMATIONContent = SGetField<int>(LocalBridgeClazz, "EXCLAMATION"); _EXCLAMATIONReady = true; } return _EXCLAMATIONContent; } }
            private static int _EXCLAMATIONContent = default;
            private static bool _EXCLAMATIONReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.LineBreak.html#GLUE"/>
            /// </summary>
            public static int GLUE { get { if (!_GLUEReady) { _GLUEContent = SGetField<int>(LocalBridgeClazz, "GLUE"); _GLUEReady = true; } return _GLUEContent; } }
            private static int _GLUEContent = default;
            private static bool _GLUEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.LineBreak.html#H2"/>
            /// </summary>
            public static int H2 { get { if (!_H2Ready) { _H2Content = SGetField<int>(LocalBridgeClazz, "H2"); _H2Ready = true; } return _H2Content; } }
            private static int _H2Content = default;
            private static bool _H2Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.LineBreak.html#H3"/>
            /// </summary>
            public static int H3 { get { if (!_H3Ready) { _H3Content = SGetField<int>(LocalBridgeClazz, "H3"); _H3Ready = true; } return _H3Content; } }
            private static int _H3Content = default;
            private static bool _H3Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.LineBreak.html#HEBREW_LETTER"/>
            /// </summary>
            public static int HEBREW_LETTER { get { if (!_HEBREW_LETTERReady) { _HEBREW_LETTERContent = SGetField<int>(LocalBridgeClazz, "HEBREW_LETTER"); _HEBREW_LETTERReady = true; } return _HEBREW_LETTERContent; } }
            private static int _HEBREW_LETTERContent = default;
            private static bool _HEBREW_LETTERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.LineBreak.html#HYPHEN"/>
            /// </summary>
            public static int HYPHEN { get { if (!_HYPHENReady) { _HYPHENContent = SGetField<int>(LocalBridgeClazz, "HYPHEN"); _HYPHENReady = true; } return _HYPHENContent; } }
            private static int _HYPHENContent = default;
            private static bool _HYPHENReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.LineBreak.html#IDEOGRAPHIC"/>
            /// </summary>
            public static int IDEOGRAPHIC { get { if (!_IDEOGRAPHICReady) { _IDEOGRAPHICContent = SGetField<int>(LocalBridgeClazz, "IDEOGRAPHIC"); _IDEOGRAPHICReady = true; } return _IDEOGRAPHICContent; } }
            private static int _IDEOGRAPHICContent = default;
            private static bool _IDEOGRAPHICReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.LineBreak.html#INFIX_NUMERIC"/>
            /// </summary>
            public static int INFIX_NUMERIC { get { if (!_INFIX_NUMERICReady) { _INFIX_NUMERICContent = SGetField<int>(LocalBridgeClazz, "INFIX_NUMERIC"); _INFIX_NUMERICReady = true; } return _INFIX_NUMERICContent; } }
            private static int _INFIX_NUMERICContent = default;
            private static bool _INFIX_NUMERICReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.LineBreak.html#INSEPARABLE"/>
            /// </summary>
            public static int INSEPARABLE { get { if (!_INSEPARABLEReady) { _INSEPARABLEContent = SGetField<int>(LocalBridgeClazz, "INSEPARABLE"); _INSEPARABLEReady = true; } return _INSEPARABLEContent; } }
            private static int _INSEPARABLEContent = default;
            private static bool _INSEPARABLEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.LineBreak.html#INSEPERABLE"/>
            /// </summary>
            public static int INSEPERABLE { get { if (!_INSEPERABLEReady) { _INSEPERABLEContent = SGetField<int>(LocalBridgeClazz, "INSEPERABLE"); _INSEPERABLEReady = true; } return _INSEPERABLEContent; } }
            private static int _INSEPERABLEContent = default;
            private static bool _INSEPERABLEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.LineBreak.html#JL"/>
            /// </summary>
            public static int JL { get { if (!_JLReady) { _JLContent = SGetField<int>(LocalBridgeClazz, "JL"); _JLReady = true; } return _JLContent; } }
            private static int _JLContent = default;
            private static bool _JLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.LineBreak.html#JT"/>
            /// </summary>
            public static int JT { get { if (!_JTReady) { _JTContent = SGetField<int>(LocalBridgeClazz, "JT"); _JTReady = true; } return _JTContent; } }
            private static int _JTContent = default;
            private static bool _JTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.LineBreak.html#JV"/>
            /// </summary>
            public static int JV { get { if (!_JVReady) { _JVContent = SGetField<int>(LocalBridgeClazz, "JV"); _JVReady = true; } return _JVContent; } }
            private static int _JVContent = default;
            private static bool _JVReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.LineBreak.html#LINE_FEED"/>
            /// </summary>
            public static int LINE_FEED { get { if (!_LINE_FEEDReady) { _LINE_FEEDContent = SGetField<int>(LocalBridgeClazz, "LINE_FEED"); _LINE_FEEDReady = true; } return _LINE_FEEDContent; } }
            private static int _LINE_FEEDContent = default;
            private static bool _LINE_FEEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.LineBreak.html#MANDATORY_BREAK"/>
            /// </summary>
            public static int MANDATORY_BREAK { get { if (!_MANDATORY_BREAKReady) { _MANDATORY_BREAKContent = SGetField<int>(LocalBridgeClazz, "MANDATORY_BREAK"); _MANDATORY_BREAKReady = true; } return _MANDATORY_BREAKContent; } }
            private static int _MANDATORY_BREAKContent = default;
            private static bool _MANDATORY_BREAKReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.LineBreak.html#NEXT_LINE"/>
            /// </summary>
            public static int NEXT_LINE { get { if (!_NEXT_LINEReady) { _NEXT_LINEContent = SGetField<int>(LocalBridgeClazz, "NEXT_LINE"); _NEXT_LINEReady = true; } return _NEXT_LINEContent; } }
            private static int _NEXT_LINEContent = default;
            private static bool _NEXT_LINEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.LineBreak.html#NONSTARTER"/>
            /// </summary>
            public static int NONSTARTER { get { if (!_NONSTARTERReady) { _NONSTARTERContent = SGetField<int>(LocalBridgeClazz, "NONSTARTER"); _NONSTARTERReady = true; } return _NONSTARTERContent; } }
            private static int _NONSTARTERContent = default;
            private static bool _NONSTARTERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.LineBreak.html#NUMERIC"/>
            /// </summary>
            public static int NUMERIC { get { if (!_NUMERICReady) { _NUMERICContent = SGetField<int>(LocalBridgeClazz, "NUMERIC"); _NUMERICReady = true; } return _NUMERICContent; } }
            private static int _NUMERICContent = default;
            private static bool _NUMERICReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.LineBreak.html#OPEN_PUNCTUATION"/>
            /// </summary>
            public static int OPEN_PUNCTUATION { get { if (!_OPEN_PUNCTUATIONReady) { _OPEN_PUNCTUATIONContent = SGetField<int>(LocalBridgeClazz, "OPEN_PUNCTUATION"); _OPEN_PUNCTUATIONReady = true; } return _OPEN_PUNCTUATIONContent; } }
            private static int _OPEN_PUNCTUATIONContent = default;
            private static bool _OPEN_PUNCTUATIONReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.LineBreak.html#POSTFIX_NUMERIC"/>
            /// </summary>
            public static int POSTFIX_NUMERIC { get { if (!_POSTFIX_NUMERICReady) { _POSTFIX_NUMERICContent = SGetField<int>(LocalBridgeClazz, "POSTFIX_NUMERIC"); _POSTFIX_NUMERICReady = true; } return _POSTFIX_NUMERICContent; } }
            private static int _POSTFIX_NUMERICContent = default;
            private static bool _POSTFIX_NUMERICReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.LineBreak.html#PREFIX_NUMERIC"/>
            /// </summary>
            public static int PREFIX_NUMERIC { get { if (!_PREFIX_NUMERICReady) { _PREFIX_NUMERICContent = SGetField<int>(LocalBridgeClazz, "PREFIX_NUMERIC"); _PREFIX_NUMERICReady = true; } return _PREFIX_NUMERICContent; } }
            private static int _PREFIX_NUMERICContent = default;
            private static bool _PREFIX_NUMERICReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.LineBreak.html#QUOTATION"/>
            /// </summary>
            public static int QUOTATION { get { if (!_QUOTATIONReady) { _QUOTATIONContent = SGetField<int>(LocalBridgeClazz, "QUOTATION"); _QUOTATIONReady = true; } return _QUOTATIONContent; } }
            private static int _QUOTATIONContent = default;
            private static bool _QUOTATIONReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.LineBreak.html#REGIONAL_INDICATOR"/>
            /// </summary>
            public static int REGIONAL_INDICATOR { get { if (!_REGIONAL_INDICATORReady) { _REGIONAL_INDICATORContent = SGetField<int>(LocalBridgeClazz, "REGIONAL_INDICATOR"); _REGIONAL_INDICATORReady = true; } return _REGIONAL_INDICATORContent; } }
            private static int _REGIONAL_INDICATORContent = default;
            private static bool _REGIONAL_INDICATORReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.LineBreak.html#SPACE"/>
            /// </summary>
            public static int SPACE { get { if (!_SPACEReady) { _SPACEContent = SGetField<int>(LocalBridgeClazz, "SPACE"); _SPACEReady = true; } return _SPACEContent; } }
            private static int _SPACEContent = default;
            private static bool _SPACEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.LineBreak.html#SURROGATE"/>
            /// </summary>
            public static int SURROGATE { get { if (!_SURROGATEReady) { _SURROGATEContent = SGetField<int>(LocalBridgeClazz, "SURROGATE"); _SURROGATEReady = true; } return _SURROGATEContent; } }
            private static int _SURROGATEContent = default;
            private static bool _SURROGATEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.LineBreak.html#UNKNOWN"/>
            /// </summary>
            public static int UNKNOWN { get { if (!_UNKNOWNReady) { _UNKNOWNContent = SGetField<int>(LocalBridgeClazz, "UNKNOWN"); _UNKNOWNReady = true; } return _UNKNOWNContent; } }
            private static int _UNKNOWNContent = default;
            private static bool _UNKNOWNReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.LineBreak.html#VIRAMA"/>
            /// </summary>
            public static int VIRAMA { get { if (!_VIRAMAReady) { _VIRAMAContent = SGetField<int>(LocalBridgeClazz, "VIRAMA"); _VIRAMAReady = true; } return _VIRAMAContent; } }
            private static int _VIRAMAContent = default;
            private static bool _VIRAMAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.LineBreak.html#VIRAMA_FINAL"/>
            /// </summary>
            public static int VIRAMA_FINAL { get { if (!_VIRAMA_FINALReady) { _VIRAMA_FINALContent = SGetField<int>(LocalBridgeClazz, "VIRAMA_FINAL"); _VIRAMA_FINALReady = true; } return _VIRAMA_FINALContent; } }
            private static int _VIRAMA_FINALContent = default;
            private static bool _VIRAMA_FINALReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.LineBreak.html#WORD_JOINER"/>
            /// </summary>
            public static int WORD_JOINER { get { if (!_WORD_JOINERReady) { _WORD_JOINERContent = SGetField<int>(LocalBridgeClazz, "WORD_JOINER"); _WORD_JOINERReady = true; } return _WORD_JOINERContent; } }
            private static int _WORD_JOINERContent = default;
            private static bool _WORD_JOINERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.LineBreak.html#ZWJ"/>
            /// </summary>
            public static int ZWJ { get { if (!_ZWJReady) { _ZWJContent = SGetField<int>(LocalBridgeClazz, "ZWJ"); _ZWJReady = true; } return _ZWJContent; } }
            private static int _ZWJContent = default;
            private static bool _ZWJReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.LineBreak.html#ZWSPACE"/>
            /// </summary>
            public static int ZWSPACE { get { if (!_ZWSPACEReady) { _ZWSPACEContent = SGetField<int>(LocalBridgeClazz, "ZWSPACE"); _ZWSPACEReady = true; } return _ZWSPACEContent; } }
            private static int _ZWSPACEContent = default;
            private static bool _ZWSPACEReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region NumericType
        public partial class NumericType
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.NumericType.html#DECIMAL"/>
            /// </summary>
            public static int DECIMAL { get { if (!_DECIMALReady) { _DECIMALContent = SGetField<int>(LocalBridgeClazz, "DECIMAL"); _DECIMALReady = true; } return _DECIMALContent; } }
            private static int _DECIMALContent = default;
            private static bool _DECIMALReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.NumericType.html#DIGIT"/>
            /// </summary>
            public static int DIGIT { get { if (!_DIGITReady) { _DIGITContent = SGetField<int>(LocalBridgeClazz, "DIGIT"); _DIGITReady = true; } return _DIGITContent; } }
            private static int _DIGITContent = default;
            private static bool _DIGITReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.NumericType.html#NONE"/>
            /// </summary>
            public static int NONE { get { if (!_NONEReady) { _NONEContent = SGetField<int>(LocalBridgeClazz, "NONE"); _NONEReady = true; } return _NONEContent; } }
            private static int _NONEContent = default;
            private static bool _NONEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.NumericType.html#NUMERIC"/>
            /// </summary>
            public static int NUMERIC { get { if (!_NUMERICReady) { _NUMERICContent = SGetField<int>(LocalBridgeClazz, "NUMERIC"); _NUMERICReady = true; } return _NUMERICContent; } }
            private static int _NUMERICContent = default;
            private static bool _NUMERICReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region SentenceBreak
        public partial class SentenceBreak
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.SentenceBreak.html#ATERM"/>
            /// </summary>
            public static int ATERM { get { if (!_ATERMReady) { _ATERMContent = SGetField<int>(LocalBridgeClazz, "ATERM"); _ATERMReady = true; } return _ATERMContent; } }
            private static int _ATERMContent = default;
            private static bool _ATERMReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.SentenceBreak.html#CLOSE"/>
            /// </summary>
            public static int CLOSE { get { if (!_CLOSEReady) { _CLOSEContent = SGetField<int>(LocalBridgeClazz, "CLOSE"); _CLOSEReady = true; } return _CLOSEContent; } }
            private static int _CLOSEContent = default;
            private static bool _CLOSEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.SentenceBreak.html#CR"/>
            /// </summary>
            public static int CR { get { if (!_CRReady) { _CRContent = SGetField<int>(LocalBridgeClazz, "CR"); _CRReady = true; } return _CRContent; } }
            private static int _CRContent = default;
            private static bool _CRReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.SentenceBreak.html#EXTEND"/>
            /// </summary>
            public static int EXTEND { get { if (!_EXTENDReady) { _EXTENDContent = SGetField<int>(LocalBridgeClazz, "EXTEND"); _EXTENDReady = true; } return _EXTENDContent; } }
            private static int _EXTENDContent = default;
            private static bool _EXTENDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.SentenceBreak.html#FORMAT"/>
            /// </summary>
            public static int FORMAT { get { if (!_FORMATReady) { _FORMATContent = SGetField<int>(LocalBridgeClazz, "FORMAT"); _FORMATReady = true; } return _FORMATContent; } }
            private static int _FORMATContent = default;
            private static bool _FORMATReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.SentenceBreak.html#LF"/>
            /// </summary>
            public static int LF { get { if (!_LFReady) { _LFContent = SGetField<int>(LocalBridgeClazz, "LF"); _LFReady = true; } return _LFContent; } }
            private static int _LFContent = default;
            private static bool _LFReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.SentenceBreak.html#LOWER"/>
            /// </summary>
            public static int LOWER { get { if (!_LOWERReady) { _LOWERContent = SGetField<int>(LocalBridgeClazz, "LOWER"); _LOWERReady = true; } return _LOWERContent; } }
            private static int _LOWERContent = default;
            private static bool _LOWERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.SentenceBreak.html#NUMERIC"/>
            /// </summary>
            public static int NUMERIC { get { if (!_NUMERICReady) { _NUMERICContent = SGetField<int>(LocalBridgeClazz, "NUMERIC"); _NUMERICReady = true; } return _NUMERICContent; } }
            private static int _NUMERICContent = default;
            private static bool _NUMERICReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.SentenceBreak.html#OLETTER"/>
            /// </summary>
            public static int OLETTER { get { if (!_OLETTERReady) { _OLETTERContent = SGetField<int>(LocalBridgeClazz, "OLETTER"); _OLETTERReady = true; } return _OLETTERContent; } }
            private static int _OLETTERContent = default;
            private static bool _OLETTERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.SentenceBreak.html#OTHER"/>
            /// </summary>
            public static int OTHER { get { if (!_OTHERReady) { _OTHERContent = SGetField<int>(LocalBridgeClazz, "OTHER"); _OTHERReady = true; } return _OTHERContent; } }
            private static int _OTHERContent = default;
            private static bool _OTHERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.SentenceBreak.html#SCONTINUE"/>
            /// </summary>
            public static int SCONTINUE { get { if (!_SCONTINUEReady) { _SCONTINUEContent = SGetField<int>(LocalBridgeClazz, "SCONTINUE"); _SCONTINUEReady = true; } return _SCONTINUEContent; } }
            private static int _SCONTINUEContent = default;
            private static bool _SCONTINUEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.SentenceBreak.html#SEP"/>
            /// </summary>
            public static int SEP { get { if (!_SEPReady) { _SEPContent = SGetField<int>(LocalBridgeClazz, "SEP"); _SEPReady = true; } return _SEPContent; } }
            private static int _SEPContent = default;
            private static bool _SEPReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.SentenceBreak.html#SP"/>
            /// </summary>
            public static int SP { get { if (!_SPReady) { _SPContent = SGetField<int>(LocalBridgeClazz, "SP"); _SPReady = true; } return _SPContent; } }
            private static int _SPContent = default;
            private static bool _SPReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.SentenceBreak.html#STERM"/>
            /// </summary>
            public static int STERM { get { if (!_STERMReady) { _STERMContent = SGetField<int>(LocalBridgeClazz, "STERM"); _STERMReady = true; } return _STERMContent; } }
            private static int _STERMContent = default;
            private static bool _STERMReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.SentenceBreak.html#UPPER"/>
            /// </summary>
            public static int UPPER { get { if (!_UPPERReady) { _UPPERContent = SGetField<int>(LocalBridgeClazz, "UPPER"); _UPPERReady = true; } return _UPPERContent; } }
            private static int _UPPERContent = default;
            private static bool _UPPERReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region UnicodeBlock
        public partial class UnicodeBlock
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ADLAM"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock ADLAM { get { if (!_ADLAMReady) { _ADLAMContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "ADLAM"); _ADLAMReady = true; } return _ADLAMContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _ADLAMContent = default;
            private static bool _ADLAMReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#AEGEAN_NUMBERS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock AEGEAN_NUMBERS { get { if (!_AEGEAN_NUMBERSReady) { _AEGEAN_NUMBERSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "AEGEAN_NUMBERS"); _AEGEAN_NUMBERSReady = true; } return _AEGEAN_NUMBERSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _AEGEAN_NUMBERSContent = default;
            private static bool _AEGEAN_NUMBERSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#AHOM"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock AHOM { get { if (!_AHOMReady) { _AHOMContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "AHOM"); _AHOMReady = true; } return _AHOMContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _AHOMContent = default;
            private static bool _AHOMReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ALCHEMICAL_SYMBOLS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock ALCHEMICAL_SYMBOLS { get { if (!_ALCHEMICAL_SYMBOLSReady) { _ALCHEMICAL_SYMBOLSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "ALCHEMICAL_SYMBOLS"); _ALCHEMICAL_SYMBOLSReady = true; } return _ALCHEMICAL_SYMBOLSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _ALCHEMICAL_SYMBOLSContent = default;
            private static bool _ALCHEMICAL_SYMBOLSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ALPHABETIC_PRESENTATION_FORMS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock ALPHABETIC_PRESENTATION_FORMS { get { if (!_ALPHABETIC_PRESENTATION_FORMSReady) { _ALPHABETIC_PRESENTATION_FORMSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "ALPHABETIC_PRESENTATION_FORMS"); _ALPHABETIC_PRESENTATION_FORMSReady = true; } return _ALPHABETIC_PRESENTATION_FORMSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _ALPHABETIC_PRESENTATION_FORMSContent = default;
            private static bool _ALPHABETIC_PRESENTATION_FORMSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ANATOLIAN_HIEROGLYPHS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock ANATOLIAN_HIEROGLYPHS { get { if (!_ANATOLIAN_HIEROGLYPHSReady) { _ANATOLIAN_HIEROGLYPHSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "ANATOLIAN_HIEROGLYPHS"); _ANATOLIAN_HIEROGLYPHSReady = true; } return _ANATOLIAN_HIEROGLYPHSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _ANATOLIAN_HIEROGLYPHSContent = default;
            private static bool _ANATOLIAN_HIEROGLYPHSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ANCIENT_GREEK_MUSICAL_NOTATION"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock ANCIENT_GREEK_MUSICAL_NOTATION { get { if (!_ANCIENT_GREEK_MUSICAL_NOTATIONReady) { _ANCIENT_GREEK_MUSICAL_NOTATIONContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "ANCIENT_GREEK_MUSICAL_NOTATION"); _ANCIENT_GREEK_MUSICAL_NOTATIONReady = true; } return _ANCIENT_GREEK_MUSICAL_NOTATIONContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _ANCIENT_GREEK_MUSICAL_NOTATIONContent = default;
            private static bool _ANCIENT_GREEK_MUSICAL_NOTATIONReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ANCIENT_GREEK_NUMBERS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock ANCIENT_GREEK_NUMBERS { get { if (!_ANCIENT_GREEK_NUMBERSReady) { _ANCIENT_GREEK_NUMBERSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "ANCIENT_GREEK_NUMBERS"); _ANCIENT_GREEK_NUMBERSReady = true; } return _ANCIENT_GREEK_NUMBERSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _ANCIENT_GREEK_NUMBERSContent = default;
            private static bool _ANCIENT_GREEK_NUMBERSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ANCIENT_SYMBOLS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock ANCIENT_SYMBOLS { get { if (!_ANCIENT_SYMBOLSReady) { _ANCIENT_SYMBOLSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "ANCIENT_SYMBOLS"); _ANCIENT_SYMBOLSReady = true; } return _ANCIENT_SYMBOLSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _ANCIENT_SYMBOLSContent = default;
            private static bool _ANCIENT_SYMBOLSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ARABIC"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock ARABIC { get { if (!_ARABICReady) { _ARABICContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "ARABIC"); _ARABICReady = true; } return _ARABICContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _ARABICContent = default;
            private static bool _ARABICReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ARABIC_EXTENDED_A"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock ARABIC_EXTENDED_A { get { if (!_ARABIC_EXTENDED_AReady) { _ARABIC_EXTENDED_AContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "ARABIC_EXTENDED_A"); _ARABIC_EXTENDED_AReady = true; } return _ARABIC_EXTENDED_AContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _ARABIC_EXTENDED_AContent = default;
            private static bool _ARABIC_EXTENDED_AReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ARABIC_EXTENDED_B"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock ARABIC_EXTENDED_B { get { if (!_ARABIC_EXTENDED_BReady) { _ARABIC_EXTENDED_BContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "ARABIC_EXTENDED_B"); _ARABIC_EXTENDED_BReady = true; } return _ARABIC_EXTENDED_BContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _ARABIC_EXTENDED_BContent = default;
            private static bool _ARABIC_EXTENDED_BReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ARABIC_EXTENDED_C"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock ARABIC_EXTENDED_C { get { if (!_ARABIC_EXTENDED_CReady) { _ARABIC_EXTENDED_CContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "ARABIC_EXTENDED_C"); _ARABIC_EXTENDED_CReady = true; } return _ARABIC_EXTENDED_CContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _ARABIC_EXTENDED_CContent = default;
            private static bool _ARABIC_EXTENDED_CReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS { get { if (!_ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLSReady) { _ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS"); _ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLSReady = true; } return _ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLSContent = default;
            private static bool _ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ARABIC_PRESENTATION_FORMS_A"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock ARABIC_PRESENTATION_FORMS_A { get { if (!_ARABIC_PRESENTATION_FORMS_AReady) { _ARABIC_PRESENTATION_FORMS_AContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "ARABIC_PRESENTATION_FORMS_A"); _ARABIC_PRESENTATION_FORMS_AReady = true; } return _ARABIC_PRESENTATION_FORMS_AContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _ARABIC_PRESENTATION_FORMS_AContent = default;
            private static bool _ARABIC_PRESENTATION_FORMS_AReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ARABIC_PRESENTATION_FORMS_B"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock ARABIC_PRESENTATION_FORMS_B { get { if (!_ARABIC_PRESENTATION_FORMS_BReady) { _ARABIC_PRESENTATION_FORMS_BContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "ARABIC_PRESENTATION_FORMS_B"); _ARABIC_PRESENTATION_FORMS_BReady = true; } return _ARABIC_PRESENTATION_FORMS_BContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _ARABIC_PRESENTATION_FORMS_BContent = default;
            private static bool _ARABIC_PRESENTATION_FORMS_BReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ARABIC_SUPPLEMENT"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock ARABIC_SUPPLEMENT { get { if (!_ARABIC_SUPPLEMENTReady) { _ARABIC_SUPPLEMENTContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "ARABIC_SUPPLEMENT"); _ARABIC_SUPPLEMENTReady = true; } return _ARABIC_SUPPLEMENTContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _ARABIC_SUPPLEMENTContent = default;
            private static bool _ARABIC_SUPPLEMENTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ARMENIAN"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock ARMENIAN { get { if (!_ARMENIANReady) { _ARMENIANContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "ARMENIAN"); _ARMENIANReady = true; } return _ARMENIANContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _ARMENIANContent = default;
            private static bool _ARMENIANReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ARROWS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock ARROWS { get { if (!_ARROWSReady) { _ARROWSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "ARROWS"); _ARROWSReady = true; } return _ARROWSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _ARROWSContent = default;
            private static bool _ARROWSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#AVESTAN"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock AVESTAN { get { if (!_AVESTANReady) { _AVESTANContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "AVESTAN"); _AVESTANReady = true; } return _AVESTANContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _AVESTANContent = default;
            private static bool _AVESTANReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#BALINESE"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock BALINESE { get { if (!_BALINESEReady) { _BALINESEContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "BALINESE"); _BALINESEReady = true; } return _BALINESEContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _BALINESEContent = default;
            private static bool _BALINESEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#BAMUM"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock BAMUM { get { if (!_BAMUMReady) { _BAMUMContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "BAMUM"); _BAMUMReady = true; } return _BAMUMContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _BAMUMContent = default;
            private static bool _BAMUMReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#BAMUM_SUPPLEMENT"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock BAMUM_SUPPLEMENT { get { if (!_BAMUM_SUPPLEMENTReady) { _BAMUM_SUPPLEMENTContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "BAMUM_SUPPLEMENT"); _BAMUM_SUPPLEMENTReady = true; } return _BAMUM_SUPPLEMENTContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _BAMUM_SUPPLEMENTContent = default;
            private static bool _BAMUM_SUPPLEMENTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#BASIC_LATIN"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock BASIC_LATIN { get { if (!_BASIC_LATINReady) { _BASIC_LATINContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "BASIC_LATIN"); _BASIC_LATINReady = true; } return _BASIC_LATINContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _BASIC_LATINContent = default;
            private static bool _BASIC_LATINReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#BASSA_VAH"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock BASSA_VAH { get { if (!_BASSA_VAHReady) { _BASSA_VAHContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "BASSA_VAH"); _BASSA_VAHReady = true; } return _BASSA_VAHContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _BASSA_VAHContent = default;
            private static bool _BASSA_VAHReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#BATAK"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock BATAK { get { if (!_BATAKReady) { _BATAKContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "BATAK"); _BATAKReady = true; } return _BATAKContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _BATAKContent = default;
            private static bool _BATAKReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#BENGALI"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock BENGALI { get { if (!_BENGALIReady) { _BENGALIContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "BENGALI"); _BENGALIReady = true; } return _BENGALIContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _BENGALIContent = default;
            private static bool _BENGALIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#BHAIKSUKI"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock BHAIKSUKI { get { if (!_BHAIKSUKIReady) { _BHAIKSUKIContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "BHAIKSUKI"); _BHAIKSUKIReady = true; } return _BHAIKSUKIContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _BHAIKSUKIContent = default;
            private static bool _BHAIKSUKIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#BLOCK_ELEMENTS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock BLOCK_ELEMENTS { get { if (!_BLOCK_ELEMENTSReady) { _BLOCK_ELEMENTSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "BLOCK_ELEMENTS"); _BLOCK_ELEMENTSReady = true; } return _BLOCK_ELEMENTSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _BLOCK_ELEMENTSContent = default;
            private static bool _BLOCK_ELEMENTSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#BOPOMOFO"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock BOPOMOFO { get { if (!_BOPOMOFOReady) { _BOPOMOFOContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "BOPOMOFO"); _BOPOMOFOReady = true; } return _BOPOMOFOContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _BOPOMOFOContent = default;
            private static bool _BOPOMOFOReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#BOPOMOFO_EXTENDED"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock BOPOMOFO_EXTENDED { get { if (!_BOPOMOFO_EXTENDEDReady) { _BOPOMOFO_EXTENDEDContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "BOPOMOFO_EXTENDED"); _BOPOMOFO_EXTENDEDReady = true; } return _BOPOMOFO_EXTENDEDContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _BOPOMOFO_EXTENDEDContent = default;
            private static bool _BOPOMOFO_EXTENDEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#BOX_DRAWING"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock BOX_DRAWING { get { if (!_BOX_DRAWINGReady) { _BOX_DRAWINGContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "BOX_DRAWING"); _BOX_DRAWINGReady = true; } return _BOX_DRAWINGContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _BOX_DRAWINGContent = default;
            private static bool _BOX_DRAWINGReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#BRAHMI"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock BRAHMI { get { if (!_BRAHMIReady) { _BRAHMIContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "BRAHMI"); _BRAHMIReady = true; } return _BRAHMIContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _BRAHMIContent = default;
            private static bool _BRAHMIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#BRAILLE_PATTERNS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock BRAILLE_PATTERNS { get { if (!_BRAILLE_PATTERNSReady) { _BRAILLE_PATTERNSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "BRAILLE_PATTERNS"); _BRAILLE_PATTERNSReady = true; } return _BRAILLE_PATTERNSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _BRAILLE_PATTERNSContent = default;
            private static bool _BRAILLE_PATTERNSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#BUGINESE"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock BUGINESE { get { if (!_BUGINESEReady) { _BUGINESEContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "BUGINESE"); _BUGINESEReady = true; } return _BUGINESEContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _BUGINESEContent = default;
            private static bool _BUGINESEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#BUHID"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock BUHID { get { if (!_BUHIDReady) { _BUHIDContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "BUHID"); _BUHIDReady = true; } return _BUHIDContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _BUHIDContent = default;
            private static bool _BUHIDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#BYZANTINE_MUSICAL_SYMBOLS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock BYZANTINE_MUSICAL_SYMBOLS { get { if (!_BYZANTINE_MUSICAL_SYMBOLSReady) { _BYZANTINE_MUSICAL_SYMBOLSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "BYZANTINE_MUSICAL_SYMBOLS"); _BYZANTINE_MUSICAL_SYMBOLSReady = true; } return _BYZANTINE_MUSICAL_SYMBOLSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _BYZANTINE_MUSICAL_SYMBOLSContent = default;
            private static bool _BYZANTINE_MUSICAL_SYMBOLSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CARIAN"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock CARIAN { get { if (!_CARIANReady) { _CARIANContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "CARIAN"); _CARIANReady = true; } return _CARIANContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _CARIANContent = default;
            private static bool _CARIANReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CAUCASIAN_ALBANIAN"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock CAUCASIAN_ALBANIAN { get { if (!_CAUCASIAN_ALBANIANReady) { _CAUCASIAN_ALBANIANContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "CAUCASIAN_ALBANIAN"); _CAUCASIAN_ALBANIANReady = true; } return _CAUCASIAN_ALBANIANContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _CAUCASIAN_ALBANIANContent = default;
            private static bool _CAUCASIAN_ALBANIANReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CHAKMA"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock CHAKMA { get { if (!_CHAKMAReady) { _CHAKMAContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "CHAKMA"); _CHAKMAReady = true; } return _CHAKMAContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _CHAKMAContent = default;
            private static bool _CHAKMAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CHAM"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock CHAM { get { if (!_CHAMReady) { _CHAMContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "CHAM"); _CHAMReady = true; } return _CHAMContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _CHAMContent = default;
            private static bool _CHAMReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CHEROKEE"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock CHEROKEE { get { if (!_CHEROKEEReady) { _CHEROKEEContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "CHEROKEE"); _CHEROKEEReady = true; } return _CHEROKEEContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _CHEROKEEContent = default;
            private static bool _CHEROKEEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CHEROKEE_SUPPLEMENT"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock CHEROKEE_SUPPLEMENT { get { if (!_CHEROKEE_SUPPLEMENTReady) { _CHEROKEE_SUPPLEMENTContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "CHEROKEE_SUPPLEMENT"); _CHEROKEE_SUPPLEMENTReady = true; } return _CHEROKEE_SUPPLEMENTContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _CHEROKEE_SUPPLEMENTContent = default;
            private static bool _CHEROKEE_SUPPLEMENTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CHESS_SYMBOLS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock CHESS_SYMBOLS { get { if (!_CHESS_SYMBOLSReady) { _CHESS_SYMBOLSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "CHESS_SYMBOLS"); _CHESS_SYMBOLSReady = true; } return _CHESS_SYMBOLSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _CHESS_SYMBOLSContent = default;
            private static bool _CHESS_SYMBOLSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CHORASMIAN"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock CHORASMIAN { get { if (!_CHORASMIANReady) { _CHORASMIANContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "CHORASMIAN"); _CHORASMIANReady = true; } return _CHORASMIANContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _CHORASMIANContent = default;
            private static bool _CHORASMIANReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CJK_COMPATIBILITY"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock CJK_COMPATIBILITY { get { if (!_CJK_COMPATIBILITYReady) { _CJK_COMPATIBILITYContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "CJK_COMPATIBILITY"); _CJK_COMPATIBILITYReady = true; } return _CJK_COMPATIBILITYContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _CJK_COMPATIBILITYContent = default;
            private static bool _CJK_COMPATIBILITYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CJK_COMPATIBILITY_FORMS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock CJK_COMPATIBILITY_FORMS { get { if (!_CJK_COMPATIBILITY_FORMSReady) { _CJK_COMPATIBILITY_FORMSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "CJK_COMPATIBILITY_FORMS"); _CJK_COMPATIBILITY_FORMSReady = true; } return _CJK_COMPATIBILITY_FORMSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _CJK_COMPATIBILITY_FORMSContent = default;
            private static bool _CJK_COMPATIBILITY_FORMSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CJK_COMPATIBILITY_IDEOGRAPHS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock CJK_COMPATIBILITY_IDEOGRAPHS { get { if (!_CJK_COMPATIBILITY_IDEOGRAPHSReady) { _CJK_COMPATIBILITY_IDEOGRAPHSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "CJK_COMPATIBILITY_IDEOGRAPHS"); _CJK_COMPATIBILITY_IDEOGRAPHSReady = true; } return _CJK_COMPATIBILITY_IDEOGRAPHSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _CJK_COMPATIBILITY_IDEOGRAPHSContent = default;
            private static bool _CJK_COMPATIBILITY_IDEOGRAPHSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT { get { if (!_CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENTReady) { _CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENTContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT"); _CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENTReady = true; } return _CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENTContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENTContent = default;
            private static bool _CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CJK_RADICALS_SUPPLEMENT"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock CJK_RADICALS_SUPPLEMENT { get { if (!_CJK_RADICALS_SUPPLEMENTReady) { _CJK_RADICALS_SUPPLEMENTContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "CJK_RADICALS_SUPPLEMENT"); _CJK_RADICALS_SUPPLEMENTReady = true; } return _CJK_RADICALS_SUPPLEMENTContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _CJK_RADICALS_SUPPLEMENTContent = default;
            private static bool _CJK_RADICALS_SUPPLEMENTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CJK_STROKES"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock CJK_STROKES { get { if (!_CJK_STROKESReady) { _CJK_STROKESContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "CJK_STROKES"); _CJK_STROKESReady = true; } return _CJK_STROKESContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _CJK_STROKESContent = default;
            private static bool _CJK_STROKESReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CJK_SYMBOLS_AND_PUNCTUATION"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock CJK_SYMBOLS_AND_PUNCTUATION { get { if (!_CJK_SYMBOLS_AND_PUNCTUATIONReady) { _CJK_SYMBOLS_AND_PUNCTUATIONContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "CJK_SYMBOLS_AND_PUNCTUATION"); _CJK_SYMBOLS_AND_PUNCTUATIONReady = true; } return _CJK_SYMBOLS_AND_PUNCTUATIONContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _CJK_SYMBOLS_AND_PUNCTUATIONContent = default;
            private static bool _CJK_SYMBOLS_AND_PUNCTUATIONReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CJK_UNIFIED_IDEOGRAPHS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock CJK_UNIFIED_IDEOGRAPHS { get { if (!_CJK_UNIFIED_IDEOGRAPHSReady) { _CJK_UNIFIED_IDEOGRAPHSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "CJK_UNIFIED_IDEOGRAPHS"); _CJK_UNIFIED_IDEOGRAPHSReady = true; } return _CJK_UNIFIED_IDEOGRAPHSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _CJK_UNIFIED_IDEOGRAPHSContent = default;
            private static bool _CJK_UNIFIED_IDEOGRAPHSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A { get { if (!_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_AReady) { _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_AContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A"); _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_AReady = true; } return _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_AContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_AContent = default;
            private static bool _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_AReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B { get { if (!_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_BReady) { _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_BContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B"); _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_BReady = true; } return _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_BContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_BContent = default;
            private static bool _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_BReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C { get { if (!_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_CReady) { _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_CContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C"); _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_CReady = true; } return _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_CContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_CContent = default;
            private static bool _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_CReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D { get { if (!_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_DReady) { _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_DContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D"); _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_DReady = true; } return _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_DContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_DContent = default;
            private static bool _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_DReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CJK_UNIFIED_IDEOGRAPHS_EXTENSION_E"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock CJK_UNIFIED_IDEOGRAPHS_EXTENSION_E { get { if (!_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_EReady) { _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_EContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "CJK_UNIFIED_IDEOGRAPHS_EXTENSION_E"); _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_EReady = true; } return _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_EContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_EContent = default;
            private static bool _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_EReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CJK_UNIFIED_IDEOGRAPHS_EXTENSION_F"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock CJK_UNIFIED_IDEOGRAPHS_EXTENSION_F { get { if (!_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_FReady) { _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_FContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "CJK_UNIFIED_IDEOGRAPHS_EXTENSION_F"); _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_FReady = true; } return _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_FContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_FContent = default;
            private static bool _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_FReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CJK_UNIFIED_IDEOGRAPHS_EXTENSION_G"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock CJK_UNIFIED_IDEOGRAPHS_EXTENSION_G { get { if (!_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_GReady) { _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_GContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "CJK_UNIFIED_IDEOGRAPHS_EXTENSION_G"); _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_GReady = true; } return _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_GContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_GContent = default;
            private static bool _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_GReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CJK_UNIFIED_IDEOGRAPHS_EXTENSION_H"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock CJK_UNIFIED_IDEOGRAPHS_EXTENSION_H { get { if (!_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_HReady) { _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_HContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "CJK_UNIFIED_IDEOGRAPHS_EXTENSION_H"); _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_HReady = true; } return _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_HContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_HContent = default;
            private static bool _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_HReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CJK_UNIFIED_IDEOGRAPHS_EXTENSION_I"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock CJK_UNIFIED_IDEOGRAPHS_EXTENSION_I { get { if (!_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_IReady) { _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_IContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "CJK_UNIFIED_IDEOGRAPHS_EXTENSION_I"); _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_IReady = true; } return _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_IContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_IContent = default;
            private static bool _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_IReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#COMBINING_DIACRITICAL_MARKS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock COMBINING_DIACRITICAL_MARKS { get { if (!_COMBINING_DIACRITICAL_MARKSReady) { _COMBINING_DIACRITICAL_MARKSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "COMBINING_DIACRITICAL_MARKS"); _COMBINING_DIACRITICAL_MARKSReady = true; } return _COMBINING_DIACRITICAL_MARKSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _COMBINING_DIACRITICAL_MARKSContent = default;
            private static bool _COMBINING_DIACRITICAL_MARKSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#COMBINING_DIACRITICAL_MARKS_EXTENDED"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock COMBINING_DIACRITICAL_MARKS_EXTENDED { get { if (!_COMBINING_DIACRITICAL_MARKS_EXTENDEDReady) { _COMBINING_DIACRITICAL_MARKS_EXTENDEDContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "COMBINING_DIACRITICAL_MARKS_EXTENDED"); _COMBINING_DIACRITICAL_MARKS_EXTENDEDReady = true; } return _COMBINING_DIACRITICAL_MARKS_EXTENDEDContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _COMBINING_DIACRITICAL_MARKS_EXTENDEDContent = default;
            private static bool _COMBINING_DIACRITICAL_MARKS_EXTENDEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#COMBINING_DIACRITICAL_MARKS_SUPPLEMENT"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock COMBINING_DIACRITICAL_MARKS_SUPPLEMENT { get { if (!_COMBINING_DIACRITICAL_MARKS_SUPPLEMENTReady) { _COMBINING_DIACRITICAL_MARKS_SUPPLEMENTContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "COMBINING_DIACRITICAL_MARKS_SUPPLEMENT"); _COMBINING_DIACRITICAL_MARKS_SUPPLEMENTReady = true; } return _COMBINING_DIACRITICAL_MARKS_SUPPLEMENTContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _COMBINING_DIACRITICAL_MARKS_SUPPLEMENTContent = default;
            private static bool _COMBINING_DIACRITICAL_MARKS_SUPPLEMENTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#COMBINING_HALF_MARKS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock COMBINING_HALF_MARKS { get { if (!_COMBINING_HALF_MARKSReady) { _COMBINING_HALF_MARKSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "COMBINING_HALF_MARKS"); _COMBINING_HALF_MARKSReady = true; } return _COMBINING_HALF_MARKSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _COMBINING_HALF_MARKSContent = default;
            private static bool _COMBINING_HALF_MARKSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#COMBINING_MARKS_FOR_SYMBOLS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock COMBINING_MARKS_FOR_SYMBOLS { get { if (!_COMBINING_MARKS_FOR_SYMBOLSReady) { _COMBINING_MARKS_FOR_SYMBOLSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "COMBINING_MARKS_FOR_SYMBOLS"); _COMBINING_MARKS_FOR_SYMBOLSReady = true; } return _COMBINING_MARKS_FOR_SYMBOLSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _COMBINING_MARKS_FOR_SYMBOLSContent = default;
            private static bool _COMBINING_MARKS_FOR_SYMBOLSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#COMMON_INDIC_NUMBER_FORMS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock COMMON_INDIC_NUMBER_FORMS { get { if (!_COMMON_INDIC_NUMBER_FORMSReady) { _COMMON_INDIC_NUMBER_FORMSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "COMMON_INDIC_NUMBER_FORMS"); _COMMON_INDIC_NUMBER_FORMSReady = true; } return _COMMON_INDIC_NUMBER_FORMSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _COMMON_INDIC_NUMBER_FORMSContent = default;
            private static bool _COMMON_INDIC_NUMBER_FORMSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CONTROL_PICTURES"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock CONTROL_PICTURES { get { if (!_CONTROL_PICTURESReady) { _CONTROL_PICTURESContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "CONTROL_PICTURES"); _CONTROL_PICTURESReady = true; } return _CONTROL_PICTURESContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _CONTROL_PICTURESContent = default;
            private static bool _CONTROL_PICTURESReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#COPTIC"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock COPTIC { get { if (!_COPTICReady) { _COPTICContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "COPTIC"); _COPTICReady = true; } return _COPTICContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _COPTICContent = default;
            private static bool _COPTICReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#COPTIC_EPACT_NUMBERS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock COPTIC_EPACT_NUMBERS { get { if (!_COPTIC_EPACT_NUMBERSReady) { _COPTIC_EPACT_NUMBERSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "COPTIC_EPACT_NUMBERS"); _COPTIC_EPACT_NUMBERSReady = true; } return _COPTIC_EPACT_NUMBERSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _COPTIC_EPACT_NUMBERSContent = default;
            private static bool _COPTIC_EPACT_NUMBERSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#COUNTING_ROD_NUMERALS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock COUNTING_ROD_NUMERALS { get { if (!_COUNTING_ROD_NUMERALSReady) { _COUNTING_ROD_NUMERALSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "COUNTING_ROD_NUMERALS"); _COUNTING_ROD_NUMERALSReady = true; } return _COUNTING_ROD_NUMERALSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _COUNTING_ROD_NUMERALSContent = default;
            private static bool _COUNTING_ROD_NUMERALSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CUNEIFORM"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock CUNEIFORM { get { if (!_CUNEIFORMReady) { _CUNEIFORMContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "CUNEIFORM"); _CUNEIFORMReady = true; } return _CUNEIFORMContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _CUNEIFORMContent = default;
            private static bool _CUNEIFORMReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CUNEIFORM_NUMBERS_AND_PUNCTUATION"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock CUNEIFORM_NUMBERS_AND_PUNCTUATION { get { if (!_CUNEIFORM_NUMBERS_AND_PUNCTUATIONReady) { _CUNEIFORM_NUMBERS_AND_PUNCTUATIONContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "CUNEIFORM_NUMBERS_AND_PUNCTUATION"); _CUNEIFORM_NUMBERS_AND_PUNCTUATIONReady = true; } return _CUNEIFORM_NUMBERS_AND_PUNCTUATIONContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _CUNEIFORM_NUMBERS_AND_PUNCTUATIONContent = default;
            private static bool _CUNEIFORM_NUMBERS_AND_PUNCTUATIONReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CURRENCY_SYMBOLS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock CURRENCY_SYMBOLS { get { if (!_CURRENCY_SYMBOLSReady) { _CURRENCY_SYMBOLSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "CURRENCY_SYMBOLS"); _CURRENCY_SYMBOLSReady = true; } return _CURRENCY_SYMBOLSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _CURRENCY_SYMBOLSContent = default;
            private static bool _CURRENCY_SYMBOLSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CYPRIOT_SYLLABARY"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock CYPRIOT_SYLLABARY { get { if (!_CYPRIOT_SYLLABARYReady) { _CYPRIOT_SYLLABARYContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "CYPRIOT_SYLLABARY"); _CYPRIOT_SYLLABARYReady = true; } return _CYPRIOT_SYLLABARYContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _CYPRIOT_SYLLABARYContent = default;
            private static bool _CYPRIOT_SYLLABARYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CYPRO_MINOAN"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock CYPRO_MINOAN { get { if (!_CYPRO_MINOANReady) { _CYPRO_MINOANContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "CYPRO_MINOAN"); _CYPRO_MINOANReady = true; } return _CYPRO_MINOANContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _CYPRO_MINOANContent = default;
            private static bool _CYPRO_MINOANReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CYRILLIC"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock CYRILLIC { get { if (!_CYRILLICReady) { _CYRILLICContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "CYRILLIC"); _CYRILLICReady = true; } return _CYRILLICContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _CYRILLICContent = default;
            private static bool _CYRILLICReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CYRILLIC_EXTENDED_A"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock CYRILLIC_EXTENDED_A { get { if (!_CYRILLIC_EXTENDED_AReady) { _CYRILLIC_EXTENDED_AContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "CYRILLIC_EXTENDED_A"); _CYRILLIC_EXTENDED_AReady = true; } return _CYRILLIC_EXTENDED_AContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _CYRILLIC_EXTENDED_AContent = default;
            private static bool _CYRILLIC_EXTENDED_AReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CYRILLIC_EXTENDED_B"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock CYRILLIC_EXTENDED_B { get { if (!_CYRILLIC_EXTENDED_BReady) { _CYRILLIC_EXTENDED_BContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "CYRILLIC_EXTENDED_B"); _CYRILLIC_EXTENDED_BReady = true; } return _CYRILLIC_EXTENDED_BContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _CYRILLIC_EXTENDED_BContent = default;
            private static bool _CYRILLIC_EXTENDED_BReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CYRILLIC_EXTENDED_C"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock CYRILLIC_EXTENDED_C { get { if (!_CYRILLIC_EXTENDED_CReady) { _CYRILLIC_EXTENDED_CContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "CYRILLIC_EXTENDED_C"); _CYRILLIC_EXTENDED_CReady = true; } return _CYRILLIC_EXTENDED_CContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _CYRILLIC_EXTENDED_CContent = default;
            private static bool _CYRILLIC_EXTENDED_CReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CYRILLIC_EXTENDED_D"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock CYRILLIC_EXTENDED_D { get { if (!_CYRILLIC_EXTENDED_DReady) { _CYRILLIC_EXTENDED_DContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "CYRILLIC_EXTENDED_D"); _CYRILLIC_EXTENDED_DReady = true; } return _CYRILLIC_EXTENDED_DContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _CYRILLIC_EXTENDED_DContent = default;
            private static bool _CYRILLIC_EXTENDED_DReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CYRILLIC_SUPPLEMENT"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock CYRILLIC_SUPPLEMENT { get { if (!_CYRILLIC_SUPPLEMENTReady) { _CYRILLIC_SUPPLEMENTContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "CYRILLIC_SUPPLEMENT"); _CYRILLIC_SUPPLEMENTReady = true; } return _CYRILLIC_SUPPLEMENTContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _CYRILLIC_SUPPLEMENTContent = default;
            private static bool _CYRILLIC_SUPPLEMENTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CYRILLIC_SUPPLEMENTARY"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock CYRILLIC_SUPPLEMENTARY { get { if (!_CYRILLIC_SUPPLEMENTARYReady) { _CYRILLIC_SUPPLEMENTARYContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "CYRILLIC_SUPPLEMENTARY"); _CYRILLIC_SUPPLEMENTARYReady = true; } return _CYRILLIC_SUPPLEMENTARYContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _CYRILLIC_SUPPLEMENTARYContent = default;
            private static bool _CYRILLIC_SUPPLEMENTARYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#DESERET"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock DESERET { get { if (!_DESERETReady) { _DESERETContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "DESERET"); _DESERETReady = true; } return _DESERETContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _DESERETContent = default;
            private static bool _DESERETReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#DEVANAGARI"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock DEVANAGARI { get { if (!_DEVANAGARIReady) { _DEVANAGARIContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "DEVANAGARI"); _DEVANAGARIReady = true; } return _DEVANAGARIContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _DEVANAGARIContent = default;
            private static bool _DEVANAGARIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#DEVANAGARI_EXTENDED"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock DEVANAGARI_EXTENDED { get { if (!_DEVANAGARI_EXTENDEDReady) { _DEVANAGARI_EXTENDEDContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "DEVANAGARI_EXTENDED"); _DEVANAGARI_EXTENDEDReady = true; } return _DEVANAGARI_EXTENDEDContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _DEVANAGARI_EXTENDEDContent = default;
            private static bool _DEVANAGARI_EXTENDEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#DEVANAGARI_EXTENDED_A"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock DEVANAGARI_EXTENDED_A { get { if (!_DEVANAGARI_EXTENDED_AReady) { _DEVANAGARI_EXTENDED_AContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "DEVANAGARI_EXTENDED_A"); _DEVANAGARI_EXTENDED_AReady = true; } return _DEVANAGARI_EXTENDED_AContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _DEVANAGARI_EXTENDED_AContent = default;
            private static bool _DEVANAGARI_EXTENDED_AReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#DINGBATS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock DINGBATS { get { if (!_DINGBATSReady) { _DINGBATSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "DINGBATS"); _DINGBATSReady = true; } return _DINGBATSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _DINGBATSContent = default;
            private static bool _DINGBATSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#DIVES_AKURU"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock DIVES_AKURU { get { if (!_DIVES_AKURUReady) { _DIVES_AKURUContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "DIVES_AKURU"); _DIVES_AKURUReady = true; } return _DIVES_AKURUContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _DIVES_AKURUContent = default;
            private static bool _DIVES_AKURUReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#DOGRA"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock DOGRA { get { if (!_DOGRAReady) { _DOGRAContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "DOGRA"); _DOGRAReady = true; } return _DOGRAContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _DOGRAContent = default;
            private static bool _DOGRAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#DOMINO_TILES"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock DOMINO_TILES { get { if (!_DOMINO_TILESReady) { _DOMINO_TILESContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "DOMINO_TILES"); _DOMINO_TILESReady = true; } return _DOMINO_TILESContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _DOMINO_TILESContent = default;
            private static bool _DOMINO_TILESReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#DUPLOYAN"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock DUPLOYAN { get { if (!_DUPLOYANReady) { _DUPLOYANContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "DUPLOYAN"); _DUPLOYANReady = true; } return _DUPLOYANContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _DUPLOYANContent = default;
            private static bool _DUPLOYANReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#EARLY_DYNASTIC_CUNEIFORM"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock EARLY_DYNASTIC_CUNEIFORM { get { if (!_EARLY_DYNASTIC_CUNEIFORMReady) { _EARLY_DYNASTIC_CUNEIFORMContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "EARLY_DYNASTIC_CUNEIFORM"); _EARLY_DYNASTIC_CUNEIFORMReady = true; } return _EARLY_DYNASTIC_CUNEIFORMContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _EARLY_DYNASTIC_CUNEIFORMContent = default;
            private static bool _EARLY_DYNASTIC_CUNEIFORMReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#EGYPTIAN_HIEROGLYPH_FORMAT_CONTROLS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock EGYPTIAN_HIEROGLYPH_FORMAT_CONTROLS { get { if (!_EGYPTIAN_HIEROGLYPH_FORMAT_CONTROLSReady) { _EGYPTIAN_HIEROGLYPH_FORMAT_CONTROLSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "EGYPTIAN_HIEROGLYPH_FORMAT_CONTROLS"); _EGYPTIAN_HIEROGLYPH_FORMAT_CONTROLSReady = true; } return _EGYPTIAN_HIEROGLYPH_FORMAT_CONTROLSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _EGYPTIAN_HIEROGLYPH_FORMAT_CONTROLSContent = default;
            private static bool _EGYPTIAN_HIEROGLYPH_FORMAT_CONTROLSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#EGYPTIAN_HIEROGLYPHS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock EGYPTIAN_HIEROGLYPHS { get { if (!_EGYPTIAN_HIEROGLYPHSReady) { _EGYPTIAN_HIEROGLYPHSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "EGYPTIAN_HIEROGLYPHS"); _EGYPTIAN_HIEROGLYPHSReady = true; } return _EGYPTIAN_HIEROGLYPHSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _EGYPTIAN_HIEROGLYPHSContent = default;
            private static bool _EGYPTIAN_HIEROGLYPHSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ELBASAN"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock ELBASAN { get { if (!_ELBASANReady) { _ELBASANContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "ELBASAN"); _ELBASANReady = true; } return _ELBASANContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _ELBASANContent = default;
            private static bool _ELBASANReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ELYMAIC"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock ELYMAIC { get { if (!_ELYMAICReady) { _ELYMAICContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "ELYMAIC"); _ELYMAICReady = true; } return _ELYMAICContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _ELYMAICContent = default;
            private static bool _ELYMAICReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#EMOTICONS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock EMOTICONS { get { if (!_EMOTICONSReady) { _EMOTICONSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "EMOTICONS"); _EMOTICONSReady = true; } return _EMOTICONSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _EMOTICONSContent = default;
            private static bool _EMOTICONSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ENCLOSED_ALPHANUMERIC_SUPPLEMENT"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock ENCLOSED_ALPHANUMERIC_SUPPLEMENT { get { if (!_ENCLOSED_ALPHANUMERIC_SUPPLEMENTReady) { _ENCLOSED_ALPHANUMERIC_SUPPLEMENTContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "ENCLOSED_ALPHANUMERIC_SUPPLEMENT"); _ENCLOSED_ALPHANUMERIC_SUPPLEMENTReady = true; } return _ENCLOSED_ALPHANUMERIC_SUPPLEMENTContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _ENCLOSED_ALPHANUMERIC_SUPPLEMENTContent = default;
            private static bool _ENCLOSED_ALPHANUMERIC_SUPPLEMENTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ENCLOSED_ALPHANUMERICS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock ENCLOSED_ALPHANUMERICS { get { if (!_ENCLOSED_ALPHANUMERICSReady) { _ENCLOSED_ALPHANUMERICSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "ENCLOSED_ALPHANUMERICS"); _ENCLOSED_ALPHANUMERICSReady = true; } return _ENCLOSED_ALPHANUMERICSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _ENCLOSED_ALPHANUMERICSContent = default;
            private static bool _ENCLOSED_ALPHANUMERICSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ENCLOSED_CJK_LETTERS_AND_MONTHS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock ENCLOSED_CJK_LETTERS_AND_MONTHS { get { if (!_ENCLOSED_CJK_LETTERS_AND_MONTHSReady) { _ENCLOSED_CJK_LETTERS_AND_MONTHSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "ENCLOSED_CJK_LETTERS_AND_MONTHS"); _ENCLOSED_CJK_LETTERS_AND_MONTHSReady = true; } return _ENCLOSED_CJK_LETTERS_AND_MONTHSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _ENCLOSED_CJK_LETTERS_AND_MONTHSContent = default;
            private static bool _ENCLOSED_CJK_LETTERS_AND_MONTHSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ENCLOSED_IDEOGRAPHIC_SUPPLEMENT"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock ENCLOSED_IDEOGRAPHIC_SUPPLEMENT { get { if (!_ENCLOSED_IDEOGRAPHIC_SUPPLEMENTReady) { _ENCLOSED_IDEOGRAPHIC_SUPPLEMENTContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "ENCLOSED_IDEOGRAPHIC_SUPPLEMENT"); _ENCLOSED_IDEOGRAPHIC_SUPPLEMENTReady = true; } return _ENCLOSED_IDEOGRAPHIC_SUPPLEMENTContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _ENCLOSED_IDEOGRAPHIC_SUPPLEMENTContent = default;
            private static bool _ENCLOSED_IDEOGRAPHIC_SUPPLEMENTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ETHIOPIC"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock ETHIOPIC { get { if (!_ETHIOPICReady) { _ETHIOPICContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "ETHIOPIC"); _ETHIOPICReady = true; } return _ETHIOPICContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _ETHIOPICContent = default;
            private static bool _ETHIOPICReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ETHIOPIC_EXTENDED"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock ETHIOPIC_EXTENDED { get { if (!_ETHIOPIC_EXTENDEDReady) { _ETHIOPIC_EXTENDEDContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "ETHIOPIC_EXTENDED"); _ETHIOPIC_EXTENDEDReady = true; } return _ETHIOPIC_EXTENDEDContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _ETHIOPIC_EXTENDEDContent = default;
            private static bool _ETHIOPIC_EXTENDEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ETHIOPIC_EXTENDED_A"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock ETHIOPIC_EXTENDED_A { get { if (!_ETHIOPIC_EXTENDED_AReady) { _ETHIOPIC_EXTENDED_AContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "ETHIOPIC_EXTENDED_A"); _ETHIOPIC_EXTENDED_AReady = true; } return _ETHIOPIC_EXTENDED_AContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _ETHIOPIC_EXTENDED_AContent = default;
            private static bool _ETHIOPIC_EXTENDED_AReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ETHIOPIC_EXTENDED_B"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock ETHIOPIC_EXTENDED_B { get { if (!_ETHIOPIC_EXTENDED_BReady) { _ETHIOPIC_EXTENDED_BContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "ETHIOPIC_EXTENDED_B"); _ETHIOPIC_EXTENDED_BReady = true; } return _ETHIOPIC_EXTENDED_BContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _ETHIOPIC_EXTENDED_BContent = default;
            private static bool _ETHIOPIC_EXTENDED_BReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ETHIOPIC_SUPPLEMENT"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock ETHIOPIC_SUPPLEMENT { get { if (!_ETHIOPIC_SUPPLEMENTReady) { _ETHIOPIC_SUPPLEMENTContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "ETHIOPIC_SUPPLEMENT"); _ETHIOPIC_SUPPLEMENTReady = true; } return _ETHIOPIC_SUPPLEMENTContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _ETHIOPIC_SUPPLEMENTContent = default;
            private static bool _ETHIOPIC_SUPPLEMENTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#GENERAL_PUNCTUATION"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock GENERAL_PUNCTUATION { get { if (!_GENERAL_PUNCTUATIONReady) { _GENERAL_PUNCTUATIONContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "GENERAL_PUNCTUATION"); _GENERAL_PUNCTUATIONReady = true; } return _GENERAL_PUNCTUATIONContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _GENERAL_PUNCTUATIONContent = default;
            private static bool _GENERAL_PUNCTUATIONReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#GEOMETRIC_SHAPES"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock GEOMETRIC_SHAPES { get { if (!_GEOMETRIC_SHAPESReady) { _GEOMETRIC_SHAPESContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "GEOMETRIC_SHAPES"); _GEOMETRIC_SHAPESReady = true; } return _GEOMETRIC_SHAPESContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _GEOMETRIC_SHAPESContent = default;
            private static bool _GEOMETRIC_SHAPESReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#GEOMETRIC_SHAPES_EXTENDED"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock GEOMETRIC_SHAPES_EXTENDED { get { if (!_GEOMETRIC_SHAPES_EXTENDEDReady) { _GEOMETRIC_SHAPES_EXTENDEDContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "GEOMETRIC_SHAPES_EXTENDED"); _GEOMETRIC_SHAPES_EXTENDEDReady = true; } return _GEOMETRIC_SHAPES_EXTENDEDContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _GEOMETRIC_SHAPES_EXTENDEDContent = default;
            private static bool _GEOMETRIC_SHAPES_EXTENDEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#GEORGIAN"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock GEORGIAN { get { if (!_GEORGIANReady) { _GEORGIANContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "GEORGIAN"); _GEORGIANReady = true; } return _GEORGIANContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _GEORGIANContent = default;
            private static bool _GEORGIANReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#GEORGIAN_EXTENDED"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock GEORGIAN_EXTENDED { get { if (!_GEORGIAN_EXTENDEDReady) { _GEORGIAN_EXTENDEDContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "GEORGIAN_EXTENDED"); _GEORGIAN_EXTENDEDReady = true; } return _GEORGIAN_EXTENDEDContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _GEORGIAN_EXTENDEDContent = default;
            private static bool _GEORGIAN_EXTENDEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#GEORGIAN_SUPPLEMENT"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock GEORGIAN_SUPPLEMENT { get { if (!_GEORGIAN_SUPPLEMENTReady) { _GEORGIAN_SUPPLEMENTContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "GEORGIAN_SUPPLEMENT"); _GEORGIAN_SUPPLEMENTReady = true; } return _GEORGIAN_SUPPLEMENTContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _GEORGIAN_SUPPLEMENTContent = default;
            private static bool _GEORGIAN_SUPPLEMENTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#GLAGOLITIC"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock GLAGOLITIC { get { if (!_GLAGOLITICReady) { _GLAGOLITICContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "GLAGOLITIC"); _GLAGOLITICReady = true; } return _GLAGOLITICContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _GLAGOLITICContent = default;
            private static bool _GLAGOLITICReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#GLAGOLITIC_SUPPLEMENT"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock GLAGOLITIC_SUPPLEMENT { get { if (!_GLAGOLITIC_SUPPLEMENTReady) { _GLAGOLITIC_SUPPLEMENTContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "GLAGOLITIC_SUPPLEMENT"); _GLAGOLITIC_SUPPLEMENTReady = true; } return _GLAGOLITIC_SUPPLEMENTContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _GLAGOLITIC_SUPPLEMENTContent = default;
            private static bool _GLAGOLITIC_SUPPLEMENTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#GOTHIC"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock GOTHIC { get { if (!_GOTHICReady) { _GOTHICContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "GOTHIC"); _GOTHICReady = true; } return _GOTHICContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _GOTHICContent = default;
            private static bool _GOTHICReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#GRANTHA"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock GRANTHA { get { if (!_GRANTHAReady) { _GRANTHAContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "GRANTHA"); _GRANTHAReady = true; } return _GRANTHAContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _GRANTHAContent = default;
            private static bool _GRANTHAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#GREEK"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock GREEK { get { if (!_GREEKReady) { _GREEKContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "GREEK"); _GREEKReady = true; } return _GREEKContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _GREEKContent = default;
            private static bool _GREEKReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#GREEK_EXTENDED"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock GREEK_EXTENDED { get { if (!_GREEK_EXTENDEDReady) { _GREEK_EXTENDEDContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "GREEK_EXTENDED"); _GREEK_EXTENDEDReady = true; } return _GREEK_EXTENDEDContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _GREEK_EXTENDEDContent = default;
            private static bool _GREEK_EXTENDEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#GUJARATI"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock GUJARATI { get { if (!_GUJARATIReady) { _GUJARATIContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "GUJARATI"); _GUJARATIReady = true; } return _GUJARATIContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _GUJARATIContent = default;
            private static bool _GUJARATIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#GUNJALA_GONDI"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock GUNJALA_GONDI { get { if (!_GUNJALA_GONDIReady) { _GUNJALA_GONDIContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "GUNJALA_GONDI"); _GUNJALA_GONDIReady = true; } return _GUNJALA_GONDIContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _GUNJALA_GONDIContent = default;
            private static bool _GUNJALA_GONDIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#GURMUKHI"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock GURMUKHI { get { if (!_GURMUKHIReady) { _GURMUKHIContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "GURMUKHI"); _GURMUKHIReady = true; } return _GURMUKHIContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _GURMUKHIContent = default;
            private static bool _GURMUKHIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#HALFWIDTH_AND_FULLWIDTH_FORMS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock HALFWIDTH_AND_FULLWIDTH_FORMS { get { if (!_HALFWIDTH_AND_FULLWIDTH_FORMSReady) { _HALFWIDTH_AND_FULLWIDTH_FORMSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "HALFWIDTH_AND_FULLWIDTH_FORMS"); _HALFWIDTH_AND_FULLWIDTH_FORMSReady = true; } return _HALFWIDTH_AND_FULLWIDTH_FORMSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _HALFWIDTH_AND_FULLWIDTH_FORMSContent = default;
            private static bool _HALFWIDTH_AND_FULLWIDTH_FORMSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#HANGUL_COMPATIBILITY_JAMO"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock HANGUL_COMPATIBILITY_JAMO { get { if (!_HANGUL_COMPATIBILITY_JAMOReady) { _HANGUL_COMPATIBILITY_JAMOContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "HANGUL_COMPATIBILITY_JAMO"); _HANGUL_COMPATIBILITY_JAMOReady = true; } return _HANGUL_COMPATIBILITY_JAMOContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _HANGUL_COMPATIBILITY_JAMOContent = default;
            private static bool _HANGUL_COMPATIBILITY_JAMOReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#HANGUL_JAMO"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock HANGUL_JAMO { get { if (!_HANGUL_JAMOReady) { _HANGUL_JAMOContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "HANGUL_JAMO"); _HANGUL_JAMOReady = true; } return _HANGUL_JAMOContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _HANGUL_JAMOContent = default;
            private static bool _HANGUL_JAMOReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#HANGUL_JAMO_EXTENDED_A"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock HANGUL_JAMO_EXTENDED_A { get { if (!_HANGUL_JAMO_EXTENDED_AReady) { _HANGUL_JAMO_EXTENDED_AContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "HANGUL_JAMO_EXTENDED_A"); _HANGUL_JAMO_EXTENDED_AReady = true; } return _HANGUL_JAMO_EXTENDED_AContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _HANGUL_JAMO_EXTENDED_AContent = default;
            private static bool _HANGUL_JAMO_EXTENDED_AReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#HANGUL_JAMO_EXTENDED_B"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock HANGUL_JAMO_EXTENDED_B { get { if (!_HANGUL_JAMO_EXTENDED_BReady) { _HANGUL_JAMO_EXTENDED_BContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "HANGUL_JAMO_EXTENDED_B"); _HANGUL_JAMO_EXTENDED_BReady = true; } return _HANGUL_JAMO_EXTENDED_BContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _HANGUL_JAMO_EXTENDED_BContent = default;
            private static bool _HANGUL_JAMO_EXTENDED_BReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#HANGUL_SYLLABLES"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock HANGUL_SYLLABLES { get { if (!_HANGUL_SYLLABLESReady) { _HANGUL_SYLLABLESContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "HANGUL_SYLLABLES"); _HANGUL_SYLLABLESReady = true; } return _HANGUL_SYLLABLESContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _HANGUL_SYLLABLESContent = default;
            private static bool _HANGUL_SYLLABLESReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#HANIFI_ROHINGYA"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock HANIFI_ROHINGYA { get { if (!_HANIFI_ROHINGYAReady) { _HANIFI_ROHINGYAContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "HANIFI_ROHINGYA"); _HANIFI_ROHINGYAReady = true; } return _HANIFI_ROHINGYAContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _HANIFI_ROHINGYAContent = default;
            private static bool _HANIFI_ROHINGYAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#HANUNOO"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock HANUNOO { get { if (!_HANUNOOReady) { _HANUNOOContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "HANUNOO"); _HANUNOOReady = true; } return _HANUNOOContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _HANUNOOContent = default;
            private static bool _HANUNOOReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#HATRAN"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock HATRAN { get { if (!_HATRANReady) { _HATRANContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "HATRAN"); _HATRANReady = true; } return _HATRANContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _HATRANContent = default;
            private static bool _HATRANReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#HEBREW"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock HEBREW { get { if (!_HEBREWReady) { _HEBREWContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "HEBREW"); _HEBREWReady = true; } return _HEBREWContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _HEBREWContent = default;
            private static bool _HEBREWReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#HIGH_PRIVATE_USE_SURROGATES"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock HIGH_PRIVATE_USE_SURROGATES { get { if (!_HIGH_PRIVATE_USE_SURROGATESReady) { _HIGH_PRIVATE_USE_SURROGATESContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "HIGH_PRIVATE_USE_SURROGATES"); _HIGH_PRIVATE_USE_SURROGATESReady = true; } return _HIGH_PRIVATE_USE_SURROGATESContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _HIGH_PRIVATE_USE_SURROGATESContent = default;
            private static bool _HIGH_PRIVATE_USE_SURROGATESReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#HIGH_SURROGATES"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock HIGH_SURROGATES { get { if (!_HIGH_SURROGATESReady) { _HIGH_SURROGATESContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "HIGH_SURROGATES"); _HIGH_SURROGATESReady = true; } return _HIGH_SURROGATESContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _HIGH_SURROGATESContent = default;
            private static bool _HIGH_SURROGATESReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#HIRAGANA"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock HIRAGANA { get { if (!_HIRAGANAReady) { _HIRAGANAContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "HIRAGANA"); _HIRAGANAReady = true; } return _HIRAGANAContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _HIRAGANAContent = default;
            private static bool _HIRAGANAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#IDEOGRAPHIC_DESCRIPTION_CHARACTERS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock IDEOGRAPHIC_DESCRIPTION_CHARACTERS { get { if (!_IDEOGRAPHIC_DESCRIPTION_CHARACTERSReady) { _IDEOGRAPHIC_DESCRIPTION_CHARACTERSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "IDEOGRAPHIC_DESCRIPTION_CHARACTERS"); _IDEOGRAPHIC_DESCRIPTION_CHARACTERSReady = true; } return _IDEOGRAPHIC_DESCRIPTION_CHARACTERSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _IDEOGRAPHIC_DESCRIPTION_CHARACTERSContent = default;
            private static bool _IDEOGRAPHIC_DESCRIPTION_CHARACTERSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#IDEOGRAPHIC_SYMBOLS_AND_PUNCTUATION"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock IDEOGRAPHIC_SYMBOLS_AND_PUNCTUATION { get { if (!_IDEOGRAPHIC_SYMBOLS_AND_PUNCTUATIONReady) { _IDEOGRAPHIC_SYMBOLS_AND_PUNCTUATIONContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "IDEOGRAPHIC_SYMBOLS_AND_PUNCTUATION"); _IDEOGRAPHIC_SYMBOLS_AND_PUNCTUATIONReady = true; } return _IDEOGRAPHIC_SYMBOLS_AND_PUNCTUATIONContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _IDEOGRAPHIC_SYMBOLS_AND_PUNCTUATIONContent = default;
            private static bool _IDEOGRAPHIC_SYMBOLS_AND_PUNCTUATIONReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#IMPERIAL_ARAMAIC"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock IMPERIAL_ARAMAIC { get { if (!_IMPERIAL_ARAMAICReady) { _IMPERIAL_ARAMAICContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "IMPERIAL_ARAMAIC"); _IMPERIAL_ARAMAICReady = true; } return _IMPERIAL_ARAMAICContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _IMPERIAL_ARAMAICContent = default;
            private static bool _IMPERIAL_ARAMAICReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#INDIC_SIYAQ_NUMBERS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock INDIC_SIYAQ_NUMBERS { get { if (!_INDIC_SIYAQ_NUMBERSReady) { _INDIC_SIYAQ_NUMBERSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "INDIC_SIYAQ_NUMBERS"); _INDIC_SIYAQ_NUMBERSReady = true; } return _INDIC_SIYAQ_NUMBERSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _INDIC_SIYAQ_NUMBERSContent = default;
            private static bool _INDIC_SIYAQ_NUMBERSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#INSCRIPTIONAL_PAHLAVI"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock INSCRIPTIONAL_PAHLAVI { get { if (!_INSCRIPTIONAL_PAHLAVIReady) { _INSCRIPTIONAL_PAHLAVIContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "INSCRIPTIONAL_PAHLAVI"); _INSCRIPTIONAL_PAHLAVIReady = true; } return _INSCRIPTIONAL_PAHLAVIContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _INSCRIPTIONAL_PAHLAVIContent = default;
            private static bool _INSCRIPTIONAL_PAHLAVIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#INSCRIPTIONAL_PARTHIAN"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock INSCRIPTIONAL_PARTHIAN { get { if (!_INSCRIPTIONAL_PARTHIANReady) { _INSCRIPTIONAL_PARTHIANContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "INSCRIPTIONAL_PARTHIAN"); _INSCRIPTIONAL_PARTHIANReady = true; } return _INSCRIPTIONAL_PARTHIANContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _INSCRIPTIONAL_PARTHIANContent = default;
            private static bool _INSCRIPTIONAL_PARTHIANReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#INVALID_CODE"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock INVALID_CODE { get { if (!_INVALID_CODEReady) { _INVALID_CODEContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "INVALID_CODE"); _INVALID_CODEReady = true; } return _INVALID_CODEContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _INVALID_CODEContent = default;
            private static bool _INVALID_CODEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#IPA_EXTENSIONS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock IPA_EXTENSIONS { get { if (!_IPA_EXTENSIONSReady) { _IPA_EXTENSIONSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "IPA_EXTENSIONS"); _IPA_EXTENSIONSReady = true; } return _IPA_EXTENSIONSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _IPA_EXTENSIONSContent = default;
            private static bool _IPA_EXTENSIONSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#JAVANESE"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock JAVANESE { get { if (!_JAVANESEReady) { _JAVANESEContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "JAVANESE"); _JAVANESEReady = true; } return _JAVANESEContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _JAVANESEContent = default;
            private static bool _JAVANESEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#KAITHI"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock KAITHI { get { if (!_KAITHIReady) { _KAITHIContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "KAITHI"); _KAITHIReady = true; } return _KAITHIContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _KAITHIContent = default;
            private static bool _KAITHIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#KAKTOVIK_NUMERALS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock KAKTOVIK_NUMERALS { get { if (!_KAKTOVIK_NUMERALSReady) { _KAKTOVIK_NUMERALSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "KAKTOVIK_NUMERALS"); _KAKTOVIK_NUMERALSReady = true; } return _KAKTOVIK_NUMERALSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _KAKTOVIK_NUMERALSContent = default;
            private static bool _KAKTOVIK_NUMERALSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#KANA_EXTENDED_A"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock KANA_EXTENDED_A { get { if (!_KANA_EXTENDED_AReady) { _KANA_EXTENDED_AContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "KANA_EXTENDED_A"); _KANA_EXTENDED_AReady = true; } return _KANA_EXTENDED_AContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _KANA_EXTENDED_AContent = default;
            private static bool _KANA_EXTENDED_AReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#KANA_EXTENDED_B"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock KANA_EXTENDED_B { get { if (!_KANA_EXTENDED_BReady) { _KANA_EXTENDED_BContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "KANA_EXTENDED_B"); _KANA_EXTENDED_BReady = true; } return _KANA_EXTENDED_BContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _KANA_EXTENDED_BContent = default;
            private static bool _KANA_EXTENDED_BReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#KANA_SUPPLEMENT"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock KANA_SUPPLEMENT { get { if (!_KANA_SUPPLEMENTReady) { _KANA_SUPPLEMENTContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "KANA_SUPPLEMENT"); _KANA_SUPPLEMENTReady = true; } return _KANA_SUPPLEMENTContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _KANA_SUPPLEMENTContent = default;
            private static bool _KANA_SUPPLEMENTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#KANBUN"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock KANBUN { get { if (!_KANBUNReady) { _KANBUNContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "KANBUN"); _KANBUNReady = true; } return _KANBUNContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _KANBUNContent = default;
            private static bool _KANBUNReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#KANGXI_RADICALS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock KANGXI_RADICALS { get { if (!_KANGXI_RADICALSReady) { _KANGXI_RADICALSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "KANGXI_RADICALS"); _KANGXI_RADICALSReady = true; } return _KANGXI_RADICALSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _KANGXI_RADICALSContent = default;
            private static bool _KANGXI_RADICALSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#KANNADA"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock KANNADA { get { if (!_KANNADAReady) { _KANNADAContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "KANNADA"); _KANNADAReady = true; } return _KANNADAContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _KANNADAContent = default;
            private static bool _KANNADAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#KATAKANA"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock KATAKANA { get { if (!_KATAKANAReady) { _KATAKANAContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "KATAKANA"); _KATAKANAReady = true; } return _KATAKANAContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _KATAKANAContent = default;
            private static bool _KATAKANAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#KATAKANA_PHONETIC_EXTENSIONS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock KATAKANA_PHONETIC_EXTENSIONS { get { if (!_KATAKANA_PHONETIC_EXTENSIONSReady) { _KATAKANA_PHONETIC_EXTENSIONSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "KATAKANA_PHONETIC_EXTENSIONS"); _KATAKANA_PHONETIC_EXTENSIONSReady = true; } return _KATAKANA_PHONETIC_EXTENSIONSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _KATAKANA_PHONETIC_EXTENSIONSContent = default;
            private static bool _KATAKANA_PHONETIC_EXTENSIONSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#KAWI"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock KAWI { get { if (!_KAWIReady) { _KAWIContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "KAWI"); _KAWIReady = true; } return _KAWIContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _KAWIContent = default;
            private static bool _KAWIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#KAYAH_LI"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock KAYAH_LI { get { if (!_KAYAH_LIReady) { _KAYAH_LIContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "KAYAH_LI"); _KAYAH_LIReady = true; } return _KAYAH_LIContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _KAYAH_LIContent = default;
            private static bool _KAYAH_LIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#KHAROSHTHI"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock KHAROSHTHI { get { if (!_KHAROSHTHIReady) { _KHAROSHTHIContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "KHAROSHTHI"); _KHAROSHTHIReady = true; } return _KHAROSHTHIContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _KHAROSHTHIContent = default;
            private static bool _KHAROSHTHIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#KHITAN_SMALL_SCRIPT"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock KHITAN_SMALL_SCRIPT { get { if (!_KHITAN_SMALL_SCRIPTReady) { _KHITAN_SMALL_SCRIPTContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "KHITAN_SMALL_SCRIPT"); _KHITAN_SMALL_SCRIPTReady = true; } return _KHITAN_SMALL_SCRIPTContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _KHITAN_SMALL_SCRIPTContent = default;
            private static bool _KHITAN_SMALL_SCRIPTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#KHMER"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock KHMER { get { if (!_KHMERReady) { _KHMERContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "KHMER"); _KHMERReady = true; } return _KHMERContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _KHMERContent = default;
            private static bool _KHMERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#KHMER_SYMBOLS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock KHMER_SYMBOLS { get { if (!_KHMER_SYMBOLSReady) { _KHMER_SYMBOLSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "KHMER_SYMBOLS"); _KHMER_SYMBOLSReady = true; } return _KHMER_SYMBOLSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _KHMER_SYMBOLSContent = default;
            private static bool _KHMER_SYMBOLSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#KHOJKI"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock KHOJKI { get { if (!_KHOJKIReady) { _KHOJKIContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "KHOJKI"); _KHOJKIReady = true; } return _KHOJKIContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _KHOJKIContent = default;
            private static bool _KHOJKIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#KHUDAWADI"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock KHUDAWADI { get { if (!_KHUDAWADIReady) { _KHUDAWADIContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "KHUDAWADI"); _KHUDAWADIReady = true; } return _KHUDAWADIContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _KHUDAWADIContent = default;
            private static bool _KHUDAWADIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#LAO"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock LAO { get { if (!_LAOReady) { _LAOContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "LAO"); _LAOReady = true; } return _LAOContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _LAOContent = default;
            private static bool _LAOReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#LATIN_1_SUPPLEMENT"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock LATIN_1_SUPPLEMENT { get { if (!_LATIN_1_SUPPLEMENTReady) { _LATIN_1_SUPPLEMENTContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "LATIN_1_SUPPLEMENT"); _LATIN_1_SUPPLEMENTReady = true; } return _LATIN_1_SUPPLEMENTContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _LATIN_1_SUPPLEMENTContent = default;
            private static bool _LATIN_1_SUPPLEMENTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#LATIN_EXTENDED_A"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock LATIN_EXTENDED_A { get { if (!_LATIN_EXTENDED_AReady) { _LATIN_EXTENDED_AContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "LATIN_EXTENDED_A"); _LATIN_EXTENDED_AReady = true; } return _LATIN_EXTENDED_AContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _LATIN_EXTENDED_AContent = default;
            private static bool _LATIN_EXTENDED_AReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#LATIN_EXTENDED_ADDITIONAL"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock LATIN_EXTENDED_ADDITIONAL { get { if (!_LATIN_EXTENDED_ADDITIONALReady) { _LATIN_EXTENDED_ADDITIONALContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "LATIN_EXTENDED_ADDITIONAL"); _LATIN_EXTENDED_ADDITIONALReady = true; } return _LATIN_EXTENDED_ADDITIONALContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _LATIN_EXTENDED_ADDITIONALContent = default;
            private static bool _LATIN_EXTENDED_ADDITIONALReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#LATIN_EXTENDED_B"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock LATIN_EXTENDED_B { get { if (!_LATIN_EXTENDED_BReady) { _LATIN_EXTENDED_BContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "LATIN_EXTENDED_B"); _LATIN_EXTENDED_BReady = true; } return _LATIN_EXTENDED_BContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _LATIN_EXTENDED_BContent = default;
            private static bool _LATIN_EXTENDED_BReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#LATIN_EXTENDED_C"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock LATIN_EXTENDED_C { get { if (!_LATIN_EXTENDED_CReady) { _LATIN_EXTENDED_CContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "LATIN_EXTENDED_C"); _LATIN_EXTENDED_CReady = true; } return _LATIN_EXTENDED_CContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _LATIN_EXTENDED_CContent = default;
            private static bool _LATIN_EXTENDED_CReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#LATIN_EXTENDED_D"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock LATIN_EXTENDED_D { get { if (!_LATIN_EXTENDED_DReady) { _LATIN_EXTENDED_DContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "LATIN_EXTENDED_D"); _LATIN_EXTENDED_DReady = true; } return _LATIN_EXTENDED_DContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _LATIN_EXTENDED_DContent = default;
            private static bool _LATIN_EXTENDED_DReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#LATIN_EXTENDED_E"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock LATIN_EXTENDED_E { get { if (!_LATIN_EXTENDED_EReady) { _LATIN_EXTENDED_EContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "LATIN_EXTENDED_E"); _LATIN_EXTENDED_EReady = true; } return _LATIN_EXTENDED_EContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _LATIN_EXTENDED_EContent = default;
            private static bool _LATIN_EXTENDED_EReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#LATIN_EXTENDED_F"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock LATIN_EXTENDED_F { get { if (!_LATIN_EXTENDED_FReady) { _LATIN_EXTENDED_FContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "LATIN_EXTENDED_F"); _LATIN_EXTENDED_FReady = true; } return _LATIN_EXTENDED_FContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _LATIN_EXTENDED_FContent = default;
            private static bool _LATIN_EXTENDED_FReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#LATIN_EXTENDED_G"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock LATIN_EXTENDED_G { get { if (!_LATIN_EXTENDED_GReady) { _LATIN_EXTENDED_GContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "LATIN_EXTENDED_G"); _LATIN_EXTENDED_GReady = true; } return _LATIN_EXTENDED_GContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _LATIN_EXTENDED_GContent = default;
            private static bool _LATIN_EXTENDED_GReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#LEPCHA"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock LEPCHA { get { if (!_LEPCHAReady) { _LEPCHAContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "LEPCHA"); _LEPCHAReady = true; } return _LEPCHAContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _LEPCHAContent = default;
            private static bool _LEPCHAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#LETTERLIKE_SYMBOLS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock LETTERLIKE_SYMBOLS { get { if (!_LETTERLIKE_SYMBOLSReady) { _LETTERLIKE_SYMBOLSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "LETTERLIKE_SYMBOLS"); _LETTERLIKE_SYMBOLSReady = true; } return _LETTERLIKE_SYMBOLSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _LETTERLIKE_SYMBOLSContent = default;
            private static bool _LETTERLIKE_SYMBOLSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#LIMBU"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock LIMBU { get { if (!_LIMBUReady) { _LIMBUContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "LIMBU"); _LIMBUReady = true; } return _LIMBUContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _LIMBUContent = default;
            private static bool _LIMBUReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#LINEAR_A"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock LINEAR_A { get { if (!_LINEAR_AReady) { _LINEAR_AContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "LINEAR_A"); _LINEAR_AReady = true; } return _LINEAR_AContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _LINEAR_AContent = default;
            private static bool _LINEAR_AReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#LINEAR_B_IDEOGRAMS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock LINEAR_B_IDEOGRAMS { get { if (!_LINEAR_B_IDEOGRAMSReady) { _LINEAR_B_IDEOGRAMSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "LINEAR_B_IDEOGRAMS"); _LINEAR_B_IDEOGRAMSReady = true; } return _LINEAR_B_IDEOGRAMSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _LINEAR_B_IDEOGRAMSContent = default;
            private static bool _LINEAR_B_IDEOGRAMSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#LINEAR_B_SYLLABARY"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock LINEAR_B_SYLLABARY { get { if (!_LINEAR_B_SYLLABARYReady) { _LINEAR_B_SYLLABARYContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "LINEAR_B_SYLLABARY"); _LINEAR_B_SYLLABARYReady = true; } return _LINEAR_B_SYLLABARYContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _LINEAR_B_SYLLABARYContent = default;
            private static bool _LINEAR_B_SYLLABARYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#LISU"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock LISU { get { if (!_LISUReady) { _LISUContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "LISU"); _LISUReady = true; } return _LISUContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _LISUContent = default;
            private static bool _LISUReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#LISU_SUPPLEMENT"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock LISU_SUPPLEMENT { get { if (!_LISU_SUPPLEMENTReady) { _LISU_SUPPLEMENTContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "LISU_SUPPLEMENT"); _LISU_SUPPLEMENTReady = true; } return _LISU_SUPPLEMENTContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _LISU_SUPPLEMENTContent = default;
            private static bool _LISU_SUPPLEMENTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#LOW_SURROGATES"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock LOW_SURROGATES { get { if (!_LOW_SURROGATESReady) { _LOW_SURROGATESContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "LOW_SURROGATES"); _LOW_SURROGATESReady = true; } return _LOW_SURROGATESContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _LOW_SURROGATESContent = default;
            private static bool _LOW_SURROGATESReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#LYCIAN"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock LYCIAN { get { if (!_LYCIANReady) { _LYCIANContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "LYCIAN"); _LYCIANReady = true; } return _LYCIANContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _LYCIANContent = default;
            private static bool _LYCIANReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#LYDIAN"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock LYDIAN { get { if (!_LYDIANReady) { _LYDIANContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "LYDIAN"); _LYDIANReady = true; } return _LYDIANContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _LYDIANContent = default;
            private static bool _LYDIANReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MAHAJANI"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock MAHAJANI { get { if (!_MAHAJANIReady) { _MAHAJANIContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "MAHAJANI"); _MAHAJANIReady = true; } return _MAHAJANIContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _MAHAJANIContent = default;
            private static bool _MAHAJANIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MAHJONG_TILES"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock MAHJONG_TILES { get { if (!_MAHJONG_TILESReady) { _MAHJONG_TILESContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "MAHJONG_TILES"); _MAHJONG_TILESReady = true; } return _MAHJONG_TILESContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _MAHJONG_TILESContent = default;
            private static bool _MAHJONG_TILESReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MAKASAR"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock MAKASAR { get { if (!_MAKASARReady) { _MAKASARContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "MAKASAR"); _MAKASARReady = true; } return _MAKASARContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _MAKASARContent = default;
            private static bool _MAKASARReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MALAYALAM"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock MALAYALAM { get { if (!_MALAYALAMReady) { _MALAYALAMContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "MALAYALAM"); _MALAYALAMReady = true; } return _MALAYALAMContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _MALAYALAMContent = default;
            private static bool _MALAYALAMReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MANDAIC"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock MANDAIC { get { if (!_MANDAICReady) { _MANDAICContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "MANDAIC"); _MANDAICReady = true; } return _MANDAICContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _MANDAICContent = default;
            private static bool _MANDAICReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MANICHAEAN"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock MANICHAEAN { get { if (!_MANICHAEANReady) { _MANICHAEANContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "MANICHAEAN"); _MANICHAEANReady = true; } return _MANICHAEANContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _MANICHAEANContent = default;
            private static bool _MANICHAEANReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MARCHEN"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock MARCHEN { get { if (!_MARCHENReady) { _MARCHENContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "MARCHEN"); _MARCHENReady = true; } return _MARCHENContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _MARCHENContent = default;
            private static bool _MARCHENReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MASARAM_GONDI"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock MASARAM_GONDI { get { if (!_MASARAM_GONDIReady) { _MASARAM_GONDIContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "MASARAM_GONDI"); _MASARAM_GONDIReady = true; } return _MASARAM_GONDIContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _MASARAM_GONDIContent = default;
            private static bool _MASARAM_GONDIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MATHEMATICAL_ALPHANUMERIC_SYMBOLS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock MATHEMATICAL_ALPHANUMERIC_SYMBOLS { get { if (!_MATHEMATICAL_ALPHANUMERIC_SYMBOLSReady) { _MATHEMATICAL_ALPHANUMERIC_SYMBOLSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "MATHEMATICAL_ALPHANUMERIC_SYMBOLS"); _MATHEMATICAL_ALPHANUMERIC_SYMBOLSReady = true; } return _MATHEMATICAL_ALPHANUMERIC_SYMBOLSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _MATHEMATICAL_ALPHANUMERIC_SYMBOLSContent = default;
            private static bool _MATHEMATICAL_ALPHANUMERIC_SYMBOLSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MATHEMATICAL_OPERATORS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock MATHEMATICAL_OPERATORS { get { if (!_MATHEMATICAL_OPERATORSReady) { _MATHEMATICAL_OPERATORSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "MATHEMATICAL_OPERATORS"); _MATHEMATICAL_OPERATORSReady = true; } return _MATHEMATICAL_OPERATORSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _MATHEMATICAL_OPERATORSContent = default;
            private static bool _MATHEMATICAL_OPERATORSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MAYAN_NUMERALS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock MAYAN_NUMERALS { get { if (!_MAYAN_NUMERALSReady) { _MAYAN_NUMERALSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "MAYAN_NUMERALS"); _MAYAN_NUMERALSReady = true; } return _MAYAN_NUMERALSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _MAYAN_NUMERALSContent = default;
            private static bool _MAYAN_NUMERALSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MEDEFAIDRIN"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock MEDEFAIDRIN { get { if (!_MEDEFAIDRINReady) { _MEDEFAIDRINContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "MEDEFAIDRIN"); _MEDEFAIDRINReady = true; } return _MEDEFAIDRINContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _MEDEFAIDRINContent = default;
            private static bool _MEDEFAIDRINReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MEETEI_MAYEK"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock MEETEI_MAYEK { get { if (!_MEETEI_MAYEKReady) { _MEETEI_MAYEKContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "MEETEI_MAYEK"); _MEETEI_MAYEKReady = true; } return _MEETEI_MAYEKContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _MEETEI_MAYEKContent = default;
            private static bool _MEETEI_MAYEKReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MEETEI_MAYEK_EXTENSIONS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock MEETEI_MAYEK_EXTENSIONS { get { if (!_MEETEI_MAYEK_EXTENSIONSReady) { _MEETEI_MAYEK_EXTENSIONSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "MEETEI_MAYEK_EXTENSIONS"); _MEETEI_MAYEK_EXTENSIONSReady = true; } return _MEETEI_MAYEK_EXTENSIONSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _MEETEI_MAYEK_EXTENSIONSContent = default;
            private static bool _MEETEI_MAYEK_EXTENSIONSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MENDE_KIKAKUI"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock MENDE_KIKAKUI { get { if (!_MENDE_KIKAKUIReady) { _MENDE_KIKAKUIContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "MENDE_KIKAKUI"); _MENDE_KIKAKUIReady = true; } return _MENDE_KIKAKUIContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _MENDE_KIKAKUIContent = default;
            private static bool _MENDE_KIKAKUIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MEROITIC_CURSIVE"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock MEROITIC_CURSIVE { get { if (!_MEROITIC_CURSIVEReady) { _MEROITIC_CURSIVEContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "MEROITIC_CURSIVE"); _MEROITIC_CURSIVEReady = true; } return _MEROITIC_CURSIVEContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _MEROITIC_CURSIVEContent = default;
            private static bool _MEROITIC_CURSIVEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MEROITIC_HIEROGLYPHS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock MEROITIC_HIEROGLYPHS { get { if (!_MEROITIC_HIEROGLYPHSReady) { _MEROITIC_HIEROGLYPHSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "MEROITIC_HIEROGLYPHS"); _MEROITIC_HIEROGLYPHSReady = true; } return _MEROITIC_HIEROGLYPHSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _MEROITIC_HIEROGLYPHSContent = default;
            private static bool _MEROITIC_HIEROGLYPHSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MIAO"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock MIAO { get { if (!_MIAOReady) { _MIAOContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "MIAO"); _MIAOReady = true; } return _MIAOContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _MIAOContent = default;
            private static bool _MIAOReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A { get { if (!_MISCELLANEOUS_MATHEMATICAL_SYMBOLS_AReady) { _MISCELLANEOUS_MATHEMATICAL_SYMBOLS_AContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A"); _MISCELLANEOUS_MATHEMATICAL_SYMBOLS_AReady = true; } return _MISCELLANEOUS_MATHEMATICAL_SYMBOLS_AContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _MISCELLANEOUS_MATHEMATICAL_SYMBOLS_AContent = default;
            private static bool _MISCELLANEOUS_MATHEMATICAL_SYMBOLS_AReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B { get { if (!_MISCELLANEOUS_MATHEMATICAL_SYMBOLS_BReady) { _MISCELLANEOUS_MATHEMATICAL_SYMBOLS_BContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B"); _MISCELLANEOUS_MATHEMATICAL_SYMBOLS_BReady = true; } return _MISCELLANEOUS_MATHEMATICAL_SYMBOLS_BContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _MISCELLANEOUS_MATHEMATICAL_SYMBOLS_BContent = default;
            private static bool _MISCELLANEOUS_MATHEMATICAL_SYMBOLS_BReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MISCELLANEOUS_SYMBOLS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock MISCELLANEOUS_SYMBOLS { get { if (!_MISCELLANEOUS_SYMBOLSReady) { _MISCELLANEOUS_SYMBOLSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "MISCELLANEOUS_SYMBOLS"); _MISCELLANEOUS_SYMBOLSReady = true; } return _MISCELLANEOUS_SYMBOLSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _MISCELLANEOUS_SYMBOLSContent = default;
            private static bool _MISCELLANEOUS_SYMBOLSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MISCELLANEOUS_SYMBOLS_AND_ARROWS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock MISCELLANEOUS_SYMBOLS_AND_ARROWS { get { if (!_MISCELLANEOUS_SYMBOLS_AND_ARROWSReady) { _MISCELLANEOUS_SYMBOLS_AND_ARROWSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "MISCELLANEOUS_SYMBOLS_AND_ARROWS"); _MISCELLANEOUS_SYMBOLS_AND_ARROWSReady = true; } return _MISCELLANEOUS_SYMBOLS_AND_ARROWSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _MISCELLANEOUS_SYMBOLS_AND_ARROWSContent = default;
            private static bool _MISCELLANEOUS_SYMBOLS_AND_ARROWSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS { get { if (!_MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHSReady) { _MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS"); _MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHSReady = true; } return _MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHSContent = default;
            private static bool _MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MISCELLANEOUS_TECHNICAL"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock MISCELLANEOUS_TECHNICAL { get { if (!_MISCELLANEOUS_TECHNICALReady) { _MISCELLANEOUS_TECHNICALContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "MISCELLANEOUS_TECHNICAL"); _MISCELLANEOUS_TECHNICALReady = true; } return _MISCELLANEOUS_TECHNICALContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _MISCELLANEOUS_TECHNICALContent = default;
            private static bool _MISCELLANEOUS_TECHNICALReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MODI"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock MODI { get { if (!_MODIReady) { _MODIContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "MODI"); _MODIReady = true; } return _MODIContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _MODIContent = default;
            private static bool _MODIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MODIFIER_TONE_LETTERS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock MODIFIER_TONE_LETTERS { get { if (!_MODIFIER_TONE_LETTERSReady) { _MODIFIER_TONE_LETTERSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "MODIFIER_TONE_LETTERS"); _MODIFIER_TONE_LETTERSReady = true; } return _MODIFIER_TONE_LETTERSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _MODIFIER_TONE_LETTERSContent = default;
            private static bool _MODIFIER_TONE_LETTERSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MONGOLIAN"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock MONGOLIAN { get { if (!_MONGOLIANReady) { _MONGOLIANContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "MONGOLIAN"); _MONGOLIANReady = true; } return _MONGOLIANContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _MONGOLIANContent = default;
            private static bool _MONGOLIANReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MONGOLIAN_SUPPLEMENT"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock MONGOLIAN_SUPPLEMENT { get { if (!_MONGOLIAN_SUPPLEMENTReady) { _MONGOLIAN_SUPPLEMENTContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "MONGOLIAN_SUPPLEMENT"); _MONGOLIAN_SUPPLEMENTReady = true; } return _MONGOLIAN_SUPPLEMENTContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _MONGOLIAN_SUPPLEMENTContent = default;
            private static bool _MONGOLIAN_SUPPLEMENTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MRO"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock MRO { get { if (!_MROReady) { _MROContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "MRO"); _MROReady = true; } return _MROContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _MROContent = default;
            private static bool _MROReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MULTANI"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock MULTANI { get { if (!_MULTANIReady) { _MULTANIContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "MULTANI"); _MULTANIReady = true; } return _MULTANIContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _MULTANIContent = default;
            private static bool _MULTANIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MUSICAL_SYMBOLS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock MUSICAL_SYMBOLS { get { if (!_MUSICAL_SYMBOLSReady) { _MUSICAL_SYMBOLSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "MUSICAL_SYMBOLS"); _MUSICAL_SYMBOLSReady = true; } return _MUSICAL_SYMBOLSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _MUSICAL_SYMBOLSContent = default;
            private static bool _MUSICAL_SYMBOLSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MYANMAR"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock MYANMAR { get { if (!_MYANMARReady) { _MYANMARContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "MYANMAR"); _MYANMARReady = true; } return _MYANMARContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _MYANMARContent = default;
            private static bool _MYANMARReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MYANMAR_EXTENDED_A"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock MYANMAR_EXTENDED_A { get { if (!_MYANMAR_EXTENDED_AReady) { _MYANMAR_EXTENDED_AContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "MYANMAR_EXTENDED_A"); _MYANMAR_EXTENDED_AReady = true; } return _MYANMAR_EXTENDED_AContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _MYANMAR_EXTENDED_AContent = default;
            private static bool _MYANMAR_EXTENDED_AReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MYANMAR_EXTENDED_B"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock MYANMAR_EXTENDED_B { get { if (!_MYANMAR_EXTENDED_BReady) { _MYANMAR_EXTENDED_BContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "MYANMAR_EXTENDED_B"); _MYANMAR_EXTENDED_BReady = true; } return _MYANMAR_EXTENDED_BContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _MYANMAR_EXTENDED_BContent = default;
            private static bool _MYANMAR_EXTENDED_BReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#NABATAEAN"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock NABATAEAN { get { if (!_NABATAEANReady) { _NABATAEANContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "NABATAEAN"); _NABATAEANReady = true; } return _NABATAEANContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _NABATAEANContent = default;
            private static bool _NABATAEANReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#NAG_MUNDARI"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock NAG_MUNDARI { get { if (!_NAG_MUNDARIReady) { _NAG_MUNDARIContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "NAG_MUNDARI"); _NAG_MUNDARIReady = true; } return _NAG_MUNDARIContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _NAG_MUNDARIContent = default;
            private static bool _NAG_MUNDARIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#NANDINAGARI"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock NANDINAGARI { get { if (!_NANDINAGARIReady) { _NANDINAGARIContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "NANDINAGARI"); _NANDINAGARIReady = true; } return _NANDINAGARIContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _NANDINAGARIContent = default;
            private static bool _NANDINAGARIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#NEW_TAI_LUE"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock NEW_TAI_LUE { get { if (!_NEW_TAI_LUEReady) { _NEW_TAI_LUEContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "NEW_TAI_LUE"); _NEW_TAI_LUEReady = true; } return _NEW_TAI_LUEContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _NEW_TAI_LUEContent = default;
            private static bool _NEW_TAI_LUEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#NEWA"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock NEWA { get { if (!_NEWAReady) { _NEWAContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "NEWA"); _NEWAReady = true; } return _NEWAContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _NEWAContent = default;
            private static bool _NEWAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#NKO"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock NKO { get { if (!_NKOReady) { _NKOContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "NKO"); _NKOReady = true; } return _NKOContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _NKOContent = default;
            private static bool _NKOReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#NO_BLOCK"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock NO_BLOCK { get { if (!_NO_BLOCKReady) { _NO_BLOCKContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "NO_BLOCK"); _NO_BLOCKReady = true; } return _NO_BLOCKContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _NO_BLOCKContent = default;
            private static bool _NO_BLOCKReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#NUMBER_FORMS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock NUMBER_FORMS { get { if (!_NUMBER_FORMSReady) { _NUMBER_FORMSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "NUMBER_FORMS"); _NUMBER_FORMSReady = true; } return _NUMBER_FORMSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _NUMBER_FORMSContent = default;
            private static bool _NUMBER_FORMSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#NUSHU"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock NUSHU { get { if (!_NUSHUReady) { _NUSHUContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "NUSHU"); _NUSHUReady = true; } return _NUSHUContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _NUSHUContent = default;
            private static bool _NUSHUReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#NYIAKENG_PUACHUE_HMONG"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock NYIAKENG_PUACHUE_HMONG { get { if (!_NYIAKENG_PUACHUE_HMONGReady) { _NYIAKENG_PUACHUE_HMONGContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "NYIAKENG_PUACHUE_HMONG"); _NYIAKENG_PUACHUE_HMONGReady = true; } return _NYIAKENG_PUACHUE_HMONGContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _NYIAKENG_PUACHUE_HMONGContent = default;
            private static bool _NYIAKENG_PUACHUE_HMONGReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#OGHAM"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock OGHAM { get { if (!_OGHAMReady) { _OGHAMContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "OGHAM"); _OGHAMReady = true; } return _OGHAMContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _OGHAMContent = default;
            private static bool _OGHAMReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#OL_CHIKI"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock OL_CHIKI { get { if (!_OL_CHIKIReady) { _OL_CHIKIContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "OL_CHIKI"); _OL_CHIKIReady = true; } return _OL_CHIKIContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _OL_CHIKIContent = default;
            private static bool _OL_CHIKIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#OLD_HUNGARIAN"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock OLD_HUNGARIAN { get { if (!_OLD_HUNGARIANReady) { _OLD_HUNGARIANContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "OLD_HUNGARIAN"); _OLD_HUNGARIANReady = true; } return _OLD_HUNGARIANContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _OLD_HUNGARIANContent = default;
            private static bool _OLD_HUNGARIANReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#OLD_ITALIC"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock OLD_ITALIC { get { if (!_OLD_ITALICReady) { _OLD_ITALICContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "OLD_ITALIC"); _OLD_ITALICReady = true; } return _OLD_ITALICContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _OLD_ITALICContent = default;
            private static bool _OLD_ITALICReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#OLD_NORTH_ARABIAN"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock OLD_NORTH_ARABIAN { get { if (!_OLD_NORTH_ARABIANReady) { _OLD_NORTH_ARABIANContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "OLD_NORTH_ARABIAN"); _OLD_NORTH_ARABIANReady = true; } return _OLD_NORTH_ARABIANContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _OLD_NORTH_ARABIANContent = default;
            private static bool _OLD_NORTH_ARABIANReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#OLD_PERMIC"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock OLD_PERMIC { get { if (!_OLD_PERMICReady) { _OLD_PERMICContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "OLD_PERMIC"); _OLD_PERMICReady = true; } return _OLD_PERMICContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _OLD_PERMICContent = default;
            private static bool _OLD_PERMICReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#OLD_PERSIAN"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock OLD_PERSIAN { get { if (!_OLD_PERSIANReady) { _OLD_PERSIANContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "OLD_PERSIAN"); _OLD_PERSIANReady = true; } return _OLD_PERSIANContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _OLD_PERSIANContent = default;
            private static bool _OLD_PERSIANReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#OLD_SOGDIAN"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock OLD_SOGDIAN { get { if (!_OLD_SOGDIANReady) { _OLD_SOGDIANContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "OLD_SOGDIAN"); _OLD_SOGDIANReady = true; } return _OLD_SOGDIANContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _OLD_SOGDIANContent = default;
            private static bool _OLD_SOGDIANReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#OLD_SOUTH_ARABIAN"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock OLD_SOUTH_ARABIAN { get { if (!_OLD_SOUTH_ARABIANReady) { _OLD_SOUTH_ARABIANContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "OLD_SOUTH_ARABIAN"); _OLD_SOUTH_ARABIANReady = true; } return _OLD_SOUTH_ARABIANContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _OLD_SOUTH_ARABIANContent = default;
            private static bool _OLD_SOUTH_ARABIANReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#OLD_TURKIC"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock OLD_TURKIC { get { if (!_OLD_TURKICReady) { _OLD_TURKICContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "OLD_TURKIC"); _OLD_TURKICReady = true; } return _OLD_TURKICContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _OLD_TURKICContent = default;
            private static bool _OLD_TURKICReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#OLD_UYGHUR"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock OLD_UYGHUR { get { if (!_OLD_UYGHURReady) { _OLD_UYGHURContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "OLD_UYGHUR"); _OLD_UYGHURReady = true; } return _OLD_UYGHURContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _OLD_UYGHURContent = default;
            private static bool _OLD_UYGHURReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#OPTICAL_CHARACTER_RECOGNITION"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock OPTICAL_CHARACTER_RECOGNITION { get { if (!_OPTICAL_CHARACTER_RECOGNITIONReady) { _OPTICAL_CHARACTER_RECOGNITIONContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "OPTICAL_CHARACTER_RECOGNITION"); _OPTICAL_CHARACTER_RECOGNITIONReady = true; } return _OPTICAL_CHARACTER_RECOGNITIONContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _OPTICAL_CHARACTER_RECOGNITIONContent = default;
            private static bool _OPTICAL_CHARACTER_RECOGNITIONReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ORIYA"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock ORIYA { get { if (!_ORIYAReady) { _ORIYAContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "ORIYA"); _ORIYAReady = true; } return _ORIYAContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _ORIYAContent = default;
            private static bool _ORIYAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ORNAMENTAL_DINGBATS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock ORNAMENTAL_DINGBATS { get { if (!_ORNAMENTAL_DINGBATSReady) { _ORNAMENTAL_DINGBATSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "ORNAMENTAL_DINGBATS"); _ORNAMENTAL_DINGBATSReady = true; } return _ORNAMENTAL_DINGBATSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _ORNAMENTAL_DINGBATSContent = default;
            private static bool _ORNAMENTAL_DINGBATSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#OSAGE"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock OSAGE { get { if (!_OSAGEReady) { _OSAGEContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "OSAGE"); _OSAGEReady = true; } return _OSAGEContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _OSAGEContent = default;
            private static bool _OSAGEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#OSMANYA"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock OSMANYA { get { if (!_OSMANYAReady) { _OSMANYAContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "OSMANYA"); _OSMANYAReady = true; } return _OSMANYAContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _OSMANYAContent = default;
            private static bool _OSMANYAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#OTTOMAN_SIYAQ_NUMBERS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock OTTOMAN_SIYAQ_NUMBERS { get { if (!_OTTOMAN_SIYAQ_NUMBERSReady) { _OTTOMAN_SIYAQ_NUMBERSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "OTTOMAN_SIYAQ_NUMBERS"); _OTTOMAN_SIYAQ_NUMBERSReady = true; } return _OTTOMAN_SIYAQ_NUMBERSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _OTTOMAN_SIYAQ_NUMBERSContent = default;
            private static bool _OTTOMAN_SIYAQ_NUMBERSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#PAHAWH_HMONG"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock PAHAWH_HMONG { get { if (!_PAHAWH_HMONGReady) { _PAHAWH_HMONGContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "PAHAWH_HMONG"); _PAHAWH_HMONGReady = true; } return _PAHAWH_HMONGContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _PAHAWH_HMONGContent = default;
            private static bool _PAHAWH_HMONGReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#PALMYRENE"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock PALMYRENE { get { if (!_PALMYRENEReady) { _PALMYRENEContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "PALMYRENE"); _PALMYRENEReady = true; } return _PALMYRENEContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _PALMYRENEContent = default;
            private static bool _PALMYRENEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#PAU_CIN_HAU"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock PAU_CIN_HAU { get { if (!_PAU_CIN_HAUReady) { _PAU_CIN_HAUContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "PAU_CIN_HAU"); _PAU_CIN_HAUReady = true; } return _PAU_CIN_HAUContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _PAU_CIN_HAUContent = default;
            private static bool _PAU_CIN_HAUReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#PHAGS_PA"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock PHAGS_PA { get { if (!_PHAGS_PAReady) { _PHAGS_PAContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "PHAGS_PA"); _PHAGS_PAReady = true; } return _PHAGS_PAContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _PHAGS_PAContent = default;
            private static bool _PHAGS_PAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#PHAISTOS_DISC"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock PHAISTOS_DISC { get { if (!_PHAISTOS_DISCReady) { _PHAISTOS_DISCContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "PHAISTOS_DISC"); _PHAISTOS_DISCReady = true; } return _PHAISTOS_DISCContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _PHAISTOS_DISCContent = default;
            private static bool _PHAISTOS_DISCReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#PHOENICIAN"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock PHOENICIAN { get { if (!_PHOENICIANReady) { _PHOENICIANContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "PHOENICIAN"); _PHOENICIANReady = true; } return _PHOENICIANContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _PHOENICIANContent = default;
            private static bool _PHOENICIANReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#PHONETIC_EXTENSIONS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock PHONETIC_EXTENSIONS { get { if (!_PHONETIC_EXTENSIONSReady) { _PHONETIC_EXTENSIONSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "PHONETIC_EXTENSIONS"); _PHONETIC_EXTENSIONSReady = true; } return _PHONETIC_EXTENSIONSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _PHONETIC_EXTENSIONSContent = default;
            private static bool _PHONETIC_EXTENSIONSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#PHONETIC_EXTENSIONS_SUPPLEMENT"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock PHONETIC_EXTENSIONS_SUPPLEMENT { get { if (!_PHONETIC_EXTENSIONS_SUPPLEMENTReady) { _PHONETIC_EXTENSIONS_SUPPLEMENTContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "PHONETIC_EXTENSIONS_SUPPLEMENT"); _PHONETIC_EXTENSIONS_SUPPLEMENTReady = true; } return _PHONETIC_EXTENSIONS_SUPPLEMENTContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _PHONETIC_EXTENSIONS_SUPPLEMENTContent = default;
            private static bool _PHONETIC_EXTENSIONS_SUPPLEMENTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#PLAYING_CARDS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock PLAYING_CARDS { get { if (!_PLAYING_CARDSReady) { _PLAYING_CARDSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "PLAYING_CARDS"); _PLAYING_CARDSReady = true; } return _PLAYING_CARDSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _PLAYING_CARDSContent = default;
            private static bool _PLAYING_CARDSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#PRIVATE_USE"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock PRIVATE_USE { get { if (!_PRIVATE_USEReady) { _PRIVATE_USEContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "PRIVATE_USE"); _PRIVATE_USEReady = true; } return _PRIVATE_USEContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _PRIVATE_USEContent = default;
            private static bool _PRIVATE_USEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#PRIVATE_USE_AREA"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock PRIVATE_USE_AREA { get { if (!_PRIVATE_USE_AREAReady) { _PRIVATE_USE_AREAContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "PRIVATE_USE_AREA"); _PRIVATE_USE_AREAReady = true; } return _PRIVATE_USE_AREAContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _PRIVATE_USE_AREAContent = default;
            private static bool _PRIVATE_USE_AREAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#PSALTER_PAHLAVI"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock PSALTER_PAHLAVI { get { if (!_PSALTER_PAHLAVIReady) { _PSALTER_PAHLAVIContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "PSALTER_PAHLAVI"); _PSALTER_PAHLAVIReady = true; } return _PSALTER_PAHLAVIContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _PSALTER_PAHLAVIContent = default;
            private static bool _PSALTER_PAHLAVIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#REJANG"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock REJANG { get { if (!_REJANGReady) { _REJANGContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "REJANG"); _REJANGReady = true; } return _REJANGContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _REJANGContent = default;
            private static bool _REJANGReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#RUMI_NUMERAL_SYMBOLS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock RUMI_NUMERAL_SYMBOLS { get { if (!_RUMI_NUMERAL_SYMBOLSReady) { _RUMI_NUMERAL_SYMBOLSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "RUMI_NUMERAL_SYMBOLS"); _RUMI_NUMERAL_SYMBOLSReady = true; } return _RUMI_NUMERAL_SYMBOLSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _RUMI_NUMERAL_SYMBOLSContent = default;
            private static bool _RUMI_NUMERAL_SYMBOLSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#RUNIC"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock RUNIC { get { if (!_RUNICReady) { _RUNICContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "RUNIC"); _RUNICReady = true; } return _RUNICContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _RUNICContent = default;
            private static bool _RUNICReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SAMARITAN"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock SAMARITAN { get { if (!_SAMARITANReady) { _SAMARITANContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "SAMARITAN"); _SAMARITANReady = true; } return _SAMARITANContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _SAMARITANContent = default;
            private static bool _SAMARITANReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SAURASHTRA"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock SAURASHTRA { get { if (!_SAURASHTRAReady) { _SAURASHTRAContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "SAURASHTRA"); _SAURASHTRAReady = true; } return _SAURASHTRAContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _SAURASHTRAContent = default;
            private static bool _SAURASHTRAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SHARADA"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock SHARADA { get { if (!_SHARADAReady) { _SHARADAContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "SHARADA"); _SHARADAReady = true; } return _SHARADAContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _SHARADAContent = default;
            private static bool _SHARADAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SHAVIAN"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock SHAVIAN { get { if (!_SHAVIANReady) { _SHAVIANContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "SHAVIAN"); _SHAVIANReady = true; } return _SHAVIANContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _SHAVIANContent = default;
            private static bool _SHAVIANReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SHORTHAND_FORMAT_CONTROLS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock SHORTHAND_FORMAT_CONTROLS { get { if (!_SHORTHAND_FORMAT_CONTROLSReady) { _SHORTHAND_FORMAT_CONTROLSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "SHORTHAND_FORMAT_CONTROLS"); _SHORTHAND_FORMAT_CONTROLSReady = true; } return _SHORTHAND_FORMAT_CONTROLSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _SHORTHAND_FORMAT_CONTROLSContent = default;
            private static bool _SHORTHAND_FORMAT_CONTROLSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SIDDHAM"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock SIDDHAM { get { if (!_SIDDHAMReady) { _SIDDHAMContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "SIDDHAM"); _SIDDHAMReady = true; } return _SIDDHAMContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _SIDDHAMContent = default;
            private static bool _SIDDHAMReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SINHALA"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock SINHALA { get { if (!_SINHALAReady) { _SINHALAContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "SINHALA"); _SINHALAReady = true; } return _SINHALAContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _SINHALAContent = default;
            private static bool _SINHALAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SINHALA_ARCHAIC_NUMBERS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock SINHALA_ARCHAIC_NUMBERS { get { if (!_SINHALA_ARCHAIC_NUMBERSReady) { _SINHALA_ARCHAIC_NUMBERSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "SINHALA_ARCHAIC_NUMBERS"); _SINHALA_ARCHAIC_NUMBERSReady = true; } return _SINHALA_ARCHAIC_NUMBERSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _SINHALA_ARCHAIC_NUMBERSContent = default;
            private static bool _SINHALA_ARCHAIC_NUMBERSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SMALL_FORM_VARIANTS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock SMALL_FORM_VARIANTS { get { if (!_SMALL_FORM_VARIANTSReady) { _SMALL_FORM_VARIANTSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "SMALL_FORM_VARIANTS"); _SMALL_FORM_VARIANTSReady = true; } return _SMALL_FORM_VARIANTSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _SMALL_FORM_VARIANTSContent = default;
            private static bool _SMALL_FORM_VARIANTSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SMALL_KANA_EXTENSION"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock SMALL_KANA_EXTENSION { get { if (!_SMALL_KANA_EXTENSIONReady) { _SMALL_KANA_EXTENSIONContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "SMALL_KANA_EXTENSION"); _SMALL_KANA_EXTENSIONReady = true; } return _SMALL_KANA_EXTENSIONContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _SMALL_KANA_EXTENSIONContent = default;
            private static bool _SMALL_KANA_EXTENSIONReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SOGDIAN"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock SOGDIAN { get { if (!_SOGDIANReady) { _SOGDIANContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "SOGDIAN"); _SOGDIANReady = true; } return _SOGDIANContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _SOGDIANContent = default;
            private static bool _SOGDIANReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SORA_SOMPENG"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock SORA_SOMPENG { get { if (!_SORA_SOMPENGReady) { _SORA_SOMPENGContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "SORA_SOMPENG"); _SORA_SOMPENGReady = true; } return _SORA_SOMPENGContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _SORA_SOMPENGContent = default;
            private static bool _SORA_SOMPENGReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SOYOMBO"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock SOYOMBO { get { if (!_SOYOMBOReady) { _SOYOMBOContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "SOYOMBO"); _SOYOMBOReady = true; } return _SOYOMBOContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _SOYOMBOContent = default;
            private static bool _SOYOMBOReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SPACING_MODIFIER_LETTERS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock SPACING_MODIFIER_LETTERS { get { if (!_SPACING_MODIFIER_LETTERSReady) { _SPACING_MODIFIER_LETTERSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "SPACING_MODIFIER_LETTERS"); _SPACING_MODIFIER_LETTERSReady = true; } return _SPACING_MODIFIER_LETTERSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _SPACING_MODIFIER_LETTERSContent = default;
            private static bool _SPACING_MODIFIER_LETTERSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SPECIALS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock SPECIALS { get { if (!_SPECIALSReady) { _SPECIALSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "SPECIALS"); _SPECIALSReady = true; } return _SPECIALSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _SPECIALSContent = default;
            private static bool _SPECIALSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SUNDANESE"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock SUNDANESE { get { if (!_SUNDANESEReady) { _SUNDANESEContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "SUNDANESE"); _SUNDANESEReady = true; } return _SUNDANESEContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _SUNDANESEContent = default;
            private static bool _SUNDANESEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SUNDANESE_SUPPLEMENT"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock SUNDANESE_SUPPLEMENT { get { if (!_SUNDANESE_SUPPLEMENTReady) { _SUNDANESE_SUPPLEMENTContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "SUNDANESE_SUPPLEMENT"); _SUNDANESE_SUPPLEMENTReady = true; } return _SUNDANESE_SUPPLEMENTContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _SUNDANESE_SUPPLEMENTContent = default;
            private static bool _SUNDANESE_SUPPLEMENTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SUPERSCRIPTS_AND_SUBSCRIPTS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock SUPERSCRIPTS_AND_SUBSCRIPTS { get { if (!_SUPERSCRIPTS_AND_SUBSCRIPTSReady) { _SUPERSCRIPTS_AND_SUBSCRIPTSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "SUPERSCRIPTS_AND_SUBSCRIPTS"); _SUPERSCRIPTS_AND_SUBSCRIPTSReady = true; } return _SUPERSCRIPTS_AND_SUBSCRIPTSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _SUPERSCRIPTS_AND_SUBSCRIPTSContent = default;
            private static bool _SUPERSCRIPTS_AND_SUBSCRIPTSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SUPPLEMENTAL_ARROWS_A"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock SUPPLEMENTAL_ARROWS_A { get { if (!_SUPPLEMENTAL_ARROWS_AReady) { _SUPPLEMENTAL_ARROWS_AContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "SUPPLEMENTAL_ARROWS_A"); _SUPPLEMENTAL_ARROWS_AReady = true; } return _SUPPLEMENTAL_ARROWS_AContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _SUPPLEMENTAL_ARROWS_AContent = default;
            private static bool _SUPPLEMENTAL_ARROWS_AReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SUPPLEMENTAL_ARROWS_B"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock SUPPLEMENTAL_ARROWS_B { get { if (!_SUPPLEMENTAL_ARROWS_BReady) { _SUPPLEMENTAL_ARROWS_BContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "SUPPLEMENTAL_ARROWS_B"); _SUPPLEMENTAL_ARROWS_BReady = true; } return _SUPPLEMENTAL_ARROWS_BContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _SUPPLEMENTAL_ARROWS_BContent = default;
            private static bool _SUPPLEMENTAL_ARROWS_BReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SUPPLEMENTAL_ARROWS_C"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock SUPPLEMENTAL_ARROWS_C { get { if (!_SUPPLEMENTAL_ARROWS_CReady) { _SUPPLEMENTAL_ARROWS_CContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "SUPPLEMENTAL_ARROWS_C"); _SUPPLEMENTAL_ARROWS_CReady = true; } return _SUPPLEMENTAL_ARROWS_CContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _SUPPLEMENTAL_ARROWS_CContent = default;
            private static bool _SUPPLEMENTAL_ARROWS_CReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SUPPLEMENTAL_MATHEMATICAL_OPERATORS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock SUPPLEMENTAL_MATHEMATICAL_OPERATORS { get { if (!_SUPPLEMENTAL_MATHEMATICAL_OPERATORSReady) { _SUPPLEMENTAL_MATHEMATICAL_OPERATORSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "SUPPLEMENTAL_MATHEMATICAL_OPERATORS"); _SUPPLEMENTAL_MATHEMATICAL_OPERATORSReady = true; } return _SUPPLEMENTAL_MATHEMATICAL_OPERATORSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _SUPPLEMENTAL_MATHEMATICAL_OPERATORSContent = default;
            private static bool _SUPPLEMENTAL_MATHEMATICAL_OPERATORSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SUPPLEMENTAL_PUNCTUATION"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock SUPPLEMENTAL_PUNCTUATION { get { if (!_SUPPLEMENTAL_PUNCTUATIONReady) { _SUPPLEMENTAL_PUNCTUATIONContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "SUPPLEMENTAL_PUNCTUATION"); _SUPPLEMENTAL_PUNCTUATIONReady = true; } return _SUPPLEMENTAL_PUNCTUATIONContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _SUPPLEMENTAL_PUNCTUATIONContent = default;
            private static bool _SUPPLEMENTAL_PUNCTUATIONReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SUPPLEMENTAL_SYMBOLS_AND_PICTOGRAPHS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock SUPPLEMENTAL_SYMBOLS_AND_PICTOGRAPHS { get { if (!_SUPPLEMENTAL_SYMBOLS_AND_PICTOGRAPHSReady) { _SUPPLEMENTAL_SYMBOLS_AND_PICTOGRAPHSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "SUPPLEMENTAL_SYMBOLS_AND_PICTOGRAPHS"); _SUPPLEMENTAL_SYMBOLS_AND_PICTOGRAPHSReady = true; } return _SUPPLEMENTAL_SYMBOLS_AND_PICTOGRAPHSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _SUPPLEMENTAL_SYMBOLS_AND_PICTOGRAPHSContent = default;
            private static bool _SUPPLEMENTAL_SYMBOLS_AND_PICTOGRAPHSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SUPPLEMENTARY_PRIVATE_USE_AREA_A"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock SUPPLEMENTARY_PRIVATE_USE_AREA_A { get { if (!_SUPPLEMENTARY_PRIVATE_USE_AREA_AReady) { _SUPPLEMENTARY_PRIVATE_USE_AREA_AContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "SUPPLEMENTARY_PRIVATE_USE_AREA_A"); _SUPPLEMENTARY_PRIVATE_USE_AREA_AReady = true; } return _SUPPLEMENTARY_PRIVATE_USE_AREA_AContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _SUPPLEMENTARY_PRIVATE_USE_AREA_AContent = default;
            private static bool _SUPPLEMENTARY_PRIVATE_USE_AREA_AReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SUPPLEMENTARY_PRIVATE_USE_AREA_B"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock SUPPLEMENTARY_PRIVATE_USE_AREA_B { get { if (!_SUPPLEMENTARY_PRIVATE_USE_AREA_BReady) { _SUPPLEMENTARY_PRIVATE_USE_AREA_BContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "SUPPLEMENTARY_PRIVATE_USE_AREA_B"); _SUPPLEMENTARY_PRIVATE_USE_AREA_BReady = true; } return _SUPPLEMENTARY_PRIVATE_USE_AREA_BContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _SUPPLEMENTARY_PRIVATE_USE_AREA_BContent = default;
            private static bool _SUPPLEMENTARY_PRIVATE_USE_AREA_BReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SUTTON_SIGNWRITING"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock SUTTON_SIGNWRITING { get { if (!_SUTTON_SIGNWRITINGReady) { _SUTTON_SIGNWRITINGContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "SUTTON_SIGNWRITING"); _SUTTON_SIGNWRITINGReady = true; } return _SUTTON_SIGNWRITINGContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _SUTTON_SIGNWRITINGContent = default;
            private static bool _SUTTON_SIGNWRITINGReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SYLOTI_NAGRI"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock SYLOTI_NAGRI { get { if (!_SYLOTI_NAGRIReady) { _SYLOTI_NAGRIContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "SYLOTI_NAGRI"); _SYLOTI_NAGRIReady = true; } return _SYLOTI_NAGRIContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _SYLOTI_NAGRIContent = default;
            private static bool _SYLOTI_NAGRIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SYMBOLS_AND_PICTOGRAPHS_EXTENDED_A"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock SYMBOLS_AND_PICTOGRAPHS_EXTENDED_A { get { if (!_SYMBOLS_AND_PICTOGRAPHS_EXTENDED_AReady) { _SYMBOLS_AND_PICTOGRAPHS_EXTENDED_AContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "SYMBOLS_AND_PICTOGRAPHS_EXTENDED_A"); _SYMBOLS_AND_PICTOGRAPHS_EXTENDED_AReady = true; } return _SYMBOLS_AND_PICTOGRAPHS_EXTENDED_AContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _SYMBOLS_AND_PICTOGRAPHS_EXTENDED_AContent = default;
            private static bool _SYMBOLS_AND_PICTOGRAPHS_EXTENDED_AReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SYMBOLS_FOR_LEGACY_COMPUTING"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock SYMBOLS_FOR_LEGACY_COMPUTING { get { if (!_SYMBOLS_FOR_LEGACY_COMPUTINGReady) { _SYMBOLS_FOR_LEGACY_COMPUTINGContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "SYMBOLS_FOR_LEGACY_COMPUTING"); _SYMBOLS_FOR_LEGACY_COMPUTINGReady = true; } return _SYMBOLS_FOR_LEGACY_COMPUTINGContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _SYMBOLS_FOR_LEGACY_COMPUTINGContent = default;
            private static bool _SYMBOLS_FOR_LEGACY_COMPUTINGReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SYRIAC"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock SYRIAC { get { if (!_SYRIACReady) { _SYRIACContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "SYRIAC"); _SYRIACReady = true; } return _SYRIACContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _SYRIACContent = default;
            private static bool _SYRIACReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SYRIAC_SUPPLEMENT"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock SYRIAC_SUPPLEMENT { get { if (!_SYRIAC_SUPPLEMENTReady) { _SYRIAC_SUPPLEMENTContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "SYRIAC_SUPPLEMENT"); _SYRIAC_SUPPLEMENTReady = true; } return _SYRIAC_SUPPLEMENTContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _SYRIAC_SUPPLEMENTContent = default;
            private static bool _SYRIAC_SUPPLEMENTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#TAGALOG"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock TAGALOG { get { if (!_TAGALOGReady) { _TAGALOGContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "TAGALOG"); _TAGALOGReady = true; } return _TAGALOGContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _TAGALOGContent = default;
            private static bool _TAGALOGReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#TAGBANWA"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock TAGBANWA { get { if (!_TAGBANWAReady) { _TAGBANWAContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "TAGBANWA"); _TAGBANWAReady = true; } return _TAGBANWAContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _TAGBANWAContent = default;
            private static bool _TAGBANWAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#TAGS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock TAGS { get { if (!_TAGSReady) { _TAGSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "TAGS"); _TAGSReady = true; } return _TAGSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _TAGSContent = default;
            private static bool _TAGSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#TAI_LE"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock TAI_LE { get { if (!_TAI_LEReady) { _TAI_LEContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "TAI_LE"); _TAI_LEReady = true; } return _TAI_LEContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _TAI_LEContent = default;
            private static bool _TAI_LEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#TAI_THAM"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock TAI_THAM { get { if (!_TAI_THAMReady) { _TAI_THAMContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "TAI_THAM"); _TAI_THAMReady = true; } return _TAI_THAMContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _TAI_THAMContent = default;
            private static bool _TAI_THAMReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#TAI_VIET"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock TAI_VIET { get { if (!_TAI_VIETReady) { _TAI_VIETContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "TAI_VIET"); _TAI_VIETReady = true; } return _TAI_VIETContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _TAI_VIETContent = default;
            private static bool _TAI_VIETReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#TAI_XUAN_JING_SYMBOLS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock TAI_XUAN_JING_SYMBOLS { get { if (!_TAI_XUAN_JING_SYMBOLSReady) { _TAI_XUAN_JING_SYMBOLSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "TAI_XUAN_JING_SYMBOLS"); _TAI_XUAN_JING_SYMBOLSReady = true; } return _TAI_XUAN_JING_SYMBOLSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _TAI_XUAN_JING_SYMBOLSContent = default;
            private static bool _TAI_XUAN_JING_SYMBOLSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#TAKRI"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock TAKRI { get { if (!_TAKRIReady) { _TAKRIContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "TAKRI"); _TAKRIReady = true; } return _TAKRIContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _TAKRIContent = default;
            private static bool _TAKRIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#TAMIL"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock TAMIL { get { if (!_TAMILReady) { _TAMILContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "TAMIL"); _TAMILReady = true; } return _TAMILContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _TAMILContent = default;
            private static bool _TAMILReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#TAMIL_SUPPLEMENT"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock TAMIL_SUPPLEMENT { get { if (!_TAMIL_SUPPLEMENTReady) { _TAMIL_SUPPLEMENTContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "TAMIL_SUPPLEMENT"); _TAMIL_SUPPLEMENTReady = true; } return _TAMIL_SUPPLEMENTContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _TAMIL_SUPPLEMENTContent = default;
            private static bool _TAMIL_SUPPLEMENTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#TANGSA"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock TANGSA { get { if (!_TANGSAReady) { _TANGSAContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "TANGSA"); _TANGSAReady = true; } return _TANGSAContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _TANGSAContent = default;
            private static bool _TANGSAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#TANGUT"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock TANGUT { get { if (!_TANGUTReady) { _TANGUTContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "TANGUT"); _TANGUTReady = true; } return _TANGUTContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _TANGUTContent = default;
            private static bool _TANGUTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#TANGUT_COMPONENTS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock TANGUT_COMPONENTS { get { if (!_TANGUT_COMPONENTSReady) { _TANGUT_COMPONENTSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "TANGUT_COMPONENTS"); _TANGUT_COMPONENTSReady = true; } return _TANGUT_COMPONENTSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _TANGUT_COMPONENTSContent = default;
            private static bool _TANGUT_COMPONENTSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#TANGUT_SUPPLEMENT"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock TANGUT_SUPPLEMENT { get { if (!_TANGUT_SUPPLEMENTReady) { _TANGUT_SUPPLEMENTContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "TANGUT_SUPPLEMENT"); _TANGUT_SUPPLEMENTReady = true; } return _TANGUT_SUPPLEMENTContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _TANGUT_SUPPLEMENTContent = default;
            private static bool _TANGUT_SUPPLEMENTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#TELUGU"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock TELUGU { get { if (!_TELUGUReady) { _TELUGUContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "TELUGU"); _TELUGUReady = true; } return _TELUGUContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _TELUGUContent = default;
            private static bool _TELUGUReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#THAANA"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock THAANA { get { if (!_THAANAReady) { _THAANAContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "THAANA"); _THAANAReady = true; } return _THAANAContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _THAANAContent = default;
            private static bool _THAANAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#THAI"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock THAI { get { if (!_THAIReady) { _THAIContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "THAI"); _THAIReady = true; } return _THAIContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _THAIContent = default;
            private static bool _THAIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#TIBETAN"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock TIBETAN { get { if (!_TIBETANReady) { _TIBETANContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "TIBETAN"); _TIBETANReady = true; } return _TIBETANContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _TIBETANContent = default;
            private static bool _TIBETANReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#TIFINAGH"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock TIFINAGH { get { if (!_TIFINAGHReady) { _TIFINAGHContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "TIFINAGH"); _TIFINAGHReady = true; } return _TIFINAGHContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _TIFINAGHContent = default;
            private static bool _TIFINAGHReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#TIRHUTA"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock TIRHUTA { get { if (!_TIRHUTAReady) { _TIRHUTAContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "TIRHUTA"); _TIRHUTAReady = true; } return _TIRHUTAContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _TIRHUTAContent = default;
            private static bool _TIRHUTAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#TOTO"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock TOTO { get { if (!_TOTOReady) { _TOTOContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "TOTO"); _TOTOReady = true; } return _TOTOContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _TOTOContent = default;
            private static bool _TOTOReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#TRANSPORT_AND_MAP_SYMBOLS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock TRANSPORT_AND_MAP_SYMBOLS { get { if (!_TRANSPORT_AND_MAP_SYMBOLSReady) { _TRANSPORT_AND_MAP_SYMBOLSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "TRANSPORT_AND_MAP_SYMBOLS"); _TRANSPORT_AND_MAP_SYMBOLSReady = true; } return _TRANSPORT_AND_MAP_SYMBOLSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _TRANSPORT_AND_MAP_SYMBOLSContent = default;
            private static bool _TRANSPORT_AND_MAP_SYMBOLSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#UGARITIC"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock UGARITIC { get { if (!_UGARITICReady) { _UGARITICContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "UGARITIC"); _UGARITICReady = true; } return _UGARITICContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _UGARITICContent = default;
            private static bool _UGARITICReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS { get { if (!_UNIFIED_CANADIAN_ABORIGINAL_SYLLABICSReady) { _UNIFIED_CANADIAN_ABORIGINAL_SYLLABICSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS"); _UNIFIED_CANADIAN_ABORIGINAL_SYLLABICSReady = true; } return _UNIFIED_CANADIAN_ABORIGINAL_SYLLABICSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _UNIFIED_CANADIAN_ABORIGINAL_SYLLABICSContent = default;
            private static bool _UNIFIED_CANADIAN_ABORIGINAL_SYLLABICSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED { get { if (!_UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDEDReady) { _UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDEDContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED"); _UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDEDReady = true; } return _UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDEDContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDEDContent = default;
            private static bool _UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED_A"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED_A { get { if (!_UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED_AReady) { _UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED_AContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED_A"); _UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED_AReady = true; } return _UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED_AContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED_AContent = default;
            private static bool _UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED_AReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#VAI"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock VAI { get { if (!_VAIReady) { _VAIContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "VAI"); _VAIReady = true; } return _VAIContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _VAIContent = default;
            private static bool _VAIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#VARIATION_SELECTORS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock VARIATION_SELECTORS { get { if (!_VARIATION_SELECTORSReady) { _VARIATION_SELECTORSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "VARIATION_SELECTORS"); _VARIATION_SELECTORSReady = true; } return _VARIATION_SELECTORSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _VARIATION_SELECTORSContent = default;
            private static bool _VARIATION_SELECTORSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#VARIATION_SELECTORS_SUPPLEMENT"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock VARIATION_SELECTORS_SUPPLEMENT { get { if (!_VARIATION_SELECTORS_SUPPLEMENTReady) { _VARIATION_SELECTORS_SUPPLEMENTContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "VARIATION_SELECTORS_SUPPLEMENT"); _VARIATION_SELECTORS_SUPPLEMENTReady = true; } return _VARIATION_SELECTORS_SUPPLEMENTContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _VARIATION_SELECTORS_SUPPLEMENTContent = default;
            private static bool _VARIATION_SELECTORS_SUPPLEMENTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#VEDIC_EXTENSIONS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock VEDIC_EXTENSIONS { get { if (!_VEDIC_EXTENSIONSReady) { _VEDIC_EXTENSIONSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "VEDIC_EXTENSIONS"); _VEDIC_EXTENSIONSReady = true; } return _VEDIC_EXTENSIONSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _VEDIC_EXTENSIONSContent = default;
            private static bool _VEDIC_EXTENSIONSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#VERTICAL_FORMS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock VERTICAL_FORMS { get { if (!_VERTICAL_FORMSReady) { _VERTICAL_FORMSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "VERTICAL_FORMS"); _VERTICAL_FORMSReady = true; } return _VERTICAL_FORMSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _VERTICAL_FORMSContent = default;
            private static bool _VERTICAL_FORMSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#VITHKUQI"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock VITHKUQI { get { if (!_VITHKUQIReady) { _VITHKUQIContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "VITHKUQI"); _VITHKUQIReady = true; } return _VITHKUQIContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _VITHKUQIContent = default;
            private static bool _VITHKUQIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#WANCHO"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock WANCHO { get { if (!_WANCHOReady) { _WANCHOContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "WANCHO"); _WANCHOReady = true; } return _WANCHOContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _WANCHOContent = default;
            private static bool _WANCHOReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#WARANG_CITI"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock WARANG_CITI { get { if (!_WARANG_CITIReady) { _WARANG_CITIContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "WARANG_CITI"); _WARANG_CITIReady = true; } return _WARANG_CITIContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _WARANG_CITIContent = default;
            private static bool _WARANG_CITIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#YEZIDI"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock YEZIDI { get { if (!_YEZIDIReady) { _YEZIDIContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "YEZIDI"); _YEZIDIReady = true; } return _YEZIDIContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _YEZIDIContent = default;
            private static bool _YEZIDIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#YI_RADICALS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock YI_RADICALS { get { if (!_YI_RADICALSReady) { _YI_RADICALSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "YI_RADICALS"); _YI_RADICALSReady = true; } return _YI_RADICALSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _YI_RADICALSContent = default;
            private static bool _YI_RADICALSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#YI_SYLLABLES"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock YI_SYLLABLES { get { if (!_YI_SYLLABLESReady) { _YI_SYLLABLESContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "YI_SYLLABLES"); _YI_SYLLABLESReady = true; } return _YI_SYLLABLESContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _YI_SYLLABLESContent = default;
            private static bool _YI_SYLLABLESReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#YIJING_HEXAGRAM_SYMBOLS"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock YIJING_HEXAGRAM_SYMBOLS { get { if (!_YIJING_HEXAGRAM_SYMBOLSReady) { _YIJING_HEXAGRAM_SYMBOLSContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "YIJING_HEXAGRAM_SYMBOLS"); _YIJING_HEXAGRAM_SYMBOLSReady = true; } return _YIJING_HEXAGRAM_SYMBOLSContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _YIJING_HEXAGRAM_SYMBOLSContent = default;
            private static bool _YIJING_HEXAGRAM_SYMBOLSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ZANABAZAR_SQUARE"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock ZANABAZAR_SQUARE { get { if (!_ZANABAZAR_SQUAREReady) { _ZANABAZAR_SQUAREContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "ZANABAZAR_SQUARE"); _ZANABAZAR_SQUAREReady = true; } return _ZANABAZAR_SQUAREContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _ZANABAZAR_SQUAREContent = default;
            private static bool _ZANABAZAR_SQUAREReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ZNAMENNY_MUSICAL_NOTATION"/>
            /// </summary>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock ZNAMENNY_MUSICAL_NOTATION { get { if (!_ZNAMENNY_MUSICAL_NOTATIONReady) { _ZNAMENNY_MUSICAL_NOTATIONContent = SGetField<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "ZNAMENNY_MUSICAL_NOTATION"); _ZNAMENNY_MUSICAL_NOTATIONReady = true; } return _ZNAMENNY_MUSICAL_NOTATIONContent; } }
            private static Android.Icu.Lang.UCharacter.UnicodeBlock _ZNAMENNY_MUSICAL_NOTATIONContent = default;
            private static bool _ZNAMENNY_MUSICAL_NOTATIONReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ADLAM_ID"/>
            /// </summary>
            public static int ADLAM_ID { get { if (!_ADLAM_IDReady) { _ADLAM_IDContent = SGetField<int>(LocalBridgeClazz, "ADLAM_ID"); _ADLAM_IDReady = true; } return _ADLAM_IDContent; } }
            private static int _ADLAM_IDContent = default;
            private static bool _ADLAM_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#AEGEAN_NUMBERS_ID"/>
            /// </summary>
            public static int AEGEAN_NUMBERS_ID { get { if (!_AEGEAN_NUMBERS_IDReady) { _AEGEAN_NUMBERS_IDContent = SGetField<int>(LocalBridgeClazz, "AEGEAN_NUMBERS_ID"); _AEGEAN_NUMBERS_IDReady = true; } return _AEGEAN_NUMBERS_IDContent; } }
            private static int _AEGEAN_NUMBERS_IDContent = default;
            private static bool _AEGEAN_NUMBERS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#AHOM_ID"/>
            /// </summary>
            public static int AHOM_ID { get { if (!_AHOM_IDReady) { _AHOM_IDContent = SGetField<int>(LocalBridgeClazz, "AHOM_ID"); _AHOM_IDReady = true; } return _AHOM_IDContent; } }
            private static int _AHOM_IDContent = default;
            private static bool _AHOM_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ALCHEMICAL_SYMBOLS_ID"/>
            /// </summary>
            public static int ALCHEMICAL_SYMBOLS_ID { get { if (!_ALCHEMICAL_SYMBOLS_IDReady) { _ALCHEMICAL_SYMBOLS_IDContent = SGetField<int>(LocalBridgeClazz, "ALCHEMICAL_SYMBOLS_ID"); _ALCHEMICAL_SYMBOLS_IDReady = true; } return _ALCHEMICAL_SYMBOLS_IDContent; } }
            private static int _ALCHEMICAL_SYMBOLS_IDContent = default;
            private static bool _ALCHEMICAL_SYMBOLS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ALPHABETIC_PRESENTATION_FORMS_ID"/>
            /// </summary>
            public static int ALPHABETIC_PRESENTATION_FORMS_ID { get { if (!_ALPHABETIC_PRESENTATION_FORMS_IDReady) { _ALPHABETIC_PRESENTATION_FORMS_IDContent = SGetField<int>(LocalBridgeClazz, "ALPHABETIC_PRESENTATION_FORMS_ID"); _ALPHABETIC_PRESENTATION_FORMS_IDReady = true; } return _ALPHABETIC_PRESENTATION_FORMS_IDContent; } }
            private static int _ALPHABETIC_PRESENTATION_FORMS_IDContent = default;
            private static bool _ALPHABETIC_PRESENTATION_FORMS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ANATOLIAN_HIEROGLYPHS_ID"/>
            /// </summary>
            public static int ANATOLIAN_HIEROGLYPHS_ID { get { if (!_ANATOLIAN_HIEROGLYPHS_IDReady) { _ANATOLIAN_HIEROGLYPHS_IDContent = SGetField<int>(LocalBridgeClazz, "ANATOLIAN_HIEROGLYPHS_ID"); _ANATOLIAN_HIEROGLYPHS_IDReady = true; } return _ANATOLIAN_HIEROGLYPHS_IDContent; } }
            private static int _ANATOLIAN_HIEROGLYPHS_IDContent = default;
            private static bool _ANATOLIAN_HIEROGLYPHS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ANCIENT_GREEK_MUSICAL_NOTATION_ID"/>
            /// </summary>
            public static int ANCIENT_GREEK_MUSICAL_NOTATION_ID { get { if (!_ANCIENT_GREEK_MUSICAL_NOTATION_IDReady) { _ANCIENT_GREEK_MUSICAL_NOTATION_IDContent = SGetField<int>(LocalBridgeClazz, "ANCIENT_GREEK_MUSICAL_NOTATION_ID"); _ANCIENT_GREEK_MUSICAL_NOTATION_IDReady = true; } return _ANCIENT_GREEK_MUSICAL_NOTATION_IDContent; } }
            private static int _ANCIENT_GREEK_MUSICAL_NOTATION_IDContent = default;
            private static bool _ANCIENT_GREEK_MUSICAL_NOTATION_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ANCIENT_GREEK_NUMBERS_ID"/>
            /// </summary>
            public static int ANCIENT_GREEK_NUMBERS_ID { get { if (!_ANCIENT_GREEK_NUMBERS_IDReady) { _ANCIENT_GREEK_NUMBERS_IDContent = SGetField<int>(LocalBridgeClazz, "ANCIENT_GREEK_NUMBERS_ID"); _ANCIENT_GREEK_NUMBERS_IDReady = true; } return _ANCIENT_GREEK_NUMBERS_IDContent; } }
            private static int _ANCIENT_GREEK_NUMBERS_IDContent = default;
            private static bool _ANCIENT_GREEK_NUMBERS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ANCIENT_SYMBOLS_ID"/>
            /// </summary>
            public static int ANCIENT_SYMBOLS_ID { get { if (!_ANCIENT_SYMBOLS_IDReady) { _ANCIENT_SYMBOLS_IDContent = SGetField<int>(LocalBridgeClazz, "ANCIENT_SYMBOLS_ID"); _ANCIENT_SYMBOLS_IDReady = true; } return _ANCIENT_SYMBOLS_IDContent; } }
            private static int _ANCIENT_SYMBOLS_IDContent = default;
            private static bool _ANCIENT_SYMBOLS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ARABIC_EXTENDED_A_ID"/>
            /// </summary>
            public static int ARABIC_EXTENDED_A_ID { get { if (!_ARABIC_EXTENDED_A_IDReady) { _ARABIC_EXTENDED_A_IDContent = SGetField<int>(LocalBridgeClazz, "ARABIC_EXTENDED_A_ID"); _ARABIC_EXTENDED_A_IDReady = true; } return _ARABIC_EXTENDED_A_IDContent; } }
            private static int _ARABIC_EXTENDED_A_IDContent = default;
            private static bool _ARABIC_EXTENDED_A_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ARABIC_EXTENDED_B_ID"/>
            /// </summary>
            public static int ARABIC_EXTENDED_B_ID { get { if (!_ARABIC_EXTENDED_B_IDReady) { _ARABIC_EXTENDED_B_IDContent = SGetField<int>(LocalBridgeClazz, "ARABIC_EXTENDED_B_ID"); _ARABIC_EXTENDED_B_IDReady = true; } return _ARABIC_EXTENDED_B_IDContent; } }
            private static int _ARABIC_EXTENDED_B_IDContent = default;
            private static bool _ARABIC_EXTENDED_B_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ARABIC_EXTENDED_C_ID"/>
            /// </summary>
            public static int ARABIC_EXTENDED_C_ID { get { if (!_ARABIC_EXTENDED_C_IDReady) { _ARABIC_EXTENDED_C_IDContent = SGetField<int>(LocalBridgeClazz, "ARABIC_EXTENDED_C_ID"); _ARABIC_EXTENDED_C_IDReady = true; } return _ARABIC_EXTENDED_C_IDContent; } }
            private static int _ARABIC_EXTENDED_C_IDContent = default;
            private static bool _ARABIC_EXTENDED_C_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ARABIC_ID"/>
            /// </summary>
            public static int ARABIC_ID { get { if (!_ARABIC_IDReady) { _ARABIC_IDContent = SGetField<int>(LocalBridgeClazz, "ARABIC_ID"); _ARABIC_IDReady = true; } return _ARABIC_IDContent; } }
            private static int _ARABIC_IDContent = default;
            private static bool _ARABIC_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS_ID"/>
            /// </summary>
            public static int ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS_ID { get { if (!_ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS_IDReady) { _ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS_IDContent = SGetField<int>(LocalBridgeClazz, "ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS_ID"); _ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS_IDReady = true; } return _ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS_IDContent; } }
            private static int _ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS_IDContent = default;
            private static bool _ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ARABIC_PRESENTATION_FORMS_A_ID"/>
            /// </summary>
            public static int ARABIC_PRESENTATION_FORMS_A_ID { get { if (!_ARABIC_PRESENTATION_FORMS_A_IDReady) { _ARABIC_PRESENTATION_FORMS_A_IDContent = SGetField<int>(LocalBridgeClazz, "ARABIC_PRESENTATION_FORMS_A_ID"); _ARABIC_PRESENTATION_FORMS_A_IDReady = true; } return _ARABIC_PRESENTATION_FORMS_A_IDContent; } }
            private static int _ARABIC_PRESENTATION_FORMS_A_IDContent = default;
            private static bool _ARABIC_PRESENTATION_FORMS_A_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ARABIC_PRESENTATION_FORMS_B_ID"/>
            /// </summary>
            public static int ARABIC_PRESENTATION_FORMS_B_ID { get { if (!_ARABIC_PRESENTATION_FORMS_B_IDReady) { _ARABIC_PRESENTATION_FORMS_B_IDContent = SGetField<int>(LocalBridgeClazz, "ARABIC_PRESENTATION_FORMS_B_ID"); _ARABIC_PRESENTATION_FORMS_B_IDReady = true; } return _ARABIC_PRESENTATION_FORMS_B_IDContent; } }
            private static int _ARABIC_PRESENTATION_FORMS_B_IDContent = default;
            private static bool _ARABIC_PRESENTATION_FORMS_B_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ARABIC_SUPPLEMENT_ID"/>
            /// </summary>
            public static int ARABIC_SUPPLEMENT_ID { get { if (!_ARABIC_SUPPLEMENT_IDReady) { _ARABIC_SUPPLEMENT_IDContent = SGetField<int>(LocalBridgeClazz, "ARABIC_SUPPLEMENT_ID"); _ARABIC_SUPPLEMENT_IDReady = true; } return _ARABIC_SUPPLEMENT_IDContent; } }
            private static int _ARABIC_SUPPLEMENT_IDContent = default;
            private static bool _ARABIC_SUPPLEMENT_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ARMENIAN_ID"/>
            /// </summary>
            public static int ARMENIAN_ID { get { if (!_ARMENIAN_IDReady) { _ARMENIAN_IDContent = SGetField<int>(LocalBridgeClazz, "ARMENIAN_ID"); _ARMENIAN_IDReady = true; } return _ARMENIAN_IDContent; } }
            private static int _ARMENIAN_IDContent = default;
            private static bool _ARMENIAN_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ARROWS_ID"/>
            /// </summary>
            public static int ARROWS_ID { get { if (!_ARROWS_IDReady) { _ARROWS_IDContent = SGetField<int>(LocalBridgeClazz, "ARROWS_ID"); _ARROWS_IDReady = true; } return _ARROWS_IDContent; } }
            private static int _ARROWS_IDContent = default;
            private static bool _ARROWS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#AVESTAN_ID"/>
            /// </summary>
            public static int AVESTAN_ID { get { if (!_AVESTAN_IDReady) { _AVESTAN_IDContent = SGetField<int>(LocalBridgeClazz, "AVESTAN_ID"); _AVESTAN_IDReady = true; } return _AVESTAN_IDContent; } }
            private static int _AVESTAN_IDContent = default;
            private static bool _AVESTAN_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#BALINESE_ID"/>
            /// </summary>
            public static int BALINESE_ID { get { if (!_BALINESE_IDReady) { _BALINESE_IDContent = SGetField<int>(LocalBridgeClazz, "BALINESE_ID"); _BALINESE_IDReady = true; } return _BALINESE_IDContent; } }
            private static int _BALINESE_IDContent = default;
            private static bool _BALINESE_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#BAMUM_ID"/>
            /// </summary>
            public static int BAMUM_ID { get { if (!_BAMUM_IDReady) { _BAMUM_IDContent = SGetField<int>(LocalBridgeClazz, "BAMUM_ID"); _BAMUM_IDReady = true; } return _BAMUM_IDContent; } }
            private static int _BAMUM_IDContent = default;
            private static bool _BAMUM_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#BAMUM_SUPPLEMENT_ID"/>
            /// </summary>
            public static int BAMUM_SUPPLEMENT_ID { get { if (!_BAMUM_SUPPLEMENT_IDReady) { _BAMUM_SUPPLEMENT_IDContent = SGetField<int>(LocalBridgeClazz, "BAMUM_SUPPLEMENT_ID"); _BAMUM_SUPPLEMENT_IDReady = true; } return _BAMUM_SUPPLEMENT_IDContent; } }
            private static int _BAMUM_SUPPLEMENT_IDContent = default;
            private static bool _BAMUM_SUPPLEMENT_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#BASIC_LATIN_ID"/>
            /// </summary>
            public static int BASIC_LATIN_ID { get { if (!_BASIC_LATIN_IDReady) { _BASIC_LATIN_IDContent = SGetField<int>(LocalBridgeClazz, "BASIC_LATIN_ID"); _BASIC_LATIN_IDReady = true; } return _BASIC_LATIN_IDContent; } }
            private static int _BASIC_LATIN_IDContent = default;
            private static bool _BASIC_LATIN_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#BASSA_VAH_ID"/>
            /// </summary>
            public static int BASSA_VAH_ID { get { if (!_BASSA_VAH_IDReady) { _BASSA_VAH_IDContent = SGetField<int>(LocalBridgeClazz, "BASSA_VAH_ID"); _BASSA_VAH_IDReady = true; } return _BASSA_VAH_IDContent; } }
            private static int _BASSA_VAH_IDContent = default;
            private static bool _BASSA_VAH_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#BATAK_ID"/>
            /// </summary>
            public static int BATAK_ID { get { if (!_BATAK_IDReady) { _BATAK_IDContent = SGetField<int>(LocalBridgeClazz, "BATAK_ID"); _BATAK_IDReady = true; } return _BATAK_IDContent; } }
            private static int _BATAK_IDContent = default;
            private static bool _BATAK_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#BENGALI_ID"/>
            /// </summary>
            public static int BENGALI_ID { get { if (!_BENGALI_IDReady) { _BENGALI_IDContent = SGetField<int>(LocalBridgeClazz, "BENGALI_ID"); _BENGALI_IDReady = true; } return _BENGALI_IDContent; } }
            private static int _BENGALI_IDContent = default;
            private static bool _BENGALI_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#BHAIKSUKI_ID"/>
            /// </summary>
            public static int BHAIKSUKI_ID { get { if (!_BHAIKSUKI_IDReady) { _BHAIKSUKI_IDContent = SGetField<int>(LocalBridgeClazz, "BHAIKSUKI_ID"); _BHAIKSUKI_IDReady = true; } return _BHAIKSUKI_IDContent; } }
            private static int _BHAIKSUKI_IDContent = default;
            private static bool _BHAIKSUKI_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#BLOCK_ELEMENTS_ID"/>
            /// </summary>
            public static int BLOCK_ELEMENTS_ID { get { if (!_BLOCK_ELEMENTS_IDReady) { _BLOCK_ELEMENTS_IDContent = SGetField<int>(LocalBridgeClazz, "BLOCK_ELEMENTS_ID"); _BLOCK_ELEMENTS_IDReady = true; } return _BLOCK_ELEMENTS_IDContent; } }
            private static int _BLOCK_ELEMENTS_IDContent = default;
            private static bool _BLOCK_ELEMENTS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#BOPOMOFO_EXTENDED_ID"/>
            /// </summary>
            public static int BOPOMOFO_EXTENDED_ID { get { if (!_BOPOMOFO_EXTENDED_IDReady) { _BOPOMOFO_EXTENDED_IDContent = SGetField<int>(LocalBridgeClazz, "BOPOMOFO_EXTENDED_ID"); _BOPOMOFO_EXTENDED_IDReady = true; } return _BOPOMOFO_EXTENDED_IDContent; } }
            private static int _BOPOMOFO_EXTENDED_IDContent = default;
            private static bool _BOPOMOFO_EXTENDED_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#BOPOMOFO_ID"/>
            /// </summary>
            public static int BOPOMOFO_ID { get { if (!_BOPOMOFO_IDReady) { _BOPOMOFO_IDContent = SGetField<int>(LocalBridgeClazz, "BOPOMOFO_ID"); _BOPOMOFO_IDReady = true; } return _BOPOMOFO_IDContent; } }
            private static int _BOPOMOFO_IDContent = default;
            private static bool _BOPOMOFO_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#BOX_DRAWING_ID"/>
            /// </summary>
            public static int BOX_DRAWING_ID { get { if (!_BOX_DRAWING_IDReady) { _BOX_DRAWING_IDContent = SGetField<int>(LocalBridgeClazz, "BOX_DRAWING_ID"); _BOX_DRAWING_IDReady = true; } return _BOX_DRAWING_IDContent; } }
            private static int _BOX_DRAWING_IDContent = default;
            private static bool _BOX_DRAWING_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#BRAHMI_ID"/>
            /// </summary>
            public static int BRAHMI_ID { get { if (!_BRAHMI_IDReady) { _BRAHMI_IDContent = SGetField<int>(LocalBridgeClazz, "BRAHMI_ID"); _BRAHMI_IDReady = true; } return _BRAHMI_IDContent; } }
            private static int _BRAHMI_IDContent = default;
            private static bool _BRAHMI_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#BRAILLE_PATTERNS_ID"/>
            /// </summary>
            public static int BRAILLE_PATTERNS_ID { get { if (!_BRAILLE_PATTERNS_IDReady) { _BRAILLE_PATTERNS_IDContent = SGetField<int>(LocalBridgeClazz, "BRAILLE_PATTERNS_ID"); _BRAILLE_PATTERNS_IDReady = true; } return _BRAILLE_PATTERNS_IDContent; } }
            private static int _BRAILLE_PATTERNS_IDContent = default;
            private static bool _BRAILLE_PATTERNS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#BUGINESE_ID"/>
            /// </summary>
            public static int BUGINESE_ID { get { if (!_BUGINESE_IDReady) { _BUGINESE_IDContent = SGetField<int>(LocalBridgeClazz, "BUGINESE_ID"); _BUGINESE_IDReady = true; } return _BUGINESE_IDContent; } }
            private static int _BUGINESE_IDContent = default;
            private static bool _BUGINESE_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#BUHID_ID"/>
            /// </summary>
            public static int BUHID_ID { get { if (!_BUHID_IDReady) { _BUHID_IDContent = SGetField<int>(LocalBridgeClazz, "BUHID_ID"); _BUHID_IDReady = true; } return _BUHID_IDContent; } }
            private static int _BUHID_IDContent = default;
            private static bool _BUHID_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#BYZANTINE_MUSICAL_SYMBOLS_ID"/>
            /// </summary>
            public static int BYZANTINE_MUSICAL_SYMBOLS_ID { get { if (!_BYZANTINE_MUSICAL_SYMBOLS_IDReady) { _BYZANTINE_MUSICAL_SYMBOLS_IDContent = SGetField<int>(LocalBridgeClazz, "BYZANTINE_MUSICAL_SYMBOLS_ID"); _BYZANTINE_MUSICAL_SYMBOLS_IDReady = true; } return _BYZANTINE_MUSICAL_SYMBOLS_IDContent; } }
            private static int _BYZANTINE_MUSICAL_SYMBOLS_IDContent = default;
            private static bool _BYZANTINE_MUSICAL_SYMBOLS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CARIAN_ID"/>
            /// </summary>
            public static int CARIAN_ID { get { if (!_CARIAN_IDReady) { _CARIAN_IDContent = SGetField<int>(LocalBridgeClazz, "CARIAN_ID"); _CARIAN_IDReady = true; } return _CARIAN_IDContent; } }
            private static int _CARIAN_IDContent = default;
            private static bool _CARIAN_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CAUCASIAN_ALBANIAN_ID"/>
            /// </summary>
            public static int CAUCASIAN_ALBANIAN_ID { get { if (!_CAUCASIAN_ALBANIAN_IDReady) { _CAUCASIAN_ALBANIAN_IDContent = SGetField<int>(LocalBridgeClazz, "CAUCASIAN_ALBANIAN_ID"); _CAUCASIAN_ALBANIAN_IDReady = true; } return _CAUCASIAN_ALBANIAN_IDContent; } }
            private static int _CAUCASIAN_ALBANIAN_IDContent = default;
            private static bool _CAUCASIAN_ALBANIAN_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CHAKMA_ID"/>
            /// </summary>
            public static int CHAKMA_ID { get { if (!_CHAKMA_IDReady) { _CHAKMA_IDContent = SGetField<int>(LocalBridgeClazz, "CHAKMA_ID"); _CHAKMA_IDReady = true; } return _CHAKMA_IDContent; } }
            private static int _CHAKMA_IDContent = default;
            private static bool _CHAKMA_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CHAM_ID"/>
            /// </summary>
            public static int CHAM_ID { get { if (!_CHAM_IDReady) { _CHAM_IDContent = SGetField<int>(LocalBridgeClazz, "CHAM_ID"); _CHAM_IDReady = true; } return _CHAM_IDContent; } }
            private static int _CHAM_IDContent = default;
            private static bool _CHAM_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CHEROKEE_ID"/>
            /// </summary>
            public static int CHEROKEE_ID { get { if (!_CHEROKEE_IDReady) { _CHEROKEE_IDContent = SGetField<int>(LocalBridgeClazz, "CHEROKEE_ID"); _CHEROKEE_IDReady = true; } return _CHEROKEE_IDContent; } }
            private static int _CHEROKEE_IDContent = default;
            private static bool _CHEROKEE_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CHEROKEE_SUPPLEMENT_ID"/>
            /// </summary>
            public static int CHEROKEE_SUPPLEMENT_ID { get { if (!_CHEROKEE_SUPPLEMENT_IDReady) { _CHEROKEE_SUPPLEMENT_IDContent = SGetField<int>(LocalBridgeClazz, "CHEROKEE_SUPPLEMENT_ID"); _CHEROKEE_SUPPLEMENT_IDReady = true; } return _CHEROKEE_SUPPLEMENT_IDContent; } }
            private static int _CHEROKEE_SUPPLEMENT_IDContent = default;
            private static bool _CHEROKEE_SUPPLEMENT_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CHESS_SYMBOLS_ID"/>
            /// </summary>
            public static int CHESS_SYMBOLS_ID { get { if (!_CHESS_SYMBOLS_IDReady) { _CHESS_SYMBOLS_IDContent = SGetField<int>(LocalBridgeClazz, "CHESS_SYMBOLS_ID"); _CHESS_SYMBOLS_IDReady = true; } return _CHESS_SYMBOLS_IDContent; } }
            private static int _CHESS_SYMBOLS_IDContent = default;
            private static bool _CHESS_SYMBOLS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CHORASMIAN_ID"/>
            /// </summary>
            public static int CHORASMIAN_ID { get { if (!_CHORASMIAN_IDReady) { _CHORASMIAN_IDContent = SGetField<int>(LocalBridgeClazz, "CHORASMIAN_ID"); _CHORASMIAN_IDReady = true; } return _CHORASMIAN_IDContent; } }
            private static int _CHORASMIAN_IDContent = default;
            private static bool _CHORASMIAN_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CJK_COMPATIBILITY_FORMS_ID"/>
            /// </summary>
            public static int CJK_COMPATIBILITY_FORMS_ID { get { if (!_CJK_COMPATIBILITY_FORMS_IDReady) { _CJK_COMPATIBILITY_FORMS_IDContent = SGetField<int>(LocalBridgeClazz, "CJK_COMPATIBILITY_FORMS_ID"); _CJK_COMPATIBILITY_FORMS_IDReady = true; } return _CJK_COMPATIBILITY_FORMS_IDContent; } }
            private static int _CJK_COMPATIBILITY_FORMS_IDContent = default;
            private static bool _CJK_COMPATIBILITY_FORMS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CJK_COMPATIBILITY_ID"/>
            /// </summary>
            public static int CJK_COMPATIBILITY_ID { get { if (!_CJK_COMPATIBILITY_IDReady) { _CJK_COMPATIBILITY_IDContent = SGetField<int>(LocalBridgeClazz, "CJK_COMPATIBILITY_ID"); _CJK_COMPATIBILITY_IDReady = true; } return _CJK_COMPATIBILITY_IDContent; } }
            private static int _CJK_COMPATIBILITY_IDContent = default;
            private static bool _CJK_COMPATIBILITY_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CJK_COMPATIBILITY_IDEOGRAPHS_ID"/>
            /// </summary>
            public static int CJK_COMPATIBILITY_IDEOGRAPHS_ID { get { if (!_CJK_COMPATIBILITY_IDEOGRAPHS_IDReady) { _CJK_COMPATIBILITY_IDEOGRAPHS_IDContent = SGetField<int>(LocalBridgeClazz, "CJK_COMPATIBILITY_IDEOGRAPHS_ID"); _CJK_COMPATIBILITY_IDEOGRAPHS_IDReady = true; } return _CJK_COMPATIBILITY_IDEOGRAPHS_IDContent; } }
            private static int _CJK_COMPATIBILITY_IDEOGRAPHS_IDContent = default;
            private static bool _CJK_COMPATIBILITY_IDEOGRAPHS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT_ID"/>
            /// </summary>
            public static int CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT_ID { get { if (!_CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT_IDReady) { _CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT_IDContent = SGetField<int>(LocalBridgeClazz, "CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT_ID"); _CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT_IDReady = true; } return _CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT_IDContent; } }
            private static int _CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT_IDContent = default;
            private static bool _CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CJK_RADICALS_SUPPLEMENT_ID"/>
            /// </summary>
            public static int CJK_RADICALS_SUPPLEMENT_ID { get { if (!_CJK_RADICALS_SUPPLEMENT_IDReady) { _CJK_RADICALS_SUPPLEMENT_IDContent = SGetField<int>(LocalBridgeClazz, "CJK_RADICALS_SUPPLEMENT_ID"); _CJK_RADICALS_SUPPLEMENT_IDReady = true; } return _CJK_RADICALS_SUPPLEMENT_IDContent; } }
            private static int _CJK_RADICALS_SUPPLEMENT_IDContent = default;
            private static bool _CJK_RADICALS_SUPPLEMENT_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CJK_STROKES_ID"/>
            /// </summary>
            public static int CJK_STROKES_ID { get { if (!_CJK_STROKES_IDReady) { _CJK_STROKES_IDContent = SGetField<int>(LocalBridgeClazz, "CJK_STROKES_ID"); _CJK_STROKES_IDReady = true; } return _CJK_STROKES_IDContent; } }
            private static int _CJK_STROKES_IDContent = default;
            private static bool _CJK_STROKES_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CJK_SYMBOLS_AND_PUNCTUATION_ID"/>
            /// </summary>
            public static int CJK_SYMBOLS_AND_PUNCTUATION_ID { get { if (!_CJK_SYMBOLS_AND_PUNCTUATION_IDReady) { _CJK_SYMBOLS_AND_PUNCTUATION_IDContent = SGetField<int>(LocalBridgeClazz, "CJK_SYMBOLS_AND_PUNCTUATION_ID"); _CJK_SYMBOLS_AND_PUNCTUATION_IDReady = true; } return _CJK_SYMBOLS_AND_PUNCTUATION_IDContent; } }
            private static int _CJK_SYMBOLS_AND_PUNCTUATION_IDContent = default;
            private static bool _CJK_SYMBOLS_AND_PUNCTUATION_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A_ID"/>
            /// </summary>
            public static int CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A_ID { get { if (!_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A_IDReady) { _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A_IDContent = SGetField<int>(LocalBridgeClazz, "CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A_ID"); _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A_IDReady = true; } return _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A_IDContent; } }
            private static int _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A_IDContent = default;
            private static bool _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B_ID"/>
            /// </summary>
            public static int CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B_ID { get { if (!_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B_IDReady) { _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B_IDContent = SGetField<int>(LocalBridgeClazz, "CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B_ID"); _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B_IDReady = true; } return _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B_IDContent; } }
            private static int _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B_IDContent = default;
            private static bool _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C_ID"/>
            /// </summary>
            public static int CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C_ID { get { if (!_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C_IDReady) { _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C_IDContent = SGetField<int>(LocalBridgeClazz, "CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C_ID"); _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C_IDReady = true; } return _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C_IDContent; } }
            private static int _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C_IDContent = default;
            private static bool _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D_ID"/>
            /// </summary>
            public static int CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D_ID { get { if (!_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D_IDReady) { _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D_IDContent = SGetField<int>(LocalBridgeClazz, "CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D_ID"); _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D_IDReady = true; } return _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D_IDContent; } }
            private static int _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D_IDContent = default;
            private static bool _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CJK_UNIFIED_IDEOGRAPHS_EXTENSION_E_ID"/>
            /// </summary>
            public static int CJK_UNIFIED_IDEOGRAPHS_EXTENSION_E_ID { get { if (!_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_E_IDReady) { _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_E_IDContent = SGetField<int>(LocalBridgeClazz, "CJK_UNIFIED_IDEOGRAPHS_EXTENSION_E_ID"); _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_E_IDReady = true; } return _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_E_IDContent; } }
            private static int _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_E_IDContent = default;
            private static bool _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_E_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CJK_UNIFIED_IDEOGRAPHS_EXTENSION_F_ID"/>
            /// </summary>
            public static int CJK_UNIFIED_IDEOGRAPHS_EXTENSION_F_ID { get { if (!_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_F_IDReady) { _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_F_IDContent = SGetField<int>(LocalBridgeClazz, "CJK_UNIFIED_IDEOGRAPHS_EXTENSION_F_ID"); _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_F_IDReady = true; } return _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_F_IDContent; } }
            private static int _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_F_IDContent = default;
            private static bool _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_F_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CJK_UNIFIED_IDEOGRAPHS_EXTENSION_G_ID"/>
            /// </summary>
            public static int CJK_UNIFIED_IDEOGRAPHS_EXTENSION_G_ID { get { if (!_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_G_IDReady) { _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_G_IDContent = SGetField<int>(LocalBridgeClazz, "CJK_UNIFIED_IDEOGRAPHS_EXTENSION_G_ID"); _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_G_IDReady = true; } return _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_G_IDContent; } }
            private static int _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_G_IDContent = default;
            private static bool _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_G_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CJK_UNIFIED_IDEOGRAPHS_EXTENSION_H_ID"/>
            /// </summary>
            public static int CJK_UNIFIED_IDEOGRAPHS_EXTENSION_H_ID { get { if (!_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_H_IDReady) { _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_H_IDContent = SGetField<int>(LocalBridgeClazz, "CJK_UNIFIED_IDEOGRAPHS_EXTENSION_H_ID"); _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_H_IDReady = true; } return _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_H_IDContent; } }
            private static int _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_H_IDContent = default;
            private static bool _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_H_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CJK_UNIFIED_IDEOGRAPHS_EXTENSION_I_ID"/>
            /// </summary>
            public static int CJK_UNIFIED_IDEOGRAPHS_EXTENSION_I_ID { get { if (!_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_I_IDReady) { _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_I_IDContent = SGetField<int>(LocalBridgeClazz, "CJK_UNIFIED_IDEOGRAPHS_EXTENSION_I_ID"); _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_I_IDReady = true; } return _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_I_IDContent; } }
            private static int _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_I_IDContent = default;
            private static bool _CJK_UNIFIED_IDEOGRAPHS_EXTENSION_I_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CJK_UNIFIED_IDEOGRAPHS_ID"/>
            /// </summary>
            public static int CJK_UNIFIED_IDEOGRAPHS_ID { get { if (!_CJK_UNIFIED_IDEOGRAPHS_IDReady) { _CJK_UNIFIED_IDEOGRAPHS_IDContent = SGetField<int>(LocalBridgeClazz, "CJK_UNIFIED_IDEOGRAPHS_ID"); _CJK_UNIFIED_IDEOGRAPHS_IDReady = true; } return _CJK_UNIFIED_IDEOGRAPHS_IDContent; } }
            private static int _CJK_UNIFIED_IDEOGRAPHS_IDContent = default;
            private static bool _CJK_UNIFIED_IDEOGRAPHS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#COMBINING_DIACRITICAL_MARKS_EXTENDED_ID"/>
            /// </summary>
            public static int COMBINING_DIACRITICAL_MARKS_EXTENDED_ID { get { if (!_COMBINING_DIACRITICAL_MARKS_EXTENDED_IDReady) { _COMBINING_DIACRITICAL_MARKS_EXTENDED_IDContent = SGetField<int>(LocalBridgeClazz, "COMBINING_DIACRITICAL_MARKS_EXTENDED_ID"); _COMBINING_DIACRITICAL_MARKS_EXTENDED_IDReady = true; } return _COMBINING_DIACRITICAL_MARKS_EXTENDED_IDContent; } }
            private static int _COMBINING_DIACRITICAL_MARKS_EXTENDED_IDContent = default;
            private static bool _COMBINING_DIACRITICAL_MARKS_EXTENDED_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#COMBINING_DIACRITICAL_MARKS_ID"/>
            /// </summary>
            public static int COMBINING_DIACRITICAL_MARKS_ID { get { if (!_COMBINING_DIACRITICAL_MARKS_IDReady) { _COMBINING_DIACRITICAL_MARKS_IDContent = SGetField<int>(LocalBridgeClazz, "COMBINING_DIACRITICAL_MARKS_ID"); _COMBINING_DIACRITICAL_MARKS_IDReady = true; } return _COMBINING_DIACRITICAL_MARKS_IDContent; } }
            private static int _COMBINING_DIACRITICAL_MARKS_IDContent = default;
            private static bool _COMBINING_DIACRITICAL_MARKS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#COMBINING_DIACRITICAL_MARKS_SUPPLEMENT_ID"/>
            /// </summary>
            public static int COMBINING_DIACRITICAL_MARKS_SUPPLEMENT_ID { get { if (!_COMBINING_DIACRITICAL_MARKS_SUPPLEMENT_IDReady) { _COMBINING_DIACRITICAL_MARKS_SUPPLEMENT_IDContent = SGetField<int>(LocalBridgeClazz, "COMBINING_DIACRITICAL_MARKS_SUPPLEMENT_ID"); _COMBINING_DIACRITICAL_MARKS_SUPPLEMENT_IDReady = true; } return _COMBINING_DIACRITICAL_MARKS_SUPPLEMENT_IDContent; } }
            private static int _COMBINING_DIACRITICAL_MARKS_SUPPLEMENT_IDContent = default;
            private static bool _COMBINING_DIACRITICAL_MARKS_SUPPLEMENT_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#COMBINING_HALF_MARKS_ID"/>
            /// </summary>
            public static int COMBINING_HALF_MARKS_ID { get { if (!_COMBINING_HALF_MARKS_IDReady) { _COMBINING_HALF_MARKS_IDContent = SGetField<int>(LocalBridgeClazz, "COMBINING_HALF_MARKS_ID"); _COMBINING_HALF_MARKS_IDReady = true; } return _COMBINING_HALF_MARKS_IDContent; } }
            private static int _COMBINING_HALF_MARKS_IDContent = default;
            private static bool _COMBINING_HALF_MARKS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#COMBINING_MARKS_FOR_SYMBOLS_ID"/>
            /// </summary>
            public static int COMBINING_MARKS_FOR_SYMBOLS_ID { get { if (!_COMBINING_MARKS_FOR_SYMBOLS_IDReady) { _COMBINING_MARKS_FOR_SYMBOLS_IDContent = SGetField<int>(LocalBridgeClazz, "COMBINING_MARKS_FOR_SYMBOLS_ID"); _COMBINING_MARKS_FOR_SYMBOLS_IDReady = true; } return _COMBINING_MARKS_FOR_SYMBOLS_IDContent; } }
            private static int _COMBINING_MARKS_FOR_SYMBOLS_IDContent = default;
            private static bool _COMBINING_MARKS_FOR_SYMBOLS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#COMMON_INDIC_NUMBER_FORMS_ID"/>
            /// </summary>
            public static int COMMON_INDIC_NUMBER_FORMS_ID { get { if (!_COMMON_INDIC_NUMBER_FORMS_IDReady) { _COMMON_INDIC_NUMBER_FORMS_IDContent = SGetField<int>(LocalBridgeClazz, "COMMON_INDIC_NUMBER_FORMS_ID"); _COMMON_INDIC_NUMBER_FORMS_IDReady = true; } return _COMMON_INDIC_NUMBER_FORMS_IDContent; } }
            private static int _COMMON_INDIC_NUMBER_FORMS_IDContent = default;
            private static bool _COMMON_INDIC_NUMBER_FORMS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CONTROL_PICTURES_ID"/>
            /// </summary>
            public static int CONTROL_PICTURES_ID { get { if (!_CONTROL_PICTURES_IDReady) { _CONTROL_PICTURES_IDContent = SGetField<int>(LocalBridgeClazz, "CONTROL_PICTURES_ID"); _CONTROL_PICTURES_IDReady = true; } return _CONTROL_PICTURES_IDContent; } }
            private static int _CONTROL_PICTURES_IDContent = default;
            private static bool _CONTROL_PICTURES_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#COPTIC_EPACT_NUMBERS_ID"/>
            /// </summary>
            public static int COPTIC_EPACT_NUMBERS_ID { get { if (!_COPTIC_EPACT_NUMBERS_IDReady) { _COPTIC_EPACT_NUMBERS_IDContent = SGetField<int>(LocalBridgeClazz, "COPTIC_EPACT_NUMBERS_ID"); _COPTIC_EPACT_NUMBERS_IDReady = true; } return _COPTIC_EPACT_NUMBERS_IDContent; } }
            private static int _COPTIC_EPACT_NUMBERS_IDContent = default;
            private static bool _COPTIC_EPACT_NUMBERS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#COPTIC_ID"/>
            /// </summary>
            public static int COPTIC_ID { get { if (!_COPTIC_IDReady) { _COPTIC_IDContent = SGetField<int>(LocalBridgeClazz, "COPTIC_ID"); _COPTIC_IDReady = true; } return _COPTIC_IDContent; } }
            private static int _COPTIC_IDContent = default;
            private static bool _COPTIC_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#COUNTING_ROD_NUMERALS_ID"/>
            /// </summary>
            public static int COUNTING_ROD_NUMERALS_ID { get { if (!_COUNTING_ROD_NUMERALS_IDReady) { _COUNTING_ROD_NUMERALS_IDContent = SGetField<int>(LocalBridgeClazz, "COUNTING_ROD_NUMERALS_ID"); _COUNTING_ROD_NUMERALS_IDReady = true; } return _COUNTING_ROD_NUMERALS_IDContent; } }
            private static int _COUNTING_ROD_NUMERALS_IDContent = default;
            private static bool _COUNTING_ROD_NUMERALS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CUNEIFORM_ID"/>
            /// </summary>
            public static int CUNEIFORM_ID { get { if (!_CUNEIFORM_IDReady) { _CUNEIFORM_IDContent = SGetField<int>(LocalBridgeClazz, "CUNEIFORM_ID"); _CUNEIFORM_IDReady = true; } return _CUNEIFORM_IDContent; } }
            private static int _CUNEIFORM_IDContent = default;
            private static bool _CUNEIFORM_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CUNEIFORM_NUMBERS_AND_PUNCTUATION_ID"/>
            /// </summary>
            public static int CUNEIFORM_NUMBERS_AND_PUNCTUATION_ID { get { if (!_CUNEIFORM_NUMBERS_AND_PUNCTUATION_IDReady) { _CUNEIFORM_NUMBERS_AND_PUNCTUATION_IDContent = SGetField<int>(LocalBridgeClazz, "CUNEIFORM_NUMBERS_AND_PUNCTUATION_ID"); _CUNEIFORM_NUMBERS_AND_PUNCTUATION_IDReady = true; } return _CUNEIFORM_NUMBERS_AND_PUNCTUATION_IDContent; } }
            private static int _CUNEIFORM_NUMBERS_AND_PUNCTUATION_IDContent = default;
            private static bool _CUNEIFORM_NUMBERS_AND_PUNCTUATION_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CURRENCY_SYMBOLS_ID"/>
            /// </summary>
            public static int CURRENCY_SYMBOLS_ID { get { if (!_CURRENCY_SYMBOLS_IDReady) { _CURRENCY_SYMBOLS_IDContent = SGetField<int>(LocalBridgeClazz, "CURRENCY_SYMBOLS_ID"); _CURRENCY_SYMBOLS_IDReady = true; } return _CURRENCY_SYMBOLS_IDContent; } }
            private static int _CURRENCY_SYMBOLS_IDContent = default;
            private static bool _CURRENCY_SYMBOLS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CYPRIOT_SYLLABARY_ID"/>
            /// </summary>
            public static int CYPRIOT_SYLLABARY_ID { get { if (!_CYPRIOT_SYLLABARY_IDReady) { _CYPRIOT_SYLLABARY_IDContent = SGetField<int>(LocalBridgeClazz, "CYPRIOT_SYLLABARY_ID"); _CYPRIOT_SYLLABARY_IDReady = true; } return _CYPRIOT_SYLLABARY_IDContent; } }
            private static int _CYPRIOT_SYLLABARY_IDContent = default;
            private static bool _CYPRIOT_SYLLABARY_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CYPRO_MINOAN_ID"/>
            /// </summary>
            public static int CYPRO_MINOAN_ID { get { if (!_CYPRO_MINOAN_IDReady) { _CYPRO_MINOAN_IDContent = SGetField<int>(LocalBridgeClazz, "CYPRO_MINOAN_ID"); _CYPRO_MINOAN_IDReady = true; } return _CYPRO_MINOAN_IDContent; } }
            private static int _CYPRO_MINOAN_IDContent = default;
            private static bool _CYPRO_MINOAN_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CYRILLIC_EXTENDED_A_ID"/>
            /// </summary>
            public static int CYRILLIC_EXTENDED_A_ID { get { if (!_CYRILLIC_EXTENDED_A_IDReady) { _CYRILLIC_EXTENDED_A_IDContent = SGetField<int>(LocalBridgeClazz, "CYRILLIC_EXTENDED_A_ID"); _CYRILLIC_EXTENDED_A_IDReady = true; } return _CYRILLIC_EXTENDED_A_IDContent; } }
            private static int _CYRILLIC_EXTENDED_A_IDContent = default;
            private static bool _CYRILLIC_EXTENDED_A_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CYRILLIC_EXTENDED_B_ID"/>
            /// </summary>
            public static int CYRILLIC_EXTENDED_B_ID { get { if (!_CYRILLIC_EXTENDED_B_IDReady) { _CYRILLIC_EXTENDED_B_IDContent = SGetField<int>(LocalBridgeClazz, "CYRILLIC_EXTENDED_B_ID"); _CYRILLIC_EXTENDED_B_IDReady = true; } return _CYRILLIC_EXTENDED_B_IDContent; } }
            private static int _CYRILLIC_EXTENDED_B_IDContent = default;
            private static bool _CYRILLIC_EXTENDED_B_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CYRILLIC_EXTENDED_C_ID"/>
            /// </summary>
            public static int CYRILLIC_EXTENDED_C_ID { get { if (!_CYRILLIC_EXTENDED_C_IDReady) { _CYRILLIC_EXTENDED_C_IDContent = SGetField<int>(LocalBridgeClazz, "CYRILLIC_EXTENDED_C_ID"); _CYRILLIC_EXTENDED_C_IDReady = true; } return _CYRILLIC_EXTENDED_C_IDContent; } }
            private static int _CYRILLIC_EXTENDED_C_IDContent = default;
            private static bool _CYRILLIC_EXTENDED_C_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CYRILLIC_EXTENDED_D_ID"/>
            /// </summary>
            public static int CYRILLIC_EXTENDED_D_ID { get { if (!_CYRILLIC_EXTENDED_D_IDReady) { _CYRILLIC_EXTENDED_D_IDContent = SGetField<int>(LocalBridgeClazz, "CYRILLIC_EXTENDED_D_ID"); _CYRILLIC_EXTENDED_D_IDReady = true; } return _CYRILLIC_EXTENDED_D_IDContent; } }
            private static int _CYRILLIC_EXTENDED_D_IDContent = default;
            private static bool _CYRILLIC_EXTENDED_D_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CYRILLIC_ID"/>
            /// </summary>
            public static int CYRILLIC_ID { get { if (!_CYRILLIC_IDReady) { _CYRILLIC_IDContent = SGetField<int>(LocalBridgeClazz, "CYRILLIC_ID"); _CYRILLIC_IDReady = true; } return _CYRILLIC_IDContent; } }
            private static int _CYRILLIC_IDContent = default;
            private static bool _CYRILLIC_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CYRILLIC_SUPPLEMENT_ID"/>
            /// </summary>
            public static int CYRILLIC_SUPPLEMENT_ID { get { if (!_CYRILLIC_SUPPLEMENT_IDReady) { _CYRILLIC_SUPPLEMENT_IDContent = SGetField<int>(LocalBridgeClazz, "CYRILLIC_SUPPLEMENT_ID"); _CYRILLIC_SUPPLEMENT_IDReady = true; } return _CYRILLIC_SUPPLEMENT_IDContent; } }
            private static int _CYRILLIC_SUPPLEMENT_IDContent = default;
            private static bool _CYRILLIC_SUPPLEMENT_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#CYRILLIC_SUPPLEMENTARY_ID"/>
            /// </summary>
            public static int CYRILLIC_SUPPLEMENTARY_ID { get { if (!_CYRILLIC_SUPPLEMENTARY_IDReady) { _CYRILLIC_SUPPLEMENTARY_IDContent = SGetField<int>(LocalBridgeClazz, "CYRILLIC_SUPPLEMENTARY_ID"); _CYRILLIC_SUPPLEMENTARY_IDReady = true; } return _CYRILLIC_SUPPLEMENTARY_IDContent; } }
            private static int _CYRILLIC_SUPPLEMENTARY_IDContent = default;
            private static bool _CYRILLIC_SUPPLEMENTARY_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#DESERET_ID"/>
            /// </summary>
            public static int DESERET_ID { get { if (!_DESERET_IDReady) { _DESERET_IDContent = SGetField<int>(LocalBridgeClazz, "DESERET_ID"); _DESERET_IDReady = true; } return _DESERET_IDContent; } }
            private static int _DESERET_IDContent = default;
            private static bool _DESERET_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#DEVANAGARI_EXTENDED_A_ID"/>
            /// </summary>
            public static int DEVANAGARI_EXTENDED_A_ID { get { if (!_DEVANAGARI_EXTENDED_A_IDReady) { _DEVANAGARI_EXTENDED_A_IDContent = SGetField<int>(LocalBridgeClazz, "DEVANAGARI_EXTENDED_A_ID"); _DEVANAGARI_EXTENDED_A_IDReady = true; } return _DEVANAGARI_EXTENDED_A_IDContent; } }
            private static int _DEVANAGARI_EXTENDED_A_IDContent = default;
            private static bool _DEVANAGARI_EXTENDED_A_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#DEVANAGARI_EXTENDED_ID"/>
            /// </summary>
            public static int DEVANAGARI_EXTENDED_ID { get { if (!_DEVANAGARI_EXTENDED_IDReady) { _DEVANAGARI_EXTENDED_IDContent = SGetField<int>(LocalBridgeClazz, "DEVANAGARI_EXTENDED_ID"); _DEVANAGARI_EXTENDED_IDReady = true; } return _DEVANAGARI_EXTENDED_IDContent; } }
            private static int _DEVANAGARI_EXTENDED_IDContent = default;
            private static bool _DEVANAGARI_EXTENDED_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#DEVANAGARI_ID"/>
            /// </summary>
            public static int DEVANAGARI_ID { get { if (!_DEVANAGARI_IDReady) { _DEVANAGARI_IDContent = SGetField<int>(LocalBridgeClazz, "DEVANAGARI_ID"); _DEVANAGARI_IDReady = true; } return _DEVANAGARI_IDContent; } }
            private static int _DEVANAGARI_IDContent = default;
            private static bool _DEVANAGARI_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#DINGBATS_ID"/>
            /// </summary>
            public static int DINGBATS_ID { get { if (!_DINGBATS_IDReady) { _DINGBATS_IDContent = SGetField<int>(LocalBridgeClazz, "DINGBATS_ID"); _DINGBATS_IDReady = true; } return _DINGBATS_IDContent; } }
            private static int _DINGBATS_IDContent = default;
            private static bool _DINGBATS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#DIVES_AKURU_ID"/>
            /// </summary>
            public static int DIVES_AKURU_ID { get { if (!_DIVES_AKURU_IDReady) { _DIVES_AKURU_IDContent = SGetField<int>(LocalBridgeClazz, "DIVES_AKURU_ID"); _DIVES_AKURU_IDReady = true; } return _DIVES_AKURU_IDContent; } }
            private static int _DIVES_AKURU_IDContent = default;
            private static bool _DIVES_AKURU_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#DOGRA_ID"/>
            /// </summary>
            public static int DOGRA_ID { get { if (!_DOGRA_IDReady) { _DOGRA_IDContent = SGetField<int>(LocalBridgeClazz, "DOGRA_ID"); _DOGRA_IDReady = true; } return _DOGRA_IDContent; } }
            private static int _DOGRA_IDContent = default;
            private static bool _DOGRA_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#DOMINO_TILES_ID"/>
            /// </summary>
            public static int DOMINO_TILES_ID { get { if (!_DOMINO_TILES_IDReady) { _DOMINO_TILES_IDContent = SGetField<int>(LocalBridgeClazz, "DOMINO_TILES_ID"); _DOMINO_TILES_IDReady = true; } return _DOMINO_TILES_IDContent; } }
            private static int _DOMINO_TILES_IDContent = default;
            private static bool _DOMINO_TILES_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#DUPLOYAN_ID"/>
            /// </summary>
            public static int DUPLOYAN_ID { get { if (!_DUPLOYAN_IDReady) { _DUPLOYAN_IDContent = SGetField<int>(LocalBridgeClazz, "DUPLOYAN_ID"); _DUPLOYAN_IDReady = true; } return _DUPLOYAN_IDContent; } }
            private static int _DUPLOYAN_IDContent = default;
            private static bool _DUPLOYAN_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#EARLY_DYNASTIC_CUNEIFORM_ID"/>
            /// </summary>
            public static int EARLY_DYNASTIC_CUNEIFORM_ID { get { if (!_EARLY_DYNASTIC_CUNEIFORM_IDReady) { _EARLY_DYNASTIC_CUNEIFORM_IDContent = SGetField<int>(LocalBridgeClazz, "EARLY_DYNASTIC_CUNEIFORM_ID"); _EARLY_DYNASTIC_CUNEIFORM_IDReady = true; } return _EARLY_DYNASTIC_CUNEIFORM_IDContent; } }
            private static int _EARLY_DYNASTIC_CUNEIFORM_IDContent = default;
            private static bool _EARLY_DYNASTIC_CUNEIFORM_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#EGYPTIAN_HIEROGLYPH_FORMAT_CONTROLS_ID"/>
            /// </summary>
            public static int EGYPTIAN_HIEROGLYPH_FORMAT_CONTROLS_ID { get { if (!_EGYPTIAN_HIEROGLYPH_FORMAT_CONTROLS_IDReady) { _EGYPTIAN_HIEROGLYPH_FORMAT_CONTROLS_IDContent = SGetField<int>(LocalBridgeClazz, "EGYPTIAN_HIEROGLYPH_FORMAT_CONTROLS_ID"); _EGYPTIAN_HIEROGLYPH_FORMAT_CONTROLS_IDReady = true; } return _EGYPTIAN_HIEROGLYPH_FORMAT_CONTROLS_IDContent; } }
            private static int _EGYPTIAN_HIEROGLYPH_FORMAT_CONTROLS_IDContent = default;
            private static bool _EGYPTIAN_HIEROGLYPH_FORMAT_CONTROLS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#EGYPTIAN_HIEROGLYPHS_ID"/>
            /// </summary>
            public static int EGYPTIAN_HIEROGLYPHS_ID { get { if (!_EGYPTIAN_HIEROGLYPHS_IDReady) { _EGYPTIAN_HIEROGLYPHS_IDContent = SGetField<int>(LocalBridgeClazz, "EGYPTIAN_HIEROGLYPHS_ID"); _EGYPTIAN_HIEROGLYPHS_IDReady = true; } return _EGYPTIAN_HIEROGLYPHS_IDContent; } }
            private static int _EGYPTIAN_HIEROGLYPHS_IDContent = default;
            private static bool _EGYPTIAN_HIEROGLYPHS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ELBASAN_ID"/>
            /// </summary>
            public static int ELBASAN_ID { get { if (!_ELBASAN_IDReady) { _ELBASAN_IDContent = SGetField<int>(LocalBridgeClazz, "ELBASAN_ID"); _ELBASAN_IDReady = true; } return _ELBASAN_IDContent; } }
            private static int _ELBASAN_IDContent = default;
            private static bool _ELBASAN_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ELYMAIC_ID"/>
            /// </summary>
            public static int ELYMAIC_ID { get { if (!_ELYMAIC_IDReady) { _ELYMAIC_IDContent = SGetField<int>(LocalBridgeClazz, "ELYMAIC_ID"); _ELYMAIC_IDReady = true; } return _ELYMAIC_IDContent; } }
            private static int _ELYMAIC_IDContent = default;
            private static bool _ELYMAIC_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#EMOTICONS_ID"/>
            /// </summary>
            public static int EMOTICONS_ID { get { if (!_EMOTICONS_IDReady) { _EMOTICONS_IDContent = SGetField<int>(LocalBridgeClazz, "EMOTICONS_ID"); _EMOTICONS_IDReady = true; } return _EMOTICONS_IDContent; } }
            private static int _EMOTICONS_IDContent = default;
            private static bool _EMOTICONS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ENCLOSED_ALPHANUMERIC_SUPPLEMENT_ID"/>
            /// </summary>
            public static int ENCLOSED_ALPHANUMERIC_SUPPLEMENT_ID { get { if (!_ENCLOSED_ALPHANUMERIC_SUPPLEMENT_IDReady) { _ENCLOSED_ALPHANUMERIC_SUPPLEMENT_IDContent = SGetField<int>(LocalBridgeClazz, "ENCLOSED_ALPHANUMERIC_SUPPLEMENT_ID"); _ENCLOSED_ALPHANUMERIC_SUPPLEMENT_IDReady = true; } return _ENCLOSED_ALPHANUMERIC_SUPPLEMENT_IDContent; } }
            private static int _ENCLOSED_ALPHANUMERIC_SUPPLEMENT_IDContent = default;
            private static bool _ENCLOSED_ALPHANUMERIC_SUPPLEMENT_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ENCLOSED_ALPHANUMERICS_ID"/>
            /// </summary>
            public static int ENCLOSED_ALPHANUMERICS_ID { get { if (!_ENCLOSED_ALPHANUMERICS_IDReady) { _ENCLOSED_ALPHANUMERICS_IDContent = SGetField<int>(LocalBridgeClazz, "ENCLOSED_ALPHANUMERICS_ID"); _ENCLOSED_ALPHANUMERICS_IDReady = true; } return _ENCLOSED_ALPHANUMERICS_IDContent; } }
            private static int _ENCLOSED_ALPHANUMERICS_IDContent = default;
            private static bool _ENCLOSED_ALPHANUMERICS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ENCLOSED_CJK_LETTERS_AND_MONTHS_ID"/>
            /// </summary>
            public static int ENCLOSED_CJK_LETTERS_AND_MONTHS_ID { get { if (!_ENCLOSED_CJK_LETTERS_AND_MONTHS_IDReady) { _ENCLOSED_CJK_LETTERS_AND_MONTHS_IDContent = SGetField<int>(LocalBridgeClazz, "ENCLOSED_CJK_LETTERS_AND_MONTHS_ID"); _ENCLOSED_CJK_LETTERS_AND_MONTHS_IDReady = true; } return _ENCLOSED_CJK_LETTERS_AND_MONTHS_IDContent; } }
            private static int _ENCLOSED_CJK_LETTERS_AND_MONTHS_IDContent = default;
            private static bool _ENCLOSED_CJK_LETTERS_AND_MONTHS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ENCLOSED_IDEOGRAPHIC_SUPPLEMENT_ID"/>
            /// </summary>
            public static int ENCLOSED_IDEOGRAPHIC_SUPPLEMENT_ID { get { if (!_ENCLOSED_IDEOGRAPHIC_SUPPLEMENT_IDReady) { _ENCLOSED_IDEOGRAPHIC_SUPPLEMENT_IDContent = SGetField<int>(LocalBridgeClazz, "ENCLOSED_IDEOGRAPHIC_SUPPLEMENT_ID"); _ENCLOSED_IDEOGRAPHIC_SUPPLEMENT_IDReady = true; } return _ENCLOSED_IDEOGRAPHIC_SUPPLEMENT_IDContent; } }
            private static int _ENCLOSED_IDEOGRAPHIC_SUPPLEMENT_IDContent = default;
            private static bool _ENCLOSED_IDEOGRAPHIC_SUPPLEMENT_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ETHIOPIC_EXTENDED_A_ID"/>
            /// </summary>
            public static int ETHIOPIC_EXTENDED_A_ID { get { if (!_ETHIOPIC_EXTENDED_A_IDReady) { _ETHIOPIC_EXTENDED_A_IDContent = SGetField<int>(LocalBridgeClazz, "ETHIOPIC_EXTENDED_A_ID"); _ETHIOPIC_EXTENDED_A_IDReady = true; } return _ETHIOPIC_EXTENDED_A_IDContent; } }
            private static int _ETHIOPIC_EXTENDED_A_IDContent = default;
            private static bool _ETHIOPIC_EXTENDED_A_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ETHIOPIC_EXTENDED_B_ID"/>
            /// </summary>
            public static int ETHIOPIC_EXTENDED_B_ID { get { if (!_ETHIOPIC_EXTENDED_B_IDReady) { _ETHIOPIC_EXTENDED_B_IDContent = SGetField<int>(LocalBridgeClazz, "ETHIOPIC_EXTENDED_B_ID"); _ETHIOPIC_EXTENDED_B_IDReady = true; } return _ETHIOPIC_EXTENDED_B_IDContent; } }
            private static int _ETHIOPIC_EXTENDED_B_IDContent = default;
            private static bool _ETHIOPIC_EXTENDED_B_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ETHIOPIC_EXTENDED_ID"/>
            /// </summary>
            public static int ETHIOPIC_EXTENDED_ID { get { if (!_ETHIOPIC_EXTENDED_IDReady) { _ETHIOPIC_EXTENDED_IDContent = SGetField<int>(LocalBridgeClazz, "ETHIOPIC_EXTENDED_ID"); _ETHIOPIC_EXTENDED_IDReady = true; } return _ETHIOPIC_EXTENDED_IDContent; } }
            private static int _ETHIOPIC_EXTENDED_IDContent = default;
            private static bool _ETHIOPIC_EXTENDED_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ETHIOPIC_ID"/>
            /// </summary>
            public static int ETHIOPIC_ID { get { if (!_ETHIOPIC_IDReady) { _ETHIOPIC_IDContent = SGetField<int>(LocalBridgeClazz, "ETHIOPIC_ID"); _ETHIOPIC_IDReady = true; } return _ETHIOPIC_IDContent; } }
            private static int _ETHIOPIC_IDContent = default;
            private static bool _ETHIOPIC_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ETHIOPIC_SUPPLEMENT_ID"/>
            /// </summary>
            public static int ETHIOPIC_SUPPLEMENT_ID { get { if (!_ETHIOPIC_SUPPLEMENT_IDReady) { _ETHIOPIC_SUPPLEMENT_IDContent = SGetField<int>(LocalBridgeClazz, "ETHIOPIC_SUPPLEMENT_ID"); _ETHIOPIC_SUPPLEMENT_IDReady = true; } return _ETHIOPIC_SUPPLEMENT_IDContent; } }
            private static int _ETHIOPIC_SUPPLEMENT_IDContent = default;
            private static bool _ETHIOPIC_SUPPLEMENT_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#GENERAL_PUNCTUATION_ID"/>
            /// </summary>
            public static int GENERAL_PUNCTUATION_ID { get { if (!_GENERAL_PUNCTUATION_IDReady) { _GENERAL_PUNCTUATION_IDContent = SGetField<int>(LocalBridgeClazz, "GENERAL_PUNCTUATION_ID"); _GENERAL_PUNCTUATION_IDReady = true; } return _GENERAL_PUNCTUATION_IDContent; } }
            private static int _GENERAL_PUNCTUATION_IDContent = default;
            private static bool _GENERAL_PUNCTUATION_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#GEOMETRIC_SHAPES_EXTENDED_ID"/>
            /// </summary>
            public static int GEOMETRIC_SHAPES_EXTENDED_ID { get { if (!_GEOMETRIC_SHAPES_EXTENDED_IDReady) { _GEOMETRIC_SHAPES_EXTENDED_IDContent = SGetField<int>(LocalBridgeClazz, "GEOMETRIC_SHAPES_EXTENDED_ID"); _GEOMETRIC_SHAPES_EXTENDED_IDReady = true; } return _GEOMETRIC_SHAPES_EXTENDED_IDContent; } }
            private static int _GEOMETRIC_SHAPES_EXTENDED_IDContent = default;
            private static bool _GEOMETRIC_SHAPES_EXTENDED_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#GEOMETRIC_SHAPES_ID"/>
            /// </summary>
            public static int GEOMETRIC_SHAPES_ID { get { if (!_GEOMETRIC_SHAPES_IDReady) { _GEOMETRIC_SHAPES_IDContent = SGetField<int>(LocalBridgeClazz, "GEOMETRIC_SHAPES_ID"); _GEOMETRIC_SHAPES_IDReady = true; } return _GEOMETRIC_SHAPES_IDContent; } }
            private static int _GEOMETRIC_SHAPES_IDContent = default;
            private static bool _GEOMETRIC_SHAPES_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#GEORGIAN_EXTENDED_ID"/>
            /// </summary>
            public static int GEORGIAN_EXTENDED_ID { get { if (!_GEORGIAN_EXTENDED_IDReady) { _GEORGIAN_EXTENDED_IDContent = SGetField<int>(LocalBridgeClazz, "GEORGIAN_EXTENDED_ID"); _GEORGIAN_EXTENDED_IDReady = true; } return _GEORGIAN_EXTENDED_IDContent; } }
            private static int _GEORGIAN_EXTENDED_IDContent = default;
            private static bool _GEORGIAN_EXTENDED_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#GEORGIAN_ID"/>
            /// </summary>
            public static int GEORGIAN_ID { get { if (!_GEORGIAN_IDReady) { _GEORGIAN_IDContent = SGetField<int>(LocalBridgeClazz, "GEORGIAN_ID"); _GEORGIAN_IDReady = true; } return _GEORGIAN_IDContent; } }
            private static int _GEORGIAN_IDContent = default;
            private static bool _GEORGIAN_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#GEORGIAN_SUPPLEMENT_ID"/>
            /// </summary>
            public static int GEORGIAN_SUPPLEMENT_ID { get { if (!_GEORGIAN_SUPPLEMENT_IDReady) { _GEORGIAN_SUPPLEMENT_IDContent = SGetField<int>(LocalBridgeClazz, "GEORGIAN_SUPPLEMENT_ID"); _GEORGIAN_SUPPLEMENT_IDReady = true; } return _GEORGIAN_SUPPLEMENT_IDContent; } }
            private static int _GEORGIAN_SUPPLEMENT_IDContent = default;
            private static bool _GEORGIAN_SUPPLEMENT_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#GLAGOLITIC_ID"/>
            /// </summary>
            public static int GLAGOLITIC_ID { get { if (!_GLAGOLITIC_IDReady) { _GLAGOLITIC_IDContent = SGetField<int>(LocalBridgeClazz, "GLAGOLITIC_ID"); _GLAGOLITIC_IDReady = true; } return _GLAGOLITIC_IDContent; } }
            private static int _GLAGOLITIC_IDContent = default;
            private static bool _GLAGOLITIC_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#GLAGOLITIC_SUPPLEMENT_ID"/>
            /// </summary>
            public static int GLAGOLITIC_SUPPLEMENT_ID { get { if (!_GLAGOLITIC_SUPPLEMENT_IDReady) { _GLAGOLITIC_SUPPLEMENT_IDContent = SGetField<int>(LocalBridgeClazz, "GLAGOLITIC_SUPPLEMENT_ID"); _GLAGOLITIC_SUPPLEMENT_IDReady = true; } return _GLAGOLITIC_SUPPLEMENT_IDContent; } }
            private static int _GLAGOLITIC_SUPPLEMENT_IDContent = default;
            private static bool _GLAGOLITIC_SUPPLEMENT_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#GOTHIC_ID"/>
            /// </summary>
            public static int GOTHIC_ID { get { if (!_GOTHIC_IDReady) { _GOTHIC_IDContent = SGetField<int>(LocalBridgeClazz, "GOTHIC_ID"); _GOTHIC_IDReady = true; } return _GOTHIC_IDContent; } }
            private static int _GOTHIC_IDContent = default;
            private static bool _GOTHIC_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#GRANTHA_ID"/>
            /// </summary>
            public static int GRANTHA_ID { get { if (!_GRANTHA_IDReady) { _GRANTHA_IDContent = SGetField<int>(LocalBridgeClazz, "GRANTHA_ID"); _GRANTHA_IDReady = true; } return _GRANTHA_IDContent; } }
            private static int _GRANTHA_IDContent = default;
            private static bool _GRANTHA_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#GREEK_EXTENDED_ID"/>
            /// </summary>
            public static int GREEK_EXTENDED_ID { get { if (!_GREEK_EXTENDED_IDReady) { _GREEK_EXTENDED_IDContent = SGetField<int>(LocalBridgeClazz, "GREEK_EXTENDED_ID"); _GREEK_EXTENDED_IDReady = true; } return _GREEK_EXTENDED_IDContent; } }
            private static int _GREEK_EXTENDED_IDContent = default;
            private static bool _GREEK_EXTENDED_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#GREEK_ID"/>
            /// </summary>
            public static int GREEK_ID { get { if (!_GREEK_IDReady) { _GREEK_IDContent = SGetField<int>(LocalBridgeClazz, "GREEK_ID"); _GREEK_IDReady = true; } return _GREEK_IDContent; } }
            private static int _GREEK_IDContent = default;
            private static bool _GREEK_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#GUJARATI_ID"/>
            /// </summary>
            public static int GUJARATI_ID { get { if (!_GUJARATI_IDReady) { _GUJARATI_IDContent = SGetField<int>(LocalBridgeClazz, "GUJARATI_ID"); _GUJARATI_IDReady = true; } return _GUJARATI_IDContent; } }
            private static int _GUJARATI_IDContent = default;
            private static bool _GUJARATI_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#GUNJALA_GONDI_ID"/>
            /// </summary>
            public static int GUNJALA_GONDI_ID { get { if (!_GUNJALA_GONDI_IDReady) { _GUNJALA_GONDI_IDContent = SGetField<int>(LocalBridgeClazz, "GUNJALA_GONDI_ID"); _GUNJALA_GONDI_IDReady = true; } return _GUNJALA_GONDI_IDContent; } }
            private static int _GUNJALA_GONDI_IDContent = default;
            private static bool _GUNJALA_GONDI_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#GURMUKHI_ID"/>
            /// </summary>
            public static int GURMUKHI_ID { get { if (!_GURMUKHI_IDReady) { _GURMUKHI_IDContent = SGetField<int>(LocalBridgeClazz, "GURMUKHI_ID"); _GURMUKHI_IDReady = true; } return _GURMUKHI_IDContent; } }
            private static int _GURMUKHI_IDContent = default;
            private static bool _GURMUKHI_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#HALFWIDTH_AND_FULLWIDTH_FORMS_ID"/>
            /// </summary>
            public static int HALFWIDTH_AND_FULLWIDTH_FORMS_ID { get { if (!_HALFWIDTH_AND_FULLWIDTH_FORMS_IDReady) { _HALFWIDTH_AND_FULLWIDTH_FORMS_IDContent = SGetField<int>(LocalBridgeClazz, "HALFWIDTH_AND_FULLWIDTH_FORMS_ID"); _HALFWIDTH_AND_FULLWIDTH_FORMS_IDReady = true; } return _HALFWIDTH_AND_FULLWIDTH_FORMS_IDContent; } }
            private static int _HALFWIDTH_AND_FULLWIDTH_FORMS_IDContent = default;
            private static bool _HALFWIDTH_AND_FULLWIDTH_FORMS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#HANGUL_COMPATIBILITY_JAMO_ID"/>
            /// </summary>
            public static int HANGUL_COMPATIBILITY_JAMO_ID { get { if (!_HANGUL_COMPATIBILITY_JAMO_IDReady) { _HANGUL_COMPATIBILITY_JAMO_IDContent = SGetField<int>(LocalBridgeClazz, "HANGUL_COMPATIBILITY_JAMO_ID"); _HANGUL_COMPATIBILITY_JAMO_IDReady = true; } return _HANGUL_COMPATIBILITY_JAMO_IDContent; } }
            private static int _HANGUL_COMPATIBILITY_JAMO_IDContent = default;
            private static bool _HANGUL_COMPATIBILITY_JAMO_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#HANGUL_JAMO_EXTENDED_A_ID"/>
            /// </summary>
            public static int HANGUL_JAMO_EXTENDED_A_ID { get { if (!_HANGUL_JAMO_EXTENDED_A_IDReady) { _HANGUL_JAMO_EXTENDED_A_IDContent = SGetField<int>(LocalBridgeClazz, "HANGUL_JAMO_EXTENDED_A_ID"); _HANGUL_JAMO_EXTENDED_A_IDReady = true; } return _HANGUL_JAMO_EXTENDED_A_IDContent; } }
            private static int _HANGUL_JAMO_EXTENDED_A_IDContent = default;
            private static bool _HANGUL_JAMO_EXTENDED_A_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#HANGUL_JAMO_EXTENDED_B_ID"/>
            /// </summary>
            public static int HANGUL_JAMO_EXTENDED_B_ID { get { if (!_HANGUL_JAMO_EXTENDED_B_IDReady) { _HANGUL_JAMO_EXTENDED_B_IDContent = SGetField<int>(LocalBridgeClazz, "HANGUL_JAMO_EXTENDED_B_ID"); _HANGUL_JAMO_EXTENDED_B_IDReady = true; } return _HANGUL_JAMO_EXTENDED_B_IDContent; } }
            private static int _HANGUL_JAMO_EXTENDED_B_IDContent = default;
            private static bool _HANGUL_JAMO_EXTENDED_B_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#HANGUL_JAMO_ID"/>
            /// </summary>
            public static int HANGUL_JAMO_ID { get { if (!_HANGUL_JAMO_IDReady) { _HANGUL_JAMO_IDContent = SGetField<int>(LocalBridgeClazz, "HANGUL_JAMO_ID"); _HANGUL_JAMO_IDReady = true; } return _HANGUL_JAMO_IDContent; } }
            private static int _HANGUL_JAMO_IDContent = default;
            private static bool _HANGUL_JAMO_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#HANGUL_SYLLABLES_ID"/>
            /// </summary>
            public static int HANGUL_SYLLABLES_ID { get { if (!_HANGUL_SYLLABLES_IDReady) { _HANGUL_SYLLABLES_IDContent = SGetField<int>(LocalBridgeClazz, "HANGUL_SYLLABLES_ID"); _HANGUL_SYLLABLES_IDReady = true; } return _HANGUL_SYLLABLES_IDContent; } }
            private static int _HANGUL_SYLLABLES_IDContent = default;
            private static bool _HANGUL_SYLLABLES_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#HANIFI_ROHINGYA_ID"/>
            /// </summary>
            public static int HANIFI_ROHINGYA_ID { get { if (!_HANIFI_ROHINGYA_IDReady) { _HANIFI_ROHINGYA_IDContent = SGetField<int>(LocalBridgeClazz, "HANIFI_ROHINGYA_ID"); _HANIFI_ROHINGYA_IDReady = true; } return _HANIFI_ROHINGYA_IDContent; } }
            private static int _HANIFI_ROHINGYA_IDContent = default;
            private static bool _HANIFI_ROHINGYA_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#HANUNOO_ID"/>
            /// </summary>
            public static int HANUNOO_ID { get { if (!_HANUNOO_IDReady) { _HANUNOO_IDContent = SGetField<int>(LocalBridgeClazz, "HANUNOO_ID"); _HANUNOO_IDReady = true; } return _HANUNOO_IDContent; } }
            private static int _HANUNOO_IDContent = default;
            private static bool _HANUNOO_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#HATRAN_ID"/>
            /// </summary>
            public static int HATRAN_ID { get { if (!_HATRAN_IDReady) { _HATRAN_IDContent = SGetField<int>(LocalBridgeClazz, "HATRAN_ID"); _HATRAN_IDReady = true; } return _HATRAN_IDContent; } }
            private static int _HATRAN_IDContent = default;
            private static bool _HATRAN_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#HEBREW_ID"/>
            /// </summary>
            public static int HEBREW_ID { get { if (!_HEBREW_IDReady) { _HEBREW_IDContent = SGetField<int>(LocalBridgeClazz, "HEBREW_ID"); _HEBREW_IDReady = true; } return _HEBREW_IDContent; } }
            private static int _HEBREW_IDContent = default;
            private static bool _HEBREW_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#HIGH_PRIVATE_USE_SURROGATES_ID"/>
            /// </summary>
            public static int HIGH_PRIVATE_USE_SURROGATES_ID { get { if (!_HIGH_PRIVATE_USE_SURROGATES_IDReady) { _HIGH_PRIVATE_USE_SURROGATES_IDContent = SGetField<int>(LocalBridgeClazz, "HIGH_PRIVATE_USE_SURROGATES_ID"); _HIGH_PRIVATE_USE_SURROGATES_IDReady = true; } return _HIGH_PRIVATE_USE_SURROGATES_IDContent; } }
            private static int _HIGH_PRIVATE_USE_SURROGATES_IDContent = default;
            private static bool _HIGH_PRIVATE_USE_SURROGATES_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#HIGH_SURROGATES_ID"/>
            /// </summary>
            public static int HIGH_SURROGATES_ID { get { if (!_HIGH_SURROGATES_IDReady) { _HIGH_SURROGATES_IDContent = SGetField<int>(LocalBridgeClazz, "HIGH_SURROGATES_ID"); _HIGH_SURROGATES_IDReady = true; } return _HIGH_SURROGATES_IDContent; } }
            private static int _HIGH_SURROGATES_IDContent = default;
            private static bool _HIGH_SURROGATES_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#HIRAGANA_ID"/>
            /// </summary>
            public static int HIRAGANA_ID { get { if (!_HIRAGANA_IDReady) { _HIRAGANA_IDContent = SGetField<int>(LocalBridgeClazz, "HIRAGANA_ID"); _HIRAGANA_IDReady = true; } return _HIRAGANA_IDContent; } }
            private static int _HIRAGANA_IDContent = default;
            private static bool _HIRAGANA_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#IDEOGRAPHIC_DESCRIPTION_CHARACTERS_ID"/>
            /// </summary>
            public static int IDEOGRAPHIC_DESCRIPTION_CHARACTERS_ID { get { if (!_IDEOGRAPHIC_DESCRIPTION_CHARACTERS_IDReady) { _IDEOGRAPHIC_DESCRIPTION_CHARACTERS_IDContent = SGetField<int>(LocalBridgeClazz, "IDEOGRAPHIC_DESCRIPTION_CHARACTERS_ID"); _IDEOGRAPHIC_DESCRIPTION_CHARACTERS_IDReady = true; } return _IDEOGRAPHIC_DESCRIPTION_CHARACTERS_IDContent; } }
            private static int _IDEOGRAPHIC_DESCRIPTION_CHARACTERS_IDContent = default;
            private static bool _IDEOGRAPHIC_DESCRIPTION_CHARACTERS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#IDEOGRAPHIC_SYMBOLS_AND_PUNCTUATION_ID"/>
            /// </summary>
            public static int IDEOGRAPHIC_SYMBOLS_AND_PUNCTUATION_ID { get { if (!_IDEOGRAPHIC_SYMBOLS_AND_PUNCTUATION_IDReady) { _IDEOGRAPHIC_SYMBOLS_AND_PUNCTUATION_IDContent = SGetField<int>(LocalBridgeClazz, "IDEOGRAPHIC_SYMBOLS_AND_PUNCTUATION_ID"); _IDEOGRAPHIC_SYMBOLS_AND_PUNCTUATION_IDReady = true; } return _IDEOGRAPHIC_SYMBOLS_AND_PUNCTUATION_IDContent; } }
            private static int _IDEOGRAPHIC_SYMBOLS_AND_PUNCTUATION_IDContent = default;
            private static bool _IDEOGRAPHIC_SYMBOLS_AND_PUNCTUATION_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#IMPERIAL_ARAMAIC_ID"/>
            /// </summary>
            public static int IMPERIAL_ARAMAIC_ID { get { if (!_IMPERIAL_ARAMAIC_IDReady) { _IMPERIAL_ARAMAIC_IDContent = SGetField<int>(LocalBridgeClazz, "IMPERIAL_ARAMAIC_ID"); _IMPERIAL_ARAMAIC_IDReady = true; } return _IMPERIAL_ARAMAIC_IDContent; } }
            private static int _IMPERIAL_ARAMAIC_IDContent = default;
            private static bool _IMPERIAL_ARAMAIC_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#INDIC_SIYAQ_NUMBERS_ID"/>
            /// </summary>
            public static int INDIC_SIYAQ_NUMBERS_ID { get { if (!_INDIC_SIYAQ_NUMBERS_IDReady) { _INDIC_SIYAQ_NUMBERS_IDContent = SGetField<int>(LocalBridgeClazz, "INDIC_SIYAQ_NUMBERS_ID"); _INDIC_SIYAQ_NUMBERS_IDReady = true; } return _INDIC_SIYAQ_NUMBERS_IDContent; } }
            private static int _INDIC_SIYAQ_NUMBERS_IDContent = default;
            private static bool _INDIC_SIYAQ_NUMBERS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#INSCRIPTIONAL_PAHLAVI_ID"/>
            /// </summary>
            public static int INSCRIPTIONAL_PAHLAVI_ID { get { if (!_INSCRIPTIONAL_PAHLAVI_IDReady) { _INSCRIPTIONAL_PAHLAVI_IDContent = SGetField<int>(LocalBridgeClazz, "INSCRIPTIONAL_PAHLAVI_ID"); _INSCRIPTIONAL_PAHLAVI_IDReady = true; } return _INSCRIPTIONAL_PAHLAVI_IDContent; } }
            private static int _INSCRIPTIONAL_PAHLAVI_IDContent = default;
            private static bool _INSCRIPTIONAL_PAHLAVI_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#INSCRIPTIONAL_PARTHIAN_ID"/>
            /// </summary>
            public static int INSCRIPTIONAL_PARTHIAN_ID { get { if (!_INSCRIPTIONAL_PARTHIAN_IDReady) { _INSCRIPTIONAL_PARTHIAN_IDContent = SGetField<int>(LocalBridgeClazz, "INSCRIPTIONAL_PARTHIAN_ID"); _INSCRIPTIONAL_PARTHIAN_IDReady = true; } return _INSCRIPTIONAL_PARTHIAN_IDContent; } }
            private static int _INSCRIPTIONAL_PARTHIAN_IDContent = default;
            private static bool _INSCRIPTIONAL_PARTHIAN_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#INVALID_CODE_ID"/>
            /// </summary>
            public static int INVALID_CODE_ID { get { if (!_INVALID_CODE_IDReady) { _INVALID_CODE_IDContent = SGetField<int>(LocalBridgeClazz, "INVALID_CODE_ID"); _INVALID_CODE_IDReady = true; } return _INVALID_CODE_IDContent; } }
            private static int _INVALID_CODE_IDContent = default;
            private static bool _INVALID_CODE_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#IPA_EXTENSIONS_ID"/>
            /// </summary>
            public static int IPA_EXTENSIONS_ID { get { if (!_IPA_EXTENSIONS_IDReady) { _IPA_EXTENSIONS_IDContent = SGetField<int>(LocalBridgeClazz, "IPA_EXTENSIONS_ID"); _IPA_EXTENSIONS_IDReady = true; } return _IPA_EXTENSIONS_IDContent; } }
            private static int _IPA_EXTENSIONS_IDContent = default;
            private static bool _IPA_EXTENSIONS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#JAVANESE_ID"/>
            /// </summary>
            public static int JAVANESE_ID { get { if (!_JAVANESE_IDReady) { _JAVANESE_IDContent = SGetField<int>(LocalBridgeClazz, "JAVANESE_ID"); _JAVANESE_IDReady = true; } return _JAVANESE_IDContent; } }
            private static int _JAVANESE_IDContent = default;
            private static bool _JAVANESE_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#KAITHI_ID"/>
            /// </summary>
            public static int KAITHI_ID { get { if (!_KAITHI_IDReady) { _KAITHI_IDContent = SGetField<int>(LocalBridgeClazz, "KAITHI_ID"); _KAITHI_IDReady = true; } return _KAITHI_IDContent; } }
            private static int _KAITHI_IDContent = default;
            private static bool _KAITHI_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#KAKTOVIK_NUMERALS_ID"/>
            /// </summary>
            public static int KAKTOVIK_NUMERALS_ID { get { if (!_KAKTOVIK_NUMERALS_IDReady) { _KAKTOVIK_NUMERALS_IDContent = SGetField<int>(LocalBridgeClazz, "KAKTOVIK_NUMERALS_ID"); _KAKTOVIK_NUMERALS_IDReady = true; } return _KAKTOVIK_NUMERALS_IDContent; } }
            private static int _KAKTOVIK_NUMERALS_IDContent = default;
            private static bool _KAKTOVIK_NUMERALS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#KANA_EXTENDED_A_ID"/>
            /// </summary>
            public static int KANA_EXTENDED_A_ID { get { if (!_KANA_EXTENDED_A_IDReady) { _KANA_EXTENDED_A_IDContent = SGetField<int>(LocalBridgeClazz, "KANA_EXTENDED_A_ID"); _KANA_EXTENDED_A_IDReady = true; } return _KANA_EXTENDED_A_IDContent; } }
            private static int _KANA_EXTENDED_A_IDContent = default;
            private static bool _KANA_EXTENDED_A_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#KANA_EXTENDED_B_ID"/>
            /// </summary>
            public static int KANA_EXTENDED_B_ID { get { if (!_KANA_EXTENDED_B_IDReady) { _KANA_EXTENDED_B_IDContent = SGetField<int>(LocalBridgeClazz, "KANA_EXTENDED_B_ID"); _KANA_EXTENDED_B_IDReady = true; } return _KANA_EXTENDED_B_IDContent; } }
            private static int _KANA_EXTENDED_B_IDContent = default;
            private static bool _KANA_EXTENDED_B_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#KANA_SUPPLEMENT_ID"/>
            /// </summary>
            public static int KANA_SUPPLEMENT_ID { get { if (!_KANA_SUPPLEMENT_IDReady) { _KANA_SUPPLEMENT_IDContent = SGetField<int>(LocalBridgeClazz, "KANA_SUPPLEMENT_ID"); _KANA_SUPPLEMENT_IDReady = true; } return _KANA_SUPPLEMENT_IDContent; } }
            private static int _KANA_SUPPLEMENT_IDContent = default;
            private static bool _KANA_SUPPLEMENT_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#KANBUN_ID"/>
            /// </summary>
            public static int KANBUN_ID { get { if (!_KANBUN_IDReady) { _KANBUN_IDContent = SGetField<int>(LocalBridgeClazz, "KANBUN_ID"); _KANBUN_IDReady = true; } return _KANBUN_IDContent; } }
            private static int _KANBUN_IDContent = default;
            private static bool _KANBUN_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#KANGXI_RADICALS_ID"/>
            /// </summary>
            public static int KANGXI_RADICALS_ID { get { if (!_KANGXI_RADICALS_IDReady) { _KANGXI_RADICALS_IDContent = SGetField<int>(LocalBridgeClazz, "KANGXI_RADICALS_ID"); _KANGXI_RADICALS_IDReady = true; } return _KANGXI_RADICALS_IDContent; } }
            private static int _KANGXI_RADICALS_IDContent = default;
            private static bool _KANGXI_RADICALS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#KANNADA_ID"/>
            /// </summary>
            public static int KANNADA_ID { get { if (!_KANNADA_IDReady) { _KANNADA_IDContent = SGetField<int>(LocalBridgeClazz, "KANNADA_ID"); _KANNADA_IDReady = true; } return _KANNADA_IDContent; } }
            private static int _KANNADA_IDContent = default;
            private static bool _KANNADA_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#KATAKANA_ID"/>
            /// </summary>
            public static int KATAKANA_ID { get { if (!_KATAKANA_IDReady) { _KATAKANA_IDContent = SGetField<int>(LocalBridgeClazz, "KATAKANA_ID"); _KATAKANA_IDReady = true; } return _KATAKANA_IDContent; } }
            private static int _KATAKANA_IDContent = default;
            private static bool _KATAKANA_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#KATAKANA_PHONETIC_EXTENSIONS_ID"/>
            /// </summary>
            public static int KATAKANA_PHONETIC_EXTENSIONS_ID { get { if (!_KATAKANA_PHONETIC_EXTENSIONS_IDReady) { _KATAKANA_PHONETIC_EXTENSIONS_IDContent = SGetField<int>(LocalBridgeClazz, "KATAKANA_PHONETIC_EXTENSIONS_ID"); _KATAKANA_PHONETIC_EXTENSIONS_IDReady = true; } return _KATAKANA_PHONETIC_EXTENSIONS_IDContent; } }
            private static int _KATAKANA_PHONETIC_EXTENSIONS_IDContent = default;
            private static bool _KATAKANA_PHONETIC_EXTENSIONS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#KAWI_ID"/>
            /// </summary>
            public static int KAWI_ID { get { if (!_KAWI_IDReady) { _KAWI_IDContent = SGetField<int>(LocalBridgeClazz, "KAWI_ID"); _KAWI_IDReady = true; } return _KAWI_IDContent; } }
            private static int _KAWI_IDContent = default;
            private static bool _KAWI_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#KAYAH_LI_ID"/>
            /// </summary>
            public static int KAYAH_LI_ID { get { if (!_KAYAH_LI_IDReady) { _KAYAH_LI_IDContent = SGetField<int>(LocalBridgeClazz, "KAYAH_LI_ID"); _KAYAH_LI_IDReady = true; } return _KAYAH_LI_IDContent; } }
            private static int _KAYAH_LI_IDContent = default;
            private static bool _KAYAH_LI_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#KHAROSHTHI_ID"/>
            /// </summary>
            public static int KHAROSHTHI_ID { get { if (!_KHAROSHTHI_IDReady) { _KHAROSHTHI_IDContent = SGetField<int>(LocalBridgeClazz, "KHAROSHTHI_ID"); _KHAROSHTHI_IDReady = true; } return _KHAROSHTHI_IDContent; } }
            private static int _KHAROSHTHI_IDContent = default;
            private static bool _KHAROSHTHI_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#KHITAN_SMALL_SCRIPT_ID"/>
            /// </summary>
            public static int KHITAN_SMALL_SCRIPT_ID { get { if (!_KHITAN_SMALL_SCRIPT_IDReady) { _KHITAN_SMALL_SCRIPT_IDContent = SGetField<int>(LocalBridgeClazz, "KHITAN_SMALL_SCRIPT_ID"); _KHITAN_SMALL_SCRIPT_IDReady = true; } return _KHITAN_SMALL_SCRIPT_IDContent; } }
            private static int _KHITAN_SMALL_SCRIPT_IDContent = default;
            private static bool _KHITAN_SMALL_SCRIPT_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#KHMER_ID"/>
            /// </summary>
            public static int KHMER_ID { get { if (!_KHMER_IDReady) { _KHMER_IDContent = SGetField<int>(LocalBridgeClazz, "KHMER_ID"); _KHMER_IDReady = true; } return _KHMER_IDContent; } }
            private static int _KHMER_IDContent = default;
            private static bool _KHMER_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#KHMER_SYMBOLS_ID"/>
            /// </summary>
            public static int KHMER_SYMBOLS_ID { get { if (!_KHMER_SYMBOLS_IDReady) { _KHMER_SYMBOLS_IDContent = SGetField<int>(LocalBridgeClazz, "KHMER_SYMBOLS_ID"); _KHMER_SYMBOLS_IDReady = true; } return _KHMER_SYMBOLS_IDContent; } }
            private static int _KHMER_SYMBOLS_IDContent = default;
            private static bool _KHMER_SYMBOLS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#KHOJKI_ID"/>
            /// </summary>
            public static int KHOJKI_ID { get { if (!_KHOJKI_IDReady) { _KHOJKI_IDContent = SGetField<int>(LocalBridgeClazz, "KHOJKI_ID"); _KHOJKI_IDReady = true; } return _KHOJKI_IDContent; } }
            private static int _KHOJKI_IDContent = default;
            private static bool _KHOJKI_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#KHUDAWADI_ID"/>
            /// </summary>
            public static int KHUDAWADI_ID { get { if (!_KHUDAWADI_IDReady) { _KHUDAWADI_IDContent = SGetField<int>(LocalBridgeClazz, "KHUDAWADI_ID"); _KHUDAWADI_IDReady = true; } return _KHUDAWADI_IDContent; } }
            private static int _KHUDAWADI_IDContent = default;
            private static bool _KHUDAWADI_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#LAO_ID"/>
            /// </summary>
            public static int LAO_ID { get { if (!_LAO_IDReady) { _LAO_IDContent = SGetField<int>(LocalBridgeClazz, "LAO_ID"); _LAO_IDReady = true; } return _LAO_IDContent; } }
            private static int _LAO_IDContent = default;
            private static bool _LAO_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#LATIN_1_SUPPLEMENT_ID"/>
            /// </summary>
            public static int LATIN_1_SUPPLEMENT_ID { get { if (!_LATIN_1_SUPPLEMENT_IDReady) { _LATIN_1_SUPPLEMENT_IDContent = SGetField<int>(LocalBridgeClazz, "LATIN_1_SUPPLEMENT_ID"); _LATIN_1_SUPPLEMENT_IDReady = true; } return _LATIN_1_SUPPLEMENT_IDContent; } }
            private static int _LATIN_1_SUPPLEMENT_IDContent = default;
            private static bool _LATIN_1_SUPPLEMENT_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#LATIN_EXTENDED_A_ID"/>
            /// </summary>
            public static int LATIN_EXTENDED_A_ID { get { if (!_LATIN_EXTENDED_A_IDReady) { _LATIN_EXTENDED_A_IDContent = SGetField<int>(LocalBridgeClazz, "LATIN_EXTENDED_A_ID"); _LATIN_EXTENDED_A_IDReady = true; } return _LATIN_EXTENDED_A_IDContent; } }
            private static int _LATIN_EXTENDED_A_IDContent = default;
            private static bool _LATIN_EXTENDED_A_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#LATIN_EXTENDED_ADDITIONAL_ID"/>
            /// </summary>
            public static int LATIN_EXTENDED_ADDITIONAL_ID { get { if (!_LATIN_EXTENDED_ADDITIONAL_IDReady) { _LATIN_EXTENDED_ADDITIONAL_IDContent = SGetField<int>(LocalBridgeClazz, "LATIN_EXTENDED_ADDITIONAL_ID"); _LATIN_EXTENDED_ADDITIONAL_IDReady = true; } return _LATIN_EXTENDED_ADDITIONAL_IDContent; } }
            private static int _LATIN_EXTENDED_ADDITIONAL_IDContent = default;
            private static bool _LATIN_EXTENDED_ADDITIONAL_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#LATIN_EXTENDED_B_ID"/>
            /// </summary>
            public static int LATIN_EXTENDED_B_ID { get { if (!_LATIN_EXTENDED_B_IDReady) { _LATIN_EXTENDED_B_IDContent = SGetField<int>(LocalBridgeClazz, "LATIN_EXTENDED_B_ID"); _LATIN_EXTENDED_B_IDReady = true; } return _LATIN_EXTENDED_B_IDContent; } }
            private static int _LATIN_EXTENDED_B_IDContent = default;
            private static bool _LATIN_EXTENDED_B_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#LATIN_EXTENDED_C_ID"/>
            /// </summary>
            public static int LATIN_EXTENDED_C_ID { get { if (!_LATIN_EXTENDED_C_IDReady) { _LATIN_EXTENDED_C_IDContent = SGetField<int>(LocalBridgeClazz, "LATIN_EXTENDED_C_ID"); _LATIN_EXTENDED_C_IDReady = true; } return _LATIN_EXTENDED_C_IDContent; } }
            private static int _LATIN_EXTENDED_C_IDContent = default;
            private static bool _LATIN_EXTENDED_C_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#LATIN_EXTENDED_D_ID"/>
            /// </summary>
            public static int LATIN_EXTENDED_D_ID { get { if (!_LATIN_EXTENDED_D_IDReady) { _LATIN_EXTENDED_D_IDContent = SGetField<int>(LocalBridgeClazz, "LATIN_EXTENDED_D_ID"); _LATIN_EXTENDED_D_IDReady = true; } return _LATIN_EXTENDED_D_IDContent; } }
            private static int _LATIN_EXTENDED_D_IDContent = default;
            private static bool _LATIN_EXTENDED_D_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#LATIN_EXTENDED_E_ID"/>
            /// </summary>
            public static int LATIN_EXTENDED_E_ID { get { if (!_LATIN_EXTENDED_E_IDReady) { _LATIN_EXTENDED_E_IDContent = SGetField<int>(LocalBridgeClazz, "LATIN_EXTENDED_E_ID"); _LATIN_EXTENDED_E_IDReady = true; } return _LATIN_EXTENDED_E_IDContent; } }
            private static int _LATIN_EXTENDED_E_IDContent = default;
            private static bool _LATIN_EXTENDED_E_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#LATIN_EXTENDED_F_ID"/>
            /// </summary>
            public static int LATIN_EXTENDED_F_ID { get { if (!_LATIN_EXTENDED_F_IDReady) { _LATIN_EXTENDED_F_IDContent = SGetField<int>(LocalBridgeClazz, "LATIN_EXTENDED_F_ID"); _LATIN_EXTENDED_F_IDReady = true; } return _LATIN_EXTENDED_F_IDContent; } }
            private static int _LATIN_EXTENDED_F_IDContent = default;
            private static bool _LATIN_EXTENDED_F_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#LATIN_EXTENDED_G_ID"/>
            /// </summary>
            public static int LATIN_EXTENDED_G_ID { get { if (!_LATIN_EXTENDED_G_IDReady) { _LATIN_EXTENDED_G_IDContent = SGetField<int>(LocalBridgeClazz, "LATIN_EXTENDED_G_ID"); _LATIN_EXTENDED_G_IDReady = true; } return _LATIN_EXTENDED_G_IDContent; } }
            private static int _LATIN_EXTENDED_G_IDContent = default;
            private static bool _LATIN_EXTENDED_G_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#LEPCHA_ID"/>
            /// </summary>
            public static int LEPCHA_ID { get { if (!_LEPCHA_IDReady) { _LEPCHA_IDContent = SGetField<int>(LocalBridgeClazz, "LEPCHA_ID"); _LEPCHA_IDReady = true; } return _LEPCHA_IDContent; } }
            private static int _LEPCHA_IDContent = default;
            private static bool _LEPCHA_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#LETTERLIKE_SYMBOLS_ID"/>
            /// </summary>
            public static int LETTERLIKE_SYMBOLS_ID { get { if (!_LETTERLIKE_SYMBOLS_IDReady) { _LETTERLIKE_SYMBOLS_IDContent = SGetField<int>(LocalBridgeClazz, "LETTERLIKE_SYMBOLS_ID"); _LETTERLIKE_SYMBOLS_IDReady = true; } return _LETTERLIKE_SYMBOLS_IDContent; } }
            private static int _LETTERLIKE_SYMBOLS_IDContent = default;
            private static bool _LETTERLIKE_SYMBOLS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#LIMBU_ID"/>
            /// </summary>
            public static int LIMBU_ID { get { if (!_LIMBU_IDReady) { _LIMBU_IDContent = SGetField<int>(LocalBridgeClazz, "LIMBU_ID"); _LIMBU_IDReady = true; } return _LIMBU_IDContent; } }
            private static int _LIMBU_IDContent = default;
            private static bool _LIMBU_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#LINEAR_A_ID"/>
            /// </summary>
            public static int LINEAR_A_ID { get { if (!_LINEAR_A_IDReady) { _LINEAR_A_IDContent = SGetField<int>(LocalBridgeClazz, "LINEAR_A_ID"); _LINEAR_A_IDReady = true; } return _LINEAR_A_IDContent; } }
            private static int _LINEAR_A_IDContent = default;
            private static bool _LINEAR_A_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#LINEAR_B_IDEOGRAMS_ID"/>
            /// </summary>
            public static int LINEAR_B_IDEOGRAMS_ID { get { if (!_LINEAR_B_IDEOGRAMS_IDReady) { _LINEAR_B_IDEOGRAMS_IDContent = SGetField<int>(LocalBridgeClazz, "LINEAR_B_IDEOGRAMS_ID"); _LINEAR_B_IDEOGRAMS_IDReady = true; } return _LINEAR_B_IDEOGRAMS_IDContent; } }
            private static int _LINEAR_B_IDEOGRAMS_IDContent = default;
            private static bool _LINEAR_B_IDEOGRAMS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#LINEAR_B_SYLLABARY_ID"/>
            /// </summary>
            public static int LINEAR_B_SYLLABARY_ID { get { if (!_LINEAR_B_SYLLABARY_IDReady) { _LINEAR_B_SYLLABARY_IDContent = SGetField<int>(LocalBridgeClazz, "LINEAR_B_SYLLABARY_ID"); _LINEAR_B_SYLLABARY_IDReady = true; } return _LINEAR_B_SYLLABARY_IDContent; } }
            private static int _LINEAR_B_SYLLABARY_IDContent = default;
            private static bool _LINEAR_B_SYLLABARY_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#LISU_ID"/>
            /// </summary>
            public static int LISU_ID { get { if (!_LISU_IDReady) { _LISU_IDContent = SGetField<int>(LocalBridgeClazz, "LISU_ID"); _LISU_IDReady = true; } return _LISU_IDContent; } }
            private static int _LISU_IDContent = default;
            private static bool _LISU_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#LISU_SUPPLEMENT_ID"/>
            /// </summary>
            public static int LISU_SUPPLEMENT_ID { get { if (!_LISU_SUPPLEMENT_IDReady) { _LISU_SUPPLEMENT_IDContent = SGetField<int>(LocalBridgeClazz, "LISU_SUPPLEMENT_ID"); _LISU_SUPPLEMENT_IDReady = true; } return _LISU_SUPPLEMENT_IDContent; } }
            private static int _LISU_SUPPLEMENT_IDContent = default;
            private static bool _LISU_SUPPLEMENT_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#LOW_SURROGATES_ID"/>
            /// </summary>
            public static int LOW_SURROGATES_ID { get { if (!_LOW_SURROGATES_IDReady) { _LOW_SURROGATES_IDContent = SGetField<int>(LocalBridgeClazz, "LOW_SURROGATES_ID"); _LOW_SURROGATES_IDReady = true; } return _LOW_SURROGATES_IDContent; } }
            private static int _LOW_SURROGATES_IDContent = default;
            private static bool _LOW_SURROGATES_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#LYCIAN_ID"/>
            /// </summary>
            public static int LYCIAN_ID { get { if (!_LYCIAN_IDReady) { _LYCIAN_IDContent = SGetField<int>(LocalBridgeClazz, "LYCIAN_ID"); _LYCIAN_IDReady = true; } return _LYCIAN_IDContent; } }
            private static int _LYCIAN_IDContent = default;
            private static bool _LYCIAN_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#LYDIAN_ID"/>
            /// </summary>
            public static int LYDIAN_ID { get { if (!_LYDIAN_IDReady) { _LYDIAN_IDContent = SGetField<int>(LocalBridgeClazz, "LYDIAN_ID"); _LYDIAN_IDReady = true; } return _LYDIAN_IDContent; } }
            private static int _LYDIAN_IDContent = default;
            private static bool _LYDIAN_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MAHAJANI_ID"/>
            /// </summary>
            public static int MAHAJANI_ID { get { if (!_MAHAJANI_IDReady) { _MAHAJANI_IDContent = SGetField<int>(LocalBridgeClazz, "MAHAJANI_ID"); _MAHAJANI_IDReady = true; } return _MAHAJANI_IDContent; } }
            private static int _MAHAJANI_IDContent = default;
            private static bool _MAHAJANI_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MAHJONG_TILES_ID"/>
            /// </summary>
            public static int MAHJONG_TILES_ID { get { if (!_MAHJONG_TILES_IDReady) { _MAHJONG_TILES_IDContent = SGetField<int>(LocalBridgeClazz, "MAHJONG_TILES_ID"); _MAHJONG_TILES_IDReady = true; } return _MAHJONG_TILES_IDContent; } }
            private static int _MAHJONG_TILES_IDContent = default;
            private static bool _MAHJONG_TILES_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MAKASAR_ID"/>
            /// </summary>
            public static int MAKASAR_ID { get { if (!_MAKASAR_IDReady) { _MAKASAR_IDContent = SGetField<int>(LocalBridgeClazz, "MAKASAR_ID"); _MAKASAR_IDReady = true; } return _MAKASAR_IDContent; } }
            private static int _MAKASAR_IDContent = default;
            private static bool _MAKASAR_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MALAYALAM_ID"/>
            /// </summary>
            public static int MALAYALAM_ID { get { if (!_MALAYALAM_IDReady) { _MALAYALAM_IDContent = SGetField<int>(LocalBridgeClazz, "MALAYALAM_ID"); _MALAYALAM_IDReady = true; } return _MALAYALAM_IDContent; } }
            private static int _MALAYALAM_IDContent = default;
            private static bool _MALAYALAM_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MANDAIC_ID"/>
            /// </summary>
            public static int MANDAIC_ID { get { if (!_MANDAIC_IDReady) { _MANDAIC_IDContent = SGetField<int>(LocalBridgeClazz, "MANDAIC_ID"); _MANDAIC_IDReady = true; } return _MANDAIC_IDContent; } }
            private static int _MANDAIC_IDContent = default;
            private static bool _MANDAIC_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MANICHAEAN_ID"/>
            /// </summary>
            public static int MANICHAEAN_ID { get { if (!_MANICHAEAN_IDReady) { _MANICHAEAN_IDContent = SGetField<int>(LocalBridgeClazz, "MANICHAEAN_ID"); _MANICHAEAN_IDReady = true; } return _MANICHAEAN_IDContent; } }
            private static int _MANICHAEAN_IDContent = default;
            private static bool _MANICHAEAN_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MARCHEN_ID"/>
            /// </summary>
            public static int MARCHEN_ID { get { if (!_MARCHEN_IDReady) { _MARCHEN_IDContent = SGetField<int>(LocalBridgeClazz, "MARCHEN_ID"); _MARCHEN_IDReady = true; } return _MARCHEN_IDContent; } }
            private static int _MARCHEN_IDContent = default;
            private static bool _MARCHEN_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MASARAM_GONDI_ID"/>
            /// </summary>
            public static int MASARAM_GONDI_ID { get { if (!_MASARAM_GONDI_IDReady) { _MASARAM_GONDI_IDContent = SGetField<int>(LocalBridgeClazz, "MASARAM_GONDI_ID"); _MASARAM_GONDI_IDReady = true; } return _MASARAM_GONDI_IDContent; } }
            private static int _MASARAM_GONDI_IDContent = default;
            private static bool _MASARAM_GONDI_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MATHEMATICAL_ALPHANUMERIC_SYMBOLS_ID"/>
            /// </summary>
            public static int MATHEMATICAL_ALPHANUMERIC_SYMBOLS_ID { get { if (!_MATHEMATICAL_ALPHANUMERIC_SYMBOLS_IDReady) { _MATHEMATICAL_ALPHANUMERIC_SYMBOLS_IDContent = SGetField<int>(LocalBridgeClazz, "MATHEMATICAL_ALPHANUMERIC_SYMBOLS_ID"); _MATHEMATICAL_ALPHANUMERIC_SYMBOLS_IDReady = true; } return _MATHEMATICAL_ALPHANUMERIC_SYMBOLS_IDContent; } }
            private static int _MATHEMATICAL_ALPHANUMERIC_SYMBOLS_IDContent = default;
            private static bool _MATHEMATICAL_ALPHANUMERIC_SYMBOLS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MATHEMATICAL_OPERATORS_ID"/>
            /// </summary>
            public static int MATHEMATICAL_OPERATORS_ID { get { if (!_MATHEMATICAL_OPERATORS_IDReady) { _MATHEMATICAL_OPERATORS_IDContent = SGetField<int>(LocalBridgeClazz, "MATHEMATICAL_OPERATORS_ID"); _MATHEMATICAL_OPERATORS_IDReady = true; } return _MATHEMATICAL_OPERATORS_IDContent; } }
            private static int _MATHEMATICAL_OPERATORS_IDContent = default;
            private static bool _MATHEMATICAL_OPERATORS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MAYAN_NUMERALS_ID"/>
            /// </summary>
            public static int MAYAN_NUMERALS_ID { get { if (!_MAYAN_NUMERALS_IDReady) { _MAYAN_NUMERALS_IDContent = SGetField<int>(LocalBridgeClazz, "MAYAN_NUMERALS_ID"); _MAYAN_NUMERALS_IDReady = true; } return _MAYAN_NUMERALS_IDContent; } }
            private static int _MAYAN_NUMERALS_IDContent = default;
            private static bool _MAYAN_NUMERALS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MEDEFAIDRIN_ID"/>
            /// </summary>
            public static int MEDEFAIDRIN_ID { get { if (!_MEDEFAIDRIN_IDReady) { _MEDEFAIDRIN_IDContent = SGetField<int>(LocalBridgeClazz, "MEDEFAIDRIN_ID"); _MEDEFAIDRIN_IDReady = true; } return _MEDEFAIDRIN_IDContent; } }
            private static int _MEDEFAIDRIN_IDContent = default;
            private static bool _MEDEFAIDRIN_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MEETEI_MAYEK_EXTENSIONS_ID"/>
            /// </summary>
            public static int MEETEI_MAYEK_EXTENSIONS_ID { get { if (!_MEETEI_MAYEK_EXTENSIONS_IDReady) { _MEETEI_MAYEK_EXTENSIONS_IDContent = SGetField<int>(LocalBridgeClazz, "MEETEI_MAYEK_EXTENSIONS_ID"); _MEETEI_MAYEK_EXTENSIONS_IDReady = true; } return _MEETEI_MAYEK_EXTENSIONS_IDContent; } }
            private static int _MEETEI_MAYEK_EXTENSIONS_IDContent = default;
            private static bool _MEETEI_MAYEK_EXTENSIONS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MEETEI_MAYEK_ID"/>
            /// </summary>
            public static int MEETEI_MAYEK_ID { get { if (!_MEETEI_MAYEK_IDReady) { _MEETEI_MAYEK_IDContent = SGetField<int>(LocalBridgeClazz, "MEETEI_MAYEK_ID"); _MEETEI_MAYEK_IDReady = true; } return _MEETEI_MAYEK_IDContent; } }
            private static int _MEETEI_MAYEK_IDContent = default;
            private static bool _MEETEI_MAYEK_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MENDE_KIKAKUI_ID"/>
            /// </summary>
            public static int MENDE_KIKAKUI_ID { get { if (!_MENDE_KIKAKUI_IDReady) { _MENDE_KIKAKUI_IDContent = SGetField<int>(LocalBridgeClazz, "MENDE_KIKAKUI_ID"); _MENDE_KIKAKUI_IDReady = true; } return _MENDE_KIKAKUI_IDContent; } }
            private static int _MENDE_KIKAKUI_IDContent = default;
            private static bool _MENDE_KIKAKUI_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MEROITIC_CURSIVE_ID"/>
            /// </summary>
            public static int MEROITIC_CURSIVE_ID { get { if (!_MEROITIC_CURSIVE_IDReady) { _MEROITIC_CURSIVE_IDContent = SGetField<int>(LocalBridgeClazz, "MEROITIC_CURSIVE_ID"); _MEROITIC_CURSIVE_IDReady = true; } return _MEROITIC_CURSIVE_IDContent; } }
            private static int _MEROITIC_CURSIVE_IDContent = default;
            private static bool _MEROITIC_CURSIVE_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MEROITIC_HIEROGLYPHS_ID"/>
            /// </summary>
            public static int MEROITIC_HIEROGLYPHS_ID { get { if (!_MEROITIC_HIEROGLYPHS_IDReady) { _MEROITIC_HIEROGLYPHS_IDContent = SGetField<int>(LocalBridgeClazz, "MEROITIC_HIEROGLYPHS_ID"); _MEROITIC_HIEROGLYPHS_IDReady = true; } return _MEROITIC_HIEROGLYPHS_IDContent; } }
            private static int _MEROITIC_HIEROGLYPHS_IDContent = default;
            private static bool _MEROITIC_HIEROGLYPHS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MIAO_ID"/>
            /// </summary>
            public static int MIAO_ID { get { if (!_MIAO_IDReady) { _MIAO_IDContent = SGetField<int>(LocalBridgeClazz, "MIAO_ID"); _MIAO_IDReady = true; } return _MIAO_IDContent; } }
            private static int _MIAO_IDContent = default;
            private static bool _MIAO_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A_ID"/>
            /// </summary>
            public static int MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A_ID { get { if (!_MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A_IDReady) { _MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A_IDContent = SGetField<int>(LocalBridgeClazz, "MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A_ID"); _MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A_IDReady = true; } return _MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A_IDContent; } }
            private static int _MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A_IDContent = default;
            private static bool _MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B_ID"/>
            /// </summary>
            public static int MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B_ID { get { if (!_MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B_IDReady) { _MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B_IDContent = SGetField<int>(LocalBridgeClazz, "MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B_ID"); _MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B_IDReady = true; } return _MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B_IDContent; } }
            private static int _MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B_IDContent = default;
            private static bool _MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MISCELLANEOUS_SYMBOLS_AND_ARROWS_ID"/>
            /// </summary>
            public static int MISCELLANEOUS_SYMBOLS_AND_ARROWS_ID { get { if (!_MISCELLANEOUS_SYMBOLS_AND_ARROWS_IDReady) { _MISCELLANEOUS_SYMBOLS_AND_ARROWS_IDContent = SGetField<int>(LocalBridgeClazz, "MISCELLANEOUS_SYMBOLS_AND_ARROWS_ID"); _MISCELLANEOUS_SYMBOLS_AND_ARROWS_IDReady = true; } return _MISCELLANEOUS_SYMBOLS_AND_ARROWS_IDContent; } }
            private static int _MISCELLANEOUS_SYMBOLS_AND_ARROWS_IDContent = default;
            private static bool _MISCELLANEOUS_SYMBOLS_AND_ARROWS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS_ID"/>
            /// </summary>
            public static int MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS_ID { get { if (!_MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS_IDReady) { _MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS_IDContent = SGetField<int>(LocalBridgeClazz, "MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS_ID"); _MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS_IDReady = true; } return _MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS_IDContent; } }
            private static int _MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS_IDContent = default;
            private static bool _MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MISCELLANEOUS_SYMBOLS_ID"/>
            /// </summary>
            public static int MISCELLANEOUS_SYMBOLS_ID { get { if (!_MISCELLANEOUS_SYMBOLS_IDReady) { _MISCELLANEOUS_SYMBOLS_IDContent = SGetField<int>(LocalBridgeClazz, "MISCELLANEOUS_SYMBOLS_ID"); _MISCELLANEOUS_SYMBOLS_IDReady = true; } return _MISCELLANEOUS_SYMBOLS_IDContent; } }
            private static int _MISCELLANEOUS_SYMBOLS_IDContent = default;
            private static bool _MISCELLANEOUS_SYMBOLS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MISCELLANEOUS_TECHNICAL_ID"/>
            /// </summary>
            public static int MISCELLANEOUS_TECHNICAL_ID { get { if (!_MISCELLANEOUS_TECHNICAL_IDReady) { _MISCELLANEOUS_TECHNICAL_IDContent = SGetField<int>(LocalBridgeClazz, "MISCELLANEOUS_TECHNICAL_ID"); _MISCELLANEOUS_TECHNICAL_IDReady = true; } return _MISCELLANEOUS_TECHNICAL_IDContent; } }
            private static int _MISCELLANEOUS_TECHNICAL_IDContent = default;
            private static bool _MISCELLANEOUS_TECHNICAL_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MODI_ID"/>
            /// </summary>
            public static int MODI_ID { get { if (!_MODI_IDReady) { _MODI_IDContent = SGetField<int>(LocalBridgeClazz, "MODI_ID"); _MODI_IDReady = true; } return _MODI_IDContent; } }
            private static int _MODI_IDContent = default;
            private static bool _MODI_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MODIFIER_TONE_LETTERS_ID"/>
            /// </summary>
            public static int MODIFIER_TONE_LETTERS_ID { get { if (!_MODIFIER_TONE_LETTERS_IDReady) { _MODIFIER_TONE_LETTERS_IDContent = SGetField<int>(LocalBridgeClazz, "MODIFIER_TONE_LETTERS_ID"); _MODIFIER_TONE_LETTERS_IDReady = true; } return _MODIFIER_TONE_LETTERS_IDContent; } }
            private static int _MODIFIER_TONE_LETTERS_IDContent = default;
            private static bool _MODIFIER_TONE_LETTERS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MONGOLIAN_ID"/>
            /// </summary>
            public static int MONGOLIAN_ID { get { if (!_MONGOLIAN_IDReady) { _MONGOLIAN_IDContent = SGetField<int>(LocalBridgeClazz, "MONGOLIAN_ID"); _MONGOLIAN_IDReady = true; } return _MONGOLIAN_IDContent; } }
            private static int _MONGOLIAN_IDContent = default;
            private static bool _MONGOLIAN_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MONGOLIAN_SUPPLEMENT_ID"/>
            /// </summary>
            public static int MONGOLIAN_SUPPLEMENT_ID { get { if (!_MONGOLIAN_SUPPLEMENT_IDReady) { _MONGOLIAN_SUPPLEMENT_IDContent = SGetField<int>(LocalBridgeClazz, "MONGOLIAN_SUPPLEMENT_ID"); _MONGOLIAN_SUPPLEMENT_IDReady = true; } return _MONGOLIAN_SUPPLEMENT_IDContent; } }
            private static int _MONGOLIAN_SUPPLEMENT_IDContent = default;
            private static bool _MONGOLIAN_SUPPLEMENT_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MRO_ID"/>
            /// </summary>
            public static int MRO_ID { get { if (!_MRO_IDReady) { _MRO_IDContent = SGetField<int>(LocalBridgeClazz, "MRO_ID"); _MRO_IDReady = true; } return _MRO_IDContent; } }
            private static int _MRO_IDContent = default;
            private static bool _MRO_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MULTANI_ID"/>
            /// </summary>
            public static int MULTANI_ID { get { if (!_MULTANI_IDReady) { _MULTANI_IDContent = SGetField<int>(LocalBridgeClazz, "MULTANI_ID"); _MULTANI_IDReady = true; } return _MULTANI_IDContent; } }
            private static int _MULTANI_IDContent = default;
            private static bool _MULTANI_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MUSICAL_SYMBOLS_ID"/>
            /// </summary>
            public static int MUSICAL_SYMBOLS_ID { get { if (!_MUSICAL_SYMBOLS_IDReady) { _MUSICAL_SYMBOLS_IDContent = SGetField<int>(LocalBridgeClazz, "MUSICAL_SYMBOLS_ID"); _MUSICAL_SYMBOLS_IDReady = true; } return _MUSICAL_SYMBOLS_IDContent; } }
            private static int _MUSICAL_SYMBOLS_IDContent = default;
            private static bool _MUSICAL_SYMBOLS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MYANMAR_EXTENDED_A_ID"/>
            /// </summary>
            public static int MYANMAR_EXTENDED_A_ID { get { if (!_MYANMAR_EXTENDED_A_IDReady) { _MYANMAR_EXTENDED_A_IDContent = SGetField<int>(LocalBridgeClazz, "MYANMAR_EXTENDED_A_ID"); _MYANMAR_EXTENDED_A_IDReady = true; } return _MYANMAR_EXTENDED_A_IDContent; } }
            private static int _MYANMAR_EXTENDED_A_IDContent = default;
            private static bool _MYANMAR_EXTENDED_A_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MYANMAR_EXTENDED_B_ID"/>
            /// </summary>
            public static int MYANMAR_EXTENDED_B_ID { get { if (!_MYANMAR_EXTENDED_B_IDReady) { _MYANMAR_EXTENDED_B_IDContent = SGetField<int>(LocalBridgeClazz, "MYANMAR_EXTENDED_B_ID"); _MYANMAR_EXTENDED_B_IDReady = true; } return _MYANMAR_EXTENDED_B_IDContent; } }
            private static int _MYANMAR_EXTENDED_B_IDContent = default;
            private static bool _MYANMAR_EXTENDED_B_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#MYANMAR_ID"/>
            /// </summary>
            public static int MYANMAR_ID { get { if (!_MYANMAR_IDReady) { _MYANMAR_IDContent = SGetField<int>(LocalBridgeClazz, "MYANMAR_ID"); _MYANMAR_IDReady = true; } return _MYANMAR_IDContent; } }
            private static int _MYANMAR_IDContent = default;
            private static bool _MYANMAR_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#NABATAEAN_ID"/>
            /// </summary>
            public static int NABATAEAN_ID { get { if (!_NABATAEAN_IDReady) { _NABATAEAN_IDContent = SGetField<int>(LocalBridgeClazz, "NABATAEAN_ID"); _NABATAEAN_IDReady = true; } return _NABATAEAN_IDContent; } }
            private static int _NABATAEAN_IDContent = default;
            private static bool _NABATAEAN_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#NAG_MUNDARI_ID"/>
            /// </summary>
            public static int NAG_MUNDARI_ID { get { if (!_NAG_MUNDARI_IDReady) { _NAG_MUNDARI_IDContent = SGetField<int>(LocalBridgeClazz, "NAG_MUNDARI_ID"); _NAG_MUNDARI_IDReady = true; } return _NAG_MUNDARI_IDContent; } }
            private static int _NAG_MUNDARI_IDContent = default;
            private static bool _NAG_MUNDARI_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#NANDINAGARI_ID"/>
            /// </summary>
            public static int NANDINAGARI_ID { get { if (!_NANDINAGARI_IDReady) { _NANDINAGARI_IDContent = SGetField<int>(LocalBridgeClazz, "NANDINAGARI_ID"); _NANDINAGARI_IDReady = true; } return _NANDINAGARI_IDContent; } }
            private static int _NANDINAGARI_IDContent = default;
            private static bool _NANDINAGARI_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#NEW_TAI_LUE_ID"/>
            /// </summary>
            public static int NEW_TAI_LUE_ID { get { if (!_NEW_TAI_LUE_IDReady) { _NEW_TAI_LUE_IDContent = SGetField<int>(LocalBridgeClazz, "NEW_TAI_LUE_ID"); _NEW_TAI_LUE_IDReady = true; } return _NEW_TAI_LUE_IDContent; } }
            private static int _NEW_TAI_LUE_IDContent = default;
            private static bool _NEW_TAI_LUE_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#NEWA_ID"/>
            /// </summary>
            public static int NEWA_ID { get { if (!_NEWA_IDReady) { _NEWA_IDContent = SGetField<int>(LocalBridgeClazz, "NEWA_ID"); _NEWA_IDReady = true; } return _NEWA_IDContent; } }
            private static int _NEWA_IDContent = default;
            private static bool _NEWA_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#NKO_ID"/>
            /// </summary>
            public static int NKO_ID { get { if (!_NKO_IDReady) { _NKO_IDContent = SGetField<int>(LocalBridgeClazz, "NKO_ID"); _NKO_IDReady = true; } return _NKO_IDContent; } }
            private static int _NKO_IDContent = default;
            private static bool _NKO_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#NUMBER_FORMS_ID"/>
            /// </summary>
            public static int NUMBER_FORMS_ID { get { if (!_NUMBER_FORMS_IDReady) { _NUMBER_FORMS_IDContent = SGetField<int>(LocalBridgeClazz, "NUMBER_FORMS_ID"); _NUMBER_FORMS_IDReady = true; } return _NUMBER_FORMS_IDContent; } }
            private static int _NUMBER_FORMS_IDContent = default;
            private static bool _NUMBER_FORMS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#NUSHU_ID"/>
            /// </summary>
            public static int NUSHU_ID { get { if (!_NUSHU_IDReady) { _NUSHU_IDContent = SGetField<int>(LocalBridgeClazz, "NUSHU_ID"); _NUSHU_IDReady = true; } return _NUSHU_IDContent; } }
            private static int _NUSHU_IDContent = default;
            private static bool _NUSHU_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#NYIAKENG_PUACHUE_HMONG_ID"/>
            /// </summary>
            public static int NYIAKENG_PUACHUE_HMONG_ID { get { if (!_NYIAKENG_PUACHUE_HMONG_IDReady) { _NYIAKENG_PUACHUE_HMONG_IDContent = SGetField<int>(LocalBridgeClazz, "NYIAKENG_PUACHUE_HMONG_ID"); _NYIAKENG_PUACHUE_HMONG_IDReady = true; } return _NYIAKENG_PUACHUE_HMONG_IDContent; } }
            private static int _NYIAKENG_PUACHUE_HMONG_IDContent = default;
            private static bool _NYIAKENG_PUACHUE_HMONG_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#OGHAM_ID"/>
            /// </summary>
            public static int OGHAM_ID { get { if (!_OGHAM_IDReady) { _OGHAM_IDContent = SGetField<int>(LocalBridgeClazz, "OGHAM_ID"); _OGHAM_IDReady = true; } return _OGHAM_IDContent; } }
            private static int _OGHAM_IDContent = default;
            private static bool _OGHAM_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#OL_CHIKI_ID"/>
            /// </summary>
            public static int OL_CHIKI_ID { get { if (!_OL_CHIKI_IDReady) { _OL_CHIKI_IDContent = SGetField<int>(LocalBridgeClazz, "OL_CHIKI_ID"); _OL_CHIKI_IDReady = true; } return _OL_CHIKI_IDContent; } }
            private static int _OL_CHIKI_IDContent = default;
            private static bool _OL_CHIKI_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#OLD_HUNGARIAN_ID"/>
            /// </summary>
            public static int OLD_HUNGARIAN_ID { get { if (!_OLD_HUNGARIAN_IDReady) { _OLD_HUNGARIAN_IDContent = SGetField<int>(LocalBridgeClazz, "OLD_HUNGARIAN_ID"); _OLD_HUNGARIAN_IDReady = true; } return _OLD_HUNGARIAN_IDContent; } }
            private static int _OLD_HUNGARIAN_IDContent = default;
            private static bool _OLD_HUNGARIAN_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#OLD_ITALIC_ID"/>
            /// </summary>
            public static int OLD_ITALIC_ID { get { if (!_OLD_ITALIC_IDReady) { _OLD_ITALIC_IDContent = SGetField<int>(LocalBridgeClazz, "OLD_ITALIC_ID"); _OLD_ITALIC_IDReady = true; } return _OLD_ITALIC_IDContent; } }
            private static int _OLD_ITALIC_IDContent = default;
            private static bool _OLD_ITALIC_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#OLD_NORTH_ARABIAN_ID"/>
            /// </summary>
            public static int OLD_NORTH_ARABIAN_ID { get { if (!_OLD_NORTH_ARABIAN_IDReady) { _OLD_NORTH_ARABIAN_IDContent = SGetField<int>(LocalBridgeClazz, "OLD_NORTH_ARABIAN_ID"); _OLD_NORTH_ARABIAN_IDReady = true; } return _OLD_NORTH_ARABIAN_IDContent; } }
            private static int _OLD_NORTH_ARABIAN_IDContent = default;
            private static bool _OLD_NORTH_ARABIAN_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#OLD_PERMIC_ID"/>
            /// </summary>
            public static int OLD_PERMIC_ID { get { if (!_OLD_PERMIC_IDReady) { _OLD_PERMIC_IDContent = SGetField<int>(LocalBridgeClazz, "OLD_PERMIC_ID"); _OLD_PERMIC_IDReady = true; } return _OLD_PERMIC_IDContent; } }
            private static int _OLD_PERMIC_IDContent = default;
            private static bool _OLD_PERMIC_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#OLD_PERSIAN_ID"/>
            /// </summary>
            public static int OLD_PERSIAN_ID { get { if (!_OLD_PERSIAN_IDReady) { _OLD_PERSIAN_IDContent = SGetField<int>(LocalBridgeClazz, "OLD_PERSIAN_ID"); _OLD_PERSIAN_IDReady = true; } return _OLD_PERSIAN_IDContent; } }
            private static int _OLD_PERSIAN_IDContent = default;
            private static bool _OLD_PERSIAN_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#OLD_SOGDIAN_ID"/>
            /// </summary>
            public static int OLD_SOGDIAN_ID { get { if (!_OLD_SOGDIAN_IDReady) { _OLD_SOGDIAN_IDContent = SGetField<int>(LocalBridgeClazz, "OLD_SOGDIAN_ID"); _OLD_SOGDIAN_IDReady = true; } return _OLD_SOGDIAN_IDContent; } }
            private static int _OLD_SOGDIAN_IDContent = default;
            private static bool _OLD_SOGDIAN_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#OLD_SOUTH_ARABIAN_ID"/>
            /// </summary>
            public static int OLD_SOUTH_ARABIAN_ID { get { if (!_OLD_SOUTH_ARABIAN_IDReady) { _OLD_SOUTH_ARABIAN_IDContent = SGetField<int>(LocalBridgeClazz, "OLD_SOUTH_ARABIAN_ID"); _OLD_SOUTH_ARABIAN_IDReady = true; } return _OLD_SOUTH_ARABIAN_IDContent; } }
            private static int _OLD_SOUTH_ARABIAN_IDContent = default;
            private static bool _OLD_SOUTH_ARABIAN_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#OLD_TURKIC_ID"/>
            /// </summary>
            public static int OLD_TURKIC_ID { get { if (!_OLD_TURKIC_IDReady) { _OLD_TURKIC_IDContent = SGetField<int>(LocalBridgeClazz, "OLD_TURKIC_ID"); _OLD_TURKIC_IDReady = true; } return _OLD_TURKIC_IDContent; } }
            private static int _OLD_TURKIC_IDContent = default;
            private static bool _OLD_TURKIC_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#OLD_UYGHUR_ID"/>
            /// </summary>
            public static int OLD_UYGHUR_ID { get { if (!_OLD_UYGHUR_IDReady) { _OLD_UYGHUR_IDContent = SGetField<int>(LocalBridgeClazz, "OLD_UYGHUR_ID"); _OLD_UYGHUR_IDReady = true; } return _OLD_UYGHUR_IDContent; } }
            private static int _OLD_UYGHUR_IDContent = default;
            private static bool _OLD_UYGHUR_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#OPTICAL_CHARACTER_RECOGNITION_ID"/>
            /// </summary>
            public static int OPTICAL_CHARACTER_RECOGNITION_ID { get { if (!_OPTICAL_CHARACTER_RECOGNITION_IDReady) { _OPTICAL_CHARACTER_RECOGNITION_IDContent = SGetField<int>(LocalBridgeClazz, "OPTICAL_CHARACTER_RECOGNITION_ID"); _OPTICAL_CHARACTER_RECOGNITION_IDReady = true; } return _OPTICAL_CHARACTER_RECOGNITION_IDContent; } }
            private static int _OPTICAL_CHARACTER_RECOGNITION_IDContent = default;
            private static bool _OPTICAL_CHARACTER_RECOGNITION_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ORIYA_ID"/>
            /// </summary>
            public static int ORIYA_ID { get { if (!_ORIYA_IDReady) { _ORIYA_IDContent = SGetField<int>(LocalBridgeClazz, "ORIYA_ID"); _ORIYA_IDReady = true; } return _ORIYA_IDContent; } }
            private static int _ORIYA_IDContent = default;
            private static bool _ORIYA_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ORNAMENTAL_DINGBATS_ID"/>
            /// </summary>
            public static int ORNAMENTAL_DINGBATS_ID { get { if (!_ORNAMENTAL_DINGBATS_IDReady) { _ORNAMENTAL_DINGBATS_IDContent = SGetField<int>(LocalBridgeClazz, "ORNAMENTAL_DINGBATS_ID"); _ORNAMENTAL_DINGBATS_IDReady = true; } return _ORNAMENTAL_DINGBATS_IDContent; } }
            private static int _ORNAMENTAL_DINGBATS_IDContent = default;
            private static bool _ORNAMENTAL_DINGBATS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#OSAGE_ID"/>
            /// </summary>
            public static int OSAGE_ID { get { if (!_OSAGE_IDReady) { _OSAGE_IDContent = SGetField<int>(LocalBridgeClazz, "OSAGE_ID"); _OSAGE_IDReady = true; } return _OSAGE_IDContent; } }
            private static int _OSAGE_IDContent = default;
            private static bool _OSAGE_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#OSMANYA_ID"/>
            /// </summary>
            public static int OSMANYA_ID { get { if (!_OSMANYA_IDReady) { _OSMANYA_IDContent = SGetField<int>(LocalBridgeClazz, "OSMANYA_ID"); _OSMANYA_IDReady = true; } return _OSMANYA_IDContent; } }
            private static int _OSMANYA_IDContent = default;
            private static bool _OSMANYA_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#OTTOMAN_SIYAQ_NUMBERS_ID"/>
            /// </summary>
            public static int OTTOMAN_SIYAQ_NUMBERS_ID { get { if (!_OTTOMAN_SIYAQ_NUMBERS_IDReady) { _OTTOMAN_SIYAQ_NUMBERS_IDContent = SGetField<int>(LocalBridgeClazz, "OTTOMAN_SIYAQ_NUMBERS_ID"); _OTTOMAN_SIYAQ_NUMBERS_IDReady = true; } return _OTTOMAN_SIYAQ_NUMBERS_IDContent; } }
            private static int _OTTOMAN_SIYAQ_NUMBERS_IDContent = default;
            private static bool _OTTOMAN_SIYAQ_NUMBERS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#PAHAWH_HMONG_ID"/>
            /// </summary>
            public static int PAHAWH_HMONG_ID { get { if (!_PAHAWH_HMONG_IDReady) { _PAHAWH_HMONG_IDContent = SGetField<int>(LocalBridgeClazz, "PAHAWH_HMONG_ID"); _PAHAWH_HMONG_IDReady = true; } return _PAHAWH_HMONG_IDContent; } }
            private static int _PAHAWH_HMONG_IDContent = default;
            private static bool _PAHAWH_HMONG_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#PALMYRENE_ID"/>
            /// </summary>
            public static int PALMYRENE_ID { get { if (!_PALMYRENE_IDReady) { _PALMYRENE_IDContent = SGetField<int>(LocalBridgeClazz, "PALMYRENE_ID"); _PALMYRENE_IDReady = true; } return _PALMYRENE_IDContent; } }
            private static int _PALMYRENE_IDContent = default;
            private static bool _PALMYRENE_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#PAU_CIN_HAU_ID"/>
            /// </summary>
            public static int PAU_CIN_HAU_ID { get { if (!_PAU_CIN_HAU_IDReady) { _PAU_CIN_HAU_IDContent = SGetField<int>(LocalBridgeClazz, "PAU_CIN_HAU_ID"); _PAU_CIN_HAU_IDReady = true; } return _PAU_CIN_HAU_IDContent; } }
            private static int _PAU_CIN_HAU_IDContent = default;
            private static bool _PAU_CIN_HAU_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#PHAGS_PA_ID"/>
            /// </summary>
            public static int PHAGS_PA_ID { get { if (!_PHAGS_PA_IDReady) { _PHAGS_PA_IDContent = SGetField<int>(LocalBridgeClazz, "PHAGS_PA_ID"); _PHAGS_PA_IDReady = true; } return _PHAGS_PA_IDContent; } }
            private static int _PHAGS_PA_IDContent = default;
            private static bool _PHAGS_PA_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#PHAISTOS_DISC_ID"/>
            /// </summary>
            public static int PHAISTOS_DISC_ID { get { if (!_PHAISTOS_DISC_IDReady) { _PHAISTOS_DISC_IDContent = SGetField<int>(LocalBridgeClazz, "PHAISTOS_DISC_ID"); _PHAISTOS_DISC_IDReady = true; } return _PHAISTOS_DISC_IDContent; } }
            private static int _PHAISTOS_DISC_IDContent = default;
            private static bool _PHAISTOS_DISC_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#PHOENICIAN_ID"/>
            /// </summary>
            public static int PHOENICIAN_ID { get { if (!_PHOENICIAN_IDReady) { _PHOENICIAN_IDContent = SGetField<int>(LocalBridgeClazz, "PHOENICIAN_ID"); _PHOENICIAN_IDReady = true; } return _PHOENICIAN_IDContent; } }
            private static int _PHOENICIAN_IDContent = default;
            private static bool _PHOENICIAN_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#PHONETIC_EXTENSIONS_ID"/>
            /// </summary>
            public static int PHONETIC_EXTENSIONS_ID { get { if (!_PHONETIC_EXTENSIONS_IDReady) { _PHONETIC_EXTENSIONS_IDContent = SGetField<int>(LocalBridgeClazz, "PHONETIC_EXTENSIONS_ID"); _PHONETIC_EXTENSIONS_IDReady = true; } return _PHONETIC_EXTENSIONS_IDContent; } }
            private static int _PHONETIC_EXTENSIONS_IDContent = default;
            private static bool _PHONETIC_EXTENSIONS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#PHONETIC_EXTENSIONS_SUPPLEMENT_ID"/>
            /// </summary>
            public static int PHONETIC_EXTENSIONS_SUPPLEMENT_ID { get { if (!_PHONETIC_EXTENSIONS_SUPPLEMENT_IDReady) { _PHONETIC_EXTENSIONS_SUPPLEMENT_IDContent = SGetField<int>(LocalBridgeClazz, "PHONETIC_EXTENSIONS_SUPPLEMENT_ID"); _PHONETIC_EXTENSIONS_SUPPLEMENT_IDReady = true; } return _PHONETIC_EXTENSIONS_SUPPLEMENT_IDContent; } }
            private static int _PHONETIC_EXTENSIONS_SUPPLEMENT_IDContent = default;
            private static bool _PHONETIC_EXTENSIONS_SUPPLEMENT_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#PLAYING_CARDS_ID"/>
            /// </summary>
            public static int PLAYING_CARDS_ID { get { if (!_PLAYING_CARDS_IDReady) { _PLAYING_CARDS_IDContent = SGetField<int>(LocalBridgeClazz, "PLAYING_CARDS_ID"); _PLAYING_CARDS_IDReady = true; } return _PLAYING_CARDS_IDContent; } }
            private static int _PLAYING_CARDS_IDContent = default;
            private static bool _PLAYING_CARDS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#PRIVATE_USE_AREA_ID"/>
            /// </summary>
            public static int PRIVATE_USE_AREA_ID { get { if (!_PRIVATE_USE_AREA_IDReady) { _PRIVATE_USE_AREA_IDContent = SGetField<int>(LocalBridgeClazz, "PRIVATE_USE_AREA_ID"); _PRIVATE_USE_AREA_IDReady = true; } return _PRIVATE_USE_AREA_IDContent; } }
            private static int _PRIVATE_USE_AREA_IDContent = default;
            private static bool _PRIVATE_USE_AREA_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#PRIVATE_USE_ID"/>
            /// </summary>
            public static int PRIVATE_USE_ID { get { if (!_PRIVATE_USE_IDReady) { _PRIVATE_USE_IDContent = SGetField<int>(LocalBridgeClazz, "PRIVATE_USE_ID"); _PRIVATE_USE_IDReady = true; } return _PRIVATE_USE_IDContent; } }
            private static int _PRIVATE_USE_IDContent = default;
            private static bool _PRIVATE_USE_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#PSALTER_PAHLAVI_ID"/>
            /// </summary>
            public static int PSALTER_PAHLAVI_ID { get { if (!_PSALTER_PAHLAVI_IDReady) { _PSALTER_PAHLAVI_IDContent = SGetField<int>(LocalBridgeClazz, "PSALTER_PAHLAVI_ID"); _PSALTER_PAHLAVI_IDReady = true; } return _PSALTER_PAHLAVI_IDContent; } }
            private static int _PSALTER_PAHLAVI_IDContent = default;
            private static bool _PSALTER_PAHLAVI_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#REJANG_ID"/>
            /// </summary>
            public static int REJANG_ID { get { if (!_REJANG_IDReady) { _REJANG_IDContent = SGetField<int>(LocalBridgeClazz, "REJANG_ID"); _REJANG_IDReady = true; } return _REJANG_IDContent; } }
            private static int _REJANG_IDContent = default;
            private static bool _REJANG_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#RUMI_NUMERAL_SYMBOLS_ID"/>
            /// </summary>
            public static int RUMI_NUMERAL_SYMBOLS_ID { get { if (!_RUMI_NUMERAL_SYMBOLS_IDReady) { _RUMI_NUMERAL_SYMBOLS_IDContent = SGetField<int>(LocalBridgeClazz, "RUMI_NUMERAL_SYMBOLS_ID"); _RUMI_NUMERAL_SYMBOLS_IDReady = true; } return _RUMI_NUMERAL_SYMBOLS_IDContent; } }
            private static int _RUMI_NUMERAL_SYMBOLS_IDContent = default;
            private static bool _RUMI_NUMERAL_SYMBOLS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#RUNIC_ID"/>
            /// </summary>
            public static int RUNIC_ID { get { if (!_RUNIC_IDReady) { _RUNIC_IDContent = SGetField<int>(LocalBridgeClazz, "RUNIC_ID"); _RUNIC_IDReady = true; } return _RUNIC_IDContent; } }
            private static int _RUNIC_IDContent = default;
            private static bool _RUNIC_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SAMARITAN_ID"/>
            /// </summary>
            public static int SAMARITAN_ID { get { if (!_SAMARITAN_IDReady) { _SAMARITAN_IDContent = SGetField<int>(LocalBridgeClazz, "SAMARITAN_ID"); _SAMARITAN_IDReady = true; } return _SAMARITAN_IDContent; } }
            private static int _SAMARITAN_IDContent = default;
            private static bool _SAMARITAN_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SAURASHTRA_ID"/>
            /// </summary>
            public static int SAURASHTRA_ID { get { if (!_SAURASHTRA_IDReady) { _SAURASHTRA_IDContent = SGetField<int>(LocalBridgeClazz, "SAURASHTRA_ID"); _SAURASHTRA_IDReady = true; } return _SAURASHTRA_IDContent; } }
            private static int _SAURASHTRA_IDContent = default;
            private static bool _SAURASHTRA_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SHARADA_ID"/>
            /// </summary>
            public static int SHARADA_ID { get { if (!_SHARADA_IDReady) { _SHARADA_IDContent = SGetField<int>(LocalBridgeClazz, "SHARADA_ID"); _SHARADA_IDReady = true; } return _SHARADA_IDContent; } }
            private static int _SHARADA_IDContent = default;
            private static bool _SHARADA_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SHAVIAN_ID"/>
            /// </summary>
            public static int SHAVIAN_ID { get { if (!_SHAVIAN_IDReady) { _SHAVIAN_IDContent = SGetField<int>(LocalBridgeClazz, "SHAVIAN_ID"); _SHAVIAN_IDReady = true; } return _SHAVIAN_IDContent; } }
            private static int _SHAVIAN_IDContent = default;
            private static bool _SHAVIAN_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SHORTHAND_FORMAT_CONTROLS_ID"/>
            /// </summary>
            public static int SHORTHAND_FORMAT_CONTROLS_ID { get { if (!_SHORTHAND_FORMAT_CONTROLS_IDReady) { _SHORTHAND_FORMAT_CONTROLS_IDContent = SGetField<int>(LocalBridgeClazz, "SHORTHAND_FORMAT_CONTROLS_ID"); _SHORTHAND_FORMAT_CONTROLS_IDReady = true; } return _SHORTHAND_FORMAT_CONTROLS_IDContent; } }
            private static int _SHORTHAND_FORMAT_CONTROLS_IDContent = default;
            private static bool _SHORTHAND_FORMAT_CONTROLS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SIDDHAM_ID"/>
            /// </summary>
            public static int SIDDHAM_ID { get { if (!_SIDDHAM_IDReady) { _SIDDHAM_IDContent = SGetField<int>(LocalBridgeClazz, "SIDDHAM_ID"); _SIDDHAM_IDReady = true; } return _SIDDHAM_IDContent; } }
            private static int _SIDDHAM_IDContent = default;
            private static bool _SIDDHAM_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SINHALA_ARCHAIC_NUMBERS_ID"/>
            /// </summary>
            public static int SINHALA_ARCHAIC_NUMBERS_ID { get { if (!_SINHALA_ARCHAIC_NUMBERS_IDReady) { _SINHALA_ARCHAIC_NUMBERS_IDContent = SGetField<int>(LocalBridgeClazz, "SINHALA_ARCHAIC_NUMBERS_ID"); _SINHALA_ARCHAIC_NUMBERS_IDReady = true; } return _SINHALA_ARCHAIC_NUMBERS_IDContent; } }
            private static int _SINHALA_ARCHAIC_NUMBERS_IDContent = default;
            private static bool _SINHALA_ARCHAIC_NUMBERS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SINHALA_ID"/>
            /// </summary>
            public static int SINHALA_ID { get { if (!_SINHALA_IDReady) { _SINHALA_IDContent = SGetField<int>(LocalBridgeClazz, "SINHALA_ID"); _SINHALA_IDReady = true; } return _SINHALA_IDContent; } }
            private static int _SINHALA_IDContent = default;
            private static bool _SINHALA_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SMALL_FORM_VARIANTS_ID"/>
            /// </summary>
            public static int SMALL_FORM_VARIANTS_ID { get { if (!_SMALL_FORM_VARIANTS_IDReady) { _SMALL_FORM_VARIANTS_IDContent = SGetField<int>(LocalBridgeClazz, "SMALL_FORM_VARIANTS_ID"); _SMALL_FORM_VARIANTS_IDReady = true; } return _SMALL_FORM_VARIANTS_IDContent; } }
            private static int _SMALL_FORM_VARIANTS_IDContent = default;
            private static bool _SMALL_FORM_VARIANTS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SMALL_KANA_EXTENSION_ID"/>
            /// </summary>
            public static int SMALL_KANA_EXTENSION_ID { get { if (!_SMALL_KANA_EXTENSION_IDReady) { _SMALL_KANA_EXTENSION_IDContent = SGetField<int>(LocalBridgeClazz, "SMALL_KANA_EXTENSION_ID"); _SMALL_KANA_EXTENSION_IDReady = true; } return _SMALL_KANA_EXTENSION_IDContent; } }
            private static int _SMALL_KANA_EXTENSION_IDContent = default;
            private static bool _SMALL_KANA_EXTENSION_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SOGDIAN_ID"/>
            /// </summary>
            public static int SOGDIAN_ID { get { if (!_SOGDIAN_IDReady) { _SOGDIAN_IDContent = SGetField<int>(LocalBridgeClazz, "SOGDIAN_ID"); _SOGDIAN_IDReady = true; } return _SOGDIAN_IDContent; } }
            private static int _SOGDIAN_IDContent = default;
            private static bool _SOGDIAN_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SORA_SOMPENG_ID"/>
            /// </summary>
            public static int SORA_SOMPENG_ID { get { if (!_SORA_SOMPENG_IDReady) { _SORA_SOMPENG_IDContent = SGetField<int>(LocalBridgeClazz, "SORA_SOMPENG_ID"); _SORA_SOMPENG_IDReady = true; } return _SORA_SOMPENG_IDContent; } }
            private static int _SORA_SOMPENG_IDContent = default;
            private static bool _SORA_SOMPENG_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SOYOMBO_ID"/>
            /// </summary>
            public static int SOYOMBO_ID { get { if (!_SOYOMBO_IDReady) { _SOYOMBO_IDContent = SGetField<int>(LocalBridgeClazz, "SOYOMBO_ID"); _SOYOMBO_IDReady = true; } return _SOYOMBO_IDContent; } }
            private static int _SOYOMBO_IDContent = default;
            private static bool _SOYOMBO_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SPACING_MODIFIER_LETTERS_ID"/>
            /// </summary>
            public static int SPACING_MODIFIER_LETTERS_ID { get { if (!_SPACING_MODIFIER_LETTERS_IDReady) { _SPACING_MODIFIER_LETTERS_IDContent = SGetField<int>(LocalBridgeClazz, "SPACING_MODIFIER_LETTERS_ID"); _SPACING_MODIFIER_LETTERS_IDReady = true; } return _SPACING_MODIFIER_LETTERS_IDContent; } }
            private static int _SPACING_MODIFIER_LETTERS_IDContent = default;
            private static bool _SPACING_MODIFIER_LETTERS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SPECIALS_ID"/>
            /// </summary>
            public static int SPECIALS_ID { get { if (!_SPECIALS_IDReady) { _SPECIALS_IDContent = SGetField<int>(LocalBridgeClazz, "SPECIALS_ID"); _SPECIALS_IDReady = true; } return _SPECIALS_IDContent; } }
            private static int _SPECIALS_IDContent = default;
            private static bool _SPECIALS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SUNDANESE_ID"/>
            /// </summary>
            public static int SUNDANESE_ID { get { if (!_SUNDANESE_IDReady) { _SUNDANESE_IDContent = SGetField<int>(LocalBridgeClazz, "SUNDANESE_ID"); _SUNDANESE_IDReady = true; } return _SUNDANESE_IDContent; } }
            private static int _SUNDANESE_IDContent = default;
            private static bool _SUNDANESE_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SUNDANESE_SUPPLEMENT_ID"/>
            /// </summary>
            public static int SUNDANESE_SUPPLEMENT_ID { get { if (!_SUNDANESE_SUPPLEMENT_IDReady) { _SUNDANESE_SUPPLEMENT_IDContent = SGetField<int>(LocalBridgeClazz, "SUNDANESE_SUPPLEMENT_ID"); _SUNDANESE_SUPPLEMENT_IDReady = true; } return _SUNDANESE_SUPPLEMENT_IDContent; } }
            private static int _SUNDANESE_SUPPLEMENT_IDContent = default;
            private static bool _SUNDANESE_SUPPLEMENT_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SUPERSCRIPTS_AND_SUBSCRIPTS_ID"/>
            /// </summary>
            public static int SUPERSCRIPTS_AND_SUBSCRIPTS_ID { get { if (!_SUPERSCRIPTS_AND_SUBSCRIPTS_IDReady) { _SUPERSCRIPTS_AND_SUBSCRIPTS_IDContent = SGetField<int>(LocalBridgeClazz, "SUPERSCRIPTS_AND_SUBSCRIPTS_ID"); _SUPERSCRIPTS_AND_SUBSCRIPTS_IDReady = true; } return _SUPERSCRIPTS_AND_SUBSCRIPTS_IDContent; } }
            private static int _SUPERSCRIPTS_AND_SUBSCRIPTS_IDContent = default;
            private static bool _SUPERSCRIPTS_AND_SUBSCRIPTS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SUPPLEMENTAL_ARROWS_A_ID"/>
            /// </summary>
            public static int SUPPLEMENTAL_ARROWS_A_ID { get { if (!_SUPPLEMENTAL_ARROWS_A_IDReady) { _SUPPLEMENTAL_ARROWS_A_IDContent = SGetField<int>(LocalBridgeClazz, "SUPPLEMENTAL_ARROWS_A_ID"); _SUPPLEMENTAL_ARROWS_A_IDReady = true; } return _SUPPLEMENTAL_ARROWS_A_IDContent; } }
            private static int _SUPPLEMENTAL_ARROWS_A_IDContent = default;
            private static bool _SUPPLEMENTAL_ARROWS_A_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SUPPLEMENTAL_ARROWS_B_ID"/>
            /// </summary>
            public static int SUPPLEMENTAL_ARROWS_B_ID { get { if (!_SUPPLEMENTAL_ARROWS_B_IDReady) { _SUPPLEMENTAL_ARROWS_B_IDContent = SGetField<int>(LocalBridgeClazz, "SUPPLEMENTAL_ARROWS_B_ID"); _SUPPLEMENTAL_ARROWS_B_IDReady = true; } return _SUPPLEMENTAL_ARROWS_B_IDContent; } }
            private static int _SUPPLEMENTAL_ARROWS_B_IDContent = default;
            private static bool _SUPPLEMENTAL_ARROWS_B_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SUPPLEMENTAL_ARROWS_C_ID"/>
            /// </summary>
            public static int SUPPLEMENTAL_ARROWS_C_ID { get { if (!_SUPPLEMENTAL_ARROWS_C_IDReady) { _SUPPLEMENTAL_ARROWS_C_IDContent = SGetField<int>(LocalBridgeClazz, "SUPPLEMENTAL_ARROWS_C_ID"); _SUPPLEMENTAL_ARROWS_C_IDReady = true; } return _SUPPLEMENTAL_ARROWS_C_IDContent; } }
            private static int _SUPPLEMENTAL_ARROWS_C_IDContent = default;
            private static bool _SUPPLEMENTAL_ARROWS_C_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SUPPLEMENTAL_MATHEMATICAL_OPERATORS_ID"/>
            /// </summary>
            public static int SUPPLEMENTAL_MATHEMATICAL_OPERATORS_ID { get { if (!_SUPPLEMENTAL_MATHEMATICAL_OPERATORS_IDReady) { _SUPPLEMENTAL_MATHEMATICAL_OPERATORS_IDContent = SGetField<int>(LocalBridgeClazz, "SUPPLEMENTAL_MATHEMATICAL_OPERATORS_ID"); _SUPPLEMENTAL_MATHEMATICAL_OPERATORS_IDReady = true; } return _SUPPLEMENTAL_MATHEMATICAL_OPERATORS_IDContent; } }
            private static int _SUPPLEMENTAL_MATHEMATICAL_OPERATORS_IDContent = default;
            private static bool _SUPPLEMENTAL_MATHEMATICAL_OPERATORS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SUPPLEMENTAL_PUNCTUATION_ID"/>
            /// </summary>
            public static int SUPPLEMENTAL_PUNCTUATION_ID { get { if (!_SUPPLEMENTAL_PUNCTUATION_IDReady) { _SUPPLEMENTAL_PUNCTUATION_IDContent = SGetField<int>(LocalBridgeClazz, "SUPPLEMENTAL_PUNCTUATION_ID"); _SUPPLEMENTAL_PUNCTUATION_IDReady = true; } return _SUPPLEMENTAL_PUNCTUATION_IDContent; } }
            private static int _SUPPLEMENTAL_PUNCTUATION_IDContent = default;
            private static bool _SUPPLEMENTAL_PUNCTUATION_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SUPPLEMENTAL_SYMBOLS_AND_PICTOGRAPHS_ID"/>
            /// </summary>
            public static int SUPPLEMENTAL_SYMBOLS_AND_PICTOGRAPHS_ID { get { if (!_SUPPLEMENTAL_SYMBOLS_AND_PICTOGRAPHS_IDReady) { _SUPPLEMENTAL_SYMBOLS_AND_PICTOGRAPHS_IDContent = SGetField<int>(LocalBridgeClazz, "SUPPLEMENTAL_SYMBOLS_AND_PICTOGRAPHS_ID"); _SUPPLEMENTAL_SYMBOLS_AND_PICTOGRAPHS_IDReady = true; } return _SUPPLEMENTAL_SYMBOLS_AND_PICTOGRAPHS_IDContent; } }
            private static int _SUPPLEMENTAL_SYMBOLS_AND_PICTOGRAPHS_IDContent = default;
            private static bool _SUPPLEMENTAL_SYMBOLS_AND_PICTOGRAPHS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SUPPLEMENTARY_PRIVATE_USE_AREA_A_ID"/>
            /// </summary>
            public static int SUPPLEMENTARY_PRIVATE_USE_AREA_A_ID { get { if (!_SUPPLEMENTARY_PRIVATE_USE_AREA_A_IDReady) { _SUPPLEMENTARY_PRIVATE_USE_AREA_A_IDContent = SGetField<int>(LocalBridgeClazz, "SUPPLEMENTARY_PRIVATE_USE_AREA_A_ID"); _SUPPLEMENTARY_PRIVATE_USE_AREA_A_IDReady = true; } return _SUPPLEMENTARY_PRIVATE_USE_AREA_A_IDContent; } }
            private static int _SUPPLEMENTARY_PRIVATE_USE_AREA_A_IDContent = default;
            private static bool _SUPPLEMENTARY_PRIVATE_USE_AREA_A_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SUPPLEMENTARY_PRIVATE_USE_AREA_B_ID"/>
            /// </summary>
            public static int SUPPLEMENTARY_PRIVATE_USE_AREA_B_ID { get { if (!_SUPPLEMENTARY_PRIVATE_USE_AREA_B_IDReady) { _SUPPLEMENTARY_PRIVATE_USE_AREA_B_IDContent = SGetField<int>(LocalBridgeClazz, "SUPPLEMENTARY_PRIVATE_USE_AREA_B_ID"); _SUPPLEMENTARY_PRIVATE_USE_AREA_B_IDReady = true; } return _SUPPLEMENTARY_PRIVATE_USE_AREA_B_IDContent; } }
            private static int _SUPPLEMENTARY_PRIVATE_USE_AREA_B_IDContent = default;
            private static bool _SUPPLEMENTARY_PRIVATE_USE_AREA_B_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SUTTON_SIGNWRITING_ID"/>
            /// </summary>
            public static int SUTTON_SIGNWRITING_ID { get { if (!_SUTTON_SIGNWRITING_IDReady) { _SUTTON_SIGNWRITING_IDContent = SGetField<int>(LocalBridgeClazz, "SUTTON_SIGNWRITING_ID"); _SUTTON_SIGNWRITING_IDReady = true; } return _SUTTON_SIGNWRITING_IDContent; } }
            private static int _SUTTON_SIGNWRITING_IDContent = default;
            private static bool _SUTTON_SIGNWRITING_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SYLOTI_NAGRI_ID"/>
            /// </summary>
            public static int SYLOTI_NAGRI_ID { get { if (!_SYLOTI_NAGRI_IDReady) { _SYLOTI_NAGRI_IDContent = SGetField<int>(LocalBridgeClazz, "SYLOTI_NAGRI_ID"); _SYLOTI_NAGRI_IDReady = true; } return _SYLOTI_NAGRI_IDContent; } }
            private static int _SYLOTI_NAGRI_IDContent = default;
            private static bool _SYLOTI_NAGRI_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SYMBOLS_AND_PICTOGRAPHS_EXTENDED_A_ID"/>
            /// </summary>
            public static int SYMBOLS_AND_PICTOGRAPHS_EXTENDED_A_ID { get { if (!_SYMBOLS_AND_PICTOGRAPHS_EXTENDED_A_IDReady) { _SYMBOLS_AND_PICTOGRAPHS_EXTENDED_A_IDContent = SGetField<int>(LocalBridgeClazz, "SYMBOLS_AND_PICTOGRAPHS_EXTENDED_A_ID"); _SYMBOLS_AND_PICTOGRAPHS_EXTENDED_A_IDReady = true; } return _SYMBOLS_AND_PICTOGRAPHS_EXTENDED_A_IDContent; } }
            private static int _SYMBOLS_AND_PICTOGRAPHS_EXTENDED_A_IDContent = default;
            private static bool _SYMBOLS_AND_PICTOGRAPHS_EXTENDED_A_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SYMBOLS_FOR_LEGACY_COMPUTING_ID"/>
            /// </summary>
            public static int SYMBOLS_FOR_LEGACY_COMPUTING_ID { get { if (!_SYMBOLS_FOR_LEGACY_COMPUTING_IDReady) { _SYMBOLS_FOR_LEGACY_COMPUTING_IDContent = SGetField<int>(LocalBridgeClazz, "SYMBOLS_FOR_LEGACY_COMPUTING_ID"); _SYMBOLS_FOR_LEGACY_COMPUTING_IDReady = true; } return _SYMBOLS_FOR_LEGACY_COMPUTING_IDContent; } }
            private static int _SYMBOLS_FOR_LEGACY_COMPUTING_IDContent = default;
            private static bool _SYMBOLS_FOR_LEGACY_COMPUTING_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SYRIAC_ID"/>
            /// </summary>
            public static int SYRIAC_ID { get { if (!_SYRIAC_IDReady) { _SYRIAC_IDContent = SGetField<int>(LocalBridgeClazz, "SYRIAC_ID"); _SYRIAC_IDReady = true; } return _SYRIAC_IDContent; } }
            private static int _SYRIAC_IDContent = default;
            private static bool _SYRIAC_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#SYRIAC_SUPPLEMENT_ID"/>
            /// </summary>
            public static int SYRIAC_SUPPLEMENT_ID { get { if (!_SYRIAC_SUPPLEMENT_IDReady) { _SYRIAC_SUPPLEMENT_IDContent = SGetField<int>(LocalBridgeClazz, "SYRIAC_SUPPLEMENT_ID"); _SYRIAC_SUPPLEMENT_IDReady = true; } return _SYRIAC_SUPPLEMENT_IDContent; } }
            private static int _SYRIAC_SUPPLEMENT_IDContent = default;
            private static bool _SYRIAC_SUPPLEMENT_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#TAGALOG_ID"/>
            /// </summary>
            public static int TAGALOG_ID { get { if (!_TAGALOG_IDReady) { _TAGALOG_IDContent = SGetField<int>(LocalBridgeClazz, "TAGALOG_ID"); _TAGALOG_IDReady = true; } return _TAGALOG_IDContent; } }
            private static int _TAGALOG_IDContent = default;
            private static bool _TAGALOG_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#TAGBANWA_ID"/>
            /// </summary>
            public static int TAGBANWA_ID { get { if (!_TAGBANWA_IDReady) { _TAGBANWA_IDContent = SGetField<int>(LocalBridgeClazz, "TAGBANWA_ID"); _TAGBANWA_IDReady = true; } return _TAGBANWA_IDContent; } }
            private static int _TAGBANWA_IDContent = default;
            private static bool _TAGBANWA_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#TAGS_ID"/>
            /// </summary>
            public static int TAGS_ID { get { if (!_TAGS_IDReady) { _TAGS_IDContent = SGetField<int>(LocalBridgeClazz, "TAGS_ID"); _TAGS_IDReady = true; } return _TAGS_IDContent; } }
            private static int _TAGS_IDContent = default;
            private static bool _TAGS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#TAI_LE_ID"/>
            /// </summary>
            public static int TAI_LE_ID { get { if (!_TAI_LE_IDReady) { _TAI_LE_IDContent = SGetField<int>(LocalBridgeClazz, "TAI_LE_ID"); _TAI_LE_IDReady = true; } return _TAI_LE_IDContent; } }
            private static int _TAI_LE_IDContent = default;
            private static bool _TAI_LE_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#TAI_THAM_ID"/>
            /// </summary>
            public static int TAI_THAM_ID { get { if (!_TAI_THAM_IDReady) { _TAI_THAM_IDContent = SGetField<int>(LocalBridgeClazz, "TAI_THAM_ID"); _TAI_THAM_IDReady = true; } return _TAI_THAM_IDContent; } }
            private static int _TAI_THAM_IDContent = default;
            private static bool _TAI_THAM_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#TAI_VIET_ID"/>
            /// </summary>
            public static int TAI_VIET_ID { get { if (!_TAI_VIET_IDReady) { _TAI_VIET_IDContent = SGetField<int>(LocalBridgeClazz, "TAI_VIET_ID"); _TAI_VIET_IDReady = true; } return _TAI_VIET_IDContent; } }
            private static int _TAI_VIET_IDContent = default;
            private static bool _TAI_VIET_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#TAI_XUAN_JING_SYMBOLS_ID"/>
            /// </summary>
            public static int TAI_XUAN_JING_SYMBOLS_ID { get { if (!_TAI_XUAN_JING_SYMBOLS_IDReady) { _TAI_XUAN_JING_SYMBOLS_IDContent = SGetField<int>(LocalBridgeClazz, "TAI_XUAN_JING_SYMBOLS_ID"); _TAI_XUAN_JING_SYMBOLS_IDReady = true; } return _TAI_XUAN_JING_SYMBOLS_IDContent; } }
            private static int _TAI_XUAN_JING_SYMBOLS_IDContent = default;
            private static bool _TAI_XUAN_JING_SYMBOLS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#TAKRI_ID"/>
            /// </summary>
            public static int TAKRI_ID { get { if (!_TAKRI_IDReady) { _TAKRI_IDContent = SGetField<int>(LocalBridgeClazz, "TAKRI_ID"); _TAKRI_IDReady = true; } return _TAKRI_IDContent; } }
            private static int _TAKRI_IDContent = default;
            private static bool _TAKRI_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#TAMIL_ID"/>
            /// </summary>
            public static int TAMIL_ID { get { if (!_TAMIL_IDReady) { _TAMIL_IDContent = SGetField<int>(LocalBridgeClazz, "TAMIL_ID"); _TAMIL_IDReady = true; } return _TAMIL_IDContent; } }
            private static int _TAMIL_IDContent = default;
            private static bool _TAMIL_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#TAMIL_SUPPLEMENT_ID"/>
            /// </summary>
            public static int TAMIL_SUPPLEMENT_ID { get { if (!_TAMIL_SUPPLEMENT_IDReady) { _TAMIL_SUPPLEMENT_IDContent = SGetField<int>(LocalBridgeClazz, "TAMIL_SUPPLEMENT_ID"); _TAMIL_SUPPLEMENT_IDReady = true; } return _TAMIL_SUPPLEMENT_IDContent; } }
            private static int _TAMIL_SUPPLEMENT_IDContent = default;
            private static bool _TAMIL_SUPPLEMENT_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#TANGSA_ID"/>
            /// </summary>
            public static int TANGSA_ID { get { if (!_TANGSA_IDReady) { _TANGSA_IDContent = SGetField<int>(LocalBridgeClazz, "TANGSA_ID"); _TANGSA_IDReady = true; } return _TANGSA_IDContent; } }
            private static int _TANGSA_IDContent = default;
            private static bool _TANGSA_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#TANGUT_COMPONENTS_ID"/>
            /// </summary>
            public static int TANGUT_COMPONENTS_ID { get { if (!_TANGUT_COMPONENTS_IDReady) { _TANGUT_COMPONENTS_IDContent = SGetField<int>(LocalBridgeClazz, "TANGUT_COMPONENTS_ID"); _TANGUT_COMPONENTS_IDReady = true; } return _TANGUT_COMPONENTS_IDContent; } }
            private static int _TANGUT_COMPONENTS_IDContent = default;
            private static bool _TANGUT_COMPONENTS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#TANGUT_ID"/>
            /// </summary>
            public static int TANGUT_ID { get { if (!_TANGUT_IDReady) { _TANGUT_IDContent = SGetField<int>(LocalBridgeClazz, "TANGUT_ID"); _TANGUT_IDReady = true; } return _TANGUT_IDContent; } }
            private static int _TANGUT_IDContent = default;
            private static bool _TANGUT_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#TANGUT_SUPPLEMENT_ID"/>
            /// </summary>
            public static int TANGUT_SUPPLEMENT_ID { get { if (!_TANGUT_SUPPLEMENT_IDReady) { _TANGUT_SUPPLEMENT_IDContent = SGetField<int>(LocalBridgeClazz, "TANGUT_SUPPLEMENT_ID"); _TANGUT_SUPPLEMENT_IDReady = true; } return _TANGUT_SUPPLEMENT_IDContent; } }
            private static int _TANGUT_SUPPLEMENT_IDContent = default;
            private static bool _TANGUT_SUPPLEMENT_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#TELUGU_ID"/>
            /// </summary>
            public static int TELUGU_ID { get { if (!_TELUGU_IDReady) { _TELUGU_IDContent = SGetField<int>(LocalBridgeClazz, "TELUGU_ID"); _TELUGU_IDReady = true; } return _TELUGU_IDContent; } }
            private static int _TELUGU_IDContent = default;
            private static bool _TELUGU_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#THAANA_ID"/>
            /// </summary>
            public static int THAANA_ID { get { if (!_THAANA_IDReady) { _THAANA_IDContent = SGetField<int>(LocalBridgeClazz, "THAANA_ID"); _THAANA_IDReady = true; } return _THAANA_IDContent; } }
            private static int _THAANA_IDContent = default;
            private static bool _THAANA_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#THAI_ID"/>
            /// </summary>
            public static int THAI_ID { get { if (!_THAI_IDReady) { _THAI_IDContent = SGetField<int>(LocalBridgeClazz, "THAI_ID"); _THAI_IDReady = true; } return _THAI_IDContent; } }
            private static int _THAI_IDContent = default;
            private static bool _THAI_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#TIBETAN_ID"/>
            /// </summary>
            public static int TIBETAN_ID { get { if (!_TIBETAN_IDReady) { _TIBETAN_IDContent = SGetField<int>(LocalBridgeClazz, "TIBETAN_ID"); _TIBETAN_IDReady = true; } return _TIBETAN_IDContent; } }
            private static int _TIBETAN_IDContent = default;
            private static bool _TIBETAN_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#TIFINAGH_ID"/>
            /// </summary>
            public static int TIFINAGH_ID { get { if (!_TIFINAGH_IDReady) { _TIFINAGH_IDContent = SGetField<int>(LocalBridgeClazz, "TIFINAGH_ID"); _TIFINAGH_IDReady = true; } return _TIFINAGH_IDContent; } }
            private static int _TIFINAGH_IDContent = default;
            private static bool _TIFINAGH_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#TIRHUTA_ID"/>
            /// </summary>
            public static int TIRHUTA_ID { get { if (!_TIRHUTA_IDReady) { _TIRHUTA_IDContent = SGetField<int>(LocalBridgeClazz, "TIRHUTA_ID"); _TIRHUTA_IDReady = true; } return _TIRHUTA_IDContent; } }
            private static int _TIRHUTA_IDContent = default;
            private static bool _TIRHUTA_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#TOTO_ID"/>
            /// </summary>
            public static int TOTO_ID { get { if (!_TOTO_IDReady) { _TOTO_IDContent = SGetField<int>(LocalBridgeClazz, "TOTO_ID"); _TOTO_IDReady = true; } return _TOTO_IDContent; } }
            private static int _TOTO_IDContent = default;
            private static bool _TOTO_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#TRANSPORT_AND_MAP_SYMBOLS_ID"/>
            /// </summary>
            public static int TRANSPORT_AND_MAP_SYMBOLS_ID { get { if (!_TRANSPORT_AND_MAP_SYMBOLS_IDReady) { _TRANSPORT_AND_MAP_SYMBOLS_IDContent = SGetField<int>(LocalBridgeClazz, "TRANSPORT_AND_MAP_SYMBOLS_ID"); _TRANSPORT_AND_MAP_SYMBOLS_IDReady = true; } return _TRANSPORT_AND_MAP_SYMBOLS_IDContent; } }
            private static int _TRANSPORT_AND_MAP_SYMBOLS_IDContent = default;
            private static bool _TRANSPORT_AND_MAP_SYMBOLS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#UGARITIC_ID"/>
            /// </summary>
            public static int UGARITIC_ID { get { if (!_UGARITIC_IDReady) { _UGARITIC_IDContent = SGetField<int>(LocalBridgeClazz, "UGARITIC_ID"); _UGARITIC_IDReady = true; } return _UGARITIC_IDContent; } }
            private static int _UGARITIC_IDContent = default;
            private static bool _UGARITIC_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED_A_ID"/>
            /// </summary>
            public static int UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED_A_ID { get { if (!_UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED_A_IDReady) { _UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED_A_IDContent = SGetField<int>(LocalBridgeClazz, "UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED_A_ID"); _UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED_A_IDReady = true; } return _UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED_A_IDContent; } }
            private static int _UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED_A_IDContent = default;
            private static bool _UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED_A_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED_ID"/>
            /// </summary>
            public static int UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED_ID { get { if (!_UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED_IDReady) { _UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED_IDContent = SGetField<int>(LocalBridgeClazz, "UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED_ID"); _UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED_IDReady = true; } return _UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED_IDContent; } }
            private static int _UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED_IDContent = default;
            private static bool _UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_ID"/>
            /// </summary>
            public static int UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_ID { get { if (!_UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_IDReady) { _UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_IDContent = SGetField<int>(LocalBridgeClazz, "UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_ID"); _UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_IDReady = true; } return _UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_IDContent; } }
            private static int _UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_IDContent = default;
            private static bool _UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#VAI_ID"/>
            /// </summary>
            public static int VAI_ID { get { if (!_VAI_IDReady) { _VAI_IDContent = SGetField<int>(LocalBridgeClazz, "VAI_ID"); _VAI_IDReady = true; } return _VAI_IDContent; } }
            private static int _VAI_IDContent = default;
            private static bool _VAI_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#VARIATION_SELECTORS_ID"/>
            /// </summary>
            public static int VARIATION_SELECTORS_ID { get { if (!_VARIATION_SELECTORS_IDReady) { _VARIATION_SELECTORS_IDContent = SGetField<int>(LocalBridgeClazz, "VARIATION_SELECTORS_ID"); _VARIATION_SELECTORS_IDReady = true; } return _VARIATION_SELECTORS_IDContent; } }
            private static int _VARIATION_SELECTORS_IDContent = default;
            private static bool _VARIATION_SELECTORS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#VARIATION_SELECTORS_SUPPLEMENT_ID"/>
            /// </summary>
            public static int VARIATION_SELECTORS_SUPPLEMENT_ID { get { if (!_VARIATION_SELECTORS_SUPPLEMENT_IDReady) { _VARIATION_SELECTORS_SUPPLEMENT_IDContent = SGetField<int>(LocalBridgeClazz, "VARIATION_SELECTORS_SUPPLEMENT_ID"); _VARIATION_SELECTORS_SUPPLEMENT_IDReady = true; } return _VARIATION_SELECTORS_SUPPLEMENT_IDContent; } }
            private static int _VARIATION_SELECTORS_SUPPLEMENT_IDContent = default;
            private static bool _VARIATION_SELECTORS_SUPPLEMENT_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#VEDIC_EXTENSIONS_ID"/>
            /// </summary>
            public static int VEDIC_EXTENSIONS_ID { get { if (!_VEDIC_EXTENSIONS_IDReady) { _VEDIC_EXTENSIONS_IDContent = SGetField<int>(LocalBridgeClazz, "VEDIC_EXTENSIONS_ID"); _VEDIC_EXTENSIONS_IDReady = true; } return _VEDIC_EXTENSIONS_IDContent; } }
            private static int _VEDIC_EXTENSIONS_IDContent = default;
            private static bool _VEDIC_EXTENSIONS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#VERTICAL_FORMS_ID"/>
            /// </summary>
            public static int VERTICAL_FORMS_ID { get { if (!_VERTICAL_FORMS_IDReady) { _VERTICAL_FORMS_IDContent = SGetField<int>(LocalBridgeClazz, "VERTICAL_FORMS_ID"); _VERTICAL_FORMS_IDReady = true; } return _VERTICAL_FORMS_IDContent; } }
            private static int _VERTICAL_FORMS_IDContent = default;
            private static bool _VERTICAL_FORMS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#VITHKUQI_ID"/>
            /// </summary>
            public static int VITHKUQI_ID { get { if (!_VITHKUQI_IDReady) { _VITHKUQI_IDContent = SGetField<int>(LocalBridgeClazz, "VITHKUQI_ID"); _VITHKUQI_IDReady = true; } return _VITHKUQI_IDContent; } }
            private static int _VITHKUQI_IDContent = default;
            private static bool _VITHKUQI_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#WANCHO_ID"/>
            /// </summary>
            public static int WANCHO_ID { get { if (!_WANCHO_IDReady) { _WANCHO_IDContent = SGetField<int>(LocalBridgeClazz, "WANCHO_ID"); _WANCHO_IDReady = true; } return _WANCHO_IDContent; } }
            private static int _WANCHO_IDContent = default;
            private static bool _WANCHO_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#WARANG_CITI_ID"/>
            /// </summary>
            public static int WARANG_CITI_ID { get { if (!_WARANG_CITI_IDReady) { _WARANG_CITI_IDContent = SGetField<int>(LocalBridgeClazz, "WARANG_CITI_ID"); _WARANG_CITI_IDReady = true; } return _WARANG_CITI_IDContent; } }
            private static int _WARANG_CITI_IDContent = default;
            private static bool _WARANG_CITI_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#YEZIDI_ID"/>
            /// </summary>
            public static int YEZIDI_ID { get { if (!_YEZIDI_IDReady) { _YEZIDI_IDContent = SGetField<int>(LocalBridgeClazz, "YEZIDI_ID"); _YEZIDI_IDReady = true; } return _YEZIDI_IDContent; } }
            private static int _YEZIDI_IDContent = default;
            private static bool _YEZIDI_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#YI_RADICALS_ID"/>
            /// </summary>
            public static int YI_RADICALS_ID { get { if (!_YI_RADICALS_IDReady) { _YI_RADICALS_IDContent = SGetField<int>(LocalBridgeClazz, "YI_RADICALS_ID"); _YI_RADICALS_IDReady = true; } return _YI_RADICALS_IDContent; } }
            private static int _YI_RADICALS_IDContent = default;
            private static bool _YI_RADICALS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#YI_SYLLABLES_ID"/>
            /// </summary>
            public static int YI_SYLLABLES_ID { get { if (!_YI_SYLLABLES_IDReady) { _YI_SYLLABLES_IDContent = SGetField<int>(LocalBridgeClazz, "YI_SYLLABLES_ID"); _YI_SYLLABLES_IDReady = true; } return _YI_SYLLABLES_IDContent; } }
            private static int _YI_SYLLABLES_IDContent = default;
            private static bool _YI_SYLLABLES_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#YIJING_HEXAGRAM_SYMBOLS_ID"/>
            /// </summary>
            public static int YIJING_HEXAGRAM_SYMBOLS_ID { get { if (!_YIJING_HEXAGRAM_SYMBOLS_IDReady) { _YIJING_HEXAGRAM_SYMBOLS_IDContent = SGetField<int>(LocalBridgeClazz, "YIJING_HEXAGRAM_SYMBOLS_ID"); _YIJING_HEXAGRAM_SYMBOLS_IDReady = true; } return _YIJING_HEXAGRAM_SYMBOLS_IDContent; } }
            private static int _YIJING_HEXAGRAM_SYMBOLS_IDContent = default;
            private static bool _YIJING_HEXAGRAM_SYMBOLS_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ZANABAZAR_SQUARE_ID"/>
            /// </summary>
            public static int ZANABAZAR_SQUARE_ID { get { if (!_ZANABAZAR_SQUARE_IDReady) { _ZANABAZAR_SQUARE_IDContent = SGetField<int>(LocalBridgeClazz, "ZANABAZAR_SQUARE_ID"); _ZANABAZAR_SQUARE_IDReady = true; } return _ZANABAZAR_SQUARE_IDContent; } }
            private static int _ZANABAZAR_SQUARE_IDContent = default;
            private static bool _ZANABAZAR_SQUARE_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#ZNAMENNY_MUSICAL_NOTATION_ID"/>
            /// </summary>
            public static int ZNAMENNY_MUSICAL_NOTATION_ID { get { if (!_ZNAMENNY_MUSICAL_NOTATION_IDReady) { _ZNAMENNY_MUSICAL_NOTATION_IDContent = SGetField<int>(LocalBridgeClazz, "ZNAMENNY_MUSICAL_NOTATION_ID"); _ZNAMENNY_MUSICAL_NOTATION_IDReady = true; } return _ZNAMENNY_MUSICAL_NOTATION_IDContent; } }
            private static int _ZNAMENNY_MUSICAL_NOTATION_IDContent = default;
            private static bool _ZNAMENNY_MUSICAL_NOTATION_IDReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#forName(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Android.Icu.Lang.UCharacter.UnicodeBlock"/></returns>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock ForName(Java.Lang.String arg0)
            {
                return SExecuteWithSignature<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "forName", "(Ljava/lang/String;)Landroid/icu/lang/UCharacter$UnicodeBlock;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#getInstance(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <returns><see cref="Android.Icu.Lang.UCharacter.UnicodeBlock"/></returns>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock GetInstance(int arg0)
            {
                return SExecuteWithSignature<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "getInstance", "(I)Landroid/icu/lang/UCharacter$UnicodeBlock;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#of(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <returns><see cref="Android.Icu.Lang.UCharacter.UnicodeBlock"/></returns>
            public static Android.Icu.Lang.UCharacter.UnicodeBlock Of(int arg0)
            {
                return SExecuteWithSignature<Android.Icu.Lang.UCharacter.UnicodeBlock>(LocalBridgeClazz, "of", "(I)Landroid/icu/lang/UCharacter$UnicodeBlock;", arg0);
            }

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html#getID()"/>
            /// </summary>
            /// <returns><see cref="int"/></returns>
            public int GetID()
            {
                return IExecuteWithSignature<int>("getID", "()I");
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region VerticalOrientation
        public partial class VerticalOrientation
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.VerticalOrientation.html#ROTATED"/>
            /// </summary>
            public static int ROTATED { get { if (!_ROTATEDReady) { _ROTATEDContent = SGetField<int>(LocalBridgeClazz, "ROTATED"); _ROTATEDReady = true; } return _ROTATEDContent; } }
            private static int _ROTATEDContent = default;
            private static bool _ROTATEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.VerticalOrientation.html#TRANSFORMED_ROTATED"/>
            /// </summary>
            public static int TRANSFORMED_ROTATED { get { if (!_TRANSFORMED_ROTATEDReady) { _TRANSFORMED_ROTATEDContent = SGetField<int>(LocalBridgeClazz, "TRANSFORMED_ROTATED"); _TRANSFORMED_ROTATEDReady = true; } return _TRANSFORMED_ROTATEDContent; } }
            private static int _TRANSFORMED_ROTATEDContent = default;
            private static bool _TRANSFORMED_ROTATEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.VerticalOrientation.html#TRANSFORMED_UPRIGHT"/>
            /// </summary>
            public static int TRANSFORMED_UPRIGHT { get { if (!_TRANSFORMED_UPRIGHTReady) { _TRANSFORMED_UPRIGHTContent = SGetField<int>(LocalBridgeClazz, "TRANSFORMED_UPRIGHT"); _TRANSFORMED_UPRIGHTReady = true; } return _TRANSFORMED_UPRIGHTContent; } }
            private static int _TRANSFORMED_UPRIGHTContent = default;
            private static bool _TRANSFORMED_UPRIGHTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.VerticalOrientation.html#UPRIGHT"/>
            /// </summary>
            public static int UPRIGHT { get { if (!_UPRIGHTReady) { _UPRIGHTContent = SGetField<int>(LocalBridgeClazz, "UPRIGHT"); _UPRIGHTReady = true; } return _UPRIGHTContent; } }
            private static int _UPRIGHTContent = default;
            private static bool _UPRIGHTReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region WordBreak
        public partial class WordBreak
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.WordBreak.html#ALETTER"/>
            /// </summary>
            public static int ALETTER { get { if (!_ALETTERReady) { _ALETTERContent = SGetField<int>(LocalBridgeClazz, "ALETTER"); _ALETTERReady = true; } return _ALETTERContent; } }
            private static int _ALETTERContent = default;
            private static bool _ALETTERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.WordBreak.html#CR"/>
            /// </summary>
            public static int CR { get { if (!_CRReady) { _CRContent = SGetField<int>(LocalBridgeClazz, "CR"); _CRReady = true; } return _CRContent; } }
            private static int _CRContent = default;
            private static bool _CRReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.WordBreak.html#DOUBLE_QUOTE"/>
            /// </summary>
            public static int DOUBLE_QUOTE { get { if (!_DOUBLE_QUOTEReady) { _DOUBLE_QUOTEContent = SGetField<int>(LocalBridgeClazz, "DOUBLE_QUOTE"); _DOUBLE_QUOTEReady = true; } return _DOUBLE_QUOTEContent; } }
            private static int _DOUBLE_QUOTEContent = default;
            private static bool _DOUBLE_QUOTEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.WordBreak.html#E_BASE"/>
            /// </summary>
            public static int E_BASE { get { if (!_E_BASEReady) { _E_BASEContent = SGetField<int>(LocalBridgeClazz, "E_BASE"); _E_BASEReady = true; } return _E_BASEContent; } }
            private static int _E_BASEContent = default;
            private static bool _E_BASEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.WordBreak.html#E_BASE_GAZ"/>
            /// </summary>
            public static int E_BASE_GAZ { get { if (!_E_BASE_GAZReady) { _E_BASE_GAZContent = SGetField<int>(LocalBridgeClazz, "E_BASE_GAZ"); _E_BASE_GAZReady = true; } return _E_BASE_GAZContent; } }
            private static int _E_BASE_GAZContent = default;
            private static bool _E_BASE_GAZReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.WordBreak.html#E_MODIFIER"/>
            /// </summary>
            public static int E_MODIFIER { get { if (!_E_MODIFIERReady) { _E_MODIFIERContent = SGetField<int>(LocalBridgeClazz, "E_MODIFIER"); _E_MODIFIERReady = true; } return _E_MODIFIERContent; } }
            private static int _E_MODIFIERContent = default;
            private static bool _E_MODIFIERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.WordBreak.html#EXTEND"/>
            /// </summary>
            public static int EXTEND { get { if (!_EXTENDReady) { _EXTENDContent = SGetField<int>(LocalBridgeClazz, "EXTEND"); _EXTENDReady = true; } return _EXTENDContent; } }
            private static int _EXTENDContent = default;
            private static bool _EXTENDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.WordBreak.html#EXTENDNUMLET"/>
            /// </summary>
            public static int EXTENDNUMLET { get { if (!_EXTENDNUMLETReady) { _EXTENDNUMLETContent = SGetField<int>(LocalBridgeClazz, "EXTENDNUMLET"); _EXTENDNUMLETReady = true; } return _EXTENDNUMLETContent; } }
            private static int _EXTENDNUMLETContent = default;
            private static bool _EXTENDNUMLETReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.WordBreak.html#FORMAT"/>
            /// </summary>
            public static int FORMAT { get { if (!_FORMATReady) { _FORMATContent = SGetField<int>(LocalBridgeClazz, "FORMAT"); _FORMATReady = true; } return _FORMATContent; } }
            private static int _FORMATContent = default;
            private static bool _FORMATReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.WordBreak.html#GLUE_AFTER_ZWJ"/>
            /// </summary>
            public static int GLUE_AFTER_ZWJ { get { if (!_GLUE_AFTER_ZWJReady) { _GLUE_AFTER_ZWJContent = SGetField<int>(LocalBridgeClazz, "GLUE_AFTER_ZWJ"); _GLUE_AFTER_ZWJReady = true; } return _GLUE_AFTER_ZWJContent; } }
            private static int _GLUE_AFTER_ZWJContent = default;
            private static bool _GLUE_AFTER_ZWJReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.WordBreak.html#HEBREW_LETTER"/>
            /// </summary>
            public static int HEBREW_LETTER { get { if (!_HEBREW_LETTERReady) { _HEBREW_LETTERContent = SGetField<int>(LocalBridgeClazz, "HEBREW_LETTER"); _HEBREW_LETTERReady = true; } return _HEBREW_LETTERContent; } }
            private static int _HEBREW_LETTERContent = default;
            private static bool _HEBREW_LETTERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.WordBreak.html#KATAKANA"/>
            /// </summary>
            public static int KATAKANA { get { if (!_KATAKANAReady) { _KATAKANAContent = SGetField<int>(LocalBridgeClazz, "KATAKANA"); _KATAKANAReady = true; } return _KATAKANAContent; } }
            private static int _KATAKANAContent = default;
            private static bool _KATAKANAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.WordBreak.html#LF"/>
            /// </summary>
            public static int LF { get { if (!_LFReady) { _LFContent = SGetField<int>(LocalBridgeClazz, "LF"); _LFReady = true; } return _LFContent; } }
            private static int _LFContent = default;
            private static bool _LFReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.WordBreak.html#MIDLETTER"/>
            /// </summary>
            public static int MIDLETTER { get { if (!_MIDLETTERReady) { _MIDLETTERContent = SGetField<int>(LocalBridgeClazz, "MIDLETTER"); _MIDLETTERReady = true; } return _MIDLETTERContent; } }
            private static int _MIDLETTERContent = default;
            private static bool _MIDLETTERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.WordBreak.html#MIDNUM"/>
            /// </summary>
            public static int MIDNUM { get { if (!_MIDNUMReady) { _MIDNUMContent = SGetField<int>(LocalBridgeClazz, "MIDNUM"); _MIDNUMReady = true; } return _MIDNUMContent; } }
            private static int _MIDNUMContent = default;
            private static bool _MIDNUMReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.WordBreak.html#MIDNUMLET"/>
            /// </summary>
            public static int MIDNUMLET { get { if (!_MIDNUMLETReady) { _MIDNUMLETContent = SGetField<int>(LocalBridgeClazz, "MIDNUMLET"); _MIDNUMLETReady = true; } return _MIDNUMLETContent; } }
            private static int _MIDNUMLETContent = default;
            private static bool _MIDNUMLETReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.WordBreak.html#NEWLINE"/>
            /// </summary>
            public static int NEWLINE { get { if (!_NEWLINEReady) { _NEWLINEContent = SGetField<int>(LocalBridgeClazz, "NEWLINE"); _NEWLINEReady = true; } return _NEWLINEContent; } }
            private static int _NEWLINEContent = default;
            private static bool _NEWLINEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.WordBreak.html#NUMERIC"/>
            /// </summary>
            public static int NUMERIC { get { if (!_NUMERICReady) { _NUMERICContent = SGetField<int>(LocalBridgeClazz, "NUMERIC"); _NUMERICReady = true; } return _NUMERICContent; } }
            private static int _NUMERICContent = default;
            private static bool _NUMERICReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.WordBreak.html#OTHER"/>
            /// </summary>
            public static int OTHER { get { if (!_OTHERReady) { _OTHERContent = SGetField<int>(LocalBridgeClazz, "OTHER"); _OTHERReady = true; } return _OTHERContent; } }
            private static int _OTHERContent = default;
            private static bool _OTHERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.WordBreak.html#REGIONAL_INDICATOR"/>
            /// </summary>
            public static int REGIONAL_INDICATOR { get { if (!_REGIONAL_INDICATORReady) { _REGIONAL_INDICATORContent = SGetField<int>(LocalBridgeClazz, "REGIONAL_INDICATOR"); _REGIONAL_INDICATORReady = true; } return _REGIONAL_INDICATORContent; } }
            private static int _REGIONAL_INDICATORContent = default;
            private static bool _REGIONAL_INDICATORReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.WordBreak.html#SINGLE_QUOTE"/>
            /// </summary>
            public static int SINGLE_QUOTE { get { if (!_SINGLE_QUOTEReady) { _SINGLE_QUOTEContent = SGetField<int>(LocalBridgeClazz, "SINGLE_QUOTE"); _SINGLE_QUOTEReady = true; } return _SINGLE_QUOTEContent; } }
            private static int _SINGLE_QUOTEContent = default;
            private static bool _SINGLE_QUOTEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.WordBreak.html#WSEGSPACE"/>
            /// </summary>
            public static int WSEGSPACE { get { if (!_WSEGSPACEReady) { _WSEGSPACEContent = SGetField<int>(LocalBridgeClazz, "WSEGSPACE"); _WSEGSPACEReady = true; } return _WSEGSPACEContent; } }
            private static int _WSEGSPACEContent = default;
            private static bool _WSEGSPACEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/icu/lang/UCharacter.WordBreak.html#ZWJ"/>
            /// </summary>
            public static int ZWJ { get { if (!_ZWJReady) { _ZWJContent = SGetField<int>(LocalBridgeClazz, "ZWJ"); _ZWJReady = true; } return _ZWJContent; } }
            private static int _ZWJContent = default;
            private static bool _ZWJReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}