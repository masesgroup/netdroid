/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.9.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Database.Sqlite
{
    #region SQLiteTransactionListener declaration
    /// <summary>
    /// <see href="https://developer.android.com/reference/android/database/sqlite/SQLiteTransactionListener.html"/>
    /// </summary>
    public partial class SQLiteTransactionListener : MASES.JCOBridge.C2JBridge.JVMBridgeListener
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public SQLiteTransactionListener() { InitializeHandlers(); }
    
        const string _bridgeClassName = "org.mases.netdroid.generated.android.database.sqlite.SQLiteTransactionListener";
        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
        
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeListener_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
    
    
        // TODO: complete the class
    
    }
    #endregion
    
    #region SQLiteTransactionListenerDirect declaration
    /// <summary>
    /// Direct override of <see cref="SQLiteTransactionListener"/> or its generic type if there is one
    /// </summary>
    public partial class SQLiteTransactionListenerDirect : SQLiteTransactionListener
    {
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeListener_AutoInit.htm"/>
        /// </summary>
        public override bool AutoInit => false;
    
        /// <inheritdoc />
        protected override void InitializeHandlers() { }
    
        const string _bridgeClassName = "android.database.sqlite.SQLiteTransactionListener";
        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
    
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeListener_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => true;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => true;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;
    }
    #endregion

    #region ISQLiteTransactionListener
    /// <summary>
    /// .NET interface for org.mases.netdroid.generated.android.database.sqlite.SQLiteTransactionListener implementing <see href="https://developer.android.com/reference/android/database/sqlite/SQLiteTransactionListener.html"/>
    /// </summary>
    public partial interface ISQLiteTransactionListener
    {
        #region Instance methods
    
        #endregion
    
        #region Nested classes
    
        #endregion
    
        // TODO: complete the class
    }
    #endregion

    #region SQLiteTransactionListener implementation
    public partial class SQLiteTransactionListener : Android.Database.Sqlite.ISQLiteTransactionListener
    {
        #region Constructors
    
        #endregion
    
        #region Class/Interface conversion operators
    
        #endregion
    
        #region Fields
    
        #endregion
    
        #region Static methods
    
        #endregion
    
        #region Instance methods
        /// <summary>
        /// Handlers initializer for <see cref="SQLiteTransactionListener"/>
        /// </summary>
        protected virtual void InitializeHandlers()
        {
            AddEventHandler("onBegin", new global::System.EventHandler<CLRListenerEventArgs<CLREventData<MASES.JNet.Specific.JNetEventResult>>>(OnBeginEventHandler));
            AddEventHandler("onCommit", new global::System.EventHandler<CLRListenerEventArgs<CLREventData<MASES.JNet.Specific.JNetEventResult>>>(OnCommitEventHandler));
            AddEventHandler("onRollback", new global::System.EventHandler<CLRListenerEventArgs<CLREventData<MASES.JNet.Specific.JNetEventResult>>>(OnRollbackEventHandler));

        }
        
        /// <summary>
        /// Handler for <see href="https://developer.android.com/reference/android/database/sqlite/SQLiteTransactionListener.html#onBegin()"/>
        /// </summary>
        /// <remarks>If <see cref="OnOnBegin"/> has a value it takes precedence over corresponding class method</remarks>
        public global::System.Action OnOnBegin { get; set; } = null;
        
        bool hasOverrideOnBegin = true;
        void OnBeginEventHandler(object sender, CLRListenerEventArgs<CLREventData<MASES.JNet.Specific.JNetEventResult>> data)
        {
            hasOverrideOnBegin = true;
            var methodToExecute = (OnOnBegin != null) ? OnOnBegin : OnBegin;
            methodToExecute.Invoke();
            data.EventData.TypedEventData.HasOverride = hasOverrideOnBegin;
        }
        
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/sqlite/SQLiteTransactionListener.html#onBegin()"/>
        /// </summary>
        public virtual void OnBegin()
        {
            hasOverrideOnBegin = false;
        }
        
        /// <summary>
        /// Handler for <see href="https://developer.android.com/reference/android/database/sqlite/SQLiteTransactionListener.html#onCommit()"/>
        /// </summary>
        /// <remarks>If <see cref="OnOnCommit"/> has a value it takes precedence over corresponding class method</remarks>
        public global::System.Action OnOnCommit { get; set; } = null;
        
        bool hasOverrideOnCommit = true;
        void OnCommitEventHandler(object sender, CLRListenerEventArgs<CLREventData<MASES.JNet.Specific.JNetEventResult>> data)
        {
            hasOverrideOnCommit = true;
            var methodToExecute = (OnOnCommit != null) ? OnOnCommit : OnCommit;
            methodToExecute.Invoke();
            data.EventData.TypedEventData.HasOverride = hasOverrideOnCommit;
        }
        
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/sqlite/SQLiteTransactionListener.html#onCommit()"/>
        /// </summary>
        public virtual void OnCommit()
        {
            hasOverrideOnCommit = false;
        }
        
        /// <summary>
        /// Handler for <see href="https://developer.android.com/reference/android/database/sqlite/SQLiteTransactionListener.html#onRollback()"/>
        /// </summary>
        /// <remarks>If <see cref="OnOnRollback"/> has a value it takes precedence over corresponding class method</remarks>
        public global::System.Action OnOnRollback { get; set; } = null;
        
        bool hasOverrideOnRollback = true;
        void OnRollbackEventHandler(object sender, CLRListenerEventArgs<CLREventData<MASES.JNet.Specific.JNetEventResult>> data)
        {
            hasOverrideOnRollback = true;
            var methodToExecute = (OnOnRollback != null) ? OnOnRollback : OnRollback;
            methodToExecute.Invoke();
            data.EventData.TypedEventData.HasOverride = hasOverrideOnRollback;
        }
        
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/sqlite/SQLiteTransactionListener.html#onRollback()"/>
        /// </summary>
        public virtual void OnRollback()
        {
            hasOverrideOnRollback = false;
        }
    
        #endregion
    
        #region Nested classes
    
        #endregion
    
        // TODO: complete the class
    }
    #endregion

    #region SQLiteTransactionListenerDirect implementation
    public partial class SQLiteTransactionListenerDirect : Android.Database.Sqlite.ISQLiteTransactionListener
    {
        #region Constructors
    
        #endregion
    
        #region Class/Interface conversion operators
    
        #endregion
    
        #region Fields
    
        #endregion
    
        #region Static methods
    
        #endregion
    
        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/sqlite/SQLiteTransactionListener.html#onBegin()"/>
        /// </summary>
        public override void OnBegin()
        {
            IExecuteWithSignature("onBegin", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/sqlite/SQLiteTransactionListener.html#onCommit()"/>
        /// </summary>
        public override void OnCommit()
        {
            IExecuteWithSignature("onCommit", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/sqlite/SQLiteTransactionListener.html#onRollback()"/>
        /// </summary>
        public override void OnRollback()
        {
            IExecuteWithSignature("onRollback", "()V");
        }
    
        #endregion
    
        #region Nested classes
    
        #endregion
    
        // TODO: complete the class
    }
    #endregion
}