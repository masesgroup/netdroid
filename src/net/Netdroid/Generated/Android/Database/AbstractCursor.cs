/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.1.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Database
{
    #region AbstractCursor
    public partial class AbstractCursor
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#isNull(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool IsNull(int arg0)
        {
            return IExecuteWithSignature<bool>("isNull", "(I)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#getDouble(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="double"/></returns>
        public double GetDouble(int arg0)
        {
            return IExecuteWithSignature<double>("getDouble", "(I)D", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#getFloat(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="float"/></returns>
        public float GetFloat(int arg0)
        {
            return IExecuteWithSignature<float>("getFloat", "(I)F", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#getCount()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetCount()
        {
            return IExecuteWithSignature<int>("getCount", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#getInt(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public int GetInt(int arg0)
        {
            return IExecuteWithSignature<int>("getInt", "(I)I", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#getString(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetString(int arg0)
        {
            return IExecuteWithSignature<Java.Lang.String>("getString", "(I)Ljava/lang/String;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#getColumnNames()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String[] GetColumnNames()
        {
            return IExecuteWithSignatureArray<Java.Lang.String>("getColumnNames", "()[Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#getLong(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="long"/></returns>
        public long GetLong(int arg0)
        {
            return IExecuteWithSignature<long>("getLong", "(I)J", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#getShort(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="short"/></returns>
        public short GetShort(int arg0)
        {
            return IExecuteWithSignature<short>("getShort", "(I)S", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#getWindow()"/>
        /// </summary>
        /// <returns><see cref="Android.Database.CursorWindow"/></returns>
        public Android.Database.CursorWindow GetWindow()
        {
            return IExecuteWithSignature<Android.Database.CursorWindow>("getWindow", "()Landroid/database/CursorWindow;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#getNotificationUri()"/>
        /// </summary>
        /// <returns><see cref="Android.Net.Uri"/></returns>
        public Android.Net.Uri GetNotificationUri()
        {
            return IExecuteWithSignature<Android.Net.Uri>("getNotificationUri", "()Landroid/net/Uri;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#getExtras()"/>
        /// </summary>
        /// <returns><see cref="Android.Os.Bundle"/></returns>
        public Android.Os.Bundle GetExtras()
        {
            return IExecuteWithSignature<Android.Os.Bundle>("getExtras", "()Landroid/os/Bundle;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#respond(android.os.Bundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.Bundle"/></param>
        /// <returns><see cref="Android.Os.Bundle"/></returns>
        public Android.Os.Bundle Respond(Android.Os.Bundle arg0)
        {
            return IExecuteWithSignature<Android.Os.Bundle>("respond", "(Landroid/os/Bundle;)Landroid/os/Bundle;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#getWantsAllOnMoveCalls()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool GetWantsAllOnMoveCalls()
        {
            return IExecuteWithSignature<bool>("getWantsAllOnMoveCalls", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#isClosed()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsClosed()
        {
            return IExecuteWithSignature<bool>("isClosed", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#onMove(int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool OnMove(int arg0, int arg1)
        {
            return IExecute<bool>("onMove", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#requery()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool Requery()
        {
            return IExecuteWithSignature<bool>("requery", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#getBlob(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="byte"/></returns>
        public byte[] GetBlob(int arg0)
        {
            return IExecuteWithSignatureArray<byte>("getBlob", "(I)[B", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#isAfterLast()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsAfterLast()
        {
            return IExecuteWithSignature<bool>("isAfterLast", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#isBeforeFirst()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsBeforeFirst()
        {
            return IExecuteWithSignature<bool>("isBeforeFirst", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#isFirst()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsFirst()
        {
            return IExecuteWithSignature<bool>("isFirst", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#isLast()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsLast()
        {
            return IExecuteWithSignature<bool>("isLast", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#move(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool Move(int arg0)
        {
            return IExecuteWithSignature<bool>("move", "(I)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#moveToFirst()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool MoveToFirst()
        {
            return IExecuteWithSignature<bool>("moveToFirst", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#moveToLast()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool MoveToLast()
        {
            return IExecuteWithSignature<bool>("moveToLast", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#moveToNext()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool MoveToNext()
        {
            return IExecuteWithSignature<bool>("moveToNext", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#moveToPosition(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool MoveToPosition(int arg0)
        {
            return IExecuteWithSignature<bool>("moveToPosition", "(I)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#moveToPrevious()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool MoveToPrevious()
        {
            return IExecuteWithSignature<bool>("moveToPrevious", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#getPosition()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetPosition()
        {
            return IExecuteWithSignature<int>("getPosition", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#getColumnCount()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetColumnCount()
        {
            return IExecuteWithSignature<int>("getColumnCount", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#getColumnIndex(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="int"/></returns>
        public int GetColumnIndex(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<int>("getColumnIndex", "(Ljava/lang/String;)I", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#getColumnIndexOrThrow(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="int"/></returns>
        public int GetColumnIndexOrThrow(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<int>("getColumnIndexOrThrow", "(Ljava/lang/String;)I", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#getType(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public int GetType(int arg0)
        {
            return IExecuteWithSignature<int>("getType", "(I)I", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#getColumnName(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetColumnName(int arg0)
        {
            return IExecuteWithSignature<Java.Lang.String>("getColumnName", "(I)Ljava/lang/String;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#getNotificationUris()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.List"/></returns>
        public Java.Util.List<Android.Net.Uri> GetNotificationUris()
        {
            return IExecuteWithSignature<Java.Util.List<Android.Net.Uri>>("getNotificationUris", "()Ljava/util/List;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#close()"/>
        /// </summary>
        public void Close()
        {
            IExecuteWithSignature("close", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#copyStringToBuffer(int,android.database.CharArrayBuffer)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="Android.Database.CharArrayBuffer"/></param>
        public void CopyStringToBuffer(int arg0, Android.Database.CharArrayBuffer arg1)
        {
            IExecute("copyStringToBuffer", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#deactivate()"/>
        /// </summary>
        public void Deactivate()
        {
            IExecuteWithSignature("deactivate", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#fillWindow(int,android.database.CursorWindow)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="Android.Database.CursorWindow"/></param>
        public void FillWindow(int arg0, Android.Database.CursorWindow arg1)
        {
            IExecute("fillWindow", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#registerContentObserver(android.database.ContentObserver)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Database.ContentObserver"/></param>
        public void RegisterContentObserver(Android.Database.ContentObserver arg0)
        {
            IExecuteWithSignature("registerContentObserver", "(Landroid/database/ContentObserver;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#registerDataSetObserver(android.database.DataSetObserver)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Database.DataSetObserver"/></param>
        public void RegisterDataSetObserver(Android.Database.DataSetObserver arg0)
        {
            IExecuteWithSignature("registerDataSetObserver", "(Landroid/database/DataSetObserver;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#setExtras(android.os.Bundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.Bundle"/></param>
        public void SetExtras(Android.Os.Bundle arg0)
        {
            IExecuteWithSignature("setExtras", "(Landroid/os/Bundle;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#setNotificationUri(android.content.ContentResolver,android.net.Uri)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.ContentResolver"/></param>
        /// <param name="arg1"><see cref="Android.Net.Uri"/></param>
        public void SetNotificationUri(Android.Content.ContentResolver arg0, Android.Net.Uri arg1)
        {
            IExecute("setNotificationUri", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#setNotificationUris(android.content.ContentResolver,java.util.List)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.ContentResolver"/></param>
        /// <param name="arg1"><see cref="Java.Util.List"/></param>
        public void SetNotificationUris(Android.Content.ContentResolver arg0, Java.Util.List<Android.Net.Uri> arg1)
        {
            IExecute("setNotificationUris", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#unregisterContentObserver(android.database.ContentObserver)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Database.ContentObserver"/></param>
        public void UnregisterContentObserver(Android.Database.ContentObserver arg0)
        {
            IExecuteWithSignature("unregisterContentObserver", "(Landroid/database/ContentObserver;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/database/AbstractCursor.html#unregisterDataSetObserver(android.database.DataSetObserver)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Database.DataSetObserver"/></param>
        public void UnregisterDataSetObserver(Android.Database.DataSetObserver arg0)
        {
            IExecuteWithSignature("unregisterDataSetObserver", "(Landroid/database/DataSetObserver;)V", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}