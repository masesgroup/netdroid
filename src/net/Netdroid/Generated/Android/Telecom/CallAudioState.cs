/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.6.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Telecom
{
    #region CallAudioState
    public partial class CallAudioState
    {
        #region Constructors
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telecom/CallAudioState.html#%3Cinit%3E(boolean,int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        public CallAudioState(bool arg0, int arg1, int arg2)
            : base(arg0, arg1, arg2)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telecom/CallAudioState.html#CREATOR"/>
        /// </summary>
        public static Android.Os.Parcelable.Creator CREATOR { get { if (!_CREATORReady) { _CREATORContent = SGetField<Android.Os.Parcelable.Creator>(LocalBridgeClazz, "CREATOR"); _CREATORReady = true; } return _CREATORContent; } }
        private static Android.Os.Parcelable.Creator _CREATORContent = default;
        private static bool _CREATORReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telecom/CallAudioState.html#ROUTE_BLUETOOTH"/>
        /// </summary>
        public static int ROUTE_BLUETOOTH { get { if (!_ROUTE_BLUETOOTHReady) { _ROUTE_BLUETOOTHContent = SGetField<int>(LocalBridgeClazz, "ROUTE_BLUETOOTH"); _ROUTE_BLUETOOTHReady = true; } return _ROUTE_BLUETOOTHContent; } }
        private static int _ROUTE_BLUETOOTHContent = default;
        private static bool _ROUTE_BLUETOOTHReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telecom/CallAudioState.html#ROUTE_EARPIECE"/>
        /// </summary>
        public static int ROUTE_EARPIECE { get { if (!_ROUTE_EARPIECEReady) { _ROUTE_EARPIECEContent = SGetField<int>(LocalBridgeClazz, "ROUTE_EARPIECE"); _ROUTE_EARPIECEReady = true; } return _ROUTE_EARPIECEContent; } }
        private static int _ROUTE_EARPIECEContent = default;
        private static bool _ROUTE_EARPIECEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telecom/CallAudioState.html#ROUTE_SPEAKER"/>
        /// </summary>
        public static int ROUTE_SPEAKER { get { if (!_ROUTE_SPEAKERReady) { _ROUTE_SPEAKERContent = SGetField<int>(LocalBridgeClazz, "ROUTE_SPEAKER"); _ROUTE_SPEAKERReady = true; } return _ROUTE_SPEAKERContent; } }
        private static int _ROUTE_SPEAKERContent = default;
        private static bool _ROUTE_SPEAKERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telecom/CallAudioState.html#ROUTE_STREAMING"/>
        /// </summary>
        public static int ROUTE_STREAMING { get { if (!_ROUTE_STREAMINGReady) { _ROUTE_STREAMINGContent = SGetField<int>(LocalBridgeClazz, "ROUTE_STREAMING"); _ROUTE_STREAMINGReady = true; } return _ROUTE_STREAMINGContent; } }
        private static int _ROUTE_STREAMINGContent = default;
        private static bool _ROUTE_STREAMINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telecom/CallAudioState.html#ROUTE_WIRED_HEADSET"/>
        /// </summary>
        public static int ROUTE_WIRED_HEADSET { get { if (!_ROUTE_WIRED_HEADSETReady) { _ROUTE_WIRED_HEADSETContent = SGetField<int>(LocalBridgeClazz, "ROUTE_WIRED_HEADSET"); _ROUTE_WIRED_HEADSETReady = true; } return _ROUTE_WIRED_HEADSETContent; } }
        private static int _ROUTE_WIRED_HEADSETContent = default;
        private static bool _ROUTE_WIRED_HEADSETReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telecom/CallAudioState.html#ROUTE_WIRED_OR_EARPIECE"/>
        /// </summary>
        public static int ROUTE_WIRED_OR_EARPIECE { get { if (!_ROUTE_WIRED_OR_EARPIECEReady) { _ROUTE_WIRED_OR_EARPIECEContent = SGetField<int>(LocalBridgeClazz, "ROUTE_WIRED_OR_EARPIECE"); _ROUTE_WIRED_OR_EARPIECEReady = true; } return _ROUTE_WIRED_OR_EARPIECEContent; } }
        private static int _ROUTE_WIRED_OR_EARPIECEContent = default;
        private static bool _ROUTE_WIRED_OR_EARPIECEReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telecom/CallAudioState.html#audioRouteToString(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public static Java.Lang.String AudioRouteToString(int arg0)
        {
            return SExecuteWithSignature<Java.Lang.String>(LocalBridgeClazz, "audioRouteToString", "(I)Ljava/lang/String;", arg0);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telecom/CallAudioState.html#getActiveBluetoothDevice()"/>
        /// </summary>
        /// <returns><see cref="Android.Bluetooth.BluetoothDevice"/></returns>
        public Android.Bluetooth.BluetoothDevice GetActiveBluetoothDevice()
        {
            return IExecuteWithSignature<Android.Bluetooth.BluetoothDevice>("getActiveBluetoothDevice", "()Landroid/bluetooth/BluetoothDevice;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telecom/CallAudioState.html#isMuted()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsMuted()
        {
            return IExecuteWithSignature<bool>("isMuted", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telecom/CallAudioState.html#describeContents()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int DescribeContents()
        {
            return IExecuteWithSignature<int>("describeContents", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telecom/CallAudioState.html#getRoute()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetRoute()
        {
            return IExecuteWithSignature<int>("getRoute", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telecom/CallAudioState.html#getSupportedRouteMask()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetSupportedRouteMask()
        {
            return IExecuteWithSignature<int>("getSupportedRouteMask", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telecom/CallAudioState.html#getSupportedBluetoothDevices()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.Collection"/></returns>
        public Java.Util.Collection<Android.Bluetooth.BluetoothDevice> GetSupportedBluetoothDevices()
        {
            return IExecuteWithSignature<Java.Util.Collection<Android.Bluetooth.BluetoothDevice>>("getSupportedBluetoothDevices", "()Ljava/util/Collection;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telecom/CallAudioState.html#writeToParcel(android.os.Parcel,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.Parcel"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void WriteToParcel(Android.Os.Parcel arg0, int arg1)
        {
            IExecute("writeToParcel", arg0, arg1);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}