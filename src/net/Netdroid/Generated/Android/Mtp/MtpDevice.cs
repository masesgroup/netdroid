/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.9.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Mtp
{
    #region MtpDevice declaration
    /// <summary>
    /// <see href="https://developer.android.com/reference/android/mtp/MtpDevice.html"/>
    /// </summary>
    public partial class MtpDevice : MASES.JCOBridge.C2JBridge.JVMBridgeBase<MtpDevice>
    {
        const string _bridgeClassName = "android.mtp.MtpDevice";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public MtpDevice() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public MtpDevice(params object[] args) : base(args) { }
    
        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
    
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;
    
        // TODO: complete the class
    
    }
    #endregion

    #region MtpDevice implementation
    public partial class MtpDevice
    {
        #region Constructors
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpDevice.html#%3Cinit%3E(android.hardware.usb.UsbDevice)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Hardware.Usb.UsbDevice"/></param>
        public MtpDevice(Android.Hardware.Usb.UsbDevice arg0)
            : base(arg0)
        {
        }
    
        #endregion
    
        #region Class/Interface conversion operators
    
        #endregion
    
        #region Fields
    
        #endregion
    
        #region Static methods
    
        #endregion
    
        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpDevice.html#getDeviceInfo()"/>
        /// </summary>
        /// <returns><see cref="Android.Mtp.MtpDeviceInfo"/></returns>
        public Android.Mtp.MtpDeviceInfo GetDeviceInfo()
        {
            return IExecuteWithSignature<Android.Mtp.MtpDeviceInfo>("getDeviceInfo", "()Landroid/mtp/MtpDeviceInfo;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpDevice.html#readEvent(android.os.CancellationSignal)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.CancellationSignal"/></param>
        /// <returns><see cref="Android.Mtp.MtpEvent"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public Android.Mtp.MtpEvent ReadEvent(Android.Os.CancellationSignal arg0)
        {
            return IExecuteWithSignature<Android.Mtp.MtpEvent>("readEvent", "(Landroid/os/CancellationSignal;)Landroid/mtp/MtpEvent;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpDevice.html#getObjectInfo(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Android.Mtp.MtpObjectInfo"/></returns>
        public Android.Mtp.MtpObjectInfo GetObjectInfo(int arg0)
        {
            return IExecuteWithSignature<Android.Mtp.MtpObjectInfo>("getObjectInfo", "(I)Landroid/mtp/MtpObjectInfo;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpDevice.html#sendObjectInfo(android.mtp.MtpObjectInfo)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Mtp.MtpObjectInfo"/></param>
        /// <returns><see cref="Android.Mtp.MtpObjectInfo"/></returns>
        public Android.Mtp.MtpObjectInfo SendObjectInfo(Android.Mtp.MtpObjectInfo arg0)
        {
            return IExecuteWithSignature<Android.Mtp.MtpObjectInfo>("sendObjectInfo", "(Landroid/mtp/MtpObjectInfo;)Landroid/mtp/MtpObjectInfo;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpDevice.html#getStorageInfo(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Android.Mtp.MtpStorageInfo"/></returns>
        public Android.Mtp.MtpStorageInfo GetStorageInfo(int arg0)
        {
            return IExecuteWithSignature<Android.Mtp.MtpStorageInfo>("getStorageInfo", "(I)Landroid/mtp/MtpStorageInfo;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpDevice.html#deleteObject(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool DeleteObject(int arg0)
        {
            return IExecuteWithSignature<bool>("deleteObject", "(I)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpDevice.html#importFile(int,android.os.ParcelFileDescriptor)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="Android.Os.ParcelFileDescriptor"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool ImportFile(int arg0, Android.Os.ParcelFileDescriptor arg1)
        {
            return IExecute<bool>("importFile", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpDevice.html#importFile(int,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool ImportFile(int arg0, Java.Lang.String arg1)
        {
            return IExecute<bool>("importFile", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpDevice.html#open(android.hardware.usb.UsbDeviceConnection)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Hardware.Usb.UsbDeviceConnection"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool Open(Android.Hardware.Usb.UsbDeviceConnection arg0)
        {
            return IExecuteWithSignature<bool>("open", "(Landroid/hardware/usb/UsbDeviceConnection;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpDevice.html#sendObject(int,long,android.os.ParcelFileDescriptor)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="long"/></param>
        /// <param name="arg2"><see cref="Android.Os.ParcelFileDescriptor"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool SendObject(int arg0, long arg1, Android.Os.ParcelFileDescriptor arg2)
        {
            return IExecute<bool>("sendObject", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpDevice.html#getObject(int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="byte"/></returns>
        public byte[] GetObject(int arg0, int arg1)
        {
            return IExecuteArray<byte>("getObject", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpDevice.html#getThumbnail(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="byte"/></returns>
        public byte[] GetThumbnail(int arg0)
        {
            return IExecuteWithSignatureArray<byte>("getThumbnail", "(I)[B", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpDevice.html#getDeviceId()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetDeviceId()
        {
            return IExecuteWithSignature<int>("getDeviceId", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpDevice.html#getObjectHandles(int,int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public int[] GetObjectHandles(int arg0, int arg1, int arg2)
        {
            return IExecuteArray<int>("getObjectHandles", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpDevice.html#getStorageIds()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int[] GetStorageIds()
        {
            return IExecuteWithSignatureArray<int>("getStorageIds", "()[I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpDevice.html#getDeviceName()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetDeviceName()
        {
            return IExecuteWithSignature<Java.Lang.String>("getDeviceName", "()Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpDevice.html#getParent(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="long"/></returns>
        public long GetParent(int arg0)
        {
            return IExecuteWithSignature<long>("getParent", "(I)J", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpDevice.html#getPartialObject(int,long,long,byte[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="long"/></param>
        /// <param name="arg2"><see cref="long"/></param>
        /// <param name="arg3"><see cref="byte"/></param>
        /// <returns><see cref="long"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public long GetPartialObject(int arg0, long arg1, long arg2, byte[] arg3)
        {
            return IExecute<long>("getPartialObject", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpDevice.html#getPartialObject64(int,long,long,byte[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="long"/></param>
        /// <param name="arg2"><see cref="long"/></param>
        /// <param name="arg3"><see cref="byte"/></param>
        /// <returns><see cref="long"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public long GetPartialObject64(int arg0, long arg1, long arg2, byte[] arg3)
        {
            return IExecute<long>("getPartialObject64", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpDevice.html#getStorageId(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="long"/></returns>
        public long GetStorageId(int arg0)
        {
            return IExecuteWithSignature<long>("getStorageId", "(I)J", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/mtp/MtpDevice.html#close()"/>
        /// </summary>
        public void Close()
        {
            IExecuteWithSignature("close", "()V");
        }
    
        #endregion
    
        #region Nested classes
    
        #endregion
    
        // TODO: complete the class
    }
    #endregion
}