/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.1.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.App
{
    #region RemoteAction
    public partial class RemoteAction
    {
        #region Constructors
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/RemoteAction.html#%3Cinit%3E(android.graphics.drawable.Icon,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Graphics.Drawable.Icon"/></param>
        /// <param name="arg1"><see cref="Java.Lang.CharSequence"/></param>
        /// <param name="arg2"><see cref="Java.Lang.CharSequence"/></param>
        /// <param name="arg3"><see cref="Android.App.PendingIntent"/></param>
        public RemoteAction(Android.Graphics.Drawable.Icon arg0, Java.Lang.CharSequence arg1, Java.Lang.CharSequence arg2, Android.App.PendingIntent arg3)
            : base(arg0, arg1, arg2, arg3)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/RemoteAction.html#CREATOR"/>
        /// </summary>
        public static Android.Os.Parcelable.Creator CREATOR { get { if (!_CREATORReady) { _CREATORContent = SGetField<Android.Os.Parcelable.Creator>(LocalBridgeClazz, "CREATOR"); _CREATORReady = true; } return _CREATORContent; } }
        private static Android.Os.Parcelable.Creator _CREATORContent = default;
        private static bool _CREATORReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/RemoteAction.html#getActionIntent()"/> 
        /// </summary>
        public Android.App.PendingIntent ActionIntent
        {
            get { return IExecuteWithSignature<Android.App.PendingIntent>("getActionIntent", "()Landroid/app/PendingIntent;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/RemoteAction.html#getContentDescription()"/> 
        /// </summary>
        public Java.Lang.CharSequence ContentDescription
        {
            get { return IExecuteWithSignature<Java.Lang.CharSequence>("getContentDescription", "()Ljava/lang/CharSequence;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/RemoteAction.html#getIcon()"/> 
        /// </summary>
        public Android.Graphics.Drawable.Icon Icon
        {
            get { return IExecuteWithSignature<Android.Graphics.Drawable.Icon>("getIcon", "()Landroid/graphics/drawable/Icon;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/RemoteAction.html#getTitle()"/> 
        /// </summary>
        public Java.Lang.CharSequence Title
        {
            get { return IExecuteWithSignature<Java.Lang.CharSequence>("getTitle", "()Ljava/lang/CharSequence;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/RemoteAction.html#clone()"/>
        /// </summary>
        /// <returns><see cref="Android.App.RemoteAction"/></returns>
        public Android.App.RemoteAction Clone()
        {
            return IExecuteWithSignature<Android.App.RemoteAction>("clone", "()Landroid/app/RemoteAction;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/RemoteAction.html#isEnabled()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsEnabled()
        {
            return IExecuteWithSignature<bool>("isEnabled", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/RemoteAction.html#shouldShowIcon()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool ShouldShowIcon()
        {
            return IExecuteWithSignature<bool>("shouldShowIcon", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/RemoteAction.html#describeContents()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int DescribeContents()
        {
            return IExecuteWithSignature<int>("describeContents", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/RemoteAction.html#dump(java.lang.String,java.io.PrintWriter)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Java.Io.PrintWriter"/></param>
        public void Dump(Java.Lang.String arg0, Java.Io.PrintWriter arg1)
        {
            IExecute("dump", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/RemoteAction.html#setEnabled(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetEnabled(bool arg0)
        {
            IExecuteWithSignature("setEnabled", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/RemoteAction.html#setShouldShowIcon(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetShouldShowIcon(bool arg0)
        {
            IExecuteWithSignature("setShouldShowIcon", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/RemoteAction.html#writeToParcel(android.os.Parcel,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.Parcel"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void WriteToParcel(Android.Os.Parcel arg0, int arg1)
        {
            IExecute("writeToParcel", arg0, arg1);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}