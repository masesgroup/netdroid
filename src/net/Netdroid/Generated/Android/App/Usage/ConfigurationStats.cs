/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.9.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.App.Usage
{
    #region ConfigurationStats declaration
    /// <summary>
    /// <see href="https://developer.android.com/reference/android/app/usage/ConfigurationStats.html"/>
    /// </summary>
    public partial class ConfigurationStats : Android.Os.Parcelable
    {
        const string _bridgeClassName = "android.app.usage.ConfigurationStats";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public ConfigurationStats() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public ConfigurationStats(params object[] args) : base(args) { }
    
        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
    
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;
    
        // TODO: complete the class
    
    }
    #endregion

    #region ConfigurationStats implementation
    public partial class ConfigurationStats
    {
        #region Constructors
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/usage/ConfigurationStats.html#%3Cinit%3E(android.app.usage.ConfigurationStats)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.App.Usage.ConfigurationStats"/></param>
        public ConfigurationStats(Android.App.Usage.ConfigurationStats arg0)
            : base(arg0)
        {
        }
    
        #endregion
    
        #region Class/Interface conversion operators
    
        #endregion
    
        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/usage/ConfigurationStats.html#CREATOR"/>
        /// </summary>
        public static Android.Os.Parcelable.Creator CREATOR { get { if (!_CREATORReady) { _CREATORContent = SGetField<Android.Os.Parcelable.Creator>(LocalBridgeClazz, "CREATOR"); _CREATORReady = true; } return _CREATORContent; } }
        private static Android.Os.Parcelable.Creator _CREATORContent = default;
        private static bool _CREATORReady = false; // this is used because in case of generics 
    
        #endregion
    
        #region Static methods
    
        #endregion
    
        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/usage/ConfigurationStats.html#getConfiguration()"/>
        /// </summary>
        /// <returns><see cref="Android.Content.Res.Configuration"/></returns>
        public Android.Content.Res.Configuration GetConfiguration()
        {
            return IExecuteWithSignature<Android.Content.Res.Configuration>("getConfiguration", "()Landroid/content/res/Configuration;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/usage/ConfigurationStats.html#describeContents()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int DescribeContents()
        {
            return IExecuteWithSignature<int>("describeContents", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/usage/ConfigurationStats.html#getActivationCount()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetActivationCount()
        {
            return IExecuteWithSignature<int>("getActivationCount", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/usage/ConfigurationStats.html#getFirstTimeStamp()"/>
        /// </summary>
        /// <returns><see cref="long"/></returns>
        public long GetFirstTimeStamp()
        {
            return IExecuteWithSignature<long>("getFirstTimeStamp", "()J");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/usage/ConfigurationStats.html#getLastTimeActive()"/>
        /// </summary>
        /// <returns><see cref="long"/></returns>
        public long GetLastTimeActive()
        {
            return IExecuteWithSignature<long>("getLastTimeActive", "()J");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/usage/ConfigurationStats.html#getLastTimeStamp()"/>
        /// </summary>
        /// <returns><see cref="long"/></returns>
        public long GetLastTimeStamp()
        {
            return IExecuteWithSignature<long>("getLastTimeStamp", "()J");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/usage/ConfigurationStats.html#getTotalTimeActive()"/>
        /// </summary>
        /// <returns><see cref="long"/></returns>
        public long GetTotalTimeActive()
        {
            return IExecuteWithSignature<long>("getTotalTimeActive", "()J");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/usage/ConfigurationStats.html#writeToParcel(android.os.Parcel,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.Parcel"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void WriteToParcel(Android.Os.Parcel arg0, int arg1)
        {
            IExecute("writeToParcel", arg0, arg1);
        }
    
        #endregion
    
        #region Nested classes
    
        #endregion
    
        // TODO: complete the class
    }
    #endregion
}