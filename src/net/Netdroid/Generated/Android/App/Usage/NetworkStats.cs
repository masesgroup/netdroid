/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.5.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.App.Usage
{
    #region NetworkStats
    public partial class NetworkStats
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/usage/NetworkStats.html#getNextBucket(android.app.usage.NetworkStats.Bucket)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.App.Usage.NetworkStats.Bucket"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool GetNextBucket(Android.App.Usage.NetworkStats.Bucket arg0)
        {
            return IExecuteWithSignature<bool>("getNextBucket", "(Landroid/app/usage/NetworkStats$Bucket;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/usage/NetworkStats.html#hasNextBucket()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool HasNextBucket()
        {
            return IExecuteWithSignature<bool>("hasNextBucket", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/usage/NetworkStats.html#close()"/>
        /// </summary>
        public void Close()
        {
            IExecuteWithSignature("close", "()V");
        }

        #endregion

        #region Nested classes
        #region Bucket
        public partial class Bucket
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/app/usage/NetworkStats.Bucket.html#DEFAULT_NETWORK_ALL"/>
            /// </summary>
            public static int DEFAULT_NETWORK_ALL { get { if (!_DEFAULT_NETWORK_ALLReady) { _DEFAULT_NETWORK_ALLContent = SGetField<int>(LocalBridgeClazz, "DEFAULT_NETWORK_ALL"); _DEFAULT_NETWORK_ALLReady = true; } return _DEFAULT_NETWORK_ALLContent; } }
            private static int _DEFAULT_NETWORK_ALLContent = default;
            private static bool _DEFAULT_NETWORK_ALLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/app/usage/NetworkStats.Bucket.html#DEFAULT_NETWORK_NO"/>
            /// </summary>
            public static int DEFAULT_NETWORK_NO { get { if (!_DEFAULT_NETWORK_NOReady) { _DEFAULT_NETWORK_NOContent = SGetField<int>(LocalBridgeClazz, "DEFAULT_NETWORK_NO"); _DEFAULT_NETWORK_NOReady = true; } return _DEFAULT_NETWORK_NOContent; } }
            private static int _DEFAULT_NETWORK_NOContent = default;
            private static bool _DEFAULT_NETWORK_NOReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/app/usage/NetworkStats.Bucket.html#DEFAULT_NETWORK_YES"/>
            /// </summary>
            public static int DEFAULT_NETWORK_YES { get { if (!_DEFAULT_NETWORK_YESReady) { _DEFAULT_NETWORK_YESContent = SGetField<int>(LocalBridgeClazz, "DEFAULT_NETWORK_YES"); _DEFAULT_NETWORK_YESReady = true; } return _DEFAULT_NETWORK_YESContent; } }
            private static int _DEFAULT_NETWORK_YESContent = default;
            private static bool _DEFAULT_NETWORK_YESReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/app/usage/NetworkStats.Bucket.html#METERED_ALL"/>
            /// </summary>
            public static int METERED_ALL { get { if (!_METERED_ALLReady) { _METERED_ALLContent = SGetField<int>(LocalBridgeClazz, "METERED_ALL"); _METERED_ALLReady = true; } return _METERED_ALLContent; } }
            private static int _METERED_ALLContent = default;
            private static bool _METERED_ALLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/app/usage/NetworkStats.Bucket.html#METERED_NO"/>
            /// </summary>
            public static int METERED_NO { get { if (!_METERED_NOReady) { _METERED_NOContent = SGetField<int>(LocalBridgeClazz, "METERED_NO"); _METERED_NOReady = true; } return _METERED_NOContent; } }
            private static int _METERED_NOContent = default;
            private static bool _METERED_NOReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/app/usage/NetworkStats.Bucket.html#METERED_YES"/>
            /// </summary>
            public static int METERED_YES { get { if (!_METERED_YESReady) { _METERED_YESContent = SGetField<int>(LocalBridgeClazz, "METERED_YES"); _METERED_YESReady = true; } return _METERED_YESContent; } }
            private static int _METERED_YESContent = default;
            private static bool _METERED_YESReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/app/usage/NetworkStats.Bucket.html#ROAMING_ALL"/>
            /// </summary>
            public static int ROAMING_ALL { get { if (!_ROAMING_ALLReady) { _ROAMING_ALLContent = SGetField<int>(LocalBridgeClazz, "ROAMING_ALL"); _ROAMING_ALLReady = true; } return _ROAMING_ALLContent; } }
            private static int _ROAMING_ALLContent = default;
            private static bool _ROAMING_ALLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/app/usage/NetworkStats.Bucket.html#ROAMING_NO"/>
            /// </summary>
            public static int ROAMING_NO { get { if (!_ROAMING_NOReady) { _ROAMING_NOContent = SGetField<int>(LocalBridgeClazz, "ROAMING_NO"); _ROAMING_NOReady = true; } return _ROAMING_NOContent; } }
            private static int _ROAMING_NOContent = default;
            private static bool _ROAMING_NOReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/app/usage/NetworkStats.Bucket.html#ROAMING_YES"/>
            /// </summary>
            public static int ROAMING_YES { get { if (!_ROAMING_YESReady) { _ROAMING_YESContent = SGetField<int>(LocalBridgeClazz, "ROAMING_YES"); _ROAMING_YESReady = true; } return _ROAMING_YESContent; } }
            private static int _ROAMING_YESContent = default;
            private static bool _ROAMING_YESReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/app/usage/NetworkStats.Bucket.html#STATE_ALL"/>
            /// </summary>
            public static int STATE_ALL { get { if (!_STATE_ALLReady) { _STATE_ALLContent = SGetField<int>(LocalBridgeClazz, "STATE_ALL"); _STATE_ALLReady = true; } return _STATE_ALLContent; } }
            private static int _STATE_ALLContent = default;
            private static bool _STATE_ALLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/app/usage/NetworkStats.Bucket.html#STATE_DEFAULT"/>
            /// </summary>
            public static int STATE_DEFAULT { get { if (!_STATE_DEFAULTReady) { _STATE_DEFAULTContent = SGetField<int>(LocalBridgeClazz, "STATE_DEFAULT"); _STATE_DEFAULTReady = true; } return _STATE_DEFAULTContent; } }
            private static int _STATE_DEFAULTContent = default;
            private static bool _STATE_DEFAULTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/app/usage/NetworkStats.Bucket.html#STATE_FOREGROUND"/>
            /// </summary>
            public static int STATE_FOREGROUND { get { if (!_STATE_FOREGROUNDReady) { _STATE_FOREGROUNDContent = SGetField<int>(LocalBridgeClazz, "STATE_FOREGROUND"); _STATE_FOREGROUNDReady = true; } return _STATE_FOREGROUNDContent; } }
            private static int _STATE_FOREGROUNDContent = default;
            private static bool _STATE_FOREGROUNDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/app/usage/NetworkStats.Bucket.html#TAG_NONE"/>
            /// </summary>
            public static int TAG_NONE { get { if (!_TAG_NONEReady) { _TAG_NONEContent = SGetField<int>(LocalBridgeClazz, "TAG_NONE"); _TAG_NONEReady = true; } return _TAG_NONEContent; } }
            private static int _TAG_NONEContent = default;
            private static bool _TAG_NONEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/app/usage/NetworkStats.Bucket.html#UID_ALL"/>
            /// </summary>
            public static int UID_ALL { get { if (!_UID_ALLReady) { _UID_ALLContent = SGetField<int>(LocalBridgeClazz, "UID_ALL"); _UID_ALLReady = true; } return _UID_ALLContent; } }
            private static int _UID_ALLContent = default;
            private static bool _UID_ALLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/app/usage/NetworkStats.Bucket.html#UID_REMOVED"/>
            /// </summary>
            public static int UID_REMOVED { get { if (!_UID_REMOVEDReady) { _UID_REMOVEDContent = SGetField<int>(LocalBridgeClazz, "UID_REMOVED"); _UID_REMOVEDReady = true; } return _UID_REMOVEDContent; } }
            private static int _UID_REMOVEDContent = default;
            private static bool _UID_REMOVEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/app/usage/NetworkStats.Bucket.html#UID_TETHERING"/>
            /// </summary>
            public static int UID_TETHERING { get { if (!_UID_TETHERINGReady) { _UID_TETHERINGContent = SGetField<int>(LocalBridgeClazz, "UID_TETHERING"); _UID_TETHERINGReady = true; } return _UID_TETHERINGContent; } }
            private static int _UID_TETHERINGContent = default;
            private static bool _UID_TETHERINGReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/app/usage/NetworkStats.Bucket.html#getDefaultNetworkStatus()"/>
            /// </summary>
            /// <returns><see cref="int"/></returns>
            public int GetDefaultNetworkStatus()
            {
                return IExecuteWithSignature<int>("getDefaultNetworkStatus", "()I");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/app/usage/NetworkStats.Bucket.html#getMetered()"/>
            /// </summary>
            /// <returns><see cref="int"/></returns>
            public int GetMetered()
            {
                return IExecuteWithSignature<int>("getMetered", "()I");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/app/usage/NetworkStats.Bucket.html#getRoaming()"/>
            /// </summary>
            /// <returns><see cref="int"/></returns>
            public int GetRoaming()
            {
                return IExecuteWithSignature<int>("getRoaming", "()I");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/app/usage/NetworkStats.Bucket.html#getState()"/>
            /// </summary>
            /// <returns><see cref="int"/></returns>
            public int GetState()
            {
                return IExecuteWithSignature<int>("getState", "()I");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/app/usage/NetworkStats.Bucket.html#getTag()"/>
            /// </summary>
            /// <returns><see cref="int"/></returns>
            public int GetTag()
            {
                return IExecuteWithSignature<int>("getTag", "()I");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/app/usage/NetworkStats.Bucket.html#getUid()"/>
            /// </summary>
            /// <returns><see cref="int"/></returns>
            public int GetUid()
            {
                return IExecuteWithSignature<int>("getUid", "()I");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/app/usage/NetworkStats.Bucket.html#getEndTimeStamp()"/>
            /// </summary>
            /// <returns><see cref="long"/></returns>
            public long GetEndTimeStamp()
            {
                return IExecuteWithSignature<long>("getEndTimeStamp", "()J");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/app/usage/NetworkStats.Bucket.html#getRxBytes()"/>
            /// </summary>
            /// <returns><see cref="long"/></returns>
            public long GetRxBytes()
            {
                return IExecuteWithSignature<long>("getRxBytes", "()J");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/app/usage/NetworkStats.Bucket.html#getRxPackets()"/>
            /// </summary>
            /// <returns><see cref="long"/></returns>
            public long GetRxPackets()
            {
                return IExecuteWithSignature<long>("getRxPackets", "()J");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/app/usage/NetworkStats.Bucket.html#getStartTimeStamp()"/>
            /// </summary>
            /// <returns><see cref="long"/></returns>
            public long GetStartTimeStamp()
            {
                return IExecuteWithSignature<long>("getStartTimeStamp", "()J");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/app/usage/NetworkStats.Bucket.html#getTxBytes()"/>
            /// </summary>
            /// <returns><see cref="long"/></returns>
            public long GetTxBytes()
            {
                return IExecuteWithSignature<long>("getTxBytes", "()J");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/app/usage/NetworkStats.Bucket.html#getTxPackets()"/>
            /// </summary>
            /// <returns><see cref="long"/></returns>
            public long GetTxPackets()
            {
                return IExecuteWithSignature<long>("getTxPackets", "()J");
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}