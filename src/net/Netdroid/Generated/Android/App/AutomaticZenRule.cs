/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.4.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.App
{
    #region AutomaticZenRule
    public partial class AutomaticZenRule
    {
        #region Constructors
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/AutomaticZenRule.html#%3Cinit%3E(android.os.Parcel)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.Parcel"/></param>
        public AutomaticZenRule(Android.Os.Parcel arg0)
            : base(arg0)
        {
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/AutomaticZenRule.html#%3Cinit%3E(java.lang.String,android.content.ComponentName,android.content.ComponentName,android.net.Uri,android.service.notification.ZenPolicy,int,boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Android.Content.ComponentName"/></param>
        /// <param name="arg2"><see cref="Android.Content.ComponentName"/></param>
        /// <param name="arg3"><see cref="Android.Net.Uri"/></param>
        /// <param name="arg4"><see cref="Android.Service.Notification.ZenPolicy"/></param>
        /// <param name="arg5"><see cref="int"/></param>
        /// <param name="arg6"><see cref="bool"/></param>
        public AutomaticZenRule(Java.Lang.String arg0, Android.Content.ComponentName arg1, Android.Content.ComponentName arg2, Android.Net.Uri arg3, Android.Service.Notification.ZenPolicy arg4, int arg5, bool arg6)
            : base(arg0, arg1, arg2, arg3, arg4, arg5, arg6)
        {
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/AutomaticZenRule.html#%3Cinit%3E(java.lang.String,android.content.ComponentName,android.net.Uri,int,boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Android.Content.ComponentName"/></param>
        /// <param name="arg2"><see cref="Android.Net.Uri"/></param>
        /// <param name="arg3"><see cref="int"/></param>
        /// <param name="arg4"><see cref="bool"/></param>
        [global::System.Obsolete()]
        public AutomaticZenRule(Java.Lang.String arg0, Android.Content.ComponentName arg1, Android.Net.Uri arg2, int arg3, bool arg4)
            : base(arg0, arg1, arg2, arg3, arg4)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/AutomaticZenRule.html#CREATOR"/>
        /// </summary>
        public static Android.Os.Parcelable.Creator CREATOR { get { if (!_CREATORReady) { _CREATORContent = SGetField<Android.Os.Parcelable.Creator>(LocalBridgeClazz, "CREATOR"); _CREATORReady = true; } return _CREATORContent; } }
        private static Android.Os.Parcelable.Creator _CREATORContent = default;
        private static bool _CREATORReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/AutomaticZenRule.html#getConfigurationActivity()"/>
        /// </summary>
        /// <returns><see cref="Android.Content.ComponentName"/></returns>
        public Android.Content.ComponentName GetConfigurationActivity()
        {
            return IExecuteWithSignature<Android.Content.ComponentName>("getConfigurationActivity", "()Landroid/content/ComponentName;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/AutomaticZenRule.html#getOwner()"/>
        /// </summary>
        /// <returns><see cref="Android.Content.ComponentName"/></returns>
        public Android.Content.ComponentName GetOwner()
        {
            return IExecuteWithSignature<Android.Content.ComponentName>("getOwner", "()Landroid/content/ComponentName;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/AutomaticZenRule.html#getConditionId()"/>
        /// </summary>
        /// <returns><see cref="Android.Net.Uri"/></returns>
        public Android.Net.Uri GetConditionId()
        {
            return IExecuteWithSignature<Android.Net.Uri>("getConditionId", "()Landroid/net/Uri;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/AutomaticZenRule.html#getZenPolicy()"/>
        /// </summary>
        /// <returns><see cref="Android.Service.Notification.ZenPolicy"/></returns>
        public Android.Service.Notification.ZenPolicy GetZenPolicy()
        {
            return IExecuteWithSignature<Android.Service.Notification.ZenPolicy>("getZenPolicy", "()Landroid/service/notification/ZenPolicy;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/AutomaticZenRule.html#isEnabled()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsEnabled()
        {
            return IExecuteWithSignature<bool>("isEnabled", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/AutomaticZenRule.html#describeContents()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int DescribeContents()
        {
            return IExecuteWithSignature<int>("describeContents", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/AutomaticZenRule.html#getInterruptionFilter()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetInterruptionFilter()
        {
            return IExecuteWithSignature<int>("getInterruptionFilter", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/AutomaticZenRule.html#getName()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetName()
        {
            return IExecuteWithSignature<Java.Lang.String>("getName", "()Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/AutomaticZenRule.html#getCreationTime()"/>
        /// </summary>
        /// <returns><see cref="long"/></returns>
        public long GetCreationTime()
        {
            return IExecuteWithSignature<long>("getCreationTime", "()J");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/AutomaticZenRule.html#setConditionId(android.net.Uri)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Net.Uri"/></param>
        public void SetConditionId(Android.Net.Uri arg0)
        {
            IExecuteWithSignature("setConditionId", "(Landroid/net/Uri;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/AutomaticZenRule.html#setConfigurationActivity(android.content.ComponentName)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.ComponentName"/></param>
        public void SetConfigurationActivity(Android.Content.ComponentName arg0)
        {
            IExecuteWithSignature("setConfigurationActivity", "(Landroid/content/ComponentName;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/AutomaticZenRule.html#setEnabled(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetEnabled(bool arg0)
        {
            IExecuteWithSignature("setEnabled", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/AutomaticZenRule.html#setInterruptionFilter(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetInterruptionFilter(int arg0)
        {
            IExecuteWithSignature("setInterruptionFilter", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/AutomaticZenRule.html#setName(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        public void SetName(Java.Lang.String arg0)
        {
            IExecuteWithSignature("setName", "(Ljava/lang/String;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/AutomaticZenRule.html#setZenPolicy(android.service.notification.ZenPolicy)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Service.Notification.ZenPolicy"/></param>
        public void SetZenPolicy(Android.Service.Notification.ZenPolicy arg0)
        {
            IExecuteWithSignature("setZenPolicy", "(Landroid/service/notification/ZenPolicy;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/AutomaticZenRule.html#writeToParcel(android.os.Parcel,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.Parcel"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void WriteToParcel(Android.Os.Parcel arg0, int arg1)
        {
            IExecute("writeToParcel", arg0, arg1);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}