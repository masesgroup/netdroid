/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.9.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.App.Appsearch
{
    #region PropertyPath declaration
    /// <summary>
    /// <see href="https://developer.android.com/reference/android/app/appsearch/PropertyPath.html"/>
    /// </summary>
    public partial class PropertyPath : Java.Lang.Iterable<Android.App.Appsearch.PropertyPath.PathSegment>
    {
        const string _bridgeClassName = "android.app.appsearch.PropertyPath";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public PropertyPath() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public PropertyPath(params object[] args) : base(args) { }

        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class
        #region PathSegment declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/appsearch/PropertyPath.PathSegment.html"/>
        /// </summary>
        public partial class PathSegment : MASES.JCOBridge.C2JBridge.JVMBridgeBase<PathSegment>
        {
            const string _bridgeClassName = "android.app.appsearch.PropertyPath$PathSegment";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public PathSegment() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public PathSegment(params object[] args) : base(args) { }

            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;

            // TODO: complete the class

        }
        #endregion

    
    }
    #endregion

    #region PropertyPath implementation
    public partial class PropertyPath
    {
        #region Constructors
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/appsearch/PropertyPath.html#%3Cinit%3E(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        public PropertyPath(Java.Lang.String arg0)
            : base(arg0)
        {
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/appsearch/PropertyPath.html#%3Cinit%3E(java.util.List)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.List"/></param>
        public PropertyPath(Java.Util.List<Android.App.Appsearch.PropertyPath.PathSegment> arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/appsearch/PropertyPath.html#get(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Android.App.Appsearch.PropertyPath.PathSegment"/></returns>
        public Android.App.Appsearch.PropertyPath.PathSegment Get(int arg0)
        {
            return IExecuteWithSignature<Android.App.Appsearch.PropertyPath.PathSegment>("get", "(I)Landroid/app/appsearch/PropertyPath$PathSegment;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/appsearch/PropertyPath.html#size()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int Size()
        {
            return IExecuteWithSignature<int>("size", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/appsearch/PropertyPath.html#iterator()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.Iterator"/></returns>
        public Java.Util.Iterator<Android.App.Appsearch.PropertyPath.PathSegment> Iterator()
        {
            return IExecuteWithSignature<Java.Util.Iterator<Android.App.Appsearch.PropertyPath.PathSegment>>("iterator", "()Ljava/util/Iterator;");
        }

        #endregion

        #region Nested classes
        #region PathSegment implementation
        public partial class PathSegment
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/app/appsearch/PropertyPath.PathSegment.html#NON_REPEATED_CARDINALITY"/>
            /// </summary>
            public static int NON_REPEATED_CARDINALITY { get { if (!_NON_REPEATED_CARDINALITYReady) { _NON_REPEATED_CARDINALITYContent = SGetField<int>(LocalBridgeClazz, "NON_REPEATED_CARDINALITY"); _NON_REPEATED_CARDINALITYReady = true; } return _NON_REPEATED_CARDINALITYContent; } }
            private static int _NON_REPEATED_CARDINALITYContent = default;
            private static bool _NON_REPEATED_CARDINALITYReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/app/appsearch/PropertyPath.PathSegment.html#create(java.lang.String,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            /// <returns><see cref="Android.App.Appsearch.PropertyPath.PathSegment"/></returns>
            public static Android.App.Appsearch.PropertyPath.PathSegment Create(Java.Lang.String arg0, int arg1)
            {
                return SExecute<Android.App.Appsearch.PropertyPath.PathSegment>(LocalBridgeClazz, "create", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/app/appsearch/PropertyPath.PathSegment.html#create(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Android.App.Appsearch.PropertyPath.PathSegment"/></returns>
            public static Android.App.Appsearch.PropertyPath.PathSegment Create(Java.Lang.String arg0)
            {
                return SExecuteWithSignature<Android.App.Appsearch.PropertyPath.PathSegment>(LocalBridgeClazz, "create", "(Ljava/lang/String;)Landroid/app/appsearch/PropertyPath$PathSegment;", arg0);
            }

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/app/appsearch/PropertyPath.PathSegment.html#getPropertyIndex()"/>
            /// </summary>
            /// <returns><see cref="int"/></returns>
            public int GetPropertyIndex()
            {
                return IExecuteWithSignature<int>("getPropertyIndex", "()I");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/app/appsearch/PropertyPath.PathSegment.html#getPropertyName()"/>
            /// </summary>
            /// <returns><see cref="Java.Lang.String"/></returns>
            public Java.Lang.String GetPropertyName()
            {
                return IExecuteWithSignature<Java.Lang.String>("getPropertyName", "()Ljava/lang/String;");
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}