/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.1.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.App.Appsearch
{
    #region SearchSpec
    public partial class SearchSpec
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.html#GROUPING_TYPE_PER_NAMESPACE"/>
        /// </summary>
        public static int GROUPING_TYPE_PER_NAMESPACE { get { if (!_GROUPING_TYPE_PER_NAMESPACEReady) { _GROUPING_TYPE_PER_NAMESPACEContent = SGetField<int>(LocalBridgeClazz, "GROUPING_TYPE_PER_NAMESPACE"); _GROUPING_TYPE_PER_NAMESPACEReady = true; } return _GROUPING_TYPE_PER_NAMESPACEContent; } }
        private static int _GROUPING_TYPE_PER_NAMESPACEContent = default;
        private static bool _GROUPING_TYPE_PER_NAMESPACEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.html#GROUPING_TYPE_PER_PACKAGE"/>
        /// </summary>
        public static int GROUPING_TYPE_PER_PACKAGE { get { if (!_GROUPING_TYPE_PER_PACKAGEReady) { _GROUPING_TYPE_PER_PACKAGEContent = SGetField<int>(LocalBridgeClazz, "GROUPING_TYPE_PER_PACKAGE"); _GROUPING_TYPE_PER_PACKAGEReady = true; } return _GROUPING_TYPE_PER_PACKAGEContent; } }
        private static int _GROUPING_TYPE_PER_PACKAGEContent = default;
        private static bool _GROUPING_TYPE_PER_PACKAGEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.html#ORDER_ASCENDING"/>
        /// </summary>
        public static int ORDER_ASCENDING { get { if (!_ORDER_ASCENDINGReady) { _ORDER_ASCENDINGContent = SGetField<int>(LocalBridgeClazz, "ORDER_ASCENDING"); _ORDER_ASCENDINGReady = true; } return _ORDER_ASCENDINGContent; } }
        private static int _ORDER_ASCENDINGContent = default;
        private static bool _ORDER_ASCENDINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.html#ORDER_DESCENDING"/>
        /// </summary>
        public static int ORDER_DESCENDING { get { if (!_ORDER_DESCENDINGReady) { _ORDER_DESCENDINGContent = SGetField<int>(LocalBridgeClazz, "ORDER_DESCENDING"); _ORDER_DESCENDINGReady = true; } return _ORDER_DESCENDINGContent; } }
        private static int _ORDER_DESCENDINGContent = default;
        private static bool _ORDER_DESCENDINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.html#RANKING_STRATEGY_ADVANCED_RANKING_EXPRESSION"/>
        /// </summary>
        public static int RANKING_STRATEGY_ADVANCED_RANKING_EXPRESSION { get { if (!_RANKING_STRATEGY_ADVANCED_RANKING_EXPRESSIONReady) { _RANKING_STRATEGY_ADVANCED_RANKING_EXPRESSIONContent = SGetField<int>(LocalBridgeClazz, "RANKING_STRATEGY_ADVANCED_RANKING_EXPRESSION"); _RANKING_STRATEGY_ADVANCED_RANKING_EXPRESSIONReady = true; } return _RANKING_STRATEGY_ADVANCED_RANKING_EXPRESSIONContent; } }
        private static int _RANKING_STRATEGY_ADVANCED_RANKING_EXPRESSIONContent = default;
        private static bool _RANKING_STRATEGY_ADVANCED_RANKING_EXPRESSIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.html#RANKING_STRATEGY_CREATION_TIMESTAMP"/>
        /// </summary>
        public static int RANKING_STRATEGY_CREATION_TIMESTAMP { get { if (!_RANKING_STRATEGY_CREATION_TIMESTAMPReady) { _RANKING_STRATEGY_CREATION_TIMESTAMPContent = SGetField<int>(LocalBridgeClazz, "RANKING_STRATEGY_CREATION_TIMESTAMP"); _RANKING_STRATEGY_CREATION_TIMESTAMPReady = true; } return _RANKING_STRATEGY_CREATION_TIMESTAMPContent; } }
        private static int _RANKING_STRATEGY_CREATION_TIMESTAMPContent = default;
        private static bool _RANKING_STRATEGY_CREATION_TIMESTAMPReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.html#RANKING_STRATEGY_DOCUMENT_SCORE"/>
        /// </summary>
        public static int RANKING_STRATEGY_DOCUMENT_SCORE { get { if (!_RANKING_STRATEGY_DOCUMENT_SCOREReady) { _RANKING_STRATEGY_DOCUMENT_SCOREContent = SGetField<int>(LocalBridgeClazz, "RANKING_STRATEGY_DOCUMENT_SCORE"); _RANKING_STRATEGY_DOCUMENT_SCOREReady = true; } return _RANKING_STRATEGY_DOCUMENT_SCOREContent; } }
        private static int _RANKING_STRATEGY_DOCUMENT_SCOREContent = default;
        private static bool _RANKING_STRATEGY_DOCUMENT_SCOREReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.html#RANKING_STRATEGY_JOIN_AGGREGATE_SCORE"/>
        /// </summary>
        public static int RANKING_STRATEGY_JOIN_AGGREGATE_SCORE { get { if (!_RANKING_STRATEGY_JOIN_AGGREGATE_SCOREReady) { _RANKING_STRATEGY_JOIN_AGGREGATE_SCOREContent = SGetField<int>(LocalBridgeClazz, "RANKING_STRATEGY_JOIN_AGGREGATE_SCORE"); _RANKING_STRATEGY_JOIN_AGGREGATE_SCOREReady = true; } return _RANKING_STRATEGY_JOIN_AGGREGATE_SCOREContent; } }
        private static int _RANKING_STRATEGY_JOIN_AGGREGATE_SCOREContent = default;
        private static bool _RANKING_STRATEGY_JOIN_AGGREGATE_SCOREReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.html#RANKING_STRATEGY_NONE"/>
        /// </summary>
        public static int RANKING_STRATEGY_NONE { get { if (!_RANKING_STRATEGY_NONEReady) { _RANKING_STRATEGY_NONEContent = SGetField<int>(LocalBridgeClazz, "RANKING_STRATEGY_NONE"); _RANKING_STRATEGY_NONEReady = true; } return _RANKING_STRATEGY_NONEContent; } }
        private static int _RANKING_STRATEGY_NONEContent = default;
        private static bool _RANKING_STRATEGY_NONEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.html#RANKING_STRATEGY_RELEVANCE_SCORE"/>
        /// </summary>
        public static int RANKING_STRATEGY_RELEVANCE_SCORE { get { if (!_RANKING_STRATEGY_RELEVANCE_SCOREReady) { _RANKING_STRATEGY_RELEVANCE_SCOREContent = SGetField<int>(LocalBridgeClazz, "RANKING_STRATEGY_RELEVANCE_SCORE"); _RANKING_STRATEGY_RELEVANCE_SCOREReady = true; } return _RANKING_STRATEGY_RELEVANCE_SCOREContent; } }
        private static int _RANKING_STRATEGY_RELEVANCE_SCOREContent = default;
        private static bool _RANKING_STRATEGY_RELEVANCE_SCOREReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.html#RANKING_STRATEGY_SYSTEM_USAGE_COUNT"/>
        /// </summary>
        public static int RANKING_STRATEGY_SYSTEM_USAGE_COUNT { get { if (!_RANKING_STRATEGY_SYSTEM_USAGE_COUNTReady) { _RANKING_STRATEGY_SYSTEM_USAGE_COUNTContent = SGetField<int>(LocalBridgeClazz, "RANKING_STRATEGY_SYSTEM_USAGE_COUNT"); _RANKING_STRATEGY_SYSTEM_USAGE_COUNTReady = true; } return _RANKING_STRATEGY_SYSTEM_USAGE_COUNTContent; } }
        private static int _RANKING_STRATEGY_SYSTEM_USAGE_COUNTContent = default;
        private static bool _RANKING_STRATEGY_SYSTEM_USAGE_COUNTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.html#RANKING_STRATEGY_SYSTEM_USAGE_LAST_USED_TIMESTAMP"/>
        /// </summary>
        public static int RANKING_STRATEGY_SYSTEM_USAGE_LAST_USED_TIMESTAMP { get { if (!_RANKING_STRATEGY_SYSTEM_USAGE_LAST_USED_TIMESTAMPReady) { _RANKING_STRATEGY_SYSTEM_USAGE_LAST_USED_TIMESTAMPContent = SGetField<int>(LocalBridgeClazz, "RANKING_STRATEGY_SYSTEM_USAGE_LAST_USED_TIMESTAMP"); _RANKING_STRATEGY_SYSTEM_USAGE_LAST_USED_TIMESTAMPReady = true; } return _RANKING_STRATEGY_SYSTEM_USAGE_LAST_USED_TIMESTAMPContent; } }
        private static int _RANKING_STRATEGY_SYSTEM_USAGE_LAST_USED_TIMESTAMPContent = default;
        private static bool _RANKING_STRATEGY_SYSTEM_USAGE_LAST_USED_TIMESTAMPReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.html#RANKING_STRATEGY_USAGE_COUNT"/>
        /// </summary>
        public static int RANKING_STRATEGY_USAGE_COUNT { get { if (!_RANKING_STRATEGY_USAGE_COUNTReady) { _RANKING_STRATEGY_USAGE_COUNTContent = SGetField<int>(LocalBridgeClazz, "RANKING_STRATEGY_USAGE_COUNT"); _RANKING_STRATEGY_USAGE_COUNTReady = true; } return _RANKING_STRATEGY_USAGE_COUNTContent; } }
        private static int _RANKING_STRATEGY_USAGE_COUNTContent = default;
        private static bool _RANKING_STRATEGY_USAGE_COUNTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.html#RANKING_STRATEGY_USAGE_LAST_USED_TIMESTAMP"/>
        /// </summary>
        public static int RANKING_STRATEGY_USAGE_LAST_USED_TIMESTAMP { get { if (!_RANKING_STRATEGY_USAGE_LAST_USED_TIMESTAMPReady) { _RANKING_STRATEGY_USAGE_LAST_USED_TIMESTAMPContent = SGetField<int>(LocalBridgeClazz, "RANKING_STRATEGY_USAGE_LAST_USED_TIMESTAMP"); _RANKING_STRATEGY_USAGE_LAST_USED_TIMESTAMPReady = true; } return _RANKING_STRATEGY_USAGE_LAST_USED_TIMESTAMPContent; } }
        private static int _RANKING_STRATEGY_USAGE_LAST_USED_TIMESTAMPContent = default;
        private static bool _RANKING_STRATEGY_USAGE_LAST_USED_TIMESTAMPReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.html#TERM_MATCH_EXACT_ONLY"/>
        /// </summary>
        public static int TERM_MATCH_EXACT_ONLY { get { if (!_TERM_MATCH_EXACT_ONLYReady) { _TERM_MATCH_EXACT_ONLYContent = SGetField<int>(LocalBridgeClazz, "TERM_MATCH_EXACT_ONLY"); _TERM_MATCH_EXACT_ONLYReady = true; } return _TERM_MATCH_EXACT_ONLYContent; } }
        private static int _TERM_MATCH_EXACT_ONLYContent = default;
        private static bool _TERM_MATCH_EXACT_ONLYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.html#TERM_MATCH_PREFIX"/>
        /// </summary>
        public static int TERM_MATCH_PREFIX { get { if (!_TERM_MATCH_PREFIXReady) { _TERM_MATCH_PREFIXContent = SGetField<int>(LocalBridgeClazz, "TERM_MATCH_PREFIX"); _TERM_MATCH_PREFIXReady = true; } return _TERM_MATCH_PREFIXContent; } }
        private static int _TERM_MATCH_PREFIXContent = default;
        private static bool _TERM_MATCH_PREFIXReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.html#PROJECTION_SCHEMA_TYPE_WILDCARD"/>
        /// </summary>
        public static Java.Lang.String PROJECTION_SCHEMA_TYPE_WILDCARD { get { if (!_PROJECTION_SCHEMA_TYPE_WILDCARDReady) { _PROJECTION_SCHEMA_TYPE_WILDCARDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "PROJECTION_SCHEMA_TYPE_WILDCARD"); _PROJECTION_SCHEMA_TYPE_WILDCARDReady = true; } return _PROJECTION_SCHEMA_TYPE_WILDCARDContent; } }
        private static Java.Lang.String _PROJECTION_SCHEMA_TYPE_WILDCARDContent = default;
        private static bool _PROJECTION_SCHEMA_TYPE_WILDCARDReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.html#getAdvancedRankingExpression()"/> 
        /// </summary>
        public Java.Lang.String AdvancedRankingExpression
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getAdvancedRankingExpression", "()Ljava/lang/String;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.html#getFilterNamespaces()"/> 
        /// </summary>
        public Java.Util.List<Java.Lang.String> FilterNamespaces
        {
            get { return IExecuteWithSignature<Java.Util.List<Java.Lang.String>>("getFilterNamespaces", "()Ljava/util/List;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.html#getFilterPackageNames()"/> 
        /// </summary>
        public Java.Util.List<Java.Lang.String> FilterPackageNames
        {
            get { return IExecuteWithSignature<Java.Util.List<Java.Lang.String>>("getFilterPackageNames", "()Ljava/util/List;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.html#getFilterSchemas()"/> 
        /// </summary>
        public Java.Util.List<Java.Lang.String> FilterSchemas
        {
            get { return IExecuteWithSignature<Java.Util.List<Java.Lang.String>>("getFilterSchemas", "()Ljava/util/List;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.html#getJoinSpec()"/> 
        /// </summary>
        public Android.App.Appsearch.JoinSpec JoinSpec
        {
            get { return IExecuteWithSignature<Android.App.Appsearch.JoinSpec>("getJoinSpec", "()Landroid/app/appsearch/JoinSpec;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.html#getMaxSnippetSize()"/> 
        /// </summary>
        public int MaxSnippetSize
        {
            get { return IExecuteWithSignature<int>("getMaxSnippetSize", "()I"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.html#getOrder()"/> 
        /// </summary>
        public int Order
        {
            get { return IExecuteWithSignature<int>("getOrder", "()I"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.html#getProjectionPaths()"/> 
        /// </summary>
        public Java.Util.Map<Java.Lang.String, Java.Util.List<Android.App.Appsearch.PropertyPath>> ProjectionPaths
        {
            get { return IExecuteWithSignature<Java.Util.Map<Java.Lang.String, Java.Util.List<Android.App.Appsearch.PropertyPath>>>("getProjectionPaths", "()Ljava/util/Map;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.html#getProjections()"/> 
        /// </summary>
        public Java.Util.Map<Java.Lang.String, Java.Util.List<Java.Lang.String>> Projections
        {
            get { return IExecuteWithSignature<Java.Util.Map<Java.Lang.String, Java.Util.List<Java.Lang.String>>>("getProjections", "()Ljava/util/Map;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.html#getPropertyWeightPaths()"/> 
        /// </summary>
        public Java.Util.Map<Java.Lang.String, Java.Util.Map<Android.App.Appsearch.PropertyPath, Java.Lang.Double>> PropertyWeightPaths
        {
            get { return IExecuteWithSignature<Java.Util.Map<Java.Lang.String, Java.Util.Map<Android.App.Appsearch.PropertyPath, Java.Lang.Double>>>("getPropertyWeightPaths", "()Ljava/util/Map;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.html#getPropertyWeights()"/> 
        /// </summary>
        public Java.Util.Map<Java.Lang.String, Java.Util.Map<Java.Lang.String, Java.Lang.Double>> PropertyWeights
        {
            get { return IExecuteWithSignature<Java.Util.Map<Java.Lang.String, Java.Util.Map<Java.Lang.String, Java.Lang.Double>>>("getPropertyWeights", "()Ljava/util/Map;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.html#getRankingStrategy()"/> 
        /// </summary>
        public int RankingStrategy
        {
            get { return IExecuteWithSignature<int>("getRankingStrategy", "()I"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.html#getResultCountPerPage()"/> 
        /// </summary>
        public int ResultCountPerPage
        {
            get { return IExecuteWithSignature<int>("getResultCountPerPage", "()I"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.html#getResultGroupingLimit()"/> 
        /// </summary>
        public int ResultGroupingLimit
        {
            get { return IExecuteWithSignature<int>("getResultGroupingLimit", "()I"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.html#getResultGroupingTypeFlags()"/> 
        /// </summary>
        public int ResultGroupingTypeFlags
        {
            get { return IExecuteWithSignature<int>("getResultGroupingTypeFlags", "()I"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.html#getSnippetCount()"/> 
        /// </summary>
        public int SnippetCount
        {
            get { return IExecuteWithSignature<int>("getSnippetCount", "()I"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.html#getSnippetCountPerProperty()"/> 
        /// </summary>
        public int SnippetCountPerProperty
        {
            get { return IExecuteWithSignature<int>("getSnippetCountPerProperty", "()I"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.html#getTermMatch()"/> 
        /// </summary>
        public int TermMatch
        {
            get { return IExecuteWithSignature<int>("getTermMatch", "()I"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.html#isListFilterQueryLanguageEnabled()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsListFilterQueryLanguageEnabled()
        {
            return IExecuteWithSignature<bool>("isListFilterQueryLanguageEnabled", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.html#isNumericSearchEnabled()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsNumericSearchEnabled()
        {
            return IExecuteWithSignature<bool>("isNumericSearchEnabled", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.html#isVerbatimSearchEnabled()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsVerbatimSearchEnabled()
        {
            return IExecuteWithSignature<bool>("isVerbatimSearchEnabled", "()Z");
        }

        #endregion

        #region Nested classes
        #region Builder
        public partial class Builder
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.Builder.html#build()"/>
            /// </summary>
            /// <returns><see cref="Android.App.Appsearch.SearchSpec"/></returns>
            public Android.App.Appsearch.SearchSpec Build()
            {
                return IExecuteWithSignature<Android.App.Appsearch.SearchSpec>("build", "()Landroid/app/appsearch/SearchSpec;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.Builder.html#addFilterNamespaces(java.lang.String[])"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Android.App.Appsearch.SearchSpec.Builder"/></returns>
            public Android.App.Appsearch.SearchSpec.Builder AddFilterNamespaces(params Java.Lang.String[] arg0)
            {
                if (arg0.Length == 0) return IExecuteWithSignature<Android.App.Appsearch.SearchSpec.Builder>("addFilterNamespaces", "([Ljava/lang/String;)Landroid/app/appsearch/SearchSpec$Builder;"); else return IExecuteWithSignature<Android.App.Appsearch.SearchSpec.Builder>("addFilterNamespaces", "([Ljava/lang/String;)Landroid/app/appsearch/SearchSpec$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.Builder.html#addFilterNamespaces(java.util.Collection)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Util.Collection"/></param>
            /// <returns><see cref="Android.App.Appsearch.SearchSpec.Builder"/></returns>
            public Android.App.Appsearch.SearchSpec.Builder AddFilterNamespaces(Java.Util.Collection<Java.Lang.String> arg0)
            {
                return IExecuteWithSignature<Android.App.Appsearch.SearchSpec.Builder>("addFilterNamespaces", "(Ljava/util/Collection;)Landroid/app/appsearch/SearchSpec$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.Builder.html#addFilterPackageNames(java.lang.String[])"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Android.App.Appsearch.SearchSpec.Builder"/></returns>
            public Android.App.Appsearch.SearchSpec.Builder AddFilterPackageNames(params Java.Lang.String[] arg0)
            {
                if (arg0.Length == 0) return IExecuteWithSignature<Android.App.Appsearch.SearchSpec.Builder>("addFilterPackageNames", "([Ljava/lang/String;)Landroid/app/appsearch/SearchSpec$Builder;"); else return IExecuteWithSignature<Android.App.Appsearch.SearchSpec.Builder>("addFilterPackageNames", "([Ljava/lang/String;)Landroid/app/appsearch/SearchSpec$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.Builder.html#addFilterPackageNames(java.util.Collection)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Util.Collection"/></param>
            /// <returns><see cref="Android.App.Appsearch.SearchSpec.Builder"/></returns>
            public Android.App.Appsearch.SearchSpec.Builder AddFilterPackageNames(Java.Util.Collection<Java.Lang.String> arg0)
            {
                return IExecuteWithSignature<Android.App.Appsearch.SearchSpec.Builder>("addFilterPackageNames", "(Ljava/util/Collection;)Landroid/app/appsearch/SearchSpec$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.Builder.html#addFilterSchemas(java.lang.String[])"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Android.App.Appsearch.SearchSpec.Builder"/></returns>
            public Android.App.Appsearch.SearchSpec.Builder AddFilterSchemas(params Java.Lang.String[] arg0)
            {
                if (arg0.Length == 0) return IExecuteWithSignature<Android.App.Appsearch.SearchSpec.Builder>("addFilterSchemas", "([Ljava/lang/String;)Landroid/app/appsearch/SearchSpec$Builder;"); else return IExecuteWithSignature<Android.App.Appsearch.SearchSpec.Builder>("addFilterSchemas", "([Ljava/lang/String;)Landroid/app/appsearch/SearchSpec$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.Builder.html#addFilterSchemas(java.util.Collection)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Util.Collection"/></param>
            /// <returns><see cref="Android.App.Appsearch.SearchSpec.Builder"/></returns>
            public Android.App.Appsearch.SearchSpec.Builder AddFilterSchemas(Java.Util.Collection<Java.Lang.String> arg0)
            {
                return IExecuteWithSignature<Android.App.Appsearch.SearchSpec.Builder>("addFilterSchemas", "(Ljava/util/Collection;)Landroid/app/appsearch/SearchSpec$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.Builder.html#addProjection(java.lang.String,java.util.Collection)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <param name="arg1"><see cref="Java.Util.Collection"/></param>
            /// <returns><see cref="Android.App.Appsearch.SearchSpec.Builder"/></returns>
            public Android.App.Appsearch.SearchSpec.Builder AddProjection(Java.Lang.String arg0, Java.Util.Collection<Java.Lang.String> arg1)
            {
                return IExecute<Android.App.Appsearch.SearchSpec.Builder>("addProjection", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.Builder.html#addProjectionPaths(java.lang.String,java.util.Collection)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <param name="arg1"><see cref="Java.Util.Collection"/></param>
            /// <returns><see cref="Android.App.Appsearch.SearchSpec.Builder"/></returns>
            public Android.App.Appsearch.SearchSpec.Builder AddProjectionPaths(Java.Lang.String arg0, Java.Util.Collection<Android.App.Appsearch.PropertyPath> arg1)
            {
                return IExecute<Android.App.Appsearch.SearchSpec.Builder>("addProjectionPaths", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.Builder.html#setJoinSpec(android.app.appsearch.JoinSpec)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.App.Appsearch.JoinSpec"/></param>
            /// <returns><see cref="Android.App.Appsearch.SearchSpec.Builder"/></returns>
            public Android.App.Appsearch.SearchSpec.Builder SetJoinSpec(Android.App.Appsearch.JoinSpec arg0)
            {
                return IExecuteWithSignature<Android.App.Appsearch.SearchSpec.Builder>("setJoinSpec", "(Landroid/app/appsearch/JoinSpec;)Landroid/app/appsearch/SearchSpec$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.Builder.html#setListFilterQueryLanguageEnabled(boolean)"/>
            /// </summary>
            /// <param name="arg0"><see cref="bool"/></param>
            /// <returns><see cref="Android.App.Appsearch.SearchSpec.Builder"/></returns>
            public Android.App.Appsearch.SearchSpec.Builder SetListFilterQueryLanguageEnabled(bool arg0)
            {
                return IExecuteWithSignature<Android.App.Appsearch.SearchSpec.Builder>("setListFilterQueryLanguageEnabled", "(Z)Landroid/app/appsearch/SearchSpec$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.Builder.html#setMaxSnippetSize(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <returns><see cref="Android.App.Appsearch.SearchSpec.Builder"/></returns>
            public Android.App.Appsearch.SearchSpec.Builder SetMaxSnippetSize(int arg0)
            {
                return IExecuteWithSignature<Android.App.Appsearch.SearchSpec.Builder>("setMaxSnippetSize", "(I)Landroid/app/appsearch/SearchSpec$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.Builder.html#setNumericSearchEnabled(boolean)"/>
            /// </summary>
            /// <param name="arg0"><see cref="bool"/></param>
            /// <returns><see cref="Android.App.Appsearch.SearchSpec.Builder"/></returns>
            public Android.App.Appsearch.SearchSpec.Builder SetNumericSearchEnabled(bool arg0)
            {
                return IExecuteWithSignature<Android.App.Appsearch.SearchSpec.Builder>("setNumericSearchEnabled", "(Z)Landroid/app/appsearch/SearchSpec$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.Builder.html#setOrder(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <returns><see cref="Android.App.Appsearch.SearchSpec.Builder"/></returns>
            public Android.App.Appsearch.SearchSpec.Builder SetOrder(int arg0)
            {
                return IExecuteWithSignature<Android.App.Appsearch.SearchSpec.Builder>("setOrder", "(I)Landroid/app/appsearch/SearchSpec$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.Builder.html#setPropertyWeightPaths(java.lang.String,java.util.Map)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <param name="arg1"><see cref="Java.Util.Map"/></param>
            /// <returns><see cref="Android.App.Appsearch.SearchSpec.Builder"/></returns>
            public Android.App.Appsearch.SearchSpec.Builder SetPropertyWeightPaths(Java.Lang.String arg0, Java.Util.Map<Android.App.Appsearch.PropertyPath, Java.Lang.Double> arg1)
            {
                return IExecute<Android.App.Appsearch.SearchSpec.Builder>("setPropertyWeightPaths", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.Builder.html#setPropertyWeights(java.lang.String,java.util.Map)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <param name="arg1"><see cref="Java.Util.Map"/></param>
            /// <returns><see cref="Android.App.Appsearch.SearchSpec.Builder"/></returns>
            public Android.App.Appsearch.SearchSpec.Builder SetPropertyWeights(Java.Lang.String arg0, Java.Util.Map<Java.Lang.String, Java.Lang.Double> arg1)
            {
                return IExecute<Android.App.Appsearch.SearchSpec.Builder>("setPropertyWeights", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.Builder.html#setRankingStrategy(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <returns><see cref="Android.App.Appsearch.SearchSpec.Builder"/></returns>
            public Android.App.Appsearch.SearchSpec.Builder SetRankingStrategy(int arg0)
            {
                return IExecuteWithSignature<Android.App.Appsearch.SearchSpec.Builder>("setRankingStrategy", "(I)Landroid/app/appsearch/SearchSpec$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.Builder.html#setRankingStrategy(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Android.App.Appsearch.SearchSpec.Builder"/></returns>
            public Android.App.Appsearch.SearchSpec.Builder SetRankingStrategy(Java.Lang.String arg0)
            {
                return IExecuteWithSignature<Android.App.Appsearch.SearchSpec.Builder>("setRankingStrategy", "(Ljava/lang/String;)Landroid/app/appsearch/SearchSpec$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.Builder.html#setResultCountPerPage(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <returns><see cref="Android.App.Appsearch.SearchSpec.Builder"/></returns>
            public Android.App.Appsearch.SearchSpec.Builder SetResultCountPerPage(int arg0)
            {
                return IExecuteWithSignature<Android.App.Appsearch.SearchSpec.Builder>("setResultCountPerPage", "(I)Landroid/app/appsearch/SearchSpec$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.Builder.html#setResultGrouping(int,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            /// <returns><see cref="Android.App.Appsearch.SearchSpec.Builder"/></returns>
            public Android.App.Appsearch.SearchSpec.Builder SetResultGrouping(int arg0, int arg1)
            {
                return IExecute<Android.App.Appsearch.SearchSpec.Builder>("setResultGrouping", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.Builder.html#setSnippetCount(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <returns><see cref="Android.App.Appsearch.SearchSpec.Builder"/></returns>
            public Android.App.Appsearch.SearchSpec.Builder SetSnippetCount(int arg0)
            {
                return IExecuteWithSignature<Android.App.Appsearch.SearchSpec.Builder>("setSnippetCount", "(I)Landroid/app/appsearch/SearchSpec$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.Builder.html#setSnippetCountPerProperty(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <returns><see cref="Android.App.Appsearch.SearchSpec.Builder"/></returns>
            public Android.App.Appsearch.SearchSpec.Builder SetSnippetCountPerProperty(int arg0)
            {
                return IExecuteWithSignature<Android.App.Appsearch.SearchSpec.Builder>("setSnippetCountPerProperty", "(I)Landroid/app/appsearch/SearchSpec$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.Builder.html#setTermMatch(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <returns><see cref="Android.App.Appsearch.SearchSpec.Builder"/></returns>
            public Android.App.Appsearch.SearchSpec.Builder SetTermMatch(int arg0)
            {
                return IExecuteWithSignature<Android.App.Appsearch.SearchSpec.Builder>("setTermMatch", "(I)Landroid/app/appsearch/SearchSpec$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/app/appsearch/SearchSpec.Builder.html#setVerbatimSearchEnabled(boolean)"/>
            /// </summary>
            /// <param name="arg0"><see cref="bool"/></param>
            /// <returns><see cref="Android.App.Appsearch.SearchSpec.Builder"/></returns>
            public Android.App.Appsearch.SearchSpec.Builder SetVerbatimSearchEnabled(bool arg0)
            {
                return IExecuteWithSignature<Android.App.Appsearch.SearchSpec.Builder>("setVerbatimSearchEnabled", "(Z)Landroid/app/appsearch/SearchSpec$Builder;", arg0);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}