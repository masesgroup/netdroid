/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.4.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.App.Admin
{
    #region DevicePolicyIdentifiers
    public partial class DevicePolicyIdentifiers
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/admin/DevicePolicyIdentifiers.html#ACCOUNT_MANAGEMENT_DISABLED_POLICY"/>
        /// </summary>
        public static Java.Lang.String ACCOUNT_MANAGEMENT_DISABLED_POLICY { get { if (!_ACCOUNT_MANAGEMENT_DISABLED_POLICYReady) { _ACCOUNT_MANAGEMENT_DISABLED_POLICYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACCOUNT_MANAGEMENT_DISABLED_POLICY"); _ACCOUNT_MANAGEMENT_DISABLED_POLICYReady = true; } return _ACCOUNT_MANAGEMENT_DISABLED_POLICYContent; } }
        private static Java.Lang.String _ACCOUNT_MANAGEMENT_DISABLED_POLICYContent = default;
        private static bool _ACCOUNT_MANAGEMENT_DISABLED_POLICYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/admin/DevicePolicyIdentifiers.html#APPLICATION_HIDDEN_POLICY"/>
        /// </summary>
        public static Java.Lang.String APPLICATION_HIDDEN_POLICY { get { if (!_APPLICATION_HIDDEN_POLICYReady) { _APPLICATION_HIDDEN_POLICYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "APPLICATION_HIDDEN_POLICY"); _APPLICATION_HIDDEN_POLICYReady = true; } return _APPLICATION_HIDDEN_POLICYContent; } }
        private static Java.Lang.String _APPLICATION_HIDDEN_POLICYContent = default;
        private static bool _APPLICATION_HIDDEN_POLICYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/admin/DevicePolicyIdentifiers.html#APPLICATION_RESTRICTIONS_POLICY"/>
        /// </summary>
        public static Java.Lang.String APPLICATION_RESTRICTIONS_POLICY { get { if (!_APPLICATION_RESTRICTIONS_POLICYReady) { _APPLICATION_RESTRICTIONS_POLICYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "APPLICATION_RESTRICTIONS_POLICY"); _APPLICATION_RESTRICTIONS_POLICYReady = true; } return _APPLICATION_RESTRICTIONS_POLICYContent; } }
        private static Java.Lang.String _APPLICATION_RESTRICTIONS_POLICYContent = default;
        private static bool _APPLICATION_RESTRICTIONS_POLICYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/admin/DevicePolicyIdentifiers.html#AUTO_TIME_POLICY"/>
        /// </summary>
        public static Java.Lang.String AUTO_TIME_POLICY { get { if (!_AUTO_TIME_POLICYReady) { _AUTO_TIME_POLICYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "AUTO_TIME_POLICY"); _AUTO_TIME_POLICYReady = true; } return _AUTO_TIME_POLICYContent; } }
        private static Java.Lang.String _AUTO_TIME_POLICYContent = default;
        private static bool _AUTO_TIME_POLICYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/admin/DevicePolicyIdentifiers.html#AUTO_TIMEZONE_POLICY"/>
        /// </summary>
        public static Java.Lang.String AUTO_TIMEZONE_POLICY { get { if (!_AUTO_TIMEZONE_POLICYReady) { _AUTO_TIMEZONE_POLICYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "AUTO_TIMEZONE_POLICY"); _AUTO_TIMEZONE_POLICYReady = true; } return _AUTO_TIMEZONE_POLICYContent; } }
        private static Java.Lang.String _AUTO_TIMEZONE_POLICYContent = default;
        private static bool _AUTO_TIMEZONE_POLICYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/admin/DevicePolicyIdentifiers.html#BACKUP_SERVICE_POLICY"/>
        /// </summary>
        public static Java.Lang.String BACKUP_SERVICE_POLICY { get { if (!_BACKUP_SERVICE_POLICYReady) { _BACKUP_SERVICE_POLICYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "BACKUP_SERVICE_POLICY"); _BACKUP_SERVICE_POLICYReady = true; } return _BACKUP_SERVICE_POLICYContent; } }
        private static Java.Lang.String _BACKUP_SERVICE_POLICYContent = default;
        private static bool _BACKUP_SERVICE_POLICYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/admin/DevicePolicyIdentifiers.html#CAMERA_DISABLED_POLICY"/>
        /// </summary>
        public static Java.Lang.String CAMERA_DISABLED_POLICY { get { if (!_CAMERA_DISABLED_POLICYReady) { _CAMERA_DISABLED_POLICYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CAMERA_DISABLED_POLICY"); _CAMERA_DISABLED_POLICYReady = true; } return _CAMERA_DISABLED_POLICYContent; } }
        private static Java.Lang.String _CAMERA_DISABLED_POLICYContent = default;
        private static bool _CAMERA_DISABLED_POLICYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/admin/DevicePolicyIdentifiers.html#KEYGUARD_DISABLED_FEATURES_POLICY"/>
        /// </summary>
        public static Java.Lang.String KEYGUARD_DISABLED_FEATURES_POLICY { get { if (!_KEYGUARD_DISABLED_FEATURES_POLICYReady) { _KEYGUARD_DISABLED_FEATURES_POLICYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEYGUARD_DISABLED_FEATURES_POLICY"); _KEYGUARD_DISABLED_FEATURES_POLICYReady = true; } return _KEYGUARD_DISABLED_FEATURES_POLICYContent; } }
        private static Java.Lang.String _KEYGUARD_DISABLED_FEATURES_POLICYContent = default;
        private static bool _KEYGUARD_DISABLED_FEATURES_POLICYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/admin/DevicePolicyIdentifiers.html#LOCK_TASK_POLICY"/>
        /// </summary>
        public static Java.Lang.String LOCK_TASK_POLICY { get { if (!_LOCK_TASK_POLICYReady) { _LOCK_TASK_POLICYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "LOCK_TASK_POLICY"); _LOCK_TASK_POLICYReady = true; } return _LOCK_TASK_POLICYContent; } }
        private static Java.Lang.String _LOCK_TASK_POLICYContent = default;
        private static bool _LOCK_TASK_POLICYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/admin/DevicePolicyIdentifiers.html#PACKAGE_UNINSTALL_BLOCKED_POLICY"/>
        /// </summary>
        public static Java.Lang.String PACKAGE_UNINSTALL_BLOCKED_POLICY { get { if (!_PACKAGE_UNINSTALL_BLOCKED_POLICYReady) { _PACKAGE_UNINSTALL_BLOCKED_POLICYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "PACKAGE_UNINSTALL_BLOCKED_POLICY"); _PACKAGE_UNINSTALL_BLOCKED_POLICYReady = true; } return _PACKAGE_UNINSTALL_BLOCKED_POLICYContent; } }
        private static Java.Lang.String _PACKAGE_UNINSTALL_BLOCKED_POLICYContent = default;
        private static bool _PACKAGE_UNINSTALL_BLOCKED_POLICYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/admin/DevicePolicyIdentifiers.html#PACKAGES_SUSPENDED_POLICY"/>
        /// </summary>
        public static Java.Lang.String PACKAGES_SUSPENDED_POLICY { get { if (!_PACKAGES_SUSPENDED_POLICYReady) { _PACKAGES_SUSPENDED_POLICYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "PACKAGES_SUSPENDED_POLICY"); _PACKAGES_SUSPENDED_POLICYReady = true; } return _PACKAGES_SUSPENDED_POLICYContent; } }
        private static Java.Lang.String _PACKAGES_SUSPENDED_POLICYContent = default;
        private static bool _PACKAGES_SUSPENDED_POLICYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/admin/DevicePolicyIdentifiers.html#PERMISSION_GRANT_POLICY"/>
        /// </summary>
        public static Java.Lang.String PERMISSION_GRANT_POLICY { get { if (!_PERMISSION_GRANT_POLICYReady) { _PERMISSION_GRANT_POLICYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "PERMISSION_GRANT_POLICY"); _PERMISSION_GRANT_POLICYReady = true; } return _PERMISSION_GRANT_POLICYContent; } }
        private static Java.Lang.String _PERMISSION_GRANT_POLICYContent = default;
        private static bool _PERMISSION_GRANT_POLICYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/admin/DevicePolicyIdentifiers.html#PERSISTENT_PREFERRED_ACTIVITY_POLICY"/>
        /// </summary>
        public static Java.Lang.String PERSISTENT_PREFERRED_ACTIVITY_POLICY { get { if (!_PERSISTENT_PREFERRED_ACTIVITY_POLICYReady) { _PERSISTENT_PREFERRED_ACTIVITY_POLICYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "PERSISTENT_PREFERRED_ACTIVITY_POLICY"); _PERSISTENT_PREFERRED_ACTIVITY_POLICYReady = true; } return _PERSISTENT_PREFERRED_ACTIVITY_POLICYContent; } }
        private static Java.Lang.String _PERSISTENT_PREFERRED_ACTIVITY_POLICYContent = default;
        private static bool _PERSISTENT_PREFERRED_ACTIVITY_POLICYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/admin/DevicePolicyIdentifiers.html#RESET_PASSWORD_TOKEN_POLICY"/>
        /// </summary>
        public static Java.Lang.String RESET_PASSWORD_TOKEN_POLICY { get { if (!_RESET_PASSWORD_TOKEN_POLICYReady) { _RESET_PASSWORD_TOKEN_POLICYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "RESET_PASSWORD_TOKEN_POLICY"); _RESET_PASSWORD_TOKEN_POLICYReady = true; } return _RESET_PASSWORD_TOKEN_POLICYContent; } }
        private static Java.Lang.String _RESET_PASSWORD_TOKEN_POLICYContent = default;
        private static bool _RESET_PASSWORD_TOKEN_POLICYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/admin/DevicePolicyIdentifiers.html#STATUS_BAR_DISABLED_POLICY"/>
        /// </summary>
        public static Java.Lang.String STATUS_BAR_DISABLED_POLICY { get { if (!_STATUS_BAR_DISABLED_POLICYReady) { _STATUS_BAR_DISABLED_POLICYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "STATUS_BAR_DISABLED_POLICY"); _STATUS_BAR_DISABLED_POLICYReady = true; } return _STATUS_BAR_DISABLED_POLICYContent; } }
        private static Java.Lang.String _STATUS_BAR_DISABLED_POLICYContent = default;
        private static bool _STATUS_BAR_DISABLED_POLICYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/admin/DevicePolicyIdentifiers.html#USER_CONTROL_DISABLED_PACKAGES_POLICY"/>
        /// </summary>
        public static Java.Lang.String USER_CONTROL_DISABLED_PACKAGES_POLICY { get { if (!_USER_CONTROL_DISABLED_PACKAGES_POLICYReady) { _USER_CONTROL_DISABLED_PACKAGES_POLICYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "USER_CONTROL_DISABLED_PACKAGES_POLICY"); _USER_CONTROL_DISABLED_PACKAGES_POLICYReady = true; } return _USER_CONTROL_DISABLED_PACKAGES_POLICYContent; } }
        private static Java.Lang.String _USER_CONTROL_DISABLED_PACKAGES_POLICYContent = default;
        private static bool _USER_CONTROL_DISABLED_PACKAGES_POLICYReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/admin/DevicePolicyIdentifiers.html#getIdentifierForUserRestriction(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public static Java.Lang.String GetIdentifierForUserRestriction(Java.Lang.String arg0)
        {
            return SExecuteWithSignature<Java.Lang.String>(LocalBridgeClazz, "getIdentifierForUserRestriction", "(Ljava/lang/String;)Ljava/lang/String;", arg0);
        }

        #endregion

        #region Instance methods

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}