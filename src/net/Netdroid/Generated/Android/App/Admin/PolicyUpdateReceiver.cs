/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.1.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.App.Admin
{
    #region PolicyUpdateReceiver
    public partial class PolicyUpdateReceiver
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/admin/PolicyUpdateReceiver.html#ACTION_DEVICE_POLICY_CHANGED"/>
        /// </summary>
        public static Java.Lang.String ACTION_DEVICE_POLICY_CHANGED { get { if (!_ACTION_DEVICE_POLICY_CHANGEDReady) { _ACTION_DEVICE_POLICY_CHANGEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_DEVICE_POLICY_CHANGED"); _ACTION_DEVICE_POLICY_CHANGEDReady = true; } return _ACTION_DEVICE_POLICY_CHANGEDContent; } }
        private static Java.Lang.String _ACTION_DEVICE_POLICY_CHANGEDContent = default;
        private static bool _ACTION_DEVICE_POLICY_CHANGEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/admin/PolicyUpdateReceiver.html#ACTION_DEVICE_POLICY_SET_RESULT"/>
        /// </summary>
        public static Java.Lang.String ACTION_DEVICE_POLICY_SET_RESULT { get { if (!_ACTION_DEVICE_POLICY_SET_RESULTReady) { _ACTION_DEVICE_POLICY_SET_RESULTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_DEVICE_POLICY_SET_RESULT"); _ACTION_DEVICE_POLICY_SET_RESULTReady = true; } return _ACTION_DEVICE_POLICY_SET_RESULTContent; } }
        private static Java.Lang.String _ACTION_DEVICE_POLICY_SET_RESULTContent = default;
        private static bool _ACTION_DEVICE_POLICY_SET_RESULTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/admin/PolicyUpdateReceiver.html#EXTRA_ACCOUNT_TYPE"/>
        /// </summary>
        public static Java.Lang.String EXTRA_ACCOUNT_TYPE { get { if (!_EXTRA_ACCOUNT_TYPEReady) { _EXTRA_ACCOUNT_TYPEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_ACCOUNT_TYPE"); _EXTRA_ACCOUNT_TYPEReady = true; } return _EXTRA_ACCOUNT_TYPEContent; } }
        private static Java.Lang.String _EXTRA_ACCOUNT_TYPEContent = default;
        private static bool _EXTRA_ACCOUNT_TYPEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/admin/PolicyUpdateReceiver.html#EXTRA_INTENT_FILTER"/>
        /// </summary>
        public static Java.Lang.String EXTRA_INTENT_FILTER { get { if (!_EXTRA_INTENT_FILTERReady) { _EXTRA_INTENT_FILTERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_INTENT_FILTER"); _EXTRA_INTENT_FILTERReady = true; } return _EXTRA_INTENT_FILTERContent; } }
        private static Java.Lang.String _EXTRA_INTENT_FILTERContent = default;
        private static bool _EXTRA_INTENT_FILTERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/admin/PolicyUpdateReceiver.html#EXTRA_PACKAGE_NAME"/>
        /// </summary>
        public static Java.Lang.String EXTRA_PACKAGE_NAME { get { if (!_EXTRA_PACKAGE_NAMEReady) { _EXTRA_PACKAGE_NAMEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_PACKAGE_NAME"); _EXTRA_PACKAGE_NAMEReady = true; } return _EXTRA_PACKAGE_NAMEContent; } }
        private static Java.Lang.String _EXTRA_PACKAGE_NAMEContent = default;
        private static bool _EXTRA_PACKAGE_NAMEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/admin/PolicyUpdateReceiver.html#EXTRA_PERMISSION_NAME"/>
        /// </summary>
        public static Java.Lang.String EXTRA_PERMISSION_NAME { get { if (!_EXTRA_PERMISSION_NAMEReady) { _EXTRA_PERMISSION_NAMEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_PERMISSION_NAME"); _EXTRA_PERMISSION_NAMEReady = true; } return _EXTRA_PERMISSION_NAMEContent; } }
        private static Java.Lang.String _EXTRA_PERMISSION_NAMEContent = default;
        private static bool _EXTRA_PERMISSION_NAMEReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/admin/PolicyUpdateReceiver.html#onPolicyChanged(android.content.Context,java.lang.String,android.os.Bundle,android.app.admin.TargetUser,android.app.admin.PolicyUpdateResult)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="Android.Os.Bundle"/></param>
        /// <param name="arg3"><see cref="Android.App.Admin.TargetUser"/></param>
        /// <param name="arg4"><see cref="Android.App.Admin.PolicyUpdateResult"/></param>
        public void OnPolicyChanged(Android.Content.Context arg0, Java.Lang.String arg1, Android.Os.Bundle arg2, Android.App.Admin.TargetUser arg3, Android.App.Admin.PolicyUpdateResult arg4)
        {
            IExecute("onPolicyChanged", arg0, arg1, arg2, arg3, arg4);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/admin/PolicyUpdateReceiver.html#onPolicySetResult(android.content.Context,java.lang.String,android.os.Bundle,android.app.admin.TargetUser,android.app.admin.PolicyUpdateResult)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="Android.Os.Bundle"/></param>
        /// <param name="arg3"><see cref="Android.App.Admin.TargetUser"/></param>
        /// <param name="arg4"><see cref="Android.App.Admin.PolicyUpdateResult"/></param>
        public void OnPolicySetResult(Android.Content.Context arg0, Java.Lang.String arg1, Android.Os.Bundle arg2, Android.App.Admin.TargetUser arg3, Android.App.Admin.PolicyUpdateResult arg4)
        {
            IExecute("onPolicySetResult", arg0, arg1, arg2, arg3, arg4);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}