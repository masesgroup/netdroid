/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.10.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.App
{
    #region BroadcastOptions declaration
    /// <summary>
    /// <see href="https://developer.android.com/reference/android/app/BroadcastOptions.html"/>
    /// </summary>
    public partial class BroadcastOptions : MASES.JCOBridge.C2JBridge.JVMBridgeBase<BroadcastOptions>
    {
        const string _bridgeClassName = "android.app.BroadcastOptions";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BroadcastOptions() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BroadcastOptions(params object[] args) : base(args) { }
    
        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
    
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;
    
        // TODO: complete the class
    
    }
    #endregion

    #region BroadcastOptions implementation
    public partial class BroadcastOptions
    {
        #region Constructors
    
        #endregion
    
        #region Class/Interface conversion operators
    
        #endregion
    
        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/BroadcastOptions.html#DEFERRAL_POLICY_DEFAULT"/>
        /// </summary>
        public static int DEFERRAL_POLICY_DEFAULT { get { if (!_DEFERRAL_POLICY_DEFAULTReady) { _DEFERRAL_POLICY_DEFAULTContent = SGetField<int>(LocalBridgeClazz, "DEFERRAL_POLICY_DEFAULT"); _DEFERRAL_POLICY_DEFAULTReady = true; } return _DEFERRAL_POLICY_DEFAULTContent; } }
        private static int _DEFERRAL_POLICY_DEFAULTContent = default;
        private static bool _DEFERRAL_POLICY_DEFAULTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/BroadcastOptions.html#DEFERRAL_POLICY_NONE"/>
        /// </summary>
        public static int DEFERRAL_POLICY_NONE { get { if (!_DEFERRAL_POLICY_NONEReady) { _DEFERRAL_POLICY_NONEContent = SGetField<int>(LocalBridgeClazz, "DEFERRAL_POLICY_NONE"); _DEFERRAL_POLICY_NONEReady = true; } return _DEFERRAL_POLICY_NONEContent; } }
        private static int _DEFERRAL_POLICY_NONEContent = default;
        private static bool _DEFERRAL_POLICY_NONEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/BroadcastOptions.html#DEFERRAL_POLICY_UNTIL_ACTIVE"/>
        /// </summary>
        public static int DEFERRAL_POLICY_UNTIL_ACTIVE { get { if (!_DEFERRAL_POLICY_UNTIL_ACTIVEReady) { _DEFERRAL_POLICY_UNTIL_ACTIVEContent = SGetField<int>(LocalBridgeClazz, "DEFERRAL_POLICY_UNTIL_ACTIVE"); _DEFERRAL_POLICY_UNTIL_ACTIVEReady = true; } return _DEFERRAL_POLICY_UNTIL_ACTIVEContent; } }
        private static int _DEFERRAL_POLICY_UNTIL_ACTIVEContent = default;
        private static bool _DEFERRAL_POLICY_UNTIL_ACTIVEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/BroadcastOptions.html#DELIVERY_GROUP_POLICY_ALL"/>
        /// </summary>
        public static int DELIVERY_GROUP_POLICY_ALL { get { if (!_DELIVERY_GROUP_POLICY_ALLReady) { _DELIVERY_GROUP_POLICY_ALLContent = SGetField<int>(LocalBridgeClazz, "DELIVERY_GROUP_POLICY_ALL"); _DELIVERY_GROUP_POLICY_ALLReady = true; } return _DELIVERY_GROUP_POLICY_ALLContent; } }
        private static int _DELIVERY_GROUP_POLICY_ALLContent = default;
        private static bool _DELIVERY_GROUP_POLICY_ALLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/BroadcastOptions.html#DELIVERY_GROUP_POLICY_MOST_RECENT"/>
        /// </summary>
        public static int DELIVERY_GROUP_POLICY_MOST_RECENT { get { if (!_DELIVERY_GROUP_POLICY_MOST_RECENTReady) { _DELIVERY_GROUP_POLICY_MOST_RECENTContent = SGetField<int>(LocalBridgeClazz, "DELIVERY_GROUP_POLICY_MOST_RECENT"); _DELIVERY_GROUP_POLICY_MOST_RECENTReady = true; } return _DELIVERY_GROUP_POLICY_MOST_RECENTContent; } }
        private static int _DELIVERY_GROUP_POLICY_MOST_RECENTContent = default;
        private static bool _DELIVERY_GROUP_POLICY_MOST_RECENTReady = false; // this is used because in case of generics 
    
        #endregion
    
        #region Static methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/BroadcastOptions.html#fromBundle(android.os.Bundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.Bundle"/></param>
        /// <returns><see cref="Android.App.BroadcastOptions"/></returns>
        public static Android.App.BroadcastOptions FromBundle(Android.Os.Bundle arg0)
        {
            return SExecuteWithSignature<Android.App.BroadcastOptions>(LocalBridgeClazz, "fromBundle", "(Landroid/os/Bundle;)Landroid/app/BroadcastOptions;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/BroadcastOptions.html#makeBasic()"/>
        /// </summary>
        /// <returns><see cref="Android.App.BroadcastOptions"/></returns>
        public static Android.App.BroadcastOptions MakeBasic()
        {
            return SExecuteWithSignature<Android.App.BroadcastOptions>(LocalBridgeClazz, "makeBasic", "()Landroid/app/BroadcastOptions;");
        }
    
        #endregion
    
        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/BroadcastOptions.html#setDeferralPolicy(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Android.App.BroadcastOptions"/></returns>
        public Android.App.BroadcastOptions SetDeferralPolicy(int arg0)
        {
            return IExecuteWithSignature<Android.App.BroadcastOptions>("setDeferralPolicy", "(I)Landroid/app/BroadcastOptions;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/BroadcastOptions.html#setDeliveryGroupMatchingKey(java.lang.String,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Android.App.BroadcastOptions"/></returns>
        public Android.App.BroadcastOptions SetDeliveryGroupMatchingKey(Java.Lang.String arg0, Java.Lang.String arg1)
        {
            return IExecuteWithSignature<Android.App.BroadcastOptions>("setDeliveryGroupMatchingKey", "(Ljava/lang/String;Ljava/lang/String;)Landroid/app/BroadcastOptions;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/BroadcastOptions.html#setDeliveryGroupPolicy(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Android.App.BroadcastOptions"/></returns>
        public Android.App.BroadcastOptions SetDeliveryGroupPolicy(int arg0)
        {
            return IExecuteWithSignature<Android.App.BroadcastOptions>("setDeliveryGroupPolicy", "(I)Landroid/app/BroadcastOptions;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/BroadcastOptions.html#setShareIdentityEnabled(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        /// <returns><see cref="Android.App.BroadcastOptions"/></returns>
        public Android.App.BroadcastOptions SetShareIdentityEnabled(bool arg0)
        {
            return IExecuteWithSignature<Android.App.BroadcastOptions>("setShareIdentityEnabled", "(Z)Landroid/app/BroadcastOptions;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/BroadcastOptions.html#toBundle()"/>
        /// </summary>
        /// <returns><see cref="Android.Os.Bundle"/></returns>
        public Android.Os.Bundle ToBundle()
        {
            return IExecuteWithSignature<Android.Os.Bundle>("toBundle", "()Landroid/os/Bundle;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/BroadcastOptions.html#isShareIdentityEnabled()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsShareIdentityEnabled()
        {
            return IExecuteWithSignature<bool>("isShareIdentityEnabled", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/BroadcastOptions.html#getDeferralPolicy()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetDeferralPolicy()
        {
            return IExecuteWithSignature<int>("getDeferralPolicy", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/BroadcastOptions.html#getDeliveryGroupPolicy()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetDeliveryGroupPolicy()
        {
            return IExecuteWithSignature<int>("getDeliveryGroupPolicy", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/BroadcastOptions.html#getDeliveryGroupMatchingKey()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetDeliveryGroupMatchingKey()
        {
            return IExecuteWithSignature<Java.Lang.String>("getDeliveryGroupMatchingKey", "()Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/BroadcastOptions.html#clearDeferralPolicy()"/>
        /// </summary>
        public void ClearDeferralPolicy()
        {
            IExecuteWithSignature("clearDeferralPolicy", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/BroadcastOptions.html#clearDeliveryGroupMatchingKey()"/>
        /// </summary>
        public void ClearDeliveryGroupMatchingKey()
        {
            IExecuteWithSignature("clearDeliveryGroupMatchingKey", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/BroadcastOptions.html#clearDeliveryGroupPolicy()"/>
        /// </summary>
        public void ClearDeliveryGroupPolicy()
        {
            IExecuteWithSignature("clearDeliveryGroupPolicy", "()V");
        }
    
        #endregion
    
        #region Nested classes
    
        #endregion
    
        // TODO: complete the class
    }
    #endregion
}