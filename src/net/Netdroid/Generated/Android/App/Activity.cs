/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.9.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.App
{
    #region Activity declaration
    /// <summary>
    /// <see href="https://developer.android.com/reference/android/app/Activity.html"/>
    /// </summary>
    public partial class Activity : Android.View.ContextThemeWrapper
    {
        const string _bridgeClassName = "android.app.Activity";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public Activity() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public Activity(params object[] args) : base(args) { }

        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class
        #region ScreenCaptureCallback declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.ScreenCaptureCallback.html"/>
        /// </summary>
        public partial class ScreenCaptureCallback : MASES.JCOBridge.C2JBridge.JVMBridgeBase<ScreenCaptureCallback>
        {
            const string _bridgeClassName = "android.app.Activity$ScreenCaptureCallback";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            [global::System.Obsolete("ScreenCaptureCallback class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public ScreenCaptureCallback() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            [global::System.Obsolete("ScreenCaptureCallback class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public ScreenCaptureCallback(params object[] args) : base(args) { }

            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => true;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => true;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;

            // TODO: complete the class

        }
        #endregion

    
    }
    #endregion

    #region Activity implementation
    public partial class Activity : Android.Content.IComponentCallbacks2
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Android.App.Activity"/> to <see cref="Android.Content.ComponentCallbacks2"/>
        /// </summary>
        public static implicit operator Android.Content.ComponentCallbacks2(Android.App.Activity t) => t.Cast<Android.Content.ComponentCallbacks2>();

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_DIALER"/>
        /// </summary>
        public static int DEFAULT_KEYS_DIALER { get { if (!_DEFAULT_KEYS_DIALERReady) { _DEFAULT_KEYS_DIALERContent = SGetField<int>(LocalBridgeClazz, "DEFAULT_KEYS_DIALER"); _DEFAULT_KEYS_DIALERReady = true; } return _DEFAULT_KEYS_DIALERContent; } }
        private static int _DEFAULT_KEYS_DIALERContent = default;
        private static bool _DEFAULT_KEYS_DIALERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_DISABLE"/>
        /// </summary>
        public static int DEFAULT_KEYS_DISABLE { get { if (!_DEFAULT_KEYS_DISABLEReady) { _DEFAULT_KEYS_DISABLEContent = SGetField<int>(LocalBridgeClazz, "DEFAULT_KEYS_DISABLE"); _DEFAULT_KEYS_DISABLEReady = true; } return _DEFAULT_KEYS_DISABLEContent; } }
        private static int _DEFAULT_KEYS_DISABLEContent = default;
        private static bool _DEFAULT_KEYS_DISABLEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_SEARCH_GLOBAL"/>
        /// </summary>
        public static int DEFAULT_KEYS_SEARCH_GLOBAL { get { if (!_DEFAULT_KEYS_SEARCH_GLOBALReady) { _DEFAULT_KEYS_SEARCH_GLOBALContent = SGetField<int>(LocalBridgeClazz, "DEFAULT_KEYS_SEARCH_GLOBAL"); _DEFAULT_KEYS_SEARCH_GLOBALReady = true; } return _DEFAULT_KEYS_SEARCH_GLOBALContent; } }
        private static int _DEFAULT_KEYS_SEARCH_GLOBALContent = default;
        private static bool _DEFAULT_KEYS_SEARCH_GLOBALReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_SEARCH_LOCAL"/>
        /// </summary>
        public static int DEFAULT_KEYS_SEARCH_LOCAL { get { if (!_DEFAULT_KEYS_SEARCH_LOCALReady) { _DEFAULT_KEYS_SEARCH_LOCALContent = SGetField<int>(LocalBridgeClazz, "DEFAULT_KEYS_SEARCH_LOCAL"); _DEFAULT_KEYS_SEARCH_LOCALReady = true; } return _DEFAULT_KEYS_SEARCH_LOCALContent; } }
        private static int _DEFAULT_KEYS_SEARCH_LOCALContent = default;
        private static bool _DEFAULT_KEYS_SEARCH_LOCALReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_SHORTCUT"/>
        /// </summary>
        public static int DEFAULT_KEYS_SHORTCUT { get { if (!_DEFAULT_KEYS_SHORTCUTReady) { _DEFAULT_KEYS_SHORTCUTContent = SGetField<int>(LocalBridgeClazz, "DEFAULT_KEYS_SHORTCUT"); _DEFAULT_KEYS_SHORTCUTReady = true; } return _DEFAULT_KEYS_SHORTCUTContent; } }
        private static int _DEFAULT_KEYS_SHORTCUTContent = default;
        private static bool _DEFAULT_KEYS_SHORTCUTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#FULLSCREEN_MODE_REQUEST_ENTER"/>
        /// </summary>
        public static int FULLSCREEN_MODE_REQUEST_ENTER { get { if (!_FULLSCREEN_MODE_REQUEST_ENTERReady) { _FULLSCREEN_MODE_REQUEST_ENTERContent = SGetField<int>(LocalBridgeClazz, "FULLSCREEN_MODE_REQUEST_ENTER"); _FULLSCREEN_MODE_REQUEST_ENTERReady = true; } return _FULLSCREEN_MODE_REQUEST_ENTERContent; } }
        private static int _FULLSCREEN_MODE_REQUEST_ENTERContent = default;
        private static bool _FULLSCREEN_MODE_REQUEST_ENTERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#FULLSCREEN_MODE_REQUEST_EXIT"/>
        /// </summary>
        public static int FULLSCREEN_MODE_REQUEST_EXIT { get { if (!_FULLSCREEN_MODE_REQUEST_EXITReady) { _FULLSCREEN_MODE_REQUEST_EXITContent = SGetField<int>(LocalBridgeClazz, "FULLSCREEN_MODE_REQUEST_EXIT"); _FULLSCREEN_MODE_REQUEST_EXITReady = true; } return _FULLSCREEN_MODE_REQUEST_EXITContent; } }
        private static int _FULLSCREEN_MODE_REQUEST_EXITContent = default;
        private static bool _FULLSCREEN_MODE_REQUEST_EXITReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#OVERRIDE_TRANSITION_CLOSE"/>
        /// </summary>
        public static int OVERRIDE_TRANSITION_CLOSE { get { if (!_OVERRIDE_TRANSITION_CLOSEReady) { _OVERRIDE_TRANSITION_CLOSEContent = SGetField<int>(LocalBridgeClazz, "OVERRIDE_TRANSITION_CLOSE"); _OVERRIDE_TRANSITION_CLOSEReady = true; } return _OVERRIDE_TRANSITION_CLOSEContent; } }
        private static int _OVERRIDE_TRANSITION_CLOSEContent = default;
        private static bool _OVERRIDE_TRANSITION_CLOSEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#OVERRIDE_TRANSITION_OPEN"/>
        /// </summary>
        public static int OVERRIDE_TRANSITION_OPEN { get { if (!_OVERRIDE_TRANSITION_OPENReady) { _OVERRIDE_TRANSITION_OPENContent = SGetField<int>(LocalBridgeClazz, "OVERRIDE_TRANSITION_OPEN"); _OVERRIDE_TRANSITION_OPENReady = true; } return _OVERRIDE_TRANSITION_OPENContent; } }
        private static int _OVERRIDE_TRANSITION_OPENContent = default;
        private static bool _OVERRIDE_TRANSITION_OPENReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#RESULT_CANCELED"/>
        /// </summary>
        public static int RESULT_CANCELED { get { if (!_RESULT_CANCELEDReady) { _RESULT_CANCELEDContent = SGetField<int>(LocalBridgeClazz, "RESULT_CANCELED"); _RESULT_CANCELEDReady = true; } return _RESULT_CANCELEDContent; } }
        private static int _RESULT_CANCELEDContent = default;
        private static bool _RESULT_CANCELEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#RESULT_FIRST_USER"/>
        /// </summary>
        public static int RESULT_FIRST_USER { get { if (!_RESULT_FIRST_USERReady) { _RESULT_FIRST_USERContent = SGetField<int>(LocalBridgeClazz, "RESULT_FIRST_USER"); _RESULT_FIRST_USERReady = true; } return _RESULT_FIRST_USERContent; } }
        private static int _RESULT_FIRST_USERContent = default;
        private static bool _RESULT_FIRST_USERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#RESULT_OK"/>
        /// </summary>
        public static int RESULT_OK { get { if (!_RESULT_OKReady) { _RESULT_OKContent = SGetField<int>(LocalBridgeClazz, "RESULT_OK"); _RESULT_OKReady = true; } return _RESULT_OKContent; } }
        private static int _RESULT_OKContent = default;
        private static bool _RESULT_OKReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#findViewById(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <typeparam name="T"><see cref="Android.View.View"/></typeparam>
        /// <returns><typeparamref name="T"/></returns>
        public T FindViewById<T>(int arg0) where T : Android.View.View
        {
            return IExecuteWithSignature<T>("findViewById", "(I)Landroid/view/View;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#getActionBar()"/>
        /// </summary>
        /// <returns><see cref="Android.App.ActionBar"/></returns>
        public Android.App.ActionBar GetActionBar()
        {
            return IExecuteWithSignature<Android.App.ActionBar>("getActionBar", "()Landroid/app/ActionBar;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#getCaller()"/>
        /// </summary>
        /// <returns><see cref="Android.App.ComponentCaller"/></returns>
        public Android.App.ComponentCaller GetCaller()
        {
            return IExecuteWithSignature<Android.App.ComponentCaller>("getCaller", "()Landroid/app/ComponentCaller;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#getCurrentCaller()"/>
        /// </summary>
        /// <returns><see cref="Android.App.ComponentCaller"/></returns>
        public Android.App.ComponentCaller GetCurrentCaller()
        {
            return IExecuteWithSignature<Android.App.ComponentCaller>("getCurrentCaller", "()Landroid/app/ComponentCaller;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#getInitialCaller()"/>
        /// </summary>
        /// <returns><see cref="Android.App.ComponentCaller"/></returns>
        public Android.App.ComponentCaller GetInitialCaller()
        {
            return IExecuteWithSignature<Android.App.ComponentCaller>("getInitialCaller", "()Landroid/app/ComponentCaller;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#getFragmentManager()"/>
        /// </summary>
        /// <returns><see cref="Android.App.FragmentManager"/></returns>
        [global::System.Obsolete()]
        public Android.App.FragmentManager GetFragmentManager()
        {
            return IExecuteWithSignature<Android.App.FragmentManager>("getFragmentManager", "()Landroid/app/FragmentManager;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#getLoaderManager()"/>
        /// </summary>
        /// <returns><see cref="Android.App.LoaderManager"/></returns>
        [global::System.Obsolete()]
        public Android.App.LoaderManager GetLoaderManager()
        {
            return IExecuteWithSignature<Android.App.LoaderManager>("getLoaderManager", "()Landroid/app/LoaderManager;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#createPendingResult(int,android.content.Intent,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="Android.Content.Intent"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <returns><see cref="Android.App.PendingIntent"/></returns>
        public Android.App.PendingIntent CreatePendingResult(int arg0, Android.Content.Intent arg1, int arg2)
        {
            return IExecute<Android.App.PendingIntent>("createPendingResult", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#getVoiceInteractor()"/>
        /// </summary>
        /// <returns><see cref="Android.App.VoiceInteractor"/></returns>
        public Android.App.VoiceInteractor GetVoiceInteractor()
        {
            return IExecuteWithSignature<Android.App.VoiceInteractor>("getVoiceInteractor", "()Landroid/app/VoiceInteractor;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#getCallingActivity()"/>
        /// </summary>
        /// <returns><see cref="Android.Content.ComponentName"/></returns>
        public Android.Content.ComponentName GetCallingActivity()
        {
            return IExecuteWithSignature<Android.Content.ComponentName>("getCallingActivity", "()Landroid/content/ComponentName;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#getComponentName()"/>
        /// </summary>
        /// <returns><see cref="Android.Content.ComponentName"/></returns>
        public Android.Content.ComponentName GetComponentName()
        {
            return IExecuteWithSignature<Android.Content.ComponentName>("getComponentName", "()Landroid/content/ComponentName;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#getIntent()"/>
        /// </summary>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public Android.Content.Intent GetIntent()
        {
            return IExecuteWithSignature<Android.Content.Intent>("getIntent", "()Landroid/content/Intent;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#getParentActivityIntent()"/>
        /// </summary>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public Android.Content.Intent GetParentActivityIntent()
        {
            return IExecuteWithSignature<Android.Content.Intent>("getParentActivityIntent", "()Landroid/content/Intent;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#getPreferences(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Android.Content.SharedPreferences"/></returns>
        public Android.Content.SharedPreferences GetPreferences(int arg0)
        {
            return IExecuteWithSignature<Android.Content.SharedPreferences>("getPreferences", "(I)Landroid/content/SharedPreferences;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#getReferrer()"/>
        /// </summary>
        /// <returns><see cref="Android.Net.Uri"/></returns>
        public Android.Net.Uri GetReferrer()
        {
            return IExecuteWithSignature<Android.Net.Uri>("getReferrer", "()Landroid/net/Uri;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onProvideReferrer()"/>
        /// </summary>
        /// <returns><see cref="Android.Net.Uri"/></returns>
        public Android.Net.Uri OnProvideReferrer()
        {
            return IExecuteWithSignature<Android.Net.Uri>("onProvideReferrer", "()Landroid/net/Uri;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#getContentScene()"/>
        /// </summary>
        /// <returns><see cref="Android.Transition.Scene"/></returns>
        public Android.Transition.Scene GetContentScene()
        {
            return IExecuteWithSignature<Android.Transition.Scene>("getContentScene", "()Landroid/transition/Scene;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#getContentTransitionManager()"/>
        /// </summary>
        /// <returns><see cref="Android.Transition.TransitionManager"/></returns>
        public Android.Transition.TransitionManager GetContentTransitionManager()
        {
            return IExecuteWithSignature<Android.Transition.TransitionManager>("getContentTransitionManager", "()Landroid/transition/TransitionManager;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onWindowStartingActionMode(android.view.ActionMode.Callback,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.ActionMode.Callback"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="Android.View.ActionMode"/></returns>
        public Android.View.ActionMode OnWindowStartingActionMode(Android.View.ActionMode.Callback arg0, int arg1)
        {
            return IExecute<Android.View.ActionMode>("onWindowStartingActionMode", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onWindowStartingActionMode(android.view.ActionMode.Callback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.ActionMode.Callback"/></param>
        /// <returns><see cref="Android.View.ActionMode"/></returns>
        public Android.View.ActionMode OnWindowStartingActionMode(Android.View.ActionMode.Callback arg0)
        {
            return IExecuteWithSignature<Android.View.ActionMode>("onWindowStartingActionMode", "(Landroid/view/ActionMode$Callback;)Landroid/view/ActionMode;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#startActionMode(android.view.ActionMode.Callback,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.ActionMode.Callback"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="Android.View.ActionMode"/></returns>
        public Android.View.ActionMode StartActionMode(Android.View.ActionMode.Callback arg0, int arg1)
        {
            return IExecute<Android.View.ActionMode>("startActionMode", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#startActionMode(android.view.ActionMode.Callback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.ActionMode.Callback"/></param>
        /// <returns><see cref="Android.View.ActionMode"/></returns>
        public Android.View.ActionMode StartActionMode(Android.View.ActionMode.Callback arg0)
        {
            return IExecuteWithSignature<Android.View.ActionMode>("startActionMode", "(Landroid/view/ActionMode$Callback;)Landroid/view/ActionMode;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#requestDragAndDropPermissions(android.view.DragEvent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.DragEvent"/></param>
        /// <returns><see cref="Android.View.DragAndDropPermissions"/></returns>
        public Android.View.DragAndDropPermissions RequestDragAndDropPermissions(Android.View.DragEvent arg0)
        {
            return IExecuteWithSignature<Android.View.DragAndDropPermissions>("requestDragAndDropPermissions", "(Landroid/view/DragEvent;)Landroid/view/DragAndDropPermissions;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#getLayoutInflater()"/>
        /// </summary>
        /// <returns><see cref="Android.View.LayoutInflater"/></returns>
        public Android.View.LayoutInflater GetLayoutInflater()
        {
            return IExecuteWithSignature<Android.View.LayoutInflater>("getLayoutInflater", "()Landroid/view/LayoutInflater;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#getMenuInflater()"/>
        /// </summary>
        /// <returns><see cref="Android.View.MenuInflater"/></returns>
        public Android.View.MenuInflater GetMenuInflater()
        {
            return IExecuteWithSignature<Android.View.MenuInflater>("getMenuInflater", "()Landroid/view/MenuInflater;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#getCurrentFocus()"/>
        /// </summary>
        /// <returns><see cref="Android.View.View"/></returns>
        public Android.View.View GetCurrentFocus()
        {
            return IExecuteWithSignature<Android.View.View>("getCurrentFocus", "()Landroid/view/View;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onCreatePanelView(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Android.View.View"/></returns>
        public Android.View.View OnCreatePanelView(int arg0)
        {
            return IExecuteWithSignature<Android.View.View>("onCreatePanelView", "(I)Landroid/view/View;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.View"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="Android.Content.Context"/></param>
        /// <param name="arg3"><see cref="Android.Util.AttributeSet"/></param>
        /// <returns><see cref="Android.View.View"/></returns>
        public Android.View.View OnCreateView(Android.View.View arg0, Java.Lang.String arg1, Android.Content.Context arg2, Android.Util.AttributeSet arg3)
        {
            return IExecute<Android.View.View>("onCreateView", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Android.Content.Context"/></param>
        /// <param name="arg2"><see cref="Android.Util.AttributeSet"/></param>
        /// <returns><see cref="Android.View.View"/></returns>
        public Android.View.View OnCreateView(Java.Lang.String arg0, Android.Content.Context arg1, Android.Util.AttributeSet arg2)
        {
            return IExecute<Android.View.View>("onCreateView", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#getWindow()"/>
        /// </summary>
        /// <returns><see cref="Android.View.Window"/></returns>
        public Android.View.Window GetWindow()
        {
            return IExecuteWithSignature<Android.View.Window>("getWindow", "()Landroid/view/Window;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#getWindowManager()"/>
        /// </summary>
        /// <returns><see cref="Android.View.WindowManager"/></returns>
        public Android.View.WindowManager GetWindowManager()
        {
            return IExecuteWithSignature<Android.View.WindowManager>("getWindowManager", "()Landroid/view/WindowManager;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#getOnBackInvokedDispatcher()"/>
        /// </summary>
        /// <returns><see cref="Android.Window.OnBackInvokedDispatcher"/></returns>
        public Android.Window.OnBackInvokedDispatcher GetOnBackInvokedDispatcher()
        {
            return IExecuteWithSignature<Android.Window.OnBackInvokedDispatcher>("getOnBackInvokedDispatcher", "()Landroid/window/OnBackInvokedDispatcher;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#dispatchGenericMotionEvent(android.view.MotionEvent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.MotionEvent"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool DispatchGenericMotionEvent(Android.View.MotionEvent arg0)
        {
            return IExecuteWithSignature<bool>("dispatchGenericMotionEvent", "(Landroid/view/MotionEvent;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#dispatchKeyEvent(android.view.KeyEvent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.KeyEvent"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool DispatchKeyEvent(Android.View.KeyEvent arg0)
        {
            return IExecuteWithSignature<bool>("dispatchKeyEvent", "(Landroid/view/KeyEvent;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#dispatchKeyShortcutEvent(android.view.KeyEvent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.KeyEvent"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool DispatchKeyShortcutEvent(Android.View.KeyEvent arg0)
        {
            return IExecuteWithSignature<bool>("dispatchKeyShortcutEvent", "(Landroid/view/KeyEvent;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.Accessibility.AccessibilityEvent"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool DispatchPopulateAccessibilityEvent(Android.View.Accessibility.AccessibilityEvent arg0)
        {
            return IExecuteWithSignature<bool>("dispatchPopulateAccessibilityEvent", "(Landroid/view/accessibility/AccessibilityEvent;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#dispatchTouchEvent(android.view.MotionEvent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.MotionEvent"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool DispatchTouchEvent(Android.View.MotionEvent arg0)
        {
            return IExecuteWithSignature<bool>("dispatchTouchEvent", "(Landroid/view/MotionEvent;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#dispatchTrackballEvent(android.view.MotionEvent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.MotionEvent"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool DispatchTrackballEvent(Android.View.MotionEvent arg0)
        {
            return IExecuteWithSignature<bool>("dispatchTrackballEvent", "(Landroid/view/MotionEvent;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#enterPictureInPictureMode(android.app.PictureInPictureParams)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.App.PictureInPictureParams"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool EnterPictureInPictureMode(Android.App.PictureInPictureParams arg0)
        {
            return IExecuteWithSignature<bool>("enterPictureInPictureMode", "(Landroid/app/PictureInPictureParams;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#hasWindowFocus()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool HasWindowFocus()
        {
            return IExecuteWithSignature<bool>("hasWindowFocus", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#isActivityTransitionRunning()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsActivityTransitionRunning()
        {
            return IExecuteWithSignature<bool>("isActivityTransitionRunning", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#isChangingConfigurations()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsChangingConfigurations()
        {
            return IExecuteWithSignature<bool>("isChangingConfigurations", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#isDestroyed()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsDestroyed()
        {
            return IExecuteWithSignature<bool>("isDestroyed", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#isFinishing()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsFinishing()
        {
            return IExecuteWithSignature<bool>("isFinishing", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#isImmersive()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsImmersive()
        {
            return IExecuteWithSignature<bool>("isImmersive", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#isInMultiWindowMode()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsInMultiWindowMode()
        {
            return IExecuteWithSignature<bool>("isInMultiWindowMode", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#isInPictureInPictureMode()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsInPictureInPictureMode()
        {
            return IExecuteWithSignature<bool>("isInPictureInPictureMode", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#isLaunchedFromBubble()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsLaunchedFromBubble()
        {
            return IExecuteWithSignature<bool>("isLaunchedFromBubble", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#isLocalVoiceInteractionSupported()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsLocalVoiceInteractionSupported()
        {
            return IExecuteWithSignature<bool>("isLocalVoiceInteractionSupported", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#isTaskRoot()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsTaskRoot()
        {
            return IExecuteWithSignature<bool>("isTaskRoot", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#isVoiceInteraction()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsVoiceInteraction()
        {
            return IExecuteWithSignature<bool>("isVoiceInteraction", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#isVoiceInteractionRoot()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsVoiceInteractionRoot()
        {
            return IExecuteWithSignature<bool>("isVoiceInteractionRoot", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#moveTaskToBack(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool MoveTaskToBack(bool arg0)
        {
            return IExecuteWithSignature<bool>("moveTaskToBack", "(Z)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#navigateUpTo(android.content.Intent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool NavigateUpTo(Android.Content.Intent arg0)
        {
            return IExecuteWithSignature<bool>("navigateUpTo", "(Landroid/content/Intent;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#navigateUpToFromChild(android.app.Activity,android.content.Intent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.App.Activity"/></param>
        /// <param name="arg1"><see cref="Android.Content.Intent"/></param>
        /// <returns><see cref="bool"/></returns>
        [global::System.Obsolete()]
        public bool NavigateUpToFromChild(Android.App.Activity arg0, Android.Content.Intent arg1)
        {
            return IExecute<bool>("navigateUpToFromChild", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onContextItemSelected(android.view.MenuItem)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.MenuItem"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool OnContextItemSelected(Android.View.MenuItem arg0)
        {
            return IExecuteWithSignature<bool>("onContextItemSelected", "(Landroid/view/MenuItem;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onCreateOptionsMenu(android.view.Menu)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.Menu"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool OnCreateOptionsMenu(Android.View.Menu arg0)
        {
            return IExecuteWithSignature<bool>("onCreateOptionsMenu", "(Landroid/view/Menu;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onCreatePanelMenu(int,android.view.Menu)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="Android.View.Menu"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool OnCreatePanelMenu(int arg0, Android.View.Menu arg1)
        {
            return IExecute<bool>("onCreatePanelMenu", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onCreateThumbnail(android.graphics.Bitmap,android.graphics.Canvas)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Graphics.Bitmap"/></param>
        /// <param name="arg1"><see cref="Android.Graphics.Canvas"/></param>
        /// <returns><see cref="bool"/></returns>
        [global::System.Obsolete()]
        public bool OnCreateThumbnail(Android.Graphics.Bitmap arg0, Android.Graphics.Canvas arg1)
        {
            return IExecute<bool>("onCreateThumbnail", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onGenericMotionEvent(android.view.MotionEvent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.MotionEvent"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool OnGenericMotionEvent(Android.View.MotionEvent arg0)
        {
            return IExecuteWithSignature<bool>("onGenericMotionEvent", "(Landroid/view/MotionEvent;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onKeyDown(int,android.view.KeyEvent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="Android.View.KeyEvent"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool OnKeyDown(int arg0, Android.View.KeyEvent arg1)
        {
            return IExecute<bool>("onKeyDown", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onKeyLongPress(int,android.view.KeyEvent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="Android.View.KeyEvent"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool OnKeyLongPress(int arg0, Android.View.KeyEvent arg1)
        {
            return IExecute<bool>("onKeyLongPress", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onKeyMultiple(int,int,android.view.KeyEvent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="Android.View.KeyEvent"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool OnKeyMultiple(int arg0, int arg1, Android.View.KeyEvent arg2)
        {
            return IExecute<bool>("onKeyMultiple", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onKeyShortcut(int,android.view.KeyEvent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="Android.View.KeyEvent"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool OnKeyShortcut(int arg0, Android.View.KeyEvent arg1)
        {
            return IExecute<bool>("onKeyShortcut", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onKeyUp(int,android.view.KeyEvent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="Android.View.KeyEvent"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool OnKeyUp(int arg0, Android.View.KeyEvent arg1)
        {
            return IExecute<bool>("onKeyUp", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onMenuItemSelected(int,android.view.MenuItem)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="Android.View.MenuItem"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool OnMenuItemSelected(int arg0, Android.View.MenuItem arg1)
        {
            return IExecute<bool>("onMenuItemSelected", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onMenuOpened(int,android.view.Menu)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="Android.View.Menu"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool OnMenuOpened(int arg0, Android.View.Menu arg1)
        {
            return IExecute<bool>("onMenuOpened", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onNavigateUp()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool OnNavigateUp()
        {
            return IExecuteWithSignature<bool>("onNavigateUp", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onNavigateUpFromChild(android.app.Activity)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.App.Activity"/></param>
        /// <returns><see cref="bool"/></returns>
        [global::System.Obsolete()]
        public bool OnNavigateUpFromChild(Android.App.Activity arg0)
        {
            return IExecuteWithSignature<bool>("onNavigateUpFromChild", "(Landroid/app/Activity;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onOptionsItemSelected(android.view.MenuItem)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.MenuItem"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool OnOptionsItemSelected(Android.View.MenuItem arg0)
        {
            return IExecuteWithSignature<bool>("onOptionsItemSelected", "(Landroid/view/MenuItem;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onPictureInPictureRequested()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool OnPictureInPictureRequested()
        {
            return IExecuteWithSignature<bool>("onPictureInPictureRequested", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onPrepareOptionsMenu(android.view.Menu)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.Menu"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool OnPrepareOptionsMenu(Android.View.Menu arg0)
        {
            return IExecuteWithSignature<bool>("onPrepareOptionsMenu", "(Landroid/view/Menu;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onPreparePanel(int,android.view.View,android.view.Menu)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="Android.View.View"/></param>
        /// <param name="arg2"><see cref="Android.View.Menu"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool OnPreparePanel(int arg0, Android.View.View arg1, Android.View.Menu arg2)
        {
            return IExecute<bool>("onPreparePanel", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onSearchRequested()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool OnSearchRequested()
        {
            return IExecuteWithSignature<bool>("onSearchRequested", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onSearchRequested(android.view.SearchEvent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.SearchEvent"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool OnSearchRequested(Android.View.SearchEvent arg0)
        {
            return IExecuteWithSignature<bool>("onSearchRequested", "(Landroid/view/SearchEvent;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onTouchEvent(android.view.MotionEvent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.MotionEvent"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool OnTouchEvent(Android.View.MotionEvent arg0)
        {
            return IExecuteWithSignature<bool>("onTouchEvent", "(Landroid/view/MotionEvent;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onTrackballEvent(android.view.MotionEvent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.MotionEvent"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool OnTrackballEvent(Android.View.MotionEvent arg0)
        {
            return IExecuteWithSignature<bool>("onTrackballEvent", "(Landroid/view/MotionEvent;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#releaseInstance()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool ReleaseInstance()
        {
            return IExecuteWithSignature<bool>("releaseInstance", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#requestVisibleBehind(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        /// <returns><see cref="bool"/></returns>
        [global::System.Obsolete()]
        public bool RequestVisibleBehind(bool arg0)
        {
            return IExecuteWithSignature<bool>("requestVisibleBehind", "(Z)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#setTranslucent(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool SetTranslucent(bool arg0)
        {
            return IExecuteWithSignature<bool>("setTranslucent", "(Z)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#shouldDockBigOverlays()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool ShouldDockBigOverlays()
        {
            return IExecuteWithSignature<bool>("shouldDockBigOverlays", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#shouldShowRequestPermissionRationale(java.lang.String,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool ShouldShowRequestPermissionRationale(Java.Lang.String arg0, int arg1)
        {
            return IExecute<bool>("shouldShowRequestPermissionRationale", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#shouldShowRequestPermissionRationale(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool ShouldShowRequestPermissionRationale(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<bool>("shouldShowRequestPermissionRationale", "(Ljava/lang/String;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#shouldUpRecreateTask(android.content.Intent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool ShouldUpRecreateTask(Android.Content.Intent arg0)
        {
            return IExecuteWithSignature<bool>("shouldUpRecreateTask", "(Landroid/content/Intent;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#showAssist(android.os.Bundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.Bundle"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool ShowAssist(Android.Os.Bundle arg0)
        {
            return IExecuteWithSignature<bool>("showAssist", "(Landroid/os/Bundle;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#startActivityIfNeeded(android.content.Intent,int,android.os.Bundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="Android.Os.Bundle"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool StartActivityIfNeeded(Android.Content.Intent arg0, int arg1, Android.Os.Bundle arg2)
        {
            return IExecute<bool>("startActivityIfNeeded", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#startActivityIfNeeded(android.content.Intent,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool StartActivityIfNeeded(Android.Content.Intent arg0, int arg1)
        {
            return IExecute<bool>("startActivityIfNeeded", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#startNextMatchingActivity(android.content.Intent,android.os.Bundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        /// <param name="arg1"><see cref="Android.Os.Bundle"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool StartNextMatchingActivity(Android.Content.Intent arg0, Android.Os.Bundle arg1)
        {
            return IExecute<bool>("startNextMatchingActivity", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#startNextMatchingActivity(android.content.Intent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool StartNextMatchingActivity(Android.Content.Intent arg0)
        {
            return IExecuteWithSignature<bool>("startNextMatchingActivity", "(Landroid/content/Intent;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#requireViewById(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <typeparam name="T"><see cref="Android.View.View"/></typeparam>
        /// <returns><typeparamref name="T"/></returns>
        public T RequireViewById<T>(int arg0) where T : Android.View.View
        {
            return IExecuteWithSignature<T>("requireViewById", "(I)Landroid/view/View;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#getParent()"/>
        /// </summary>
        /// <returns><see cref="Android.App.Activity"/></returns>
        [global::System.Obsolete()]
        public Android.App.Activity GetParent()
        {
            return IExecuteWithSignature<Android.App.Activity>("getParent", "()Landroid/app/Activity;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#getApplication()"/>
        /// </summary>
        /// <returns><see cref="Android.App.Application"/></returns>
        public Android.App.Application GetApplication()
        {
            return IExecuteWithSignature<Android.App.Application>("getApplication", "()Landroid/app/Application;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#managedQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Net.Uri"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="Java.Lang.String"/></param>
        /// <param name="arg3"><see cref="Java.Lang.String"/></param>
        /// <param name="arg4"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Android.Database.Cursor"/></returns>
        [global::System.Obsolete()]
        public Android.Database.Cursor ManagedQuery(Android.Net.Uri arg0, Java.Lang.String[] arg1, Java.Lang.String arg2, Java.Lang.String[] arg3, Java.Lang.String arg4)
        {
            return IExecute<Android.Database.Cursor>("managedQuery", arg0, arg1, arg2, arg3, arg4);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#getMediaController()"/>
        /// </summary>
        /// <returns><see cref="Android.Media.Session.MediaController"/></returns>
        public Android.Media.Session.MediaController GetMediaController()
        {
            return IExecuteWithSignature<Android.Media.Session.MediaController>("getMediaController", "()Landroid/media/session/MediaController;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#getSearchEvent()"/>
        /// </summary>
        /// <returns><see cref="Android.View.SearchEvent"/></returns>
        public Android.View.SearchEvent GetSearchEvent()
        {
            return IExecuteWithSignature<Android.View.SearchEvent>("getSearchEvent", "()Landroid/view/SearchEvent;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#getSplashScreen()"/>
        /// </summary>
        /// <returns><see cref="Android.Window.SplashScreen"/></returns>
        public Android.Window.SplashScreen GetSplashScreen()
        {
            return IExecuteWithSignature<Android.Window.SplashScreen>("getSplashScreen", "()Landroid/window/SplashScreen;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#isChild()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        [global::System.Obsolete()]
        public bool IsChild()
        {
            return IExecuteWithSignature<bool>("isChild", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#requestWindowFeature(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool RequestWindowFeature(int arg0)
        {
            return IExecuteWithSignature<bool>("requestWindowFeature", "(I)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#showDialog(int,android.os.Bundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="Android.Os.Bundle"/></param>
        /// <returns><see cref="bool"/></returns>
        [global::System.Obsolete()]
        public bool ShowDialog(int arg0, Android.Os.Bundle arg1)
        {
            return IExecute<bool>("showDialog", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#getTitleColor()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetTitleColor()
        {
            return IExecuteWithSignature<int>("getTitleColor", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#getVolumeControlStream()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetVolumeControlStream()
        {
            return IExecuteWithSignature<int>("getVolumeControlStream", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#getTitle()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.CharSequence"/></returns>
        public Java.Lang.CharSequence GetTitle()
        {
            return IExecuteWithSignature<Java.Lang.CharSequence>("getTitle", "()Ljava/lang/CharSequence;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#dismissDialog(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        [global::System.Obsolete()]
        public void DismissDialog(int arg0)
        {
            IExecuteWithSignature("dismissDialog", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#dismissKeyboardShortcutsHelper()"/>
        /// </summary>
        public void DismissKeyboardShortcutsHelper()
        {
            IExecuteWithSignature("dismissKeyboardShortcutsHelper", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#removeDialog(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        [global::System.Obsolete()]
        public void RemoveDialog(int arg0)
        {
            IExecuteWithSignature("removeDialog", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#requestPermissions(java.lang.String[],int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        public void RequestPermissions(Java.Lang.String[] arg0, int arg1, int arg2)
        {
            IExecute("requestPermissions", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#requestPermissions(java.lang.String[],int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void RequestPermissions(Java.Lang.String[] arg0, int arg1)
        {
            IExecute("requestPermissions", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#requestShowKeyboardShortcuts()"/>
        /// </summary>
        public void RequestShowKeyboardShortcuts()
        {
            IExecuteWithSignature("requestShowKeyboardShortcuts", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#runOnUiThread(java.lang.Runnable)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.Runnable"/></param>
        public void RunOnUiThread(Java.Lang.Runnable arg0)
        {
            IExecuteWithSignature("runOnUiThread", "(Ljava/lang/Runnable;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#setDefaultKeyMode(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetDefaultKeyMode(int arg0)
        {
            IExecuteWithSignature("setDefaultKeyMode", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#setFeatureDrawable(int,android.graphics.drawable.Drawable)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="Android.Graphics.Drawable.Drawable"/></param>
        public void SetFeatureDrawable(int arg0, Android.Graphics.Drawable.Drawable arg1)
        {
            IExecute("setFeatureDrawable", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#setFeatureDrawableAlpha(int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void SetFeatureDrawableAlpha(int arg0, int arg1)
        {
            IExecute("setFeatureDrawableAlpha", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#setFeatureDrawableResource(int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void SetFeatureDrawableResource(int arg0, int arg1)
        {
            IExecute("setFeatureDrawableResource", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#setFeatureDrawableUri(int,android.net.Uri)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="Android.Net.Uri"/></param>
        public void SetFeatureDrawableUri(int arg0, Android.Net.Uri arg1)
        {
            IExecute("setFeatureDrawableUri", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#setMediaController(android.media.session.MediaController)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Media.Session.MediaController"/></param>
        public void SetMediaController(Android.Media.Session.MediaController arg0)
        {
            IExecuteWithSignature("setMediaController", "(Landroid/media/session/MediaController;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#setProgress(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        [global::System.Obsolete()]
        public void SetProgress(int arg0)
        {
            IExecuteWithSignature("setProgress", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#setProgressBarIndeterminate(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        [global::System.Obsolete()]
        public void SetProgressBarIndeterminate(bool arg0)
        {
            IExecuteWithSignature("setProgressBarIndeterminate", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#setProgressBarIndeterminateVisibility(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        [global::System.Obsolete()]
        public void SetProgressBarIndeterminateVisibility(bool arg0)
        {
            IExecuteWithSignature("setProgressBarIndeterminateVisibility", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#setProgressBarVisibility(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        [global::System.Obsolete()]
        public void SetProgressBarVisibility(bool arg0)
        {
            IExecuteWithSignature("setProgressBarVisibility", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#setResult(int,android.content.Intent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="Android.Content.Intent"/></param>
        public void SetResult(int arg0, Android.Content.Intent arg1)
        {
            IExecute("setResult", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#setResult(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetResult(int arg0)
        {
            IExecuteWithSignature("setResult", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#setSecondaryProgress(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        [global::System.Obsolete()]
        public void SetSecondaryProgress(int arg0)
        {
            IExecuteWithSignature("setSecondaryProgress", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#setVolumeControlStream(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetVolumeControlStream(int arg0)
        {
            IExecuteWithSignature("setVolumeControlStream", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#showDialog(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        [global::System.Obsolete()]
        public void ShowDialog(int arg0)
        {
            IExecuteWithSignature("showDialog", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#getChangingConfigurations()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetChangingConfigurations()
        {
            return IExecuteWithSignature<int>("getChangingConfigurations", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#getLaunchedFromUid()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetLaunchedFromUid()
        {
            return IExecuteWithSignature<int>("getLaunchedFromUid", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#getMaxNumPictureInPictureActions()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetMaxNumPictureInPictureActions()
        {
            return IExecuteWithSignature<int>("getMaxNumPictureInPictureActions", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#getRequestedOrientation()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetRequestedOrientation()
        {
            return IExecuteWithSignature<int>("getRequestedOrientation", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#getTaskId()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetTaskId()
        {
            return IExecuteWithSignature<int>("getTaskId", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onCreateDescription()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.CharSequence"/></returns>
        public Java.Lang.CharSequence OnCreateDescription()
        {
            return IExecuteWithSignature<Java.Lang.CharSequence>("onCreateDescription", "()Ljava/lang/CharSequence;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#getLastNonConfigurationInstance()"/>
        /// </summary>
        /// <returns><see cref="object"/></returns>
        public object GetLastNonConfigurationInstance()
        {
            return IExecuteWithSignature("getLastNonConfigurationInstance", "()Ljava/lang/Object;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onRetainNonConfigurationInstance()"/>
        /// </summary>
        /// <returns><see cref="object"/></returns>
        public object OnRetainNonConfigurationInstance()
        {
            return IExecuteWithSignature("onRetainNonConfigurationInstance", "()Ljava/lang/Object;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#getCallingPackage()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetCallingPackage()
        {
            return IExecuteWithSignature<Java.Lang.String>("getCallingPackage", "()Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#getLaunchedFromPackage()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetLaunchedFromPackage()
        {
            return IExecuteWithSignature<Java.Lang.String>("getLaunchedFromPackage", "()Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#getLocalClassName()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetLocalClassName()
        {
            return IExecuteWithSignature<Java.Lang.String>("getLocalClassName", "()Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#addContentView(android.view.View,android.view.ViewGroup.LayoutParams)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.View"/></param>
        /// <param name="arg1"><see cref="Android.View.ViewGroup.LayoutParams"/></param>
        public void AddContentView(Android.View.View arg0, Android.View.ViewGroup.LayoutParams arg1)
        {
            IExecute("addContentView", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#clearOverrideActivityTransition(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void ClearOverrideActivityTransition(int arg0)
        {
            IExecuteWithSignature("clearOverrideActivityTransition", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#closeContextMenu()"/>
        /// </summary>
        public void CloseContextMenu()
        {
            IExecuteWithSignature("closeContextMenu", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#closeOptionsMenu()"/>
        /// </summary>
        public void CloseOptionsMenu()
        {
            IExecuteWithSignature("closeOptionsMenu", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Java.Io.FileDescriptor"/></param>
        /// <param name="arg2"><see cref="Java.Io.PrintWriter"/></param>
        /// <param name="arg3"><see cref="Java.Lang.String"/></param>
        public void Dump(Java.Lang.String arg0, Java.Io.FileDescriptor arg1, Java.Io.PrintWriter arg2, Java.Lang.String[] arg3)
        {
            IExecute("dump", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#enterPictureInPictureMode()"/>
        /// </summary>
        [global::System.Obsolete()]
        public void EnterPictureInPictureMode()
        {
            IExecuteWithSignature("enterPictureInPictureMode", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#finish()"/>
        /// </summary>
        public void Finish()
        {
            IExecuteWithSignature("finish", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#finishActivity(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void FinishActivity(int arg0)
        {
            IExecuteWithSignature("finishActivity", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#finishActivityFromChild(android.app.Activity,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.App.Activity"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        [global::System.Obsolete()]
        public void FinishActivityFromChild(Android.App.Activity arg0, int arg1)
        {
            IExecute("finishActivityFromChild", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#finishAffinity()"/>
        /// </summary>
        public void FinishAffinity()
        {
            IExecuteWithSignature("finishAffinity", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#finishAfterTransition()"/>
        /// </summary>
        public void FinishAfterTransition()
        {
            IExecuteWithSignature("finishAfterTransition", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#finishAndRemoveTask()"/>
        /// </summary>
        public void FinishAndRemoveTask()
        {
            IExecuteWithSignature("finishAndRemoveTask", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#finishFromChild(android.app.Activity)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.App.Activity"/></param>
        [global::System.Obsolete()]
        public void FinishFromChild(Android.App.Activity arg0)
        {
            IExecuteWithSignature("finishFromChild", "(Landroid/app/Activity;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#invalidateOptionsMenu()"/>
        /// </summary>
        public void InvalidateOptionsMenu()
        {
            IExecuteWithSignature("invalidateOptionsMenu", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onActionModeFinished(android.view.ActionMode)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.ActionMode"/></param>
        public void OnActionModeFinished(Android.View.ActionMode arg0)
        {
            IExecuteWithSignature("onActionModeFinished", "(Landroid/view/ActionMode;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onActionModeStarted(android.view.ActionMode)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.ActionMode"/></param>
        public void OnActionModeStarted(Android.View.ActionMode arg0)
        {
            IExecuteWithSignature("onActionModeStarted", "(Landroid/view/ActionMode;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onActivityReenter(int,android.content.Intent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="Android.Content.Intent"/></param>
        public void OnActivityReenter(int arg0, Android.Content.Intent arg1)
        {
            IExecute("onActivityReenter", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onActivityResult(int,int,android.content.Intent,android.app.ComponentCaller)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="Android.Content.Intent"/></param>
        /// <param name="arg3"><see cref="Android.App.ComponentCaller"/></param>
        public void OnActivityResult(int arg0, int arg1, Android.Content.Intent arg2, Android.App.ComponentCaller arg3)
        {
            IExecute("onActivityResult", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onAttachedToWindow()"/>
        /// </summary>
        public void OnAttachedToWindow()
        {
            IExecuteWithSignature("onAttachedToWindow", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onAttachFragment(android.app.Fragment)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.App.Fragment"/></param>
        [global::System.Obsolete()]
        public void OnAttachFragment(Android.App.Fragment arg0)
        {
            IExecuteWithSignature("onAttachFragment", "(Landroid/app/Fragment;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onBackPressed()"/>
        /// </summary>
        [global::System.Obsolete()]
        public void OnBackPressed()
        {
            IExecuteWithSignature("onBackPressed", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onConfigurationChanged(android.content.res.Configuration)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Res.Configuration"/></param>
        public void OnConfigurationChanged(Android.Content.Res.Configuration arg0)
        {
            IExecuteWithSignature("onConfigurationChanged", "(Landroid/content/res/Configuration;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onContentChanged()"/>
        /// </summary>
        public void OnContentChanged()
        {
            IExecuteWithSignature("onContentChanged", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onContextMenuClosed(android.view.Menu)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.Menu"/></param>
        public void OnContextMenuClosed(Android.View.Menu arg0)
        {
            IExecuteWithSignature("onContextMenuClosed", "(Landroid/view/Menu;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onCreate(android.os.Bundle,android.os.PersistableBundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.Bundle"/></param>
        /// <param name="arg1"><see cref="Android.Os.PersistableBundle"/></param>
        public void OnCreate(Android.Os.Bundle arg0, Android.Os.PersistableBundle arg1)
        {
            IExecute("onCreate", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu.ContextMenuInfo)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.ContextMenu"/></param>
        /// <param name="arg1"><see cref="Android.View.View"/></param>
        /// <param name="arg2"><see cref="Android.View.ContextMenu.ContextMenuInfo"/></param>
        public void OnCreateContextMenu(Android.View.ContextMenu arg0, Android.View.View arg1, Android.View.ContextMenu.ContextMenuInfo arg2)
        {
            IExecute("onCreateContextMenu", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onCreateNavigateUpTaskStack(android.app.TaskStackBuilder)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.App.TaskStackBuilder"/></param>
        public void OnCreateNavigateUpTaskStack(Android.App.TaskStackBuilder arg0)
        {
            IExecuteWithSignature("onCreateNavigateUpTaskStack", "(Landroid/app/TaskStackBuilder;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onDetachedFromWindow()"/>
        /// </summary>
        public void OnDetachedFromWindow()
        {
            IExecuteWithSignature("onDetachedFromWindow", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onEnterAnimationComplete()"/>
        /// </summary>
        public void OnEnterAnimationComplete()
        {
            IExecuteWithSignature("onEnterAnimationComplete", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onGetDirectActions(android.os.CancellationSignal,java.util.function.Consumer)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.CancellationSignal"/></param>
        /// <param name="arg1"><see cref="Java.Util.Function.Consumer"/></param>
        public void OnGetDirectActions(Android.Os.CancellationSignal arg0, Java.Util.Function.Consumer<Java.Util.List<Android.App.DirectAction>> arg1)
        {
            IExecute("onGetDirectActions", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onLocalVoiceInteractionStarted()"/>
        /// </summary>
        public void OnLocalVoiceInteractionStarted()
        {
            IExecuteWithSignature("onLocalVoiceInteractionStarted", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onLocalVoiceInteractionStopped()"/>
        /// </summary>
        public void OnLocalVoiceInteractionStopped()
        {
            IExecuteWithSignature("onLocalVoiceInteractionStopped", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onLowMemory()"/>
        /// </summary>
        public void OnLowMemory()
        {
            IExecuteWithSignature("onLowMemory", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onMultiWindowModeChanged(boolean,android.content.res.Configuration)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        /// <param name="arg1"><see cref="Android.Content.Res.Configuration"/></param>
        public void OnMultiWindowModeChanged(bool arg0, Android.Content.Res.Configuration arg1)
        {
            IExecute("onMultiWindowModeChanged", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onMultiWindowModeChanged(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        [global::System.Obsolete()]
        public void OnMultiWindowModeChanged(bool arg0)
        {
            IExecuteWithSignature("onMultiWindowModeChanged", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onNewIntent(android.content.Intent,android.app.ComponentCaller)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        /// <param name="arg1"><see cref="Android.App.ComponentCaller"/></param>
        public void OnNewIntent(Android.Content.Intent arg0, Android.App.ComponentCaller arg1)
        {
            IExecute("onNewIntent", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onOptionsMenuClosed(android.view.Menu)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.Menu"/></param>
        public void OnOptionsMenuClosed(Android.View.Menu arg0)
        {
            IExecuteWithSignature("onOptionsMenuClosed", "(Landroid/view/Menu;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onPanelClosed(int,android.view.Menu)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="Android.View.Menu"/></param>
        public void OnPanelClosed(int arg0, Android.View.Menu arg1)
        {
            IExecute("onPanelClosed", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onPerformDirectAction(java.lang.String,android.os.Bundle,android.os.CancellationSignal,java.util.function.Consumer)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Android.Os.Bundle"/></param>
        /// <param name="arg2"><see cref="Android.Os.CancellationSignal"/></param>
        /// <param name="arg3"><see cref="Java.Util.Function.Consumer"/></param>
        public void OnPerformDirectAction(Java.Lang.String arg0, Android.Os.Bundle arg1, Android.Os.CancellationSignal arg2, Java.Util.Function.Consumer<Android.Os.Bundle> arg3)
        {
            IExecute("onPerformDirectAction", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onPictureInPictureModeChanged(boolean,android.content.res.Configuration)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        /// <param name="arg1"><see cref="Android.Content.Res.Configuration"/></param>
        public void OnPictureInPictureModeChanged(bool arg0, Android.Content.Res.Configuration arg1)
        {
            IExecute("onPictureInPictureModeChanged", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onPictureInPictureModeChanged(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        [global::System.Obsolete()]
        public void OnPictureInPictureModeChanged(bool arg0)
        {
            IExecuteWithSignature("onPictureInPictureModeChanged", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onPictureInPictureUiStateChanged(android.app.PictureInPictureUiState)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.App.PictureInPictureUiState"/></param>
        public void OnPictureInPictureUiStateChanged(Android.App.PictureInPictureUiState arg0)
        {
            IExecuteWithSignature("onPictureInPictureUiStateChanged", "(Landroid/app/PictureInPictureUiState;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onPostCreate(android.os.Bundle,android.os.PersistableBundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.Bundle"/></param>
        /// <param name="arg1"><see cref="Android.Os.PersistableBundle"/></param>
        public void OnPostCreate(Android.Os.Bundle arg0, Android.Os.PersistableBundle arg1)
        {
            IExecute("onPostCreate", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onPrepareNavigateUpTaskStack(android.app.TaskStackBuilder)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.App.TaskStackBuilder"/></param>
        public void OnPrepareNavigateUpTaskStack(Android.App.TaskStackBuilder arg0)
        {
            IExecuteWithSignature("onPrepareNavigateUpTaskStack", "(Landroid/app/TaskStackBuilder;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onProvideAssistContent(android.app.assist.AssistContent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.App.Assist.AssistContent"/></param>
        public void OnProvideAssistContent(Android.App.Assist.AssistContent arg0)
        {
            IExecuteWithSignature("onProvideAssistContent", "(Landroid/app/assist/AssistContent;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onProvideAssistData(android.os.Bundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.Bundle"/></param>
        public void OnProvideAssistData(Android.Os.Bundle arg0)
        {
            IExecuteWithSignature("onProvideAssistData", "(Landroid/os/Bundle;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.List"/></param>
        /// <param name="arg1"><see cref="Android.View.Menu"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        public void OnProvideKeyboardShortcuts(Java.Util.List<Android.View.KeyboardShortcutGroup> arg0, Android.View.Menu arg1, int arg2)
        {
            IExecute("onProvideKeyboardShortcuts", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onRequestPermissionsResult(int,java.lang.String[],int[],int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <param name="arg3"><see cref="int"/></param>
        public void OnRequestPermissionsResult(int arg0, Java.Lang.String[] arg1, int[] arg2, int arg3)
        {
            IExecute("onRequestPermissionsResult", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onRequestPermissionsResult(int,java.lang.String[],int[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        public void OnRequestPermissionsResult(int arg0, Java.Lang.String[] arg1, int[] arg2)
        {
            IExecute("onRequestPermissionsResult", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onRestoreInstanceState(android.os.Bundle,android.os.PersistableBundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.Bundle"/></param>
        /// <param name="arg1"><see cref="Android.Os.PersistableBundle"/></param>
        public void OnRestoreInstanceState(Android.Os.Bundle arg0, Android.Os.PersistableBundle arg1)
        {
            IExecute("onRestoreInstanceState", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onSaveInstanceState(android.os.Bundle,android.os.PersistableBundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.Bundle"/></param>
        /// <param name="arg1"><see cref="Android.Os.PersistableBundle"/></param>
        public void OnSaveInstanceState(Android.Os.Bundle arg0, Android.Os.PersistableBundle arg1)
        {
            IExecute("onSaveInstanceState", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onStateNotSaved()"/>
        /// </summary>
        [global::System.Obsolete()]
        public void OnStateNotSaved()
        {
            IExecuteWithSignature("onStateNotSaved", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onTopResumedActivityChanged(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void OnTopResumedActivityChanged(bool arg0)
        {
            IExecuteWithSignature("onTopResumedActivityChanged", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onTrimMemory(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void OnTrimMemory(int arg0)
        {
            IExecuteWithSignature("onTrimMemory", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onUserInteraction()"/>
        /// </summary>
        public void OnUserInteraction()
        {
            IExecuteWithSignature("onUserInteraction", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onVisibleBehindCanceled()"/>
        /// </summary>
        [global::System.Obsolete()]
        public void OnVisibleBehindCanceled()
        {
            IExecuteWithSignature("onVisibleBehindCanceled", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onWindowAttributesChanged(android.view.WindowManager.LayoutParams)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.WindowManager.LayoutParams"/></param>
        public void OnWindowAttributesChanged(Android.View.WindowManager.LayoutParams arg0)
        {
            IExecuteWithSignature("onWindowAttributesChanged", "(Landroid/view/WindowManager$LayoutParams;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#onWindowFocusChanged(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void OnWindowFocusChanged(bool arg0)
        {
            IExecuteWithSignature("onWindowFocusChanged", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#openContextMenu(android.view.View)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.View"/></param>
        public void OpenContextMenu(Android.View.View arg0)
        {
            IExecuteWithSignature("openContextMenu", "(Landroid/view/View;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#openOptionsMenu()"/>
        /// </summary>
        public void OpenOptionsMenu()
        {
            IExecuteWithSignature("openOptionsMenu", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#overrideActivityTransition(int,int,int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <param name="arg3"><see cref="int"/></param>
        public void OverrideActivityTransition(int arg0, int arg1, int arg2, int arg3)
        {
            IExecute("overrideActivityTransition", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#overrideActivityTransition(int,int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        public void OverrideActivityTransition(int arg0, int arg1, int arg2)
        {
            IExecute("overrideActivityTransition", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#overridePendingTransition(int,int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        [global::System.Obsolete()]
        public void OverridePendingTransition(int arg0, int arg1, int arg2)
        {
            IExecute("overridePendingTransition", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#overridePendingTransition(int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        [global::System.Obsolete()]
        public void OverridePendingTransition(int arg0, int arg1)
        {
            IExecute("overridePendingTransition", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#postponeEnterTransition()"/>
        /// </summary>
        public void PostponeEnterTransition()
        {
            IExecuteWithSignature("postponeEnterTransition", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#recreate()"/>
        /// </summary>
        public void Recreate()
        {
            IExecuteWithSignature("recreate", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#registerActivityLifecycleCallbacks(android.app.Application.ActivityLifecycleCallbacks)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.App.Application.ActivityLifecycleCallbacks"/></param>
        public void RegisterActivityLifecycleCallbacks(Android.App.Application.ActivityLifecycleCallbacks arg0)
        {
            IExecuteWithSignature("registerActivityLifecycleCallbacks", "(Landroid/app/Application$ActivityLifecycleCallbacks;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#registerForContextMenu(android.view.View)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.View"/></param>
        public void RegisterForContextMenu(Android.View.View arg0)
        {
            IExecuteWithSignature("registerForContextMenu", "(Landroid/view/View;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#registerScreenCaptureCallback(java.util.concurrent.Executor,android.app.Activity.ScreenCaptureCallback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Concurrent.Executor"/></param>
        /// <param name="arg1"><see cref="Android.App.Activity.ScreenCaptureCallback"/></param>
        public void RegisterScreenCaptureCallback(Java.Util.Concurrent.Executor arg0, Android.App.Activity.ScreenCaptureCallback arg1)
        {
            IExecute("registerScreenCaptureCallback", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#reportFullyDrawn()"/>
        /// </summary>
        public void ReportFullyDrawn()
        {
            IExecuteWithSignature("reportFullyDrawn", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#requestFullscreenMode(int,android.os.OutcomeReceiver)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="Android.Os.OutcomeReceiver"/></param>
        public void RequestFullscreenMode(int arg0, Android.Os.OutcomeReceiver<Java.Lang.Void, Java.Lang.Throwable> arg1)
        {
            IExecute("requestFullscreenMode", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#setActionBar(android.widget.Toolbar)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Widget.Toolbar"/></param>
        public void SetActionBar(Android.Widget.Toolbar arg0)
        {
            IExecuteWithSignature("setActionBar", "(Landroid/widget/Toolbar;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#setAllowCrossUidActivitySwitchFromBelow(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetAllowCrossUidActivitySwitchFromBelow(bool arg0)
        {
            IExecuteWithSignature("setAllowCrossUidActivitySwitchFromBelow", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#setContentTransitionManager(android.transition.TransitionManager)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Transition.TransitionManager"/></param>
        public void SetContentTransitionManager(Android.Transition.TransitionManager arg0)
        {
            IExecuteWithSignature("setContentTransitionManager", "(Landroid/transition/TransitionManager;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#setContentView(android.view.View,android.view.ViewGroup.LayoutParams)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.View"/></param>
        /// <param name="arg1"><see cref="Android.View.ViewGroup.LayoutParams"/></param>
        public void SetContentView(Android.View.View arg0, Android.View.ViewGroup.LayoutParams arg1)
        {
            IExecute("setContentView", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#setContentView(android.view.View)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.View"/></param>
        public void SetContentView(Android.View.View arg0)
        {
            IExecuteWithSignature("setContentView", "(Landroid/view/View;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#setContentView(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetContentView(int arg0)
        {
            IExecuteWithSignature("setContentView", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#setEnterSharedElementCallback(android.app.SharedElementCallback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.App.SharedElementCallback"/></param>
        public void SetEnterSharedElementCallback(Android.App.SharedElementCallback arg0)
        {
            IExecuteWithSignature("setEnterSharedElementCallback", "(Landroid/app/SharedElementCallback;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#setExitSharedElementCallback(android.app.SharedElementCallback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.App.SharedElementCallback"/></param>
        public void SetExitSharedElementCallback(Android.App.SharedElementCallback arg0)
        {
            IExecuteWithSignature("setExitSharedElementCallback", "(Landroid/app/SharedElementCallback;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#setFinishOnTouchOutside(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetFinishOnTouchOutside(bool arg0)
        {
            IExecuteWithSignature("setFinishOnTouchOutside", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#setImmersive(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetImmersive(bool arg0)
        {
            IExecuteWithSignature("setImmersive", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#setInheritShowWhenLocked(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetInheritShowWhenLocked(bool arg0)
        {
            IExecuteWithSignature("setInheritShowWhenLocked", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#setIntent(android.content.Intent,android.app.ComponentCaller)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        /// <param name="arg1"><see cref="Android.App.ComponentCaller"/></param>
        public void SetIntent(Android.Content.Intent arg0, Android.App.ComponentCaller arg1)
        {
            IExecute("setIntent", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#setIntent(android.content.Intent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        public void SetIntent(Android.Content.Intent arg0)
        {
            IExecuteWithSignature("setIntent", "(Landroid/content/Intent;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#setLocusContext(android.content.LocusId,android.os.Bundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.LocusId"/></param>
        /// <param name="arg1"><see cref="Android.Os.Bundle"/></param>
        public void SetLocusContext(Android.Content.LocusId arg0, Android.Os.Bundle arg1)
        {
            IExecute("setLocusContext", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#setPictureInPictureParams(android.app.PictureInPictureParams)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.App.PictureInPictureParams"/></param>
        public void SetPictureInPictureParams(Android.App.PictureInPictureParams arg0)
        {
            IExecuteWithSignature("setPictureInPictureParams", "(Landroid/app/PictureInPictureParams;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#setRecentsScreenshotEnabled(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetRecentsScreenshotEnabled(bool arg0)
        {
            IExecuteWithSignature("setRecentsScreenshotEnabled", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#setRequestedOrientation(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetRequestedOrientation(int arg0)
        {
            IExecuteWithSignature("setRequestedOrientation", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#setShouldDockBigOverlays(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetShouldDockBigOverlays(bool arg0)
        {
            IExecuteWithSignature("setShouldDockBigOverlays", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#setShowWhenLocked(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetShowWhenLocked(bool arg0)
        {
            IExecuteWithSignature("setShowWhenLocked", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#setTaskDescription(android.app.ActivityManager.TaskDescription)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.App.ActivityManager.TaskDescription"/></param>
        public void SetTaskDescription(Android.App.ActivityManager.TaskDescription arg0)
        {
            IExecuteWithSignature("setTaskDescription", "(Landroid/app/ActivityManager$TaskDescription;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#setTitle(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetTitle(int arg0)
        {
            IExecuteWithSignature("setTitle", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#setTitle(java.lang.CharSequence)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.CharSequence"/></param>
        public void SetTitle(Java.Lang.CharSequence arg0)
        {
            IExecuteWithSignature("setTitle", "(Ljava/lang/CharSequence;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#setTitleColor(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        [global::System.Obsolete()]
        public void SetTitleColor(int arg0)
        {
            IExecuteWithSignature("setTitleColor", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#setTurnScreenOn(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetTurnScreenOn(bool arg0)
        {
            IExecuteWithSignature("setTurnScreenOn", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#setVisible(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetVisible(bool arg0)
        {
            IExecuteWithSignature("setVisible", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#setVrModeEnabled(boolean,android.content.ComponentName)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        /// <param name="arg1"><see cref="Android.Content.ComponentName"/></param>
        /// <exception cref="Android.Content.Pm.PackageManager.NameNotFoundException"/>
        public void SetVrModeEnabled(bool arg0, Android.Content.ComponentName arg1)
        {
            IExecute("setVrModeEnabled", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#showLockTaskEscapeMessage()"/>
        /// </summary>
        public void ShowLockTaskEscapeMessage()
        {
            IExecuteWithSignature("showLockTaskEscapeMessage", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#startActivityForResult(android.content.Intent,int,android.os.Bundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="Android.Os.Bundle"/></param>
        public void StartActivityForResult(Android.Content.Intent arg0, int arg1, Android.Os.Bundle arg2)
        {
            IExecute("startActivityForResult", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#startActivityForResult(android.content.Intent,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void StartActivityForResult(Android.Content.Intent arg0, int arg1)
        {
            IExecute("startActivityForResult", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#startActivityFromChild(android.app.Activity,android.content.Intent,int,android.os.Bundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.App.Activity"/></param>
        /// <param name="arg1"><see cref="Android.Content.Intent"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <param name="arg3"><see cref="Android.Os.Bundle"/></param>
        [global::System.Obsolete()]
        public void StartActivityFromChild(Android.App.Activity arg0, Android.Content.Intent arg1, int arg2, Android.Os.Bundle arg3)
        {
            IExecute("startActivityFromChild", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#startActivityFromChild(android.app.Activity,android.content.Intent,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.App.Activity"/></param>
        /// <param name="arg1"><see cref="Android.Content.Intent"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        [global::System.Obsolete()]
        public void StartActivityFromChild(Android.App.Activity arg0, Android.Content.Intent arg1, int arg2)
        {
            IExecute("startActivityFromChild", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#startActivityFromFragment(android.app.Fragment,android.content.Intent,int,android.os.Bundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.App.Fragment"/></param>
        /// <param name="arg1"><see cref="Android.Content.Intent"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <param name="arg3"><see cref="Android.Os.Bundle"/></param>
        [global::System.Obsolete()]
        public void StartActivityFromFragment(Android.App.Fragment arg0, Android.Content.Intent arg1, int arg2, Android.Os.Bundle arg3)
        {
            IExecute("startActivityFromFragment", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#startActivityFromFragment(android.app.Fragment,android.content.Intent,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.App.Fragment"/></param>
        /// <param name="arg1"><see cref="Android.Content.Intent"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        [global::System.Obsolete()]
        public void StartActivityFromFragment(Android.App.Fragment arg0, Android.Content.Intent arg1, int arg2)
        {
            IExecute("startActivityFromFragment", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.IntentSender"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="Android.Content.Intent"/></param>
        /// <param name="arg3"><see cref="int"/></param>
        /// <param name="arg4"><see cref="int"/></param>
        /// <param name="arg5"><see cref="int"/></param>
        /// <param name="arg6"><see cref="Android.Os.Bundle"/></param>
        /// <exception cref="Android.Content.IntentSender.SendIntentException"/>
        public void StartIntentSenderForResult(Android.Content.IntentSender arg0, int arg1, Android.Content.Intent arg2, int arg3, int arg4, int arg5, Android.Os.Bundle arg6)
        {
            IExecute("startIntentSenderForResult", arg0, arg1, arg2, arg3, arg4, arg5, arg6);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.IntentSender"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="Android.Content.Intent"/></param>
        /// <param name="arg3"><see cref="int"/></param>
        /// <param name="arg4"><see cref="int"/></param>
        /// <param name="arg5"><see cref="int"/></param>
        /// <exception cref="Android.Content.IntentSender.SendIntentException"/>
        public void StartIntentSenderForResult(Android.Content.IntentSender arg0, int arg1, Android.Content.Intent arg2, int arg3, int arg4, int arg5)
        {
            IExecute("startIntentSenderForResult", arg0, arg1, arg2, arg3, arg4, arg5);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#startIntentSenderFromChild(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.App.Activity"/></param>
        /// <param name="arg1"><see cref="Android.Content.IntentSender"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <param name="arg3"><see cref="Android.Content.Intent"/></param>
        /// <param name="arg4"><see cref="int"/></param>
        /// <param name="arg5"><see cref="int"/></param>
        /// <param name="arg6"><see cref="int"/></param>
        /// <param name="arg7"><see cref="Android.Os.Bundle"/></param>
        /// <exception cref="Android.Content.IntentSender.SendIntentException"/>
        [global::System.Obsolete()]
        public void StartIntentSenderFromChild(Android.App.Activity arg0, Android.Content.IntentSender arg1, int arg2, Android.Content.Intent arg3, int arg4, int arg5, int arg6, Android.Os.Bundle arg7)
        {
            IExecute("startIntentSenderFromChild", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#startIntentSenderFromChild(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.App.Activity"/></param>
        /// <param name="arg1"><see cref="Android.Content.IntentSender"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <param name="arg3"><see cref="Android.Content.Intent"/></param>
        /// <param name="arg4"><see cref="int"/></param>
        /// <param name="arg5"><see cref="int"/></param>
        /// <param name="arg6"><see cref="int"/></param>
        /// <exception cref="Android.Content.IntentSender.SendIntentException"/>
        [global::System.Obsolete()]
        public void StartIntentSenderFromChild(Android.App.Activity arg0, Android.Content.IntentSender arg1, int arg2, Android.Content.Intent arg3, int arg4, int arg5, int arg6)
        {
            IExecute("startIntentSenderFromChild", arg0, arg1, arg2, arg3, arg4, arg5, arg6);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#startLocalVoiceInteraction(android.os.Bundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.Bundle"/></param>
        public void StartLocalVoiceInteraction(Android.Os.Bundle arg0)
        {
            IExecuteWithSignature("startLocalVoiceInteraction", "(Landroid/os/Bundle;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#startLockTask()"/>
        /// </summary>
        public void StartLockTask()
        {
            IExecuteWithSignature("startLockTask", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#startManagingCursor(android.database.Cursor)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Database.Cursor"/></param>
        [global::System.Obsolete()]
        public void StartManagingCursor(Android.Database.Cursor arg0)
        {
            IExecuteWithSignature("startManagingCursor", "(Landroid/database/Cursor;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#startPostponedEnterTransition()"/>
        /// </summary>
        public void StartPostponedEnterTransition()
        {
            IExecuteWithSignature("startPostponedEnterTransition", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#startSearch(java.lang.String,boolean,android.os.Bundle,boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="bool"/></param>
        /// <param name="arg2"><see cref="Android.Os.Bundle"/></param>
        /// <param name="arg3"><see cref="bool"/></param>
        public void StartSearch(Java.Lang.String arg0, bool arg1, Android.Os.Bundle arg2, bool arg3)
        {
            IExecute("startSearch", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#stopLocalVoiceInteraction()"/>
        /// </summary>
        public void StopLocalVoiceInteraction()
        {
            IExecuteWithSignature("stopLocalVoiceInteraction", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#stopLockTask()"/>
        /// </summary>
        public void StopLockTask()
        {
            IExecuteWithSignature("stopLockTask", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#stopManagingCursor(android.database.Cursor)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Database.Cursor"/></param>
        [global::System.Obsolete()]
        public void StopManagingCursor(Android.Database.Cursor arg0)
        {
            IExecuteWithSignature("stopManagingCursor", "(Landroid/database/Cursor;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#takeKeyEvents(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void TakeKeyEvents(bool arg0)
        {
            IExecuteWithSignature("takeKeyEvents", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#triggerSearch(java.lang.String,android.os.Bundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Android.Os.Bundle"/></param>
        public void TriggerSearch(Java.Lang.String arg0, Android.Os.Bundle arg1)
        {
            IExecute("triggerSearch", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#unregisterActivityLifecycleCallbacks(android.app.Application.ActivityLifecycleCallbacks)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.App.Application.ActivityLifecycleCallbacks"/></param>
        public void UnregisterActivityLifecycleCallbacks(Android.App.Application.ActivityLifecycleCallbacks arg0)
        {
            IExecuteWithSignature("unregisterActivityLifecycleCallbacks", "(Landroid/app/Application$ActivityLifecycleCallbacks;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#unregisterForContextMenu(android.view.View)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.View"/></param>
        public void UnregisterForContextMenu(Android.View.View arg0)
        {
            IExecuteWithSignature("unregisterForContextMenu", "(Landroid/view/View;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/app/Activity.html#unregisterScreenCaptureCallback(android.app.Activity.ScreenCaptureCallback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.App.Activity.ScreenCaptureCallback"/></param>
        public void UnregisterScreenCaptureCallback(Android.App.Activity.ScreenCaptureCallback arg0)
        {
            IExecuteWithSignature("unregisterScreenCaptureCallback", "(Landroid/app/Activity$ScreenCaptureCallback;)V", arg0);
        }

        #endregion

        #region Nested classes
        #region ScreenCaptureCallback implementation
        public partial class ScreenCaptureCallback
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/app/Activity.ScreenCaptureCallback.html#onScreenCaptured()"/>
            /// </summary>
            public void OnScreenCaptured()
            {
                IExecuteWithSignature("onScreenCaptured", "()V");
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}