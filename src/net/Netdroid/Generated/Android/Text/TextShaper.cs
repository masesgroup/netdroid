/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.5.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Text
{
    #region TextShaper
    public partial class TextShaper
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/text/TextShaper.html#shapeText(java.lang.CharSequence,int,int,android.text.TextDirectionHeuristic,android.text.TextPaint,android.text.TextShaper.GlyphsConsumer)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.CharSequence"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <param name="arg3"><see cref="Android.Text.TextDirectionHeuristic"/></param>
        /// <param name="arg4"><see cref="Android.Text.TextPaint"/></param>
        /// <param name="arg5"><see cref="Android.Text.TextShaper.GlyphsConsumer"/></param>
        public static void ShapeText(Java.Lang.CharSequence arg0, int arg1, int arg2, Android.Text.TextDirectionHeuristic arg3, Android.Text.TextPaint arg4, Android.Text.TextShaper.GlyphsConsumer arg5)
        {
            SExecute(LocalBridgeClazz, "shapeText", arg0, arg1, arg2, arg3, arg4, arg5);
        }

        #endregion

        #region Instance methods

        #endregion

        #region Nested classes
        #region GlyphsConsumer
        public partial class GlyphsConsumer
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/text/TextShaper.GlyphsConsumer.html#accept(int,int,android.graphics.text.PositionedGlyphs,android.text.TextPaint)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            /// <param name="arg2"><see cref="Android.Graphics.Text.PositionedGlyphs"/></param>
            /// <param name="arg3"><see cref="Android.Text.TextPaint"/></param>
            public void Accept(int arg0, int arg1, Android.Graphics.Text.PositionedGlyphs arg2, Android.Text.TextPaint arg3)
            {
                IExecute("accept", arg0, arg1, arg2, arg3);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}