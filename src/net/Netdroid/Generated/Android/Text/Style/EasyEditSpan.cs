/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.5.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Text.Style
{
    #region EasyEditSpan
    public partial class EasyEditSpan
    {
        #region Constructors
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/text/style/EasyEditSpan.html#%3Cinit%3E(android.app.PendingIntent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.App.PendingIntent"/></param>
        public EasyEditSpan(Android.App.PendingIntent arg0)
            : base(arg0)
        {
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/text/style/EasyEditSpan.html#%3Cinit%3E(android.os.Parcel)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.Parcel"/></param>
        public EasyEditSpan(Android.Os.Parcel arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/text/style/EasyEditSpan.html#TEXT_DELETED"/>
        /// </summary>
        public static int TEXT_DELETED { get { if (!_TEXT_DELETEDReady) { _TEXT_DELETEDContent = SGetField<int>(LocalBridgeClazz, "TEXT_DELETED"); _TEXT_DELETEDReady = true; } return _TEXT_DELETEDContent; } }
        private static int _TEXT_DELETEDContent = default;
        private static bool _TEXT_DELETEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/text/style/EasyEditSpan.html#TEXT_MODIFIED"/>
        /// </summary>
        public static int TEXT_MODIFIED { get { if (!_TEXT_MODIFIEDReady) { _TEXT_MODIFIEDContent = SGetField<int>(LocalBridgeClazz, "TEXT_MODIFIED"); _TEXT_MODIFIEDReady = true; } return _TEXT_MODIFIEDContent; } }
        private static int _TEXT_MODIFIEDContent = default;
        private static bool _TEXT_MODIFIEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/text/style/EasyEditSpan.html#EXTRA_TEXT_CHANGED_TYPE"/>
        /// </summary>
        public static Java.Lang.String EXTRA_TEXT_CHANGED_TYPE { get { if (!_EXTRA_TEXT_CHANGED_TYPEReady) { _EXTRA_TEXT_CHANGED_TYPEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_TEXT_CHANGED_TYPE"); _EXTRA_TEXT_CHANGED_TYPEReady = true; } return _EXTRA_TEXT_CHANGED_TYPEContent; } }
        private static Java.Lang.String _EXTRA_TEXT_CHANGED_TYPEContent = default;
        private static bool _EXTRA_TEXT_CHANGED_TYPEReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/text/style/EasyEditSpan.html#describeContents()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int DescribeContents()
        {
            return IExecuteWithSignature<int>("describeContents", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/text/style/EasyEditSpan.html#getSpanTypeId()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetSpanTypeId()
        {
            return IExecuteWithSignature<int>("getSpanTypeId", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/text/style/EasyEditSpan.html#writeToParcel(android.os.Parcel,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.Parcel"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void WriteToParcel(Android.Os.Parcel arg0, int arg1)
        {
            IExecute("writeToParcel", arg0, arg1);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}