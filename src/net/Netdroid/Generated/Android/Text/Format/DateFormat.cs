/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.10.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Text.Format
{
    #region DateFormat declaration
    /// <summary>
    /// <see href="https://developer.android.com/reference/android/text/format/DateFormat.html"/>
    /// </summary>
    public partial class DateFormat : MASES.JCOBridge.C2JBridge.JVMBridgeBase<DateFormat>
    {
        const string _bridgeClassName = "android.text.format.DateFormat";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public DateFormat() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public DateFormat(params object[] args) : base(args) { }
    
        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
    
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;
    
        // TODO: complete the class
    
    }
    #endregion

    #region DateFormat implementation
    public partial class DateFormat
    {
        #region Constructors
    
        #endregion
    
        #region Class/Interface conversion operators
    
        #endregion
    
        #region Fields
    
        #endregion
    
        #region Static methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/text/format/DateFormat.html#is24HourFormat(android.content.Context)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool Is24HourFormat(Android.Content.Context arg0)
        {
            return SExecuteWithSignature<bool>(LocalBridgeClazz, "is24HourFormat", "(Landroid/content/Context;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/text/format/DateFormat.html#getDateFormatOrder(android.content.Context)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        /// <returns><see cref="char"/></returns>
        public static char[] GetDateFormatOrder(Android.Content.Context arg0)
        {
            return SExecuteWithSignatureArray<char>(LocalBridgeClazz, "getDateFormatOrder", "(Landroid/content/Context;)[C", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/text/format/DateFormat.html#format(java.lang.CharSequence,java.util.Calendar)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.CharSequence"/></param>
        /// <param name="arg1"><see cref="Java.Util.Calendar"/></param>
        /// <returns><see cref="Java.Lang.CharSequence"/></returns>
        public static Java.Lang.CharSequence Format(Java.Lang.CharSequence arg0, Java.Util.Calendar arg1)
        {
            return SExecuteWithSignature<Java.Lang.CharSequence>(LocalBridgeClazz, "format", "(Ljava/lang/CharSequence;Ljava/util/Calendar;)Ljava/lang/CharSequence;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/text/format/DateFormat.html#format(java.lang.CharSequence,java.util.Date)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.CharSequence"/></param>
        /// <param name="arg1"><see cref="Java.Util.Date"/></param>
        /// <returns><see cref="Java.Lang.CharSequence"/></returns>
        public static Java.Lang.CharSequence Format(Java.Lang.CharSequence arg0, Java.Util.Date arg1)
        {
            return SExecuteWithSignature<Java.Lang.CharSequence>(LocalBridgeClazz, "format", "(Ljava/lang/CharSequence;Ljava/util/Date;)Ljava/lang/CharSequence;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/text/format/DateFormat.html#format(java.lang.CharSequence,long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.CharSequence"/></param>
        /// <param name="arg1"><see cref="long"/></param>
        /// <returns><see cref="Java.Lang.CharSequence"/></returns>
        public static Java.Lang.CharSequence Format(Java.Lang.CharSequence arg0, long arg1)
        {
            return SExecuteWithSignature<Java.Lang.CharSequence>(LocalBridgeClazz, "format", "(Ljava/lang/CharSequence;J)Ljava/lang/CharSequence;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/text/format/DateFormat.html#getBestDateTimePattern(java.util.Locale,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Locale"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public static Java.Lang.String GetBestDateTimePattern(Java.Util.Locale arg0, Java.Lang.String arg1)
        {
            return SExecuteWithSignature<Java.Lang.String>(LocalBridgeClazz, "getBestDateTimePattern", "(Ljava/util/Locale;Ljava/lang/String;)Ljava/lang/String;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/text/format/DateFormat.html#getDateFormat(android.content.Context)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        /// <returns><see cref="Java.Text.DateFormat"/></returns>
        public static Java.Text.DateFormat GetDateFormat(Android.Content.Context arg0)
        {
            return SExecuteWithSignature<Java.Text.DateFormat>(LocalBridgeClazz, "getDateFormat", "(Landroid/content/Context;)Ljava/text/DateFormat;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/text/format/DateFormat.html#getLongDateFormat(android.content.Context)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        /// <returns><see cref="Java.Text.DateFormat"/></returns>
        public static Java.Text.DateFormat GetLongDateFormat(Android.Content.Context arg0)
        {
            return SExecuteWithSignature<Java.Text.DateFormat>(LocalBridgeClazz, "getLongDateFormat", "(Landroid/content/Context;)Ljava/text/DateFormat;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/text/format/DateFormat.html#getMediumDateFormat(android.content.Context)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        /// <returns><see cref="Java.Text.DateFormat"/></returns>
        public static Java.Text.DateFormat GetMediumDateFormat(Android.Content.Context arg0)
        {
            return SExecuteWithSignature<Java.Text.DateFormat>(LocalBridgeClazz, "getMediumDateFormat", "(Landroid/content/Context;)Ljava/text/DateFormat;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/text/format/DateFormat.html#getTimeFormat(android.content.Context)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        /// <returns><see cref="Java.Text.DateFormat"/></returns>
        public static Java.Text.DateFormat GetTimeFormat(Android.Content.Context arg0)
        {
            return SExecuteWithSignature<Java.Text.DateFormat>(LocalBridgeClazz, "getTimeFormat", "(Landroid/content/Context;)Ljava/text/DateFormat;", arg0);
        }
    
        #endregion
    
        #region Instance methods
    
        #endregion
    
        #region Nested classes
    
        #endregion
    
        // TODO: complete the class
    }
    #endregion
}