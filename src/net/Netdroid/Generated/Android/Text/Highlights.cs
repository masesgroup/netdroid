/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.8.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Text
{
    #region Highlights
    public partial class Highlights
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/text/Highlights.html#getPaint(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Android.Graphics.Paint"/></returns>
        public Android.Graphics.Paint GetPaint(int arg0)
        {
            return IExecuteWithSignature<Android.Graphics.Paint>("getPaint", "(I)Landroid/graphics/Paint;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/text/Highlights.html#getSize()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetSize()
        {
            return IExecuteWithSignature<int>("getSize", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/text/Highlights.html#getRanges(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public int[] GetRanges(int arg0)
        {
            return IExecuteWithSignatureArray<int>("getRanges", "(I)[I", arg0);
        }

        #endregion

        #region Nested classes
        #region Builder
        public partial class Builder
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/text/Highlights.Builder.html#build()"/>
            /// </summary>
            /// <returns><see cref="Android.Text.Highlights"/></returns>
            public Android.Text.Highlights Build()
            {
                return IExecuteWithSignature<Android.Text.Highlights>("build", "()Landroid/text/Highlights;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/text/Highlights.Builder.html#addRange(android.graphics.Paint,int,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Graphics.Paint"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            /// <param name="arg2"><see cref="int"/></param>
            /// <returns><see cref="Android.Text.Highlights.Builder"/></returns>
            public Android.Text.Highlights.Builder AddRange(Android.Graphics.Paint arg0, int arg1, int arg2)
            {
                return IExecute<Android.Text.Highlights.Builder>("addRange", arg0, arg1, arg2);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/text/Highlights.Builder.html#addRanges(android.graphics.Paint,int[])"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Graphics.Paint"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            /// <returns><see cref="Android.Text.Highlights.Builder"/></returns>
            public Android.Text.Highlights.Builder AddRanges(Android.Graphics.Paint arg0, params int[] arg1)
            {
                if (arg1.Length == 0) return IExecute<Android.Text.Highlights.Builder>("addRanges", arg0); else return IExecute<Android.Text.Highlights.Builder>("addRanges", arg0, arg1);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}