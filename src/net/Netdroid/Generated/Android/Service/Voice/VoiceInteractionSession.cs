/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.9.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Service.Voice
{
    #region VoiceInteractionSession declaration
    /// <summary>
    /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html"/>
    /// </summary>
    public partial class VoiceInteractionSession : MASES.JCOBridge.C2JBridge.JVMBridgeBase<VoiceInteractionSession>
    {
        const string _bridgeClassName = "android.service.voice.VoiceInteractionSession";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public VoiceInteractionSession() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public VoiceInteractionSession(params object[] args) : base(args) { }

        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class
        #region AbortVoiceRequest declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.AbortVoiceRequest.html"/>
        /// </summary>
        public partial class AbortVoiceRequest : Android.Service.Voice.VoiceInteractionSession.Request
        {
            const string _bridgeClassName = "android.service.voice.VoiceInteractionSession$AbortVoiceRequest";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public AbortVoiceRequest() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public AbortVoiceRequest(params object[] args) : base(args) { }

            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;

            // TODO: complete the class

        }
        #endregion

        #region ActivityId declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.ActivityId.html"/>
        /// </summary>
        public partial class ActivityId : MASES.JCOBridge.C2JBridge.JVMBridgeBase<ActivityId>
        {
            const string _bridgeClassName = "android.service.voice.VoiceInteractionSession$ActivityId";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public ActivityId() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public ActivityId(params object[] args) : base(args) { }

            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;

            // TODO: complete the class

        }
        #endregion

        #region AssistState declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.AssistState.html"/>
        /// </summary>
        public partial class AssistState : MASES.JCOBridge.C2JBridge.JVMBridgeBase<AssistState>
        {
            const string _bridgeClassName = "android.service.voice.VoiceInteractionSession$AssistState";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public AssistState() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public AssistState(params object[] args) : base(args) { }

            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;

            // TODO: complete the class

        }
        #endregion

        #region CommandRequest declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.CommandRequest.html"/>
        /// </summary>
        public partial class CommandRequest : Android.Service.Voice.VoiceInteractionSession.Request
        {
            const string _bridgeClassName = "android.service.voice.VoiceInteractionSession$CommandRequest";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public CommandRequest() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public CommandRequest(params object[] args) : base(args) { }

            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;

            // TODO: complete the class

        }
        #endregion

        #region CompleteVoiceRequest declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.CompleteVoiceRequest.html"/>
        /// </summary>
        public partial class CompleteVoiceRequest : Android.Service.Voice.VoiceInteractionSession.Request
        {
            const string _bridgeClassName = "android.service.voice.VoiceInteractionSession$CompleteVoiceRequest";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public CompleteVoiceRequest() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public CompleteVoiceRequest(params object[] args) : base(args) { }

            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;

            // TODO: complete the class

        }
        #endregion

        #region ConfirmationRequest declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.ConfirmationRequest.html"/>
        /// </summary>
        public partial class ConfirmationRequest : Android.Service.Voice.VoiceInteractionSession.Request
        {
            const string _bridgeClassName = "android.service.voice.VoiceInteractionSession$ConfirmationRequest";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public ConfirmationRequest() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public ConfirmationRequest(params object[] args) : base(args) { }

            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;

            // TODO: complete the class

        }
        #endregion

        #region Insets declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.Insets.html"/>
        /// </summary>
        public partial class Insets : MASES.JCOBridge.C2JBridge.JVMBridgeBase<Insets>
        {
            const string _bridgeClassName = "android.service.voice.VoiceInteractionSession$Insets";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public Insets() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public Insets(params object[] args) : base(args) { }

            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;

            // TODO: complete the class

        }
        #endregion

        #region PickOptionRequest declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.PickOptionRequest.html"/>
        /// </summary>
        public partial class PickOptionRequest : Android.Service.Voice.VoiceInteractionSession.Request
        {
            const string _bridgeClassName = "android.service.voice.VoiceInteractionSession$PickOptionRequest";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public PickOptionRequest() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public PickOptionRequest(params object[] args) : base(args) { }

            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;

            // TODO: complete the class

        }
        #endregion

        #region Request declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.Request.html"/>
        /// </summary>
        public partial class Request : MASES.JCOBridge.C2JBridge.JVMBridgeBase<Request>
        {
            const string _bridgeClassName = "android.service.voice.VoiceInteractionSession$Request";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public Request() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public Request(params object[] args) : base(args) { }

            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;

            // TODO: complete the class

        }
        #endregion

        #region VisibleActivityCallback declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.VisibleActivityCallback.html"/>
        /// </summary>
        public partial class VisibleActivityCallback : MASES.JCOBridge.C2JBridge.JVMBridgeBase<VisibleActivityCallback>
        {
            const string _bridgeClassName = "android.service.voice.VoiceInteractionSession$VisibleActivityCallback";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            [global::System.Obsolete("VisibleActivityCallback class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public VisibleActivityCallback() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            [global::System.Obsolete("VisibleActivityCallback class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public VisibleActivityCallback(params object[] args) : base(args) { }

            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => true;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => true;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;

            // TODO: complete the class

        }
        #endregion

    
    }
    #endregion

    #region VoiceInteractionSession implementation
    public partial class VoiceInteractionSession : Android.Content.IComponentCallbacks2
    {
        #region Constructors
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#%3Cinit%3E(android.content.Context,android.os.Handler)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        /// <param name="arg1"><see cref="Android.Os.Handler"/></param>
        public VoiceInteractionSession(Android.Content.Context arg0, Android.Os.Handler arg1)
            : base(arg0, arg1)
        {
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#%3Cinit%3E(android.content.Context)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        public VoiceInteractionSession(Android.Content.Context arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Android.Service.Voice.VoiceInteractionSession"/> to <see cref="Android.Content.ComponentCallbacks2"/>
        /// </summary>
        public static implicit operator Android.Content.ComponentCallbacks2(Android.Service.Voice.VoiceInteractionSession t) => t.Cast<Android.Content.ComponentCallbacks2>();

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#SHOW_SOURCE_ACTIVITY"/>
        /// </summary>
        public static int SHOW_SOURCE_ACTIVITY { get { if (!_SHOW_SOURCE_ACTIVITYReady) { _SHOW_SOURCE_ACTIVITYContent = SGetField<int>(LocalBridgeClazz, "SHOW_SOURCE_ACTIVITY"); _SHOW_SOURCE_ACTIVITYReady = true; } return _SHOW_SOURCE_ACTIVITYContent; } }
        private static int _SHOW_SOURCE_ACTIVITYContent = default;
        private static bool _SHOW_SOURCE_ACTIVITYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#SHOW_SOURCE_APPLICATION"/>
        /// </summary>
        public static int SHOW_SOURCE_APPLICATION { get { if (!_SHOW_SOURCE_APPLICATIONReady) { _SHOW_SOURCE_APPLICATIONContent = SGetField<int>(LocalBridgeClazz, "SHOW_SOURCE_APPLICATION"); _SHOW_SOURCE_APPLICATIONReady = true; } return _SHOW_SOURCE_APPLICATIONContent; } }
        private static int _SHOW_SOURCE_APPLICATIONContent = default;
        private static bool _SHOW_SOURCE_APPLICATIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#SHOW_SOURCE_ASSIST_GESTURE"/>
        /// </summary>
        public static int SHOW_SOURCE_ASSIST_GESTURE { get { if (!_SHOW_SOURCE_ASSIST_GESTUREReady) { _SHOW_SOURCE_ASSIST_GESTUREContent = SGetField<int>(LocalBridgeClazz, "SHOW_SOURCE_ASSIST_GESTURE"); _SHOW_SOURCE_ASSIST_GESTUREReady = true; } return _SHOW_SOURCE_ASSIST_GESTUREContent; } }
        private static int _SHOW_SOURCE_ASSIST_GESTUREContent = default;
        private static bool _SHOW_SOURCE_ASSIST_GESTUREReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#SHOW_SOURCE_AUTOMOTIVE_SYSTEM_UI"/>
        /// </summary>
        public static int SHOW_SOURCE_AUTOMOTIVE_SYSTEM_UI { get { if (!_SHOW_SOURCE_AUTOMOTIVE_SYSTEM_UIReady) { _SHOW_SOURCE_AUTOMOTIVE_SYSTEM_UIContent = SGetField<int>(LocalBridgeClazz, "SHOW_SOURCE_AUTOMOTIVE_SYSTEM_UI"); _SHOW_SOURCE_AUTOMOTIVE_SYSTEM_UIReady = true; } return _SHOW_SOURCE_AUTOMOTIVE_SYSTEM_UIContent; } }
        private static int _SHOW_SOURCE_AUTOMOTIVE_SYSTEM_UIContent = default;
        private static bool _SHOW_SOURCE_AUTOMOTIVE_SYSTEM_UIReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#SHOW_SOURCE_NOTIFICATION"/>
        /// </summary>
        public static int SHOW_SOURCE_NOTIFICATION { get { if (!_SHOW_SOURCE_NOTIFICATIONReady) { _SHOW_SOURCE_NOTIFICATIONContent = SGetField<int>(LocalBridgeClazz, "SHOW_SOURCE_NOTIFICATION"); _SHOW_SOURCE_NOTIFICATIONReady = true; } return _SHOW_SOURCE_NOTIFICATIONContent; } }
        private static int _SHOW_SOURCE_NOTIFICATIONContent = default;
        private static bool _SHOW_SOURCE_NOTIFICATIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#SHOW_SOURCE_PUSH_TO_TALK"/>
        /// </summary>
        public static int SHOW_SOURCE_PUSH_TO_TALK { get { if (!_SHOW_SOURCE_PUSH_TO_TALKReady) { _SHOW_SOURCE_PUSH_TO_TALKContent = SGetField<int>(LocalBridgeClazz, "SHOW_SOURCE_PUSH_TO_TALK"); _SHOW_SOURCE_PUSH_TO_TALKReady = true; } return _SHOW_SOURCE_PUSH_TO_TALKContent; } }
        private static int _SHOW_SOURCE_PUSH_TO_TALKContent = default;
        private static bool _SHOW_SOURCE_PUSH_TO_TALKReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#SHOW_WITH_ASSIST"/>
        /// </summary>
        public static int SHOW_WITH_ASSIST { get { if (!_SHOW_WITH_ASSISTReady) { _SHOW_WITH_ASSISTContent = SGetField<int>(LocalBridgeClazz, "SHOW_WITH_ASSIST"); _SHOW_WITH_ASSISTReady = true; } return _SHOW_WITH_ASSISTContent; } }
        private static int _SHOW_WITH_ASSISTContent = default;
        private static bool _SHOW_WITH_ASSISTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#SHOW_WITH_SCREENSHOT"/>
        /// </summary>
        public static int SHOW_WITH_SCREENSHOT { get { if (!_SHOW_WITH_SCREENSHOTReady) { _SHOW_WITH_SCREENSHOTContent = SGetField<int>(LocalBridgeClazz, "SHOW_WITH_SCREENSHOT"); _SHOW_WITH_SCREENSHOTReady = true; } return _SHOW_WITH_SCREENSHOTContent; } }
        private static int _SHOW_WITH_SCREENSHOTContent = default;
        private static bool _SHOW_WITH_SCREENSHOTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#KEY_FOREGROUND_ACTIVITIES"/>
        /// </summary>
        public static Java.Lang.String KEY_FOREGROUND_ACTIVITIES { get { if (!_KEY_FOREGROUND_ACTIVITIESReady) { _KEY_FOREGROUND_ACTIVITIESContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_FOREGROUND_ACTIVITIES"); _KEY_FOREGROUND_ACTIVITIESReady = true; } return _KEY_FOREGROUND_ACTIVITIESContent; } }
        private static Java.Lang.String _KEY_FOREGROUND_ACTIVITIESContent = default;
        private static bool _KEY_FOREGROUND_ACTIVITIESReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#KEY_SHOW_SESSION_ID"/>
        /// </summary>
        public static Java.Lang.String KEY_SHOW_SESSION_ID { get { if (!_KEY_SHOW_SESSION_IDReady) { _KEY_SHOW_SESSION_IDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SHOW_SESSION_ID"); _KEY_SHOW_SESSION_IDReady = true; } return _KEY_SHOW_SESSION_IDContent; } }
        private static Java.Lang.String _KEY_SHOW_SESSION_IDContent = default;
        private static bool _KEY_SHOW_SESSION_IDReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#getWindow()"/>
        /// </summary>
        /// <returns><see cref="Android.App.Dialog"/></returns>
        public Android.App.Dialog GetWindow()
        {
            return IExecuteWithSignature<Android.App.Dialog>("getWindow", "()Landroid/app/Dialog;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#getContext()"/>
        /// </summary>
        /// <returns><see cref="Android.Content.Context"/></returns>
        public Android.Content.Context GetContext()
        {
            return IExecuteWithSignature<Android.Content.Context>("getContext", "()Landroid/content/Context;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#getLayoutInflater()"/>
        /// </summary>
        /// <returns><see cref="Android.View.LayoutInflater"/></returns>
        public Android.View.LayoutInflater GetLayoutInflater()
        {
            return IExecuteWithSignature<Android.View.LayoutInflater>("getLayoutInflater", "()Landroid/view/LayoutInflater;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#onCreateContentView()"/>
        /// </summary>
        /// <returns><see cref="Android.View.View"/></returns>
        public Android.View.View OnCreateContentView()
        {
            return IExecuteWithSignature<Android.View.View>("onCreateContentView", "()Landroid/view/View;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#onKeyDown(int,android.view.KeyEvent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="Android.View.KeyEvent"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool OnKeyDown(int arg0, Android.View.KeyEvent arg1)
        {
            return IExecuteWithSignature<bool>("onKeyDown", "(ILandroid/view/KeyEvent;)Z", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#onKeyLongPress(int,android.view.KeyEvent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="Android.View.KeyEvent"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool OnKeyLongPress(int arg0, Android.View.KeyEvent arg1)
        {
            return IExecuteWithSignature<bool>("onKeyLongPress", "(ILandroid/view/KeyEvent;)Z", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#onKeyMultiple(int,int,android.view.KeyEvent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="Android.View.KeyEvent"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool OnKeyMultiple(int arg0, int arg1, Android.View.KeyEvent arg2)
        {
            return IExecuteWithSignature<bool>("onKeyMultiple", "(IILandroid/view/KeyEvent;)Z", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#onKeyUp(int,android.view.KeyEvent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="Android.View.KeyEvent"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool OnKeyUp(int arg0, Android.View.KeyEvent arg1)
        {
            return IExecuteWithSignature<bool>("onKeyUp", "(ILandroid/view/KeyEvent;)Z", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#onGetSupportedCommands(java.lang.String[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool[] OnGetSupportedCommands(Java.Lang.String[] arg0)
        {
            return IExecuteWithSignatureArray<bool>("onGetSupportedCommands", "([Ljava/lang/String;)[Z", new object[] { arg0 });
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#performDirectAction(android.app.DirectAction,android.os.Bundle,android.os.CancellationSignal,java.util.concurrent.Executor,java.util.function.Consumer)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.App.DirectAction"/></param>
        /// <param name="arg1"><see cref="Android.Os.Bundle"/></param>
        /// <param name="arg2"><see cref="Android.Os.CancellationSignal"/></param>
        /// <param name="arg3"><see cref="Java.Util.Concurrent.Executor"/></param>
        /// <param name="arg4"><see cref="Java.Util.Function.Consumer"/></param>
        public void PerformDirectAction(Android.App.DirectAction arg0, Android.Os.Bundle arg1, Android.Os.CancellationSignal arg2, Java.Util.Concurrent.Executor arg3, Java.Util.Function.Consumer<Android.Os.Bundle> arg4)
        {
            IExecuteWithSignature("performDirectAction", "(Landroid/app/DirectAction;Landroid/os/Bundle;Landroid/os/CancellationSignal;Ljava/util/concurrent/Executor;Ljava/util/function/Consumer;)V", arg0, arg1, arg2, arg3, arg4);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#registerVisibleActivityCallback(java.util.concurrent.Executor,android.service.voice.VoiceInteractionSession.VisibleActivityCallback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Concurrent.Executor"/></param>
        /// <param name="arg1"><see cref="Android.Service.Voice.VoiceInteractionSession.VisibleActivityCallback"/></param>
        public void RegisterVisibleActivityCallback(Java.Util.Concurrent.Executor arg0, Android.Service.Voice.VoiceInteractionSession.VisibleActivityCallback arg1)
        {
            IExecuteWithSignature("registerVisibleActivityCallback", "(Ljava/util/concurrent/Executor;Landroid/service/voice/VoiceInteractionSession$VisibleActivityCallback;)V", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#requestDirectActions(android.service.voice.VoiceInteractionSession.ActivityId,android.os.CancellationSignal,java.util.concurrent.Executor,java.util.function.Consumer)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Service.Voice.VoiceInteractionSession.ActivityId"/></param>
        /// <param name="arg1"><see cref="Android.Os.CancellationSignal"/></param>
        /// <param name="arg2"><see cref="Java.Util.Concurrent.Executor"/></param>
        /// <param name="arg3"><see cref="Java.Util.Function.Consumer"/></param>
        public void RequestDirectActions(Android.Service.Voice.VoiceInteractionSession.ActivityId arg0, Android.Os.CancellationSignal arg1, Java.Util.Concurrent.Executor arg2, Java.Util.Function.Consumer<Java.Util.List<Android.App.DirectAction>> arg3)
        {
            IExecuteWithSignature("requestDirectActions", "(Landroid/service/voice/VoiceInteractionSession$ActivityId;Landroid/os/CancellationSignal;Ljava/util/concurrent/Executor;Ljava/util/function/Consumer;)V", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#unregisterVisibleActivityCallback(android.service.voice.VoiceInteractionSession.VisibleActivityCallback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Service.Voice.VoiceInteractionSession.VisibleActivityCallback"/></param>
        public void UnregisterVisibleActivityCallback(Android.Service.Voice.VoiceInteractionSession.VisibleActivityCallback arg0)
        {
            IExecuteWithSignature("unregisterVisibleActivityCallback", "(Landroid/service/voice/VoiceInteractionSession$VisibleActivityCallback;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#getDisabledShowContext()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetDisabledShowContext()
        {
            return IExecuteWithSignature<int>("getDisabledShowContext", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#getUserDisabledShowContext()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetUserDisabledShowContext()
        {
            return IExecuteWithSignature<int>("getUserDisabledShowContext", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#closeSystemDialogs()"/>
        /// </summary>
        public void CloseSystemDialogs()
        {
            IExecuteWithSignature("closeSystemDialogs", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Java.Io.FileDescriptor"/></param>
        /// <param name="arg2"><see cref="Java.Io.PrintWriter"/></param>
        /// <param name="arg3"><see cref="Java.Lang.String"/></param>
        public void Dump(Java.Lang.String arg0, Java.Io.FileDescriptor arg1, Java.Io.PrintWriter arg2, Java.Lang.String[] arg3)
        {
            IExecuteWithSignature("dump", "(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#finish()"/>
        /// </summary>
        public void Finish()
        {
            IExecuteWithSignature("finish", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#hide()"/>
        /// </summary>
        public void Hide()
        {
            IExecuteWithSignature("hide", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#onAssistStructureFailure(java.lang.Throwable)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.Throwable"/></param>
        public void OnAssistStructureFailure(MASES.JCOBridge.C2JBridge.JVMBridgeException arg0)
        {
            IExecuteWithSignature("onAssistStructureFailure", "(Ljava/lang/Throwable;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#onBackPressed()"/>
        /// </summary>
        public void OnBackPressed()
        {
            IExecuteWithSignature("onBackPressed", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#onCancelRequest(android.service.voice.VoiceInteractionSession.Request)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Service.Voice.VoiceInteractionSession.Request"/></param>
        public void OnCancelRequest(Android.Service.Voice.VoiceInteractionSession.Request arg0)
        {
            IExecuteWithSignature("onCancelRequest", "(Landroid/service/voice/VoiceInteractionSession$Request;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#onCloseSystemDialogs()"/>
        /// </summary>
        public void OnCloseSystemDialogs()
        {
            IExecuteWithSignature("onCloseSystemDialogs", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#onComputeInsets(android.service.voice.VoiceInteractionSession.Insets)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Service.Voice.VoiceInteractionSession.Insets"/></param>
        public void OnComputeInsets(Android.Service.Voice.VoiceInteractionSession.Insets arg0)
        {
            IExecuteWithSignature("onComputeInsets", "(Landroid/service/voice/VoiceInteractionSession$Insets;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#onConfigurationChanged(android.content.res.Configuration)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Res.Configuration"/></param>
        public void OnConfigurationChanged(Android.Content.Res.Configuration arg0)
        {
            IExecuteWithSignature("onConfigurationChanged", "(Landroid/content/res/Configuration;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#onCreate()"/>
        /// </summary>
        public void OnCreate()
        {
            IExecuteWithSignature("onCreate", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#onDestroy()"/>
        /// </summary>
        public void OnDestroy()
        {
            IExecuteWithSignature("onDestroy", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#onDirectActionsInvalidated(android.service.voice.VoiceInteractionSession.ActivityId)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Service.Voice.VoiceInteractionSession.ActivityId"/></param>
        public void OnDirectActionsInvalidated(Android.Service.Voice.VoiceInteractionSession.ActivityId arg0)
        {
            IExecuteWithSignature("onDirectActionsInvalidated", "(Landroid/service/voice/VoiceInteractionSession$ActivityId;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#onHandleAssist(android.os.Bundle,android.app.assist.AssistStructure,android.app.assist.AssistContent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.Bundle"/></param>
        /// <param name="arg1"><see cref="Android.App.Assist.AssistStructure"/></param>
        /// <param name="arg2"><see cref="Android.App.Assist.AssistContent"/></param>
        [global::System.Obsolete()]
        public void OnHandleAssist(Android.Os.Bundle arg0, Android.App.Assist.AssistStructure arg1, Android.App.Assist.AssistContent arg2)
        {
            IExecuteWithSignature("onHandleAssist", "(Landroid/os/Bundle;Landroid/app/assist/AssistStructure;Landroid/app/assist/AssistContent;)V", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#onHandleAssist(android.service.voice.VoiceInteractionSession.AssistState)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Service.Voice.VoiceInteractionSession.AssistState"/></param>
        public void OnHandleAssist(Android.Service.Voice.VoiceInteractionSession.AssistState arg0)
        {
            IExecuteWithSignature("onHandleAssist", "(Landroid/service/voice/VoiceInteractionSession$AssistState;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#onHandleAssistSecondary(android.os.Bundle,android.app.assist.AssistStructure,android.app.assist.AssistContent,int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.Bundle"/></param>
        /// <param name="arg1"><see cref="Android.App.Assist.AssistStructure"/></param>
        /// <param name="arg2"><see cref="Android.App.Assist.AssistContent"/></param>
        /// <param name="arg3"><see cref="int"/></param>
        /// <param name="arg4"><see cref="int"/></param>
        [global::System.Obsolete()]
        public void OnHandleAssistSecondary(Android.Os.Bundle arg0, Android.App.Assist.AssistStructure arg1, Android.App.Assist.AssistContent arg2, int arg3, int arg4)
        {
            IExecuteWithSignature("onHandleAssistSecondary", "(Landroid/os/Bundle;Landroid/app/assist/AssistStructure;Landroid/app/assist/AssistContent;II)V", arg0, arg1, arg2, arg3, arg4);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#onHandleScreenshot(android.graphics.Bitmap)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Graphics.Bitmap"/></param>
        public void OnHandleScreenshot(Android.Graphics.Bitmap arg0)
        {
            IExecuteWithSignature("onHandleScreenshot", "(Landroid/graphics/Bitmap;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#onHide()"/>
        /// </summary>
        public void OnHide()
        {
            IExecuteWithSignature("onHide", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#onLockscreenShown()"/>
        /// </summary>
        public void OnLockscreenShown()
        {
            IExecuteWithSignature("onLockscreenShown", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#onLowMemory()"/>
        /// </summary>
        public void OnLowMemory()
        {
            IExecuteWithSignature("onLowMemory", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#onPrepareShow(android.os.Bundle,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.Bundle"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void OnPrepareShow(Android.Os.Bundle arg0, int arg1)
        {
            IExecuteWithSignature("onPrepareShow", "(Landroid/os/Bundle;I)V", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#onRequestAbortVoice(android.service.voice.VoiceInteractionSession.AbortVoiceRequest)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Service.Voice.VoiceInteractionSession.AbortVoiceRequest"/></param>
        public void OnRequestAbortVoice(Android.Service.Voice.VoiceInteractionSession.AbortVoiceRequest arg0)
        {
            IExecuteWithSignature("onRequestAbortVoice", "(Landroid/service/voice/VoiceInteractionSession$AbortVoiceRequest;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#onRequestCommand(android.service.voice.VoiceInteractionSession.CommandRequest)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Service.Voice.VoiceInteractionSession.CommandRequest"/></param>
        public void OnRequestCommand(Android.Service.Voice.VoiceInteractionSession.CommandRequest arg0)
        {
            IExecuteWithSignature("onRequestCommand", "(Landroid/service/voice/VoiceInteractionSession$CommandRequest;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#onRequestCompleteVoice(android.service.voice.VoiceInteractionSession.CompleteVoiceRequest)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Service.Voice.VoiceInteractionSession.CompleteVoiceRequest"/></param>
        public void OnRequestCompleteVoice(Android.Service.Voice.VoiceInteractionSession.CompleteVoiceRequest arg0)
        {
            IExecuteWithSignature("onRequestCompleteVoice", "(Landroid/service/voice/VoiceInteractionSession$CompleteVoiceRequest;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#onRequestConfirmation(android.service.voice.VoiceInteractionSession.ConfirmationRequest)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Service.Voice.VoiceInteractionSession.ConfirmationRequest"/></param>
        public void OnRequestConfirmation(Android.Service.Voice.VoiceInteractionSession.ConfirmationRequest arg0)
        {
            IExecuteWithSignature("onRequestConfirmation", "(Landroid/service/voice/VoiceInteractionSession$ConfirmationRequest;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#onRequestPickOption(android.service.voice.VoiceInteractionSession.PickOptionRequest)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Service.Voice.VoiceInteractionSession.PickOptionRequest"/></param>
        public void OnRequestPickOption(Android.Service.Voice.VoiceInteractionSession.PickOptionRequest arg0)
        {
            IExecuteWithSignature("onRequestPickOption", "(Landroid/service/voice/VoiceInteractionSession$PickOptionRequest;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#onShow(android.os.Bundle,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.Bundle"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void OnShow(Android.Os.Bundle arg0, int arg1)
        {
            IExecuteWithSignature("onShow", "(Landroid/os/Bundle;I)V", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#onTaskFinished(android.content.Intent,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void OnTaskFinished(Android.Content.Intent arg0, int arg1)
        {
            IExecuteWithSignature("onTaskFinished", "(Landroid/content/Intent;I)V", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#onTaskStarted(android.content.Intent,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void OnTaskStarted(Android.Content.Intent arg0, int arg1)
        {
            IExecuteWithSignature("onTaskStarted", "(Landroid/content/Intent;I)V", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#onTrimMemory(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void OnTrimMemory(int arg0)
        {
            IExecuteWithSignature("onTrimMemory", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#setContentView(android.view.View)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.View"/></param>
        public void SetContentView(Android.View.View arg0)
        {
            IExecuteWithSignature("setContentView", "(Landroid/view/View;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#setDisabledShowContext(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetDisabledShowContext(int arg0)
        {
            IExecuteWithSignature("setDisabledShowContext", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#setKeepAwake(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetKeepAwake(bool arg0)
        {
            IExecuteWithSignature("setKeepAwake", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#setTheme(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetTheme(int arg0)
        {
            IExecuteWithSignature("setTheme", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#setUiEnabled(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetUiEnabled(bool arg0)
        {
            IExecuteWithSignature("setUiEnabled", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#show(android.os.Bundle,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.Bundle"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void Show(Android.Os.Bundle arg0, int arg1)
        {
            IExecuteWithSignature("show", "(Landroid/os/Bundle;I)V", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#startAssistantActivity(android.content.Intent,android.os.Bundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        /// <param name="arg1"><see cref="Android.Os.Bundle"/></param>
        public void StartAssistantActivity(Android.Content.Intent arg0, Android.Os.Bundle arg1)
        {
            IExecuteWithSignature("startAssistantActivity", "(Landroid/content/Intent;Landroid/os/Bundle;)V", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#startAssistantActivity(android.content.Intent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        public void StartAssistantActivity(Android.Content.Intent arg0)
        {
            IExecuteWithSignature("startAssistantActivity", "(Landroid/content/Intent;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html#startVoiceActivity(android.content.Intent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        public void StartVoiceActivity(Android.Content.Intent arg0)
        {
            IExecuteWithSignature("startVoiceActivity", "(Landroid/content/Intent;)V", arg0);
        }

        #endregion

        #region Nested classes
        #region AbortVoiceRequest implementation
        public partial class AbortVoiceRequest
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.AbortVoiceRequest.html#getVoicePrompt()"/>
            /// </summary>
            /// <returns><see cref="Android.App.VoiceInteractor.Prompt"/></returns>
            public Android.App.VoiceInteractor.Prompt GetVoicePrompt()
            {
                return IExecuteWithSignature<Android.App.VoiceInteractor.Prompt>("getVoicePrompt", "()Landroid/app/VoiceInteractor$Prompt;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.AbortVoiceRequest.html#getMessage()"/>
            /// </summary>
            /// <returns><see cref="Java.Lang.CharSequence"/></returns>
            [global::System.Obsolete()]
            public Java.Lang.CharSequence GetMessage()
            {
                return IExecuteWithSignature<Java.Lang.CharSequence>("getMessage", "()Ljava/lang/CharSequence;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.AbortVoiceRequest.html#sendAbortResult(android.os.Bundle)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Os.Bundle"/></param>
            public void SendAbortResult(Android.Os.Bundle arg0)
            {
                IExecuteWithSignature("sendAbortResult", "(Landroid/os/Bundle;)V", arg0);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region ActivityId implementation
        public partial class ActivityId
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region AssistState implementation
        public partial class AssistState
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.AssistState.html#getAssistContent()"/>
            /// </summary>
            /// <returns><see cref="Android.App.Assist.AssistContent"/></returns>
            public Android.App.Assist.AssistContent GetAssistContent()
            {
                return IExecuteWithSignature<Android.App.Assist.AssistContent>("getAssistContent", "()Landroid/app/assist/AssistContent;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.AssistState.html#getAssistStructure()"/>
            /// </summary>
            /// <returns><see cref="Android.App.Assist.AssistStructure"/></returns>
            public Android.App.Assist.AssistStructure GetAssistStructure()
            {
                return IExecuteWithSignature<Android.App.Assist.AssistStructure>("getAssistStructure", "()Landroid/app/assist/AssistStructure;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.AssistState.html#getAssistData()"/>
            /// </summary>
            /// <returns><see cref="Android.Os.Bundle"/></returns>
            public Android.Os.Bundle GetAssistData()
            {
                return IExecuteWithSignature<Android.Os.Bundle>("getAssistData", "()Landroid/os/Bundle;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.AssistState.html#getActivityId()"/>
            /// </summary>
            /// <returns><see cref="Android.Service.Voice.VoiceInteractionSession.ActivityId"/></returns>
            public Android.Service.Voice.VoiceInteractionSession.ActivityId GetActivityId()
            {
                return IExecuteWithSignature<Android.Service.Voice.VoiceInteractionSession.ActivityId>("getActivityId", "()Landroid/service/voice/VoiceInteractionSession$ActivityId;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.AssistState.html#isFocused()"/>
            /// </summary>
            /// <returns><see cref="bool"/></returns>
            public bool IsFocused()
            {
                return IExecuteWithSignature<bool>("isFocused", "()Z");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.AssistState.html#getCount()"/>
            /// </summary>
            /// <returns><see cref="int"/></returns>
            public int GetCount()
            {
                return IExecuteWithSignature<int>("getCount", "()I");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.AssistState.html#getIndex()"/>
            /// </summary>
            /// <returns><see cref="int"/></returns>
            public int GetIndex()
            {
                return IExecuteWithSignature<int>("getIndex", "()I");
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region CommandRequest implementation
        public partial class CommandRequest
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.CommandRequest.html#getCommand()"/>
            /// </summary>
            /// <returns><see cref="Java.Lang.String"/></returns>
            public Java.Lang.String GetCommand()
            {
                return IExecuteWithSignature<Java.Lang.String>("getCommand", "()Ljava/lang/String;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.CommandRequest.html#sendIntermediateResult(android.os.Bundle)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Os.Bundle"/></param>
            public void SendIntermediateResult(Android.Os.Bundle arg0)
            {
                IExecuteWithSignature("sendIntermediateResult", "(Landroid/os/Bundle;)V", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.CommandRequest.html#sendResult(android.os.Bundle)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Os.Bundle"/></param>
            public void SendResult(Android.Os.Bundle arg0)
            {
                IExecuteWithSignature("sendResult", "(Landroid/os/Bundle;)V", arg0);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region CompleteVoiceRequest implementation
        public partial class CompleteVoiceRequest
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.CompleteVoiceRequest.html#getVoicePrompt()"/>
            /// </summary>
            /// <returns><see cref="Android.App.VoiceInteractor.Prompt"/></returns>
            public Android.App.VoiceInteractor.Prompt GetVoicePrompt()
            {
                return IExecuteWithSignature<Android.App.VoiceInteractor.Prompt>("getVoicePrompt", "()Landroid/app/VoiceInteractor$Prompt;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.CompleteVoiceRequest.html#getMessage()"/>
            /// </summary>
            /// <returns><see cref="Java.Lang.CharSequence"/></returns>
            [global::System.Obsolete()]
            public Java.Lang.CharSequence GetMessage()
            {
                return IExecuteWithSignature<Java.Lang.CharSequence>("getMessage", "()Ljava/lang/CharSequence;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.CompleteVoiceRequest.html#sendCompleteResult(android.os.Bundle)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Os.Bundle"/></param>
            public void SendCompleteResult(Android.Os.Bundle arg0)
            {
                IExecuteWithSignature("sendCompleteResult", "(Landroid/os/Bundle;)V", arg0);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region ConfirmationRequest implementation
        public partial class ConfirmationRequest
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.ConfirmationRequest.html#getVoicePrompt()"/>
            /// </summary>
            /// <returns><see cref="Android.App.VoiceInteractor.Prompt"/></returns>
            public Android.App.VoiceInteractor.Prompt GetVoicePrompt()
            {
                return IExecuteWithSignature<Android.App.VoiceInteractor.Prompt>("getVoicePrompt", "()Landroid/app/VoiceInteractor$Prompt;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.ConfirmationRequest.html#getPrompt()"/>
            /// </summary>
            /// <returns><see cref="Java.Lang.CharSequence"/></returns>
            [global::System.Obsolete()]
            public Java.Lang.CharSequence GetPrompt()
            {
                return IExecuteWithSignature<Java.Lang.CharSequence>("getPrompt", "()Ljava/lang/CharSequence;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.ConfirmationRequest.html#sendConfirmationResult(boolean,android.os.Bundle)"/>
            /// </summary>
            /// <param name="arg0"><see cref="bool"/></param>
            /// <param name="arg1"><see cref="Android.Os.Bundle"/></param>
            public void SendConfirmationResult(bool arg0, Android.Os.Bundle arg1)
            {
                IExecuteWithSignature("sendConfirmationResult", "(ZLandroid/os/Bundle;)V", arg0, arg1);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region Insets implementation
        public partial class Insets
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.Insets.html#contentInsets"/>
            /// </summary>
            public Android.Graphics.Rect contentInsets { get { if (!_contentInsetsReady) { _contentInsetsContent = IGetField<Android.Graphics.Rect>("contentInsets"); _contentInsetsReady = true; } return _contentInsetsContent; } }
            private Android.Graphics.Rect _contentInsetsContent = default;
            private bool _contentInsetsReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.Insets.html#touchableRegion"/>
            /// </summary>
            public Android.Graphics.Region touchableRegion { get { if (!_touchableRegionReady) { _touchableRegionContent = IGetField<Android.Graphics.Region>("touchableRegion"); _touchableRegionReady = true; } return _touchableRegionContent; } }
            private Android.Graphics.Region _touchableRegionContent = default;
            private bool _touchableRegionReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.Insets.html#touchableInsets"/>
            /// </summary>
            public int touchableInsets { get { return IGetField<int>("touchableInsets"); } set { ISetField("touchableInsets", value); } }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.Insets.html#TOUCHABLE_INSETS_CONTENT"/>
            /// </summary>
            public static int TOUCHABLE_INSETS_CONTENT { get { if (!_TOUCHABLE_INSETS_CONTENTReady) { _TOUCHABLE_INSETS_CONTENTContent = SGetField<int>(LocalBridgeClazz, "TOUCHABLE_INSETS_CONTENT"); _TOUCHABLE_INSETS_CONTENTReady = true; } return _TOUCHABLE_INSETS_CONTENTContent; } }
            private static int _TOUCHABLE_INSETS_CONTENTContent = default;
            private static bool _TOUCHABLE_INSETS_CONTENTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.Insets.html#TOUCHABLE_INSETS_FRAME"/>
            /// </summary>
            public static int TOUCHABLE_INSETS_FRAME { get { if (!_TOUCHABLE_INSETS_FRAMEReady) { _TOUCHABLE_INSETS_FRAMEContent = SGetField<int>(LocalBridgeClazz, "TOUCHABLE_INSETS_FRAME"); _TOUCHABLE_INSETS_FRAMEReady = true; } return _TOUCHABLE_INSETS_FRAMEContent; } }
            private static int _TOUCHABLE_INSETS_FRAMEContent = default;
            private static bool _TOUCHABLE_INSETS_FRAMEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.Insets.html#TOUCHABLE_INSETS_REGION"/>
            /// </summary>
            public static int TOUCHABLE_INSETS_REGION { get { if (!_TOUCHABLE_INSETS_REGIONReady) { _TOUCHABLE_INSETS_REGIONContent = SGetField<int>(LocalBridgeClazz, "TOUCHABLE_INSETS_REGION"); _TOUCHABLE_INSETS_REGIONReady = true; } return _TOUCHABLE_INSETS_REGIONContent; } }
            private static int _TOUCHABLE_INSETS_REGIONContent = default;
            private static bool _TOUCHABLE_INSETS_REGIONReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region PickOptionRequest implementation
        public partial class PickOptionRequest
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.PickOptionRequest.html#getOptions()"/>
            /// </summary>
            /// <returns><see cref="Android.App.VoiceInteractor.PickOptionRequest.Option"/></returns>
            public Android.App.VoiceInteractor.PickOptionRequest.Option[] GetOptions()
            {
                return IExecuteWithSignatureArray<Android.App.VoiceInteractor.PickOptionRequest.Option>("getOptions", "()[Landroid/app/VoiceInteractor$PickOptionRequest$Option;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.PickOptionRequest.html#getVoicePrompt()"/>
            /// </summary>
            /// <returns><see cref="Android.App.VoiceInteractor.Prompt"/></returns>
            public Android.App.VoiceInteractor.Prompt GetVoicePrompt()
            {
                return IExecuteWithSignature<Android.App.VoiceInteractor.Prompt>("getVoicePrompt", "()Landroid/app/VoiceInteractor$Prompt;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.PickOptionRequest.html#getPrompt()"/>
            /// </summary>
            /// <returns><see cref="Java.Lang.CharSequence"/></returns>
            [global::System.Obsolete()]
            public Java.Lang.CharSequence GetPrompt()
            {
                return IExecuteWithSignature<Java.Lang.CharSequence>("getPrompt", "()Ljava/lang/CharSequence;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.PickOptionRequest.html#sendIntermediatePickOptionResult(android.app.VoiceInteractor.PickOptionRequest.Option[],android.os.Bundle)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.App.VoiceInteractor.PickOptionRequest.Option"/></param>
            /// <param name="arg1"><see cref="Android.Os.Bundle"/></param>
            public void SendIntermediatePickOptionResult(Android.App.VoiceInteractor.PickOptionRequest.Option[] arg0, Android.Os.Bundle arg1)
            {
                IExecuteWithSignature("sendIntermediatePickOptionResult", "([Landroid/app/VoiceInteractor$PickOptionRequest$Option;Landroid/os/Bundle;)V", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.PickOptionRequest.html#sendPickOptionResult(android.app.VoiceInteractor.PickOptionRequest.Option[],android.os.Bundle)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.App.VoiceInteractor.PickOptionRequest.Option"/></param>
            /// <param name="arg1"><see cref="Android.Os.Bundle"/></param>
            public void SendPickOptionResult(Android.App.VoiceInteractor.PickOptionRequest.Option[] arg0, Android.Os.Bundle arg1)
            {
                IExecuteWithSignature("sendPickOptionResult", "([Landroid/app/VoiceInteractor$PickOptionRequest$Option;Landroid/os/Bundle;)V", arg0, arg1);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region Request implementation
        public partial class Request
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.Request.html#getExtras()"/>
            /// </summary>
            /// <returns><see cref="Android.Os.Bundle"/></returns>
            public Android.Os.Bundle GetExtras()
            {
                return IExecuteWithSignature<Android.Os.Bundle>("getExtras", "()Landroid/os/Bundle;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.Request.html#isActive()"/>
            /// </summary>
            /// <returns><see cref="bool"/></returns>
            public bool IsActive()
            {
                return IExecuteWithSignature<bool>("isActive", "()Z");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.Request.html#getCallingUid()"/>
            /// </summary>
            /// <returns><see cref="int"/></returns>
            public int GetCallingUid()
            {
                return IExecuteWithSignature<int>("getCallingUid", "()I");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.Request.html#getCallingPackage()"/>
            /// </summary>
            /// <returns><see cref="Java.Lang.String"/></returns>
            public Java.Lang.String GetCallingPackage()
            {
                return IExecuteWithSignature<Java.Lang.String>("getCallingPackage", "()Ljava/lang/String;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.Request.html#cancel()"/>
            /// </summary>
            public void Cancel()
            {
                IExecuteWithSignature("cancel", "()V");
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region VisibleActivityCallback implementation
        public partial class VisibleActivityCallback
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.VisibleActivityCallback.html#onInvisible(android.service.voice.VoiceInteractionSession.ActivityId)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Service.Voice.VoiceInteractionSession.ActivityId"/></param>
            public void OnInvisible(Android.Service.Voice.VoiceInteractionSession.ActivityId arg0)
            {
                IExecuteWithSignature("onInvisible", "(Landroid/service/voice/VoiceInteractionSession$ActivityId;)V", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.VisibleActivityCallback.html#onVisible(android.service.voice.VisibleActivityInfo)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Service.Voice.VisibleActivityInfo"/></param>
            public void OnVisible(Android.Service.Voice.VisibleActivityInfo arg0)
            {
                IExecuteWithSignature("onVisible", "(Landroid/service/voice/VisibleActivityInfo;)V", arg0);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}