/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.4.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Service.Autofill
{
    #region SaveInfo
    public partial class SaveInfo
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/autofill/SaveInfo.html#CREATOR"/>
        /// </summary>
        public static Android.Os.Parcelable.Creator CREATOR { get { if (!_CREATORReady) { _CREATORContent = SGetField<Android.Os.Parcelable.Creator>(LocalBridgeClazz, "CREATOR"); _CREATORReady = true; } return _CREATORContent; } }
        private static Android.Os.Parcelable.Creator _CREATORContent = default;
        private static bool _CREATORReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/autofill/SaveInfo.html#FLAG_DELAY_SAVE"/>
        /// </summary>
        public static int FLAG_DELAY_SAVE { get { if (!_FLAG_DELAY_SAVEReady) { _FLAG_DELAY_SAVEContent = SGetField<int>(LocalBridgeClazz, "FLAG_DELAY_SAVE"); _FLAG_DELAY_SAVEReady = true; } return _FLAG_DELAY_SAVEContent; } }
        private static int _FLAG_DELAY_SAVEContent = default;
        private static bool _FLAG_DELAY_SAVEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/autofill/SaveInfo.html#FLAG_DONT_SAVE_ON_FINISH"/>
        /// </summary>
        public static int FLAG_DONT_SAVE_ON_FINISH { get { if (!_FLAG_DONT_SAVE_ON_FINISHReady) { _FLAG_DONT_SAVE_ON_FINISHContent = SGetField<int>(LocalBridgeClazz, "FLAG_DONT_SAVE_ON_FINISH"); _FLAG_DONT_SAVE_ON_FINISHReady = true; } return _FLAG_DONT_SAVE_ON_FINISHContent; } }
        private static int _FLAG_DONT_SAVE_ON_FINISHContent = default;
        private static bool _FLAG_DONT_SAVE_ON_FINISHReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/autofill/SaveInfo.html#FLAG_SAVE_ON_ALL_VIEWS_INVISIBLE"/>
        /// </summary>
        public static int FLAG_SAVE_ON_ALL_VIEWS_INVISIBLE { get { if (!_FLAG_SAVE_ON_ALL_VIEWS_INVISIBLEReady) { _FLAG_SAVE_ON_ALL_VIEWS_INVISIBLEContent = SGetField<int>(LocalBridgeClazz, "FLAG_SAVE_ON_ALL_VIEWS_INVISIBLE"); _FLAG_SAVE_ON_ALL_VIEWS_INVISIBLEReady = true; } return _FLAG_SAVE_ON_ALL_VIEWS_INVISIBLEContent; } }
        private static int _FLAG_SAVE_ON_ALL_VIEWS_INVISIBLEContent = default;
        private static bool _FLAG_SAVE_ON_ALL_VIEWS_INVISIBLEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/autofill/SaveInfo.html#NEGATIVE_BUTTON_STYLE_CANCEL"/>
        /// </summary>
        public static int NEGATIVE_BUTTON_STYLE_CANCEL { get { if (!_NEGATIVE_BUTTON_STYLE_CANCELReady) { _NEGATIVE_BUTTON_STYLE_CANCELContent = SGetField<int>(LocalBridgeClazz, "NEGATIVE_BUTTON_STYLE_CANCEL"); _NEGATIVE_BUTTON_STYLE_CANCELReady = true; } return _NEGATIVE_BUTTON_STYLE_CANCELContent; } }
        private static int _NEGATIVE_BUTTON_STYLE_CANCELContent = default;
        private static bool _NEGATIVE_BUTTON_STYLE_CANCELReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/autofill/SaveInfo.html#NEGATIVE_BUTTON_STYLE_NEVER"/>
        /// </summary>
        public static int NEGATIVE_BUTTON_STYLE_NEVER { get { if (!_NEGATIVE_BUTTON_STYLE_NEVERReady) { _NEGATIVE_BUTTON_STYLE_NEVERContent = SGetField<int>(LocalBridgeClazz, "NEGATIVE_BUTTON_STYLE_NEVER"); _NEGATIVE_BUTTON_STYLE_NEVERReady = true; } return _NEGATIVE_BUTTON_STYLE_NEVERContent; } }
        private static int _NEGATIVE_BUTTON_STYLE_NEVERContent = default;
        private static bool _NEGATIVE_BUTTON_STYLE_NEVERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/autofill/SaveInfo.html#NEGATIVE_BUTTON_STYLE_REJECT"/>
        /// </summary>
        public static int NEGATIVE_BUTTON_STYLE_REJECT { get { if (!_NEGATIVE_BUTTON_STYLE_REJECTReady) { _NEGATIVE_BUTTON_STYLE_REJECTContent = SGetField<int>(LocalBridgeClazz, "NEGATIVE_BUTTON_STYLE_REJECT"); _NEGATIVE_BUTTON_STYLE_REJECTReady = true; } return _NEGATIVE_BUTTON_STYLE_REJECTContent; } }
        private static int _NEGATIVE_BUTTON_STYLE_REJECTContent = default;
        private static bool _NEGATIVE_BUTTON_STYLE_REJECTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/autofill/SaveInfo.html#POSITIVE_BUTTON_STYLE_CONTINUE"/>
        /// </summary>
        public static int POSITIVE_BUTTON_STYLE_CONTINUE { get { if (!_POSITIVE_BUTTON_STYLE_CONTINUEReady) { _POSITIVE_BUTTON_STYLE_CONTINUEContent = SGetField<int>(LocalBridgeClazz, "POSITIVE_BUTTON_STYLE_CONTINUE"); _POSITIVE_BUTTON_STYLE_CONTINUEReady = true; } return _POSITIVE_BUTTON_STYLE_CONTINUEContent; } }
        private static int _POSITIVE_BUTTON_STYLE_CONTINUEContent = default;
        private static bool _POSITIVE_BUTTON_STYLE_CONTINUEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/autofill/SaveInfo.html#POSITIVE_BUTTON_STYLE_SAVE"/>
        /// </summary>
        public static int POSITIVE_BUTTON_STYLE_SAVE { get { if (!_POSITIVE_BUTTON_STYLE_SAVEReady) { _POSITIVE_BUTTON_STYLE_SAVEContent = SGetField<int>(LocalBridgeClazz, "POSITIVE_BUTTON_STYLE_SAVE"); _POSITIVE_BUTTON_STYLE_SAVEReady = true; } return _POSITIVE_BUTTON_STYLE_SAVEContent; } }
        private static int _POSITIVE_BUTTON_STYLE_SAVEContent = default;
        private static bool _POSITIVE_BUTTON_STYLE_SAVEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/autofill/SaveInfo.html#SAVE_DATA_TYPE_ADDRESS"/>
        /// </summary>
        public static int SAVE_DATA_TYPE_ADDRESS { get { if (!_SAVE_DATA_TYPE_ADDRESSReady) { _SAVE_DATA_TYPE_ADDRESSContent = SGetField<int>(LocalBridgeClazz, "SAVE_DATA_TYPE_ADDRESS"); _SAVE_DATA_TYPE_ADDRESSReady = true; } return _SAVE_DATA_TYPE_ADDRESSContent; } }
        private static int _SAVE_DATA_TYPE_ADDRESSContent = default;
        private static bool _SAVE_DATA_TYPE_ADDRESSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/autofill/SaveInfo.html#SAVE_DATA_TYPE_CREDIT_CARD"/>
        /// </summary>
        public static int SAVE_DATA_TYPE_CREDIT_CARD { get { if (!_SAVE_DATA_TYPE_CREDIT_CARDReady) { _SAVE_DATA_TYPE_CREDIT_CARDContent = SGetField<int>(LocalBridgeClazz, "SAVE_DATA_TYPE_CREDIT_CARD"); _SAVE_DATA_TYPE_CREDIT_CARDReady = true; } return _SAVE_DATA_TYPE_CREDIT_CARDContent; } }
        private static int _SAVE_DATA_TYPE_CREDIT_CARDContent = default;
        private static bool _SAVE_DATA_TYPE_CREDIT_CARDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/autofill/SaveInfo.html#SAVE_DATA_TYPE_DEBIT_CARD"/>
        /// </summary>
        public static int SAVE_DATA_TYPE_DEBIT_CARD { get { if (!_SAVE_DATA_TYPE_DEBIT_CARDReady) { _SAVE_DATA_TYPE_DEBIT_CARDContent = SGetField<int>(LocalBridgeClazz, "SAVE_DATA_TYPE_DEBIT_CARD"); _SAVE_DATA_TYPE_DEBIT_CARDReady = true; } return _SAVE_DATA_TYPE_DEBIT_CARDContent; } }
        private static int _SAVE_DATA_TYPE_DEBIT_CARDContent = default;
        private static bool _SAVE_DATA_TYPE_DEBIT_CARDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/autofill/SaveInfo.html#SAVE_DATA_TYPE_EMAIL_ADDRESS"/>
        /// </summary>
        public static int SAVE_DATA_TYPE_EMAIL_ADDRESS { get { if (!_SAVE_DATA_TYPE_EMAIL_ADDRESSReady) { _SAVE_DATA_TYPE_EMAIL_ADDRESSContent = SGetField<int>(LocalBridgeClazz, "SAVE_DATA_TYPE_EMAIL_ADDRESS"); _SAVE_DATA_TYPE_EMAIL_ADDRESSReady = true; } return _SAVE_DATA_TYPE_EMAIL_ADDRESSContent; } }
        private static int _SAVE_DATA_TYPE_EMAIL_ADDRESSContent = default;
        private static bool _SAVE_DATA_TYPE_EMAIL_ADDRESSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/autofill/SaveInfo.html#SAVE_DATA_TYPE_GENERIC"/>
        /// </summary>
        public static int SAVE_DATA_TYPE_GENERIC { get { if (!_SAVE_DATA_TYPE_GENERICReady) { _SAVE_DATA_TYPE_GENERICContent = SGetField<int>(LocalBridgeClazz, "SAVE_DATA_TYPE_GENERIC"); _SAVE_DATA_TYPE_GENERICReady = true; } return _SAVE_DATA_TYPE_GENERICContent; } }
        private static int _SAVE_DATA_TYPE_GENERICContent = default;
        private static bool _SAVE_DATA_TYPE_GENERICReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/autofill/SaveInfo.html#SAVE_DATA_TYPE_GENERIC_CARD"/>
        /// </summary>
        public static int SAVE_DATA_TYPE_GENERIC_CARD { get { if (!_SAVE_DATA_TYPE_GENERIC_CARDReady) { _SAVE_DATA_TYPE_GENERIC_CARDContent = SGetField<int>(LocalBridgeClazz, "SAVE_DATA_TYPE_GENERIC_CARD"); _SAVE_DATA_TYPE_GENERIC_CARDReady = true; } return _SAVE_DATA_TYPE_GENERIC_CARDContent; } }
        private static int _SAVE_DATA_TYPE_GENERIC_CARDContent = default;
        private static bool _SAVE_DATA_TYPE_GENERIC_CARDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/autofill/SaveInfo.html#SAVE_DATA_TYPE_PASSWORD"/>
        /// </summary>
        public static int SAVE_DATA_TYPE_PASSWORD { get { if (!_SAVE_DATA_TYPE_PASSWORDReady) { _SAVE_DATA_TYPE_PASSWORDContent = SGetField<int>(LocalBridgeClazz, "SAVE_DATA_TYPE_PASSWORD"); _SAVE_DATA_TYPE_PASSWORDReady = true; } return _SAVE_DATA_TYPE_PASSWORDContent; } }
        private static int _SAVE_DATA_TYPE_PASSWORDContent = default;
        private static bool _SAVE_DATA_TYPE_PASSWORDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/autofill/SaveInfo.html#SAVE_DATA_TYPE_PAYMENT_CARD"/>
        /// </summary>
        public static int SAVE_DATA_TYPE_PAYMENT_CARD { get { if (!_SAVE_DATA_TYPE_PAYMENT_CARDReady) { _SAVE_DATA_TYPE_PAYMENT_CARDContent = SGetField<int>(LocalBridgeClazz, "SAVE_DATA_TYPE_PAYMENT_CARD"); _SAVE_DATA_TYPE_PAYMENT_CARDReady = true; } return _SAVE_DATA_TYPE_PAYMENT_CARDContent; } }
        private static int _SAVE_DATA_TYPE_PAYMENT_CARDContent = default;
        private static bool _SAVE_DATA_TYPE_PAYMENT_CARDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/autofill/SaveInfo.html#SAVE_DATA_TYPE_USERNAME"/>
        /// </summary>
        public static int SAVE_DATA_TYPE_USERNAME { get { if (!_SAVE_DATA_TYPE_USERNAMEReady) { _SAVE_DATA_TYPE_USERNAMEContent = SGetField<int>(LocalBridgeClazz, "SAVE_DATA_TYPE_USERNAME"); _SAVE_DATA_TYPE_USERNAMEReady = true; } return _SAVE_DATA_TYPE_USERNAMEContent; } }
        private static int _SAVE_DATA_TYPE_USERNAMEContent = default;
        private static bool _SAVE_DATA_TYPE_USERNAMEReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/autofill/SaveInfo.html#describeContents()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int DescribeContents()
        {
            return IExecuteWithSignature<int>("describeContents", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/autofill/SaveInfo.html#writeToParcel(android.os.Parcel,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.Parcel"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void WriteToParcel(Android.Os.Parcel arg0, int arg1)
        {
            IExecute("writeToParcel", arg0, arg1);
        }

        #endregion

        #region Nested classes
        #region Builder
        public partial class Builder
        {
            #region Constructors
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/autofill/SaveInfo.Builder.html#%3Cinit%3E(int,android.view.autofill.AutofillId[])"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <param name="arg1"><see cref="Android.View.Autofill.AutofillId"/></param>
            public Builder(int arg0, Android.View.Autofill.AutofillId[] arg1)
                : base(arg0, arg1)
            {
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/autofill/SaveInfo.Builder.html#%3Cinit%3E(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            public Builder(int arg0)
                : base(arg0)
            {
            }

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/autofill/SaveInfo.Builder.html#build()"/>
            /// </summary>
            /// <returns><see cref="Android.Service.Autofill.SaveInfo"/></returns>
            public Android.Service.Autofill.SaveInfo Build()
            {
                return IExecuteWithSignature<Android.Service.Autofill.SaveInfo>("build", "()Landroid/service/autofill/SaveInfo;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/autofill/SaveInfo.Builder.html#addSanitizer(android.service.autofill.Sanitizer,android.view.autofill.AutofillId[])"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Service.Autofill.Sanitizer"/></param>
            /// <param name="arg1"><see cref="Android.View.Autofill.AutofillId"/></param>
            /// <returns><see cref="Android.Service.Autofill.SaveInfo.Builder"/></returns>
            public Android.Service.Autofill.SaveInfo.Builder AddSanitizer(Android.Service.Autofill.Sanitizer arg0, params Android.View.Autofill.AutofillId[] arg1)
            {
                if (arg1.Length == 0) return IExecute<Android.Service.Autofill.SaveInfo.Builder>("addSanitizer", arg0); else return IExecute<Android.Service.Autofill.SaveInfo.Builder>("addSanitizer", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/autofill/SaveInfo.Builder.html#setCustomDescription(android.service.autofill.CustomDescription)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Service.Autofill.CustomDescription"/></param>
            /// <returns><see cref="Android.Service.Autofill.SaveInfo.Builder"/></returns>
            public Android.Service.Autofill.SaveInfo.Builder SetCustomDescription(Android.Service.Autofill.CustomDescription arg0)
            {
                return IExecuteWithSignature<Android.Service.Autofill.SaveInfo.Builder>("setCustomDescription", "(Landroid/service/autofill/CustomDescription;)Landroid/service/autofill/SaveInfo$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/autofill/SaveInfo.Builder.html#setDescription(java.lang.CharSequence)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.CharSequence"/></param>
            /// <returns><see cref="Android.Service.Autofill.SaveInfo.Builder"/></returns>
            public Android.Service.Autofill.SaveInfo.Builder SetDescription(Java.Lang.CharSequence arg0)
            {
                return IExecuteWithSignature<Android.Service.Autofill.SaveInfo.Builder>("setDescription", "(Ljava/lang/CharSequence;)Landroid/service/autofill/SaveInfo$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/autofill/SaveInfo.Builder.html#setFlags(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <returns><see cref="Android.Service.Autofill.SaveInfo.Builder"/></returns>
            public Android.Service.Autofill.SaveInfo.Builder SetFlags(int arg0)
            {
                return IExecuteWithSignature<Android.Service.Autofill.SaveInfo.Builder>("setFlags", "(I)Landroid/service/autofill/SaveInfo$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/autofill/SaveInfo.Builder.html#setNegativeAction(int,android.content.IntentSender)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <param name="arg1"><see cref="Android.Content.IntentSender"/></param>
            /// <returns><see cref="Android.Service.Autofill.SaveInfo.Builder"/></returns>
            public Android.Service.Autofill.SaveInfo.Builder SetNegativeAction(int arg0, Android.Content.IntentSender arg1)
            {
                return IExecute<Android.Service.Autofill.SaveInfo.Builder>("setNegativeAction", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/autofill/SaveInfo.Builder.html#setOptionalIds(android.view.autofill.AutofillId[])"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.View.Autofill.AutofillId"/></param>
            /// <returns><see cref="Android.Service.Autofill.SaveInfo.Builder"/></returns>
            public Android.Service.Autofill.SaveInfo.Builder SetOptionalIds(Android.View.Autofill.AutofillId[] arg0)
            {
                return IExecuteWithSignature<Android.Service.Autofill.SaveInfo.Builder>("setOptionalIds", "([Landroid/view/autofill/AutofillId;)Landroid/service/autofill/SaveInfo$Builder;", new object[] { arg0 });
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/autofill/SaveInfo.Builder.html#setPositiveAction(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <returns><see cref="Android.Service.Autofill.SaveInfo.Builder"/></returns>
            public Android.Service.Autofill.SaveInfo.Builder SetPositiveAction(int arg0)
            {
                return IExecuteWithSignature<Android.Service.Autofill.SaveInfo.Builder>("setPositiveAction", "(I)Landroid/service/autofill/SaveInfo$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/autofill/SaveInfo.Builder.html#setTriggerId(android.view.autofill.AutofillId)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.View.Autofill.AutofillId"/></param>
            /// <returns><see cref="Android.Service.Autofill.SaveInfo.Builder"/></returns>
            public Android.Service.Autofill.SaveInfo.Builder SetTriggerId(Android.View.Autofill.AutofillId arg0)
            {
                return IExecuteWithSignature<Android.Service.Autofill.SaveInfo.Builder>("setTriggerId", "(Landroid/view/autofill/AutofillId;)Landroid/service/autofill/SaveInfo$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/autofill/SaveInfo.Builder.html#setValidator(android.service.autofill.Validator)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Service.Autofill.Validator"/></param>
            /// <returns><see cref="Android.Service.Autofill.SaveInfo.Builder"/></returns>
            public Android.Service.Autofill.SaveInfo.Builder SetValidator(Android.Service.Autofill.Validator arg0)
            {
                return IExecuteWithSignature<Android.Service.Autofill.SaveInfo.Builder>("setValidator", "(Landroid/service/autofill/Validator;)Landroid/service/autofill/SaveInfo$Builder;", arg0);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}