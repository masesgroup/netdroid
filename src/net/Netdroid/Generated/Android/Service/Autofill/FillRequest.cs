/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.2.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Service.Autofill
{
    #region FillRequest
    public partial class FillRequest
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/autofill/FillRequest.html#CREATOR"/>
        /// </summary>
        public static Android.Os.Parcelable.Creator CREATOR { get { if (!_CREATORReady) { _CREATORContent = SGetField<Android.Os.Parcelable.Creator>(LocalBridgeClazz, "CREATOR"); _CREATORReady = true; } return _CREATORContent; } }
        private static Android.Os.Parcelable.Creator _CREATORContent = default;
        private static bool _CREATORReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/autofill/FillRequest.html#FLAG_COMPATIBILITY_MODE_REQUEST"/>
        /// </summary>
        public static int FLAG_COMPATIBILITY_MODE_REQUEST { get { if (!_FLAG_COMPATIBILITY_MODE_REQUESTReady) { _FLAG_COMPATIBILITY_MODE_REQUESTContent = SGetField<int>(LocalBridgeClazz, "FLAG_COMPATIBILITY_MODE_REQUEST"); _FLAG_COMPATIBILITY_MODE_REQUESTReady = true; } return _FLAG_COMPATIBILITY_MODE_REQUESTContent; } }
        private static int _FLAG_COMPATIBILITY_MODE_REQUESTContent = default;
        private static bool _FLAG_COMPATIBILITY_MODE_REQUESTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/autofill/FillRequest.html#FLAG_MANUAL_REQUEST"/>
        /// </summary>
        public static int FLAG_MANUAL_REQUEST { get { if (!_FLAG_MANUAL_REQUESTReady) { _FLAG_MANUAL_REQUESTContent = SGetField<int>(LocalBridgeClazz, "FLAG_MANUAL_REQUEST"); _FLAG_MANUAL_REQUESTReady = true; } return _FLAG_MANUAL_REQUESTContent; } }
        private static int _FLAG_MANUAL_REQUESTContent = default;
        private static bool _FLAG_MANUAL_REQUESTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/autofill/FillRequest.html#FLAG_SUPPORTS_FILL_DIALOG"/>
        /// </summary>
        public static int FLAG_SUPPORTS_FILL_DIALOG { get { if (!_FLAG_SUPPORTS_FILL_DIALOGReady) { _FLAG_SUPPORTS_FILL_DIALOGContent = SGetField<int>(LocalBridgeClazz, "FLAG_SUPPORTS_FILL_DIALOG"); _FLAG_SUPPORTS_FILL_DIALOGReady = true; } return _FLAG_SUPPORTS_FILL_DIALOGContent; } }
        private static int _FLAG_SUPPORTS_FILL_DIALOGContent = default;
        private static bool _FLAG_SUPPORTS_FILL_DIALOGReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/autofill/FillRequest.html#getDelayedFillIntentSender()"/>
        /// </summary>
        /// <returns><see cref="Android.Content.IntentSender"/></returns>
        public Android.Content.IntentSender GetDelayedFillIntentSender()
        {
            return IExecuteWithSignature<Android.Content.IntentSender>("getDelayedFillIntentSender", "()Landroid/content/IntentSender;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/autofill/FillRequest.html#getClientState()"/>
        /// </summary>
        /// <returns><see cref="Android.Os.Bundle"/></returns>
        public Android.Os.Bundle GetClientState()
        {
            return IExecuteWithSignature<Android.Os.Bundle>("getClientState", "()Landroid/os/Bundle;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/autofill/FillRequest.html#getInlineSuggestionsRequest()"/>
        /// </summary>
        /// <returns><see cref="Android.View.Inputmethod.InlineSuggestionsRequest"/></returns>
        public Android.View.Inputmethod.InlineSuggestionsRequest GetInlineSuggestionsRequest()
        {
            return IExecuteWithSignature<Android.View.Inputmethod.InlineSuggestionsRequest>("getInlineSuggestionsRequest", "()Landroid/view/inputmethod/InlineSuggestionsRequest;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/autofill/FillRequest.html#describeContents()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int DescribeContents()
        {
            return IExecuteWithSignature<int>("describeContents", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/autofill/FillRequest.html#getFlags()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetFlags()
        {
            return IExecuteWithSignature<int>("getFlags", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/autofill/FillRequest.html#getId()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetId()
        {
            return IExecuteWithSignature<int>("getId", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/autofill/FillRequest.html#getFillContexts()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.List"/></returns>
        public Java.Util.List<Android.Service.Autofill.FillContext> GetFillContexts()
        {
            return IExecuteWithSignature<Java.Util.List<Android.Service.Autofill.FillContext>>("getFillContexts", "()Ljava/util/List;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/autofill/FillRequest.html#getHints()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.List"/></returns>
        public Java.Util.List<Java.Lang.String> GetHints()
        {
            return IExecuteWithSignature<Java.Util.List<Java.Lang.String>>("getHints", "()Ljava/util/List;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/autofill/FillRequest.html#writeToParcel(android.os.Parcel,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.Parcel"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void WriteToParcel(Android.Os.Parcel arg0, int arg1)
        {
            IExecute("writeToParcel", arg0, arg1);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}