/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.10.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Service.Autofill
{
    #region SavedDatasetsInfoCallback declaration
    /// <summary>
    /// <see href="https://developer.android.com/reference/android/service/autofill/SavedDatasetsInfoCallback.html"/>
    /// </summary>
    public partial class SavedDatasetsInfoCallback : MASES.JCOBridge.C2JBridge.JVMBridgeBase<SavedDatasetsInfoCallback>
    {
        const string _bridgeClassName = "android.service.autofill.SavedDatasetsInfoCallback";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        [global::System.Obsolete("SavedDatasetsInfoCallback class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public SavedDatasetsInfoCallback() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        [global::System.Obsolete("SavedDatasetsInfoCallback class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public SavedDatasetsInfoCallback(params object[] args) : base(args) { }
    
        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
    
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => true;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => true;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;
    
        // TODO: complete the class
    
    }
    #endregion

    #region ISavedDatasetsInfoCallback
    /// <summary>
    /// .NET interface for TO BE DEFINED FROM USER
    /// </summary>
    public partial interface ISavedDatasetsInfoCallback
    {
        #region Instance methods
    
        #endregion
    
        #region Nested classes
    
        #endregion
    
        // TODO: complete the class
    }
    #endregion

    #region SavedDatasetsInfoCallback implementation
    public partial class SavedDatasetsInfoCallback : Android.Service.Autofill.ISavedDatasetsInfoCallback
    {
        #region Constructors
    
        #endregion
    
        #region Class/Interface conversion operators
    
        #endregion
    
        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/autofill/SavedDatasetsInfoCallback.html#ERROR_NEEDS_USER_ACTION"/>
        /// </summary>
        public static int ERROR_NEEDS_USER_ACTION { get { if (!_ERROR_NEEDS_USER_ACTIONReady) { _ERROR_NEEDS_USER_ACTIONContent = SGetField<int>(LocalBridgeClazz, "ERROR_NEEDS_USER_ACTION"); _ERROR_NEEDS_USER_ACTIONReady = true; } return _ERROR_NEEDS_USER_ACTIONContent; } }
        private static int _ERROR_NEEDS_USER_ACTIONContent = default;
        private static bool _ERROR_NEEDS_USER_ACTIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/autofill/SavedDatasetsInfoCallback.html#ERROR_OTHER"/>
        /// </summary>
        public static int ERROR_OTHER { get { if (!_ERROR_OTHERReady) { _ERROR_OTHERContent = SGetField<int>(LocalBridgeClazz, "ERROR_OTHER"); _ERROR_OTHERReady = true; } return _ERROR_OTHERContent; } }
        private static int _ERROR_OTHERContent = default;
        private static bool _ERROR_OTHERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/autofill/SavedDatasetsInfoCallback.html#ERROR_UNSUPPORTED"/>
        /// </summary>
        public static int ERROR_UNSUPPORTED { get { if (!_ERROR_UNSUPPORTEDReady) { _ERROR_UNSUPPORTEDContent = SGetField<int>(LocalBridgeClazz, "ERROR_UNSUPPORTED"); _ERROR_UNSUPPORTEDReady = true; } return _ERROR_UNSUPPORTEDContent; } }
        private static int _ERROR_UNSUPPORTEDContent = default;
        private static bool _ERROR_UNSUPPORTEDReady = false; // this is used because in case of generics 
    
        #endregion
    
        #region Static methods
    
        #endregion
    
        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/autofill/SavedDatasetsInfoCallback.html#onError(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void OnError(int arg0)
        {
            IExecuteWithSignature("onError", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/autofill/SavedDatasetsInfoCallback.html#onSuccess(java.util.Set)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Set"/></param>
        public void OnSuccess(Java.Util.Set<Android.Service.Autofill.SavedDatasetsInfo> arg0)
        {
            IExecuteWithSignature("onSuccess", "(Ljava/util/Set;)V", arg0);
        }
    
        #endregion
    
        #region Nested classes
    
        #endregion
    
        // TODO: complete the class
    }
    #endregion
}