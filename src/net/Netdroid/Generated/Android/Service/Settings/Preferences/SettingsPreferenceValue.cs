/*
*  Copyright (c) 2024-2025 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.6.4.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Service.Settings.Preferences
{
    #region SettingsPreferenceValue declaration
    /// <summary>
    /// <see href="https://developer.android.com/reference/android/service/settings/preferences/SettingsPreferenceValue.html"/>
    /// </summary>
    public partial class SettingsPreferenceValue : Android.Os.Parcelable
    {
        const string _bridgeClassName = "android.service.settings.preferences.SettingsPreferenceValue";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public SettingsPreferenceValue() { }
        /// <summary>
        /// Internal constructor: used internally from JCOBridge
        /// </summary>
        [global::System.Obsolete("This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public SettingsPreferenceValue(IJVMBridgeBaseInitializer initializer) : base(initializer) { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public SettingsPreferenceValue(params object[] args) : base(args) { }
    
        private static readonly global::System.Exception _LocalBridgeClazzException = null;
        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, out _LocalBridgeClazzException, false);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw _LocalBridgeClazzException ?? new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
    
        /// <inheritdoc/>
        public override string BridgeClassName => _bridgeClassName;
        /// <inheritdoc/>
        public override bool IsBridgeAbstract => false;
        /// <inheritdoc/>
        public override bool IsBridgeCloseable => false;
        /// <inheritdoc/>
        public override bool IsBridgeInterface => false;
        /// <inheritdoc/>
        public override bool IsBridgeStatic => false;
    
        // TODO: complete the class
        #region Builder declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/settings/preferences/SettingsPreferenceValue.Builder.html"/>
        /// </summary>
        public partial class Builder : MASES.JCOBridge.C2JBridge.JVMBridgeBase<Builder>
        {
            const string _bridgeClassName = "android.service.settings.preferences.SettingsPreferenceValue$Builder";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public Builder() { }
            /// <summary>
            /// Internal constructor: used internally from JCOBridge
            /// </summary>
            [global::System.Obsolete("This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public Builder(IJVMBridgeBaseInitializer initializer) : base(initializer) { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public Builder(params object[] args) : base(args) { }
        
            private static readonly global::System.Exception _LocalBridgeClazzException = null;
            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, out _LocalBridgeClazzException, false);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw _LocalBridgeClazzException ?? new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
        
            /// <inheritdoc/>
            public override string BridgeClassName => _bridgeClassName;
            /// <inheritdoc/>
            public override bool IsBridgeAbstract => false;
            /// <inheritdoc/>
            public override bool IsBridgeCloseable => false;
            /// <inheritdoc/>
            public override bool IsBridgeInterface => false;
            /// <inheritdoc/>
            public override bool IsBridgeStatic => true;
        
            // TODO: complete the class
        
        }
        #endregion

    
    }
    #endregion

    #region SettingsPreferenceValue implementation
    public partial class SettingsPreferenceValue
    {
        #region Constructors
    
        #endregion
    
        #region Class/Interface conversion operators
    
        #endregion
    
        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/settings/preferences/SettingsPreferenceValue.html#CREATOR"/>
        /// </summary>
        public static Android.Os.Parcelable.Creator CREATOR { get { if (!_CREATORReady) { _CREATORContent = SGetField<Android.Os.Parcelable.Creator>(LocalBridgeClazz, "CREATOR"); _CREATORReady = true; } return _CREATORContent; } }
        private static Android.Os.Parcelable.Creator _CREATORContent = default;
        private static bool _CREATORReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/settings/preferences/SettingsPreferenceValue.html#TYPE_BOOLEAN"/>
        /// </summary>
        public static int TYPE_BOOLEAN { get { if (!_TYPE_BOOLEANReady) { _TYPE_BOOLEANContent = SGetField<int>(LocalBridgeClazz, "TYPE_BOOLEAN"); _TYPE_BOOLEANReady = true; } return _TYPE_BOOLEANContent; } }
        private static int _TYPE_BOOLEANContent = default;
        private static bool _TYPE_BOOLEANReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/settings/preferences/SettingsPreferenceValue.html#TYPE_DOUBLE"/>
        /// </summary>
        public static int TYPE_DOUBLE { get { if (!_TYPE_DOUBLEReady) { _TYPE_DOUBLEContent = SGetField<int>(LocalBridgeClazz, "TYPE_DOUBLE"); _TYPE_DOUBLEReady = true; } return _TYPE_DOUBLEContent; } }
        private static int _TYPE_DOUBLEContent = default;
        private static bool _TYPE_DOUBLEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/settings/preferences/SettingsPreferenceValue.html#TYPE_INT"/>
        /// </summary>
        public static int TYPE_INT { get { if (!_TYPE_INTReady) { _TYPE_INTContent = SGetField<int>(LocalBridgeClazz, "TYPE_INT"); _TYPE_INTReady = true; } return _TYPE_INTContent; } }
        private static int _TYPE_INTContent = default;
        private static bool _TYPE_INTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/settings/preferences/SettingsPreferenceValue.html#TYPE_LONG"/>
        /// </summary>
        public static int TYPE_LONG { get { if (!_TYPE_LONGReady) { _TYPE_LONGContent = SGetField<int>(LocalBridgeClazz, "TYPE_LONG"); _TYPE_LONGReady = true; } return _TYPE_LONGContent; } }
        private static int _TYPE_LONGContent = default;
        private static bool _TYPE_LONGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/settings/preferences/SettingsPreferenceValue.html#TYPE_STRING"/>
        /// </summary>
        public static int TYPE_STRING { get { if (!_TYPE_STRINGReady) { _TYPE_STRINGContent = SGetField<int>(LocalBridgeClazz, "TYPE_STRING"); _TYPE_STRINGReady = true; } return _TYPE_STRINGContent; } }
        private static int _TYPE_STRINGContent = default;
        private static bool _TYPE_STRINGReady = false; // this is used because in case of generics 
    
        #endregion
    
        #region Static methods
    
        #endregion
    
        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/settings/preferences/SettingsPreferenceValue.html#getBooleanValue()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool GetBooleanValue()
        {
            return IExecuteWithSignature<bool>("getBooleanValue", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/settings/preferences/SettingsPreferenceValue.html#getDoubleValue()"/>
        /// </summary>
        /// <returns><see cref="double"/></returns>
        public double GetDoubleValue()
        {
            return IExecuteWithSignature<double>("getDoubleValue", "()D");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/settings/preferences/SettingsPreferenceValue.html#describeContents()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int DescribeContents()
        {
            return IExecuteWithSignature<int>("describeContents", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/settings/preferences/SettingsPreferenceValue.html#getIntValue()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetIntValue()
        {
            return IExecuteWithSignature<int>("getIntValue", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/settings/preferences/SettingsPreferenceValue.html#getType()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetType()
        {
            return IExecuteWithSignature<int>("getType", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/settings/preferences/SettingsPreferenceValue.html#getStringValue()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetStringValue()
        {
            return IExecuteWithSignature<Java.Lang.String>("getStringValue", "()Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/settings/preferences/SettingsPreferenceValue.html#getLongValue()"/>
        /// </summary>
        /// <returns><see cref="long"/></returns>
        public long GetLongValue()
        {
            return IExecuteWithSignature<long>("getLongValue", "()J");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/settings/preferences/SettingsPreferenceValue.html#writeToParcel(android.os.Parcel,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.Parcel"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void WriteToParcel(Android.Os.Parcel arg0, int arg1)
        {
            IExecuteWithSignature("writeToParcel", "(Landroid/os/Parcel;I)V", arg0, arg1);
        }
    
        #endregion
    
        #region Nested classes
        #region Builder implementation
        public partial class Builder
        {
            #region Constructors
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/settings/preferences/SettingsPreferenceValue.Builder.html#%3Cinit%3E(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            public Builder(int arg0)
                : base(arg0)
            {
            }
        
            #endregion
        
            #region Class/Interface conversion operators
        
            #endregion
        
            #region Fields
        
            #endregion
        
            #region Static methods
        
            #endregion
        
            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/settings/preferences/SettingsPreferenceValue.Builder.html#build()"/>
            /// </summary>
            /// <returns><see cref="Android.Service.Settings.Preferences.SettingsPreferenceValue"/></returns>
            public Android.Service.Settings.Preferences.SettingsPreferenceValue Build()
            {
                return IExecuteWithSignature<Android.Service.Settings.Preferences.SettingsPreferenceValue>("build", "()Landroid/service/settings/preferences/SettingsPreferenceValue;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/settings/preferences/SettingsPreferenceValue.Builder.html#setBooleanValue(boolean)"/>
            /// </summary>
            /// <param name="arg0"><see cref="bool"/></param>
            /// <returns><see cref="Android.Service.Settings.Preferences.SettingsPreferenceValue.Builder"/></returns>
            public Android.Service.Settings.Preferences.SettingsPreferenceValue.Builder SetBooleanValue(bool arg0)
            {
                return IExecuteWithSignature<Android.Service.Settings.Preferences.SettingsPreferenceValue.Builder>("setBooleanValue", "(Z)Landroid/service/settings/preferences/SettingsPreferenceValue$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/settings/preferences/SettingsPreferenceValue.Builder.html#setDoubleValue(double)"/>
            /// </summary>
            /// <param name="arg0"><see cref="double"/></param>
            /// <returns><see cref="Android.Service.Settings.Preferences.SettingsPreferenceValue.Builder"/></returns>
            public Android.Service.Settings.Preferences.SettingsPreferenceValue.Builder SetDoubleValue(double arg0)
            {
                return IExecuteWithSignature<Android.Service.Settings.Preferences.SettingsPreferenceValue.Builder>("setDoubleValue", "(D)Landroid/service/settings/preferences/SettingsPreferenceValue$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/settings/preferences/SettingsPreferenceValue.Builder.html#setIntValue(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <returns><see cref="Android.Service.Settings.Preferences.SettingsPreferenceValue.Builder"/></returns>
            public Android.Service.Settings.Preferences.SettingsPreferenceValue.Builder SetIntValue(int arg0)
            {
                return IExecuteWithSignature<Android.Service.Settings.Preferences.SettingsPreferenceValue.Builder>("setIntValue", "(I)Landroid/service/settings/preferences/SettingsPreferenceValue$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/settings/preferences/SettingsPreferenceValue.Builder.html#setLongValue(long)"/>
            /// </summary>
            /// <param name="arg0"><see cref="long"/></param>
            /// <returns><see cref="Android.Service.Settings.Preferences.SettingsPreferenceValue.Builder"/></returns>
            public Android.Service.Settings.Preferences.SettingsPreferenceValue.Builder SetLongValue(long arg0)
            {
                return IExecuteWithSignature<Android.Service.Settings.Preferences.SettingsPreferenceValue.Builder>("setLongValue", "(J)Landroid/service/settings/preferences/SettingsPreferenceValue$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/settings/preferences/SettingsPreferenceValue.Builder.html#setStringValue(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Android.Service.Settings.Preferences.SettingsPreferenceValue.Builder"/></returns>
            public Android.Service.Settings.Preferences.SettingsPreferenceValue.Builder SetStringValue(Java.Lang.String arg0)
            {
                return IExecuteWithSignature<Android.Service.Settings.Preferences.SettingsPreferenceValue.Builder>("setStringValue", "(Ljava/lang/String;)Landroid/service/settings/preferences/SettingsPreferenceValue$Builder;", arg0);
            }
        
            #endregion
        
            #region Nested classes
        
            #endregion
        
            // TODO: complete the class
        }
        #endregion

    
        #endregion
    
        // TODO: complete the class
    }
    #endregion
}