/*
*  Copyright (c) 2024-2025 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.6.4.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Service.Settings.Preferences
{
    #region SettingsPreferenceMetadata declaration
    /// <summary>
    /// <see href="https://developer.android.com/reference/android/service/settings/preferences/SettingsPreferenceMetadata.html"/>
    /// </summary>
    public partial class SettingsPreferenceMetadata : Android.Os.Parcelable
    {
        const string _bridgeClassName = "android.service.settings.preferences.SettingsPreferenceMetadata";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public SettingsPreferenceMetadata() { }
        /// <summary>
        /// Internal constructor: used internally from JCOBridge
        /// </summary>
        [global::System.Obsolete("This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public SettingsPreferenceMetadata(IJVMBridgeBaseInitializer initializer) : base(initializer) { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public SettingsPreferenceMetadata(params object[] args) : base(args) { }
    
        private static readonly global::System.Exception _LocalBridgeClazzException = null;
        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, out _LocalBridgeClazzException, false);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw _LocalBridgeClazzException ?? new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
    
        /// <inheritdoc/>
        public override string BridgeClassName => _bridgeClassName;
        /// <inheritdoc/>
        public override bool IsBridgeAbstract => false;
        /// <inheritdoc/>
        public override bool IsBridgeCloseable => false;
        /// <inheritdoc/>
        public override bool IsBridgeInterface => false;
        /// <inheritdoc/>
        public override bool IsBridgeStatic => false;
    
        // TODO: complete the class
        #region Builder declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/settings/preferences/SettingsPreferenceMetadata.Builder.html"/>
        /// </summary>
        public partial class Builder : MASES.JCOBridge.C2JBridge.JVMBridgeBase<Builder>
        {
            const string _bridgeClassName = "android.service.settings.preferences.SettingsPreferenceMetadata$Builder";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public Builder() { }
            /// <summary>
            /// Internal constructor: used internally from JCOBridge
            /// </summary>
            [global::System.Obsolete("This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public Builder(IJVMBridgeBaseInitializer initializer) : base(initializer) { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public Builder(params object[] args) : base(args) { }
        
            private static readonly global::System.Exception _LocalBridgeClazzException = null;
            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, out _LocalBridgeClazzException, false);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw _LocalBridgeClazzException ?? new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
        
            /// <inheritdoc/>
            public override string BridgeClassName => _bridgeClassName;
            /// <inheritdoc/>
            public override bool IsBridgeAbstract => false;
            /// <inheritdoc/>
            public override bool IsBridgeCloseable => false;
            /// <inheritdoc/>
            public override bool IsBridgeInterface => false;
            /// <inheritdoc/>
            public override bool IsBridgeStatic => true;
        
            // TODO: complete the class
        
        }
        #endregion

    
    }
    #endregion

    #region SettingsPreferenceMetadata implementation
    public partial class SettingsPreferenceMetadata
    {
        #region Constructors
    
        #endregion
    
        #region Class/Interface conversion operators
    
        #endregion
    
        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/settings/preferences/SettingsPreferenceMetadata.html#CREATOR"/>
        /// </summary>
        public static Android.Os.Parcelable.Creator CREATOR { get { if (!_CREATORReady) { _CREATORContent = SGetField<Android.Os.Parcelable.Creator>(LocalBridgeClazz, "CREATOR"); _CREATORReady = true; } return _CREATORContent; } }
        private static Android.Os.Parcelable.Creator _CREATORContent = default;
        private static bool _CREATORReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/settings/preferences/SettingsPreferenceMetadata.html#DEEPLINK_ONLY"/>
        /// </summary>
        public static int DEEPLINK_ONLY { get { if (!_DEEPLINK_ONLYReady) { _DEEPLINK_ONLYContent = SGetField<int>(LocalBridgeClazz, "DEEPLINK_ONLY"); _DEEPLINK_ONLYReady = true; } return _DEEPLINK_ONLYContent; } }
        private static int _DEEPLINK_ONLYContent = default;
        private static bool _DEEPLINK_ONLYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/settings/preferences/SettingsPreferenceMetadata.html#EXPECT_POST_CONFIRMATION"/>
        /// </summary>
        public static int EXPECT_POST_CONFIRMATION { get { if (!_EXPECT_POST_CONFIRMATIONReady) { _EXPECT_POST_CONFIRMATIONContent = SGetField<int>(LocalBridgeClazz, "EXPECT_POST_CONFIRMATION"); _EXPECT_POST_CONFIRMATIONReady = true; } return _EXPECT_POST_CONFIRMATIONContent; } }
        private static int _EXPECT_POST_CONFIRMATIONContent = default;
        private static bool _EXPECT_POST_CONFIRMATIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/settings/preferences/SettingsPreferenceMetadata.html#NO_DIRECT_ACCESS"/>
        /// </summary>
        public static int NO_DIRECT_ACCESS { get { if (!_NO_DIRECT_ACCESSReady) { _NO_DIRECT_ACCESSContent = SGetField<int>(LocalBridgeClazz, "NO_DIRECT_ACCESS"); _NO_DIRECT_ACCESSReady = true; } return _NO_DIRECT_ACCESSContent; } }
        private static int _NO_DIRECT_ACCESSContent = default;
        private static bool _NO_DIRECT_ACCESSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/settings/preferences/SettingsPreferenceMetadata.html#NO_SENSITIVITY"/>
        /// </summary>
        public static int NO_SENSITIVITY { get { if (!_NO_SENSITIVITYReady) { _NO_SENSITIVITYContent = SGetField<int>(LocalBridgeClazz, "NO_SENSITIVITY"); _NO_SENSITIVITYReady = true; } return _NO_SENSITIVITYContent; } }
        private static int _NO_SENSITIVITYContent = default;
        private static bool _NO_SENSITIVITYReady = false; // this is used because in case of generics 
    
        #endregion
    
        #region Static methods
    
        #endregion
    
        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/settings/preferences/SettingsPreferenceMetadata.html#getLaunchIntent()"/>
        /// </summary>
        /// <returns><see cref="Android.Content.Intent"/></returns>
        public Android.Content.Intent GetLaunchIntent()
        {
            return IExecuteWithSignature<Android.Content.Intent>("getLaunchIntent", "()Landroid/content/Intent;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/settings/preferences/SettingsPreferenceMetadata.html#getExtras()"/>
        /// </summary>
        /// <returns><see cref="Android.Os.Bundle"/></returns>
        public Android.Os.Bundle GetExtras()
        {
            return IExecuteWithSignature<Android.Os.Bundle>("getExtras", "()Landroid/os/Bundle;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/settings/preferences/SettingsPreferenceMetadata.html#isAvailable()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsAvailable()
        {
            return IExecuteWithSignature<bool>("isAvailable", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/settings/preferences/SettingsPreferenceMetadata.html#isEnabled()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsEnabled()
        {
            return IExecuteWithSignature<bool>("isEnabled", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/settings/preferences/SettingsPreferenceMetadata.html#isRestricted()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsRestricted()
        {
            return IExecuteWithSignature<bool>("isRestricted", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/settings/preferences/SettingsPreferenceMetadata.html#isWritable()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsWritable()
        {
            return IExecuteWithSignature<bool>("isWritable", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/settings/preferences/SettingsPreferenceMetadata.html#describeContents()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int DescribeContents()
        {
            return IExecuteWithSignature<int>("describeContents", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/settings/preferences/SettingsPreferenceMetadata.html#getWriteSensitivity()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetWriteSensitivity()
        {
            return IExecuteWithSignature<int>("getWriteSensitivity", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/settings/preferences/SettingsPreferenceMetadata.html#getKey()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetKey()
        {
            return IExecuteWithSignature<Java.Lang.String>("getKey", "()Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/settings/preferences/SettingsPreferenceMetadata.html#getScreenKey()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetScreenKey()
        {
            return IExecuteWithSignature<Java.Lang.String>("getScreenKey", "()Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/settings/preferences/SettingsPreferenceMetadata.html#getSummary()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetSummary()
        {
            return IExecuteWithSignature<Java.Lang.String>("getSummary", "()Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/settings/preferences/SettingsPreferenceMetadata.html#getTitle()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetTitle()
        {
            return IExecuteWithSignature<Java.Lang.String>("getTitle", "()Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/settings/preferences/SettingsPreferenceMetadata.html#getReadPermissions()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.List"/></returns>
        public Java.Util.List<Java.Lang.String> GetReadPermissions()
        {
            return IExecuteWithSignature<Java.Util.List<Java.Lang.String>>("getReadPermissions", "()Ljava/util/List;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/settings/preferences/SettingsPreferenceMetadata.html#getWritePermissions()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.List"/></returns>
        public Java.Util.List<Java.Lang.String> GetWritePermissions()
        {
            return IExecuteWithSignature<Java.Util.List<Java.Lang.String>>("getWritePermissions", "()Ljava/util/List;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/service/settings/preferences/SettingsPreferenceMetadata.html#writeToParcel(android.os.Parcel,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.Parcel"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void WriteToParcel(Android.Os.Parcel arg0, int arg1)
        {
            IExecuteWithSignature("writeToParcel", "(Landroid/os/Parcel;I)V", arg0, arg1);
        }
    
        #endregion
    
        #region Nested classes
        #region Builder implementation
        public partial class Builder
        {
            #region Constructors
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/settings/preferences/SettingsPreferenceMetadata.Builder.html#%3Cinit%3E(java.lang.String,java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <param name="arg1"><see cref="Java.Lang.String"/></param>
            public Builder(Java.Lang.String arg0, Java.Lang.String arg1)
                : base(arg0, arg1)
            {
            }
        
            #endregion
        
            #region Class/Interface conversion operators
        
            #endregion
        
            #region Fields
        
            #endregion
        
            #region Static methods
        
            #endregion
        
            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/settings/preferences/SettingsPreferenceMetadata.Builder.html#build()"/>
            /// </summary>
            /// <returns><see cref="Android.Service.Settings.Preferences.SettingsPreferenceMetadata"/></returns>
            public Android.Service.Settings.Preferences.SettingsPreferenceMetadata Build()
            {
                return IExecuteWithSignature<Android.Service.Settings.Preferences.SettingsPreferenceMetadata>("build", "()Landroid/service/settings/preferences/SettingsPreferenceMetadata;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/settings/preferences/SettingsPreferenceMetadata.Builder.html#setAvailable(boolean)"/>
            /// </summary>
            /// <param name="arg0"><see cref="bool"/></param>
            /// <returns><see cref="Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Builder"/></returns>
            public Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Builder SetAvailable(bool arg0)
            {
                return IExecuteWithSignature<Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Builder>("setAvailable", "(Z)Landroid/service/settings/preferences/SettingsPreferenceMetadata$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/settings/preferences/SettingsPreferenceMetadata.Builder.html#setEnabled(boolean)"/>
            /// </summary>
            /// <param name="arg0"><see cref="bool"/></param>
            /// <returns><see cref="Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Builder"/></returns>
            public Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Builder SetEnabled(bool arg0)
            {
                return IExecuteWithSignature<Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Builder>("setEnabled", "(Z)Landroid/service/settings/preferences/SettingsPreferenceMetadata$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/settings/preferences/SettingsPreferenceMetadata.Builder.html#setExtras(android.os.Bundle)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Os.Bundle"/></param>
            /// <returns><see cref="Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Builder"/></returns>
            public Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Builder SetExtras(Android.Os.Bundle arg0)
            {
                return IExecuteWithSignature<Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Builder>("setExtras", "(Landroid/os/Bundle;)Landroid/service/settings/preferences/SettingsPreferenceMetadata$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/settings/preferences/SettingsPreferenceMetadata.Builder.html#setLaunchIntent(android.content.Intent)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
            /// <returns><see cref="Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Builder"/></returns>
            public Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Builder SetLaunchIntent(Android.Content.Intent arg0)
            {
                return IExecuteWithSignature<Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Builder>("setLaunchIntent", "(Landroid/content/Intent;)Landroid/service/settings/preferences/SettingsPreferenceMetadata$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/settings/preferences/SettingsPreferenceMetadata.Builder.html#setReadPermissions(java.util.List)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Util.List"/></param>
            /// <returns><see cref="Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Builder"/></returns>
            public Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Builder SetReadPermissions(Java.Util.List<Java.Lang.String> arg0)
            {
                return IExecuteWithSignature<Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Builder>("setReadPermissions", "(Ljava/util/List;)Landroid/service/settings/preferences/SettingsPreferenceMetadata$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/settings/preferences/SettingsPreferenceMetadata.Builder.html#setRestricted(boolean)"/>
            /// </summary>
            /// <param name="arg0"><see cref="bool"/></param>
            /// <returns><see cref="Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Builder"/></returns>
            public Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Builder SetRestricted(bool arg0)
            {
                return IExecuteWithSignature<Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Builder>("setRestricted", "(Z)Landroid/service/settings/preferences/SettingsPreferenceMetadata$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/settings/preferences/SettingsPreferenceMetadata.Builder.html#setSummary(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Builder"/></returns>
            public Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Builder SetSummary(Java.Lang.String arg0)
            {
                return IExecuteWithSignature<Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Builder>("setSummary", "(Ljava/lang/String;)Landroid/service/settings/preferences/SettingsPreferenceMetadata$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/settings/preferences/SettingsPreferenceMetadata.Builder.html#setTitle(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Builder"/></returns>
            public Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Builder SetTitle(Java.Lang.String arg0)
            {
                return IExecuteWithSignature<Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Builder>("setTitle", "(Ljava/lang/String;)Landroid/service/settings/preferences/SettingsPreferenceMetadata$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/settings/preferences/SettingsPreferenceMetadata.Builder.html#setWritable(boolean)"/>
            /// </summary>
            /// <param name="arg0"><see cref="bool"/></param>
            /// <returns><see cref="Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Builder"/></returns>
            public Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Builder SetWritable(bool arg0)
            {
                return IExecuteWithSignature<Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Builder>("setWritable", "(Z)Landroid/service/settings/preferences/SettingsPreferenceMetadata$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/settings/preferences/SettingsPreferenceMetadata.Builder.html#setWritePermissions(java.util.List)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Util.List"/></param>
            /// <returns><see cref="Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Builder"/></returns>
            public Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Builder SetWritePermissions(Java.Util.List<Java.Lang.String> arg0)
            {
                return IExecuteWithSignature<Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Builder>("setWritePermissions", "(Ljava/util/List;)Landroid/service/settings/preferences/SettingsPreferenceMetadata$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/service/settings/preferences/SettingsPreferenceMetadata.Builder.html#setWriteSensitivity(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <returns><see cref="Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Builder"/></returns>
            public Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Builder SetWriteSensitivity(int arg0)
            {
                return IExecuteWithSignature<Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Builder>("setWriteSensitivity", "(I)Landroid/service/settings/preferences/SettingsPreferenceMetadata$Builder;", arg0);
            }
        
            #endregion
        
            #region Nested classes
        
            #endregion
        
            // TODO: complete the class
        }
        #endregion

    
        #endregion
    
        // TODO: complete the class
    }
    #endregion
}