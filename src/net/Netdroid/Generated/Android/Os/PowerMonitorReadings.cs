/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.5.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Os
{
    #region PowerMonitorReadings
    public partial class PowerMonitorReadings
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/PowerMonitorReadings.html#ENERGY_UNAVAILABLE"/>
        /// </summary>
        public static int ENERGY_UNAVAILABLE { get { if (!_ENERGY_UNAVAILABLEReady) { _ENERGY_UNAVAILABLEContent = SGetField<int>(LocalBridgeClazz, "ENERGY_UNAVAILABLE"); _ENERGY_UNAVAILABLEReady = true; } return _ENERGY_UNAVAILABLEContent; } }
        private static int _ENERGY_UNAVAILABLEContent = default;
        private static bool _ENERGY_UNAVAILABLEReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/PowerMonitorReadings.html#getConsumedEnergy(android.os.PowerMonitor)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.PowerMonitor"/></param>
        /// <returns><see cref="long"/></returns>
        public long GetConsumedEnergy(Android.Os.PowerMonitor arg0)
        {
            return IExecuteWithSignature<long>("getConsumedEnergy", "(Landroid/os/PowerMonitor;)J", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/PowerMonitorReadings.html#getTimestampMillis(android.os.PowerMonitor)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.PowerMonitor"/></param>
        /// <returns><see cref="long"/></returns>
        public long GetTimestampMillis(Android.Os.PowerMonitor arg0)
        {
            return IExecuteWithSignature<long>("getTimestampMillis", "(Landroid/os/PowerMonitor;)J", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}