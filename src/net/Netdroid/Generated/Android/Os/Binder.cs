/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.6.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Os
{
    #region Binder
    public partial class Binder
    {
        #region Constructors
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/Binder.html#%3Cinit%3E(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        public Binder(Java.Lang.String arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/Binder.html#getCallingUserHandle()"/>
        /// </summary>
        /// <returns><see cref="Android.Os.UserHandle"/></returns>
        public static Android.Os.UserHandle GetCallingUserHandle()
        {
            return SExecuteWithSignature<Android.Os.UserHandle>(LocalBridgeClazz, "getCallingUserHandle", "()Landroid/os/UserHandle;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/Binder.html#getCallingUidOrThrow()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public static int GetCallingUidOrThrow()
        {
            return SExecuteWithSignature<int>(LocalBridgeClazz, "getCallingUidOrThrow", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/Binder.html#getCallingPid()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public static int GetCallingPid()
        {
            return SExecuteWithSignature<int>(LocalBridgeClazz, "getCallingPid", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/Binder.html#getCallingUid()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public static int GetCallingUid()
        {
            return SExecuteWithSignature<int>(LocalBridgeClazz, "getCallingUid", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/Binder.html#getCallingWorkSourceUid()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public static int GetCallingWorkSourceUid()
        {
            return SExecuteWithSignature<int>(LocalBridgeClazz, "getCallingWorkSourceUid", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/Binder.html#clearCallingIdentity()"/>
        /// </summary>
        /// <returns><see cref="long"/></returns>
        public static long ClearCallingIdentity()
        {
            return SExecuteWithSignature<long>(LocalBridgeClazz, "clearCallingIdentity", "()J");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/Binder.html#clearCallingWorkSource()"/>
        /// </summary>
        /// <returns><see cref="long"/></returns>
        public static long ClearCallingWorkSource()
        {
            return SExecuteWithSignature<long>(LocalBridgeClazz, "clearCallingWorkSource", "()J");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/Binder.html#setCallingWorkSourceUid(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="long"/></returns>
        public static long SetCallingWorkSourceUid(int arg0)
        {
            return SExecuteWithSignature<long>(LocalBridgeClazz, "setCallingWorkSourceUid", "(I)J", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/Binder.html#flushPendingCommands()"/>
        /// </summary>
        public static void FlushPendingCommands()
        {
            SExecuteWithSignature(LocalBridgeClazz, "flushPendingCommands", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/Binder.html#restoreCallingIdentity(long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        public static void RestoreCallingIdentity(long arg0)
        {
            SExecuteWithSignature(LocalBridgeClazz, "restoreCallingIdentity", "(J)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/Binder.html#restoreCallingWorkSource(long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        public static void RestoreCallingWorkSource(long arg0)
        {
            SExecuteWithSignature(LocalBridgeClazz, "restoreCallingWorkSource", "(J)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/Binder.html#joinThreadPool()"/>
        /// </summary>
        public static void JoinThreadPool()
        {
            SExecuteWithSignature(LocalBridgeClazz, "joinThreadPool", "()V");
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/Binder.html#queryLocalInterface(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Android.Os.IInterface"/></returns>
        public Android.Os.IInterface QueryLocalInterface(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<Android.Os.IInterface>("queryLocalInterface", "(Ljava/lang/String;)Landroid/os/IInterface;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/Binder.html#isBinderAlive()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsBinderAlive()
        {
            return IExecuteWithSignature<bool>("isBinderAlive", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/Binder.html#pingBinder()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool PingBinder()
        {
            return IExecuteWithSignature<bool>("pingBinder", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/Binder.html#unlinkToDeath(android.os.IBinder.DeathRecipient,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.IBinder.DeathRecipient"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool UnlinkToDeath(Android.Os.IBinder.DeathRecipient arg0, int arg1)
        {
            return IExecute<bool>("unlinkToDeath", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/Binder.html#transact(int,android.os.Parcel,android.os.Parcel,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="Android.Os.Parcel"/></param>
        /// <param name="arg2"><see cref="Android.Os.Parcel"/></param>
        /// <param name="arg3"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        /// <exception cref="Android.Os.RemoteException"/>
        public bool Transact(int arg0, Android.Os.Parcel arg1, Android.Os.Parcel arg2, int arg3)
        {
            return IExecute<bool>("transact", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/Binder.html#getInterfaceDescriptor()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetInterfaceDescriptor()
        {
            return IExecuteWithSignature<Java.Lang.String>("getInterfaceDescriptor", "()Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/Binder.html#attachInterface(android.os.IInterface,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.IInterface"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        public void AttachInterface(Android.Os.IInterface arg0, Java.Lang.String arg1)
        {
            IExecute("attachInterface", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/Binder.html#dump(java.io.FileDescriptor,java.lang.String[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Io.FileDescriptor"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        public void Dump(Java.Io.FileDescriptor arg0, Java.Lang.String[] arg1)
        {
            IExecute("dump", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/Binder.html#dumpAsync(java.io.FileDescriptor,java.lang.String[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Io.FileDescriptor"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        public void DumpAsync(Java.Io.FileDescriptor arg0, Java.Lang.String[] arg1)
        {
            IExecute("dumpAsync", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/Binder.html#linkToDeath(android.os.IBinder.DeathRecipient,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.IBinder.DeathRecipient"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void LinkToDeath(Android.Os.IBinder.DeathRecipient arg0, int arg1)
        {
            IExecute("linkToDeath", arg0, arg1);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}