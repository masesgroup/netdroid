/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.8.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Os
{
    #region CancellationSignal
    public partial class CancellationSignal
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/CancellationSignal.html#isCanceled()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsCanceled()
        {
            return IExecuteWithSignature<bool>("isCanceled", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/CancellationSignal.html#cancel()"/>
        /// </summary>
        public void Cancel()
        {
            IExecuteWithSignature("cancel", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/CancellationSignal.html#setOnCancelListener(android.os.CancellationSignal.OnCancelListener)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.CancellationSignal.OnCancelListener"/></param>
        public void SetOnCancelListener(Android.Os.CancellationSignal.OnCancelListener arg0)
        {
            IExecuteWithSignature("setOnCancelListener", "(Landroid/os/CancellationSignal$OnCancelListener;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/CancellationSignal.html#throwIfCanceled()"/>
        /// </summary>
        public void ThrowIfCanceled()
        {
            IExecuteWithSignature("throwIfCanceled", "()V");
        }

        #endregion

        #region Nested classes
        #region OnCancelListener
        public partial class OnCancelListener
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// Handlers initializer for <see cref="OnCancelListener"/>
            /// </summary>
            protected virtual void InitializeHandlers()
            {
                AddEventHandler("onCancel", new global::System.EventHandler<CLRListenerEventArgs<CLREventData>>(OnCancelEventHandler));

            }

            /// <summary>
            /// Handler for <see href="https://developer.android.com/reference/android/os/CancellationSignal.OnCancelListener.html#onCancel()"/>
            /// </summary>
            /// <remarks>If <see cref="OnOnCancel"/> has a value it takes precedence over corresponding class method</remarks>
            public global::System.Action OnOnCancel { get; set; } = null;

            void OnCancelEventHandler(object sender, CLRListenerEventArgs<CLREventData> data)
            {
                var methodToExecute = (OnOnCancel != null) ? OnOnCancel : OnCancel;
                methodToExecute.Invoke();
            }

            /// <summary>
            /// <see href="https://developer.android.com/reference/android/os/CancellationSignal.OnCancelListener.html#onCancel()"/>
            /// </summary>
            public virtual void OnCancel()
            {
                
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region OnCancelListenerDirect
        public partial class OnCancelListenerDirect
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/os/CancellationSignal.OnCancelListener.html#onCancel()"/>
            /// </summary>
            public override void OnCancel()
            {
                IExecuteWithSignature("onCancel", "()V");
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}