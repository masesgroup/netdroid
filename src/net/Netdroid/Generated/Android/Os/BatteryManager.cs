/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.2.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Os
{
    #region BatteryManager
    public partial class BatteryManager
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/BatteryManager.html#BATTERY_HEALTH_COLD"/>
        /// </summary>
        public static int BATTERY_HEALTH_COLD { get { if (!_BATTERY_HEALTH_COLDReady) { _BATTERY_HEALTH_COLDContent = SGetField<int>(LocalBridgeClazz, "BATTERY_HEALTH_COLD"); _BATTERY_HEALTH_COLDReady = true; } return _BATTERY_HEALTH_COLDContent; } }
        private static int _BATTERY_HEALTH_COLDContent = default;
        private static bool _BATTERY_HEALTH_COLDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/BatteryManager.html#BATTERY_HEALTH_DEAD"/>
        /// </summary>
        public static int BATTERY_HEALTH_DEAD { get { if (!_BATTERY_HEALTH_DEADReady) { _BATTERY_HEALTH_DEADContent = SGetField<int>(LocalBridgeClazz, "BATTERY_HEALTH_DEAD"); _BATTERY_HEALTH_DEADReady = true; } return _BATTERY_HEALTH_DEADContent; } }
        private static int _BATTERY_HEALTH_DEADContent = default;
        private static bool _BATTERY_HEALTH_DEADReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/BatteryManager.html#BATTERY_HEALTH_GOOD"/>
        /// </summary>
        public static int BATTERY_HEALTH_GOOD { get { if (!_BATTERY_HEALTH_GOODReady) { _BATTERY_HEALTH_GOODContent = SGetField<int>(LocalBridgeClazz, "BATTERY_HEALTH_GOOD"); _BATTERY_HEALTH_GOODReady = true; } return _BATTERY_HEALTH_GOODContent; } }
        private static int _BATTERY_HEALTH_GOODContent = default;
        private static bool _BATTERY_HEALTH_GOODReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/BatteryManager.html#BATTERY_HEALTH_OVER_VOLTAGE"/>
        /// </summary>
        public static int BATTERY_HEALTH_OVER_VOLTAGE { get { if (!_BATTERY_HEALTH_OVER_VOLTAGEReady) { _BATTERY_HEALTH_OVER_VOLTAGEContent = SGetField<int>(LocalBridgeClazz, "BATTERY_HEALTH_OVER_VOLTAGE"); _BATTERY_HEALTH_OVER_VOLTAGEReady = true; } return _BATTERY_HEALTH_OVER_VOLTAGEContent; } }
        private static int _BATTERY_HEALTH_OVER_VOLTAGEContent = default;
        private static bool _BATTERY_HEALTH_OVER_VOLTAGEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/BatteryManager.html#BATTERY_HEALTH_OVERHEAT"/>
        /// </summary>
        public static int BATTERY_HEALTH_OVERHEAT { get { if (!_BATTERY_HEALTH_OVERHEATReady) { _BATTERY_HEALTH_OVERHEATContent = SGetField<int>(LocalBridgeClazz, "BATTERY_HEALTH_OVERHEAT"); _BATTERY_HEALTH_OVERHEATReady = true; } return _BATTERY_HEALTH_OVERHEATContent; } }
        private static int _BATTERY_HEALTH_OVERHEATContent = default;
        private static bool _BATTERY_HEALTH_OVERHEATReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/BatteryManager.html#BATTERY_HEALTH_UNKNOWN"/>
        /// </summary>
        public static int BATTERY_HEALTH_UNKNOWN { get { if (!_BATTERY_HEALTH_UNKNOWNReady) { _BATTERY_HEALTH_UNKNOWNContent = SGetField<int>(LocalBridgeClazz, "BATTERY_HEALTH_UNKNOWN"); _BATTERY_HEALTH_UNKNOWNReady = true; } return _BATTERY_HEALTH_UNKNOWNContent; } }
        private static int _BATTERY_HEALTH_UNKNOWNContent = default;
        private static bool _BATTERY_HEALTH_UNKNOWNReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/BatteryManager.html#BATTERY_HEALTH_UNSPECIFIED_FAILURE"/>
        /// </summary>
        public static int BATTERY_HEALTH_UNSPECIFIED_FAILURE { get { if (!_BATTERY_HEALTH_UNSPECIFIED_FAILUREReady) { _BATTERY_HEALTH_UNSPECIFIED_FAILUREContent = SGetField<int>(LocalBridgeClazz, "BATTERY_HEALTH_UNSPECIFIED_FAILURE"); _BATTERY_HEALTH_UNSPECIFIED_FAILUREReady = true; } return _BATTERY_HEALTH_UNSPECIFIED_FAILUREContent; } }
        private static int _BATTERY_HEALTH_UNSPECIFIED_FAILUREContent = default;
        private static bool _BATTERY_HEALTH_UNSPECIFIED_FAILUREReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/BatteryManager.html#BATTERY_PLUGGED_AC"/>
        /// </summary>
        public static int BATTERY_PLUGGED_AC { get { if (!_BATTERY_PLUGGED_ACReady) { _BATTERY_PLUGGED_ACContent = SGetField<int>(LocalBridgeClazz, "BATTERY_PLUGGED_AC"); _BATTERY_PLUGGED_ACReady = true; } return _BATTERY_PLUGGED_ACContent; } }
        private static int _BATTERY_PLUGGED_ACContent = default;
        private static bool _BATTERY_PLUGGED_ACReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/BatteryManager.html#BATTERY_PLUGGED_DOCK"/>
        /// </summary>
        public static int BATTERY_PLUGGED_DOCK { get { if (!_BATTERY_PLUGGED_DOCKReady) { _BATTERY_PLUGGED_DOCKContent = SGetField<int>(LocalBridgeClazz, "BATTERY_PLUGGED_DOCK"); _BATTERY_PLUGGED_DOCKReady = true; } return _BATTERY_PLUGGED_DOCKContent; } }
        private static int _BATTERY_PLUGGED_DOCKContent = default;
        private static bool _BATTERY_PLUGGED_DOCKReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/BatteryManager.html#BATTERY_PLUGGED_USB"/>
        /// </summary>
        public static int BATTERY_PLUGGED_USB { get { if (!_BATTERY_PLUGGED_USBReady) { _BATTERY_PLUGGED_USBContent = SGetField<int>(LocalBridgeClazz, "BATTERY_PLUGGED_USB"); _BATTERY_PLUGGED_USBReady = true; } return _BATTERY_PLUGGED_USBContent; } }
        private static int _BATTERY_PLUGGED_USBContent = default;
        private static bool _BATTERY_PLUGGED_USBReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/BatteryManager.html#BATTERY_PLUGGED_WIRELESS"/>
        /// </summary>
        public static int BATTERY_PLUGGED_WIRELESS { get { if (!_BATTERY_PLUGGED_WIRELESSReady) { _BATTERY_PLUGGED_WIRELESSContent = SGetField<int>(LocalBridgeClazz, "BATTERY_PLUGGED_WIRELESS"); _BATTERY_PLUGGED_WIRELESSReady = true; } return _BATTERY_PLUGGED_WIRELESSContent; } }
        private static int _BATTERY_PLUGGED_WIRELESSContent = default;
        private static bool _BATTERY_PLUGGED_WIRELESSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/BatteryManager.html#BATTERY_PROPERTY_CAPACITY"/>
        /// </summary>
        public static int BATTERY_PROPERTY_CAPACITY { get { if (!_BATTERY_PROPERTY_CAPACITYReady) { _BATTERY_PROPERTY_CAPACITYContent = SGetField<int>(LocalBridgeClazz, "BATTERY_PROPERTY_CAPACITY"); _BATTERY_PROPERTY_CAPACITYReady = true; } return _BATTERY_PROPERTY_CAPACITYContent; } }
        private static int _BATTERY_PROPERTY_CAPACITYContent = default;
        private static bool _BATTERY_PROPERTY_CAPACITYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/BatteryManager.html#BATTERY_PROPERTY_CHARGE_COUNTER"/>
        /// </summary>
        public static int BATTERY_PROPERTY_CHARGE_COUNTER { get { if (!_BATTERY_PROPERTY_CHARGE_COUNTERReady) { _BATTERY_PROPERTY_CHARGE_COUNTERContent = SGetField<int>(LocalBridgeClazz, "BATTERY_PROPERTY_CHARGE_COUNTER"); _BATTERY_PROPERTY_CHARGE_COUNTERReady = true; } return _BATTERY_PROPERTY_CHARGE_COUNTERContent; } }
        private static int _BATTERY_PROPERTY_CHARGE_COUNTERContent = default;
        private static bool _BATTERY_PROPERTY_CHARGE_COUNTERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/BatteryManager.html#BATTERY_PROPERTY_CURRENT_AVERAGE"/>
        /// </summary>
        public static int BATTERY_PROPERTY_CURRENT_AVERAGE { get { if (!_BATTERY_PROPERTY_CURRENT_AVERAGEReady) { _BATTERY_PROPERTY_CURRENT_AVERAGEContent = SGetField<int>(LocalBridgeClazz, "BATTERY_PROPERTY_CURRENT_AVERAGE"); _BATTERY_PROPERTY_CURRENT_AVERAGEReady = true; } return _BATTERY_PROPERTY_CURRENT_AVERAGEContent; } }
        private static int _BATTERY_PROPERTY_CURRENT_AVERAGEContent = default;
        private static bool _BATTERY_PROPERTY_CURRENT_AVERAGEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/BatteryManager.html#BATTERY_PROPERTY_CURRENT_NOW"/>
        /// </summary>
        public static int BATTERY_PROPERTY_CURRENT_NOW { get { if (!_BATTERY_PROPERTY_CURRENT_NOWReady) { _BATTERY_PROPERTY_CURRENT_NOWContent = SGetField<int>(LocalBridgeClazz, "BATTERY_PROPERTY_CURRENT_NOW"); _BATTERY_PROPERTY_CURRENT_NOWReady = true; } return _BATTERY_PROPERTY_CURRENT_NOWContent; } }
        private static int _BATTERY_PROPERTY_CURRENT_NOWContent = default;
        private static bool _BATTERY_PROPERTY_CURRENT_NOWReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/BatteryManager.html#BATTERY_PROPERTY_ENERGY_COUNTER"/>
        /// </summary>
        public static int BATTERY_PROPERTY_ENERGY_COUNTER { get { if (!_BATTERY_PROPERTY_ENERGY_COUNTERReady) { _BATTERY_PROPERTY_ENERGY_COUNTERContent = SGetField<int>(LocalBridgeClazz, "BATTERY_PROPERTY_ENERGY_COUNTER"); _BATTERY_PROPERTY_ENERGY_COUNTERReady = true; } return _BATTERY_PROPERTY_ENERGY_COUNTERContent; } }
        private static int _BATTERY_PROPERTY_ENERGY_COUNTERContent = default;
        private static bool _BATTERY_PROPERTY_ENERGY_COUNTERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/BatteryManager.html#BATTERY_PROPERTY_STATUS"/>
        /// </summary>
        public static int BATTERY_PROPERTY_STATUS { get { if (!_BATTERY_PROPERTY_STATUSReady) { _BATTERY_PROPERTY_STATUSContent = SGetField<int>(LocalBridgeClazz, "BATTERY_PROPERTY_STATUS"); _BATTERY_PROPERTY_STATUSReady = true; } return _BATTERY_PROPERTY_STATUSContent; } }
        private static int _BATTERY_PROPERTY_STATUSContent = default;
        private static bool _BATTERY_PROPERTY_STATUSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/BatteryManager.html#BATTERY_STATUS_CHARGING"/>
        /// </summary>
        public static int BATTERY_STATUS_CHARGING { get { if (!_BATTERY_STATUS_CHARGINGReady) { _BATTERY_STATUS_CHARGINGContent = SGetField<int>(LocalBridgeClazz, "BATTERY_STATUS_CHARGING"); _BATTERY_STATUS_CHARGINGReady = true; } return _BATTERY_STATUS_CHARGINGContent; } }
        private static int _BATTERY_STATUS_CHARGINGContent = default;
        private static bool _BATTERY_STATUS_CHARGINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/BatteryManager.html#BATTERY_STATUS_DISCHARGING"/>
        /// </summary>
        public static int BATTERY_STATUS_DISCHARGING { get { if (!_BATTERY_STATUS_DISCHARGINGReady) { _BATTERY_STATUS_DISCHARGINGContent = SGetField<int>(LocalBridgeClazz, "BATTERY_STATUS_DISCHARGING"); _BATTERY_STATUS_DISCHARGINGReady = true; } return _BATTERY_STATUS_DISCHARGINGContent; } }
        private static int _BATTERY_STATUS_DISCHARGINGContent = default;
        private static bool _BATTERY_STATUS_DISCHARGINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/BatteryManager.html#BATTERY_STATUS_FULL"/>
        /// </summary>
        public static int BATTERY_STATUS_FULL { get { if (!_BATTERY_STATUS_FULLReady) { _BATTERY_STATUS_FULLContent = SGetField<int>(LocalBridgeClazz, "BATTERY_STATUS_FULL"); _BATTERY_STATUS_FULLReady = true; } return _BATTERY_STATUS_FULLContent; } }
        private static int _BATTERY_STATUS_FULLContent = default;
        private static bool _BATTERY_STATUS_FULLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/BatteryManager.html#BATTERY_STATUS_NOT_CHARGING"/>
        /// </summary>
        public static int BATTERY_STATUS_NOT_CHARGING { get { if (!_BATTERY_STATUS_NOT_CHARGINGReady) { _BATTERY_STATUS_NOT_CHARGINGContent = SGetField<int>(LocalBridgeClazz, "BATTERY_STATUS_NOT_CHARGING"); _BATTERY_STATUS_NOT_CHARGINGReady = true; } return _BATTERY_STATUS_NOT_CHARGINGContent; } }
        private static int _BATTERY_STATUS_NOT_CHARGINGContent = default;
        private static bool _BATTERY_STATUS_NOT_CHARGINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/BatteryManager.html#BATTERY_STATUS_UNKNOWN"/>
        /// </summary>
        public static int BATTERY_STATUS_UNKNOWN { get { if (!_BATTERY_STATUS_UNKNOWNReady) { _BATTERY_STATUS_UNKNOWNContent = SGetField<int>(LocalBridgeClazz, "BATTERY_STATUS_UNKNOWN"); _BATTERY_STATUS_UNKNOWNReady = true; } return _BATTERY_STATUS_UNKNOWNContent; } }
        private static int _BATTERY_STATUS_UNKNOWNContent = default;
        private static bool _BATTERY_STATUS_UNKNOWNReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/BatteryManager.html#ACTION_CHARGING"/>
        /// </summary>
        public static Java.Lang.String ACTION_CHARGING { get { if (!_ACTION_CHARGINGReady) { _ACTION_CHARGINGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_CHARGING"); _ACTION_CHARGINGReady = true; } return _ACTION_CHARGINGContent; } }
        private static Java.Lang.String _ACTION_CHARGINGContent = default;
        private static bool _ACTION_CHARGINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/BatteryManager.html#ACTION_DISCHARGING"/>
        /// </summary>
        public static Java.Lang.String ACTION_DISCHARGING { get { if (!_ACTION_DISCHARGINGReady) { _ACTION_DISCHARGINGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_DISCHARGING"); _ACTION_DISCHARGINGReady = true; } return _ACTION_DISCHARGINGContent; } }
        private static Java.Lang.String _ACTION_DISCHARGINGContent = default;
        private static bool _ACTION_DISCHARGINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/BatteryManager.html#EXTRA_BATTERY_LOW"/>
        /// </summary>
        public static Java.Lang.String EXTRA_BATTERY_LOW { get { if (!_EXTRA_BATTERY_LOWReady) { _EXTRA_BATTERY_LOWContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_BATTERY_LOW"); _EXTRA_BATTERY_LOWReady = true; } return _EXTRA_BATTERY_LOWContent; } }
        private static Java.Lang.String _EXTRA_BATTERY_LOWContent = default;
        private static bool _EXTRA_BATTERY_LOWReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/BatteryManager.html#EXTRA_CHARGING_STATUS"/>
        /// </summary>
        public static Java.Lang.String EXTRA_CHARGING_STATUS { get { if (!_EXTRA_CHARGING_STATUSReady) { _EXTRA_CHARGING_STATUSContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_CHARGING_STATUS"); _EXTRA_CHARGING_STATUSReady = true; } return _EXTRA_CHARGING_STATUSContent; } }
        private static Java.Lang.String _EXTRA_CHARGING_STATUSContent = default;
        private static bool _EXTRA_CHARGING_STATUSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/BatteryManager.html#EXTRA_CYCLE_COUNT"/>
        /// </summary>
        public static Java.Lang.String EXTRA_CYCLE_COUNT { get { if (!_EXTRA_CYCLE_COUNTReady) { _EXTRA_CYCLE_COUNTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_CYCLE_COUNT"); _EXTRA_CYCLE_COUNTReady = true; } return _EXTRA_CYCLE_COUNTContent; } }
        private static Java.Lang.String _EXTRA_CYCLE_COUNTContent = default;
        private static bool _EXTRA_CYCLE_COUNTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/BatteryManager.html#EXTRA_HEALTH"/>
        /// </summary>
        public static Java.Lang.String EXTRA_HEALTH { get { if (!_EXTRA_HEALTHReady) { _EXTRA_HEALTHContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_HEALTH"); _EXTRA_HEALTHReady = true; } return _EXTRA_HEALTHContent; } }
        private static Java.Lang.String _EXTRA_HEALTHContent = default;
        private static bool _EXTRA_HEALTHReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/BatteryManager.html#EXTRA_ICON_SMALL"/>
        /// </summary>
        public static Java.Lang.String EXTRA_ICON_SMALL { get { if (!_EXTRA_ICON_SMALLReady) { _EXTRA_ICON_SMALLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_ICON_SMALL"); _EXTRA_ICON_SMALLReady = true; } return _EXTRA_ICON_SMALLContent; } }
        private static Java.Lang.String _EXTRA_ICON_SMALLContent = default;
        private static bool _EXTRA_ICON_SMALLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/BatteryManager.html#EXTRA_LEVEL"/>
        /// </summary>
        public static Java.Lang.String EXTRA_LEVEL { get { if (!_EXTRA_LEVELReady) { _EXTRA_LEVELContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_LEVEL"); _EXTRA_LEVELReady = true; } return _EXTRA_LEVELContent; } }
        private static Java.Lang.String _EXTRA_LEVELContent = default;
        private static bool _EXTRA_LEVELReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/BatteryManager.html#EXTRA_PLUGGED"/>
        /// </summary>
        public static Java.Lang.String EXTRA_PLUGGED { get { if (!_EXTRA_PLUGGEDReady) { _EXTRA_PLUGGEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_PLUGGED"); _EXTRA_PLUGGEDReady = true; } return _EXTRA_PLUGGEDContent; } }
        private static Java.Lang.String _EXTRA_PLUGGEDContent = default;
        private static bool _EXTRA_PLUGGEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/BatteryManager.html#EXTRA_PRESENT"/>
        /// </summary>
        public static Java.Lang.String EXTRA_PRESENT { get { if (!_EXTRA_PRESENTReady) { _EXTRA_PRESENTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_PRESENT"); _EXTRA_PRESENTReady = true; } return _EXTRA_PRESENTContent; } }
        private static Java.Lang.String _EXTRA_PRESENTContent = default;
        private static bool _EXTRA_PRESENTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/BatteryManager.html#EXTRA_SCALE"/>
        /// </summary>
        public static Java.Lang.String EXTRA_SCALE { get { if (!_EXTRA_SCALEReady) { _EXTRA_SCALEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_SCALE"); _EXTRA_SCALEReady = true; } return _EXTRA_SCALEContent; } }
        private static Java.Lang.String _EXTRA_SCALEContent = default;
        private static bool _EXTRA_SCALEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/BatteryManager.html#EXTRA_STATUS"/>
        /// </summary>
        public static Java.Lang.String EXTRA_STATUS { get { if (!_EXTRA_STATUSReady) { _EXTRA_STATUSContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_STATUS"); _EXTRA_STATUSReady = true; } return _EXTRA_STATUSContent; } }
        private static Java.Lang.String _EXTRA_STATUSContent = default;
        private static bool _EXTRA_STATUSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/BatteryManager.html#EXTRA_TECHNOLOGY"/>
        /// </summary>
        public static Java.Lang.String EXTRA_TECHNOLOGY { get { if (!_EXTRA_TECHNOLOGYReady) { _EXTRA_TECHNOLOGYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_TECHNOLOGY"); _EXTRA_TECHNOLOGYReady = true; } return _EXTRA_TECHNOLOGYContent; } }
        private static Java.Lang.String _EXTRA_TECHNOLOGYContent = default;
        private static bool _EXTRA_TECHNOLOGYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/BatteryManager.html#EXTRA_TEMPERATURE"/>
        /// </summary>
        public static Java.Lang.String EXTRA_TEMPERATURE { get { if (!_EXTRA_TEMPERATUREReady) { _EXTRA_TEMPERATUREContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_TEMPERATURE"); _EXTRA_TEMPERATUREReady = true; } return _EXTRA_TEMPERATUREContent; } }
        private static Java.Lang.String _EXTRA_TEMPERATUREContent = default;
        private static bool _EXTRA_TEMPERATUREReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/BatteryManager.html#EXTRA_VOLTAGE"/>
        /// </summary>
        public static Java.Lang.String EXTRA_VOLTAGE { get { if (!_EXTRA_VOLTAGEReady) { _EXTRA_VOLTAGEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_VOLTAGE"); _EXTRA_VOLTAGEReady = true; } return _EXTRA_VOLTAGEContent; } }
        private static Java.Lang.String _EXTRA_VOLTAGEContent = default;
        private static bool _EXTRA_VOLTAGEReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/BatteryManager.html#isCharging()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsCharging()
        {
            return IExecuteWithSignature<bool>("isCharging", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/BatteryManager.html#getIntProperty(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public int GetIntProperty(int arg0)
        {
            return IExecuteWithSignature<int>("getIntProperty", "(I)I", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/BatteryManager.html#computeChargeTimeRemaining()"/>
        /// </summary>
        /// <returns><see cref="long"/></returns>
        public long ComputeChargeTimeRemaining()
        {
            return IExecuteWithSignature<long>("computeChargeTimeRemaining", "()J");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/BatteryManager.html#getLongProperty(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="long"/></returns>
        public long GetLongProperty(int arg0)
        {
            return IExecuteWithSignature<long>("getLongProperty", "(I)J", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}