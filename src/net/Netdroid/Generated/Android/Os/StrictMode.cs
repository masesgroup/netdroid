/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.1.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Os
{
    #region StrictMode
    public partial class StrictMode
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/StrictMode.html#getThreadPolicy()"/> 
        /// </summary>
        public static Android.Os.StrictMode.ThreadPolicy GetThreadPolicy
        {
            get { return SExecuteWithSignature<Android.Os.StrictMode.ThreadPolicy>(LocalBridgeClazz, "getThreadPolicy", "()Landroid/os/StrictMode$ThreadPolicy;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/StrictMode.html#getVmPolicy()"/> 
        /// </summary>
        public static Android.Os.StrictMode.VmPolicy GetVmPolicy
        {
            get { return SExecuteWithSignature<Android.Os.StrictMode.VmPolicy>(LocalBridgeClazz, "getVmPolicy", "()Landroid/os/StrictMode$VmPolicy;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/StrictMode.html#allowThreadDiskReads()"/>
        /// </summary>
        /// <returns><see cref="Android.Os.StrictMode.ThreadPolicy"/></returns>
        public static Android.Os.StrictMode.ThreadPolicy AllowThreadDiskReads()
        {
            return SExecuteWithSignature<Android.Os.StrictMode.ThreadPolicy>(LocalBridgeClazz, "allowThreadDiskReads", "()Landroid/os/StrictMode$ThreadPolicy;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/StrictMode.html#allowThreadDiskWrites()"/>
        /// </summary>
        /// <returns><see cref="Android.Os.StrictMode.ThreadPolicy"/></returns>
        public static Android.Os.StrictMode.ThreadPolicy AllowThreadDiskWrites()
        {
            return SExecuteWithSignature<Android.Os.StrictMode.ThreadPolicy>(LocalBridgeClazz, "allowThreadDiskWrites", "()Landroid/os/StrictMode$ThreadPolicy;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/StrictMode.html#enableDefaults()"/>
        /// </summary>
        public static void EnableDefaults()
        {
            SExecuteWithSignature(LocalBridgeClazz, "enableDefaults", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/StrictMode.html#noteSlowCall(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        public static void NoteSlowCall(Java.Lang.String arg0)
        {
            SExecuteWithSignature(LocalBridgeClazz, "noteSlowCall", "(Ljava/lang/String;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/StrictMode.html#setThreadPolicy(android.os.StrictMode.ThreadPolicy)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.StrictMode.ThreadPolicy"/></param>
        public static void SetThreadPolicy(Android.Os.StrictMode.ThreadPolicy arg0)
        {
            SExecuteWithSignature(LocalBridgeClazz, "setThreadPolicy", "(Landroid/os/StrictMode$ThreadPolicy;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/StrictMode.html#setVmPolicy(android.os.StrictMode.VmPolicy)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.StrictMode.VmPolicy"/></param>
        public static void SetVmPolicy(Android.Os.StrictMode.VmPolicy arg0)
        {
            SExecuteWithSignature(LocalBridgeClazz, "setVmPolicy", "(Landroid/os/StrictMode$VmPolicy;)V", arg0);
        }

        #endregion

        #region Instance methods

        #endregion

        #region Nested classes
        #region OnThreadViolationListener
        public partial class OnThreadViolationListener
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// Handlers initializer for <see cref="OnThreadViolationListener"/>
            /// </summary>
            protected virtual void InitializeHandlers()
            {
                AddEventHandler("onThreadViolation", new System.EventHandler<CLRListenerEventArgs<CLREventData>>(OnThreadViolationEventHandler));

            }

            /// <summary>
            /// Handler for <see href="https://developer.android.com/reference/android/os/StrictMode.OnThreadViolationListener.html#onThreadViolation(android.os.strictmode.Violation)"/>
            /// </summary>
            /// <remarks>If <see cref="OnOnThreadViolation"/> has a value it takes precedence over corresponding class method</remarks>
            public System.Action<MASES.JCOBridge.C2JBridge.JVMBridgeException> OnOnThreadViolation { get; set; } = null;

            void OnThreadViolationEventHandler(object sender, CLRListenerEventArgs<CLREventData> data)
            {
                var methodToExecute = (OnOnThreadViolation != null) ? OnOnThreadViolation : OnThreadViolation;
                methodToExecute.Invoke(JVMBridgeException.New(data.EventData.EventData as MASES.JCOBridge.C2JBridge.JVMInterop.IJavaObject));
            }

            /// <summary>
            /// <see href="https://developer.android.com/reference/android/os/StrictMode.OnThreadViolationListener.html#onThreadViolation(android.os.strictmode.Violation)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Os.Strictmode.Violation"/></param>
            public virtual void OnThreadViolation(MASES.JCOBridge.C2JBridge.JVMBridgeException arg0)
            {
                
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region OnThreadViolationListenerDirect
        public partial class OnThreadViolationListenerDirect
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/os/StrictMode.OnThreadViolationListener.html#onThreadViolation(android.os.strictmode.Violation)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Os.Strictmode.Violation"/></param>
            public override void OnThreadViolation(MASES.JCOBridge.C2JBridge.JVMBridgeException arg0)
            {
                IExecuteWithSignature("onThreadViolation", "(Landroid/os/strictmode/Violation;)V", arg0);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region OnVmViolationListener
        public partial class OnVmViolationListener
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// Handlers initializer for <see cref="OnVmViolationListener"/>
            /// </summary>
            protected virtual void InitializeHandlers()
            {
                AddEventHandler("onVmViolation", new System.EventHandler<CLRListenerEventArgs<CLREventData>>(OnVmViolationEventHandler));

            }

            /// <summary>
            /// Handler for <see href="https://developer.android.com/reference/android/os/StrictMode.OnVmViolationListener.html#onVmViolation(android.os.strictmode.Violation)"/>
            /// </summary>
            /// <remarks>If <see cref="OnOnVmViolation"/> has a value it takes precedence over corresponding class method</remarks>
            public System.Action<MASES.JCOBridge.C2JBridge.JVMBridgeException> OnOnVmViolation { get; set; } = null;

            void OnVmViolationEventHandler(object sender, CLRListenerEventArgs<CLREventData> data)
            {
                var methodToExecute = (OnOnVmViolation != null) ? OnOnVmViolation : OnVmViolation;
                methodToExecute.Invoke(JVMBridgeException.New(data.EventData.EventData as MASES.JCOBridge.C2JBridge.JVMInterop.IJavaObject));
            }

            /// <summary>
            /// <see href="https://developer.android.com/reference/android/os/StrictMode.OnVmViolationListener.html#onVmViolation(android.os.strictmode.Violation)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Os.Strictmode.Violation"/></param>
            public virtual void OnVmViolation(MASES.JCOBridge.C2JBridge.JVMBridgeException arg0)
            {
                
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region OnVmViolationListenerDirect
        public partial class OnVmViolationListenerDirect
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/os/StrictMode.OnVmViolationListener.html#onVmViolation(android.os.strictmode.Violation)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Os.Strictmode.Violation"/></param>
            public override void OnVmViolation(MASES.JCOBridge.C2JBridge.JVMBridgeException arg0)
            {
                IExecuteWithSignature("onVmViolation", "(Landroid/os/strictmode/Violation;)V", arg0);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region ThreadPolicy
        public partial class ThreadPolicy
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/os/StrictMode.ThreadPolicy.html#LAX"/>
            /// </summary>
            public static Android.Os.StrictMode.ThreadPolicy LAX { get { if (!_LAXReady) { _LAXContent = SGetField<Android.Os.StrictMode.ThreadPolicy>(LocalBridgeClazz, "LAX"); _LAXReady = true; } return _LAXContent; } }
            private static Android.Os.StrictMode.ThreadPolicy _LAXContent = default;
            private static bool _LAXReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes
            #region Builder
            public partial class Builder
            {
                #region Constructors
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/os/StrictMode.ThreadPolicy.Builder.html#%3Cinit%3E(android.os.StrictMode.ThreadPolicy)"/>
                /// </summary>
                /// <param name="arg0"><see cref="Android.Os.StrictMode.ThreadPolicy"/></param>
                public Builder(Android.Os.StrictMode.ThreadPolicy arg0)
                    : base(arg0)
                {
                }

                #endregion

                #region Class/Interface conversion operators

                #endregion

                #region Fields

                #endregion

                #region Static methods

                #endregion

                #region Instance methods
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/os/StrictMode.ThreadPolicy.Builder.html#build()"/>
                /// </summary>
                /// <returns><see cref="Android.Os.StrictMode.ThreadPolicy"/></returns>
                public Android.Os.StrictMode.ThreadPolicy Build()
                {
                    return IExecuteWithSignature<Android.Os.StrictMode.ThreadPolicy>("build", "()Landroid/os/StrictMode$ThreadPolicy;");
                }
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/os/StrictMode.ThreadPolicy.Builder.html#detectAll()"/>
                /// </summary>
                /// <returns><see cref="Android.Os.StrictMode.ThreadPolicy.Builder"/></returns>
                public Android.Os.StrictMode.ThreadPolicy.Builder DetectAll()
                {
                    return IExecuteWithSignature<Android.Os.StrictMode.ThreadPolicy.Builder>("detectAll", "()Landroid/os/StrictMode$ThreadPolicy$Builder;");
                }
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/os/StrictMode.ThreadPolicy.Builder.html#detectCustomSlowCalls()"/>
                /// </summary>
                /// <returns><see cref="Android.Os.StrictMode.ThreadPolicy.Builder"/></returns>
                public Android.Os.StrictMode.ThreadPolicy.Builder DetectCustomSlowCalls()
                {
                    return IExecuteWithSignature<Android.Os.StrictMode.ThreadPolicy.Builder>("detectCustomSlowCalls", "()Landroid/os/StrictMode$ThreadPolicy$Builder;");
                }
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/os/StrictMode.ThreadPolicy.Builder.html#detectDiskReads()"/>
                /// </summary>
                /// <returns><see cref="Android.Os.StrictMode.ThreadPolicy.Builder"/></returns>
                public Android.Os.StrictMode.ThreadPolicy.Builder DetectDiskReads()
                {
                    return IExecuteWithSignature<Android.Os.StrictMode.ThreadPolicy.Builder>("detectDiskReads", "()Landroid/os/StrictMode$ThreadPolicy$Builder;");
                }
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/os/StrictMode.ThreadPolicy.Builder.html#detectDiskWrites()"/>
                /// </summary>
                /// <returns><see cref="Android.Os.StrictMode.ThreadPolicy.Builder"/></returns>
                public Android.Os.StrictMode.ThreadPolicy.Builder DetectDiskWrites()
                {
                    return IExecuteWithSignature<Android.Os.StrictMode.ThreadPolicy.Builder>("detectDiskWrites", "()Landroid/os/StrictMode$ThreadPolicy$Builder;");
                }
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/os/StrictMode.ThreadPolicy.Builder.html#detectExplicitGc()"/>
                /// </summary>
                /// <returns><see cref="Android.Os.StrictMode.ThreadPolicy.Builder"/></returns>
                public Android.Os.StrictMode.ThreadPolicy.Builder DetectExplicitGc()
                {
                    return IExecuteWithSignature<Android.Os.StrictMode.ThreadPolicy.Builder>("detectExplicitGc", "()Landroid/os/StrictMode$ThreadPolicy$Builder;");
                }
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/os/StrictMode.ThreadPolicy.Builder.html#detectNetwork()"/>
                /// </summary>
                /// <returns><see cref="Android.Os.StrictMode.ThreadPolicy.Builder"/></returns>
                public Android.Os.StrictMode.ThreadPolicy.Builder DetectNetwork()
                {
                    return IExecuteWithSignature<Android.Os.StrictMode.ThreadPolicy.Builder>("detectNetwork", "()Landroid/os/StrictMode$ThreadPolicy$Builder;");
                }
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/os/StrictMode.ThreadPolicy.Builder.html#detectResourceMismatches()"/>
                /// </summary>
                /// <returns><see cref="Android.Os.StrictMode.ThreadPolicy.Builder"/></returns>
                public Android.Os.StrictMode.ThreadPolicy.Builder DetectResourceMismatches()
                {
                    return IExecuteWithSignature<Android.Os.StrictMode.ThreadPolicy.Builder>("detectResourceMismatches", "()Landroid/os/StrictMode$ThreadPolicy$Builder;");
                }
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/os/StrictMode.ThreadPolicy.Builder.html#detectUnbufferedIo()"/>
                /// </summary>
                /// <returns><see cref="Android.Os.StrictMode.ThreadPolicy.Builder"/></returns>
                public Android.Os.StrictMode.ThreadPolicy.Builder DetectUnbufferedIo()
                {
                    return IExecuteWithSignature<Android.Os.StrictMode.ThreadPolicy.Builder>("detectUnbufferedIo", "()Landroid/os/StrictMode$ThreadPolicy$Builder;");
                }
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/os/StrictMode.ThreadPolicy.Builder.html#penaltyDeath()"/>
                /// </summary>
                /// <returns><see cref="Android.Os.StrictMode.ThreadPolicy.Builder"/></returns>
                public Android.Os.StrictMode.ThreadPolicy.Builder PenaltyDeath()
                {
                    return IExecuteWithSignature<Android.Os.StrictMode.ThreadPolicy.Builder>("penaltyDeath", "()Landroid/os/StrictMode$ThreadPolicy$Builder;");
                }
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/os/StrictMode.ThreadPolicy.Builder.html#penaltyDeathOnNetwork()"/>
                /// </summary>
                /// <returns><see cref="Android.Os.StrictMode.ThreadPolicy.Builder"/></returns>
                public Android.Os.StrictMode.ThreadPolicy.Builder PenaltyDeathOnNetwork()
                {
                    return IExecuteWithSignature<Android.Os.StrictMode.ThreadPolicy.Builder>("penaltyDeathOnNetwork", "()Landroid/os/StrictMode$ThreadPolicy$Builder;");
                }
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/os/StrictMode.ThreadPolicy.Builder.html#penaltyDialog()"/>
                /// </summary>
                /// <returns><see cref="Android.Os.StrictMode.ThreadPolicy.Builder"/></returns>
                public Android.Os.StrictMode.ThreadPolicy.Builder PenaltyDialog()
                {
                    return IExecuteWithSignature<Android.Os.StrictMode.ThreadPolicy.Builder>("penaltyDialog", "()Landroid/os/StrictMode$ThreadPolicy$Builder;");
                }
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/os/StrictMode.ThreadPolicy.Builder.html#penaltyDropBox()"/>
                /// </summary>
                /// <returns><see cref="Android.Os.StrictMode.ThreadPolicy.Builder"/></returns>
                public Android.Os.StrictMode.ThreadPolicy.Builder PenaltyDropBox()
                {
                    return IExecuteWithSignature<Android.Os.StrictMode.ThreadPolicy.Builder>("penaltyDropBox", "()Landroid/os/StrictMode$ThreadPolicy$Builder;");
                }
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/os/StrictMode.ThreadPolicy.Builder.html#penaltyFlashScreen()"/>
                /// </summary>
                /// <returns><see cref="Android.Os.StrictMode.ThreadPolicy.Builder"/></returns>
                public Android.Os.StrictMode.ThreadPolicy.Builder PenaltyFlashScreen()
                {
                    return IExecuteWithSignature<Android.Os.StrictMode.ThreadPolicy.Builder>("penaltyFlashScreen", "()Landroid/os/StrictMode$ThreadPolicy$Builder;");
                }
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/os/StrictMode.ThreadPolicy.Builder.html#penaltyListener(java.util.concurrent.Executor,android.os.StrictMode.OnThreadViolationListener)"/>
                /// </summary>
                /// <param name="arg0"><see cref="Java.Util.Concurrent.Executor"/></param>
                /// <param name="arg1"><see cref="Android.Os.StrictMode.OnThreadViolationListener"/></param>
                /// <returns><see cref="Android.Os.StrictMode.ThreadPolicy.Builder"/></returns>
                public Android.Os.StrictMode.ThreadPolicy.Builder PenaltyListener(Java.Util.Concurrent.Executor arg0, Android.Os.StrictMode.OnThreadViolationListener arg1)
                {
                    return IExecute<Android.Os.StrictMode.ThreadPolicy.Builder>("penaltyListener", arg0, arg1);
                }
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/os/StrictMode.ThreadPolicy.Builder.html#penaltyLog()"/>
                /// </summary>
                /// <returns><see cref="Android.Os.StrictMode.ThreadPolicy.Builder"/></returns>
                public Android.Os.StrictMode.ThreadPolicy.Builder PenaltyLog()
                {
                    return IExecuteWithSignature<Android.Os.StrictMode.ThreadPolicy.Builder>("penaltyLog", "()Landroid/os/StrictMode$ThreadPolicy$Builder;");
                }
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/os/StrictMode.ThreadPolicy.Builder.html#permitAll()"/>
                /// </summary>
                /// <returns><see cref="Android.Os.StrictMode.ThreadPolicy.Builder"/></returns>
                public Android.Os.StrictMode.ThreadPolicy.Builder PermitAll()
                {
                    return IExecuteWithSignature<Android.Os.StrictMode.ThreadPolicy.Builder>("permitAll", "()Landroid/os/StrictMode$ThreadPolicy$Builder;");
                }
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/os/StrictMode.ThreadPolicy.Builder.html#permitCustomSlowCalls()"/>
                /// </summary>
                /// <returns><see cref="Android.Os.StrictMode.ThreadPolicy.Builder"/></returns>
                public Android.Os.StrictMode.ThreadPolicy.Builder PermitCustomSlowCalls()
                {
                    return IExecuteWithSignature<Android.Os.StrictMode.ThreadPolicy.Builder>("permitCustomSlowCalls", "()Landroid/os/StrictMode$ThreadPolicy$Builder;");
                }
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/os/StrictMode.ThreadPolicy.Builder.html#permitDiskReads()"/>
                /// </summary>
                /// <returns><see cref="Android.Os.StrictMode.ThreadPolicy.Builder"/></returns>
                public Android.Os.StrictMode.ThreadPolicy.Builder PermitDiskReads()
                {
                    return IExecuteWithSignature<Android.Os.StrictMode.ThreadPolicy.Builder>("permitDiskReads", "()Landroid/os/StrictMode$ThreadPolicy$Builder;");
                }
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/os/StrictMode.ThreadPolicy.Builder.html#permitDiskWrites()"/>
                /// </summary>
                /// <returns><see cref="Android.Os.StrictMode.ThreadPolicy.Builder"/></returns>
                public Android.Os.StrictMode.ThreadPolicy.Builder PermitDiskWrites()
                {
                    return IExecuteWithSignature<Android.Os.StrictMode.ThreadPolicy.Builder>("permitDiskWrites", "()Landroid/os/StrictMode$ThreadPolicy$Builder;");
                }
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/os/StrictMode.ThreadPolicy.Builder.html#permitExplicitGc()"/>
                /// </summary>
                /// <returns><see cref="Android.Os.StrictMode.ThreadPolicy.Builder"/></returns>
                public Android.Os.StrictMode.ThreadPolicy.Builder PermitExplicitGc()
                {
                    return IExecuteWithSignature<Android.Os.StrictMode.ThreadPolicy.Builder>("permitExplicitGc", "()Landroid/os/StrictMode$ThreadPolicy$Builder;");
                }
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/os/StrictMode.ThreadPolicy.Builder.html#permitNetwork()"/>
                /// </summary>
                /// <returns><see cref="Android.Os.StrictMode.ThreadPolicy.Builder"/></returns>
                public Android.Os.StrictMode.ThreadPolicy.Builder PermitNetwork()
                {
                    return IExecuteWithSignature<Android.Os.StrictMode.ThreadPolicy.Builder>("permitNetwork", "()Landroid/os/StrictMode$ThreadPolicy$Builder;");
                }
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/os/StrictMode.ThreadPolicy.Builder.html#permitResourceMismatches()"/>
                /// </summary>
                /// <returns><see cref="Android.Os.StrictMode.ThreadPolicy.Builder"/></returns>
                public Android.Os.StrictMode.ThreadPolicy.Builder PermitResourceMismatches()
                {
                    return IExecuteWithSignature<Android.Os.StrictMode.ThreadPolicy.Builder>("permitResourceMismatches", "()Landroid/os/StrictMode$ThreadPolicy$Builder;");
                }
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/os/StrictMode.ThreadPolicy.Builder.html#permitUnbufferedIo()"/>
                /// </summary>
                /// <returns><see cref="Android.Os.StrictMode.ThreadPolicy.Builder"/></returns>
                public Android.Os.StrictMode.ThreadPolicy.Builder PermitUnbufferedIo()
                {
                    return IExecuteWithSignature<Android.Os.StrictMode.ThreadPolicy.Builder>("permitUnbufferedIo", "()Landroid/os/StrictMode$ThreadPolicy$Builder;");
                }

                #endregion

                #region Nested classes

                #endregion

                // TODO: complete the class
            }
            #endregion

        
            #endregion

            // TODO: complete the class
        }
        #endregion

        #region VmPolicy
        public partial class VmPolicy
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/os/StrictMode.VmPolicy.html#LAX"/>
            /// </summary>
            public static Android.Os.StrictMode.VmPolicy LAX { get { if (!_LAXReady) { _LAXContent = SGetField<Android.Os.StrictMode.VmPolicy>(LocalBridgeClazz, "LAX"); _LAXReady = true; } return _LAXContent; } }
            private static Android.Os.StrictMode.VmPolicy _LAXContent = default;
            private static bool _LAXReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes
            #region Builder
            public partial class Builder
            {
                #region Constructors
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/os/StrictMode.VmPolicy.Builder.html#%3Cinit%3E(android.os.StrictMode.VmPolicy)"/>
                /// </summary>
                /// <param name="arg0"><see cref="Android.Os.StrictMode.VmPolicy"/></param>
                public Builder(Android.Os.StrictMode.VmPolicy arg0)
                    : base(arg0)
                {
                }

                #endregion

                #region Class/Interface conversion operators

                #endregion

                #region Fields

                #endregion

                #region Static methods

                #endregion

                #region Instance methods
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/os/StrictMode.VmPolicy.Builder.html#build()"/>
                /// </summary>
                /// <returns><see cref="Android.Os.StrictMode.VmPolicy"/></returns>
                public Android.Os.StrictMode.VmPolicy Build()
                {
                    return IExecuteWithSignature<Android.Os.StrictMode.VmPolicy>("build", "()Landroid/os/StrictMode$VmPolicy;");
                }
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/os/StrictMode.VmPolicy.Builder.html#detectActivityLeaks()"/>
                /// </summary>
                /// <returns><see cref="Android.Os.StrictMode.VmPolicy.Builder"/></returns>
                public Android.Os.StrictMode.VmPolicy.Builder DetectActivityLeaks()
                {
                    return IExecuteWithSignature<Android.Os.StrictMode.VmPolicy.Builder>("detectActivityLeaks", "()Landroid/os/StrictMode$VmPolicy$Builder;");
                }
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/os/StrictMode.VmPolicy.Builder.html#detectAll()"/>
                /// </summary>
                /// <returns><see cref="Android.Os.StrictMode.VmPolicy.Builder"/></returns>
                public Android.Os.StrictMode.VmPolicy.Builder DetectAll()
                {
                    return IExecuteWithSignature<Android.Os.StrictMode.VmPolicy.Builder>("detectAll", "()Landroid/os/StrictMode$VmPolicy$Builder;");
                }
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/os/StrictMode.VmPolicy.Builder.html#detectCleartextNetwork()"/>
                /// </summary>
                /// <returns><see cref="Android.Os.StrictMode.VmPolicy.Builder"/></returns>
                public Android.Os.StrictMode.VmPolicy.Builder DetectCleartextNetwork()
                {
                    return IExecuteWithSignature<Android.Os.StrictMode.VmPolicy.Builder>("detectCleartextNetwork", "()Landroid/os/StrictMode$VmPolicy$Builder;");
                }
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/os/StrictMode.VmPolicy.Builder.html#detectContentUriWithoutPermission()"/>
                /// </summary>
                /// <returns><see cref="Android.Os.StrictMode.VmPolicy.Builder"/></returns>
                public Android.Os.StrictMode.VmPolicy.Builder DetectContentUriWithoutPermission()
                {
                    return IExecuteWithSignature<Android.Os.StrictMode.VmPolicy.Builder>("detectContentUriWithoutPermission", "()Landroid/os/StrictMode$VmPolicy$Builder;");
                }
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/os/StrictMode.VmPolicy.Builder.html#detectCredentialProtectedWhileLocked()"/>
                /// </summary>
                /// <returns><see cref="Android.Os.StrictMode.VmPolicy.Builder"/></returns>
                public Android.Os.StrictMode.VmPolicy.Builder DetectCredentialProtectedWhileLocked()
                {
                    return IExecuteWithSignature<Android.Os.StrictMode.VmPolicy.Builder>("detectCredentialProtectedWhileLocked", "()Landroid/os/StrictMode$VmPolicy$Builder;");
                }
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/os/StrictMode.VmPolicy.Builder.html#detectFileUriExposure()"/>
                /// </summary>
                /// <returns><see cref="Android.Os.StrictMode.VmPolicy.Builder"/></returns>
                public Android.Os.StrictMode.VmPolicy.Builder DetectFileUriExposure()
                {
                    return IExecuteWithSignature<Android.Os.StrictMode.VmPolicy.Builder>("detectFileUriExposure", "()Landroid/os/StrictMode$VmPolicy$Builder;");
                }
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/os/StrictMode.VmPolicy.Builder.html#detectImplicitDirectBoot()"/>
                /// </summary>
                /// <returns><see cref="Android.Os.StrictMode.VmPolicy.Builder"/></returns>
                public Android.Os.StrictMode.VmPolicy.Builder DetectImplicitDirectBoot()
                {
                    return IExecuteWithSignature<Android.Os.StrictMode.VmPolicy.Builder>("detectImplicitDirectBoot", "()Landroid/os/StrictMode$VmPolicy$Builder;");
                }
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/os/StrictMode.VmPolicy.Builder.html#detectIncorrectContextUse()"/>
                /// </summary>
                /// <returns><see cref="Android.Os.StrictMode.VmPolicy.Builder"/></returns>
                public Android.Os.StrictMode.VmPolicy.Builder DetectIncorrectContextUse()
                {
                    return IExecuteWithSignature<Android.Os.StrictMode.VmPolicy.Builder>("detectIncorrectContextUse", "()Landroid/os/StrictMode$VmPolicy$Builder;");
                }
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/os/StrictMode.VmPolicy.Builder.html#detectLeakedClosableObjects()"/>
                /// </summary>
                /// <returns><see cref="Android.Os.StrictMode.VmPolicy.Builder"/></returns>
                public Android.Os.StrictMode.VmPolicy.Builder DetectLeakedClosableObjects()
                {
                    return IExecuteWithSignature<Android.Os.StrictMode.VmPolicy.Builder>("detectLeakedClosableObjects", "()Landroid/os/StrictMode$VmPolicy$Builder;");
                }
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/os/StrictMode.VmPolicy.Builder.html#detectLeakedRegistrationObjects()"/>
                /// </summary>
                /// <returns><see cref="Android.Os.StrictMode.VmPolicy.Builder"/></returns>
                public Android.Os.StrictMode.VmPolicy.Builder DetectLeakedRegistrationObjects()
                {
                    return IExecuteWithSignature<Android.Os.StrictMode.VmPolicy.Builder>("detectLeakedRegistrationObjects", "()Landroid/os/StrictMode$VmPolicy$Builder;");
                }
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/os/StrictMode.VmPolicy.Builder.html#detectLeakedSqlLiteObjects()"/>
                /// </summary>
                /// <returns><see cref="Android.Os.StrictMode.VmPolicy.Builder"/></returns>
                public Android.Os.StrictMode.VmPolicy.Builder DetectLeakedSqlLiteObjects()
                {
                    return IExecuteWithSignature<Android.Os.StrictMode.VmPolicy.Builder>("detectLeakedSqlLiteObjects", "()Landroid/os/StrictMode$VmPolicy$Builder;");
                }
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/os/StrictMode.VmPolicy.Builder.html#detectNonSdkApiUsage()"/>
                /// </summary>
                /// <returns><see cref="Android.Os.StrictMode.VmPolicy.Builder"/></returns>
                public Android.Os.StrictMode.VmPolicy.Builder DetectNonSdkApiUsage()
                {
                    return IExecuteWithSignature<Android.Os.StrictMode.VmPolicy.Builder>("detectNonSdkApiUsage", "()Landroid/os/StrictMode$VmPolicy$Builder;");
                }
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/os/StrictMode.VmPolicy.Builder.html#detectUnsafeIntentLaunch()"/>
                /// </summary>
                /// <returns><see cref="Android.Os.StrictMode.VmPolicy.Builder"/></returns>
                public Android.Os.StrictMode.VmPolicy.Builder DetectUnsafeIntentLaunch()
                {
                    return IExecuteWithSignature<Android.Os.StrictMode.VmPolicy.Builder>("detectUnsafeIntentLaunch", "()Landroid/os/StrictMode$VmPolicy$Builder;");
                }
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/os/StrictMode.VmPolicy.Builder.html#detectUntaggedSockets()"/>
                /// </summary>
                /// <returns><see cref="Android.Os.StrictMode.VmPolicy.Builder"/></returns>
                public Android.Os.StrictMode.VmPolicy.Builder DetectUntaggedSockets()
                {
                    return IExecuteWithSignature<Android.Os.StrictMode.VmPolicy.Builder>("detectUntaggedSockets", "()Landroid/os/StrictMode$VmPolicy$Builder;");
                }
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/os/StrictMode.VmPolicy.Builder.html#penaltyDeath()"/>
                /// </summary>
                /// <returns><see cref="Android.Os.StrictMode.VmPolicy.Builder"/></returns>
                public Android.Os.StrictMode.VmPolicy.Builder PenaltyDeath()
                {
                    return IExecuteWithSignature<Android.Os.StrictMode.VmPolicy.Builder>("penaltyDeath", "()Landroid/os/StrictMode$VmPolicy$Builder;");
                }
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/os/StrictMode.VmPolicy.Builder.html#penaltyDeathOnCleartextNetwork()"/>
                /// </summary>
                /// <returns><see cref="Android.Os.StrictMode.VmPolicy.Builder"/></returns>
                public Android.Os.StrictMode.VmPolicy.Builder PenaltyDeathOnCleartextNetwork()
                {
                    return IExecuteWithSignature<Android.Os.StrictMode.VmPolicy.Builder>("penaltyDeathOnCleartextNetwork", "()Landroid/os/StrictMode$VmPolicy$Builder;");
                }
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/os/StrictMode.VmPolicy.Builder.html#penaltyDeathOnFileUriExposure()"/>
                /// </summary>
                /// <returns><see cref="Android.Os.StrictMode.VmPolicy.Builder"/></returns>
                public Android.Os.StrictMode.VmPolicy.Builder PenaltyDeathOnFileUriExposure()
                {
                    return IExecuteWithSignature<Android.Os.StrictMode.VmPolicy.Builder>("penaltyDeathOnFileUriExposure", "()Landroid/os/StrictMode$VmPolicy$Builder;");
                }
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/os/StrictMode.VmPolicy.Builder.html#penaltyDropBox()"/>
                /// </summary>
                /// <returns><see cref="Android.Os.StrictMode.VmPolicy.Builder"/></returns>
                public Android.Os.StrictMode.VmPolicy.Builder PenaltyDropBox()
                {
                    return IExecuteWithSignature<Android.Os.StrictMode.VmPolicy.Builder>("penaltyDropBox", "()Landroid/os/StrictMode$VmPolicy$Builder;");
                }
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/os/StrictMode.VmPolicy.Builder.html#penaltyListener(java.util.concurrent.Executor,android.os.StrictMode.OnVmViolationListener)"/>
                /// </summary>
                /// <param name="arg0"><see cref="Java.Util.Concurrent.Executor"/></param>
                /// <param name="arg1"><see cref="Android.Os.StrictMode.OnVmViolationListener"/></param>
                /// <returns><see cref="Android.Os.StrictMode.VmPolicy.Builder"/></returns>
                public Android.Os.StrictMode.VmPolicy.Builder PenaltyListener(Java.Util.Concurrent.Executor arg0, Android.Os.StrictMode.OnVmViolationListener arg1)
                {
                    return IExecute<Android.Os.StrictMode.VmPolicy.Builder>("penaltyListener", arg0, arg1);
                }
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/os/StrictMode.VmPolicy.Builder.html#penaltyLog()"/>
                /// </summary>
                /// <returns><see cref="Android.Os.StrictMode.VmPolicy.Builder"/></returns>
                public Android.Os.StrictMode.VmPolicy.Builder PenaltyLog()
                {
                    return IExecuteWithSignature<Android.Os.StrictMode.VmPolicy.Builder>("penaltyLog", "()Landroid/os/StrictMode$VmPolicy$Builder;");
                }
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/os/StrictMode.VmPolicy.Builder.html#permitNonSdkApiUsage()"/>
                /// </summary>
                /// <returns><see cref="Android.Os.StrictMode.VmPolicy.Builder"/></returns>
                public Android.Os.StrictMode.VmPolicy.Builder PermitNonSdkApiUsage()
                {
                    return IExecuteWithSignature<Android.Os.StrictMode.VmPolicy.Builder>("permitNonSdkApiUsage", "()Landroid/os/StrictMode$VmPolicy$Builder;");
                }
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/os/StrictMode.VmPolicy.Builder.html#permitUnsafeIntentLaunch()"/>
                /// </summary>
                /// <returns><see cref="Android.Os.StrictMode.VmPolicy.Builder"/></returns>
                public Android.Os.StrictMode.VmPolicy.Builder PermitUnsafeIntentLaunch()
                {
                    return IExecuteWithSignature<Android.Os.StrictMode.VmPolicy.Builder>("permitUnsafeIntentLaunch", "()Landroid/os/StrictMode$VmPolicy$Builder;");
                }
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/os/StrictMode.VmPolicy.Builder.html#setClassInstanceLimit(java.lang.Class,int)"/>
                /// </summary>
                /// <param name="arg0"><see cref="Java.Lang.Class"/></param>
                /// <param name="arg1"><see cref="int"/></param>
                /// <returns><see cref="Android.Os.StrictMode.VmPolicy.Builder"/></returns>
                public Android.Os.StrictMode.VmPolicy.Builder SetClassInstanceLimit(Java.Lang.Class arg0, int arg1)
                {
                    return IExecute<Android.Os.StrictMode.VmPolicy.Builder>("setClassInstanceLimit", arg0, arg1);
                }

                #endregion

                #region Nested classes

                #endregion

                // TODO: complete the class
            }
            #endregion

        
            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}