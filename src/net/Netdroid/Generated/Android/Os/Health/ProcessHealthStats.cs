/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.8.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Os.Health
{
    #region ProcessHealthStats
    public partial class ProcessHealthStats
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/health/ProcessHealthStats.html#MEASUREMENT_ANR_COUNT"/>
        /// </summary>
        public static int MEASUREMENT_ANR_COUNT { get { if (!_MEASUREMENT_ANR_COUNTReady) { _MEASUREMENT_ANR_COUNTContent = SGetField<int>(LocalBridgeClazz, "MEASUREMENT_ANR_COUNT"); _MEASUREMENT_ANR_COUNTReady = true; } return _MEASUREMENT_ANR_COUNTContent; } }
        private static int _MEASUREMENT_ANR_COUNTContent = default;
        private static bool _MEASUREMENT_ANR_COUNTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/health/ProcessHealthStats.html#MEASUREMENT_CRASHES_COUNT"/>
        /// </summary>
        public static int MEASUREMENT_CRASHES_COUNT { get { if (!_MEASUREMENT_CRASHES_COUNTReady) { _MEASUREMENT_CRASHES_COUNTContent = SGetField<int>(LocalBridgeClazz, "MEASUREMENT_CRASHES_COUNT"); _MEASUREMENT_CRASHES_COUNTReady = true; } return _MEASUREMENT_CRASHES_COUNTContent; } }
        private static int _MEASUREMENT_CRASHES_COUNTContent = default;
        private static bool _MEASUREMENT_CRASHES_COUNTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/health/ProcessHealthStats.html#MEASUREMENT_FOREGROUND_MS"/>
        /// </summary>
        public static int MEASUREMENT_FOREGROUND_MS { get { if (!_MEASUREMENT_FOREGROUND_MSReady) { _MEASUREMENT_FOREGROUND_MSContent = SGetField<int>(LocalBridgeClazz, "MEASUREMENT_FOREGROUND_MS"); _MEASUREMENT_FOREGROUND_MSReady = true; } return _MEASUREMENT_FOREGROUND_MSContent; } }
        private static int _MEASUREMENT_FOREGROUND_MSContent = default;
        private static bool _MEASUREMENT_FOREGROUND_MSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/health/ProcessHealthStats.html#MEASUREMENT_STARTS_COUNT"/>
        /// </summary>
        public static int MEASUREMENT_STARTS_COUNT { get { if (!_MEASUREMENT_STARTS_COUNTReady) { _MEASUREMENT_STARTS_COUNTContent = SGetField<int>(LocalBridgeClazz, "MEASUREMENT_STARTS_COUNT"); _MEASUREMENT_STARTS_COUNTReady = true; } return _MEASUREMENT_STARTS_COUNTContent; } }
        private static int _MEASUREMENT_STARTS_COUNTContent = default;
        private static bool _MEASUREMENT_STARTS_COUNTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/health/ProcessHealthStats.html#MEASUREMENT_SYSTEM_TIME_MS"/>
        /// </summary>
        public static int MEASUREMENT_SYSTEM_TIME_MS { get { if (!_MEASUREMENT_SYSTEM_TIME_MSReady) { _MEASUREMENT_SYSTEM_TIME_MSContent = SGetField<int>(LocalBridgeClazz, "MEASUREMENT_SYSTEM_TIME_MS"); _MEASUREMENT_SYSTEM_TIME_MSReady = true; } return _MEASUREMENT_SYSTEM_TIME_MSContent; } }
        private static int _MEASUREMENT_SYSTEM_TIME_MSContent = default;
        private static bool _MEASUREMENT_SYSTEM_TIME_MSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/os/health/ProcessHealthStats.html#MEASUREMENT_USER_TIME_MS"/>
        /// </summary>
        public static int MEASUREMENT_USER_TIME_MS { get { if (!_MEASUREMENT_USER_TIME_MSReady) { _MEASUREMENT_USER_TIME_MSContent = SGetField<int>(LocalBridgeClazz, "MEASUREMENT_USER_TIME_MS"); _MEASUREMENT_USER_TIME_MSReady = true; } return _MEASUREMENT_USER_TIME_MSContent; } }
        private static int _MEASUREMENT_USER_TIME_MSContent = default;
        private static bool _MEASUREMENT_USER_TIME_MSReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}