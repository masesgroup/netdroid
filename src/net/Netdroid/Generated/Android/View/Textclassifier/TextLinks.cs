/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.1.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.View.Textclassifier
{
    #region TextLinks
    public partial class TextLinks
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/textclassifier/TextLinks.html#CREATOR"/>
        /// </summary>
        public static Android.Os.Parcelable.Creator CREATOR { get { if (!_CREATORReady) { _CREATORContent = SGetField<Android.Os.Parcelable.Creator>(LocalBridgeClazz, "CREATOR"); _CREATORReady = true; } return _CREATORContent; } }
        private static Android.Os.Parcelable.Creator _CREATORContent = default;
        private static bool _CREATORReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/textclassifier/TextLinks.html#APPLY_STRATEGY_IGNORE"/>
        /// </summary>
        public static int APPLY_STRATEGY_IGNORE { get { if (!_APPLY_STRATEGY_IGNOREReady) { _APPLY_STRATEGY_IGNOREContent = SGetField<int>(LocalBridgeClazz, "APPLY_STRATEGY_IGNORE"); _APPLY_STRATEGY_IGNOREReady = true; } return _APPLY_STRATEGY_IGNOREContent; } }
        private static int _APPLY_STRATEGY_IGNOREContent = default;
        private static bool _APPLY_STRATEGY_IGNOREReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/textclassifier/TextLinks.html#APPLY_STRATEGY_REPLACE"/>
        /// </summary>
        public static int APPLY_STRATEGY_REPLACE { get { if (!_APPLY_STRATEGY_REPLACEReady) { _APPLY_STRATEGY_REPLACEContent = SGetField<int>(LocalBridgeClazz, "APPLY_STRATEGY_REPLACE"); _APPLY_STRATEGY_REPLACEReady = true; } return _APPLY_STRATEGY_REPLACEContent; } }
        private static int _APPLY_STRATEGY_REPLACEContent = default;
        private static bool _APPLY_STRATEGY_REPLACEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/textclassifier/TextLinks.html#STATUS_DIFFERENT_TEXT"/>
        /// </summary>
        public static int STATUS_DIFFERENT_TEXT { get { if (!_STATUS_DIFFERENT_TEXTReady) { _STATUS_DIFFERENT_TEXTContent = SGetField<int>(LocalBridgeClazz, "STATUS_DIFFERENT_TEXT"); _STATUS_DIFFERENT_TEXTReady = true; } return _STATUS_DIFFERENT_TEXTContent; } }
        private static int _STATUS_DIFFERENT_TEXTContent = default;
        private static bool _STATUS_DIFFERENT_TEXTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/textclassifier/TextLinks.html#STATUS_LINKS_APPLIED"/>
        /// </summary>
        public static int STATUS_LINKS_APPLIED { get { if (!_STATUS_LINKS_APPLIEDReady) { _STATUS_LINKS_APPLIEDContent = SGetField<int>(LocalBridgeClazz, "STATUS_LINKS_APPLIED"); _STATUS_LINKS_APPLIEDReady = true; } return _STATUS_LINKS_APPLIEDContent; } }
        private static int _STATUS_LINKS_APPLIEDContent = default;
        private static bool _STATUS_LINKS_APPLIEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/textclassifier/TextLinks.html#STATUS_NO_LINKS_APPLIED"/>
        /// </summary>
        public static int STATUS_NO_LINKS_APPLIED { get { if (!_STATUS_NO_LINKS_APPLIEDReady) { _STATUS_NO_LINKS_APPLIEDContent = SGetField<int>(LocalBridgeClazz, "STATUS_NO_LINKS_APPLIED"); _STATUS_NO_LINKS_APPLIEDReady = true; } return _STATUS_NO_LINKS_APPLIEDContent; } }
        private static int _STATUS_NO_LINKS_APPLIEDContent = default;
        private static bool _STATUS_NO_LINKS_APPLIEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/textclassifier/TextLinks.html#STATUS_NO_LINKS_FOUND"/>
        /// </summary>
        public static int STATUS_NO_LINKS_FOUND { get { if (!_STATUS_NO_LINKS_FOUNDReady) { _STATUS_NO_LINKS_FOUNDContent = SGetField<int>(LocalBridgeClazz, "STATUS_NO_LINKS_FOUND"); _STATUS_NO_LINKS_FOUNDReady = true; } return _STATUS_NO_LINKS_FOUNDContent; } }
        private static int _STATUS_NO_LINKS_FOUNDContent = default;
        private static bool _STATUS_NO_LINKS_FOUNDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/textclassifier/TextLinks.html#STATUS_UNSUPPORTED_CHARACTER"/>
        /// </summary>
        public static int STATUS_UNSUPPORTED_CHARACTER { get { if (!_STATUS_UNSUPPORTED_CHARACTERReady) { _STATUS_UNSUPPORTED_CHARACTERContent = SGetField<int>(LocalBridgeClazz, "STATUS_UNSUPPORTED_CHARACTER"); _STATUS_UNSUPPORTED_CHARACTERReady = true; } return _STATUS_UNSUPPORTED_CHARACTERContent; } }
        private static int _STATUS_UNSUPPORTED_CHARACTERContent = default;
        private static bool _STATUS_UNSUPPORTED_CHARACTERReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/textclassifier/TextLinks.html#getExtras()"/>
        /// </summary>
        /// <returns><see cref="Android.Os.Bundle"/></returns>
        public Android.Os.Bundle GetExtras()
        {
            return IExecuteWithSignature<Android.Os.Bundle>("getExtras", "()Landroid/os/Bundle;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/textclassifier/TextLinks.html#apply(android.text.Spannable,int,java.util.function.Function)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Text.Spannable"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="Java.Util.Function.Function"/></param>
        /// <returns><see cref="int"/></returns>
        public int Apply(Android.Text.Spannable arg0, int arg1, Java.Util.Function.Function<Android.View.Textclassifier.TextLinks.TextLink, Android.View.Textclassifier.TextLinks.TextLinkSpan> arg2)
        {
            return IExecute<int>("apply", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/textclassifier/TextLinks.html#describeContents()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int DescribeContents()
        {
            return IExecuteWithSignature<int>("describeContents", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/textclassifier/TextLinks.html#getText()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.CharSequence"/></returns>
        public Java.Lang.CharSequence GetText()
        {
            return IExecuteWithSignature<Java.Lang.CharSequence>("getText", "()Ljava/lang/CharSequence;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/textclassifier/TextLinks.html#getLinks()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.Collection"/></returns>
        public Java.Util.Collection<Android.View.Textclassifier.TextLinks.TextLink> GetLinks()
        {
            return IExecute<Java.Util.Collection<Android.View.Textclassifier.TextLinks.TextLink>>("getLinks");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/textclassifier/TextLinks.html#writeToParcel(android.os.Parcel,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.Parcel"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void WriteToParcel(Android.Os.Parcel arg0, int arg1)
        {
            IExecute("writeToParcel", arg0, arg1);
        }

        #endregion

        #region Nested classes
        #region Builder
        public partial class Builder
        {
            #region Constructors
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/view/textclassifier/TextLinks.Builder.html#%3Cinit%3E(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            public Builder(Java.Lang.String arg0)
                : base(arg0)
            {
            }

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/view/textclassifier/TextLinks.Builder.html#build()"/>
            /// </summary>
            /// <returns><see cref="Android.View.Textclassifier.TextLinks"/></returns>
            public Android.View.Textclassifier.TextLinks Build()
            {
                return IExecute<Android.View.Textclassifier.TextLinks>("build");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/view/textclassifier/TextLinks.Builder.html#addLink(int,int,java.util.Map,android.os.Bundle)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            /// <param name="arg2"><see cref="Java.Util.Map"/></param>
            /// <param name="arg3"><see cref="Android.Os.Bundle"/></param>
            /// <returns><see cref="Android.View.Textclassifier.TextLinks.Builder"/></returns>
            public Android.View.Textclassifier.TextLinks.Builder AddLink(int arg0, int arg1, Java.Util.Map<Java.Lang.String, Java.Lang.Float> arg2, Android.Os.Bundle arg3)
            {
                return IExecute<Android.View.Textclassifier.TextLinks.Builder>("addLink", arg0, arg1, arg2, arg3);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/view/textclassifier/TextLinks.Builder.html#addLink(int,int,java.util.Map)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            /// <param name="arg2"><see cref="Java.Util.Map"/></param>
            /// <returns><see cref="Android.View.Textclassifier.TextLinks.Builder"/></returns>
            public Android.View.Textclassifier.TextLinks.Builder AddLink(int arg0, int arg1, Java.Util.Map<Java.Lang.String, Java.Lang.Float> arg2)
            {
                return IExecute<Android.View.Textclassifier.TextLinks.Builder>("addLink", arg0, arg1, arg2);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/view/textclassifier/TextLinks.Builder.html#clearTextLinks()"/>
            /// </summary>
            /// <returns><see cref="Android.View.Textclassifier.TextLinks.Builder"/></returns>
            public Android.View.Textclassifier.TextLinks.Builder ClearTextLinks()
            {
                return IExecute<Android.View.Textclassifier.TextLinks.Builder>("clearTextLinks");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/view/textclassifier/TextLinks.Builder.html#setExtras(android.os.Bundle)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Os.Bundle"/></param>
            /// <returns><see cref="Android.View.Textclassifier.TextLinks.Builder"/></returns>
            public Android.View.Textclassifier.TextLinks.Builder SetExtras(Android.Os.Bundle arg0)
            {
                return IExecute<Android.View.Textclassifier.TextLinks.Builder>("setExtras", arg0);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region Request
        public partial class Request
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/view/textclassifier/TextLinks.Request.html#CREATOR"/>
            /// </summary>
            public static Android.Os.Parcelable.Creator CREATOR { get { if (!_CREATORReady) { _CREATORContent = SGetField<Android.Os.Parcelable.Creator>(LocalBridgeClazz, "CREATOR"); _CREATORReady = true; } return _CREATORContent; } }
            private static Android.Os.Parcelable.Creator _CREATORContent = default;
            private static bool _CREATORReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/view/textclassifier/TextLinks.Request.html#getExtras()"/>
            /// </summary>
            /// <returns><see cref="Android.Os.Bundle"/></returns>
            public Android.Os.Bundle GetExtras()
            {
                return IExecuteWithSignature<Android.Os.Bundle>("getExtras", "()Landroid/os/Bundle;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/view/textclassifier/TextLinks.Request.html#getDefaultLocales()"/>
            /// </summary>
            /// <returns><see cref="Android.Os.LocaleList"/></returns>
            public Android.Os.LocaleList GetDefaultLocales()
            {
                return IExecuteWithSignature<Android.Os.LocaleList>("getDefaultLocales", "()Landroid/os/LocaleList;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/view/textclassifier/TextLinks.Request.html#getEntityConfig()"/>
            /// </summary>
            /// <returns><see cref="Android.View.Textclassifier.TextClassifier.EntityConfig"/></returns>
            public Android.View.Textclassifier.TextClassifier.EntityConfig GetEntityConfig()
            {
                return IExecute<Android.View.Textclassifier.TextClassifier.EntityConfig>("getEntityConfig");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/view/textclassifier/TextLinks.Request.html#describeContents()"/>
            /// </summary>
            /// <returns><see cref="int"/></returns>
            public int DescribeContents()
            {
                return IExecuteWithSignature<int>("describeContents", "()I");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/view/textclassifier/TextLinks.Request.html#getText()"/>
            /// </summary>
            /// <returns><see cref="Java.Lang.CharSequence"/></returns>
            public Java.Lang.CharSequence GetText()
            {
                return IExecuteWithSignature<Java.Lang.CharSequence>("getText", "()Ljava/lang/CharSequence;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/view/textclassifier/TextLinks.Request.html#getCallingPackageName()"/>
            /// </summary>
            /// <returns><see cref="Java.Lang.String"/></returns>
            public Java.Lang.String GetCallingPackageName()
            {
                return IExecuteWithSignature<Java.Lang.String>("getCallingPackageName", "()Ljava/lang/String;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/view/textclassifier/TextLinks.Request.html#getReferenceTime()"/>
            /// </summary>
            /// <returns><see cref="Java.Time.ZonedDateTime"/></returns>
            public Java.Time.ZonedDateTime GetReferenceTime()
            {
                return IExecuteWithSignature<Java.Time.ZonedDateTime>("getReferenceTime", "()Ljava/time/ZonedDateTime;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/view/textclassifier/TextLinks.Request.html#writeToParcel(android.os.Parcel,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Os.Parcel"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            public void WriteToParcel(Android.Os.Parcel arg0, int arg1)
            {
                IExecute("writeToParcel", arg0, arg1);
            }

            #endregion

            #region Nested classes
            #region Builder
            public partial class Builder
            {
                #region Constructors
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/view/textclassifier/TextLinks.Request.Builder.html#%3Cinit%3E(java.lang.CharSequence)"/>
                /// </summary>
                /// <param name="arg0"><see cref="Java.Lang.CharSequence"/></param>
                public Builder(Java.Lang.CharSequence arg0)
                    : base(arg0)
                {
                }

                #endregion

                #region Class/Interface conversion operators

                #endregion

                #region Fields

                #endregion

                #region Static methods

                #endregion

                #region Instance methods
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/view/textclassifier/TextLinks.Request.Builder.html#build()"/>
                /// </summary>
                /// <returns><see cref="Android.View.Textclassifier.TextLinks.Request"/></returns>
                public Android.View.Textclassifier.TextLinks.Request Build()
                {
                    return IExecute<Android.View.Textclassifier.TextLinks.Request>("build");
                }
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/view/textclassifier/TextLinks.Request.Builder.html#setDefaultLocales(android.os.LocaleList)"/>
                /// </summary>
                /// <param name="arg0"><see cref="Android.Os.LocaleList"/></param>
                /// <returns><see cref="Android.View.Textclassifier.TextLinks.Request.Builder"/></returns>
                public Android.View.Textclassifier.TextLinks.Request.Builder SetDefaultLocales(Android.Os.LocaleList arg0)
                {
                    return IExecute<Android.View.Textclassifier.TextLinks.Request.Builder>("setDefaultLocales", arg0);
                }
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/view/textclassifier/TextLinks.Request.Builder.html#setEntityConfig(android.view.textclassifier.TextClassifier.EntityConfig)"/>
                /// </summary>
                /// <param name="arg0"><see cref="Android.View.Textclassifier.TextClassifier.EntityConfig"/></param>
                /// <returns><see cref="Android.View.Textclassifier.TextLinks.Request.Builder"/></returns>
                public Android.View.Textclassifier.TextLinks.Request.Builder SetEntityConfig(Android.View.Textclassifier.TextClassifier.EntityConfig arg0)
                {
                    return IExecute<Android.View.Textclassifier.TextLinks.Request.Builder>("setEntityConfig", arg0);
                }
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/view/textclassifier/TextLinks.Request.Builder.html#setExtras(android.os.Bundle)"/>
                /// </summary>
                /// <param name="arg0"><see cref="Android.Os.Bundle"/></param>
                /// <returns><see cref="Android.View.Textclassifier.TextLinks.Request.Builder"/></returns>
                public Android.View.Textclassifier.TextLinks.Request.Builder SetExtras(Android.Os.Bundle arg0)
                {
                    return IExecute<Android.View.Textclassifier.TextLinks.Request.Builder>("setExtras", arg0);
                }
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/view/textclassifier/TextLinks.Request.Builder.html#setReferenceTime(java.time.ZonedDateTime)"/>
                /// </summary>
                /// <param name="arg0"><see cref="Java.Time.ZonedDateTime"/></param>
                /// <returns><see cref="Android.View.Textclassifier.TextLinks.Request.Builder"/></returns>
                public Android.View.Textclassifier.TextLinks.Request.Builder SetReferenceTime(Java.Time.ZonedDateTime arg0)
                {
                    return IExecute<Android.View.Textclassifier.TextLinks.Request.Builder>("setReferenceTime", arg0);
                }

                #endregion

                #region Nested classes

                #endregion

                // TODO: complete the class
            }
            #endregion

        
            #endregion

            // TODO: complete the class
        }
        #endregion

        #region TextLink
        public partial class TextLink
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/view/textclassifier/TextLinks.TextLink.html#CREATOR"/>
            /// </summary>
            public static Android.Os.Parcelable.Creator CREATOR { get { if (!_CREATORReady) { _CREATORContent = SGetField<Android.Os.Parcelable.Creator>(LocalBridgeClazz, "CREATOR"); _CREATORReady = true; } return _CREATORContent; } }
            private static Android.Os.Parcelable.Creator _CREATORContent = default;
            private static bool _CREATORReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/view/textclassifier/TextLinks.TextLink.html#getExtras()"/>
            /// </summary>
            /// <returns><see cref="Android.Os.Bundle"/></returns>
            public Android.Os.Bundle GetExtras()
            {
                return IExecuteWithSignature<Android.Os.Bundle>("getExtras", "()Landroid/os/Bundle;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/view/textclassifier/TextLinks.TextLink.html#getConfidenceScore(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="float"/></returns>
            public float GetConfidenceScore(Java.Lang.String arg0)
            {
                return IExecuteWithSignature<float>("getConfidenceScore", "(Ljava/lang/String;)F", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/view/textclassifier/TextLinks.TextLink.html#describeContents()"/>
            /// </summary>
            /// <returns><see cref="int"/></returns>
            public int DescribeContents()
            {
                return IExecuteWithSignature<int>("describeContents", "()I");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/view/textclassifier/TextLinks.TextLink.html#getEnd()"/>
            /// </summary>
            /// <returns><see cref="int"/></returns>
            public int GetEnd()
            {
                return IExecuteWithSignature<int>("getEnd", "()I");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/view/textclassifier/TextLinks.TextLink.html#getEntityCount()"/>
            /// </summary>
            /// <returns><see cref="int"/></returns>
            public int GetEntityCount()
            {
                return IExecuteWithSignature<int>("getEntityCount", "()I");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/view/textclassifier/TextLinks.TextLink.html#getStart()"/>
            /// </summary>
            /// <returns><see cref="int"/></returns>
            public int GetStart()
            {
                return IExecuteWithSignature<int>("getStart", "()I");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/view/textclassifier/TextLinks.TextLink.html#getEntity(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <returns><see cref="Java.Lang.String"/></returns>
            public Java.Lang.String GetEntity(int arg0)
            {
                return IExecuteWithSignature<Java.Lang.String>("getEntity", "(I)Ljava/lang/String;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/view/textclassifier/TextLinks.TextLink.html#writeToParcel(android.os.Parcel,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Os.Parcel"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            public void WriteToParcel(Android.Os.Parcel arg0, int arg1)
            {
                IExecute("writeToParcel", arg0, arg1);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region TextLinkSpan
        public partial class TextLinkSpan
        {
            #region Constructors
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/view/textclassifier/TextLinks.TextLinkSpan.html#%3Cinit%3E(android.view.textclassifier.TextLinks.TextLink)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.View.Textclassifier.TextLinks.TextLink"/></param>
            public TextLinkSpan(Android.View.Textclassifier.TextLinks.TextLink arg0)
                : base(arg0)
            {
            }

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/view/textclassifier/TextLinks.TextLinkSpan.html#getTextLink()"/>
            /// </summary>
            /// <returns><see cref="Android.View.Textclassifier.TextLinks.TextLink"/></returns>
            public Android.View.Textclassifier.TextLinks.TextLink GetTextLink()
            {
                return IExecute<Android.View.Textclassifier.TextLinks.TextLink>("getTextLink");
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}