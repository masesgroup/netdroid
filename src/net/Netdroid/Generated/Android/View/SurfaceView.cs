/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.4.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.View
{
    #region SurfaceView
    public partial class SurfaceView
    {
        #region Constructors
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/SurfaceView.html#%3Cinit%3E(android.content.Context,android.util.AttributeSet,int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        /// <param name="arg1"><see cref="Android.Util.AttributeSet"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <param name="arg3"><see cref="int"/></param>
        public SurfaceView(Android.Content.Context arg0, Android.Util.AttributeSet arg1, int arg2, int arg3)
            : base(arg0, arg1, arg2, arg3)
        {
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/SurfaceView.html#%3Cinit%3E(android.content.Context,android.util.AttributeSet,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        /// <param name="arg1"><see cref="Android.Util.AttributeSet"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        public SurfaceView(Android.Content.Context arg0, Android.Util.AttributeSet arg1, int arg2)
            : base(arg0, arg1, arg2)
        {
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/SurfaceView.html#%3Cinit%3E(android.content.Context,android.util.AttributeSet)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        /// <param name="arg1"><see cref="Android.Util.AttributeSet"/></param>
        public SurfaceView(Android.Content.Context arg0, Android.Util.AttributeSet arg1)
            : base(arg0, arg1)
        {
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/SurfaceView.html#%3Cinit%3E(android.content.Context)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        public SurfaceView(Android.Content.Context arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/SurfaceView.html#SURFACE_LIFECYCLE_DEFAULT"/>
        /// </summary>
        public static int SURFACE_LIFECYCLE_DEFAULT { get { if (!_SURFACE_LIFECYCLE_DEFAULTReady) { _SURFACE_LIFECYCLE_DEFAULTContent = SGetField<int>(LocalBridgeClazz, "SURFACE_LIFECYCLE_DEFAULT"); _SURFACE_LIFECYCLE_DEFAULTReady = true; } return _SURFACE_LIFECYCLE_DEFAULTContent; } }
        private static int _SURFACE_LIFECYCLE_DEFAULTContent = default;
        private static bool _SURFACE_LIFECYCLE_DEFAULTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/SurfaceView.html#SURFACE_LIFECYCLE_FOLLOWS_ATTACHMENT"/>
        /// </summary>
        public static int SURFACE_LIFECYCLE_FOLLOWS_ATTACHMENT { get { if (!_SURFACE_LIFECYCLE_FOLLOWS_ATTACHMENTReady) { _SURFACE_LIFECYCLE_FOLLOWS_ATTACHMENTContent = SGetField<int>(LocalBridgeClazz, "SURFACE_LIFECYCLE_FOLLOWS_ATTACHMENT"); _SURFACE_LIFECYCLE_FOLLOWS_ATTACHMENTReady = true; } return _SURFACE_LIFECYCLE_FOLLOWS_ATTACHMENTContent; } }
        private static int _SURFACE_LIFECYCLE_FOLLOWS_ATTACHMENTContent = default;
        private static bool _SURFACE_LIFECYCLE_FOLLOWS_ATTACHMENTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/SurfaceView.html#SURFACE_LIFECYCLE_FOLLOWS_VISIBILITY"/>
        /// </summary>
        public static int SURFACE_LIFECYCLE_FOLLOWS_VISIBILITY { get { if (!_SURFACE_LIFECYCLE_FOLLOWS_VISIBILITYReady) { _SURFACE_LIFECYCLE_FOLLOWS_VISIBILITYContent = SGetField<int>(LocalBridgeClazz, "SURFACE_LIFECYCLE_FOLLOWS_VISIBILITY"); _SURFACE_LIFECYCLE_FOLLOWS_VISIBILITYReady = true; } return _SURFACE_LIFECYCLE_FOLLOWS_VISIBILITYContent; } }
        private static int _SURFACE_LIFECYCLE_FOLLOWS_VISIBILITYContent = default;
        private static bool _SURFACE_LIFECYCLE_FOLLOWS_VISIBILITYReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/SurfaceView.html#getHostToken()"/>
        /// </summary>
        /// <returns><see cref="Android.Os.IBinder"/></returns>
        [global::System.Obsolete()]
        public Android.Os.IBinder GetHostToken()
        {
            return IExecuteWithSignature<Android.Os.IBinder>("getHostToken", "()Landroid/os/IBinder;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/SurfaceView.html#getSurfaceControl()"/>
        /// </summary>
        /// <returns><see cref="Android.View.SurfaceControl"/></returns>
        public Android.View.SurfaceControl GetSurfaceControl()
        {
            return IExecuteWithSignature<Android.View.SurfaceControl>("getSurfaceControl", "()Landroid/view/SurfaceControl;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/SurfaceView.html#getHolder()"/>
        /// </summary>
        /// <returns><see cref="Android.View.SurfaceHolder"/></returns>
        public Android.View.SurfaceHolder GetHolder()
        {
            return IExecuteWithSignature<Android.View.SurfaceHolder>("getHolder", "()Landroid/view/SurfaceHolder;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/SurfaceView.html#applyTransactionToFrame(android.view.SurfaceControl.Transaction)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.SurfaceControl.Transaction"/></param>
        public void ApplyTransactionToFrame(Android.View.SurfaceControl.Transaction arg0)
        {
            IExecuteWithSignature("applyTransactionToFrame", "(Landroid/view/SurfaceControl$Transaction;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/SurfaceView.html#setChildSurfacePackage(android.view.SurfaceControlViewHost.SurfacePackage)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.SurfaceControlViewHost.SurfacePackage"/></param>
        public void SetChildSurfacePackage(Android.View.SurfaceControlViewHost.SurfacePackage arg0)
        {
            IExecuteWithSignature("setChildSurfacePackage", "(Landroid/view/SurfaceControlViewHost$SurfacePackage;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/SurfaceView.html#setDesiredHdrHeadroom(float)"/>
        /// </summary>
        /// <param name="arg0"><see cref="float"/></param>
        public void SetDesiredHdrHeadroom(float arg0)
        {
            IExecuteWithSignature("setDesiredHdrHeadroom", "(F)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/SurfaceView.html#setSecure(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetSecure(bool arg0)
        {
            IExecuteWithSignature("setSecure", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/SurfaceView.html#setSurfaceLifecycle(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetSurfaceLifecycle(int arg0)
        {
            IExecuteWithSignature("setSurfaceLifecycle", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/SurfaceView.html#setZOrderMediaOverlay(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetZOrderMediaOverlay(bool arg0)
        {
            IExecuteWithSignature("setZOrderMediaOverlay", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/SurfaceView.html#setZOrderOnTop(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetZOrderOnTop(bool arg0)
        {
            IExecuteWithSignature("setZOrderOnTop", "(Z)V", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}