/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.10.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.View
{
    #region SoundEffectConstants declaration
    /// <summary>
    /// <see href="https://developer.android.com/reference/android/view/SoundEffectConstants.html"/>
    /// </summary>
    public partial class SoundEffectConstants : MASES.JCOBridge.C2JBridge.JVMBridgeBase<SoundEffectConstants>
    {
        const string _bridgeClassName = "android.view.SoundEffectConstants";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public SoundEffectConstants() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public SoundEffectConstants(params object[] args) : base(args) { }
    
        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
    
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;
    
        // TODO: complete the class
    
    }
    #endregion

    #region SoundEffectConstants implementation
    public partial class SoundEffectConstants
    {
        #region Constructors
    
        #endregion
    
        #region Class/Interface conversion operators
    
        #endregion
    
        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/SoundEffectConstants.html#CLICK"/>
        /// </summary>
        public static int CLICK { get { if (!_CLICKReady) { _CLICKContent = SGetField<int>(LocalBridgeClazz, "CLICK"); _CLICKReady = true; } return _CLICKContent; } }
        private static int _CLICKContent = default;
        private static bool _CLICKReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/SoundEffectConstants.html#NAVIGATION_DOWN"/>
        /// </summary>
        public static int NAVIGATION_DOWN { get { if (!_NAVIGATION_DOWNReady) { _NAVIGATION_DOWNContent = SGetField<int>(LocalBridgeClazz, "NAVIGATION_DOWN"); _NAVIGATION_DOWNReady = true; } return _NAVIGATION_DOWNContent; } }
        private static int _NAVIGATION_DOWNContent = default;
        private static bool _NAVIGATION_DOWNReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/SoundEffectConstants.html#NAVIGATION_LEFT"/>
        /// </summary>
        public static int NAVIGATION_LEFT { get { if (!_NAVIGATION_LEFTReady) { _NAVIGATION_LEFTContent = SGetField<int>(LocalBridgeClazz, "NAVIGATION_LEFT"); _NAVIGATION_LEFTReady = true; } return _NAVIGATION_LEFTContent; } }
        private static int _NAVIGATION_LEFTContent = default;
        private static bool _NAVIGATION_LEFTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/SoundEffectConstants.html#NAVIGATION_REPEAT_DOWN"/>
        /// </summary>
        public static int NAVIGATION_REPEAT_DOWN { get { if (!_NAVIGATION_REPEAT_DOWNReady) { _NAVIGATION_REPEAT_DOWNContent = SGetField<int>(LocalBridgeClazz, "NAVIGATION_REPEAT_DOWN"); _NAVIGATION_REPEAT_DOWNReady = true; } return _NAVIGATION_REPEAT_DOWNContent; } }
        private static int _NAVIGATION_REPEAT_DOWNContent = default;
        private static bool _NAVIGATION_REPEAT_DOWNReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/SoundEffectConstants.html#NAVIGATION_REPEAT_LEFT"/>
        /// </summary>
        public static int NAVIGATION_REPEAT_LEFT { get { if (!_NAVIGATION_REPEAT_LEFTReady) { _NAVIGATION_REPEAT_LEFTContent = SGetField<int>(LocalBridgeClazz, "NAVIGATION_REPEAT_LEFT"); _NAVIGATION_REPEAT_LEFTReady = true; } return _NAVIGATION_REPEAT_LEFTContent; } }
        private static int _NAVIGATION_REPEAT_LEFTContent = default;
        private static bool _NAVIGATION_REPEAT_LEFTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/SoundEffectConstants.html#NAVIGATION_REPEAT_RIGHT"/>
        /// </summary>
        public static int NAVIGATION_REPEAT_RIGHT { get { if (!_NAVIGATION_REPEAT_RIGHTReady) { _NAVIGATION_REPEAT_RIGHTContent = SGetField<int>(LocalBridgeClazz, "NAVIGATION_REPEAT_RIGHT"); _NAVIGATION_REPEAT_RIGHTReady = true; } return _NAVIGATION_REPEAT_RIGHTContent; } }
        private static int _NAVIGATION_REPEAT_RIGHTContent = default;
        private static bool _NAVIGATION_REPEAT_RIGHTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/SoundEffectConstants.html#NAVIGATION_REPEAT_UP"/>
        /// </summary>
        public static int NAVIGATION_REPEAT_UP { get { if (!_NAVIGATION_REPEAT_UPReady) { _NAVIGATION_REPEAT_UPContent = SGetField<int>(LocalBridgeClazz, "NAVIGATION_REPEAT_UP"); _NAVIGATION_REPEAT_UPReady = true; } return _NAVIGATION_REPEAT_UPContent; } }
        private static int _NAVIGATION_REPEAT_UPContent = default;
        private static bool _NAVIGATION_REPEAT_UPReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/SoundEffectConstants.html#NAVIGATION_RIGHT"/>
        /// </summary>
        public static int NAVIGATION_RIGHT { get { if (!_NAVIGATION_RIGHTReady) { _NAVIGATION_RIGHTContent = SGetField<int>(LocalBridgeClazz, "NAVIGATION_RIGHT"); _NAVIGATION_RIGHTReady = true; } return _NAVIGATION_RIGHTContent; } }
        private static int _NAVIGATION_RIGHTContent = default;
        private static bool _NAVIGATION_RIGHTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/SoundEffectConstants.html#NAVIGATION_UP"/>
        /// </summary>
        public static int NAVIGATION_UP { get { if (!_NAVIGATION_UPReady) { _NAVIGATION_UPContent = SGetField<int>(LocalBridgeClazz, "NAVIGATION_UP"); _NAVIGATION_UPReady = true; } return _NAVIGATION_UPContent; } }
        private static int _NAVIGATION_UPContent = default;
        private static bool _NAVIGATION_UPReady = false; // this is used because in case of generics 
    
        #endregion
    
        #region Static methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/SoundEffectConstants.html#getConstantForFocusDirection(int,boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="bool"/></param>
        /// <returns><see cref="int"/></returns>
        public static int GetConstantForFocusDirection(int arg0, bool arg1)
        {
            return SExecuteWithSignature<int>(LocalBridgeClazz, "getConstantForFocusDirection", "(IZ)I", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/SoundEffectConstants.html#getContantForFocusDirection(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public static int GetContantForFocusDirection(int arg0)
        {
            return SExecuteWithSignature<int>(LocalBridgeClazz, "getContantForFocusDirection", "(I)I", arg0);
        }
    
        #endregion
    
        #region Instance methods
    
        #endregion
    
        #region Nested classes
    
        #endregion
    
        // TODO: complete the class
    }
    #endregion
}