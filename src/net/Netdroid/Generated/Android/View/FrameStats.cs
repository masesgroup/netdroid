/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.6.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.View
{
    #region FrameStats
    public partial class FrameStats
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/FrameStats.html#UNDEFINED_TIME_NANO"/>
        /// </summary>
        public static long UNDEFINED_TIME_NANO { get { if (!_UNDEFINED_TIME_NANOReady) { _UNDEFINED_TIME_NANOContent = SGetField<long>(LocalBridgeClazz, "UNDEFINED_TIME_NANO"); _UNDEFINED_TIME_NANOReady = true; } return _UNDEFINED_TIME_NANOContent; } }
        private static long _UNDEFINED_TIME_NANOContent = default;
        private static bool _UNDEFINED_TIME_NANOReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/FrameStats.html#getFrameCount()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetFrameCount()
        {
            return IExecuteWithSignature<int>("getFrameCount", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/FrameStats.html#getEndTimeNano()"/>
        /// </summary>
        /// <returns><see cref="long"/></returns>
        public long GetEndTimeNano()
        {
            return IExecuteWithSignature<long>("getEndTimeNano", "()J");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/FrameStats.html#getFramePresentedTimeNano(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="long"/></returns>
        public long GetFramePresentedTimeNano(int arg0)
        {
            return IExecuteWithSignature<long>("getFramePresentedTimeNano", "(I)J", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/FrameStats.html#getRefreshPeriodNano()"/>
        /// </summary>
        /// <returns><see cref="long"/></returns>
        public long GetRefreshPeriodNano()
        {
            return IExecuteWithSignature<long>("getRefreshPeriodNano", "()J");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/FrameStats.html#getStartTimeNano()"/>
        /// </summary>
        /// <returns><see cref="long"/></returns>
        public long GetStartTimeNano()
        {
            return IExecuteWithSignature<long>("getStartTimeNano", "()J");
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}