/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.9.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.View
{
    #region DisplayCutout declaration
    /// <summary>
    /// <see href="https://developer.android.com/reference/android/view/DisplayCutout.html"/>
    /// </summary>
    public partial class DisplayCutout : MASES.JCOBridge.C2JBridge.JVMBridgeBase<DisplayCutout>
    {
        const string _bridgeClassName = "android.view.DisplayCutout";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public DisplayCutout() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public DisplayCutout(params object[] args) : base(args) { }
    
        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
    
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;
    
        // TODO: complete the class
        #region Builder declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/DisplayCutout.Builder.html"/>
        /// </summary>
        public partial class Builder : MASES.JCOBridge.C2JBridge.JVMBridgeBase<Builder>
        {
            const string _bridgeClassName = "android.view.DisplayCutout$Builder";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public Builder() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public Builder(params object[] args) : base(args) { }
        
            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
        
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;
        
            // TODO: complete the class
        
        }
        #endregion

    
    }
    #endregion

    #region DisplayCutout implementation
    public partial class DisplayCutout
    {
        #region Constructors
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/DisplayCutout.html#%3Cinit%3E(android.graphics.Insets,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Insets)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Graphics.Insets"/></param>
        /// <param name="arg1"><see cref="Android.Graphics.Rect"/></param>
        /// <param name="arg2"><see cref="Android.Graphics.Rect"/></param>
        /// <param name="arg3"><see cref="Android.Graphics.Rect"/></param>
        /// <param name="arg4"><see cref="Android.Graphics.Rect"/></param>
        /// <param name="arg5"><see cref="Android.Graphics.Insets"/></param>
        public DisplayCutout(Android.Graphics.Insets arg0, Android.Graphics.Rect arg1, Android.Graphics.Rect arg2, Android.Graphics.Rect arg3, Android.Graphics.Rect arg4, Android.Graphics.Insets arg5)
            : base(arg0, arg1, arg2, arg3, arg4, arg5)
        {
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/DisplayCutout.html#%3Cinit%3E(android.graphics.Insets,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Graphics.Insets"/></param>
        /// <param name="arg1"><see cref="Android.Graphics.Rect"/></param>
        /// <param name="arg2"><see cref="Android.Graphics.Rect"/></param>
        /// <param name="arg3"><see cref="Android.Graphics.Rect"/></param>
        /// <param name="arg4"><see cref="Android.Graphics.Rect"/></param>
        public DisplayCutout(Android.Graphics.Insets arg0, Android.Graphics.Rect arg1, Android.Graphics.Rect arg2, Android.Graphics.Rect arg3, Android.Graphics.Rect arg4)
            : base(arg0, arg1, arg2, arg3, arg4)
        {
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/DisplayCutout.html#%3Cinit%3E(android.graphics.Rect,java.util.List)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Graphics.Rect"/></param>
        /// <param name="arg1"><see cref="Java.Util.List"/></param>
        [global::System.Obsolete()]
        public DisplayCutout(Android.Graphics.Rect arg0, Java.Util.List<Android.Graphics.Rect> arg1)
            : base(arg0, arg1)
        {
        }
    
        #endregion
    
        #region Class/Interface conversion operators
    
        #endregion
    
        #region Fields
    
        #endregion
    
        #region Static methods
    
        #endregion
    
        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/DisplayCutout.html#getWaterfallInsets()"/>
        /// </summary>
        /// <returns><see cref="Android.Graphics.Insets"/></returns>
        public Android.Graphics.Insets GetWaterfallInsets()
        {
            return IExecuteWithSignature<Android.Graphics.Insets>("getWaterfallInsets", "()Landroid/graphics/Insets;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/DisplayCutout.html#getCutoutPath()"/>
        /// </summary>
        /// <returns><see cref="Android.Graphics.Path"/></returns>
        public Android.Graphics.Path GetCutoutPath()
        {
            return IExecuteWithSignature<Android.Graphics.Path>("getCutoutPath", "()Landroid/graphics/Path;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/DisplayCutout.html#getBoundingRectBottom()"/>
        /// </summary>
        /// <returns><see cref="Android.Graphics.Rect"/></returns>
        public Android.Graphics.Rect GetBoundingRectBottom()
        {
            return IExecuteWithSignature<Android.Graphics.Rect>("getBoundingRectBottom", "()Landroid/graphics/Rect;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/DisplayCutout.html#getBoundingRectLeft()"/>
        /// </summary>
        /// <returns><see cref="Android.Graphics.Rect"/></returns>
        public Android.Graphics.Rect GetBoundingRectLeft()
        {
            return IExecuteWithSignature<Android.Graphics.Rect>("getBoundingRectLeft", "()Landroid/graphics/Rect;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/DisplayCutout.html#getBoundingRectRight()"/>
        /// </summary>
        /// <returns><see cref="Android.Graphics.Rect"/></returns>
        public Android.Graphics.Rect GetBoundingRectRight()
        {
            return IExecuteWithSignature<Android.Graphics.Rect>("getBoundingRectRight", "()Landroid/graphics/Rect;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/DisplayCutout.html#getBoundingRectTop()"/>
        /// </summary>
        /// <returns><see cref="Android.Graphics.Rect"/></returns>
        public Android.Graphics.Rect GetBoundingRectTop()
        {
            return IExecuteWithSignature<Android.Graphics.Rect>("getBoundingRectTop", "()Landroid/graphics/Rect;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/DisplayCutout.html#getSafeInsetBottom()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetSafeInsetBottom()
        {
            return IExecuteWithSignature<int>("getSafeInsetBottom", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/DisplayCutout.html#getSafeInsetLeft()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetSafeInsetLeft()
        {
            return IExecuteWithSignature<int>("getSafeInsetLeft", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/DisplayCutout.html#getSafeInsetRight()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetSafeInsetRight()
        {
            return IExecuteWithSignature<int>("getSafeInsetRight", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/DisplayCutout.html#getSafeInsetTop()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetSafeInsetTop()
        {
            return IExecuteWithSignature<int>("getSafeInsetTop", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/DisplayCutout.html#getBoundingRects()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.List"/></returns>
        public Java.Util.List<Android.Graphics.Rect> GetBoundingRects()
        {
            return IExecuteWithSignature<Java.Util.List<Android.Graphics.Rect>>("getBoundingRects", "()Ljava/util/List;");
        }
    
        #endregion
    
        #region Nested classes
        #region Builder implementation
        public partial class Builder
        {
            #region Constructors
        
            #endregion
        
            #region Class/Interface conversion operators
        
            #endregion
        
            #region Fields
        
            #endregion
        
            #region Static methods
        
            #endregion
        
            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/view/DisplayCutout.Builder.html#build()"/>
            /// </summary>
            /// <returns><see cref="Android.View.DisplayCutout"/></returns>
            public Android.View.DisplayCutout Build()
            {
                return IExecuteWithSignature<Android.View.DisplayCutout>("build", "()Landroid/view/DisplayCutout;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/view/DisplayCutout.Builder.html#setBoundingRectBottom(android.graphics.Rect)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Graphics.Rect"/></param>
            /// <returns><see cref="Android.View.DisplayCutout.Builder"/></returns>
            public Android.View.DisplayCutout.Builder SetBoundingRectBottom(Android.Graphics.Rect arg0)
            {
                return IExecuteWithSignature<Android.View.DisplayCutout.Builder>("setBoundingRectBottom", "(Landroid/graphics/Rect;)Landroid/view/DisplayCutout$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/view/DisplayCutout.Builder.html#setBoundingRectLeft(android.graphics.Rect)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Graphics.Rect"/></param>
            /// <returns><see cref="Android.View.DisplayCutout.Builder"/></returns>
            public Android.View.DisplayCutout.Builder SetBoundingRectLeft(Android.Graphics.Rect arg0)
            {
                return IExecuteWithSignature<Android.View.DisplayCutout.Builder>("setBoundingRectLeft", "(Landroid/graphics/Rect;)Landroid/view/DisplayCutout$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/view/DisplayCutout.Builder.html#setBoundingRectRight(android.graphics.Rect)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Graphics.Rect"/></param>
            /// <returns><see cref="Android.View.DisplayCutout.Builder"/></returns>
            public Android.View.DisplayCutout.Builder SetBoundingRectRight(Android.Graphics.Rect arg0)
            {
                return IExecuteWithSignature<Android.View.DisplayCutout.Builder>("setBoundingRectRight", "(Landroid/graphics/Rect;)Landroid/view/DisplayCutout$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/view/DisplayCutout.Builder.html#setBoundingRectTop(android.graphics.Rect)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Graphics.Rect"/></param>
            /// <returns><see cref="Android.View.DisplayCutout.Builder"/></returns>
            public Android.View.DisplayCutout.Builder SetBoundingRectTop(Android.Graphics.Rect arg0)
            {
                return IExecuteWithSignature<Android.View.DisplayCutout.Builder>("setBoundingRectTop", "(Landroid/graphics/Rect;)Landroid/view/DisplayCutout$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/view/DisplayCutout.Builder.html#setCutoutPath(android.graphics.Path)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Graphics.Path"/></param>
            /// <returns><see cref="Android.View.DisplayCutout.Builder"/></returns>
            public Android.View.DisplayCutout.Builder SetCutoutPath(Android.Graphics.Path arg0)
            {
                return IExecuteWithSignature<Android.View.DisplayCutout.Builder>("setCutoutPath", "(Landroid/graphics/Path;)Landroid/view/DisplayCutout$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/view/DisplayCutout.Builder.html#setSafeInsets(android.graphics.Insets)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Graphics.Insets"/></param>
            /// <returns><see cref="Android.View.DisplayCutout.Builder"/></returns>
            public Android.View.DisplayCutout.Builder SetSafeInsets(Android.Graphics.Insets arg0)
            {
                return IExecuteWithSignature<Android.View.DisplayCutout.Builder>("setSafeInsets", "(Landroid/graphics/Insets;)Landroid/view/DisplayCutout$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/view/DisplayCutout.Builder.html#setWaterfallInsets(android.graphics.Insets)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Graphics.Insets"/></param>
            /// <returns><see cref="Android.View.DisplayCutout.Builder"/></returns>
            public Android.View.DisplayCutout.Builder SetWaterfallInsets(Android.Graphics.Insets arg0)
            {
                return IExecuteWithSignature<Android.View.DisplayCutout.Builder>("setWaterfallInsets", "(Landroid/graphics/Insets;)Landroid/view/DisplayCutout$Builder;", arg0);
            }
        
            #endregion
        
            #region Nested classes
        
            #endregion
        
            // TODO: complete the class
        }
        #endregion

    
        #endregion
    
        // TODO: complete the class
    }
    #endregion
}