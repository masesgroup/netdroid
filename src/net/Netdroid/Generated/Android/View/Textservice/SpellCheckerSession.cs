/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.8.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.View.Textservice
{
    #region SpellCheckerSession
    public partial class SpellCheckerSession
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/textservice/SpellCheckerSession.html#SERVICE_META_DATA"/>
        /// </summary>
        public static Java.Lang.String SERVICE_META_DATA { get { if (!_SERVICE_META_DATAReady) { _SERVICE_META_DATAContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SERVICE_META_DATA"); _SERVICE_META_DATAReady = true; } return _SERVICE_META_DATAContent; } }
        private static Java.Lang.String _SERVICE_META_DATAContent = default;
        private static bool _SERVICE_META_DATAReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/textservice/SpellCheckerSession.html#getSpellChecker()"/>
        /// </summary>
        /// <returns><see cref="Android.View.Textservice.SpellCheckerInfo"/></returns>
        public Android.View.Textservice.SpellCheckerInfo GetSpellChecker()
        {
            return IExecuteWithSignature<Android.View.Textservice.SpellCheckerInfo>("getSpellChecker", "()Landroid/view/textservice/SpellCheckerInfo;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/textservice/SpellCheckerSession.html#isSessionDisconnected()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsSessionDisconnected()
        {
            return IExecuteWithSignature<bool>("isSessionDisconnected", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/textservice/SpellCheckerSession.html#cancel()"/>
        /// </summary>
        public void Cancel()
        {
            IExecuteWithSignature("cancel", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/textservice/SpellCheckerSession.html#close()"/>
        /// </summary>
        public void Close()
        {
            IExecuteWithSignature("close", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/textservice/SpellCheckerSession.html#getSentenceSuggestions(android.view.textservice.TextInfo[],int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.Textservice.TextInfo"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void GetSentenceSuggestions(Android.View.Textservice.TextInfo[] arg0, int arg1)
        {
            IExecute("getSentenceSuggestions", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/textservice/SpellCheckerSession.html#getSuggestions(android.view.textservice.TextInfo,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.Textservice.TextInfo"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        [global::System.Obsolete()]
        public void GetSuggestions(Android.View.Textservice.TextInfo arg0, int arg1)
        {
            IExecute("getSuggestions", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/textservice/SpellCheckerSession.html#getSuggestions(android.view.textservice.TextInfo[],int,boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.Textservice.TextInfo"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="bool"/></param>
        [global::System.Obsolete()]
        public void GetSuggestions(Android.View.Textservice.TextInfo[] arg0, int arg1, bool arg2)
        {
            IExecute("getSuggestions", arg0, arg1, arg2);
        }

        #endregion

        #region Nested classes
        #region SpellCheckerSessionListener
        public partial class SpellCheckerSessionListener
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// Handlers initializer for <see cref="SpellCheckerSessionListener"/>
            /// </summary>
            protected virtual void InitializeHandlers()
            {
                AddEventHandler("onGetSentenceSuggestions", new global::System.EventHandler<CLRListenerEventArgs<CLREventData<Android.View.Textservice.SentenceSuggestionsInfo[]>>>(OnGetSentenceSuggestionsEventHandler));
                AddEventHandler("onGetSuggestions", new global::System.EventHandler<CLRListenerEventArgs<CLREventData<Android.View.Textservice.SuggestionsInfo[]>>>(OnGetSuggestionsEventHandler));

            }

            /// <summary>
            /// Handler for <see href="https://developer.android.com/reference/android/view/textservice/SpellCheckerSession.SpellCheckerSessionListener.html#onGetSentenceSuggestions(android.view.textservice.SentenceSuggestionsInfo[])"/>
            /// </summary>
            /// <remarks>If <see cref="OnOnGetSentenceSuggestions"/> has a value it takes precedence over corresponding class method</remarks>
            public global::System.Action<Android.View.Textservice.SentenceSuggestionsInfo[]> OnOnGetSentenceSuggestions { get; set; } = null;

            void OnGetSentenceSuggestionsEventHandler(object sender, CLRListenerEventArgs<CLREventData<Android.View.Textservice.SentenceSuggestionsInfo[]>> data)
            {
                var methodToExecute = (OnOnGetSentenceSuggestions != null) ? OnOnGetSentenceSuggestions : OnGetSentenceSuggestions;
                methodToExecute.Invoke(data.EventData.TypedEventData);
            }

            /// <summary>
            /// <see href="https://developer.android.com/reference/android/view/textservice/SpellCheckerSession.SpellCheckerSessionListener.html#onGetSentenceSuggestions(android.view.textservice.SentenceSuggestionsInfo[])"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.View.Textservice.SentenceSuggestionsInfo"/></param>
            public virtual void OnGetSentenceSuggestions(Android.View.Textservice.SentenceSuggestionsInfo[] arg0)
            {
                
            }

            /// <summary>
            /// Handler for <see href="https://developer.android.com/reference/android/view/textservice/SpellCheckerSession.SpellCheckerSessionListener.html#onGetSuggestions(android.view.textservice.SuggestionsInfo[])"/>
            /// </summary>
            /// <remarks>If <see cref="OnOnGetSuggestions"/> has a value it takes precedence over corresponding class method</remarks>
            public global::System.Action<Android.View.Textservice.SuggestionsInfo[]> OnOnGetSuggestions { get; set; } = null;

            void OnGetSuggestionsEventHandler(object sender, CLRListenerEventArgs<CLREventData<Android.View.Textservice.SuggestionsInfo[]>> data)
            {
                var methodToExecute = (OnOnGetSuggestions != null) ? OnOnGetSuggestions : OnGetSuggestions;
                methodToExecute.Invoke(data.EventData.TypedEventData);
            }

            /// <summary>
            /// <see href="https://developer.android.com/reference/android/view/textservice/SpellCheckerSession.SpellCheckerSessionListener.html#onGetSuggestions(android.view.textservice.SuggestionsInfo[])"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.View.Textservice.SuggestionsInfo"/></param>
            public virtual void OnGetSuggestions(Android.View.Textservice.SuggestionsInfo[] arg0)
            {
                
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region SpellCheckerSessionListenerDirect
        public partial class SpellCheckerSessionListenerDirect
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/view/textservice/SpellCheckerSession.SpellCheckerSessionListener.html#onGetSentenceSuggestions(android.view.textservice.SentenceSuggestionsInfo[])"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.View.Textservice.SentenceSuggestionsInfo"/></param>
            public override void OnGetSentenceSuggestions(Android.View.Textservice.SentenceSuggestionsInfo[] arg0)
            {
                IExecuteWithSignature("onGetSentenceSuggestions", "([Landroid/view/textservice/SentenceSuggestionsInfo;)V", new object[] { arg0 });
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/view/textservice/SpellCheckerSession.SpellCheckerSessionListener.html#onGetSuggestions(android.view.textservice.SuggestionsInfo[])"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.View.Textservice.SuggestionsInfo"/></param>
            public override void OnGetSuggestions(Android.View.Textservice.SuggestionsInfo[] arg0)
            {
                IExecuteWithSignature("onGetSuggestions", "([Landroid/view/textservice/SuggestionsInfo;)V", new object[] { arg0 });
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region SpellCheckerSessionParams
        public partial class SpellCheckerSessionParams
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/view/textservice/SpellCheckerSession.SpellCheckerSessionParams.html#getExtras()"/>
            /// </summary>
            /// <returns><see cref="Android.Os.Bundle"/></returns>
            public Android.Os.Bundle GetExtras()
            {
                return IExecuteWithSignature<Android.Os.Bundle>("getExtras", "()Landroid/os/Bundle;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/view/textservice/SpellCheckerSession.SpellCheckerSessionParams.html#shouldReferToSpellCheckerLanguageSettings()"/>
            /// </summary>
            /// <returns><see cref="bool"/></returns>
            public bool ShouldReferToSpellCheckerLanguageSettings()
            {
                return IExecuteWithSignature<bool>("shouldReferToSpellCheckerLanguageSettings", "()Z");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/view/textservice/SpellCheckerSession.SpellCheckerSessionParams.html#getSupportedAttributes()"/>
            /// </summary>
            /// <returns><see cref="int"/></returns>
            public int GetSupportedAttributes()
            {
                return IExecuteWithSignature<int>("getSupportedAttributes", "()I");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/view/textservice/SpellCheckerSession.SpellCheckerSessionParams.html#getLocale()"/>
            /// </summary>
            /// <returns><see cref="Java.Util.Locale"/></returns>
            public Java.Util.Locale GetLocale()
            {
                return IExecuteWithSignature<Java.Util.Locale>("getLocale", "()Ljava/util/Locale;");
            }

            #endregion

            #region Nested classes
            #region Builder
            public partial class Builder
            {
                #region Constructors

                #endregion

                #region Class/Interface conversion operators

                #endregion

                #region Fields

                #endregion

                #region Static methods

                #endregion

                #region Instance methods
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/view/textservice/SpellCheckerSession.SpellCheckerSessionParams.Builder.html#build()"/>
                /// </summary>
                /// <returns><see cref="Android.View.Textservice.SpellCheckerSession.SpellCheckerSessionParams"/></returns>
                public Android.View.Textservice.SpellCheckerSession.SpellCheckerSessionParams Build()
                {
                    return IExecuteWithSignature<Android.View.Textservice.SpellCheckerSession.SpellCheckerSessionParams>("build", "()Landroid/view/textservice/SpellCheckerSession$SpellCheckerSessionParams;");
                }
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/view/textservice/SpellCheckerSession.SpellCheckerSessionParams.Builder.html#setExtras(android.os.Bundle)"/>
                /// </summary>
                /// <param name="arg0"><see cref="Android.Os.Bundle"/></param>
                /// <returns><see cref="Android.View.Textservice.SpellCheckerSession.SpellCheckerSessionParams.Builder"/></returns>
                public Android.View.Textservice.SpellCheckerSession.SpellCheckerSessionParams.Builder SetExtras(Android.Os.Bundle arg0)
                {
                    return IExecuteWithSignature<Android.View.Textservice.SpellCheckerSession.SpellCheckerSessionParams.Builder>("setExtras", "(Landroid/os/Bundle;)Landroid/view/textservice/SpellCheckerSession$SpellCheckerSessionParams$Builder;", arg0);
                }
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/view/textservice/SpellCheckerSession.SpellCheckerSessionParams.Builder.html#setLocale(java.util.Locale)"/>
                /// </summary>
                /// <param name="arg0"><see cref="Java.Util.Locale"/></param>
                /// <returns><see cref="Android.View.Textservice.SpellCheckerSession.SpellCheckerSessionParams.Builder"/></returns>
                public Android.View.Textservice.SpellCheckerSession.SpellCheckerSessionParams.Builder SetLocale(Java.Util.Locale arg0)
                {
                    return IExecuteWithSignature<Android.View.Textservice.SpellCheckerSession.SpellCheckerSessionParams.Builder>("setLocale", "(Ljava/util/Locale;)Landroid/view/textservice/SpellCheckerSession$SpellCheckerSessionParams$Builder;", arg0);
                }
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/view/textservice/SpellCheckerSession.SpellCheckerSessionParams.Builder.html#setShouldReferToSpellCheckerLanguageSettings(boolean)"/>
                /// </summary>
                /// <param name="arg0"><see cref="bool"/></param>
                /// <returns><see cref="Android.View.Textservice.SpellCheckerSession.SpellCheckerSessionParams.Builder"/></returns>
                public Android.View.Textservice.SpellCheckerSession.SpellCheckerSessionParams.Builder SetShouldReferToSpellCheckerLanguageSettings(bool arg0)
                {
                    return IExecuteWithSignature<Android.View.Textservice.SpellCheckerSession.SpellCheckerSessionParams.Builder>("setShouldReferToSpellCheckerLanguageSettings", "(Z)Landroid/view/textservice/SpellCheckerSession$SpellCheckerSessionParams$Builder;", arg0);
                }
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/view/textservice/SpellCheckerSession.SpellCheckerSessionParams.Builder.html#setSupportedAttributes(int)"/>
                /// </summary>
                /// <param name="arg0"><see cref="int"/></param>
                /// <returns><see cref="Android.View.Textservice.SpellCheckerSession.SpellCheckerSessionParams.Builder"/></returns>
                public Android.View.Textservice.SpellCheckerSession.SpellCheckerSessionParams.Builder SetSupportedAttributes(int arg0)
                {
                    return IExecuteWithSignature<Android.View.Textservice.SpellCheckerSession.SpellCheckerSessionParams.Builder>("setSupportedAttributes", "(I)Landroid/view/textservice/SpellCheckerSession$SpellCheckerSessionParams$Builder;", arg0);
                }

                #endregion

                #region Nested classes

                #endregion

                // TODO: complete the class
            }
            #endregion

        
            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}