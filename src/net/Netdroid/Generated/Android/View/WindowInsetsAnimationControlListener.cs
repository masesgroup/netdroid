/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.1.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.View
{
    #region IWindowInsetsAnimationControlListener
    /// <summary>
    /// .NET interface for org.mases.netdroid.generated.android.view.WindowInsetsAnimationControlListener implementing <see href="https://developer.android.com/reference/android/view/WindowInsetsAnimationControlListener.html"/>
    /// </summary>
    public partial interface IWindowInsetsAnimationControlListener
    {
        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/WindowInsetsAnimationControlListener.html#onCancelled(android.view.WindowInsetsAnimationController)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.WindowInsetsAnimationController"/></param>
        void OnCancelled(Android.View.WindowInsetsAnimationController arg0);
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/WindowInsetsAnimationControlListener.html#onFinished(android.view.WindowInsetsAnimationController)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.WindowInsetsAnimationController"/></param>
        void OnFinished(Android.View.WindowInsetsAnimationController arg0);
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/WindowInsetsAnimationControlListener.html#onReady(android.view.WindowInsetsAnimationController,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.WindowInsetsAnimationController"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        void OnReady(Android.View.WindowInsetsAnimationController arg0, int arg1);

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion

    #region WindowInsetsAnimationControlListener
    public partial class WindowInsetsAnimationControlListener : Android.View.IWindowInsetsAnimationControlListener
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// Handlers initializer for <see cref="WindowInsetsAnimationControlListener"/>
        /// </summary>
        protected virtual void InitializeHandlers()
        {
            AddEventHandler("onCancelled", new System.EventHandler<CLRListenerEventArgs<CLREventData<Android.View.WindowInsetsAnimationController>>>(OnCancelledEventHandler));
            AddEventHandler("onFinished", new System.EventHandler<CLRListenerEventArgs<CLREventData<Android.View.WindowInsetsAnimationController>>>(OnFinishedEventHandler));
            AddEventHandler("onReady", new System.EventHandler<CLRListenerEventArgs<CLREventData<Android.View.WindowInsetsAnimationController>>>(OnReadyEventHandler));

        }

        /// <summary>
        /// Handler for <see href="https://developer.android.com/reference/android/view/WindowInsetsAnimationControlListener.html#onCancelled(android.view.WindowInsetsAnimationController)"/>
        /// </summary>
        /// <remarks>If <see cref="OnOnCancelled"/> has a value it takes precedence over corresponding class method</remarks>
        public System.Action<Android.View.WindowInsetsAnimationController> OnOnCancelled { get; set; } = null;

        void OnCancelledEventHandler(object sender, CLRListenerEventArgs<CLREventData<Android.View.WindowInsetsAnimationController>> data)
        {
            var methodToExecute = (OnOnCancelled != null) ? OnOnCancelled : OnCancelled;
            methodToExecute.Invoke(data.EventData.TypedEventData);
        }

        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/WindowInsetsAnimationControlListener.html#onCancelled(android.view.WindowInsetsAnimationController)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.WindowInsetsAnimationController"/></param>
        public virtual void OnCancelled(Android.View.WindowInsetsAnimationController arg0)
        {
            
        }

        /// <summary>
        /// Handler for <see href="https://developer.android.com/reference/android/view/WindowInsetsAnimationControlListener.html#onFinished(android.view.WindowInsetsAnimationController)"/>
        /// </summary>
        /// <remarks>If <see cref="OnOnFinished"/> has a value it takes precedence over corresponding class method</remarks>
        public System.Action<Android.View.WindowInsetsAnimationController> OnOnFinished { get; set; } = null;

        void OnFinishedEventHandler(object sender, CLRListenerEventArgs<CLREventData<Android.View.WindowInsetsAnimationController>> data)
        {
            var methodToExecute = (OnOnFinished != null) ? OnOnFinished : OnFinished;
            methodToExecute.Invoke(data.EventData.TypedEventData);
        }

        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/WindowInsetsAnimationControlListener.html#onFinished(android.view.WindowInsetsAnimationController)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.WindowInsetsAnimationController"/></param>
        public virtual void OnFinished(Android.View.WindowInsetsAnimationController arg0)
        {
            
        }

        /// <summary>
        /// Handler for <see href="https://developer.android.com/reference/android/view/WindowInsetsAnimationControlListener.html#onReady(android.view.WindowInsetsAnimationController,int)"/>
        /// </summary>
        /// <remarks>If <see cref="OnOnReady"/> has a value it takes precedence over corresponding class method</remarks>
        public System.Action<Android.View.WindowInsetsAnimationController, int> OnOnReady { get; set; } = null;

        void OnReadyEventHandler(object sender, CLRListenerEventArgs<CLREventData<Android.View.WindowInsetsAnimationController>> data)
        {
            var methodToExecute = (OnOnReady != null) ? OnOnReady : OnReady;
            methodToExecute.Invoke(data.EventData.TypedEventData, data.EventData.GetAt<int>(0));
        }

        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/WindowInsetsAnimationControlListener.html#onReady(android.view.WindowInsetsAnimationController,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.WindowInsetsAnimationController"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public virtual void OnReady(Android.View.WindowInsetsAnimationController arg0, int arg1)
        {
            
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion

    #region WindowInsetsAnimationControlListenerDirect
    public partial class WindowInsetsAnimationControlListenerDirect : Android.View.IWindowInsetsAnimationControlListener
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/WindowInsetsAnimationControlListener.html#onCancelled(android.view.WindowInsetsAnimationController)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.WindowInsetsAnimationController"/></param>
        public override void OnCancelled(Android.View.WindowInsetsAnimationController arg0)
        {
            IExecuteWithSignature("onCancelled", "(Landroid/view/WindowInsetsAnimationController;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/WindowInsetsAnimationControlListener.html#onFinished(android.view.WindowInsetsAnimationController)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.WindowInsetsAnimationController"/></param>
        public override void OnFinished(Android.View.WindowInsetsAnimationController arg0)
        {
            IExecuteWithSignature("onFinished", "(Landroid/view/WindowInsetsAnimationController;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/view/WindowInsetsAnimationControlListener.html#onReady(android.view.WindowInsetsAnimationController,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.WindowInsetsAnimationController"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public override void OnReady(Android.View.WindowInsetsAnimationController arg0, int arg1)
        {
            IExecute("onReady", arg0, arg1);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}