/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.6.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Hardware.Lights
{
    #region LightsManager
    public partial class LightsManager
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/hardware/lights/LightsManager.html#openSession()"/>
        /// </summary>
        /// <returns><see cref="Android.Hardware.Lights.LightsManager.LightsSession"/></returns>
        public Android.Hardware.Lights.LightsManager.LightsSession OpenSession()
        {
            return IExecuteWithSignature<Android.Hardware.Lights.LightsManager.LightsSession>("openSession", "()Landroid/hardware/lights/LightsManager$LightsSession;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/hardware/lights/LightsManager.html#getLightState(android.hardware.lights.Light)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Hardware.Lights.Light"/></param>
        /// <returns><see cref="Android.Hardware.Lights.LightState"/></returns>
        public Android.Hardware.Lights.LightState GetLightState(Android.Hardware.Lights.Light arg0)
        {
            return IExecuteWithSignature<Android.Hardware.Lights.LightState>("getLightState", "(Landroid/hardware/lights/Light;)Landroid/hardware/lights/LightState;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/hardware/lights/LightsManager.html#getLights()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.List"/></returns>
        public Java.Util.List<Android.Hardware.Lights.Light> GetLights()
        {
            return IExecuteWithSignature<Java.Util.List<Android.Hardware.Lights.Light>>("getLights", "()Ljava/util/List;");
        }

        #endregion

        #region Nested classes
        #region LightsSession
        public partial class LightsSession
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/hardware/lights/LightsManager.LightsSession.html#close()"/>
            /// </summary>
            public void Close()
            {
                IExecuteWithSignature("close", "()V");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/hardware/lights/LightsManager.LightsSession.html#requestLights(android.hardware.lights.LightsRequest)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Hardware.Lights.LightsRequest"/></param>
            public void RequestLights(Android.Hardware.Lights.LightsRequest arg0)
            {
                IExecuteWithSignature("requestLights", "(Landroid/hardware/lights/LightsRequest;)V", arg0);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}