/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.4.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Hardware
{
    #region SensorEvent
    public partial class SensorEvent
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/hardware/SensorEvent.html#sensor"/>
        /// </summary>
        public Android.Hardware.Sensor sensor { get { return IGetField<Android.Hardware.Sensor>("sensor"); } set { ISetField("sensor", value); } }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/hardware/SensorEvent.html#firstEventAfterDiscontinuity"/>
        /// </summary>
        public bool firstEventAfterDiscontinuity { get { return IGetField<bool>("firstEventAfterDiscontinuity"); } set { ISetField("firstEventAfterDiscontinuity", value); } }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/hardware/SensorEvent.html#values"/>
        /// </summary>
        public float[] values { get { if (!_valuesReady) { _valuesContent = IGetFieldArray<float>("values"); _valuesReady = true; } return _valuesContent; } }
        private float[] _valuesContent = default;
        private bool _valuesReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/hardware/SensorEvent.html#accuracy"/>
        /// </summary>
        public int accuracy { get { return IGetField<int>("accuracy"); } set { ISetField("accuracy", value); } }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/hardware/SensorEvent.html#timestamp"/>
        /// </summary>
        public long timestamp { get { return IGetField<long>("timestamp"); } set { ISetField("timestamp", value); } }

        #endregion

        #region Static methods

        #endregion

        #region Instance methods

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}