/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.5.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Hardware.Camera2.Params
{
    #region MandatoryStreamCombination
    public partial class MandatoryStreamCombination
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/hardware/camera2/params/MandatoryStreamCombination.html#isReprocessable()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsReprocessable()
        {
            return IExecuteWithSignature<bool>("isReprocessable", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/hardware/camera2/params/MandatoryStreamCombination.html#getDescription()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.CharSequence"/></returns>
        public Java.Lang.CharSequence GetDescription()
        {
            return IExecuteWithSignature<Java.Lang.CharSequence>("getDescription", "()Ljava/lang/CharSequence;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/hardware/camera2/params/MandatoryStreamCombination.html#getStreamsInformation()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.List"/></returns>
        public Java.Util.List<Android.Hardware.Camera2.Params.MandatoryStreamCombination.MandatoryStreamInformation> GetStreamsInformation()
        {
            return IExecuteWithSignature<Java.Util.List<Android.Hardware.Camera2.Params.MandatoryStreamCombination.MandatoryStreamInformation>>("getStreamsInformation", "()Ljava/util/List;");
        }

        #endregion

        #region Nested classes
        #region MandatoryStreamInformation
        public partial class MandatoryStreamInformation
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/hardware/camera2/params/MandatoryStreamCombination.MandatoryStreamInformation.html#is10BitCapable()"/>
            /// </summary>
            /// <returns><see cref="bool"/></returns>
            public bool Is10BitCapable()
            {
                return IExecuteWithSignature<bool>("is10BitCapable", "()Z");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/hardware/camera2/params/MandatoryStreamCombination.MandatoryStreamInformation.html#isInput()"/>
            /// </summary>
            /// <returns><see cref="bool"/></returns>
            public bool IsInput()
            {
                return IExecuteWithSignature<bool>("isInput", "()Z");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/hardware/camera2/params/MandatoryStreamCombination.MandatoryStreamInformation.html#isMaximumSize()"/>
            /// </summary>
            /// <returns><see cref="bool"/></returns>
            public bool IsMaximumSize()
            {
                return IExecuteWithSignature<bool>("isMaximumSize", "()Z");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/hardware/camera2/params/MandatoryStreamCombination.MandatoryStreamInformation.html#isUltraHighResolution()"/>
            /// </summary>
            /// <returns><see cref="bool"/></returns>
            public bool IsUltraHighResolution()
            {
                return IExecuteWithSignature<bool>("isUltraHighResolution", "()Z");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/hardware/camera2/params/MandatoryStreamCombination.MandatoryStreamInformation.html#get10BitFormat()"/>
            /// </summary>
            /// <returns><see cref="int"/></returns>
            public int Get10BitFormat()
            {
                return IExecuteWithSignature<int>("get10BitFormat", "()I");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/hardware/camera2/params/MandatoryStreamCombination.MandatoryStreamInformation.html#getFormat()"/>
            /// </summary>
            /// <returns><see cref="int"/></returns>
            public int GetFormat()
            {
                return IExecuteWithSignature<int>("getFormat", "()I");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/hardware/camera2/params/MandatoryStreamCombination.MandatoryStreamInformation.html#getAvailableSizes()"/>
            /// </summary>
            /// <returns><see cref="Java.Util.List"/></returns>
            public Java.Util.List<Android.Util.Size> GetAvailableSizes()
            {
                return IExecuteWithSignature<Java.Util.List<Android.Util.Size>>("getAvailableSizes", "()Ljava/util/List;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/hardware/camera2/params/MandatoryStreamCombination.MandatoryStreamInformation.html#getStreamUseCase()"/>
            /// </summary>
            /// <returns><see cref="long"/></returns>
            public long GetStreamUseCase()
            {
                return IExecuteWithSignature<long>("getStreamUseCase", "()J");
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}