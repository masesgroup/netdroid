/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.8.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Hardware.Camera2
{
    #region CameraCaptureSession
    public partial class CameraCaptureSession
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/hardware/camera2/CameraCaptureSession.html#getDevice()"/>
        /// </summary>
        /// <returns><see cref="Android.Hardware.Camera2.CameraDevice"/></returns>
        public Android.Hardware.Camera2.CameraDevice GetDevice()
        {
            return IExecuteWithSignature<Android.Hardware.Camera2.CameraDevice>("getDevice", "()Landroid/hardware/camera2/CameraDevice;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/hardware/camera2/CameraCaptureSession.html#getInputSurface()"/>
        /// </summary>
        /// <returns><see cref="Android.View.Surface"/></returns>
        public Android.View.Surface GetInputSurface()
        {
            return IExecuteWithSignature<Android.View.Surface>("getInputSurface", "()Landroid/view/Surface;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/hardware/camera2/CameraCaptureSession.html#isReprocessable()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsReprocessable()
        {
            return IExecuteWithSignature<bool>("isReprocessable", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/hardware/camera2/CameraCaptureSession.html#capture(android.hardware.camera2.CaptureRequest,android.hardware.camera2.CameraCaptureSession.CaptureCallback,android.os.Handler)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Hardware.Camera2.CaptureRequest"/></param>
        /// <param name="arg1"><see cref="Android.Hardware.Camera2.CameraCaptureSession.CaptureCallback"/></param>
        /// <param name="arg2"><see cref="Android.Os.Handler"/></param>
        /// <returns><see cref="int"/></returns>
        /// <exception cref="Android.Hardware.Camera2.CameraAccessException"/>
        public int Capture(Android.Hardware.Camera2.CaptureRequest arg0, Android.Hardware.Camera2.CameraCaptureSession.CaptureCallback arg1, Android.Os.Handler arg2)
        {
            return IExecute<int>("capture", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/hardware/camera2/CameraCaptureSession.html#captureBurst(java.util.List,android.hardware.camera2.CameraCaptureSession.CaptureCallback,android.os.Handler)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.List"/></param>
        /// <param name="arg1"><see cref="Android.Hardware.Camera2.CameraCaptureSession.CaptureCallback"/></param>
        /// <param name="arg2"><see cref="Android.Os.Handler"/></param>
        /// <returns><see cref="int"/></returns>
        /// <exception cref="Android.Hardware.Camera2.CameraAccessException"/>
        public int CaptureBurst(Java.Util.List<Android.Hardware.Camera2.CaptureRequest> arg0, Android.Hardware.Camera2.CameraCaptureSession.CaptureCallback arg1, Android.Os.Handler arg2)
        {
            return IExecute<int>("captureBurst", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/hardware/camera2/CameraCaptureSession.html#setRepeatingBurst(java.util.List,android.hardware.camera2.CameraCaptureSession.CaptureCallback,android.os.Handler)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.List"/></param>
        /// <param name="arg1"><see cref="Android.Hardware.Camera2.CameraCaptureSession.CaptureCallback"/></param>
        /// <param name="arg2"><see cref="Android.Os.Handler"/></param>
        /// <returns><see cref="int"/></returns>
        /// <exception cref="Android.Hardware.Camera2.CameraAccessException"/>
        public int SetRepeatingBurst(Java.Util.List<Android.Hardware.Camera2.CaptureRequest> arg0, Android.Hardware.Camera2.CameraCaptureSession.CaptureCallback arg1, Android.Os.Handler arg2)
        {
            return IExecute<int>("setRepeatingBurst", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/hardware/camera2/CameraCaptureSession.html#setRepeatingRequest(android.hardware.camera2.CaptureRequest,android.hardware.camera2.CameraCaptureSession.CaptureCallback,android.os.Handler)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Hardware.Camera2.CaptureRequest"/></param>
        /// <param name="arg1"><see cref="Android.Hardware.Camera2.CameraCaptureSession.CaptureCallback"/></param>
        /// <param name="arg2"><see cref="Android.Os.Handler"/></param>
        /// <returns><see cref="int"/></returns>
        /// <exception cref="Android.Hardware.Camera2.CameraAccessException"/>
        public int SetRepeatingRequest(Android.Hardware.Camera2.CaptureRequest arg0, Android.Hardware.Camera2.CameraCaptureSession.CaptureCallback arg1, Android.Os.Handler arg2)
        {
            return IExecute<int>("setRepeatingRequest", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/hardware/camera2/CameraCaptureSession.html#abortCaptures()"/>
        /// </summary>
        /// <exception cref="Android.Hardware.Camera2.CameraAccessException"/>
        public void AbortCaptures()
        {
            IExecuteWithSignature("abortCaptures", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/hardware/camera2/CameraCaptureSession.html#close()"/>
        /// </summary>
        public void Close()
        {
            IExecuteWithSignature("close", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/hardware/camera2/CameraCaptureSession.html#finalizeOutputConfigurations(java.util.List)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.List"/></param>
        /// <exception cref="Android.Hardware.Camera2.CameraAccessException"/>
        public void FinalizeOutputConfigurations(Java.Util.List<Android.Hardware.Camera2.Params.OutputConfiguration> arg0)
        {
            IExecuteWithSignature("finalizeOutputConfigurations", "(Ljava/util/List;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/hardware/camera2/CameraCaptureSession.html#prepare(android.view.Surface)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.Surface"/></param>
        /// <exception cref="Android.Hardware.Camera2.CameraAccessException"/>
        public void Prepare(Android.View.Surface arg0)
        {
            IExecuteWithSignature("prepare", "(Landroid/view/Surface;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/hardware/camera2/CameraCaptureSession.html#stopRepeating()"/>
        /// </summary>
        /// <exception cref="Android.Hardware.Camera2.CameraAccessException"/>
        public void StopRepeating()
        {
            IExecuteWithSignature("stopRepeating", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/hardware/camera2/CameraCaptureSession.html#switchToOffline(java.util.Collection,java.util.concurrent.Executor,android.hardware.camera2.CameraOfflineSession.CameraOfflineSessionCallback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Collection"/></param>
        /// <param name="arg1"><see cref="Java.Util.Concurrent.Executor"/></param>
        /// <param name="arg2"><see cref="Android.Hardware.Camera2.CameraOfflineSession.CameraOfflineSessionCallback"/></param>
        /// <returns><see cref="Android.Hardware.Camera2.CameraOfflineSession"/></returns>
        /// <exception cref="Android.Hardware.Camera2.CameraAccessException"/>
        public Android.Hardware.Camera2.CameraOfflineSession SwitchToOffline(Java.Util.Collection<Android.View.Surface> arg0, Java.Util.Concurrent.Executor arg1, Android.Hardware.Camera2.CameraOfflineSession.CameraOfflineSessionCallback arg2)
        {
            return IExecute<Android.Hardware.Camera2.CameraOfflineSession>("switchToOffline", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/hardware/camera2/CameraCaptureSession.html#supportsOfflineProcessing(android.view.Surface)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.Surface"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool SupportsOfflineProcessing(Android.View.Surface arg0)
        {
            return IExecuteWithSignature<bool>("supportsOfflineProcessing", "(Landroid/view/Surface;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/hardware/camera2/CameraCaptureSession.html#captureBurstRequests(java.util.List,java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession.CaptureCallback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.List"/></param>
        /// <param name="arg1"><see cref="Java.Util.Concurrent.Executor"/></param>
        /// <param name="arg2"><see cref="Android.Hardware.Camera2.CameraCaptureSession.CaptureCallback"/></param>
        /// <returns><see cref="int"/></returns>
        /// <exception cref="Android.Hardware.Camera2.CameraAccessException"/>
        public int CaptureBurstRequests(Java.Util.List<Android.Hardware.Camera2.CaptureRequest> arg0, Java.Util.Concurrent.Executor arg1, Android.Hardware.Camera2.CameraCaptureSession.CaptureCallback arg2)
        {
            return IExecute<int>("captureBurstRequests", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/hardware/camera2/CameraCaptureSession.html#captureSingleRequest(android.hardware.camera2.CaptureRequest,java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession.CaptureCallback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Hardware.Camera2.CaptureRequest"/></param>
        /// <param name="arg1"><see cref="Java.Util.Concurrent.Executor"/></param>
        /// <param name="arg2"><see cref="Android.Hardware.Camera2.CameraCaptureSession.CaptureCallback"/></param>
        /// <returns><see cref="int"/></returns>
        /// <exception cref="Android.Hardware.Camera2.CameraAccessException"/>
        public int CaptureSingleRequest(Android.Hardware.Camera2.CaptureRequest arg0, Java.Util.Concurrent.Executor arg1, Android.Hardware.Camera2.CameraCaptureSession.CaptureCallback arg2)
        {
            return IExecute<int>("captureSingleRequest", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/hardware/camera2/CameraCaptureSession.html#setRepeatingBurstRequests(java.util.List,java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession.CaptureCallback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.List"/></param>
        /// <param name="arg1"><see cref="Java.Util.Concurrent.Executor"/></param>
        /// <param name="arg2"><see cref="Android.Hardware.Camera2.CameraCaptureSession.CaptureCallback"/></param>
        /// <returns><see cref="int"/></returns>
        /// <exception cref="Android.Hardware.Camera2.CameraAccessException"/>
        public int SetRepeatingBurstRequests(Java.Util.List<Android.Hardware.Camera2.CaptureRequest> arg0, Java.Util.Concurrent.Executor arg1, Android.Hardware.Camera2.CameraCaptureSession.CaptureCallback arg2)
        {
            return IExecute<int>("setRepeatingBurstRequests", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/hardware/camera2/CameraCaptureSession.html#setSingleRepeatingRequest(android.hardware.camera2.CaptureRequest,java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession.CaptureCallback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Hardware.Camera2.CaptureRequest"/></param>
        /// <param name="arg1"><see cref="Java.Util.Concurrent.Executor"/></param>
        /// <param name="arg2"><see cref="Android.Hardware.Camera2.CameraCaptureSession.CaptureCallback"/></param>
        /// <returns><see cref="int"/></returns>
        /// <exception cref="Android.Hardware.Camera2.CameraAccessException"/>
        public int SetSingleRepeatingRequest(Android.Hardware.Camera2.CaptureRequest arg0, Java.Util.Concurrent.Executor arg1, Android.Hardware.Camera2.CameraCaptureSession.CaptureCallback arg2)
        {
            return IExecute<int>("setSingleRepeatingRequest", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/hardware/camera2/CameraCaptureSession.html#updateOutputConfiguration(android.hardware.camera2.params.OutputConfiguration)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Hardware.Camera2.Params.OutputConfiguration"/></param>
        /// <exception cref="Android.Hardware.Camera2.CameraAccessException"/>
        public void UpdateOutputConfiguration(Android.Hardware.Camera2.Params.OutputConfiguration arg0)
        {
            IExecuteWithSignature("updateOutputConfiguration", "(Landroid/hardware/camera2/params/OutputConfiguration;)V", arg0);
        }

        #endregion

        #region Nested classes
        #region CaptureCallback
        public partial class CaptureCallback
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/hardware/camera2/CameraCaptureSession.CaptureCallback.html#onCaptureBufferLost(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.view.Surface,long)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Hardware.Camera2.CameraCaptureSession"/></param>
            /// <param name="arg1"><see cref="Android.Hardware.Camera2.CaptureRequest"/></param>
            /// <param name="arg2"><see cref="Android.View.Surface"/></param>
            /// <param name="arg3"><see cref="long"/></param>
            public void OnCaptureBufferLost(Android.Hardware.Camera2.CameraCaptureSession arg0, Android.Hardware.Camera2.CaptureRequest arg1, Android.View.Surface arg2, long arg3)
            {
                IExecute("onCaptureBufferLost", arg0, arg1, arg2, arg3);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/hardware/camera2/CameraCaptureSession.CaptureCallback.html#onCaptureCompleted(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.TotalCaptureResult)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Hardware.Camera2.CameraCaptureSession"/></param>
            /// <param name="arg1"><see cref="Android.Hardware.Camera2.CaptureRequest"/></param>
            /// <param name="arg2"><see cref="Android.Hardware.Camera2.TotalCaptureResult"/></param>
            public void OnCaptureCompleted(Android.Hardware.Camera2.CameraCaptureSession arg0, Android.Hardware.Camera2.CaptureRequest arg1, Android.Hardware.Camera2.TotalCaptureResult arg2)
            {
                IExecute("onCaptureCompleted", arg0, arg1, arg2);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/hardware/camera2/CameraCaptureSession.CaptureCallback.html#onCaptureFailed(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureFailure)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Hardware.Camera2.CameraCaptureSession"/></param>
            /// <param name="arg1"><see cref="Android.Hardware.Camera2.CaptureRequest"/></param>
            /// <param name="arg2"><see cref="Android.Hardware.Camera2.CaptureFailure"/></param>
            public void OnCaptureFailed(Android.Hardware.Camera2.CameraCaptureSession arg0, Android.Hardware.Camera2.CaptureRequest arg1, Android.Hardware.Camera2.CaptureFailure arg2)
            {
                IExecute("onCaptureFailed", arg0, arg1, arg2);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/hardware/camera2/CameraCaptureSession.CaptureCallback.html#onCaptureProgressed(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureResult)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Hardware.Camera2.CameraCaptureSession"/></param>
            /// <param name="arg1"><see cref="Android.Hardware.Camera2.CaptureRequest"/></param>
            /// <param name="arg2"><see cref="Android.Hardware.Camera2.CaptureResult"/></param>
            public void OnCaptureProgressed(Android.Hardware.Camera2.CameraCaptureSession arg0, Android.Hardware.Camera2.CaptureRequest arg1, Android.Hardware.Camera2.CaptureResult arg2)
            {
                IExecute("onCaptureProgressed", arg0, arg1, arg2);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/hardware/camera2/CameraCaptureSession.CaptureCallback.html#onCaptureSequenceAborted(android.hardware.camera2.CameraCaptureSession,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Hardware.Camera2.CameraCaptureSession"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            public void OnCaptureSequenceAborted(Android.Hardware.Camera2.CameraCaptureSession arg0, int arg1)
            {
                IExecute("onCaptureSequenceAborted", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/hardware/camera2/CameraCaptureSession.CaptureCallback.html#onCaptureSequenceCompleted(android.hardware.camera2.CameraCaptureSession,int,long)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Hardware.Camera2.CameraCaptureSession"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            /// <param name="arg2"><see cref="long"/></param>
            public void OnCaptureSequenceCompleted(Android.Hardware.Camera2.CameraCaptureSession arg0, int arg1, long arg2)
            {
                IExecute("onCaptureSequenceCompleted", arg0, arg1, arg2);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/hardware/camera2/CameraCaptureSession.CaptureCallback.html#onCaptureStarted(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,long,long)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Hardware.Camera2.CameraCaptureSession"/></param>
            /// <param name="arg1"><see cref="Android.Hardware.Camera2.CaptureRequest"/></param>
            /// <param name="arg2"><see cref="long"/></param>
            /// <param name="arg3"><see cref="long"/></param>
            public void OnCaptureStarted(Android.Hardware.Camera2.CameraCaptureSession arg0, Android.Hardware.Camera2.CaptureRequest arg1, long arg2, long arg3)
            {
                IExecute("onCaptureStarted", arg0, arg1, arg2, arg3);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/hardware/camera2/CameraCaptureSession.CaptureCallback.html#onReadoutStarted(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,long,long)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Hardware.Camera2.CameraCaptureSession"/></param>
            /// <param name="arg1"><see cref="Android.Hardware.Camera2.CaptureRequest"/></param>
            /// <param name="arg2"><see cref="long"/></param>
            /// <param name="arg3"><see cref="long"/></param>
            public void OnReadoutStarted(Android.Hardware.Camera2.CameraCaptureSession arg0, Android.Hardware.Camera2.CaptureRequest arg1, long arg2, long arg3)
            {
                IExecute("onReadoutStarted", arg0, arg1, arg2, arg3);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region StateCallback
        public partial class StateCallback
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/hardware/camera2/CameraCaptureSession.StateCallback.html#onConfigured(android.hardware.camera2.CameraCaptureSession)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Hardware.Camera2.CameraCaptureSession"/></param>
            public void OnConfigured(Android.Hardware.Camera2.CameraCaptureSession arg0)
            {
                IExecuteWithSignature("onConfigured", "(Landroid/hardware/camera2/CameraCaptureSession;)V", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/hardware/camera2/CameraCaptureSession.StateCallback.html#onConfigureFailed(android.hardware.camera2.CameraCaptureSession)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Hardware.Camera2.CameraCaptureSession"/></param>
            public void OnConfigureFailed(Android.Hardware.Camera2.CameraCaptureSession arg0)
            {
                IExecuteWithSignature("onConfigureFailed", "(Landroid/hardware/camera2/CameraCaptureSession;)V", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/hardware/camera2/CameraCaptureSession.StateCallback.html#onActive(android.hardware.camera2.CameraCaptureSession)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Hardware.Camera2.CameraCaptureSession"/></param>
            public void OnActive(Android.Hardware.Camera2.CameraCaptureSession arg0)
            {
                IExecuteWithSignature("onActive", "(Landroid/hardware/camera2/CameraCaptureSession;)V", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/hardware/camera2/CameraCaptureSession.StateCallback.html#onCaptureQueueEmpty(android.hardware.camera2.CameraCaptureSession)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Hardware.Camera2.CameraCaptureSession"/></param>
            public void OnCaptureQueueEmpty(Android.Hardware.Camera2.CameraCaptureSession arg0)
            {
                IExecuteWithSignature("onCaptureQueueEmpty", "(Landroid/hardware/camera2/CameraCaptureSession;)V", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/hardware/camera2/CameraCaptureSession.StateCallback.html#onClosed(android.hardware.camera2.CameraCaptureSession)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Hardware.Camera2.CameraCaptureSession"/></param>
            public void OnClosed(Android.Hardware.Camera2.CameraCaptureSession arg0)
            {
                IExecuteWithSignature("onClosed", "(Landroid/hardware/camera2/CameraCaptureSession;)V", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/hardware/camera2/CameraCaptureSession.StateCallback.html#onReady(android.hardware.camera2.CameraCaptureSession)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Hardware.Camera2.CameraCaptureSession"/></param>
            public void OnReady(Android.Hardware.Camera2.CameraCaptureSession arg0)
            {
                IExecuteWithSignature("onReady", "(Landroid/hardware/camera2/CameraCaptureSession;)V", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/hardware/camera2/CameraCaptureSession.StateCallback.html#onSurfacePrepared(android.hardware.camera2.CameraCaptureSession,android.view.Surface)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Hardware.Camera2.CameraCaptureSession"/></param>
            /// <param name="arg1"><see cref="Android.View.Surface"/></param>
            public void OnSurfacePrepared(Android.Hardware.Camera2.CameraCaptureSession arg0, Android.View.Surface arg1)
            {
                IExecute("onSurfacePrepared", arg0, arg1);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}