/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.6.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Location
{
    #region GpsSatellite
    public partial class GpsSatellite
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/GpsSatellite.html#hasAlmanac()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        [global::System.Obsolete()]
        public bool HasAlmanac()
        {
            return IExecuteWithSignature<bool>("hasAlmanac", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/GpsSatellite.html#hasEphemeris()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        [global::System.Obsolete()]
        public bool HasEphemeris()
        {
            return IExecuteWithSignature<bool>("hasEphemeris", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/GpsSatellite.html#usedInFix()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        [global::System.Obsolete()]
        public bool UsedInFix()
        {
            return IExecuteWithSignature<bool>("usedInFix", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/GpsSatellite.html#getAzimuth()"/>
        /// </summary>
        /// <returns><see cref="float"/></returns>
        [global::System.Obsolete()]
        public float GetAzimuth()
        {
            return IExecuteWithSignature<float>("getAzimuth", "()F");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/GpsSatellite.html#getElevation()"/>
        /// </summary>
        /// <returns><see cref="float"/></returns>
        [global::System.Obsolete()]
        public float GetElevation()
        {
            return IExecuteWithSignature<float>("getElevation", "()F");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/GpsSatellite.html#getSnr()"/>
        /// </summary>
        /// <returns><see cref="float"/></returns>
        [global::System.Obsolete()]
        public float GetSnr()
        {
            return IExecuteWithSignature<float>("getSnr", "()F");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/GpsSatellite.html#getPrn()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        [global::System.Obsolete()]
        public int GetPrn()
        {
            return IExecuteWithSignature<int>("getPrn", "()I");
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}