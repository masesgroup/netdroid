/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.4.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Location
{
    #region GpsStatus
    public partial class GpsStatus
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/GpsStatus.html#GPS_EVENT_FIRST_FIX"/>
        /// </summary>
        [global::System.Obsolete()]
        public static int GPS_EVENT_FIRST_FIX { get { if (!_GPS_EVENT_FIRST_FIXReady) { _GPS_EVENT_FIRST_FIXContent = SGetField<int>(LocalBridgeClazz, "GPS_EVENT_FIRST_FIX"); _GPS_EVENT_FIRST_FIXReady = true; } return _GPS_EVENT_FIRST_FIXContent; } }
        private static int _GPS_EVENT_FIRST_FIXContent = default;
        private static bool _GPS_EVENT_FIRST_FIXReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/GpsStatus.html#GPS_EVENT_SATELLITE_STATUS"/>
        /// </summary>
        [global::System.Obsolete()]
        public static int GPS_EVENT_SATELLITE_STATUS { get { if (!_GPS_EVENT_SATELLITE_STATUSReady) { _GPS_EVENT_SATELLITE_STATUSContent = SGetField<int>(LocalBridgeClazz, "GPS_EVENT_SATELLITE_STATUS"); _GPS_EVENT_SATELLITE_STATUSReady = true; } return _GPS_EVENT_SATELLITE_STATUSContent; } }
        private static int _GPS_EVENT_SATELLITE_STATUSContent = default;
        private static bool _GPS_EVENT_SATELLITE_STATUSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/GpsStatus.html#GPS_EVENT_STARTED"/>
        /// </summary>
        [global::System.Obsolete()]
        public static int GPS_EVENT_STARTED { get { if (!_GPS_EVENT_STARTEDReady) { _GPS_EVENT_STARTEDContent = SGetField<int>(LocalBridgeClazz, "GPS_EVENT_STARTED"); _GPS_EVENT_STARTEDReady = true; } return _GPS_EVENT_STARTEDContent; } }
        private static int _GPS_EVENT_STARTEDContent = default;
        private static bool _GPS_EVENT_STARTEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/GpsStatus.html#GPS_EVENT_STOPPED"/>
        /// </summary>
        [global::System.Obsolete()]
        public static int GPS_EVENT_STOPPED { get { if (!_GPS_EVENT_STOPPEDReady) { _GPS_EVENT_STOPPEDContent = SGetField<int>(LocalBridgeClazz, "GPS_EVENT_STOPPED"); _GPS_EVENT_STOPPEDReady = true; } return _GPS_EVENT_STOPPEDContent; } }
        private static int _GPS_EVENT_STOPPEDContent = default;
        private static bool _GPS_EVENT_STOPPEDReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/GpsStatus.html#create(android.location.GnssStatus,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Location.GnssStatus"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="Android.Location.GpsStatus"/></returns>
        [global::System.Obsolete()]
        public static Android.Location.GpsStatus Create(Android.Location.GnssStatus arg0, int arg1)
        {
            return SExecute<Android.Location.GpsStatus>(LocalBridgeClazz, "create", arg0, arg1);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/GpsStatus.html#getMaxSatellites()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        [global::System.Obsolete()]
        public int GetMaxSatellites()
        {
            return IExecuteWithSignature<int>("getMaxSatellites", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/GpsStatus.html#getTimeToFirstFix()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        [global::System.Obsolete()]
        public int GetTimeToFirstFix()
        {
            return IExecuteWithSignature<int>("getTimeToFirstFix", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/GpsStatus.html#getSatellites()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.Iterable"/></returns>
        [global::System.Obsolete()]
        public Java.Lang.Iterable<Android.Location.GpsSatellite> GetSatellites()
        {
            return IExecuteWithSignature<Java.Lang.Iterable<Android.Location.GpsSatellite>>("getSatellites", "()Ljava/lang/Iterable;");
        }

        #endregion

        #region Nested classes
        #region Listener
        public partial class Listener
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// Handlers initializer for <see cref="Listener"/>
            /// </summary>
            protected virtual void InitializeHandlers()
            {
                AddEventHandler("onGpsStatusChanged", new global::System.EventHandler<CLRListenerEventArgs<CLREventData<int>>>(OnGpsStatusChangedEventHandler));

            }

            /// <summary>
            /// Handler for <see href="https://developer.android.com/reference/android/location/GpsStatus.Listener.html#onGpsStatusChanged(int)"/>
            /// </summary>
            /// <remarks>If <see cref="OnOnGpsStatusChanged"/> has a value it takes precedence over corresponding class method</remarks>
            public global::System.Action<int> OnOnGpsStatusChanged { get; set; } = null;

            void OnGpsStatusChangedEventHandler(object sender, CLRListenerEventArgs<CLREventData<int>> data)
            {
                var methodToExecute = (OnOnGpsStatusChanged != null) ? OnOnGpsStatusChanged : OnGpsStatusChanged;
                methodToExecute.Invoke(data.EventData.TypedEventData);
            }

            /// <summary>
            /// <see href="https://developer.android.com/reference/android/location/GpsStatus.Listener.html#onGpsStatusChanged(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            [global::System.Obsolete()]
            public virtual void OnGpsStatusChanged(int arg0)
            {
                
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region ListenerDirect
        public partial class ListenerDirect
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/location/GpsStatus.Listener.html#onGpsStatusChanged(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            [global::System.Obsolete()]
            public override void OnGpsStatusChanged(int arg0)
            {
                IExecuteWithSignature("onGpsStatusChanged", "(I)V", arg0);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region NmeaListener
        public partial class NmeaListener
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// Handlers initializer for <see cref="NmeaListener"/>
            /// </summary>
            protected virtual void InitializeHandlers()
            {
                AddEventHandler("onNmeaReceived", new global::System.EventHandler<CLRListenerEventArgs<CLREventData<long>>>(OnNmeaReceivedEventHandler));

            }

            /// <summary>
            /// Handler for <see href="https://developer.android.com/reference/android/location/GpsStatus.NmeaListener.html#onNmeaReceived(long,java.lang.String)"/>
            /// </summary>
            /// <remarks>If <see cref="OnOnNmeaReceived"/> has a value it takes precedence over corresponding class method</remarks>
            public global::System.Action<long, Java.Lang.String> OnOnNmeaReceived { get; set; } = null;

            void OnNmeaReceivedEventHandler(object sender, CLRListenerEventArgs<CLREventData<long>> data)
            {
                var methodToExecute = (OnOnNmeaReceived != null) ? OnOnNmeaReceived : OnNmeaReceived;
                methodToExecute.Invoke(data.EventData.TypedEventData, data.EventData.GetAt<Java.Lang.String>(0));
            }

            /// <summary>
            /// <see href="https://developer.android.com/reference/android/location/GpsStatus.NmeaListener.html#onNmeaReceived(long,java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="long"/></param>
            /// <param name="arg1"><see cref="Java.Lang.String"/></param>
            [global::System.Obsolete()]
            public virtual void OnNmeaReceived(long arg0, Java.Lang.String arg1)
            {
                
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region NmeaListenerDirect
        public partial class NmeaListenerDirect
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/location/GpsStatus.NmeaListener.html#onNmeaReceived(long,java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="long"/></param>
            /// <param name="arg1"><see cref="Java.Lang.String"/></param>
            [global::System.Obsolete()]
            public override void OnNmeaReceived(long arg0, Java.Lang.String arg1)
            {
                IExecute("onNmeaReceived", arg0, arg1);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}