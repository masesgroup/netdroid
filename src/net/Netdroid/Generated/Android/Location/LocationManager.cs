/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.9.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Location
{
    #region LocationManager declaration
    /// <summary>
    /// <see href="https://developer.android.com/reference/android/location/LocationManager.html"/>
    /// </summary>
    public partial class LocationManager : MASES.JCOBridge.C2JBridge.JVMBridgeBase<LocationManager>
    {
        const string _bridgeClassName = "android.location.LocationManager";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public LocationManager() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public LocationManager(params object[] args) : base(args) { }
    
        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
    
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;
    
        // TODO: complete the class
    
    }
    #endregion

    #region LocationManager implementation
    public partial class LocationManager
    {
        #region Constructors
    
        #endregion
    
        #region Class/Interface conversion operators
    
        #endregion
    
        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#ACTION_GNSS_CAPABILITIES_CHANGED"/>
        /// </summary>
        public static Java.Lang.String ACTION_GNSS_CAPABILITIES_CHANGED { get { if (!_ACTION_GNSS_CAPABILITIES_CHANGEDReady) { _ACTION_GNSS_CAPABILITIES_CHANGEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_GNSS_CAPABILITIES_CHANGED"); _ACTION_GNSS_CAPABILITIES_CHANGEDReady = true; } return _ACTION_GNSS_CAPABILITIES_CHANGEDContent; } }
        private static Java.Lang.String _ACTION_GNSS_CAPABILITIES_CHANGEDContent = default;
        private static bool _ACTION_GNSS_CAPABILITIES_CHANGEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#EXTRA_GNSS_CAPABILITIES"/>
        /// </summary>
        public static Java.Lang.String EXTRA_GNSS_CAPABILITIES { get { if (!_EXTRA_GNSS_CAPABILITIESReady) { _EXTRA_GNSS_CAPABILITIESContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_GNSS_CAPABILITIES"); _EXTRA_GNSS_CAPABILITIESReady = true; } return _EXTRA_GNSS_CAPABILITIESContent; } }
        private static Java.Lang.String _EXTRA_GNSS_CAPABILITIESContent = default;
        private static bool _EXTRA_GNSS_CAPABILITIESReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#EXTRA_LOCATION_ENABLED"/>
        /// </summary>
        public static Java.Lang.String EXTRA_LOCATION_ENABLED { get { if (!_EXTRA_LOCATION_ENABLEDReady) { _EXTRA_LOCATION_ENABLEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_LOCATION_ENABLED"); _EXTRA_LOCATION_ENABLEDReady = true; } return _EXTRA_LOCATION_ENABLEDContent; } }
        private static Java.Lang.String _EXTRA_LOCATION_ENABLEDContent = default;
        private static bool _EXTRA_LOCATION_ENABLEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#EXTRA_PROVIDER_ENABLED"/>
        /// </summary>
        public static Java.Lang.String EXTRA_PROVIDER_ENABLED { get { if (!_EXTRA_PROVIDER_ENABLEDReady) { _EXTRA_PROVIDER_ENABLEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_PROVIDER_ENABLED"); _EXTRA_PROVIDER_ENABLEDReady = true; } return _EXTRA_PROVIDER_ENABLEDContent; } }
        private static Java.Lang.String _EXTRA_PROVIDER_ENABLEDContent = default;
        private static bool _EXTRA_PROVIDER_ENABLEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#EXTRA_PROVIDER_NAME"/>
        /// </summary>
        public static Java.Lang.String EXTRA_PROVIDER_NAME { get { if (!_EXTRA_PROVIDER_NAMEReady) { _EXTRA_PROVIDER_NAMEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_PROVIDER_NAME"); _EXTRA_PROVIDER_NAMEReady = true; } return _EXTRA_PROVIDER_NAMEContent; } }
        private static Java.Lang.String _EXTRA_PROVIDER_NAMEContent = default;
        private static bool _EXTRA_PROVIDER_NAMEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#FUSED_PROVIDER"/>
        /// </summary>
        public static Java.Lang.String FUSED_PROVIDER { get { if (!_FUSED_PROVIDERReady) { _FUSED_PROVIDERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "FUSED_PROVIDER"); _FUSED_PROVIDERReady = true; } return _FUSED_PROVIDERContent; } }
        private static Java.Lang.String _FUSED_PROVIDERContent = default;
        private static bool _FUSED_PROVIDERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#GPS_PROVIDER"/>
        /// </summary>
        public static Java.Lang.String GPS_PROVIDER { get { if (!_GPS_PROVIDERReady) { _GPS_PROVIDERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "GPS_PROVIDER"); _GPS_PROVIDERReady = true; } return _GPS_PROVIDERContent; } }
        private static Java.Lang.String _GPS_PROVIDERContent = default;
        private static bool _GPS_PROVIDERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#KEY_FLUSH_COMPLETE"/>
        /// </summary>
        public static Java.Lang.String KEY_FLUSH_COMPLETE { get { if (!_KEY_FLUSH_COMPLETEReady) { _KEY_FLUSH_COMPLETEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_FLUSH_COMPLETE"); _KEY_FLUSH_COMPLETEReady = true; } return _KEY_FLUSH_COMPLETEContent; } }
        private static Java.Lang.String _KEY_FLUSH_COMPLETEContent = default;
        private static bool _KEY_FLUSH_COMPLETEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#KEY_LOCATION_CHANGED"/>
        /// </summary>
        public static Java.Lang.String KEY_LOCATION_CHANGED { get { if (!_KEY_LOCATION_CHANGEDReady) { _KEY_LOCATION_CHANGEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_LOCATION_CHANGED"); _KEY_LOCATION_CHANGEDReady = true; } return _KEY_LOCATION_CHANGEDContent; } }
        private static Java.Lang.String _KEY_LOCATION_CHANGEDContent = default;
        private static bool _KEY_LOCATION_CHANGEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#KEY_LOCATIONS"/>
        /// </summary>
        public static Java.Lang.String KEY_LOCATIONS { get { if (!_KEY_LOCATIONSReady) { _KEY_LOCATIONSContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_LOCATIONS"); _KEY_LOCATIONSReady = true; } return _KEY_LOCATIONSContent; } }
        private static Java.Lang.String _KEY_LOCATIONSContent = default;
        private static bool _KEY_LOCATIONSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#KEY_PROVIDER_ENABLED"/>
        /// </summary>
        public static Java.Lang.String KEY_PROVIDER_ENABLED { get { if (!_KEY_PROVIDER_ENABLEDReady) { _KEY_PROVIDER_ENABLEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_PROVIDER_ENABLED"); _KEY_PROVIDER_ENABLEDReady = true; } return _KEY_PROVIDER_ENABLEDContent; } }
        private static Java.Lang.String _KEY_PROVIDER_ENABLEDContent = default;
        private static bool _KEY_PROVIDER_ENABLEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#KEY_PROXIMITY_ENTERING"/>
        /// </summary>
        public static Java.Lang.String KEY_PROXIMITY_ENTERING { get { if (!_KEY_PROXIMITY_ENTERINGReady) { _KEY_PROXIMITY_ENTERINGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_PROXIMITY_ENTERING"); _KEY_PROXIMITY_ENTERINGReady = true; } return _KEY_PROXIMITY_ENTERINGContent; } }
        private static Java.Lang.String _KEY_PROXIMITY_ENTERINGContent = default;
        private static bool _KEY_PROXIMITY_ENTERINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#KEY_STATUS_CHANGED"/>
        /// </summary>
        [global::System.Obsolete()]
        public static Java.Lang.String KEY_STATUS_CHANGED { get { if (!_KEY_STATUS_CHANGEDReady) { _KEY_STATUS_CHANGEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_STATUS_CHANGED"); _KEY_STATUS_CHANGEDReady = true; } return _KEY_STATUS_CHANGEDContent; } }
        private static Java.Lang.String _KEY_STATUS_CHANGEDContent = default;
        private static bool _KEY_STATUS_CHANGEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#MODE_CHANGED_ACTION"/>
        /// </summary>
        public static Java.Lang.String MODE_CHANGED_ACTION { get { if (!_MODE_CHANGED_ACTIONReady) { _MODE_CHANGED_ACTIONContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "MODE_CHANGED_ACTION"); _MODE_CHANGED_ACTIONReady = true; } return _MODE_CHANGED_ACTIONContent; } }
        private static Java.Lang.String _MODE_CHANGED_ACTIONContent = default;
        private static bool _MODE_CHANGED_ACTIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#NETWORK_PROVIDER"/>
        /// </summary>
        public static Java.Lang.String NETWORK_PROVIDER { get { if (!_NETWORK_PROVIDERReady) { _NETWORK_PROVIDERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "NETWORK_PROVIDER"); _NETWORK_PROVIDERReady = true; } return _NETWORK_PROVIDERContent; } }
        private static Java.Lang.String _NETWORK_PROVIDERContent = default;
        private static bool _NETWORK_PROVIDERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#PASSIVE_PROVIDER"/>
        /// </summary>
        public static Java.Lang.String PASSIVE_PROVIDER { get { if (!_PASSIVE_PROVIDERReady) { _PASSIVE_PROVIDERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "PASSIVE_PROVIDER"); _PASSIVE_PROVIDERReady = true; } return _PASSIVE_PROVIDERContent; } }
        private static Java.Lang.String _PASSIVE_PROVIDERContent = default;
        private static bool _PASSIVE_PROVIDERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#PROVIDERS_CHANGED_ACTION"/>
        /// </summary>
        public static Java.Lang.String PROVIDERS_CHANGED_ACTION { get { if (!_PROVIDERS_CHANGED_ACTIONReady) { _PROVIDERS_CHANGED_ACTIONContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "PROVIDERS_CHANGED_ACTION"); _PROVIDERS_CHANGED_ACTIONReady = true; } return _PROVIDERS_CHANGED_ACTIONContent; } }
        private static Java.Lang.String _PROVIDERS_CHANGED_ACTIONContent = default;
        private static bool _PROVIDERS_CHANGED_ACTIONReady = false; // this is used because in case of generics 
    
        #endregion
    
        #region Static methods
    
        #endregion
    
        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#getGnssCapabilities()"/>
        /// </summary>
        /// <returns><see cref="Android.Location.GnssCapabilities"/></returns>
        public Android.Location.GnssCapabilities GetGnssCapabilities()
        {
            return IExecuteWithSignature<Android.Location.GnssCapabilities>("getGnssCapabilities", "()Landroid/location/GnssCapabilities;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#getGpsStatus(android.location.GpsStatus)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Location.GpsStatus"/></param>
        /// <returns><see cref="Android.Location.GpsStatus"/></returns>
        [global::System.Obsolete()]
        public Android.Location.GpsStatus GetGpsStatus(Android.Location.GpsStatus arg0)
        {
            return IExecuteWithSignature<Android.Location.GpsStatus>("getGpsStatus", "(Landroid/location/GpsStatus;)Landroid/location/GpsStatus;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#getLastKnownLocation(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Android.Location.Location"/></returns>
        public Android.Location.Location GetLastKnownLocation(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<Android.Location.Location>("getLastKnownLocation", "(Ljava/lang/String;)Landroid/location/Location;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#getProvider(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Android.Location.LocationProvider"/></returns>
        [global::System.Obsolete()]
        public Android.Location.LocationProvider GetProvider(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<Android.Location.LocationProvider>("getProvider", "(Ljava/lang/String;)Landroid/location/LocationProvider;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#getProviderProperties(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Android.Location.Provider.ProviderProperties"/></returns>
        public Android.Location.Provider.ProviderProperties GetProviderProperties(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<Android.Location.Provider.ProviderProperties>("getProviderProperties", "(Ljava/lang/String;)Landroid/location/provider/ProviderProperties;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#addGpsStatusListener(android.location.GpsStatus.Listener)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Location.GpsStatus.Listener"/></param>
        /// <returns><see cref="bool"/></returns>
        [global::System.Obsolete()]
        public bool AddGpsStatusListener(Android.Location.GpsStatus.Listener arg0)
        {
            return IExecuteWithSignature<bool>("addGpsStatusListener", "(Landroid/location/GpsStatus$Listener;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#addNmeaListener(android.location.GpsStatus.NmeaListener)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Location.GpsStatus.NmeaListener"/></param>
        /// <returns><see cref="bool"/></returns>
        [global::System.Obsolete()]
        public bool AddNmeaListener(Android.Location.GpsStatus.NmeaListener arg0)
        {
            return IExecuteWithSignature<bool>("addNmeaListener", "(Landroid/location/GpsStatus$NmeaListener;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#addNmeaListener(android.location.OnNmeaMessageListener,android.os.Handler)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Location.OnNmeaMessageListener"/></param>
        /// <param name="arg1"><see cref="Android.Os.Handler"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool AddNmeaListener(Android.Location.OnNmeaMessageListener arg0, Android.Os.Handler arg1)
        {
            return IExecute<bool>("addNmeaListener", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#addNmeaListener(android.location.OnNmeaMessageListener)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Location.OnNmeaMessageListener"/></param>
        /// <returns><see cref="bool"/></returns>
        [global::System.Obsolete()]
        public bool AddNmeaListener(Android.Location.OnNmeaMessageListener arg0)
        {
            return IExecuteWithSignature<bool>("addNmeaListener", "(Landroid/location/OnNmeaMessageListener;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#addNmeaListener(java.util.concurrent.Executor,android.location.OnNmeaMessageListener)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Concurrent.Executor"/></param>
        /// <param name="arg1"><see cref="Android.Location.OnNmeaMessageListener"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool AddNmeaListener(Java.Util.Concurrent.Executor arg0, Android.Location.OnNmeaMessageListener arg1)
        {
            return IExecute<bool>("addNmeaListener", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#hasProvider(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool HasProvider(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<bool>("hasProvider", "(Ljava/lang/String;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#isLocationEnabled()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsLocationEnabled()
        {
            return IExecuteWithSignature<bool>("isLocationEnabled", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#isProviderEnabled(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool IsProviderEnabled(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<bool>("isProviderEnabled", "(Ljava/lang/String;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#registerAntennaInfoListener(java.util.concurrent.Executor,android.location.GnssAntennaInfo.Listener)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Concurrent.Executor"/></param>
        /// <param name="arg1"><see cref="Android.Location.GnssAntennaInfo.Listener"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool RegisterAntennaInfoListener(Java.Util.Concurrent.Executor arg0, Android.Location.GnssAntennaInfo.Listener arg1)
        {
            return IExecute<bool>("registerAntennaInfoListener", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#registerGnssMeasurementsCallback(android.location.GnssMeasurementRequest,java.util.concurrent.Executor,android.location.GnssMeasurementsEvent.Callback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Location.GnssMeasurementRequest"/></param>
        /// <param name="arg1"><see cref="Java.Util.Concurrent.Executor"/></param>
        /// <param name="arg2"><see cref="Android.Location.GnssMeasurementsEvent.Callback"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool RegisterGnssMeasurementsCallback(Android.Location.GnssMeasurementRequest arg0, Java.Util.Concurrent.Executor arg1, Android.Location.GnssMeasurementsEvent.Callback arg2)
        {
            return IExecute<bool>("registerGnssMeasurementsCallback", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#registerGnssMeasurementsCallback(android.location.GnssMeasurementsEvent.Callback,android.os.Handler)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Location.GnssMeasurementsEvent.Callback"/></param>
        /// <param name="arg1"><see cref="Android.Os.Handler"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool RegisterGnssMeasurementsCallback(Android.Location.GnssMeasurementsEvent.Callback arg0, Android.Os.Handler arg1)
        {
            return IExecute<bool>("registerGnssMeasurementsCallback", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#registerGnssMeasurementsCallback(android.location.GnssMeasurementsEvent.Callback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Location.GnssMeasurementsEvent.Callback"/></param>
        /// <returns><see cref="bool"/></returns>
        [global::System.Obsolete()]
        public bool RegisterGnssMeasurementsCallback(Android.Location.GnssMeasurementsEvent.Callback arg0)
        {
            return IExecuteWithSignature<bool>("registerGnssMeasurementsCallback", "(Landroid/location/GnssMeasurementsEvent$Callback;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#registerGnssMeasurementsCallback(java.util.concurrent.Executor,android.location.GnssMeasurementsEvent.Callback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Concurrent.Executor"/></param>
        /// <param name="arg1"><see cref="Android.Location.GnssMeasurementsEvent.Callback"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool RegisterGnssMeasurementsCallback(Java.Util.Concurrent.Executor arg0, Android.Location.GnssMeasurementsEvent.Callback arg1)
        {
            return IExecute<bool>("registerGnssMeasurementsCallback", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#registerGnssNavigationMessageCallback(android.location.GnssNavigationMessage.Callback,android.os.Handler)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Location.GnssNavigationMessage.Callback"/></param>
        /// <param name="arg1"><see cref="Android.Os.Handler"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool RegisterGnssNavigationMessageCallback(Android.Location.GnssNavigationMessage.Callback arg0, Android.Os.Handler arg1)
        {
            return IExecute<bool>("registerGnssNavigationMessageCallback", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#registerGnssNavigationMessageCallback(android.location.GnssNavigationMessage.Callback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Location.GnssNavigationMessage.Callback"/></param>
        /// <returns><see cref="bool"/></returns>
        [global::System.Obsolete()]
        public bool RegisterGnssNavigationMessageCallback(Android.Location.GnssNavigationMessage.Callback arg0)
        {
            return IExecuteWithSignature<bool>("registerGnssNavigationMessageCallback", "(Landroid/location/GnssNavigationMessage$Callback;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#registerGnssNavigationMessageCallback(java.util.concurrent.Executor,android.location.GnssNavigationMessage.Callback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Concurrent.Executor"/></param>
        /// <param name="arg1"><see cref="Android.Location.GnssNavigationMessage.Callback"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool RegisterGnssNavigationMessageCallback(Java.Util.Concurrent.Executor arg0, Android.Location.GnssNavigationMessage.Callback arg1)
        {
            return IExecute<bool>("registerGnssNavigationMessageCallback", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#registerGnssStatusCallback(android.location.GnssStatus.Callback,android.os.Handler)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Location.GnssStatus.Callback"/></param>
        /// <param name="arg1"><see cref="Android.Os.Handler"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool RegisterGnssStatusCallback(Android.Location.GnssStatus.Callback arg0, Android.Os.Handler arg1)
        {
            return IExecute<bool>("registerGnssStatusCallback", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#registerGnssStatusCallback(android.location.GnssStatus.Callback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Location.GnssStatus.Callback"/></param>
        /// <returns><see cref="bool"/></returns>
        [global::System.Obsolete()]
        public bool RegisterGnssStatusCallback(Android.Location.GnssStatus.Callback arg0)
        {
            return IExecuteWithSignature<bool>("registerGnssStatusCallback", "(Landroid/location/GnssStatus$Callback;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#registerGnssStatusCallback(java.util.concurrent.Executor,android.location.GnssStatus.Callback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Concurrent.Executor"/></param>
        /// <param name="arg1"><see cref="Android.Location.GnssStatus.Callback"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool RegisterGnssStatusCallback(Java.Util.Concurrent.Executor arg0, Android.Location.GnssStatus.Callback arg1)
        {
            return IExecute<bool>("registerGnssStatusCallback", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="Android.Os.Bundle"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool SendExtraCommand(Java.Lang.String arg0, Java.Lang.String arg1, Android.Os.Bundle arg2)
        {
            return IExecute<bool>("sendExtraCommand", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#getGnssYearOfHardware()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetGnssYearOfHardware()
        {
            return IExecuteWithSignature<int>("getGnssYearOfHardware", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#getBestProvider(android.location.Criteria,boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Location.Criteria"/></param>
        /// <param name="arg1"><see cref="bool"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        [global::System.Obsolete()]
        public Java.Lang.String GetBestProvider(Android.Location.Criteria arg0, bool arg1)
        {
            return IExecute<Java.Lang.String>("getBestProvider", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#getGnssHardwareModelName()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetGnssHardwareModelName()
        {
            return IExecuteWithSignature<Java.Lang.String>("getGnssHardwareModelName", "()Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#getGnssAntennaInfos()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.List"/></returns>
        public Java.Util.List<Android.Location.GnssAntennaInfo> GetGnssAntennaInfos()
        {
            return IExecuteWithSignature<Java.Util.List<Android.Location.GnssAntennaInfo>>("getGnssAntennaInfos", "()Ljava/util/List;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#getAllProviders()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.List"/></returns>
        public Java.Util.List<Java.Lang.String> GetAllProviders()
        {
            return IExecuteWithSignature<Java.Util.List<Java.Lang.String>>("getAllProviders", "()Ljava/util/List;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#getProviders(android.location.Criteria,boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Location.Criteria"/></param>
        /// <param name="arg1"><see cref="bool"/></param>
        /// <returns><see cref="Java.Util.List"/></returns>
        [global::System.Obsolete()]
        public Java.Util.List<Java.Lang.String> GetProviders(Android.Location.Criteria arg0, bool arg1)
        {
            return IExecute<Java.Util.List<Java.Lang.String>>("getProviders", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#getProviders(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        /// <returns><see cref="Java.Util.List"/></returns>
        public Java.Util.List<Java.Lang.String> GetProviders(bool arg0)
        {
            return IExecuteWithSignature<Java.Util.List<Java.Lang.String>>("getProviders", "(Z)Ljava/util/List;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#addProximityAlert(double,double,float,long,android.app.PendingIntent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="double"/></param>
        /// <param name="arg1"><see cref="double"/></param>
        /// <param name="arg2"><see cref="float"/></param>
        /// <param name="arg3"><see cref="long"/></param>
        /// <param name="arg4"><see cref="Android.App.PendingIntent"/></param>
        public void AddProximityAlert(double arg0, double arg1, float arg2, long arg3, Android.App.PendingIntent arg4)
        {
            IExecute("addProximityAlert", arg0, arg1, arg2, arg3, arg4);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#addTestProvider(java.lang.String,android.location.provider.ProviderProperties,java.util.Set)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Android.Location.Provider.ProviderProperties"/></param>
        /// <param name="arg2"><see cref="Java.Util.Set"/></param>
        public void AddTestProvider(Java.Lang.String arg0, Android.Location.Provider.ProviderProperties arg1, Java.Util.Set<Java.Lang.String> arg2)
        {
            IExecute("addTestProvider", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#addTestProvider(java.lang.String,android.location.provider.ProviderProperties)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Android.Location.Provider.ProviderProperties"/></param>
        public void AddTestProvider(Java.Lang.String arg0, Android.Location.Provider.ProviderProperties arg1)
        {
            IExecute("addTestProvider", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#addTestProvider(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="bool"/></param>
        /// <param name="arg2"><see cref="bool"/></param>
        /// <param name="arg3"><see cref="bool"/></param>
        /// <param name="arg4"><see cref="bool"/></param>
        /// <param name="arg5"><see cref="bool"/></param>
        /// <param name="arg6"><see cref="bool"/></param>
        /// <param name="arg7"><see cref="bool"/></param>
        /// <param name="arg8"><see cref="int"/></param>
        /// <param name="arg9"><see cref="int"/></param>
        public void AddTestProvider(Java.Lang.String arg0, bool arg1, bool arg2, bool arg3, bool arg4, bool arg5, bool arg6, bool arg7, int arg8, int arg9)
        {
            IExecute("addTestProvider", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#clearTestProviderEnabled(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        [global::System.Obsolete()]
        public void ClearTestProviderEnabled(Java.Lang.String arg0)
        {
            IExecuteWithSignature("clearTestProviderEnabled", "(Ljava/lang/String;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#clearTestProviderLocation(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        [global::System.Obsolete()]
        public void ClearTestProviderLocation(Java.Lang.String arg0)
        {
            IExecuteWithSignature("clearTestProviderLocation", "(Ljava/lang/String;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#clearTestProviderStatus(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        [global::System.Obsolete()]
        public void ClearTestProviderStatus(Java.Lang.String arg0)
        {
            IExecuteWithSignature("clearTestProviderStatus", "(Ljava/lang/String;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#getCurrentLocation(java.lang.String,android.location.LocationRequest,android.os.CancellationSignal,java.util.concurrent.Executor,java.util.function.Consumer)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Android.Location.LocationRequest"/></param>
        /// <param name="arg2"><see cref="Android.Os.CancellationSignal"/></param>
        /// <param name="arg3"><see cref="Java.Util.Concurrent.Executor"/></param>
        /// <param name="arg4"><see cref="Java.Util.Function.Consumer"/></param>
        public void GetCurrentLocation(Java.Lang.String arg0, Android.Location.LocationRequest arg1, Android.Os.CancellationSignal arg2, Java.Util.Concurrent.Executor arg3, Java.Util.Function.Consumer<Android.Location.Location> arg4)
        {
            IExecute("getCurrentLocation", arg0, arg1, arg2, arg3, arg4);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#getCurrentLocation(java.lang.String,android.os.CancellationSignal,java.util.concurrent.Executor,java.util.function.Consumer)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Android.Os.CancellationSignal"/></param>
        /// <param name="arg2"><see cref="Java.Util.Concurrent.Executor"/></param>
        /// <param name="arg3"><see cref="Java.Util.Function.Consumer"/></param>
        public void GetCurrentLocation(Java.Lang.String arg0, Android.Os.CancellationSignal arg1, Java.Util.Concurrent.Executor arg2, Java.Util.Function.Consumer<Android.Location.Location> arg3)
        {
            IExecute("getCurrentLocation", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#removeGpsStatusListener(android.location.GpsStatus.Listener)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Location.GpsStatus.Listener"/></param>
        [global::System.Obsolete()]
        public void RemoveGpsStatusListener(Android.Location.GpsStatus.Listener arg0)
        {
            IExecuteWithSignature("removeGpsStatusListener", "(Landroid/location/GpsStatus$Listener;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#removeNmeaListener(android.location.GpsStatus.NmeaListener)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Location.GpsStatus.NmeaListener"/></param>
        [global::System.Obsolete()]
        public void RemoveNmeaListener(Android.Location.GpsStatus.NmeaListener arg0)
        {
            IExecuteWithSignature("removeNmeaListener", "(Landroid/location/GpsStatus$NmeaListener;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#removeNmeaListener(android.location.OnNmeaMessageListener)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Location.OnNmeaMessageListener"/></param>
        public void RemoveNmeaListener(Android.Location.OnNmeaMessageListener arg0)
        {
            IExecuteWithSignature("removeNmeaListener", "(Landroid/location/OnNmeaMessageListener;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#removeProximityAlert(android.app.PendingIntent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.App.PendingIntent"/></param>
        public void RemoveProximityAlert(Android.App.PendingIntent arg0)
        {
            IExecuteWithSignature("removeProximityAlert", "(Landroid/app/PendingIntent;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#removeTestProvider(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        public void RemoveTestProvider(Java.Lang.String arg0)
        {
            IExecuteWithSignature("removeTestProvider", "(Ljava/lang/String;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#removeUpdates(android.app.PendingIntent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.App.PendingIntent"/></param>
        public void RemoveUpdates(Android.App.PendingIntent arg0)
        {
            IExecuteWithSignature("removeUpdates", "(Landroid/app/PendingIntent;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#removeUpdates(android.location.LocationListener)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Location.LocationListener"/></param>
        public void RemoveUpdates(Android.Location.LocationListener arg0)
        {
            IExecuteWithSignature("removeUpdates", "(Landroid/location/LocationListener;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#requestFlush(java.lang.String,android.app.PendingIntent,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Android.App.PendingIntent"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        public void RequestFlush(Java.Lang.String arg0, Android.App.PendingIntent arg1, int arg2)
        {
            IExecute("requestFlush", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#requestFlush(java.lang.String,android.location.LocationListener,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Android.Location.LocationListener"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        public void RequestFlush(Java.Lang.String arg0, Android.Location.LocationListener arg1, int arg2)
        {
            IExecute("requestFlush", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#requestLocationUpdates(java.lang.String,android.location.LocationRequest,android.app.PendingIntent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Android.Location.LocationRequest"/></param>
        /// <param name="arg2"><see cref="Android.App.PendingIntent"/></param>
        public void RequestLocationUpdates(Java.Lang.String arg0, Android.Location.LocationRequest arg1, Android.App.PendingIntent arg2)
        {
            IExecute("requestLocationUpdates", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#requestLocationUpdates(java.lang.String,android.location.LocationRequest,java.util.concurrent.Executor,android.location.LocationListener)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Android.Location.LocationRequest"/></param>
        /// <param name="arg2"><see cref="Java.Util.Concurrent.Executor"/></param>
        /// <param name="arg3"><see cref="Android.Location.LocationListener"/></param>
        public void RequestLocationUpdates(Java.Lang.String arg0, Android.Location.LocationRequest arg1, Java.Util.Concurrent.Executor arg2, Android.Location.LocationListener arg3)
        {
            IExecute("requestLocationUpdates", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#requestLocationUpdates(java.lang.String,long,float,android.app.PendingIntent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="long"/></param>
        /// <param name="arg2"><see cref="float"/></param>
        /// <param name="arg3"><see cref="Android.App.PendingIntent"/></param>
        public void RequestLocationUpdates(Java.Lang.String arg0, long arg1, float arg2, Android.App.PendingIntent arg3)
        {
            IExecute("requestLocationUpdates", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="long"/></param>
        /// <param name="arg2"><see cref="float"/></param>
        /// <param name="arg3"><see cref="Android.Location.LocationListener"/></param>
        /// <param name="arg4"><see cref="Android.Os.Looper"/></param>
        public void RequestLocationUpdates(Java.Lang.String arg0, long arg1, float arg2, Android.Location.LocationListener arg3, Android.Os.Looper arg4)
        {
            IExecute("requestLocationUpdates", arg0, arg1, arg2, arg3, arg4);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="long"/></param>
        /// <param name="arg2"><see cref="float"/></param>
        /// <param name="arg3"><see cref="Android.Location.LocationListener"/></param>
        public void RequestLocationUpdates(Java.Lang.String arg0, long arg1, float arg2, Android.Location.LocationListener arg3)
        {
            IExecute("requestLocationUpdates", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#requestLocationUpdates(java.lang.String,long,float,java.util.concurrent.Executor,android.location.LocationListener)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="long"/></param>
        /// <param name="arg2"><see cref="float"/></param>
        /// <param name="arg3"><see cref="Java.Util.Concurrent.Executor"/></param>
        /// <param name="arg4"><see cref="Android.Location.LocationListener"/></param>
        public void RequestLocationUpdates(Java.Lang.String arg0, long arg1, float arg2, Java.Util.Concurrent.Executor arg3, Android.Location.LocationListener arg4)
        {
            IExecute("requestLocationUpdates", arg0, arg1, arg2, arg3, arg4);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#requestLocationUpdates(long,float,android.location.Criteria,android.app.PendingIntent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <param name="arg1"><see cref="float"/></param>
        /// <param name="arg2"><see cref="Android.Location.Criteria"/></param>
        /// <param name="arg3"><see cref="Android.App.PendingIntent"/></param>
        [global::System.Obsolete()]
        public void RequestLocationUpdates(long arg0, float arg1, Android.Location.Criteria arg2, Android.App.PendingIntent arg3)
        {
            IExecute("requestLocationUpdates", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#requestLocationUpdates(long,float,android.location.Criteria,android.location.LocationListener,android.os.Looper)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <param name="arg1"><see cref="float"/></param>
        /// <param name="arg2"><see cref="Android.Location.Criteria"/></param>
        /// <param name="arg3"><see cref="Android.Location.LocationListener"/></param>
        /// <param name="arg4"><see cref="Android.Os.Looper"/></param>
        [global::System.Obsolete()]
        public void RequestLocationUpdates(long arg0, float arg1, Android.Location.Criteria arg2, Android.Location.LocationListener arg3, Android.Os.Looper arg4)
        {
            IExecute("requestLocationUpdates", arg0, arg1, arg2, arg3, arg4);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#requestLocationUpdates(long,float,android.location.Criteria,java.util.concurrent.Executor,android.location.LocationListener)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <param name="arg1"><see cref="float"/></param>
        /// <param name="arg2"><see cref="Android.Location.Criteria"/></param>
        /// <param name="arg3"><see cref="Java.Util.Concurrent.Executor"/></param>
        /// <param name="arg4"><see cref="Android.Location.LocationListener"/></param>
        [global::System.Obsolete()]
        public void RequestLocationUpdates(long arg0, float arg1, Android.Location.Criteria arg2, Java.Util.Concurrent.Executor arg3, Android.Location.LocationListener arg4)
        {
            IExecute("requestLocationUpdates", arg0, arg1, arg2, arg3, arg4);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#requestSingleUpdate(android.location.Criteria,android.app.PendingIntent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Location.Criteria"/></param>
        /// <param name="arg1"><see cref="Android.App.PendingIntent"/></param>
        [global::System.Obsolete()]
        public void RequestSingleUpdate(Android.Location.Criteria arg0, Android.App.PendingIntent arg1)
        {
            IExecute("requestSingleUpdate", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#requestSingleUpdate(android.location.Criteria,android.location.LocationListener,android.os.Looper)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Location.Criteria"/></param>
        /// <param name="arg1"><see cref="Android.Location.LocationListener"/></param>
        /// <param name="arg2"><see cref="Android.Os.Looper"/></param>
        [global::System.Obsolete()]
        public void RequestSingleUpdate(Android.Location.Criteria arg0, Android.Location.LocationListener arg1, Android.Os.Looper arg2)
        {
            IExecute("requestSingleUpdate", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#requestSingleUpdate(java.lang.String,android.app.PendingIntent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Android.App.PendingIntent"/></param>
        [global::System.Obsolete()]
        public void RequestSingleUpdate(Java.Lang.String arg0, Android.App.PendingIntent arg1)
        {
            IExecute("requestSingleUpdate", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#requestSingleUpdate(java.lang.String,android.location.LocationListener,android.os.Looper)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Android.Location.LocationListener"/></param>
        /// <param name="arg2"><see cref="Android.Os.Looper"/></param>
        [global::System.Obsolete()]
        public void RequestSingleUpdate(Java.Lang.String arg0, Android.Location.LocationListener arg1, Android.Os.Looper arg2)
        {
            IExecute("requestSingleUpdate", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#setTestProviderEnabled(java.lang.String,boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="bool"/></param>
        public void SetTestProviderEnabled(Java.Lang.String arg0, bool arg1)
        {
            IExecute("setTestProviderEnabled", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#setTestProviderLocation(java.lang.String,android.location.Location)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Android.Location.Location"/></param>
        public void SetTestProviderLocation(Java.Lang.String arg0, Android.Location.Location arg1)
        {
            IExecute("setTestProviderLocation", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#setTestProviderStatus(java.lang.String,int,android.os.Bundle,long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="Android.Os.Bundle"/></param>
        /// <param name="arg3"><see cref="long"/></param>
        [global::System.Obsolete()]
        public void SetTestProviderStatus(Java.Lang.String arg0, int arg1, Android.Os.Bundle arg2, long arg3)
        {
            IExecute("setTestProviderStatus", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#unregisterAntennaInfoListener(android.location.GnssAntennaInfo.Listener)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Location.GnssAntennaInfo.Listener"/></param>
        public void UnregisterAntennaInfoListener(Android.Location.GnssAntennaInfo.Listener arg0)
        {
            IExecuteWithSignature("unregisterAntennaInfoListener", "(Landroid/location/GnssAntennaInfo$Listener;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#unregisterGnssMeasurementsCallback(android.location.GnssMeasurementsEvent.Callback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Location.GnssMeasurementsEvent.Callback"/></param>
        public void UnregisterGnssMeasurementsCallback(Android.Location.GnssMeasurementsEvent.Callback arg0)
        {
            IExecuteWithSignature("unregisterGnssMeasurementsCallback", "(Landroid/location/GnssMeasurementsEvent$Callback;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#unregisterGnssNavigationMessageCallback(android.location.GnssNavigationMessage.Callback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Location.GnssNavigationMessage.Callback"/></param>
        public void UnregisterGnssNavigationMessageCallback(Android.Location.GnssNavigationMessage.Callback arg0)
        {
            IExecuteWithSignature("unregisterGnssNavigationMessageCallback", "(Landroid/location/GnssNavigationMessage$Callback;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/LocationManager.html#unregisterGnssStatusCallback(android.location.GnssStatus.Callback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Location.GnssStatus.Callback"/></param>
        public void UnregisterGnssStatusCallback(Android.Location.GnssStatus.Callback arg0)
        {
            IExecuteWithSignature("unregisterGnssStatusCallback", "(Landroid/location/GnssStatus$Callback;)V", arg0);
        }
    
        #endregion
    
        #region Nested classes
    
        #endregion
    
        // TODO: complete the class
    }
    #endregion
}