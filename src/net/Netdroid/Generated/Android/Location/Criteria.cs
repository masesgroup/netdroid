/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.1.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Location
{
    #region Criteria
    public partial class Criteria
    {
        #region Constructors
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/Criteria.html#%3Cinit%3E(android.location.Criteria)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Location.Criteria"/></param>
        [System.Obsolete()]
        public Criteria(Android.Location.Criteria arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/Criteria.html#CREATOR"/>
        /// </summary>
        [System.Obsolete()]
        public static Android.Os.Parcelable.Creator CREATOR { get { if (!_CREATORReady) { _CREATORContent = SGetField<Android.Os.Parcelable.Creator>(LocalBridgeClazz, "CREATOR"); _CREATORReady = true; } return _CREATORContent; } }
        private static Android.Os.Parcelable.Creator _CREATORContent = default;
        private static bool _CREATORReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/Criteria.html#ACCURACY_COARSE"/>
        /// </summary>
        [System.Obsolete()]
        public static int ACCURACY_COARSE { get { if (!_ACCURACY_COARSEReady) { _ACCURACY_COARSEContent = SGetField<int>(LocalBridgeClazz, "ACCURACY_COARSE"); _ACCURACY_COARSEReady = true; } return _ACCURACY_COARSEContent; } }
        private static int _ACCURACY_COARSEContent = default;
        private static bool _ACCURACY_COARSEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/Criteria.html#ACCURACY_FINE"/>
        /// </summary>
        [System.Obsolete()]
        public static int ACCURACY_FINE { get { if (!_ACCURACY_FINEReady) { _ACCURACY_FINEContent = SGetField<int>(LocalBridgeClazz, "ACCURACY_FINE"); _ACCURACY_FINEReady = true; } return _ACCURACY_FINEContent; } }
        private static int _ACCURACY_FINEContent = default;
        private static bool _ACCURACY_FINEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/Criteria.html#ACCURACY_HIGH"/>
        /// </summary>
        [System.Obsolete()]
        public static int ACCURACY_HIGH { get { if (!_ACCURACY_HIGHReady) { _ACCURACY_HIGHContent = SGetField<int>(LocalBridgeClazz, "ACCURACY_HIGH"); _ACCURACY_HIGHReady = true; } return _ACCURACY_HIGHContent; } }
        private static int _ACCURACY_HIGHContent = default;
        private static bool _ACCURACY_HIGHReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/Criteria.html#ACCURACY_LOW"/>
        /// </summary>
        [System.Obsolete()]
        public static int ACCURACY_LOW { get { if (!_ACCURACY_LOWReady) { _ACCURACY_LOWContent = SGetField<int>(LocalBridgeClazz, "ACCURACY_LOW"); _ACCURACY_LOWReady = true; } return _ACCURACY_LOWContent; } }
        private static int _ACCURACY_LOWContent = default;
        private static bool _ACCURACY_LOWReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/Criteria.html#ACCURACY_MEDIUM"/>
        /// </summary>
        [System.Obsolete()]
        public static int ACCURACY_MEDIUM { get { if (!_ACCURACY_MEDIUMReady) { _ACCURACY_MEDIUMContent = SGetField<int>(LocalBridgeClazz, "ACCURACY_MEDIUM"); _ACCURACY_MEDIUMReady = true; } return _ACCURACY_MEDIUMContent; } }
        private static int _ACCURACY_MEDIUMContent = default;
        private static bool _ACCURACY_MEDIUMReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/Criteria.html#NO_REQUIREMENT"/>
        /// </summary>
        [System.Obsolete()]
        public static int NO_REQUIREMENT { get { if (!_NO_REQUIREMENTReady) { _NO_REQUIREMENTContent = SGetField<int>(LocalBridgeClazz, "NO_REQUIREMENT"); _NO_REQUIREMENTReady = true; } return _NO_REQUIREMENTContent; } }
        private static int _NO_REQUIREMENTContent = default;
        private static bool _NO_REQUIREMENTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/Criteria.html#POWER_HIGH"/>
        /// </summary>
        [System.Obsolete()]
        public static int POWER_HIGH { get { if (!_POWER_HIGHReady) { _POWER_HIGHContent = SGetField<int>(LocalBridgeClazz, "POWER_HIGH"); _POWER_HIGHReady = true; } return _POWER_HIGHContent; } }
        private static int _POWER_HIGHContent = default;
        private static bool _POWER_HIGHReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/Criteria.html#POWER_LOW"/>
        /// </summary>
        [System.Obsolete()]
        public static int POWER_LOW { get { if (!_POWER_LOWReady) { _POWER_LOWContent = SGetField<int>(LocalBridgeClazz, "POWER_LOW"); _POWER_LOWReady = true; } return _POWER_LOWContent; } }
        private static int _POWER_LOWContent = default;
        private static bool _POWER_LOWReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/Criteria.html#POWER_MEDIUM"/>
        /// </summary>
        [System.Obsolete()]
        public static int POWER_MEDIUM { get { if (!_POWER_MEDIUMReady) { _POWER_MEDIUMContent = SGetField<int>(LocalBridgeClazz, "POWER_MEDIUM"); _POWER_MEDIUMReady = true; } return _POWER_MEDIUMContent; } }
        private static int _POWER_MEDIUMContent = default;
        private static bool _POWER_MEDIUMReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/Criteria.html#getAccuracy()"/> <see href="https://developer.android.com/reference/android/location/Criteria.html#setAccuracy(int)"/>
        /// </summary>
        [System.Obsolete()]
        public int Accuracy
        {
            get { return IExecuteWithSignature<int>("getAccuracy", "()I"); } set { IExecuteWithSignature("setAccuracy", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/Criteria.html#getBearingAccuracy()"/> <see href="https://developer.android.com/reference/android/location/Criteria.html#setBearingAccuracy(int)"/>
        /// </summary>
        [System.Obsolete()]
        public int BearingAccuracy
        {
            get { return IExecuteWithSignature<int>("getBearingAccuracy", "()I"); } set { IExecuteWithSignature("setBearingAccuracy", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/Criteria.html#getHorizontalAccuracy()"/> <see href="https://developer.android.com/reference/android/location/Criteria.html#setHorizontalAccuracy(int)"/>
        /// </summary>
        [System.Obsolete()]
        public int HorizontalAccuracy
        {
            get { return IExecuteWithSignature<int>("getHorizontalAccuracy", "()I"); } set { IExecuteWithSignature("setHorizontalAccuracy", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/Criteria.html#getPowerRequirement()"/> <see href="https://developer.android.com/reference/android/location/Criteria.html#setPowerRequirement(int)"/>
        /// </summary>
        [System.Obsolete()]
        public int PowerRequirement
        {
            get { return IExecuteWithSignature<int>("getPowerRequirement", "()I"); } set { IExecuteWithSignature("setPowerRequirement", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/Criteria.html#getSpeedAccuracy()"/> <see href="https://developer.android.com/reference/android/location/Criteria.html#setSpeedAccuracy(int)"/>
        /// </summary>
        [System.Obsolete()]
        public int SpeedAccuracy
        {
            get { return IExecuteWithSignature<int>("getSpeedAccuracy", "()I"); } set { IExecuteWithSignature("setSpeedAccuracy", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/Criteria.html#getVerticalAccuracy()"/> <see href="https://developer.android.com/reference/android/location/Criteria.html#setVerticalAccuracy(int)"/>
        /// </summary>
        [System.Obsolete()]
        public int VerticalAccuracy
        {
            get { return IExecuteWithSignature<int>("getVerticalAccuracy", "()I"); } set { IExecuteWithSignature("setVerticalAccuracy", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/Criteria.html#isAltitudeRequired()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        [System.Obsolete()]
        public bool IsAltitudeRequired()
        {
            return IExecuteWithSignature<bool>("isAltitudeRequired", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/Criteria.html#isBearingRequired()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        [System.Obsolete()]
        public bool IsBearingRequired()
        {
            return IExecuteWithSignature<bool>("isBearingRequired", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/Criteria.html#isCostAllowed()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        [System.Obsolete()]
        public bool IsCostAllowed()
        {
            return IExecuteWithSignature<bool>("isCostAllowed", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/Criteria.html#isSpeedRequired()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        [System.Obsolete()]
        public bool IsSpeedRequired()
        {
            return IExecuteWithSignature<bool>("isSpeedRequired", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/Criteria.html#describeContents()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        [System.Obsolete()]
        public int DescribeContents()
        {
            return IExecuteWithSignature<int>("describeContents", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/Criteria.html#setAltitudeRequired(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        [System.Obsolete()]
        public void SetAltitudeRequired(bool arg0)
        {
            IExecuteWithSignature("setAltitudeRequired", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/Criteria.html#setBearingRequired(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        [System.Obsolete()]
        public void SetBearingRequired(bool arg0)
        {
            IExecuteWithSignature("setBearingRequired", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/Criteria.html#setCostAllowed(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        [System.Obsolete()]
        public void SetCostAllowed(bool arg0)
        {
            IExecuteWithSignature("setCostAllowed", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/Criteria.html#setSpeedRequired(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        [System.Obsolete()]
        public void SetSpeedRequired(bool arg0)
        {
            IExecuteWithSignature("setSpeedRequired", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/location/Criteria.html#writeToParcel(android.os.Parcel,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.Parcel"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        [System.Obsolete()]
        public void WriteToParcel(Android.Os.Parcel arg0, int arg1)
        {
            IExecute("writeToParcel", arg0, arg1);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}