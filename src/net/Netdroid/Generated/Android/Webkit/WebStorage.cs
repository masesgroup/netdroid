/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.9.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Webkit
{
    #region WebStorage declaration
    /// <summary>
    /// <see href="https://developer.android.com/reference/android/webkit/WebStorage.html"/>
    /// </summary>
    public partial class WebStorage : MASES.JCOBridge.C2JBridge.JVMBridgeBase<WebStorage>
    {
        const string _bridgeClassName = "android.webkit.WebStorage";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public WebStorage() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public WebStorage(params object[] args) : base(args) { }

        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class
        #region Origin declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/webkit/WebStorage.Origin.html"/>
        /// </summary>
        public partial class Origin : MASES.JCOBridge.C2JBridge.JVMBridgeBase<Origin>
        {
            const string _bridgeClassName = "android.webkit.WebStorage$Origin";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public Origin() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public Origin(params object[] args) : base(args) { }

            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;

            // TODO: complete the class

        }
        #endregion

        #region QuotaUpdater declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/webkit/WebStorage.QuotaUpdater.html"/>
        /// </summary>
        [global::System.Obsolete()]
        public partial class QuotaUpdater : MASES.JCOBridge.C2JBridge.JVMBridgeBase<QuotaUpdater>
        {
            const string _bridgeClassName = "android.webkit.WebStorage$QuotaUpdater";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            [global::System.Obsolete("QuotaUpdater class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public QuotaUpdater() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            [global::System.Obsolete("QuotaUpdater class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public QuotaUpdater(params object[] args) : base(args) { }

            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => true;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => true;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;

            // TODO: complete the class

        }
        #endregion

    
    }
    #endregion

    #region WebStorage implementation
    public partial class WebStorage
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/webkit/WebStorage.html#getInstance()"/>
        /// </summary>
        /// <returns><see cref="Android.Webkit.WebStorage"/></returns>
        public static Android.Webkit.WebStorage GetInstance()
        {
            return SExecuteWithSignature<Android.Webkit.WebStorage>(LocalBridgeClazz, "getInstance", "()Landroid/webkit/WebStorage;");
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/webkit/WebStorage.html#deleteAllData()"/>
        /// </summary>
        public void DeleteAllData()
        {
            IExecuteWithSignature("deleteAllData", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/webkit/WebStorage.html#deleteOrigin(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        public void DeleteOrigin(Java.Lang.String arg0)
        {
            IExecuteWithSignature("deleteOrigin", "(Ljava/lang/String;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/webkit/WebStorage.html#getOrigins(android.webkit.ValueCallback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Webkit.ValueCallback"/></param>
        public void GetOrigins(Android.Webkit.ValueCallback<Java.Util.Map> arg0)
        {
            IExecuteWithSignature("getOrigins", "(Landroid/webkit/ValueCallback;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/webkit/WebStorage.html#getQuotaForOrigin(java.lang.String,android.webkit.ValueCallback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Android.Webkit.ValueCallback"/></param>
        public void GetQuotaForOrigin(Java.Lang.String arg0, Android.Webkit.ValueCallback<Java.Lang.Long> arg1)
        {
            IExecuteWithSignature("getQuotaForOrigin", "(Ljava/lang/String;Landroid/webkit/ValueCallback;)V", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/webkit/WebStorage.html#getUsageForOrigin(java.lang.String,android.webkit.ValueCallback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Android.Webkit.ValueCallback"/></param>
        public void GetUsageForOrigin(Java.Lang.String arg0, Android.Webkit.ValueCallback<Java.Lang.Long> arg1)
        {
            IExecuteWithSignature("getUsageForOrigin", "(Ljava/lang/String;Landroid/webkit/ValueCallback;)V", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/webkit/WebStorage.html#setQuotaForOrigin(java.lang.String,long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="long"/></param>
        [global::System.Obsolete()]
        public void SetQuotaForOrigin(Java.Lang.String arg0, long arg1)
        {
            IExecuteWithSignature("setQuotaForOrigin", "(Ljava/lang/String;J)V", arg0, arg1);
        }

        #endregion

        #region Nested classes
        #region Origin implementation
        public partial class Origin
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/webkit/WebStorage.Origin.html#getOrigin()"/>
            /// </summary>
            /// <returns><see cref="Java.Lang.String"/></returns>
            public Java.Lang.String GetOrigin()
            {
                return IExecuteWithSignature<Java.Lang.String>("getOrigin", "()Ljava/lang/String;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/webkit/WebStorage.Origin.html#getQuota()"/>
            /// </summary>
            /// <returns><see cref="long"/></returns>
            public long GetQuota()
            {
                return IExecuteWithSignature<long>("getQuota", "()J");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/webkit/WebStorage.Origin.html#getUsage()"/>
            /// </summary>
            /// <returns><see cref="long"/></returns>
            public long GetUsage()
            {
                return IExecuteWithSignature<long>("getUsage", "()J");
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region QuotaUpdater implementation
        public partial class QuotaUpdater
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/webkit/WebStorage.QuotaUpdater.html#updateQuota(long)"/>
            /// </summary>
            /// <param name="arg0"><see cref="long"/></param>
            [global::System.Obsolete()]
            public void UpdateQuota(long arg0)
            {
                IExecuteWithSignature("updateQuota", "(J)V", arg0);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}