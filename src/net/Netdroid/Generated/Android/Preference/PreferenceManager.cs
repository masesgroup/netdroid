/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.4.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Preference
{
    #region PreferenceManager
    public partial class PreferenceManager
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/preference/PreferenceManager.html#KEY_HAS_SET_DEFAULT_VALUES"/>
        /// </summary>
        [global::System.Obsolete()]
        public static Java.Lang.String KEY_HAS_SET_DEFAULT_VALUES { get { if (!_KEY_HAS_SET_DEFAULT_VALUESReady) { _KEY_HAS_SET_DEFAULT_VALUESContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_HAS_SET_DEFAULT_VALUES"); _KEY_HAS_SET_DEFAULT_VALUESReady = true; } return _KEY_HAS_SET_DEFAULT_VALUESContent; } }
        private static Java.Lang.String _KEY_HAS_SET_DEFAULT_VALUESContent = default;
        private static bool _KEY_HAS_SET_DEFAULT_VALUESReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/preference/PreferenceManager.html#METADATA_KEY_PREFERENCES"/>
        /// </summary>
        [global::System.Obsolete()]
        public static Java.Lang.String METADATA_KEY_PREFERENCES { get { if (!_METADATA_KEY_PREFERENCESReady) { _METADATA_KEY_PREFERENCESContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "METADATA_KEY_PREFERENCES"); _METADATA_KEY_PREFERENCESReady = true; } return _METADATA_KEY_PREFERENCESContent; } }
        private static Java.Lang.String _METADATA_KEY_PREFERENCESContent = default;
        private static bool _METADATA_KEY_PREFERENCESReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/preference/PreferenceManager.html#getDefaultSharedPreferences(android.content.Context)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        /// <returns><see cref="Android.Content.SharedPreferences"/></returns>
        [global::System.Obsolete()]
        public static Android.Content.SharedPreferences GetDefaultSharedPreferences(Android.Content.Context arg0)
        {
            return SExecuteWithSignature<Android.Content.SharedPreferences>(LocalBridgeClazz, "getDefaultSharedPreferences", "(Landroid/content/Context;)Landroid/content/SharedPreferences;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/preference/PreferenceManager.html#getDefaultSharedPreferencesName(android.content.Context)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        [global::System.Obsolete()]
        public static Java.Lang.String GetDefaultSharedPreferencesName(Android.Content.Context arg0)
        {
            return SExecuteWithSignature<Java.Lang.String>(LocalBridgeClazz, "getDefaultSharedPreferencesName", "(Landroid/content/Context;)Ljava/lang/String;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/preference/PreferenceManager.html#setDefaultValues(android.content.Context,int,boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="bool"/></param>
        [global::System.Obsolete()]
        public static void SetDefaultValues(Android.Content.Context arg0, int arg1, bool arg2)
        {
            SExecute(LocalBridgeClazz, "setDefaultValues", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/preference/PreferenceManager.html#setDefaultValues(android.content.Context,java.lang.String,int,int,boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <param name="arg3"><see cref="int"/></param>
        /// <param name="arg4"><see cref="bool"/></param>
        [global::System.Obsolete()]
        public static void SetDefaultValues(Android.Content.Context arg0, Java.Lang.String arg1, int arg2, int arg3, bool arg4)
        {
            SExecute(LocalBridgeClazz, "setDefaultValues", arg0, arg1, arg2, arg3, arg4);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/preference/PreferenceManager.html#getSharedPreferences()"/>
        /// </summary>
        /// <returns><see cref="Android.Content.SharedPreferences"/></returns>
        [global::System.Obsolete()]
        public Android.Content.SharedPreferences GetSharedPreferences()
        {
            return IExecuteWithSignature<Android.Content.SharedPreferences>("getSharedPreferences", "()Landroid/content/SharedPreferences;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/preference/PreferenceManager.html#findPreference(java.lang.CharSequence)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.CharSequence"/></param>
        /// <returns><see cref="Android.Preference.Preference"/></returns>
        [global::System.Obsolete()]
        public Android.Preference.Preference FindPreference(Java.Lang.CharSequence arg0)
        {
            return IExecuteWithSignature<Android.Preference.Preference>("findPreference", "(Ljava/lang/CharSequence;)Landroid/preference/Preference;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/preference/PreferenceManager.html#getPreferenceDataStore()"/>
        /// </summary>
        /// <returns><see cref="Android.Preference.PreferenceDataStore"/></returns>
        [global::System.Obsolete()]
        public Android.Preference.PreferenceDataStore GetPreferenceDataStore()
        {
            return IExecuteWithSignature<Android.Preference.PreferenceDataStore>("getPreferenceDataStore", "()Landroid/preference/PreferenceDataStore;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/preference/PreferenceManager.html#createPreferenceScreen(android.content.Context)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        /// <returns><see cref="Android.Preference.PreferenceScreen"/></returns>
        [global::System.Obsolete()]
        public Android.Preference.PreferenceScreen CreatePreferenceScreen(Android.Content.Context arg0)
        {
            return IExecuteWithSignature<Android.Preference.PreferenceScreen>("createPreferenceScreen", "(Landroid/content/Context;)Landroid/preference/PreferenceScreen;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/preference/PreferenceManager.html#isStorageDefault()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        [global::System.Obsolete()]
        public bool IsStorageDefault()
        {
            return IExecuteWithSignature<bool>("isStorageDefault", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/preference/PreferenceManager.html#isStorageDeviceProtected()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        [global::System.Obsolete()]
        public bool IsStorageDeviceProtected()
        {
            return IExecuteWithSignature<bool>("isStorageDeviceProtected", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/preference/PreferenceManager.html#getSharedPreferencesMode()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        [global::System.Obsolete()]
        public int GetSharedPreferencesMode()
        {
            return IExecuteWithSignature<int>("getSharedPreferencesMode", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/preference/PreferenceManager.html#getSharedPreferencesName()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        [global::System.Obsolete()]
        public Java.Lang.String GetSharedPreferencesName()
        {
            return IExecuteWithSignature<Java.Lang.String>("getSharedPreferencesName", "()Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/preference/PreferenceManager.html#setPreferenceDataStore(android.preference.PreferenceDataStore)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Preference.PreferenceDataStore"/></param>
        [global::System.Obsolete()]
        public void SetPreferenceDataStore(Android.Preference.PreferenceDataStore arg0)
        {
            IExecuteWithSignature("setPreferenceDataStore", "(Landroid/preference/PreferenceDataStore;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/preference/PreferenceManager.html#setSharedPreferencesMode(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        [global::System.Obsolete()]
        public void SetSharedPreferencesMode(int arg0)
        {
            IExecuteWithSignature("setSharedPreferencesMode", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/preference/PreferenceManager.html#setSharedPreferencesName(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        [global::System.Obsolete()]
        public void SetSharedPreferencesName(Java.Lang.String arg0)
        {
            IExecuteWithSignature("setSharedPreferencesName", "(Ljava/lang/String;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/preference/PreferenceManager.html#setStorageDefault()"/>
        /// </summary>
        [global::System.Obsolete()]
        public void SetStorageDefault()
        {
            IExecuteWithSignature("setStorageDefault", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/preference/PreferenceManager.html#setStorageDeviceProtected()"/>
        /// </summary>
        [global::System.Obsolete()]
        public void SetStorageDeviceProtected()
        {
            IExecuteWithSignature("setStorageDeviceProtected", "()V");
        }

        #endregion

        #region Nested classes
        #region OnActivityDestroyListener
        public partial class OnActivityDestroyListener
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// Handlers initializer for <see cref="OnActivityDestroyListener"/>
            /// </summary>
            protected virtual void InitializeHandlers()
            {
                AddEventHandler("onActivityDestroy", new global::System.EventHandler<CLRListenerEventArgs<CLREventData>>(OnActivityDestroyEventHandler));

            }

            /// <summary>
            /// Handler for <see href="https://developer.android.com/reference/android/preference/PreferenceManager.OnActivityDestroyListener.html#onActivityDestroy()"/>
            /// </summary>
            /// <remarks>If <see cref="OnOnActivityDestroy"/> has a value it takes precedence over corresponding class method</remarks>
            public global::System.Action OnOnActivityDestroy { get; set; } = null;

            void OnActivityDestroyEventHandler(object sender, CLRListenerEventArgs<CLREventData> data)
            {
                var methodToExecute = (OnOnActivityDestroy != null) ? OnOnActivityDestroy : OnActivityDestroy;
                methodToExecute.Invoke();
            }

            /// <summary>
            /// <see href="https://developer.android.com/reference/android/preference/PreferenceManager.OnActivityDestroyListener.html#onActivityDestroy()"/>
            /// </summary>
            [global::System.Obsolete()]
            public virtual void OnActivityDestroy()
            {
                
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region OnActivityDestroyListenerDirect
        public partial class OnActivityDestroyListenerDirect
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/preference/PreferenceManager.OnActivityDestroyListener.html#onActivityDestroy()"/>
            /// </summary>
            [global::System.Obsolete()]
            public override void OnActivityDestroy()
            {
                IExecuteWithSignature("onActivityDestroy", "()V");
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region OnActivityResultListener
        public partial class OnActivityResultListener
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// Handlers initializer for <see cref="OnActivityResultListener"/>
            /// </summary>
            protected virtual void InitializeHandlers()
            {
                AddEventHandler("onActivityResult", new global::System.EventHandler<CLRListenerEventArgs<CLREventData<int>>>(OnActivityResultEventHandler));

            }

            /// <summary>
            /// Handler for <see href="https://developer.android.com/reference/android/preference/PreferenceManager.OnActivityResultListener.html#onActivityResult(int,int,android.content.Intent)"/>
            /// </summary>
            /// <remarks>If <see cref="OnOnActivityResult"/> has a value it takes precedence over corresponding class method</remarks>
            public global::System.Func<int, int, Android.Content.Intent, bool> OnOnActivityResult { get; set; } = null;

            void OnActivityResultEventHandler(object sender, CLRListenerEventArgs<CLREventData<int>> data)
            {
                var methodToExecute = (OnOnActivityResult != null) ? OnOnActivityResult : OnActivityResult;
                var executionResult = methodToExecute.Invoke(data.EventData.TypedEventData, data.EventData.GetAt<int>(0), data.EventData.GetAt<Android.Content.Intent>(1));
                data.SetReturnValue(executionResult);
            }

            /// <summary>
            /// <see href="https://developer.android.com/reference/android/preference/PreferenceManager.OnActivityResultListener.html#onActivityResult(int,int,android.content.Intent)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            /// <param name="arg2"><see cref="Android.Content.Intent"/></param>
            /// <returns><see cref="bool"/></returns>
            [global::System.Obsolete()]
            public virtual bool OnActivityResult(int arg0, int arg1, Android.Content.Intent arg2)
            {
                return default;
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region OnActivityResultListenerDirect
        public partial class OnActivityResultListenerDirect
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/preference/PreferenceManager.OnActivityResultListener.html#onActivityResult(int,int,android.content.Intent)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            /// <param name="arg2"><see cref="Android.Content.Intent"/></param>
            /// <returns><see cref="bool"/></returns>
            [global::System.Obsolete()]
            public override bool OnActivityResult(int arg0, int arg1, Android.Content.Intent arg2)
            {
                return IExecute<bool>("onActivityResult", arg0, arg1, arg2);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region OnActivityStopListener
        public partial class OnActivityStopListener
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// Handlers initializer for <see cref="OnActivityStopListener"/>
            /// </summary>
            protected virtual void InitializeHandlers()
            {
                AddEventHandler("onActivityStop", new global::System.EventHandler<CLRListenerEventArgs<CLREventData>>(OnActivityStopEventHandler));

            }

            /// <summary>
            /// Handler for <see href="https://developer.android.com/reference/android/preference/PreferenceManager.OnActivityStopListener.html#onActivityStop()"/>
            /// </summary>
            /// <remarks>If <see cref="OnOnActivityStop"/> has a value it takes precedence over corresponding class method</remarks>
            public global::System.Action OnOnActivityStop { get; set; } = null;

            void OnActivityStopEventHandler(object sender, CLRListenerEventArgs<CLREventData> data)
            {
                var methodToExecute = (OnOnActivityStop != null) ? OnOnActivityStop : OnActivityStop;
                methodToExecute.Invoke();
            }

            /// <summary>
            /// <see href="https://developer.android.com/reference/android/preference/PreferenceManager.OnActivityStopListener.html#onActivityStop()"/>
            /// </summary>
            [global::System.Obsolete()]
            public virtual void OnActivityStop()
            {
                
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region OnActivityStopListenerDirect
        public partial class OnActivityStopListenerDirect
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/preference/PreferenceManager.OnActivityStopListener.html#onActivityStop()"/>
            /// </summary>
            [global::System.Obsolete()]
            public override void OnActivityStop()
            {
                IExecuteWithSignature("onActivityStop", "()V");
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}