/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.1.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Widget
{
    #region ProgressBar
    public partial class ProgressBar
    {
        #region Constructors
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#%3Cinit%3E(android.content.Context,android.util.AttributeSet,int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        /// <param name="arg1"><see cref="Android.Util.AttributeSet"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <param name="arg3"><see cref="int"/></param>
        public ProgressBar(Android.Content.Context arg0, Android.Util.AttributeSet arg1, int arg2, int arg3)
            : base(arg0, arg1, arg2, arg3)
        {
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#%3Cinit%3E(android.content.Context,android.util.AttributeSet,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        /// <param name="arg1"><see cref="Android.Util.AttributeSet"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        public ProgressBar(Android.Content.Context arg0, Android.Util.AttributeSet arg1, int arg2)
            : base(arg0, arg1, arg2)
        {
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#%3Cinit%3E(android.content.Context,android.util.AttributeSet)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        /// <param name="arg1"><see cref="Android.Util.AttributeSet"/></param>
        public ProgressBar(Android.Content.Context arg0, Android.Util.AttributeSet arg1)
            : base(arg0, arg1)
        {
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#%3Cinit%3E(android.content.Context)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        public ProgressBar(Android.Content.Context arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#getCurrentDrawable()"/> 
        /// </summary>
        public Android.Graphics.Drawable.Drawable CurrentDrawable
        {
            get { return IExecuteWithSignature<Android.Graphics.Drawable.Drawable>("getCurrentDrawable", "()Landroid/graphics/drawable/Drawable;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#getIndeterminateDrawable()"/> <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#setIndeterminateDrawable(android.graphics.drawable.Drawable)"/>
        /// </summary>
        public Android.Graphics.Drawable.Drawable IndeterminateDrawable
        {
            get { return IExecuteWithSignature<Android.Graphics.Drawable.Drawable>("getIndeterminateDrawable", "()Landroid/graphics/drawable/Drawable;"); } set { IExecuteWithSignature("setIndeterminateDrawable", "(Landroid/graphics/drawable/Drawable;)V", value); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#getIndeterminateTintBlendMode()"/> <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#setIndeterminateTintBlendMode(android.graphics.BlendMode)"/>
        /// </summary>
        public Android.Graphics.BlendMode IndeterminateTintBlendMode
        {
            get { return IExecuteWithSignature<Android.Graphics.BlendMode>("getIndeterminateTintBlendMode", "()Landroid/graphics/BlendMode;"); } set { IExecuteWithSignature("setIndeterminateTintBlendMode", "(Landroid/graphics/BlendMode;)V", value); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#getIndeterminateTintList()"/> <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#setIndeterminateTintList(android.content.res.ColorStateList)"/>
        /// </summary>
        public Android.Content.Res.ColorStateList IndeterminateTintList
        {
            get { return IExecuteWithSignature<Android.Content.Res.ColorStateList>("getIndeterminateTintList", "()Landroid/content/res/ColorStateList;"); } set { IExecuteWithSignature("setIndeterminateTintList", "(Landroid/content/res/ColorStateList;)V", value); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#getIndeterminateTintMode()"/> <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#setIndeterminateTintMode(android.graphics.PorterDuff.Mode)"/>
        /// </summary>
        public Android.Graphics.PorterDuff.Mode IndeterminateTintMode
        {
            get { return IExecuteWithSignature<Android.Graphics.PorterDuff.Mode>("getIndeterminateTintMode", "()Landroid/graphics/PorterDuff$Mode;"); } set { IExecuteWithSignature("setIndeterminateTintMode", "(Landroid/graphics/PorterDuff$Mode;)V", value); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#getInterpolator()"/> <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#setInterpolator(android.view.animation.Interpolator)"/>
        /// </summary>
        public Android.View.Animation.Interpolator Interpolator
        {
            get { return IExecuteWithSignature<Android.View.Animation.Interpolator>("getInterpolator", "()Landroid/view/animation/Interpolator;"); } set { IExecuteWithSignature("setInterpolator", "(Landroid/view/animation/Interpolator;)V", value); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#getMax()"/> <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#setMax(int)"/>
        /// </summary>
        public int Max
        {
            get { return IExecuteWithSignature<int>("getMax", "()I"); } set { IExecuteWithSignature("setMax", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#getMaxHeight()"/> <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#setMaxHeight(int)"/>
        /// </summary>
        public int MaxHeight
        {
            get { return IExecuteWithSignature<int>("getMaxHeight", "()I"); } set { IExecuteWithSignature("setMaxHeight", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#getMaxWidth()"/> <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#setMaxWidth(int)"/>
        /// </summary>
        public int MaxWidth
        {
            get { return IExecuteWithSignature<int>("getMaxWidth", "()I"); } set { IExecuteWithSignature("setMaxWidth", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#getMin()"/> <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#setMin(int)"/>
        /// </summary>
        public int Min
        {
            get { return IExecuteWithSignature<int>("getMin", "()I"); } set { IExecuteWithSignature("setMin", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#getMinHeight()"/> <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#setMinHeight(int)"/>
        /// </summary>
        public int MinHeight
        {
            get { return IExecuteWithSignature<int>("getMinHeight", "()I"); } set { IExecuteWithSignature("setMinHeight", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#getMinWidth()"/> <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#setMinWidth(int)"/>
        /// </summary>
        public int MinWidth
        {
            get { return IExecuteWithSignature<int>("getMinWidth", "()I"); } set { IExecuteWithSignature("setMinWidth", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#getProgress()"/> <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#setProgress(int)"/>
        /// </summary>
        public int Progress
        {
            get { return IExecuteWithSignature<int>("getProgress", "()I"); } set { IExecuteWithSignature("setProgress", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#getProgressBackgroundTintBlendMode()"/> <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#setProgressBackgroundTintBlendMode(android.graphics.BlendMode)"/>
        /// </summary>
        public Android.Graphics.BlendMode ProgressBackgroundTintBlendMode
        {
            get { return IExecuteWithSignature<Android.Graphics.BlendMode>("getProgressBackgroundTintBlendMode", "()Landroid/graphics/BlendMode;"); } set { IExecuteWithSignature("setProgressBackgroundTintBlendMode", "(Landroid/graphics/BlendMode;)V", value); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#getProgressBackgroundTintList()"/> <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#setProgressBackgroundTintList(android.content.res.ColorStateList)"/>
        /// </summary>
        public Android.Content.Res.ColorStateList ProgressBackgroundTintList
        {
            get { return IExecuteWithSignature<Android.Content.Res.ColorStateList>("getProgressBackgroundTintList", "()Landroid/content/res/ColorStateList;"); } set { IExecuteWithSignature("setProgressBackgroundTintList", "(Landroid/content/res/ColorStateList;)V", value); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#getProgressBackgroundTintMode()"/> <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#setProgressBackgroundTintMode(android.graphics.PorterDuff.Mode)"/>
        /// </summary>
        public Android.Graphics.PorterDuff.Mode ProgressBackgroundTintMode
        {
            get { return IExecuteWithSignature<Android.Graphics.PorterDuff.Mode>("getProgressBackgroundTintMode", "()Landroid/graphics/PorterDuff$Mode;"); } set { IExecuteWithSignature("setProgressBackgroundTintMode", "(Landroid/graphics/PorterDuff$Mode;)V", value); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#getProgressDrawable()"/> <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#setProgressDrawable(android.graphics.drawable.Drawable)"/>
        /// </summary>
        public Android.Graphics.Drawable.Drawable ProgressDrawable
        {
            get { return IExecuteWithSignature<Android.Graphics.Drawable.Drawable>("getProgressDrawable", "()Landroid/graphics/drawable/Drawable;"); } set { IExecuteWithSignature("setProgressDrawable", "(Landroid/graphics/drawable/Drawable;)V", value); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#getProgressTintBlendMode()"/> <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#setProgressTintBlendMode(android.graphics.BlendMode)"/>
        /// </summary>
        public Android.Graphics.BlendMode ProgressTintBlendMode
        {
            get { return IExecuteWithSignature<Android.Graphics.BlendMode>("getProgressTintBlendMode", "()Landroid/graphics/BlendMode;"); } set { IExecuteWithSignature("setProgressTintBlendMode", "(Landroid/graphics/BlendMode;)V", value); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#getProgressTintList()"/> <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#setProgressTintList(android.content.res.ColorStateList)"/>
        /// </summary>
        public Android.Content.Res.ColorStateList ProgressTintList
        {
            get { return IExecuteWithSignature<Android.Content.Res.ColorStateList>("getProgressTintList", "()Landroid/content/res/ColorStateList;"); } set { IExecuteWithSignature("setProgressTintList", "(Landroid/content/res/ColorStateList;)V", value); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#getProgressTintMode()"/> <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#setProgressTintMode(android.graphics.PorterDuff.Mode)"/>
        /// </summary>
        public Android.Graphics.PorterDuff.Mode ProgressTintMode
        {
            get { return IExecuteWithSignature<Android.Graphics.PorterDuff.Mode>("getProgressTintMode", "()Landroid/graphics/PorterDuff$Mode;"); } set { IExecuteWithSignature("setProgressTintMode", "(Landroid/graphics/PorterDuff$Mode;)V", value); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#getSecondaryProgress()"/> <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#setSecondaryProgress(int)"/>
        /// </summary>
        public int SecondaryProgress
        {
            get { return IExecuteWithSignature<int>("getSecondaryProgress", "()I"); } set { IExecuteWithSignature("setSecondaryProgress", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#getSecondaryProgressTintBlendMode()"/> <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#setSecondaryProgressTintBlendMode(android.graphics.BlendMode)"/>
        /// </summary>
        public Android.Graphics.BlendMode SecondaryProgressTintBlendMode
        {
            get { return IExecuteWithSignature<Android.Graphics.BlendMode>("getSecondaryProgressTintBlendMode", "()Landroid/graphics/BlendMode;"); } set { IExecuteWithSignature("setSecondaryProgressTintBlendMode", "(Landroid/graphics/BlendMode;)V", value); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#getSecondaryProgressTintList()"/> <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#setSecondaryProgressTintList(android.content.res.ColorStateList)"/>
        /// </summary>
        public Android.Content.Res.ColorStateList SecondaryProgressTintList
        {
            get { return IExecuteWithSignature<Android.Content.Res.ColorStateList>("getSecondaryProgressTintList", "()Landroid/content/res/ColorStateList;"); } set { IExecuteWithSignature("setSecondaryProgressTintList", "(Landroid/content/res/ColorStateList;)V", value); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#getSecondaryProgressTintMode()"/> <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#setSecondaryProgressTintMode(android.graphics.PorterDuff.Mode)"/>
        /// </summary>
        public Android.Graphics.PorterDuff.Mode SecondaryProgressTintMode
        {
            get { return IExecuteWithSignature<Android.Graphics.PorterDuff.Mode>("getSecondaryProgressTintMode", "()Landroid/graphics/PorterDuff$Mode;"); } set { IExecuteWithSignature("setSecondaryProgressTintMode", "(Landroid/graphics/PorterDuff$Mode;)V", value); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#onSaveInstanceState()"/>
        /// </summary>
        /// <returns><see cref="Android.Os.Parcelable"/></returns>
        public Android.Os.Parcelable OnSaveInstanceState()
        {
            return IExecuteWithSignature<Android.Os.Parcelable>("onSaveInstanceState", "()Landroid/os/Parcelable;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#isAnimating()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsAnimating()
        {
            return IExecuteWithSignature<bool>("isAnimating", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#incrementProgressBy(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void IncrementProgressBy(int arg0)
        {
            IExecuteWithSignature("incrementProgressBy", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#incrementSecondaryProgressBy(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void IncrementSecondaryProgressBy(int arg0)
        {
            IExecuteWithSignature("incrementSecondaryProgressBy", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#isIndeterminate()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsIndeterminate()
        {
            return IExecuteWithSignature<bool>("isIndeterminate", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#setIndeterminate(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetIndeterminate(bool arg0)
        {
            IExecuteWithSignature("setIndeterminate", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#onRestoreInstanceState(android.os.Parcelable)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.Parcelable"/></param>
        public void OnRestoreInstanceState(Android.Os.Parcelable arg0)
        {
            IExecuteWithSignature("onRestoreInstanceState", "(Landroid/os/Parcelable;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#setIndeterminateDrawableTiled(android.graphics.drawable.Drawable)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Graphics.Drawable.Drawable"/></param>
        public void SetIndeterminateDrawableTiled(Android.Graphics.Drawable.Drawable arg0)
        {
            IExecuteWithSignature("setIndeterminateDrawableTiled", "(Landroid/graphics/drawable/Drawable;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#setInterpolator(android.content.Context,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void SetInterpolator(Android.Content.Context arg0, int arg1)
        {
            IExecute("setInterpolator", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#setProgress(int,boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="bool"/></param>
        public void SetProgress(int arg0, bool arg1)
        {
            IExecute("setProgress", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/ProgressBar.html#setProgressDrawableTiled(android.graphics.drawable.Drawable)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Graphics.Drawable.Drawable"/></param>
        public void SetProgressDrawableTiled(Android.Graphics.Drawable.Drawable arg0)
        {
            IExecuteWithSignature("setProgressDrawableTiled", "(Landroid/graphics/drawable/Drawable;)V", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}