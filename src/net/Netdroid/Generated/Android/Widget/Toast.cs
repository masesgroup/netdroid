/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.1.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Widget
{
    #region Toast
    public partial class Toast
    {
        #region Constructors
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toast.html#%3Cinit%3E(android.content.Context)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        public Toast(Android.Content.Context arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toast.html#LENGTH_LONG"/>
        /// </summary>
        public static int LENGTH_LONG { get { if (!_LENGTH_LONGReady) { _LENGTH_LONGContent = SGetField<int>(LocalBridgeClazz, "LENGTH_LONG"); _LENGTH_LONGReady = true; } return _LENGTH_LONGContent; } }
        private static int _LENGTH_LONGContent = default;
        private static bool _LENGTH_LONGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toast.html#LENGTH_SHORT"/>
        /// </summary>
        public static int LENGTH_SHORT { get { if (!_LENGTH_SHORTReady) { _LENGTH_SHORTContent = SGetField<int>(LocalBridgeClazz, "LENGTH_SHORT"); _LENGTH_SHORTReady = true; } return _LENGTH_SHORTContent; } }
        private static int _LENGTH_SHORTContent = default;
        private static bool _LENGTH_SHORTReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toast.html#makeText(android.content.Context,int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <returns><see cref="Android.Widget.Toast"/></returns>
        /// <exception cref="Android.Content.Res.Resources.NotFoundException"/>
        public static Android.Widget.Toast MakeText(Android.Content.Context arg0, int arg1, int arg2)
        {
            return SExecute<Android.Widget.Toast>(LocalBridgeClazz, "makeText", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toast.html#makeText(android.content.Context,java.lang.CharSequence,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        /// <param name="arg1"><see cref="Java.Lang.CharSequence"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <returns><see cref="Android.Widget.Toast"/></returns>
        public static Android.Widget.Toast MakeText(Android.Content.Context arg0, Java.Lang.CharSequence arg1, int arg2)
        {
            return SExecute<Android.Widget.Toast>(LocalBridgeClazz, "makeText", arg0, arg1, arg2);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toast.html#getView()"/>
        /// </summary>
        /// <returns><see cref="Android.View.View"/></returns>
        [global::System.Obsolete()]
        public Android.View.View GetView()
        {
            return IExecuteWithSignature<Android.View.View>("getView", "()Landroid/view/View;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toast.html#getHorizontalMargin()"/>
        /// </summary>
        /// <returns><see cref="float"/></returns>
        public float GetHorizontalMargin()
        {
            return IExecuteWithSignature<float>("getHorizontalMargin", "()F");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toast.html#getVerticalMargin()"/>
        /// </summary>
        /// <returns><see cref="float"/></returns>
        public float GetVerticalMargin()
        {
            return IExecuteWithSignature<float>("getVerticalMargin", "()F");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toast.html#getDuration()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetDuration()
        {
            return IExecuteWithSignature<int>("getDuration", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toast.html#getGravity()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetGravity()
        {
            return IExecuteWithSignature<int>("getGravity", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toast.html#getXOffset()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetXOffset()
        {
            return IExecuteWithSignature<int>("getXOffset", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toast.html#getYOffset()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetYOffset()
        {
            return IExecuteWithSignature<int>("getYOffset", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toast.html#addCallback(android.widget.Toast.Callback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Widget.Toast.Callback"/></param>
        public void AddCallback(Android.Widget.Toast.Callback arg0)
        {
            IExecuteWithSignature("addCallback", "(Landroid/widget/Toast$Callback;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toast.html#cancel()"/>
        /// </summary>
        public void Cancel()
        {
            IExecuteWithSignature("cancel", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toast.html#removeCallback(android.widget.Toast.Callback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Widget.Toast.Callback"/></param>
        public void RemoveCallback(Android.Widget.Toast.Callback arg0)
        {
            IExecuteWithSignature("removeCallback", "(Landroid/widget/Toast$Callback;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toast.html#setDuration(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetDuration(int arg0)
        {
            IExecuteWithSignature("setDuration", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toast.html#setGravity(int,int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        public void SetGravity(int arg0, int arg1, int arg2)
        {
            IExecute("setGravity", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toast.html#setMargin(float,float)"/>
        /// </summary>
        /// <param name="arg0"><see cref="float"/></param>
        /// <param name="arg1"><see cref="float"/></param>
        public void SetMargin(float arg0, float arg1)
        {
            IExecute("setMargin", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toast.html#setText(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetText(int arg0)
        {
            IExecuteWithSignature("setText", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toast.html#setText(java.lang.CharSequence)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.CharSequence"/></param>
        public void SetText(Java.Lang.CharSequence arg0)
        {
            IExecuteWithSignature("setText", "(Ljava/lang/CharSequence;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toast.html#setView(android.view.View)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.View"/></param>
        [global::System.Obsolete()]
        public void SetView(Android.View.View arg0)
        {
            IExecuteWithSignature("setView", "(Landroid/view/View;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toast.html#show()"/>
        /// </summary>
        public void Show()
        {
            IExecuteWithSignature("show", "()V");
        }

        #endregion

        #region Nested classes
        #region Callback
        public partial class Callback
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/widget/Toast.Callback.html#onToastHidden()"/>
            /// </summary>
            public void OnToastHidden()
            {
                IExecuteWithSignature("onToastHidden", "()V");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/widget/Toast.Callback.html#onToastShown()"/>
            /// </summary>
            public void OnToastShown()
            {
                IExecuteWithSignature("onToastShown", "()V");
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}