/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.4.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Widget
{
    #region AnalogClock
    public partial class AnalogClock
    {
        #region Constructors
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/AnalogClock.html#%3Cinit%3E(android.content.Context,android.util.AttributeSet,int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        /// <param name="arg1"><see cref="Android.Util.AttributeSet"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <param name="arg3"><see cref="int"/></param>
        [global::System.Obsolete()]
        public AnalogClock(Android.Content.Context arg0, Android.Util.AttributeSet arg1, int arg2, int arg3)
            : base(arg0, arg1, arg2, arg3)
        {
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/AnalogClock.html#%3Cinit%3E(android.content.Context,android.util.AttributeSet,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        /// <param name="arg1"><see cref="Android.Util.AttributeSet"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        [global::System.Obsolete()]
        public AnalogClock(Android.Content.Context arg0, Android.Util.AttributeSet arg1, int arg2)
            : base(arg0, arg1, arg2)
        {
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/AnalogClock.html#%3Cinit%3E(android.content.Context,android.util.AttributeSet)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        /// <param name="arg1"><see cref="Android.Util.AttributeSet"/></param>
        [global::System.Obsolete()]
        public AnalogClock(Android.Content.Context arg0, Android.Util.AttributeSet arg1)
            : base(arg0, arg1)
        {
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/AnalogClock.html#%3Cinit%3E(android.content.Context)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        [global::System.Obsolete()]
        public AnalogClock(Android.Content.Context arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/AnalogClock.html#getDialTintList()"/>
        /// </summary>
        /// <returns><see cref="Android.Content.Res.ColorStateList"/></returns>
        [global::System.Obsolete()]
        public Android.Content.Res.ColorStateList GetDialTintList()
        {
            return IExecuteWithSignature<Android.Content.Res.ColorStateList>("getDialTintList", "()Landroid/content/res/ColorStateList;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/AnalogClock.html#getHourHandTintList()"/>
        /// </summary>
        /// <returns><see cref="Android.Content.Res.ColorStateList"/></returns>
        [global::System.Obsolete()]
        public Android.Content.Res.ColorStateList GetHourHandTintList()
        {
            return IExecuteWithSignature<Android.Content.Res.ColorStateList>("getHourHandTintList", "()Landroid/content/res/ColorStateList;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/AnalogClock.html#getMinuteHandTintList()"/>
        /// </summary>
        /// <returns><see cref="Android.Content.Res.ColorStateList"/></returns>
        [global::System.Obsolete()]
        public Android.Content.Res.ColorStateList GetMinuteHandTintList()
        {
            return IExecuteWithSignature<Android.Content.Res.ColorStateList>("getMinuteHandTintList", "()Landroid/content/res/ColorStateList;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/AnalogClock.html#getSecondHandTintList()"/>
        /// </summary>
        /// <returns><see cref="Android.Content.Res.ColorStateList"/></returns>
        [global::System.Obsolete()]
        public Android.Content.Res.ColorStateList GetSecondHandTintList()
        {
            return IExecuteWithSignature<Android.Content.Res.ColorStateList>("getSecondHandTintList", "()Landroid/content/res/ColorStateList;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/AnalogClock.html#getDialTintBlendMode()"/>
        /// </summary>
        /// <returns><see cref="Android.Graphics.BlendMode"/></returns>
        [global::System.Obsolete()]
        public Android.Graphics.BlendMode GetDialTintBlendMode()
        {
            return IExecuteWithSignature<Android.Graphics.BlendMode>("getDialTintBlendMode", "()Landroid/graphics/BlendMode;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/AnalogClock.html#getHourHandTintBlendMode()"/>
        /// </summary>
        /// <returns><see cref="Android.Graphics.BlendMode"/></returns>
        [global::System.Obsolete()]
        public Android.Graphics.BlendMode GetHourHandTintBlendMode()
        {
            return IExecuteWithSignature<Android.Graphics.BlendMode>("getHourHandTintBlendMode", "()Landroid/graphics/BlendMode;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/AnalogClock.html#getMinuteHandTintBlendMode()"/>
        /// </summary>
        /// <returns><see cref="Android.Graphics.BlendMode"/></returns>
        [global::System.Obsolete()]
        public Android.Graphics.BlendMode GetMinuteHandTintBlendMode()
        {
            return IExecuteWithSignature<Android.Graphics.BlendMode>("getMinuteHandTintBlendMode", "()Landroid/graphics/BlendMode;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/AnalogClock.html#getSecondHandTintBlendMode()"/>
        /// </summary>
        /// <returns><see cref="Android.Graphics.BlendMode"/></returns>
        [global::System.Obsolete()]
        public Android.Graphics.BlendMode GetSecondHandTintBlendMode()
        {
            return IExecuteWithSignature<Android.Graphics.BlendMode>("getSecondHandTintBlendMode", "()Landroid/graphics/BlendMode;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/AnalogClock.html#getTimeZone()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        [global::System.Obsolete()]
        public Java.Lang.String GetTimeZone()
        {
            return IExecuteWithSignature<Java.Lang.String>("getTimeZone", "()Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/AnalogClock.html#setDial(android.graphics.drawable.Icon)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Graphics.Drawable.Icon"/></param>
        [global::System.Obsolete()]
        public void SetDial(Android.Graphics.Drawable.Icon arg0)
        {
            IExecuteWithSignature("setDial", "(Landroid/graphics/drawable/Icon;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/AnalogClock.html#setDialTintBlendMode(android.graphics.BlendMode)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Graphics.BlendMode"/></param>
        [global::System.Obsolete()]
        public void SetDialTintBlendMode(Android.Graphics.BlendMode arg0)
        {
            IExecuteWithSignature("setDialTintBlendMode", "(Landroid/graphics/BlendMode;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/AnalogClock.html#setDialTintList(android.content.res.ColorStateList)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Res.ColorStateList"/></param>
        [global::System.Obsolete()]
        public void SetDialTintList(Android.Content.Res.ColorStateList arg0)
        {
            IExecuteWithSignature("setDialTintList", "(Landroid/content/res/ColorStateList;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/AnalogClock.html#setHourHand(android.graphics.drawable.Icon)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Graphics.Drawable.Icon"/></param>
        [global::System.Obsolete()]
        public void SetHourHand(Android.Graphics.Drawable.Icon arg0)
        {
            IExecuteWithSignature("setHourHand", "(Landroid/graphics/drawable/Icon;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/AnalogClock.html#setHourHandTintBlendMode(android.graphics.BlendMode)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Graphics.BlendMode"/></param>
        [global::System.Obsolete()]
        public void SetHourHandTintBlendMode(Android.Graphics.BlendMode arg0)
        {
            IExecuteWithSignature("setHourHandTintBlendMode", "(Landroid/graphics/BlendMode;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/AnalogClock.html#setHourHandTintList(android.content.res.ColorStateList)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Res.ColorStateList"/></param>
        [global::System.Obsolete()]
        public void SetHourHandTintList(Android.Content.Res.ColorStateList arg0)
        {
            IExecuteWithSignature("setHourHandTintList", "(Landroid/content/res/ColorStateList;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/AnalogClock.html#setMinuteHand(android.graphics.drawable.Icon)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Graphics.Drawable.Icon"/></param>
        [global::System.Obsolete()]
        public void SetMinuteHand(Android.Graphics.Drawable.Icon arg0)
        {
            IExecuteWithSignature("setMinuteHand", "(Landroid/graphics/drawable/Icon;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/AnalogClock.html#setMinuteHandTintBlendMode(android.graphics.BlendMode)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Graphics.BlendMode"/></param>
        [global::System.Obsolete()]
        public void SetMinuteHandTintBlendMode(Android.Graphics.BlendMode arg0)
        {
            IExecuteWithSignature("setMinuteHandTintBlendMode", "(Landroid/graphics/BlendMode;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/AnalogClock.html#setMinuteHandTintList(android.content.res.ColorStateList)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Res.ColorStateList"/></param>
        [global::System.Obsolete()]
        public void SetMinuteHandTintList(Android.Content.Res.ColorStateList arg0)
        {
            IExecuteWithSignature("setMinuteHandTintList", "(Landroid/content/res/ColorStateList;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/AnalogClock.html#setSecondHand(android.graphics.drawable.Icon)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Graphics.Drawable.Icon"/></param>
        [global::System.Obsolete()]
        public void SetSecondHand(Android.Graphics.Drawable.Icon arg0)
        {
            IExecuteWithSignature("setSecondHand", "(Landroid/graphics/drawable/Icon;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/AnalogClock.html#setSecondHandTintBlendMode(android.graphics.BlendMode)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Graphics.BlendMode"/></param>
        [global::System.Obsolete()]
        public void SetSecondHandTintBlendMode(Android.Graphics.BlendMode arg0)
        {
            IExecuteWithSignature("setSecondHandTintBlendMode", "(Landroid/graphics/BlendMode;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/AnalogClock.html#setSecondHandTintList(android.content.res.ColorStateList)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Res.ColorStateList"/></param>
        [global::System.Obsolete()]
        public void SetSecondHandTintList(Android.Content.Res.ColorStateList arg0)
        {
            IExecuteWithSignature("setSecondHandTintList", "(Landroid/content/res/ColorStateList;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/AnalogClock.html#setTimeZone(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        [global::System.Obsolete()]
        public void SetTimeZone(Java.Lang.String arg0)
        {
            IExecuteWithSignature("setTimeZone", "(Ljava/lang/String;)V", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}