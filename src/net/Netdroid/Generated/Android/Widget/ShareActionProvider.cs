/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.2.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Widget
{
    #region ShareActionProvider
    public partial class ShareActionProvider
    {
        #region Constructors
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/ShareActionProvider.html#%3Cinit%3E(android.content.Context)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        public ShareActionProvider(Android.Content.Context arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/ShareActionProvider.html#DEFAULT_SHARE_HISTORY_FILE_NAME"/>
        /// </summary>
        public static Java.Lang.String DEFAULT_SHARE_HISTORY_FILE_NAME { get { if (!_DEFAULT_SHARE_HISTORY_FILE_NAMEReady) { _DEFAULT_SHARE_HISTORY_FILE_NAMEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "DEFAULT_SHARE_HISTORY_FILE_NAME"); _DEFAULT_SHARE_HISTORY_FILE_NAMEReady = true; } return _DEFAULT_SHARE_HISTORY_FILE_NAMEContent; } }
        private static Java.Lang.String _DEFAULT_SHARE_HISTORY_FILE_NAMEContent = default;
        private static bool _DEFAULT_SHARE_HISTORY_FILE_NAMEReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/ShareActionProvider.html#setOnShareTargetSelectedListener(android.widget.ShareActionProvider.OnShareTargetSelectedListener)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Widget.ShareActionProvider.OnShareTargetSelectedListener"/></param>
        public void SetOnShareTargetSelectedListener(Android.Widget.ShareActionProvider.OnShareTargetSelectedListener arg0)
        {
            IExecuteWithSignature("setOnShareTargetSelectedListener", "(Landroid/widget/ShareActionProvider$OnShareTargetSelectedListener;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/ShareActionProvider.html#setShareHistoryFileName(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        public void SetShareHistoryFileName(Java.Lang.String arg0)
        {
            IExecuteWithSignature("setShareHistoryFileName", "(Ljava/lang/String;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/ShareActionProvider.html#setShareIntent(android.content.Intent)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
        public void SetShareIntent(Android.Content.Intent arg0)
        {
            IExecuteWithSignature("setShareIntent", "(Landroid/content/Intent;)V", arg0);
        }

        #endregion

        #region Nested classes
        #region OnShareTargetSelectedListener
        public partial class OnShareTargetSelectedListener
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// Handlers initializer for <see cref="OnShareTargetSelectedListener"/>
            /// </summary>
            protected virtual void InitializeHandlers()
            {
                AddEventHandler("onShareTargetSelected", new global::System.EventHandler<CLRListenerEventArgs<CLREventData<Android.Widget.ShareActionProvider>>>(OnShareTargetSelectedEventHandler));

            }

            /// <summary>
            /// Handler for <see href="https://developer.android.com/reference/android/widget/ShareActionProvider.OnShareTargetSelectedListener.html#onShareTargetSelected(android.widget.ShareActionProvider,android.content.Intent)"/>
            /// </summary>
            /// <remarks>If <see cref="OnOnShareTargetSelected"/> has a value it takes precedence over corresponding class method</remarks>
            public global::System.Func<Android.Widget.ShareActionProvider, Android.Content.Intent, bool> OnOnShareTargetSelected { get; set; } = null;

            void OnShareTargetSelectedEventHandler(object sender, CLRListenerEventArgs<CLREventData<Android.Widget.ShareActionProvider>> data)
            {
                var methodToExecute = (OnOnShareTargetSelected != null) ? OnOnShareTargetSelected : OnShareTargetSelected;
                var executionResult = methodToExecute.Invoke(data.EventData.TypedEventData, data.EventData.GetAt<Android.Content.Intent>(0));
                data.SetReturnValue(executionResult);
            }

            /// <summary>
            /// <see href="https://developer.android.com/reference/android/widget/ShareActionProvider.OnShareTargetSelectedListener.html#onShareTargetSelected(android.widget.ShareActionProvider,android.content.Intent)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Widget.ShareActionProvider"/></param>
            /// <param name="arg1"><see cref="Android.Content.Intent"/></param>
            /// <returns><see cref="bool"/></returns>
            public virtual bool OnShareTargetSelected(Android.Widget.ShareActionProvider arg0, Android.Content.Intent arg1)
            {
                return default;
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region OnShareTargetSelectedListenerDirect
        public partial class OnShareTargetSelectedListenerDirect
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/widget/ShareActionProvider.OnShareTargetSelectedListener.html#onShareTargetSelected(android.widget.ShareActionProvider,android.content.Intent)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Widget.ShareActionProvider"/></param>
            /// <param name="arg1"><see cref="Android.Content.Intent"/></param>
            /// <returns><see cref="bool"/></returns>
            public override bool OnShareTargetSelected(Android.Widget.ShareActionProvider arg0, Android.Content.Intent arg1)
            {
                return IExecute<bool>("onShareTargetSelected", arg0, arg1);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}