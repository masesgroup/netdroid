/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.1.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Widget
{
    #region Toolbar
    public partial class Toolbar
    {
        #region Constructors
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#%3Cinit%3E(android.content.Context,android.util.AttributeSet,int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        /// <param name="arg1"><see cref="Android.Util.AttributeSet"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <param name="arg3"><see cref="int"/></param>
        public Toolbar(Android.Content.Context arg0, Android.Util.AttributeSet arg1, int arg2, int arg3)
            : base(arg0, arg1, arg2, arg3)
        {
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#%3Cinit%3E(android.content.Context,android.util.AttributeSet,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        /// <param name="arg1"><see cref="Android.Util.AttributeSet"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        public Toolbar(Android.Content.Context arg0, Android.Util.AttributeSet arg1, int arg2)
            : base(arg0, arg1, arg2)
        {
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#%3Cinit%3E(android.content.Context,android.util.AttributeSet)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        /// <param name="arg1"><see cref="Android.Util.AttributeSet"/></param>
        public Toolbar(Android.Content.Context arg0, Android.Util.AttributeSet arg1)
            : base(arg0, arg1)
        {
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#%3Cinit%3E(android.content.Context)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        public Toolbar(Android.Content.Context arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#getCollapseContentDescription()"/> 
        /// </summary>
        public Java.Lang.CharSequence CollapseContentDescription
        {
            get { return IExecuteWithSignature<Java.Lang.CharSequence>("getCollapseContentDescription", "()Ljava/lang/CharSequence;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#getCollapseIcon()"/> 
        /// </summary>
        public Android.Graphics.Drawable.Drawable CollapseIcon
        {
            get { return IExecuteWithSignature<Android.Graphics.Drawable.Drawable>("getCollapseIcon", "()Landroid/graphics/drawable/Drawable;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#getContentInsetEnd()"/> 
        /// </summary>
        public int ContentInsetEnd
        {
            get { return IExecuteWithSignature<int>("getContentInsetEnd", "()I"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#getContentInsetEndWithActions()"/> <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setContentInsetEndWithActions(int)"/>
        /// </summary>
        public int ContentInsetEndWithActions
        {
            get { return IExecuteWithSignature<int>("getContentInsetEndWithActions", "()I"); } set { IExecuteWithSignature("setContentInsetEndWithActions", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#getContentInsetLeft()"/> 
        /// </summary>
        public int ContentInsetLeft
        {
            get { return IExecuteWithSignature<int>("getContentInsetLeft", "()I"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#getContentInsetRight()"/> 
        /// </summary>
        public int ContentInsetRight
        {
            get { return IExecuteWithSignature<int>("getContentInsetRight", "()I"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#getContentInsetStart()"/> 
        /// </summary>
        public int ContentInsetStart
        {
            get { return IExecuteWithSignature<int>("getContentInsetStart", "()I"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#getContentInsetStartWithNavigation()"/> <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setContentInsetStartWithNavigation(int)"/>
        /// </summary>
        public int ContentInsetStartWithNavigation
        {
            get { return IExecuteWithSignature<int>("getContentInsetStartWithNavigation", "()I"); } set { IExecuteWithSignature("setContentInsetStartWithNavigation", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#getCurrentContentInsetEnd()"/> 
        /// </summary>
        public int CurrentContentInsetEnd
        {
            get { return IExecuteWithSignature<int>("getCurrentContentInsetEnd", "()I"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#getCurrentContentInsetLeft()"/> 
        /// </summary>
        public int CurrentContentInsetLeft
        {
            get { return IExecuteWithSignature<int>("getCurrentContentInsetLeft", "()I"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#getCurrentContentInsetRight()"/> 
        /// </summary>
        public int CurrentContentInsetRight
        {
            get { return IExecuteWithSignature<int>("getCurrentContentInsetRight", "()I"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#getCurrentContentInsetStart()"/> 
        /// </summary>
        public int CurrentContentInsetStart
        {
            get { return IExecuteWithSignature<int>("getCurrentContentInsetStart", "()I"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#getLogo()"/> 
        /// </summary>
        public Android.Graphics.Drawable.Drawable Logo
        {
            get { return IExecuteWithSignature<Android.Graphics.Drawable.Drawable>("getLogo", "()Landroid/graphics/drawable/Drawable;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#getLogoDescription()"/> 
        /// </summary>
        public Java.Lang.CharSequence LogoDescription
        {
            get { return IExecuteWithSignature<Java.Lang.CharSequence>("getLogoDescription", "()Ljava/lang/CharSequence;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#getMenu()"/> 
        /// </summary>
        public Android.View.Menu Menu
        {
            get { return IExecuteWithSignature<Android.View.Menu>("getMenu", "()Landroid/view/Menu;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#getNavigationContentDescription()"/> 
        /// </summary>
        public Java.Lang.CharSequence NavigationContentDescription
        {
            get { return IExecuteWithSignature<Java.Lang.CharSequence>("getNavigationContentDescription", "()Ljava/lang/CharSequence;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#getNavigationIcon()"/> 
        /// </summary>
        public Android.Graphics.Drawable.Drawable NavigationIcon
        {
            get { return IExecuteWithSignature<Android.Graphics.Drawable.Drawable>("getNavigationIcon", "()Landroid/graphics/drawable/Drawable;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#getOverflowIcon()"/> <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setOverflowIcon(android.graphics.drawable.Drawable)"/>
        /// </summary>
        public Android.Graphics.Drawable.Drawable OverflowIcon
        {
            get { return IExecuteWithSignature<Android.Graphics.Drawable.Drawable>("getOverflowIcon", "()Landroid/graphics/drawable/Drawable;"); } set { IExecuteWithSignature("setOverflowIcon", "(Landroid/graphics/drawable/Drawable;)V", value); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#getPopupTheme()"/> <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setPopupTheme(int)"/>
        /// </summary>
        public int PopupTheme
        {
            get { return IExecuteWithSignature<int>("getPopupTheme", "()I"); } set { IExecuteWithSignature("setPopupTheme", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#getSubtitle()"/> 
        /// </summary>
        public Java.Lang.CharSequence Subtitle
        {
            get { return IExecuteWithSignature<Java.Lang.CharSequence>("getSubtitle", "()Ljava/lang/CharSequence;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#getTitle()"/> 
        /// </summary>
        public Java.Lang.CharSequence Title
        {
            get { return IExecuteWithSignature<Java.Lang.CharSequence>("getTitle", "()Ljava/lang/CharSequence;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#getTitleMarginBottom()"/> <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setTitleMarginBottom(int)"/>
        /// </summary>
        public int TitleMarginBottom
        {
            get { return IExecuteWithSignature<int>("getTitleMarginBottom", "()I"); } set { IExecuteWithSignature("setTitleMarginBottom", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#getTitleMarginEnd()"/> <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setTitleMarginEnd(int)"/>
        /// </summary>
        public int TitleMarginEnd
        {
            get { return IExecuteWithSignature<int>("getTitleMarginEnd", "()I"); } set { IExecuteWithSignature("setTitleMarginEnd", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#getTitleMarginStart()"/> <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setTitleMarginStart(int)"/>
        /// </summary>
        public int TitleMarginStart
        {
            get { return IExecuteWithSignature<int>("getTitleMarginStart", "()I"); } set { IExecuteWithSignature("setTitleMarginStart", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#getTitleMarginTop()"/> <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setTitleMarginTop(int)"/>
        /// </summary>
        public int TitleMarginTop
        {
            get { return IExecuteWithSignature<int>("getTitleMarginTop", "()I"); } set { IExecuteWithSignature("setTitleMarginTop", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#hasExpandedActionView()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool HasExpandedActionView()
        {
            return IExecuteWithSignature<bool>("hasExpandedActionView", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#hideOverflowMenu()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool HideOverflowMenu()
        {
            return IExecuteWithSignature<bool>("hideOverflowMenu", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#isOverflowMenuShowing()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsOverflowMenuShowing()
        {
            return IExecuteWithSignature<bool>("isOverflowMenuShowing", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#showOverflowMenu()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool ShowOverflowMenu()
        {
            return IExecuteWithSignature<bool>("showOverflowMenu", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#collapseActionView()"/>
        /// </summary>
        public void CollapseActionView()
        {
            IExecuteWithSignature("collapseActionView", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#dismissPopupMenus()"/>
        /// </summary>
        public void DismissPopupMenus()
        {
            IExecuteWithSignature("dismissPopupMenus", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#inflateMenu(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void InflateMenu(int arg0)
        {
            IExecuteWithSignature("inflateMenu", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setCollapseContentDescription(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetCollapseContentDescription(int arg0)
        {
            IExecuteWithSignature("setCollapseContentDescription", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setCollapseContentDescription(java.lang.CharSequence)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.CharSequence"/></param>
        public void SetCollapseContentDescription(Java.Lang.CharSequence arg0)
        {
            IExecuteWithSignature("setCollapseContentDescription", "(Ljava/lang/CharSequence;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setCollapseIcon(android.graphics.drawable.Drawable)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Graphics.Drawable.Drawable"/></param>
        public void SetCollapseIcon(Android.Graphics.Drawable.Drawable arg0)
        {
            IExecuteWithSignature("setCollapseIcon", "(Landroid/graphics/drawable/Drawable;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setCollapseIcon(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetCollapseIcon(int arg0)
        {
            IExecuteWithSignature("setCollapseIcon", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setContentInsetsAbsolute(int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void SetContentInsetsAbsolute(int arg0, int arg1)
        {
            IExecute("setContentInsetsAbsolute", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setContentInsetsRelative(int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void SetContentInsetsRelative(int arg0, int arg1)
        {
            IExecute("setContentInsetsRelative", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setLogo(android.graphics.drawable.Drawable)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Graphics.Drawable.Drawable"/></param>
        public void SetLogo(Android.Graphics.Drawable.Drawable arg0)
        {
            IExecuteWithSignature("setLogo", "(Landroid/graphics/drawable/Drawable;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setLogo(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetLogo(int arg0)
        {
            IExecuteWithSignature("setLogo", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setLogoDescription(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetLogoDescription(int arg0)
        {
            IExecuteWithSignature("setLogoDescription", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setLogoDescription(java.lang.CharSequence)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.CharSequence"/></param>
        public void SetLogoDescription(Java.Lang.CharSequence arg0)
        {
            IExecuteWithSignature("setLogoDescription", "(Ljava/lang/CharSequence;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setNavigationContentDescription(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetNavigationContentDescription(int arg0)
        {
            IExecuteWithSignature("setNavigationContentDescription", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setNavigationContentDescription(java.lang.CharSequence)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.CharSequence"/></param>
        public void SetNavigationContentDescription(Java.Lang.CharSequence arg0)
        {
            IExecuteWithSignature("setNavigationContentDescription", "(Ljava/lang/CharSequence;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setNavigationIcon(android.graphics.drawable.Drawable)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Graphics.Drawable.Drawable"/></param>
        public void SetNavigationIcon(Android.Graphics.Drawable.Drawable arg0)
        {
            IExecuteWithSignature("setNavigationIcon", "(Landroid/graphics/drawable/Drawable;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setNavigationIcon(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetNavigationIcon(int arg0)
        {
            IExecuteWithSignature("setNavigationIcon", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setNavigationOnClickListener(android.view.View.OnClickListener)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.View.OnClickListener"/></param>
        public void SetNavigationOnClickListener(Android.View.View.OnClickListener arg0)
        {
            IExecuteWithSignature("setNavigationOnClickListener", "(Landroid/view/View$OnClickListener;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setOnMenuItemClickListener(android.widget.Toolbar.OnMenuItemClickListener)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Widget.Toolbar.OnMenuItemClickListener"/></param>
        public void SetOnMenuItemClickListener(Android.Widget.Toolbar.OnMenuItemClickListener arg0)
        {
            IExecuteWithSignature("setOnMenuItemClickListener", "(Landroid/widget/Toolbar$OnMenuItemClickListener;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setSubtitle(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetSubtitle(int arg0)
        {
            IExecuteWithSignature("setSubtitle", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setSubtitle(java.lang.CharSequence)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.CharSequence"/></param>
        public void SetSubtitle(Java.Lang.CharSequence arg0)
        {
            IExecuteWithSignature("setSubtitle", "(Ljava/lang/CharSequence;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setSubtitleTextAppearance(android.content.Context,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void SetSubtitleTextAppearance(Android.Content.Context arg0, int arg1)
        {
            IExecute("setSubtitleTextAppearance", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setSubtitleTextColor(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetSubtitleTextColor(int arg0)
        {
            IExecuteWithSignature("setSubtitleTextColor", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setTitle(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetTitle(int arg0)
        {
            IExecuteWithSignature("setTitle", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setTitle(java.lang.CharSequence)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.CharSequence"/></param>
        public void SetTitle(Java.Lang.CharSequence arg0)
        {
            IExecuteWithSignature("setTitle", "(Ljava/lang/CharSequence;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setTitleMargin(int,int,int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <param name="arg3"><see cref="int"/></param>
        public void SetTitleMargin(int arg0, int arg1, int arg2, int arg3)
        {
            IExecute("setTitleMargin", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setTitleTextAppearance(android.content.Context,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void SetTitleTextAppearance(Android.Content.Context arg0, int arg1)
        {
            IExecute("setTitleTextAppearance", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setTitleTextColor(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetTitleTextColor(int arg0)
        {
            IExecuteWithSignature("setTitleTextColor", "(I)V", arg0);
        }

        #endregion

        #region Nested classes
        #region LayoutParams
        public partial class LayoutParams
        {
            #region Constructors
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/widget/Toolbar.LayoutParams.html#%3Cinit%3E(android.app.ActionBar.LayoutParams)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.App.ActionBar.LayoutParams"/></param>
            public LayoutParams(Android.App.ActionBar.LayoutParams arg0)
                : base(arg0)
            {
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/widget/Toolbar.LayoutParams.html#%3Cinit%3E(android.content.Context,android.util.AttributeSet)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Content.Context"/></param>
            /// <param name="arg1"><see cref="Android.Util.AttributeSet"/></param>
            public LayoutParams(Android.Content.Context arg0, Android.Util.AttributeSet arg1)
                : base(arg0, arg1)
            {
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/widget/Toolbar.LayoutParams.html#%3Cinit%3E(android.view.ViewGroup.LayoutParams)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.View.ViewGroup.LayoutParams"/></param>
            public LayoutParams(Android.View.ViewGroup.LayoutParams arg0)
                : base(arg0)
            {
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/widget/Toolbar.LayoutParams.html#%3Cinit%3E(android.view.ViewGroup.MarginLayoutParams)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.View.ViewGroup.MarginLayoutParams"/></param>
            public LayoutParams(Android.View.ViewGroup.MarginLayoutParams arg0)
                : base(arg0)
            {
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/widget/Toolbar.LayoutParams.html#%3Cinit%3E(android.widget.Toolbar.LayoutParams)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Widget.Toolbar.LayoutParams"/></param>
            public LayoutParams(Android.Widget.Toolbar.LayoutParams arg0)
                : base(arg0)
            {
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/widget/Toolbar.LayoutParams.html#%3Cinit%3E(int,int,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            /// <param name="arg2"><see cref="int"/></param>
            public LayoutParams(int arg0, int arg1, int arg2)
                : base(arg0, arg1, arg2)
            {
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/widget/Toolbar.LayoutParams.html#%3Cinit%3E(int,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            public LayoutParams(int arg0, int arg1)
                : base(arg0, arg1)
            {
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/widget/Toolbar.LayoutParams.html#%3Cinit%3E(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            public LayoutParams(int arg0)
                : base(arg0)
            {
            }

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region OnMenuItemClickListener
        public partial class OnMenuItemClickListener
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// Handlers initializer for <see cref="OnMenuItemClickListener"/>
            /// </summary>
            protected virtual void InitializeHandlers()
            {
                AddEventHandler("onMenuItemClick", new System.EventHandler<CLRListenerEventArgs<CLREventData<Android.View.MenuItem>>>(OnMenuItemClickEventHandler));

            }

            /// <summary>
            /// Handler for <see href="https://developer.android.com/reference/android/widget/Toolbar.OnMenuItemClickListener.html#onMenuItemClick(android.view.MenuItem)"/>
            /// </summary>
            /// <remarks>If <see cref="OnOnMenuItemClick"/> has a value it takes precedence over corresponding class method</remarks>
            public System.Func<Android.View.MenuItem, bool> OnOnMenuItemClick { get; set; } = null;

            void OnMenuItemClickEventHandler(object sender, CLRListenerEventArgs<CLREventData<Android.View.MenuItem>> data)
            {
                var methodToExecute = (OnOnMenuItemClick != null) ? OnOnMenuItemClick : OnMenuItemClick;
                var executionResult = methodToExecute.Invoke(data.EventData.TypedEventData);
                data.SetReturnValue(executionResult);
            }

            /// <summary>
            /// <see href="https://developer.android.com/reference/android/widget/Toolbar.OnMenuItemClickListener.html#onMenuItemClick(android.view.MenuItem)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.View.MenuItem"/></param>
            /// <returns><see cref="bool"/></returns>
            public virtual bool OnMenuItemClick(Android.View.MenuItem arg0)
            {
                return default;
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region OnMenuItemClickListenerDirect
        public partial class OnMenuItemClickListenerDirect
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/widget/Toolbar.OnMenuItemClickListener.html#onMenuItemClick(android.view.MenuItem)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.View.MenuItem"/></param>
            /// <returns><see cref="bool"/></returns>
            public override bool OnMenuItemClick(Android.View.MenuItem arg0)
            {
                return IExecuteWithSignature<bool>("onMenuItemClick", "(Landroid/view/MenuItem;)Z", arg0);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}