/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.10.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Widget
{
    #region Toolbar declaration
    /// <summary>
    /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html"/>
    /// </summary>
    public partial class Toolbar : Android.View.ViewGroup
    {
        const string _bridgeClassName = "android.widget.Toolbar";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public Toolbar() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public Toolbar(params object[] args) : base(args) { }
    
        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
    
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;
    
        // TODO: complete the class
        #region LayoutParams declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.LayoutParams.html"/>
        /// </summary>
        public partial class LayoutParams : Android.App.ActionBar.LayoutParams
        {
            const string _bridgeClassName = "android.widget.Toolbar$LayoutParams";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public LayoutParams() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public LayoutParams(params object[] args) : base(args) { }
        
            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
        
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;
        
            // TODO: complete the class
        
        }
        #endregion

        #region OnMenuItemClickListener declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.OnMenuItemClickListener.html"/>
        /// </summary>
        public partial class OnMenuItemClickListener : MASES.JCOBridge.C2JBridge.JVMBridgeListener
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public OnMenuItemClickListener() { InitializeHandlers(); }
        
            const string _bridgeClassName = "org.mases.netdroid.generated.android.widget.Toolbar_OnMenuItemClickListener";
            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
            
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeListener_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
        
        
            // TODO: complete the class
        
        }
        #endregion
        
        #region OnMenuItemClickListenerDirect declaration
        /// <summary>
        /// Direct override of <see cref="OnMenuItemClickListener"/> or its generic type if there is one
        /// </summary>
        public partial class OnMenuItemClickListenerDirect : OnMenuItemClickListener
        {
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeListener_AutoInit.htm"/>
            /// </summary>
            public override bool AutoInit => false;
        
            /// <inheritdoc />
            protected override void InitializeHandlers() { }
        
            const string _bridgeClassName = "android.widget.Toolbar$OnMenuItemClickListener";
            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
        
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeListener_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => true;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => true;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;
        }
        #endregion

    
    }
    #endregion

    #region Toolbar implementation
    public partial class Toolbar
    {
        #region Constructors
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#%3Cinit%3E(android.content.Context,android.util.AttributeSet,int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        /// <param name="arg1"><see cref="Android.Util.AttributeSet"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <param name="arg3"><see cref="int"/></param>
        public Toolbar(Android.Content.Context arg0, Android.Util.AttributeSet arg1, int arg2, int arg3)
            : base(arg0, arg1, arg2, arg3)
        {
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#%3Cinit%3E(android.content.Context,android.util.AttributeSet,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        /// <param name="arg1"><see cref="Android.Util.AttributeSet"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        public Toolbar(Android.Content.Context arg0, Android.Util.AttributeSet arg1, int arg2)
            : base(arg0, arg1, arg2)
        {
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#%3Cinit%3E(android.content.Context,android.util.AttributeSet)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        /// <param name="arg1"><see cref="Android.Util.AttributeSet"/></param>
        public Toolbar(Android.Content.Context arg0, Android.Util.AttributeSet arg1)
            : base(arg0, arg1)
        {
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#%3Cinit%3E(android.content.Context)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        public Toolbar(Android.Content.Context arg0)
            : base(arg0)
        {
        }
    
        #endregion
    
        #region Class/Interface conversion operators
    
        #endregion
    
        #region Fields
    
        #endregion
    
        #region Static methods
    
        #endregion
    
        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#getCollapseIcon()"/>
        /// </summary>
        /// <returns><see cref="Android.Graphics.Drawable.Drawable"/></returns>
        public Android.Graphics.Drawable.Drawable GetCollapseIcon()
        {
            return IExecuteWithSignature<Android.Graphics.Drawable.Drawable>("getCollapseIcon", "()Landroid/graphics/drawable/Drawable;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#getLogo()"/>
        /// </summary>
        /// <returns><see cref="Android.Graphics.Drawable.Drawable"/></returns>
        public Android.Graphics.Drawable.Drawable GetLogo()
        {
            return IExecuteWithSignature<Android.Graphics.Drawable.Drawable>("getLogo", "()Landroid/graphics/drawable/Drawable;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#getNavigationIcon()"/>
        /// </summary>
        /// <returns><see cref="Android.Graphics.Drawable.Drawable"/></returns>
        public Android.Graphics.Drawable.Drawable GetNavigationIcon()
        {
            return IExecuteWithSignature<Android.Graphics.Drawable.Drawable>("getNavigationIcon", "()Landroid/graphics/drawable/Drawable;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#getOverflowIcon()"/>
        /// </summary>
        /// <returns><see cref="Android.Graphics.Drawable.Drawable"/></returns>
        public Android.Graphics.Drawable.Drawable GetOverflowIcon()
        {
            return IExecuteWithSignature<Android.Graphics.Drawable.Drawable>("getOverflowIcon", "()Landroid/graphics/drawable/Drawable;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#getMenu()"/>
        /// </summary>
        /// <returns><see cref="Android.View.Menu"/></returns>
        public Android.View.Menu GetMenu()
        {
            return IExecuteWithSignature<Android.View.Menu>("getMenu", "()Landroid/view/Menu;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#hasExpandedActionView()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool HasExpandedActionView()
        {
            return IExecuteWithSignature<bool>("hasExpandedActionView", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#hideOverflowMenu()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool HideOverflowMenu()
        {
            return IExecuteWithSignature<bool>("hideOverflowMenu", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#isOverflowMenuShowing()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsOverflowMenuShowing()
        {
            return IExecuteWithSignature<bool>("isOverflowMenuShowing", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#showOverflowMenu()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool ShowOverflowMenu()
        {
            return IExecuteWithSignature<bool>("showOverflowMenu", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#getContentInsetEnd()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetContentInsetEnd()
        {
            return IExecuteWithSignature<int>("getContentInsetEnd", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#getContentInsetEndWithActions()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetContentInsetEndWithActions()
        {
            return IExecuteWithSignature<int>("getContentInsetEndWithActions", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#getContentInsetLeft()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetContentInsetLeft()
        {
            return IExecuteWithSignature<int>("getContentInsetLeft", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#getContentInsetRight()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetContentInsetRight()
        {
            return IExecuteWithSignature<int>("getContentInsetRight", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#getContentInsetStart()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetContentInsetStart()
        {
            return IExecuteWithSignature<int>("getContentInsetStart", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#getContentInsetStartWithNavigation()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetContentInsetStartWithNavigation()
        {
            return IExecuteWithSignature<int>("getContentInsetStartWithNavigation", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#getCurrentContentInsetEnd()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetCurrentContentInsetEnd()
        {
            return IExecuteWithSignature<int>("getCurrentContentInsetEnd", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#getCurrentContentInsetLeft()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetCurrentContentInsetLeft()
        {
            return IExecuteWithSignature<int>("getCurrentContentInsetLeft", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#getCurrentContentInsetRight()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetCurrentContentInsetRight()
        {
            return IExecuteWithSignature<int>("getCurrentContentInsetRight", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#getCurrentContentInsetStart()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetCurrentContentInsetStart()
        {
            return IExecuteWithSignature<int>("getCurrentContentInsetStart", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#getPopupTheme()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetPopupTheme()
        {
            return IExecuteWithSignature<int>("getPopupTheme", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#getTitleMarginBottom()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetTitleMarginBottom()
        {
            return IExecuteWithSignature<int>("getTitleMarginBottom", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#getTitleMarginEnd()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetTitleMarginEnd()
        {
            return IExecuteWithSignature<int>("getTitleMarginEnd", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#getTitleMarginStart()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetTitleMarginStart()
        {
            return IExecuteWithSignature<int>("getTitleMarginStart", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#getTitleMarginTop()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetTitleMarginTop()
        {
            return IExecuteWithSignature<int>("getTitleMarginTop", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#getCollapseContentDescription()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.CharSequence"/></returns>
        public Java.Lang.CharSequence GetCollapseContentDescription()
        {
            return IExecuteWithSignature<Java.Lang.CharSequence>("getCollapseContentDescription", "()Ljava/lang/CharSequence;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#getLogoDescription()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.CharSequence"/></returns>
        public Java.Lang.CharSequence GetLogoDescription()
        {
            return IExecuteWithSignature<Java.Lang.CharSequence>("getLogoDescription", "()Ljava/lang/CharSequence;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#getNavigationContentDescription()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.CharSequence"/></returns>
        public Java.Lang.CharSequence GetNavigationContentDescription()
        {
            return IExecuteWithSignature<Java.Lang.CharSequence>("getNavigationContentDescription", "()Ljava/lang/CharSequence;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#getSubtitle()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.CharSequence"/></returns>
        public Java.Lang.CharSequence GetSubtitle()
        {
            return IExecuteWithSignature<Java.Lang.CharSequence>("getSubtitle", "()Ljava/lang/CharSequence;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#getTitle()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.CharSequence"/></returns>
        public Java.Lang.CharSequence GetTitle()
        {
            return IExecuteWithSignature<Java.Lang.CharSequence>("getTitle", "()Ljava/lang/CharSequence;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#collapseActionView()"/>
        /// </summary>
        public void CollapseActionView()
        {
            IExecuteWithSignature("collapseActionView", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#dismissPopupMenus()"/>
        /// </summary>
        public void DismissPopupMenus()
        {
            IExecuteWithSignature("dismissPopupMenus", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#inflateMenu(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void InflateMenu(int arg0)
        {
            IExecuteWithSignature("inflateMenu", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setCollapseContentDescription(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetCollapseContentDescription(int arg0)
        {
            IExecuteWithSignature("setCollapseContentDescription", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setCollapseContentDescription(java.lang.CharSequence)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.CharSequence"/></param>
        public void SetCollapseContentDescription(Java.Lang.CharSequence arg0)
        {
            IExecuteWithSignature("setCollapseContentDescription", "(Ljava/lang/CharSequence;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setCollapseIcon(android.graphics.drawable.Drawable)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Graphics.Drawable.Drawable"/></param>
        public void SetCollapseIcon(Android.Graphics.Drawable.Drawable arg0)
        {
            IExecuteWithSignature("setCollapseIcon", "(Landroid/graphics/drawable/Drawable;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setCollapseIcon(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetCollapseIcon(int arg0)
        {
            IExecuteWithSignature("setCollapseIcon", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setContentInsetEndWithActions(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetContentInsetEndWithActions(int arg0)
        {
            IExecuteWithSignature("setContentInsetEndWithActions", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setContentInsetsAbsolute(int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void SetContentInsetsAbsolute(int arg0, int arg1)
        {
            IExecuteWithSignature("setContentInsetsAbsolute", "(II)V", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setContentInsetsRelative(int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void SetContentInsetsRelative(int arg0, int arg1)
        {
            IExecuteWithSignature("setContentInsetsRelative", "(II)V", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setContentInsetStartWithNavigation(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetContentInsetStartWithNavigation(int arg0)
        {
            IExecuteWithSignature("setContentInsetStartWithNavigation", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setLogo(android.graphics.drawable.Drawable)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Graphics.Drawable.Drawable"/></param>
        public void SetLogo(Android.Graphics.Drawable.Drawable arg0)
        {
            IExecuteWithSignature("setLogo", "(Landroid/graphics/drawable/Drawable;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setLogo(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetLogo(int arg0)
        {
            IExecuteWithSignature("setLogo", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setLogoDescription(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetLogoDescription(int arg0)
        {
            IExecuteWithSignature("setLogoDescription", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setLogoDescription(java.lang.CharSequence)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.CharSequence"/></param>
        public void SetLogoDescription(Java.Lang.CharSequence arg0)
        {
            IExecuteWithSignature("setLogoDescription", "(Ljava/lang/CharSequence;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setNavigationContentDescription(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetNavigationContentDescription(int arg0)
        {
            IExecuteWithSignature("setNavigationContentDescription", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setNavigationContentDescription(java.lang.CharSequence)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.CharSequence"/></param>
        public void SetNavigationContentDescription(Java.Lang.CharSequence arg0)
        {
            IExecuteWithSignature("setNavigationContentDescription", "(Ljava/lang/CharSequence;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setNavigationIcon(android.graphics.drawable.Drawable)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Graphics.Drawable.Drawable"/></param>
        public void SetNavigationIcon(Android.Graphics.Drawable.Drawable arg0)
        {
            IExecuteWithSignature("setNavigationIcon", "(Landroid/graphics/drawable/Drawable;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setNavigationIcon(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetNavigationIcon(int arg0)
        {
            IExecuteWithSignature("setNavigationIcon", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setNavigationOnClickListener(android.view.View.OnClickListener)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.View.OnClickListener"/></param>
        public void SetNavigationOnClickListener(Android.View.View.OnClickListener arg0)
        {
            IExecuteWithSignature("setNavigationOnClickListener", "(Landroid/view/View$OnClickListener;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setOnMenuItemClickListener(android.widget.Toolbar.OnMenuItemClickListener)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Widget.Toolbar.OnMenuItemClickListener"/></param>
        public void SetOnMenuItemClickListener(Android.Widget.Toolbar.OnMenuItemClickListener arg0)
        {
            IExecuteWithSignature("setOnMenuItemClickListener", "(Landroid/widget/Toolbar$OnMenuItemClickListener;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setOverflowIcon(android.graphics.drawable.Drawable)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Graphics.Drawable.Drawable"/></param>
        public void SetOverflowIcon(Android.Graphics.Drawable.Drawable arg0)
        {
            IExecuteWithSignature("setOverflowIcon", "(Landroid/graphics/drawable/Drawable;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setPopupTheme(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetPopupTheme(int arg0)
        {
            IExecuteWithSignature("setPopupTheme", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setSubtitle(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetSubtitle(int arg0)
        {
            IExecuteWithSignature("setSubtitle", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setSubtitle(java.lang.CharSequence)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.CharSequence"/></param>
        public void SetSubtitle(Java.Lang.CharSequence arg0)
        {
            IExecuteWithSignature("setSubtitle", "(Ljava/lang/CharSequence;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setSubtitleTextAppearance(android.content.Context,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void SetSubtitleTextAppearance(Android.Content.Context arg0, int arg1)
        {
            IExecuteWithSignature("setSubtitleTextAppearance", "(Landroid/content/Context;I)V", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setSubtitleTextColor(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetSubtitleTextColor(int arg0)
        {
            IExecuteWithSignature("setSubtitleTextColor", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setTitle(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetTitle(int arg0)
        {
            IExecuteWithSignature("setTitle", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setTitle(java.lang.CharSequence)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.CharSequence"/></param>
        public void SetTitle(Java.Lang.CharSequence arg0)
        {
            IExecuteWithSignature("setTitle", "(Ljava/lang/CharSequence;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setTitleMargin(int,int,int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <param name="arg3"><see cref="int"/></param>
        public void SetTitleMargin(int arg0, int arg1, int arg2, int arg3)
        {
            IExecuteWithSignature("setTitleMargin", "(IIII)V", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setTitleMarginBottom(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetTitleMarginBottom(int arg0)
        {
            IExecuteWithSignature("setTitleMarginBottom", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setTitleMarginEnd(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetTitleMarginEnd(int arg0)
        {
            IExecuteWithSignature("setTitleMarginEnd", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setTitleMarginStart(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetTitleMarginStart(int arg0)
        {
            IExecuteWithSignature("setTitleMarginStart", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setTitleMarginTop(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetTitleMarginTop(int arg0)
        {
            IExecuteWithSignature("setTitleMarginTop", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setTitleTextAppearance(android.content.Context,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void SetTitleTextAppearance(Android.Content.Context arg0, int arg1)
        {
            IExecuteWithSignature("setTitleTextAppearance", "(Landroid/content/Context;I)V", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Toolbar.html#setTitleTextColor(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetTitleTextColor(int arg0)
        {
            IExecuteWithSignature("setTitleTextColor", "(I)V", arg0);
        }
    
        #endregion
    
        #region Nested classes
        #region LayoutParams implementation
        public partial class LayoutParams
        {
            #region Constructors
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/widget/Toolbar.LayoutParams.html#%3Cinit%3E(android.app.ActionBar.LayoutParams)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.App.ActionBar.LayoutParams"/></param>
            public LayoutParams(Android.App.ActionBar.LayoutParams arg0)
                : base(arg0)
            {
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/widget/Toolbar.LayoutParams.html#%3Cinit%3E(android.content.Context,android.util.AttributeSet)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Content.Context"/></param>
            /// <param name="arg1"><see cref="Android.Util.AttributeSet"/></param>
            public LayoutParams(Android.Content.Context arg0, Android.Util.AttributeSet arg1)
                : base(arg0, arg1)
            {
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/widget/Toolbar.LayoutParams.html#%3Cinit%3E(android.view.ViewGroup.LayoutParams)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.View.ViewGroup.LayoutParams"/></param>
            public LayoutParams(Android.View.ViewGroup.LayoutParams arg0)
                : base(arg0)
            {
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/widget/Toolbar.LayoutParams.html#%3Cinit%3E(android.view.ViewGroup.MarginLayoutParams)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.View.ViewGroup.MarginLayoutParams"/></param>
            public LayoutParams(Android.View.ViewGroup.MarginLayoutParams arg0)
                : base(arg0)
            {
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/widget/Toolbar.LayoutParams.html#%3Cinit%3E(android.widget.Toolbar.LayoutParams)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Widget.Toolbar.LayoutParams"/></param>
            public LayoutParams(Android.Widget.Toolbar.LayoutParams arg0)
                : base(arg0)
            {
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/widget/Toolbar.LayoutParams.html#%3Cinit%3E(int,int,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            /// <param name="arg2"><see cref="int"/></param>
            public LayoutParams(int arg0, int arg1, int arg2)
                : base(arg0, arg1, arg2)
            {
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/widget/Toolbar.LayoutParams.html#%3Cinit%3E(int,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            public LayoutParams(int arg0, int arg1)
                : base(arg0, arg1)
            {
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/widget/Toolbar.LayoutParams.html#%3Cinit%3E(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            public LayoutParams(int arg0)
                : base(arg0)
            {
            }
        
            #endregion
        
            #region Class/Interface conversion operators
        
            #endregion
        
            #region Fields
        
            #endregion
        
            #region Static methods
        
            #endregion
        
            #region Instance methods
        
            #endregion
        
            #region Nested classes
        
            #endregion
        
            // TODO: complete the class
        }
        #endregion

        #region OnMenuItemClickListener implementation
        public partial class OnMenuItemClickListener
        {
            #region Constructors
        
            #endregion
        
            #region Class/Interface conversion operators
        
            #endregion
        
            #region Fields
        
            #endregion
        
            #region Static methods
        
            #endregion
        
            #region Instance methods
            /// <summary>
            /// Handlers initializer for <see cref="OnMenuItemClickListener"/>
            /// </summary>
            protected virtual void InitializeHandlers()
            {
                AddEventHandler("onMenuItemClick", new global::System.EventHandler<CLRListenerEventArgs<CLREventData<MASES.JNet.Specific.JNetEventResult>>>(OnMenuItemClickEventHandler));

            }
            
            /// <summary>
            /// Handler for <see href="https://developer.android.com/reference/android/widget/Toolbar.OnMenuItemClickListener.html#onMenuItemClick(android.view.MenuItem)"/>
            /// </summary>
            /// <remarks>If <see cref="OnOnMenuItemClick"/> has a value it takes precedence over corresponding class method</remarks>
            public global::System.Func<Android.View.MenuItem, bool> OnOnMenuItemClick { get; set; } = null;
            
            bool hasOverrideOnMenuItemClick = true;
            void OnMenuItemClickEventHandler(object sender, CLRListenerEventArgs<CLREventData<MASES.JNet.Specific.JNetEventResult>> data)
            {
                hasOverrideOnMenuItemClick = true;
                var methodToExecute = (OnOnMenuItemClick != null) ? OnOnMenuItemClick : OnMenuItemClick;
                var executionResult = methodToExecute.Invoke(data.EventData.GetAt<Android.View.MenuItem>(0));
                data.EventData.TypedEventData.SetReturnData(hasOverrideOnMenuItemClick, executionResult);
            }
            
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/widget/Toolbar.OnMenuItemClickListener.html#onMenuItemClick(android.view.MenuItem)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.View.MenuItem"/></param>
            /// <returns><see cref="bool"/></returns>
            public virtual bool OnMenuItemClick(Android.View.MenuItem arg0)
            {
                hasOverrideOnMenuItemClick = false; return default;
            }
        
            #endregion
        
            #region Nested classes
        
            #endregion
        
            // TODO: complete the class
        }
        #endregion

        #region OnMenuItemClickListenerDirect implementation
        public partial class OnMenuItemClickListenerDirect
        {
            #region Constructors
        
            #endregion
        
            #region Class/Interface conversion operators
        
            #endregion
        
            #region Fields
        
            #endregion
        
            #region Static methods
        
            #endregion
        
            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/widget/Toolbar.OnMenuItemClickListener.html#onMenuItemClick(android.view.MenuItem)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.View.MenuItem"/></param>
            /// <returns><see cref="bool"/></returns>
            public override bool OnMenuItemClick(Android.View.MenuItem arg0)
            {
                return IExecuteWithSignature<bool>("onMenuItemClick", "(Landroid/view/MenuItem;)Z", arg0);
            }
        
            #endregion
        
            #region Nested classes
        
            #endregion
        
            // TODO: complete the class
        }
        #endregion

    
        #endregion
    
        // TODO: complete the class
    }
    #endregion
}