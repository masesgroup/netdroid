/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.1.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Widget
{
    #region Switch
    public partial class Switch
    {
        #region Constructors
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Switch.html#%3Cinit%3E(android.content.Context,android.util.AttributeSet,int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        /// <param name="arg1"><see cref="Android.Util.AttributeSet"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <param name="arg3"><see cref="int"/></param>
        public Switch(Android.Content.Context arg0, Android.Util.AttributeSet arg1, int arg2, int arg3)
            : base(arg0, arg1, arg2, arg3)
        {
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Switch.html#%3Cinit%3E(android.content.Context,android.util.AttributeSet,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        /// <param name="arg1"><see cref="Android.Util.AttributeSet"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        public Switch(Android.Content.Context arg0, Android.Util.AttributeSet arg1, int arg2)
            : base(arg0, arg1, arg2)
        {
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Switch.html#%3Cinit%3E(android.content.Context,android.util.AttributeSet)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        /// <param name="arg1"><see cref="Android.Util.AttributeSet"/></param>
        public Switch(Android.Content.Context arg0, Android.Util.AttributeSet arg1)
            : base(arg0, arg1)
        {
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Switch.html#%3Cinit%3E(android.content.Context)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        public Switch(Android.Content.Context arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Switch.html#getThumbTintList()"/>
        /// </summary>
        /// <returns><see cref="Android.Content.Res.ColorStateList"/></returns>
        public Android.Content.Res.ColorStateList GetThumbTintList()
        {
            return IExecuteWithSignature<Android.Content.Res.ColorStateList>("getThumbTintList", "()Landroid/content/res/ColorStateList;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Switch.html#getTrackTintList()"/>
        /// </summary>
        /// <returns><see cref="Android.Content.Res.ColorStateList"/></returns>
        public Android.Content.Res.ColorStateList GetTrackTintList()
        {
            return IExecuteWithSignature<Android.Content.Res.ColorStateList>("getTrackTintList", "()Landroid/content/res/ColorStateList;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Switch.html#getThumbTintBlendMode()"/>
        /// </summary>
        /// <returns><see cref="Android.Graphics.BlendMode"/></returns>
        public Android.Graphics.BlendMode GetThumbTintBlendMode()
        {
            return IExecuteWithSignature<Android.Graphics.BlendMode>("getThumbTintBlendMode", "()Landroid/graphics/BlendMode;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Switch.html#getTrackTintBlendMode()"/>
        /// </summary>
        /// <returns><see cref="Android.Graphics.BlendMode"/></returns>
        public Android.Graphics.BlendMode GetTrackTintBlendMode()
        {
            return IExecuteWithSignature<Android.Graphics.BlendMode>("getTrackTintBlendMode", "()Landroid/graphics/BlendMode;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Switch.html#getThumbDrawable()"/>
        /// </summary>
        /// <returns><see cref="Android.Graphics.Drawable.Drawable"/></returns>
        public Android.Graphics.Drawable.Drawable GetThumbDrawable()
        {
            return IExecuteWithSignature<Android.Graphics.Drawable.Drawable>("getThumbDrawable", "()Landroid/graphics/drawable/Drawable;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Switch.html#getTrackDrawable()"/>
        /// </summary>
        /// <returns><see cref="Android.Graphics.Drawable.Drawable"/></returns>
        public Android.Graphics.Drawable.Drawable GetTrackDrawable()
        {
            return IExecuteWithSignature<Android.Graphics.Drawable.Drawable>("getTrackDrawable", "()Landroid/graphics/drawable/Drawable;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Switch.html#getThumbTintMode()"/>
        /// </summary>
        /// <returns><see cref="Android.Graphics.PorterDuff.Mode"/></returns>
        public Android.Graphics.PorterDuff.Mode GetThumbTintMode()
        {
            return IExecuteWithSignature<Android.Graphics.PorterDuff.Mode>("getThumbTintMode", "()Landroid/graphics/PorterDuff$Mode;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Switch.html#getTrackTintMode()"/>
        /// </summary>
        /// <returns><see cref="Android.Graphics.PorterDuff.Mode"/></returns>
        public Android.Graphics.PorterDuff.Mode GetTrackTintMode()
        {
            return IExecuteWithSignature<Android.Graphics.PorterDuff.Mode>("getTrackTintMode", "()Landroid/graphics/PorterDuff$Mode;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Switch.html#getShowText()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool GetShowText()
        {
            return IExecuteWithSignature<bool>("getShowText", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Switch.html#getSplitTrack()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool GetSplitTrack()
        {
            return IExecuteWithSignature<bool>("getSplitTrack", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Switch.html#getSwitchMinWidth()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetSwitchMinWidth()
        {
            return IExecuteWithSignature<int>("getSwitchMinWidth", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Switch.html#getSwitchPadding()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetSwitchPadding()
        {
            return IExecuteWithSignature<int>("getSwitchPadding", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Switch.html#getThumbTextPadding()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetThumbTextPadding()
        {
            return IExecuteWithSignature<int>("getThumbTextPadding", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Switch.html#getTextOff()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.CharSequence"/></returns>
        public Java.Lang.CharSequence GetTextOff()
        {
            return IExecuteWithSignature<Java.Lang.CharSequence>("getTextOff", "()Ljava/lang/CharSequence;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Switch.html#getTextOn()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.CharSequence"/></returns>
        public Java.Lang.CharSequence GetTextOn()
        {
            return IExecuteWithSignature<Java.Lang.CharSequence>("getTextOn", "()Ljava/lang/CharSequence;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Switch.html#onMeasure(int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void OnMeasure(int arg0, int arg1)
        {
            IExecute("onMeasure", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Switch.html#setShowText(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetShowText(bool arg0)
        {
            IExecuteWithSignature("setShowText", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Switch.html#setSplitTrack(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetSplitTrack(bool arg0)
        {
            IExecuteWithSignature("setSplitTrack", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Switch.html#setSwitchMinWidth(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetSwitchMinWidth(int arg0)
        {
            IExecuteWithSignature("setSwitchMinWidth", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Switch.html#setSwitchPadding(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetSwitchPadding(int arg0)
        {
            IExecuteWithSignature("setSwitchPadding", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Switch.html#setSwitchTextAppearance(android.content.Context,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void SetSwitchTextAppearance(Android.Content.Context arg0, int arg1)
        {
            IExecute("setSwitchTextAppearance", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Switch.html#setSwitchTypeface(android.graphics.Typeface,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Graphics.Typeface"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void SetSwitchTypeface(Android.Graphics.Typeface arg0, int arg1)
        {
            IExecute("setSwitchTypeface", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Switch.html#setSwitchTypeface(android.graphics.Typeface)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Graphics.Typeface"/></param>
        public void SetSwitchTypeface(Android.Graphics.Typeface arg0)
        {
            IExecuteWithSignature("setSwitchTypeface", "(Landroid/graphics/Typeface;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Switch.html#setTextOff(java.lang.CharSequence)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.CharSequence"/></param>
        public void SetTextOff(Java.Lang.CharSequence arg0)
        {
            IExecuteWithSignature("setTextOff", "(Ljava/lang/CharSequence;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Switch.html#setTextOn(java.lang.CharSequence)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.CharSequence"/></param>
        public void SetTextOn(Java.Lang.CharSequence arg0)
        {
            IExecuteWithSignature("setTextOn", "(Ljava/lang/CharSequence;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Switch.html#setThumbDrawable(android.graphics.drawable.Drawable)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Graphics.Drawable.Drawable"/></param>
        public void SetThumbDrawable(Android.Graphics.Drawable.Drawable arg0)
        {
            IExecuteWithSignature("setThumbDrawable", "(Landroid/graphics/drawable/Drawable;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Switch.html#setThumbIcon(android.graphics.drawable.Icon)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Graphics.Drawable.Icon"/></param>
        public void SetThumbIcon(Android.Graphics.Drawable.Icon arg0)
        {
            IExecuteWithSignature("setThumbIcon", "(Landroid/graphics/drawable/Icon;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Switch.html#setThumbResource(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetThumbResource(int arg0)
        {
            IExecuteWithSignature("setThumbResource", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Switch.html#setThumbTextPadding(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetThumbTextPadding(int arg0)
        {
            IExecuteWithSignature("setThumbTextPadding", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Switch.html#setThumbTintBlendMode(android.graphics.BlendMode)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Graphics.BlendMode"/></param>
        public void SetThumbTintBlendMode(Android.Graphics.BlendMode arg0)
        {
            IExecuteWithSignature("setThumbTintBlendMode", "(Landroid/graphics/BlendMode;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Switch.html#setThumbTintList(android.content.res.ColorStateList)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Res.ColorStateList"/></param>
        public void SetThumbTintList(Android.Content.Res.ColorStateList arg0)
        {
            IExecuteWithSignature("setThumbTintList", "(Landroid/content/res/ColorStateList;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Switch.html#setThumbTintMode(android.graphics.PorterDuff.Mode)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Graphics.PorterDuff.Mode"/></param>
        public void SetThumbTintMode(Android.Graphics.PorterDuff.Mode arg0)
        {
            IExecuteWithSignature("setThumbTintMode", "(Landroid/graphics/PorterDuff$Mode;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Switch.html#setTrackDrawable(android.graphics.drawable.Drawable)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Graphics.Drawable.Drawable"/></param>
        public void SetTrackDrawable(Android.Graphics.Drawable.Drawable arg0)
        {
            IExecuteWithSignature("setTrackDrawable", "(Landroid/graphics/drawable/Drawable;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Switch.html#setTrackIcon(android.graphics.drawable.Icon)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Graphics.Drawable.Icon"/></param>
        public void SetTrackIcon(Android.Graphics.Drawable.Icon arg0)
        {
            IExecuteWithSignature("setTrackIcon", "(Landroid/graphics/drawable/Icon;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Switch.html#setTrackResource(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetTrackResource(int arg0)
        {
            IExecuteWithSignature("setTrackResource", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Switch.html#setTrackTintBlendMode(android.graphics.BlendMode)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Graphics.BlendMode"/></param>
        public void SetTrackTintBlendMode(Android.Graphics.BlendMode arg0)
        {
            IExecuteWithSignature("setTrackTintBlendMode", "(Landroid/graphics/BlendMode;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Switch.html#setTrackTintList(android.content.res.ColorStateList)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Res.ColorStateList"/></param>
        public void SetTrackTintList(Android.Content.Res.ColorStateList arg0)
        {
            IExecuteWithSignature("setTrackTintList", "(Landroid/content/res/ColorStateList;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/widget/Switch.html#setTrackTintMode(android.graphics.PorterDuff.Mode)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Graphics.PorterDuff.Mode"/></param>
        public void SetTrackTintMode(Android.Graphics.PorterDuff.Mode arg0)
        {
            IExecuteWithSignature("setTrackTintMode", "(Landroid/graphics/PorterDuff$Mode;)V", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}