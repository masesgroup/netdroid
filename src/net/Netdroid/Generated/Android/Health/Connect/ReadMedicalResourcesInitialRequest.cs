/*
*  Copyright (c) 2024-2025 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.6.4.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Health.Connect
{
    #region ReadMedicalResourcesInitialRequest declaration
    /// <summary>
    /// <see href="https://developer.android.com/reference/android/health/connect/ReadMedicalResourcesInitialRequest.html"/>
    /// </summary>
    public partial class ReadMedicalResourcesInitialRequest : Android.Health.Connect.ReadMedicalResourcesRequest
    {
        const string _bridgeClassName = "android.health.connect.ReadMedicalResourcesInitialRequest";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public ReadMedicalResourcesInitialRequest() { }
        /// <summary>
        /// Internal constructor: used internally from JCOBridge
        /// </summary>
        [global::System.Obsolete("This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public ReadMedicalResourcesInitialRequest(IJVMBridgeBaseInitializer initializer) : base(initializer) { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public ReadMedicalResourcesInitialRequest(params object[] args) : base(args) { }
    
        private static readonly global::System.Exception _LocalBridgeClazzException = null;
        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, out _LocalBridgeClazzException, false);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw _LocalBridgeClazzException ?? new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
    
        /// <inheritdoc/>
        public override string BridgeClassName => _bridgeClassName;
        /// <inheritdoc/>
        public override bool IsBridgeAbstract => false;
        /// <inheritdoc/>
        public override bool IsBridgeCloseable => false;
        /// <inheritdoc/>
        public override bool IsBridgeInterface => false;
        /// <inheritdoc/>
        public override bool IsBridgeStatic => false;
    
        // TODO: complete the class
        #region Builder declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/health/connect/ReadMedicalResourcesInitialRequest.Builder.html"/>
        /// </summary>
        public partial class Builder : MASES.JCOBridge.C2JBridge.JVMBridgeBase<Builder>
        {
            const string _bridgeClassName = "android.health.connect.ReadMedicalResourcesInitialRequest$Builder";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public Builder() { }
            /// <summary>
            /// Internal constructor: used internally from JCOBridge
            /// </summary>
            [global::System.Obsolete("This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public Builder(IJVMBridgeBaseInitializer initializer) : base(initializer) { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public Builder(params object[] args) : base(args) { }
        
            private static readonly global::System.Exception _LocalBridgeClazzException = null;
            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, out _LocalBridgeClazzException, false);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw _LocalBridgeClazzException ?? new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
        
            /// <inheritdoc/>
            public override string BridgeClassName => _bridgeClassName;
            /// <inheritdoc/>
            public override bool IsBridgeAbstract => false;
            /// <inheritdoc/>
            public override bool IsBridgeCloseable => false;
            /// <inheritdoc/>
            public override bool IsBridgeInterface => false;
            /// <inheritdoc/>
            public override bool IsBridgeStatic => true;
        
            // TODO: complete the class
        
        }
        #endregion

    
    }
    #endregion

    #region ReadMedicalResourcesInitialRequest implementation
    public partial class ReadMedicalResourcesInitialRequest
    {
        #region Constructors
    
        #endregion
    
        #region Class/Interface conversion operators
    
        #endregion
    
        #region Fields
    
        #endregion
    
        #region Static methods
    
        #endregion
    
        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/health/connect/ReadMedicalResourcesInitialRequest.html#getMedicalResourceType()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetMedicalResourceType()
        {
            return IExecuteWithSignature<int>("getMedicalResourceType", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/health/connect/ReadMedicalResourcesInitialRequest.html#getDataSourceIds()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.Set"/></returns>
        public Java.Util.Set<Java.Lang.String> GetDataSourceIds()
        {
            return IExecuteWithSignature<Java.Util.Set<Java.Lang.String>>("getDataSourceIds", "()Ljava/util/Set;");
        }
    
        #endregion
    
        #region Nested classes
        #region Builder implementation
        public partial class Builder
        {
            #region Constructors
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/health/connect/ReadMedicalResourcesInitialRequest.Builder.html#%3Cinit%3E(android.health.connect.ReadMedicalResourcesInitialRequest)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Health.Connect.ReadMedicalResourcesInitialRequest"/></param>
            public Builder(Android.Health.Connect.ReadMedicalResourcesInitialRequest arg0)
                : base(arg0)
            {
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/health/connect/ReadMedicalResourcesInitialRequest.Builder.html#%3Cinit%3E(android.health.connect.ReadMedicalResourcesInitialRequest.Builder)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Health.Connect.ReadMedicalResourcesInitialRequest.Builder"/></param>
            public Builder(Android.Health.Connect.ReadMedicalResourcesInitialRequest.Builder arg0)
                : base(arg0)
            {
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/health/connect/ReadMedicalResourcesInitialRequest.Builder.html#%3Cinit%3E(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            public Builder(int arg0)
                : base(arg0)
            {
            }
        
            #endregion
        
            #region Class/Interface conversion operators
        
            #endregion
        
            #region Fields
        
            #endregion
        
            #region Static methods
        
            #endregion
        
            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/health/connect/ReadMedicalResourcesInitialRequest.Builder.html#build()"/>
            /// </summary>
            /// <returns><see cref="Android.Health.Connect.ReadMedicalResourcesInitialRequest"/></returns>
            public Android.Health.Connect.ReadMedicalResourcesInitialRequest Build()
            {
                return IExecuteWithSignature<Android.Health.Connect.ReadMedicalResourcesInitialRequest>("build", "()Landroid/health/connect/ReadMedicalResourcesInitialRequest;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/health/connect/ReadMedicalResourcesInitialRequest.Builder.html#addDataSourceId(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Android.Health.Connect.ReadMedicalResourcesInitialRequest.Builder"/></returns>
            public Android.Health.Connect.ReadMedicalResourcesInitialRequest.Builder AddDataSourceId(Java.Lang.String arg0)
            {
                return IExecuteWithSignature<Android.Health.Connect.ReadMedicalResourcesInitialRequest.Builder>("addDataSourceId", "(Ljava/lang/String;)Landroid/health/connect/ReadMedicalResourcesInitialRequest$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/health/connect/ReadMedicalResourcesInitialRequest.Builder.html#addDataSourceIds(java.util.Set)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Util.Set"/></param>
            /// <returns><see cref="Android.Health.Connect.ReadMedicalResourcesInitialRequest.Builder"/></returns>
            public Android.Health.Connect.ReadMedicalResourcesInitialRequest.Builder AddDataSourceIds(Java.Util.Set<Java.Lang.String> arg0)
            {
                return IExecuteWithSignature<Android.Health.Connect.ReadMedicalResourcesInitialRequest.Builder>("addDataSourceIds", "(Ljava/util/Set;)Landroid/health/connect/ReadMedicalResourcesInitialRequest$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/health/connect/ReadMedicalResourcesInitialRequest.Builder.html#clearDataSourceIds()"/>
            /// </summary>
            /// <returns><see cref="Android.Health.Connect.ReadMedicalResourcesInitialRequest.Builder"/></returns>
            public Android.Health.Connect.ReadMedicalResourcesInitialRequest.Builder ClearDataSourceIds()
            {
                return IExecuteWithSignature<Android.Health.Connect.ReadMedicalResourcesInitialRequest.Builder>("clearDataSourceIds", "()Landroid/health/connect/ReadMedicalResourcesInitialRequest$Builder;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/health/connect/ReadMedicalResourcesInitialRequest.Builder.html#setMedicalResourceType(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <returns><see cref="Android.Health.Connect.ReadMedicalResourcesInitialRequest.Builder"/></returns>
            public Android.Health.Connect.ReadMedicalResourcesInitialRequest.Builder SetMedicalResourceType(int arg0)
            {
                return IExecuteWithSignature<Android.Health.Connect.ReadMedicalResourcesInitialRequest.Builder>("setMedicalResourceType", "(I)Landroid/health/connect/ReadMedicalResourcesInitialRequest$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/health/connect/ReadMedicalResourcesInitialRequest.Builder.html#setPageSize(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <returns><see cref="Android.Health.Connect.ReadMedicalResourcesInitialRequest.Builder"/></returns>
            public Android.Health.Connect.ReadMedicalResourcesInitialRequest.Builder SetPageSize(int arg0)
            {
                return IExecuteWithSignature<Android.Health.Connect.ReadMedicalResourcesInitialRequest.Builder>("setPageSize", "(I)Landroid/health/connect/ReadMedicalResourcesInitialRequest$Builder;", arg0);
            }
        
            #endregion
        
            #region Nested classes
        
            #endregion
        
            // TODO: complete the class
        }
        #endregion

    
        #endregion
    
        // TODO: complete the class
    }
    #endregion
}