/*
*  Copyright (c) 2024-2025 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.6.4.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Health.Connect.Datatypes
{
    #region ActivityIntensityRecord declaration
    /// <summary>
    /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/ActivityIntensityRecord.html"/>
    /// </summary>
    public partial class ActivityIntensityRecord : Android.Health.Connect.Datatypes.IntervalRecord
    {
        const string _bridgeClassName = "android.health.connect.datatypes.ActivityIntensityRecord";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public ActivityIntensityRecord() { }
        /// <summary>
        /// Internal constructor: used internally from JCOBridge
        /// </summary>
        [global::System.Obsolete("This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public ActivityIntensityRecord(IJVMBridgeBaseInitializer initializer) : base(initializer) { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public ActivityIntensityRecord(params object[] args) : base(args) { }
    
        private static readonly global::System.Exception _LocalBridgeClazzException = null;
        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, out _LocalBridgeClazzException, false);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw _LocalBridgeClazzException ?? new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
    
        /// <inheritdoc/>
        public override string BridgeClassName => _bridgeClassName;
        /// <inheritdoc/>
        public override bool IsBridgeAbstract => false;
        /// <inheritdoc/>
        public override bool IsBridgeCloseable => false;
        /// <inheritdoc/>
        public override bool IsBridgeInterface => false;
        /// <inheritdoc/>
        public override bool IsBridgeStatic => false;
    
        // TODO: complete the class
        #region Builder declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/ActivityIntensityRecord.Builder.html"/>
        /// </summary>
        public partial class Builder : MASES.JCOBridge.C2JBridge.JVMBridgeBase<Builder>
        {
            const string _bridgeClassName = "android.health.connect.datatypes.ActivityIntensityRecord$Builder";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public Builder() { }
            /// <summary>
            /// Internal constructor: used internally from JCOBridge
            /// </summary>
            [global::System.Obsolete("This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public Builder(IJVMBridgeBaseInitializer initializer) : base(initializer) { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public Builder(params object[] args) : base(args) { }
        
            private static readonly global::System.Exception _LocalBridgeClazzException = null;
            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, out _LocalBridgeClazzException, false);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw _LocalBridgeClazzException ?? new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
        
            /// <inheritdoc/>
            public override string BridgeClassName => _bridgeClassName;
            /// <inheritdoc/>
            public override bool IsBridgeAbstract => false;
            /// <inheritdoc/>
            public override bool IsBridgeCloseable => false;
            /// <inheritdoc/>
            public override bool IsBridgeInterface => false;
            /// <inheritdoc/>
            public override bool IsBridgeStatic => true;
        
            // TODO: complete the class
        
        }
        #endregion

    
    }
    #endregion

    #region ActivityIntensityRecord implementation
    public partial class ActivityIntensityRecord
    {
        #region Constructors
    
        #endregion
    
        #region Class/Interface conversion operators
    
        #endregion
    
        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/ActivityIntensityRecord.html#INTENSITY_MINUTES_TOTAL"/>
        /// </summary>
        public static Android.Health.Connect.Datatypes.AggregationType INTENSITY_MINUTES_TOTAL { get { if (!_INTENSITY_MINUTES_TOTALReady) { _INTENSITY_MINUTES_TOTALContent = SGetField<Android.Health.Connect.Datatypes.AggregationType>(LocalBridgeClazz, "INTENSITY_MINUTES_TOTAL"); _INTENSITY_MINUTES_TOTALReady = true; } return _INTENSITY_MINUTES_TOTALContent; } }
        private static Android.Health.Connect.Datatypes.AggregationType _INTENSITY_MINUTES_TOTALContent = default;
        private static bool _INTENSITY_MINUTES_TOTALReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/ActivityIntensityRecord.html#DURATION_TOTAL"/>
        /// </summary>
        public static Android.Health.Connect.Datatypes.AggregationType DURATION_TOTAL { get { if (!_DURATION_TOTALReady) { _DURATION_TOTALContent = SGetField<Android.Health.Connect.Datatypes.AggregationType>(LocalBridgeClazz, "DURATION_TOTAL"); _DURATION_TOTALReady = true; } return _DURATION_TOTALContent; } }
        private static Android.Health.Connect.Datatypes.AggregationType _DURATION_TOTALContent = default;
        private static bool _DURATION_TOTALReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/ActivityIntensityRecord.html#MODERATE_DURATION_TOTAL"/>
        /// </summary>
        public static Android.Health.Connect.Datatypes.AggregationType MODERATE_DURATION_TOTAL { get { if (!_MODERATE_DURATION_TOTALReady) { _MODERATE_DURATION_TOTALContent = SGetField<Android.Health.Connect.Datatypes.AggregationType>(LocalBridgeClazz, "MODERATE_DURATION_TOTAL"); _MODERATE_DURATION_TOTALReady = true; } return _MODERATE_DURATION_TOTALContent; } }
        private static Android.Health.Connect.Datatypes.AggregationType _MODERATE_DURATION_TOTALContent = default;
        private static bool _MODERATE_DURATION_TOTALReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/ActivityIntensityRecord.html#VIGOROUS_DURATION_TOTAL"/>
        /// </summary>
        public static Android.Health.Connect.Datatypes.AggregationType VIGOROUS_DURATION_TOTAL { get { if (!_VIGOROUS_DURATION_TOTALReady) { _VIGOROUS_DURATION_TOTALContent = SGetField<Android.Health.Connect.Datatypes.AggregationType>(LocalBridgeClazz, "VIGOROUS_DURATION_TOTAL"); _VIGOROUS_DURATION_TOTALReady = true; } return _VIGOROUS_DURATION_TOTALContent; } }
        private static Android.Health.Connect.Datatypes.AggregationType _VIGOROUS_DURATION_TOTALContent = default;
        private static bool _VIGOROUS_DURATION_TOTALReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/ActivityIntensityRecord.html#ACTIVITY_INTENSITY_TYPE_MODERATE"/>
        /// </summary>
        public static int ACTIVITY_INTENSITY_TYPE_MODERATE { get { if (!_ACTIVITY_INTENSITY_TYPE_MODERATEReady) { _ACTIVITY_INTENSITY_TYPE_MODERATEContent = SGetField<int>(LocalBridgeClazz, "ACTIVITY_INTENSITY_TYPE_MODERATE"); _ACTIVITY_INTENSITY_TYPE_MODERATEReady = true; } return _ACTIVITY_INTENSITY_TYPE_MODERATEContent; } }
        private static int _ACTIVITY_INTENSITY_TYPE_MODERATEContent = default;
        private static bool _ACTIVITY_INTENSITY_TYPE_MODERATEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/ActivityIntensityRecord.html#ACTIVITY_INTENSITY_TYPE_VIGOROUS"/>
        /// </summary>
        public static int ACTIVITY_INTENSITY_TYPE_VIGOROUS { get { if (!_ACTIVITY_INTENSITY_TYPE_VIGOROUSReady) { _ACTIVITY_INTENSITY_TYPE_VIGOROUSContent = SGetField<int>(LocalBridgeClazz, "ACTIVITY_INTENSITY_TYPE_VIGOROUS"); _ACTIVITY_INTENSITY_TYPE_VIGOROUSReady = true; } return _ACTIVITY_INTENSITY_TYPE_VIGOROUSContent; } }
        private static int _ACTIVITY_INTENSITY_TYPE_VIGOROUSContent = default;
        private static bool _ACTIVITY_INTENSITY_TYPE_VIGOROUSReady = false; // this is used because in case of generics 
    
        #endregion
    
        #region Static methods
    
        #endregion
    
        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/ActivityIntensityRecord.html#getActivityIntensityType()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetActivityIntensityType()
        {
            return IExecuteWithSignature<int>("getActivityIntensityType", "()I");
        }
    
        #endregion
    
        #region Nested classes
        #region Builder implementation
        public partial class Builder
        {
            #region Constructors
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/ActivityIntensityRecord.Builder.html#%3Cinit%3E(android.health.connect.datatypes.Metadata,java.time.Instant,java.time.Instant,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Health.Connect.Datatypes.Metadata"/></param>
            /// <param name="arg1"><see cref="Java.Time.Instant"/></param>
            /// <param name="arg2"><see cref="Java.Time.Instant"/></param>
            /// <param name="arg3"><see cref="int"/></param>
            public Builder(Android.Health.Connect.Datatypes.Metadata arg0, Java.Time.Instant arg1, Java.Time.Instant arg2, int arg3)
                : base(arg0, arg1, arg2, arg3)
            {
            }
        
            #endregion
        
            #region Class/Interface conversion operators
        
            #endregion
        
            #region Fields
        
            #endregion
        
            #region Static methods
        
            #endregion
        
            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/ActivityIntensityRecord.Builder.html#build()"/>
            /// </summary>
            /// <returns><see cref="Android.Health.Connect.Datatypes.ActivityIntensityRecord"/></returns>
            public Android.Health.Connect.Datatypes.ActivityIntensityRecord Build()
            {
                return IExecuteWithSignature<Android.Health.Connect.Datatypes.ActivityIntensityRecord>("build", "()Landroid/health/connect/datatypes/ActivityIntensityRecord;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/ActivityIntensityRecord.Builder.html#setEndZoneOffset(java.time.ZoneOffset)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Time.ZoneOffset"/></param>
            /// <returns><see cref="Android.Health.Connect.Datatypes.ActivityIntensityRecord.Builder"/></returns>
            public Android.Health.Connect.Datatypes.ActivityIntensityRecord.Builder SetEndZoneOffset(Java.Time.ZoneOffset arg0)
            {
                return IExecuteWithSignature<Android.Health.Connect.Datatypes.ActivityIntensityRecord.Builder>("setEndZoneOffset", "(Ljava/time/ZoneOffset;)Landroid/health/connect/datatypes/ActivityIntensityRecord$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/ActivityIntensityRecord.Builder.html#setStartZoneOffset(java.time.ZoneOffset)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Time.ZoneOffset"/></param>
            /// <returns><see cref="Android.Health.Connect.Datatypes.ActivityIntensityRecord.Builder"/></returns>
            public Android.Health.Connect.Datatypes.ActivityIntensityRecord.Builder SetStartZoneOffset(Java.Time.ZoneOffset arg0)
            {
                return IExecuteWithSignature<Android.Health.Connect.Datatypes.ActivityIntensityRecord.Builder>("setStartZoneOffset", "(Ljava/time/ZoneOffset;)Landroid/health/connect/datatypes/ActivityIntensityRecord$Builder;", arg0);
            }
        
            #endregion
        
            #region Nested classes
        
            #endregion
        
            // TODO: complete the class
        }
        #endregion

    
        #endregion
    
        // TODO: complete the class
    }
    #endregion
}