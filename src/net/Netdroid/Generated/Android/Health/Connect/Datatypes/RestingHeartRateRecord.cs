/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.1.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Health.Connect.Datatypes
{
    #region RestingHeartRateRecord
    public partial class RestingHeartRateRecord
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/RestingHeartRateRecord.html#BPM_AVG"/>
        /// </summary>
        public static Android.Health.Connect.Datatypes.AggregationType BPM_AVG { get { if (!_BPM_AVGReady) { _BPM_AVGContent = SGetField<Android.Health.Connect.Datatypes.AggregationType>(LocalBridgeClazz, "BPM_AVG"); _BPM_AVGReady = true; } return _BPM_AVGContent; } }
        private static Android.Health.Connect.Datatypes.AggregationType _BPM_AVGContent = default;
        private static bool _BPM_AVGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/RestingHeartRateRecord.html#BPM_MAX"/>
        /// </summary>
        public static Android.Health.Connect.Datatypes.AggregationType BPM_MAX { get { if (!_BPM_MAXReady) { _BPM_MAXContent = SGetField<Android.Health.Connect.Datatypes.AggregationType>(LocalBridgeClazz, "BPM_MAX"); _BPM_MAXReady = true; } return _BPM_MAXContent; } }
        private static Android.Health.Connect.Datatypes.AggregationType _BPM_MAXContent = default;
        private static bool _BPM_MAXReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/RestingHeartRateRecord.html#BPM_MIN"/>
        /// </summary>
        public static Android.Health.Connect.Datatypes.AggregationType BPM_MIN { get { if (!_BPM_MINReady) { _BPM_MINContent = SGetField<Android.Health.Connect.Datatypes.AggregationType>(LocalBridgeClazz, "BPM_MIN"); _BPM_MINReady = true; } return _BPM_MINContent; } }
        private static Android.Health.Connect.Datatypes.AggregationType _BPM_MINContent = default;
        private static bool _BPM_MINReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/RestingHeartRateRecord.html#getBeatsPerMinute()"/>
        /// </summary>
        /// <returns><see cref="long"/></returns>
        public long GetBeatsPerMinute()
        {
            return IExecuteWithSignature<long>("getBeatsPerMinute", "()J");
        }

        #endregion

        #region Nested classes
        #region Builder
        public partial class Builder
        {
            #region Constructors
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/RestingHeartRateRecord.Builder.html#%3Cinit%3E(android.health.connect.datatypes.Metadata,java.time.Instant,long)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Health.Connect.Datatypes.Metadata"/></param>
            /// <param name="arg1"><see cref="Java.Time.Instant"/></param>
            /// <param name="arg2"><see cref="long"/></param>
            public Builder(Android.Health.Connect.Datatypes.Metadata arg0, Java.Time.Instant arg1, long arg2)
                : base(arg0, arg1, arg2)
            {
            }

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/RestingHeartRateRecord.Builder.html#build()"/>
            /// </summary>
            /// <returns><see cref="Android.Health.Connect.Datatypes.RestingHeartRateRecord"/></returns>
            public Android.Health.Connect.Datatypes.RestingHeartRateRecord Build()
            {
                return IExecuteWithSignature<Android.Health.Connect.Datatypes.RestingHeartRateRecord>("build", "()Landroid/health/connect/datatypes/RestingHeartRateRecord;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/RestingHeartRateRecord.Builder.html#clearZoneOffset()"/>
            /// </summary>
            /// <returns><see cref="Android.Health.Connect.Datatypes.RestingHeartRateRecord.Builder"/></returns>
            public Android.Health.Connect.Datatypes.RestingHeartRateRecord.Builder ClearZoneOffset()
            {
                return IExecuteWithSignature<Android.Health.Connect.Datatypes.RestingHeartRateRecord.Builder>("clearZoneOffset", "()Landroid/health/connect/datatypes/RestingHeartRateRecord$Builder;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/RestingHeartRateRecord.Builder.html#setZoneOffset(java.time.ZoneOffset)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Time.ZoneOffset"/></param>
            /// <returns><see cref="Android.Health.Connect.Datatypes.RestingHeartRateRecord.Builder"/></returns>
            public Android.Health.Connect.Datatypes.RestingHeartRateRecord.Builder SetZoneOffset(Java.Time.ZoneOffset arg0)
            {
                return IExecuteWithSignature<Android.Health.Connect.Datatypes.RestingHeartRateRecord.Builder>("setZoneOffset", "(Ljava/time/ZoneOffset;)Landroid/health/connect/datatypes/RestingHeartRateRecord$Builder;", arg0);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}