/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.9.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Health.Connect.Datatypes
{
    #region PlannedExerciseStep declaration
    /// <summary>
    /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/PlannedExerciseStep.html"/>
    /// </summary>
    public partial class PlannedExerciseStep : MASES.JCOBridge.C2JBridge.JVMBridgeBase<PlannedExerciseStep>
    {
        const string _bridgeClassName = "android.health.connect.datatypes.PlannedExerciseStep";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public PlannedExerciseStep() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public PlannedExerciseStep(params object[] args) : base(args) { }

        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class
        #region Builder declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/PlannedExerciseStep.Builder.html"/>
        /// </summary>
        public partial class Builder : MASES.JCOBridge.C2JBridge.JVMBridgeBase<Builder>
        {
            const string _bridgeClassName = "android.health.connect.datatypes.PlannedExerciseStep$Builder";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public Builder() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public Builder(params object[] args) : base(args) { }

            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;

            // TODO: complete the class

        }
        #endregion

    
    }
    #endregion

    #region PlannedExerciseStep implementation
    public partial class PlannedExerciseStep
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/PlannedExerciseStep.html#EXERCISE_CATEGORY_ACTIVE"/>
        /// </summary>
        public static int EXERCISE_CATEGORY_ACTIVE { get { if (!_EXERCISE_CATEGORY_ACTIVEReady) { _EXERCISE_CATEGORY_ACTIVEContent = SGetField<int>(LocalBridgeClazz, "EXERCISE_CATEGORY_ACTIVE"); _EXERCISE_CATEGORY_ACTIVEReady = true; } return _EXERCISE_CATEGORY_ACTIVEContent; } }
        private static int _EXERCISE_CATEGORY_ACTIVEContent = default;
        private static bool _EXERCISE_CATEGORY_ACTIVEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/PlannedExerciseStep.html#EXERCISE_CATEGORY_COOLDOWN"/>
        /// </summary>
        public static int EXERCISE_CATEGORY_COOLDOWN { get { if (!_EXERCISE_CATEGORY_COOLDOWNReady) { _EXERCISE_CATEGORY_COOLDOWNContent = SGetField<int>(LocalBridgeClazz, "EXERCISE_CATEGORY_COOLDOWN"); _EXERCISE_CATEGORY_COOLDOWNReady = true; } return _EXERCISE_CATEGORY_COOLDOWNContent; } }
        private static int _EXERCISE_CATEGORY_COOLDOWNContent = default;
        private static bool _EXERCISE_CATEGORY_COOLDOWNReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/PlannedExerciseStep.html#EXERCISE_CATEGORY_RECOVERY"/>
        /// </summary>
        public static int EXERCISE_CATEGORY_RECOVERY { get { if (!_EXERCISE_CATEGORY_RECOVERYReady) { _EXERCISE_CATEGORY_RECOVERYContent = SGetField<int>(LocalBridgeClazz, "EXERCISE_CATEGORY_RECOVERY"); _EXERCISE_CATEGORY_RECOVERYReady = true; } return _EXERCISE_CATEGORY_RECOVERYContent; } }
        private static int _EXERCISE_CATEGORY_RECOVERYContent = default;
        private static bool _EXERCISE_CATEGORY_RECOVERYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/PlannedExerciseStep.html#EXERCISE_CATEGORY_REST"/>
        /// </summary>
        public static int EXERCISE_CATEGORY_REST { get { if (!_EXERCISE_CATEGORY_RESTReady) { _EXERCISE_CATEGORY_RESTContent = SGetField<int>(LocalBridgeClazz, "EXERCISE_CATEGORY_REST"); _EXERCISE_CATEGORY_RESTReady = true; } return _EXERCISE_CATEGORY_RESTContent; } }
        private static int _EXERCISE_CATEGORY_RESTContent = default;
        private static bool _EXERCISE_CATEGORY_RESTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/PlannedExerciseStep.html#EXERCISE_CATEGORY_UNKNOWN"/>
        /// </summary>
        public static int EXERCISE_CATEGORY_UNKNOWN { get { if (!_EXERCISE_CATEGORY_UNKNOWNReady) { _EXERCISE_CATEGORY_UNKNOWNContent = SGetField<int>(LocalBridgeClazz, "EXERCISE_CATEGORY_UNKNOWN"); _EXERCISE_CATEGORY_UNKNOWNReady = true; } return _EXERCISE_CATEGORY_UNKNOWNContent; } }
        private static int _EXERCISE_CATEGORY_UNKNOWNContent = default;
        private static bool _EXERCISE_CATEGORY_UNKNOWNReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/PlannedExerciseStep.html#EXERCISE_CATEGORY_WARMUP"/>
        /// </summary>
        public static int EXERCISE_CATEGORY_WARMUP { get { if (!_EXERCISE_CATEGORY_WARMUPReady) { _EXERCISE_CATEGORY_WARMUPContent = SGetField<int>(LocalBridgeClazz, "EXERCISE_CATEGORY_WARMUP"); _EXERCISE_CATEGORY_WARMUPReady = true; } return _EXERCISE_CATEGORY_WARMUPContent; } }
        private static int _EXERCISE_CATEGORY_WARMUPContent = default;
        private static bool _EXERCISE_CATEGORY_WARMUPReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/PlannedExerciseStep.html#getCompletionGoal()"/>
        /// </summary>
        /// <returns><see cref="Android.Health.Connect.Datatypes.ExerciseCompletionGoal"/></returns>
        public Android.Health.Connect.Datatypes.ExerciseCompletionGoal GetCompletionGoal()
        {
            return IExecuteWithSignature<Android.Health.Connect.Datatypes.ExerciseCompletionGoal>("getCompletionGoal", "()Landroid/health/connect/datatypes/ExerciseCompletionGoal;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/PlannedExerciseStep.html#getExerciseCategory()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetExerciseCategory()
        {
            return IExecuteWithSignature<int>("getExerciseCategory", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/PlannedExerciseStep.html#getExerciseType()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetExerciseType()
        {
            return IExecuteWithSignature<int>("getExerciseType", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/PlannedExerciseStep.html#getDescription()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.CharSequence"/></returns>
        public Java.Lang.CharSequence GetDescription()
        {
            return IExecuteWithSignature<Java.Lang.CharSequence>("getDescription", "()Ljava/lang/CharSequence;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/PlannedExerciseStep.html#getPerformanceGoals()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.List"/></returns>
        public Java.Util.List<Android.Health.Connect.Datatypes.ExercisePerformanceGoal> GetPerformanceGoals()
        {
            return IExecuteWithSignature<Java.Util.List<Android.Health.Connect.Datatypes.ExercisePerformanceGoal>>("getPerformanceGoals", "()Ljava/util/List;");
        }

        #endregion

        #region Nested classes
        #region Builder implementation
        public partial class Builder
        {
            #region Constructors
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/PlannedExerciseStep.Builder.html#%3Cinit%3E(int,int,android.health.connect.datatypes.ExerciseCompletionGoal)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            /// <param name="arg2"><see cref="Android.Health.Connect.Datatypes.ExerciseCompletionGoal"/></param>
            public Builder(int arg0, int arg1, Android.Health.Connect.Datatypes.ExerciseCompletionGoal arg2)
                : base(arg0, arg1, arg2)
            {
            }

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/PlannedExerciseStep.Builder.html#build()"/>
            /// </summary>
            /// <returns><see cref="Android.Health.Connect.Datatypes.PlannedExerciseStep"/></returns>
            public Android.Health.Connect.Datatypes.PlannedExerciseStep Build()
            {
                return IExecuteWithSignature<Android.Health.Connect.Datatypes.PlannedExerciseStep>("build", "()Landroid/health/connect/datatypes/PlannedExerciseStep;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/PlannedExerciseStep.Builder.html#addPerformanceGoal(android.health.connect.datatypes.ExercisePerformanceGoal)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Health.Connect.Datatypes.ExercisePerformanceGoal"/></param>
            /// <returns><see cref="Android.Health.Connect.Datatypes.PlannedExerciseStep.Builder"/></returns>
            public Android.Health.Connect.Datatypes.PlannedExerciseStep.Builder AddPerformanceGoal(Android.Health.Connect.Datatypes.ExercisePerformanceGoal arg0)
            {
                return IExecuteWithSignature<Android.Health.Connect.Datatypes.PlannedExerciseStep.Builder>("addPerformanceGoal", "(Landroid/health/connect/datatypes/ExercisePerformanceGoal;)Landroid/health/connect/datatypes/PlannedExerciseStep$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/PlannedExerciseStep.Builder.html#clearPerformanceGoals()"/>
            /// </summary>
            /// <returns><see cref="Android.Health.Connect.Datatypes.PlannedExerciseStep.Builder"/></returns>
            public Android.Health.Connect.Datatypes.PlannedExerciseStep.Builder ClearPerformanceGoals()
            {
                return IExecuteWithSignature<Android.Health.Connect.Datatypes.PlannedExerciseStep.Builder>("clearPerformanceGoals", "()Landroid/health/connect/datatypes/PlannedExerciseStep$Builder;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/PlannedExerciseStep.Builder.html#setCompletionGoal(android.health.connect.datatypes.ExerciseCompletionGoal)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Health.Connect.Datatypes.ExerciseCompletionGoal"/></param>
            /// <returns><see cref="Android.Health.Connect.Datatypes.PlannedExerciseStep.Builder"/></returns>
            public Android.Health.Connect.Datatypes.PlannedExerciseStep.Builder SetCompletionGoal(Android.Health.Connect.Datatypes.ExerciseCompletionGoal arg0)
            {
                return IExecuteWithSignature<Android.Health.Connect.Datatypes.PlannedExerciseStep.Builder>("setCompletionGoal", "(Landroid/health/connect/datatypes/ExerciseCompletionGoal;)Landroid/health/connect/datatypes/PlannedExerciseStep$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/PlannedExerciseStep.Builder.html#setDescription(java.lang.CharSequence)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.CharSequence"/></param>
            /// <returns><see cref="Android.Health.Connect.Datatypes.PlannedExerciseStep.Builder"/></returns>
            public Android.Health.Connect.Datatypes.PlannedExerciseStep.Builder SetDescription(Java.Lang.CharSequence arg0)
            {
                return IExecuteWithSignature<Android.Health.Connect.Datatypes.PlannedExerciseStep.Builder>("setDescription", "(Ljava/lang/CharSequence;)Landroid/health/connect/datatypes/PlannedExerciseStep$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/PlannedExerciseStep.Builder.html#setExerciseCategory(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <returns><see cref="Android.Health.Connect.Datatypes.PlannedExerciseStep.Builder"/></returns>
            public Android.Health.Connect.Datatypes.PlannedExerciseStep.Builder SetExerciseCategory(int arg0)
            {
                return IExecuteWithSignature<Android.Health.Connect.Datatypes.PlannedExerciseStep.Builder>("setExerciseCategory", "(I)Landroid/health/connect/datatypes/PlannedExerciseStep$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/PlannedExerciseStep.Builder.html#setExerciseType(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <returns><see cref="Android.Health.Connect.Datatypes.PlannedExerciseStep.Builder"/></returns>
            public Android.Health.Connect.Datatypes.PlannedExerciseStep.Builder SetExerciseType(int arg0)
            {
                return IExecuteWithSignature<Android.Health.Connect.Datatypes.PlannedExerciseStep.Builder>("setExerciseType", "(I)Landroid/health/connect/datatypes/PlannedExerciseStep$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/PlannedExerciseStep.Builder.html#setPerformanceGoals(java.util.List)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Util.List"/></param>
            /// <returns><see cref="Android.Health.Connect.Datatypes.PlannedExerciseStep.Builder"/></returns>
            public Android.Health.Connect.Datatypes.PlannedExerciseStep.Builder SetPerformanceGoals(Java.Util.List<Android.Health.Connect.Datatypes.ExercisePerformanceGoal> arg0)
            {
                return IExecuteWithSignature<Android.Health.Connect.Datatypes.PlannedExerciseStep.Builder>("setPerformanceGoals", "(Ljava/util/List;)Landroid/health/connect/datatypes/PlannedExerciseStep$Builder;", arg0);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}