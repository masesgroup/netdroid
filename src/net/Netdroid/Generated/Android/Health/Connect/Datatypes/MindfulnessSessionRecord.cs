/*
*  Copyright (c) 2024-2025 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.6.4.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Health.Connect.Datatypes
{
    #region MindfulnessSessionRecord declaration
    /// <summary>
    /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/MindfulnessSessionRecord.html"/>
    /// </summary>
    public partial class MindfulnessSessionRecord : Android.Health.Connect.Datatypes.IntervalRecord
    {
        const string _bridgeClassName = "android.health.connect.datatypes.MindfulnessSessionRecord";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public MindfulnessSessionRecord() { }
        /// <summary>
        /// Internal constructor: used internally from JCOBridge
        /// </summary>
        [global::System.Obsolete("This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public MindfulnessSessionRecord(IJVMBridgeBaseInitializer initializer) : base(initializer) { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public MindfulnessSessionRecord(params object[] args) : base(args) { }
    
        private static readonly global::System.Exception _LocalBridgeClazzException = null;
        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, out _LocalBridgeClazzException, false);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw _LocalBridgeClazzException ?? new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
    
        /// <inheritdoc/>
        public override string BridgeClassName => _bridgeClassName;
        /// <inheritdoc/>
        public override bool IsBridgeAbstract => false;
        /// <inheritdoc/>
        public override bool IsBridgeCloseable => false;
        /// <inheritdoc/>
        public override bool IsBridgeInterface => false;
        /// <inheritdoc/>
        public override bool IsBridgeStatic => false;
    
        // TODO: complete the class
        #region Builder declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/MindfulnessSessionRecord.Builder.html"/>
        /// </summary>
        public partial class Builder : MASES.JCOBridge.C2JBridge.JVMBridgeBase<Builder>
        {
            const string _bridgeClassName = "android.health.connect.datatypes.MindfulnessSessionRecord$Builder";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public Builder() { }
            /// <summary>
            /// Internal constructor: used internally from JCOBridge
            /// </summary>
            [global::System.Obsolete("This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public Builder(IJVMBridgeBaseInitializer initializer) : base(initializer) { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public Builder(params object[] args) : base(args) { }
        
            private static readonly global::System.Exception _LocalBridgeClazzException = null;
            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, out _LocalBridgeClazzException, false);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw _LocalBridgeClazzException ?? new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
        
            /// <inheritdoc/>
            public override string BridgeClassName => _bridgeClassName;
            /// <inheritdoc/>
            public override bool IsBridgeAbstract => false;
            /// <inheritdoc/>
            public override bool IsBridgeCloseable => false;
            /// <inheritdoc/>
            public override bool IsBridgeInterface => false;
            /// <inheritdoc/>
            public override bool IsBridgeStatic => true;
        
            // TODO: complete the class
        
        }
        #endregion

    
    }
    #endregion

    #region MindfulnessSessionRecord implementation
    public partial class MindfulnessSessionRecord
    {
        #region Constructors
    
        #endregion
    
        #region Class/Interface conversion operators
    
        #endregion
    
        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/MindfulnessSessionRecord.html#MINDFULNESS_DURATION_TOTAL"/>
        /// </summary>
        public static Android.Health.Connect.Datatypes.AggregationType MINDFULNESS_DURATION_TOTAL { get { if (!_MINDFULNESS_DURATION_TOTALReady) { _MINDFULNESS_DURATION_TOTALContent = SGetField<Android.Health.Connect.Datatypes.AggregationType>(LocalBridgeClazz, "MINDFULNESS_DURATION_TOTAL"); _MINDFULNESS_DURATION_TOTALReady = true; } return _MINDFULNESS_DURATION_TOTALContent; } }
        private static Android.Health.Connect.Datatypes.AggregationType _MINDFULNESS_DURATION_TOTALContent = default;
        private static bool _MINDFULNESS_DURATION_TOTALReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/MindfulnessSessionRecord.html#MINDFULNESS_SESSION_TYPE_BREATHING"/>
        /// </summary>
        public static int MINDFULNESS_SESSION_TYPE_BREATHING { get { if (!_MINDFULNESS_SESSION_TYPE_BREATHINGReady) { _MINDFULNESS_SESSION_TYPE_BREATHINGContent = SGetField<int>(LocalBridgeClazz, "MINDFULNESS_SESSION_TYPE_BREATHING"); _MINDFULNESS_SESSION_TYPE_BREATHINGReady = true; } return _MINDFULNESS_SESSION_TYPE_BREATHINGContent; } }
        private static int _MINDFULNESS_SESSION_TYPE_BREATHINGContent = default;
        private static bool _MINDFULNESS_SESSION_TYPE_BREATHINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/MindfulnessSessionRecord.html#MINDFULNESS_SESSION_TYPE_MEDITATION"/>
        /// </summary>
        public static int MINDFULNESS_SESSION_TYPE_MEDITATION { get { if (!_MINDFULNESS_SESSION_TYPE_MEDITATIONReady) { _MINDFULNESS_SESSION_TYPE_MEDITATIONContent = SGetField<int>(LocalBridgeClazz, "MINDFULNESS_SESSION_TYPE_MEDITATION"); _MINDFULNESS_SESSION_TYPE_MEDITATIONReady = true; } return _MINDFULNESS_SESSION_TYPE_MEDITATIONContent; } }
        private static int _MINDFULNESS_SESSION_TYPE_MEDITATIONContent = default;
        private static bool _MINDFULNESS_SESSION_TYPE_MEDITATIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/MindfulnessSessionRecord.html#MINDFULNESS_SESSION_TYPE_MOVEMENT"/>
        /// </summary>
        public static int MINDFULNESS_SESSION_TYPE_MOVEMENT { get { if (!_MINDFULNESS_SESSION_TYPE_MOVEMENTReady) { _MINDFULNESS_SESSION_TYPE_MOVEMENTContent = SGetField<int>(LocalBridgeClazz, "MINDFULNESS_SESSION_TYPE_MOVEMENT"); _MINDFULNESS_SESSION_TYPE_MOVEMENTReady = true; } return _MINDFULNESS_SESSION_TYPE_MOVEMENTContent; } }
        private static int _MINDFULNESS_SESSION_TYPE_MOVEMENTContent = default;
        private static bool _MINDFULNESS_SESSION_TYPE_MOVEMENTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/MindfulnessSessionRecord.html#MINDFULNESS_SESSION_TYPE_MUSIC"/>
        /// </summary>
        public static int MINDFULNESS_SESSION_TYPE_MUSIC { get { if (!_MINDFULNESS_SESSION_TYPE_MUSICReady) { _MINDFULNESS_SESSION_TYPE_MUSICContent = SGetField<int>(LocalBridgeClazz, "MINDFULNESS_SESSION_TYPE_MUSIC"); _MINDFULNESS_SESSION_TYPE_MUSICReady = true; } return _MINDFULNESS_SESSION_TYPE_MUSICContent; } }
        private static int _MINDFULNESS_SESSION_TYPE_MUSICContent = default;
        private static bool _MINDFULNESS_SESSION_TYPE_MUSICReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/MindfulnessSessionRecord.html#MINDFULNESS_SESSION_TYPE_OTHER"/>
        /// </summary>
        public static int MINDFULNESS_SESSION_TYPE_OTHER { get { if (!_MINDFULNESS_SESSION_TYPE_OTHERReady) { _MINDFULNESS_SESSION_TYPE_OTHERContent = SGetField<int>(LocalBridgeClazz, "MINDFULNESS_SESSION_TYPE_OTHER"); _MINDFULNESS_SESSION_TYPE_OTHERReady = true; } return _MINDFULNESS_SESSION_TYPE_OTHERContent; } }
        private static int _MINDFULNESS_SESSION_TYPE_OTHERContent = default;
        private static bool _MINDFULNESS_SESSION_TYPE_OTHERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/MindfulnessSessionRecord.html#MINDFULNESS_SESSION_TYPE_UNGUIDED"/>
        /// </summary>
        public static int MINDFULNESS_SESSION_TYPE_UNGUIDED { get { if (!_MINDFULNESS_SESSION_TYPE_UNGUIDEDReady) { _MINDFULNESS_SESSION_TYPE_UNGUIDEDContent = SGetField<int>(LocalBridgeClazz, "MINDFULNESS_SESSION_TYPE_UNGUIDED"); _MINDFULNESS_SESSION_TYPE_UNGUIDEDReady = true; } return _MINDFULNESS_SESSION_TYPE_UNGUIDEDContent; } }
        private static int _MINDFULNESS_SESSION_TYPE_UNGUIDEDContent = default;
        private static bool _MINDFULNESS_SESSION_TYPE_UNGUIDEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/MindfulnessSessionRecord.html#MINDFULNESS_SESSION_TYPE_UNKNOWN"/>
        /// </summary>
        public static int MINDFULNESS_SESSION_TYPE_UNKNOWN { get { if (!_MINDFULNESS_SESSION_TYPE_UNKNOWNReady) { _MINDFULNESS_SESSION_TYPE_UNKNOWNContent = SGetField<int>(LocalBridgeClazz, "MINDFULNESS_SESSION_TYPE_UNKNOWN"); _MINDFULNESS_SESSION_TYPE_UNKNOWNReady = true; } return _MINDFULNESS_SESSION_TYPE_UNKNOWNContent; } }
        private static int _MINDFULNESS_SESSION_TYPE_UNKNOWNContent = default;
        private static bool _MINDFULNESS_SESSION_TYPE_UNKNOWNReady = false; // this is used because in case of generics 
    
        #endregion
    
        #region Static methods
    
        #endregion
    
        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/MindfulnessSessionRecord.html#getMindfulnessSessionType()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetMindfulnessSessionType()
        {
            return IExecuteWithSignature<int>("getMindfulnessSessionType", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/MindfulnessSessionRecord.html#getNotes()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.CharSequence"/></returns>
        public Java.Lang.CharSequence GetNotes()
        {
            return IExecuteWithSignature<Java.Lang.CharSequence>("getNotes", "()Ljava/lang/CharSequence;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/MindfulnessSessionRecord.html#getTitle()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.CharSequence"/></returns>
        public Java.Lang.CharSequence GetTitle()
        {
            return IExecuteWithSignature<Java.Lang.CharSequence>("getTitle", "()Ljava/lang/CharSequence;");
        }
    
        #endregion
    
        #region Nested classes
        #region Builder implementation
        public partial class Builder
        {
            #region Constructors
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/MindfulnessSessionRecord.Builder.html#%3Cinit%3E(android.health.connect.datatypes.Metadata,java.time.Instant,java.time.Instant,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Health.Connect.Datatypes.Metadata"/></param>
            /// <param name="arg1"><see cref="Java.Time.Instant"/></param>
            /// <param name="arg2"><see cref="Java.Time.Instant"/></param>
            /// <param name="arg3"><see cref="int"/></param>
            public Builder(Android.Health.Connect.Datatypes.Metadata arg0, Java.Time.Instant arg1, Java.Time.Instant arg2, int arg3)
                : base(arg0, arg1, arg2, arg3)
            {
            }
        
            #endregion
        
            #region Class/Interface conversion operators
        
            #endregion
        
            #region Fields
        
            #endregion
        
            #region Static methods
        
            #endregion
        
            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/MindfulnessSessionRecord.Builder.html#build()"/>
            /// </summary>
            /// <returns><see cref="Android.Health.Connect.Datatypes.MindfulnessSessionRecord"/></returns>
            public Android.Health.Connect.Datatypes.MindfulnessSessionRecord Build()
            {
                return IExecuteWithSignature<Android.Health.Connect.Datatypes.MindfulnessSessionRecord>("build", "()Landroid/health/connect/datatypes/MindfulnessSessionRecord;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/MindfulnessSessionRecord.Builder.html#setEndZoneOffset(java.time.ZoneOffset)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Time.ZoneOffset"/></param>
            /// <returns><see cref="Android.Health.Connect.Datatypes.MindfulnessSessionRecord.Builder"/></returns>
            public Android.Health.Connect.Datatypes.MindfulnessSessionRecord.Builder SetEndZoneOffset(Java.Time.ZoneOffset arg0)
            {
                return IExecuteWithSignature<Android.Health.Connect.Datatypes.MindfulnessSessionRecord.Builder>("setEndZoneOffset", "(Ljava/time/ZoneOffset;)Landroid/health/connect/datatypes/MindfulnessSessionRecord$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/MindfulnessSessionRecord.Builder.html#setNotes(java.lang.CharSequence)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.CharSequence"/></param>
            /// <returns><see cref="Android.Health.Connect.Datatypes.MindfulnessSessionRecord.Builder"/></returns>
            public Android.Health.Connect.Datatypes.MindfulnessSessionRecord.Builder SetNotes(Java.Lang.CharSequence arg0)
            {
                return IExecuteWithSignature<Android.Health.Connect.Datatypes.MindfulnessSessionRecord.Builder>("setNotes", "(Ljava/lang/CharSequence;)Landroid/health/connect/datatypes/MindfulnessSessionRecord$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/MindfulnessSessionRecord.Builder.html#setStartZoneOffset(java.time.ZoneOffset)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Time.ZoneOffset"/></param>
            /// <returns><see cref="Android.Health.Connect.Datatypes.MindfulnessSessionRecord.Builder"/></returns>
            public Android.Health.Connect.Datatypes.MindfulnessSessionRecord.Builder SetStartZoneOffset(Java.Time.ZoneOffset arg0)
            {
                return IExecuteWithSignature<Android.Health.Connect.Datatypes.MindfulnessSessionRecord.Builder>("setStartZoneOffset", "(Ljava/time/ZoneOffset;)Landroid/health/connect/datatypes/MindfulnessSessionRecord$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/health/connect/datatypes/MindfulnessSessionRecord.Builder.html#setTitle(java.lang.CharSequence)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.CharSequence"/></param>
            /// <returns><see cref="Android.Health.Connect.Datatypes.MindfulnessSessionRecord.Builder"/></returns>
            public Android.Health.Connect.Datatypes.MindfulnessSessionRecord.Builder SetTitle(Java.Lang.CharSequence arg0)
            {
                return IExecuteWithSignature<Android.Health.Connect.Datatypes.MindfulnessSessionRecord.Builder>("setTitle", "(Ljava/lang/CharSequence;)Landroid/health/connect/datatypes/MindfulnessSessionRecord$Builder;", arg0);
            }
        
            #endregion
        
            #region Nested classes
        
            #endregion
        
            // TODO: complete the class
        }
        #endregion

    
        #endregion
    
        // TODO: complete the class
    }
    #endregion
}