/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.4.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Nfc
{
    #region NfcEvent
    public partial class NfcEvent
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/nfc/NfcEvent.html#nfcAdapter"/>
        /// </summary>
        public Android.Nfc.NfcAdapter nfcAdapter { get { if (!_nfcAdapterReady) { _nfcAdapterContent = IGetField<Android.Nfc.NfcAdapter>("nfcAdapter"); _nfcAdapterReady = true; } return _nfcAdapterContent; } }
        private Android.Nfc.NfcAdapter _nfcAdapterContent = default;
        private bool _nfcAdapterReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/nfc/NfcEvent.html#peerLlcpMajorVersion"/>
        /// </summary>
        public int peerLlcpMajorVersion { get { if (!_peerLlcpMajorVersionReady) { _peerLlcpMajorVersionContent = IGetField<int>("peerLlcpMajorVersion"); _peerLlcpMajorVersionReady = true; } return _peerLlcpMajorVersionContent; } }
        private int _peerLlcpMajorVersionContent = default;
        private bool _peerLlcpMajorVersionReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/nfc/NfcEvent.html#peerLlcpMinorVersion"/>
        /// </summary>
        public int peerLlcpMinorVersion { get { if (!_peerLlcpMinorVersionReady) { _peerLlcpMinorVersionContent = IGetField<int>("peerLlcpMinorVersion"); _peerLlcpMinorVersionReady = true; } return _peerLlcpMinorVersionContent; } }
        private int _peerLlcpMinorVersionContent = default;
        private bool _peerLlcpMinorVersionReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}