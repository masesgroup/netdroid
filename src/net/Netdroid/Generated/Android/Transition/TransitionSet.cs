/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.10.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Transition
{
    #region TransitionSet declaration
    /// <summary>
    /// <see href="https://developer.android.com/reference/android/transition/TransitionSet.html"/>
    /// </summary>
    public partial class TransitionSet : Android.Transition.Transition
    {
        const string _bridgeClassName = "android.transition.TransitionSet";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public TransitionSet() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public TransitionSet(params object[] args) : base(args) { }
    
        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
    
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;
    
        // TODO: complete the class
    
    }
    #endregion

    #region TransitionSet implementation
    public partial class TransitionSet
    {
        #region Constructors
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/transition/TransitionSet.html#%3Cinit%3E(android.content.Context,android.util.AttributeSet)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        /// <param name="arg1"><see cref="Android.Util.AttributeSet"/></param>
        public TransitionSet(Android.Content.Context arg0, Android.Util.AttributeSet arg1)
            : base(arg0, arg1)
        {
        }
    
        #endregion
    
        #region Class/Interface conversion operators
    
        #endregion
    
        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/transition/TransitionSet.html#ORDERING_SEQUENTIAL"/>
        /// </summary>
        public static int ORDERING_SEQUENTIAL { get { if (!_ORDERING_SEQUENTIALReady) { _ORDERING_SEQUENTIALContent = SGetField<int>(LocalBridgeClazz, "ORDERING_SEQUENTIAL"); _ORDERING_SEQUENTIALReady = true; } return _ORDERING_SEQUENTIALContent; } }
        private static int _ORDERING_SEQUENTIALContent = default;
        private static bool _ORDERING_SEQUENTIALReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/transition/TransitionSet.html#ORDERING_TOGETHER"/>
        /// </summary>
        public static int ORDERING_TOGETHER { get { if (!_ORDERING_TOGETHERReady) { _ORDERING_TOGETHERContent = SGetField<int>(LocalBridgeClazz, "ORDERING_TOGETHER"); _ORDERING_TOGETHERReady = true; } return _ORDERING_TOGETHERContent; } }
        private static int _ORDERING_TOGETHERContent = default;
        private static bool _ORDERING_TOGETHERReady = false; // this is used because in case of generics 
    
        #endregion
    
        #region Static methods
    
        #endregion
    
        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/transition/TransitionSet.html#getTransitionAt(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Android.Transition.Transition"/></returns>
        public Android.Transition.Transition GetTransitionAt(int arg0)
        {
            return IExecuteWithSignature<Android.Transition.Transition>("getTransitionAt", "(I)Landroid/transition/Transition;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/transition/TransitionSet.html#addTransition(android.transition.Transition)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Transition.Transition"/></param>
        /// <returns><see cref="Android.Transition.TransitionSet"/></returns>
        public Android.Transition.TransitionSet AddTransition(Android.Transition.Transition arg0)
        {
            return IExecuteWithSignature<Android.Transition.TransitionSet>("addTransition", "(Landroid/transition/Transition;)Landroid/transition/TransitionSet;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/transition/TransitionSet.html#removeTransition(android.transition.Transition)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Transition.Transition"/></param>
        /// <returns><see cref="Android.Transition.TransitionSet"/></returns>
        public Android.Transition.TransitionSet RemoveTransition(Android.Transition.Transition arg0)
        {
            return IExecuteWithSignature<Android.Transition.TransitionSet>("removeTransition", "(Landroid/transition/Transition;)Landroid/transition/TransitionSet;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/transition/TransitionSet.html#setOrdering(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Android.Transition.TransitionSet"/></returns>
        public Android.Transition.TransitionSet SetOrdering(int arg0)
        {
            return IExecuteWithSignature<Android.Transition.TransitionSet>("setOrdering", "(I)Landroid/transition/TransitionSet;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/transition/TransitionSet.html#getOrdering()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetOrdering()
        {
            return IExecuteWithSignature<int>("getOrdering", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/transition/TransitionSet.html#getTransitionCount()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetTransitionCount()
        {
            return IExecuteWithSignature<int>("getTransitionCount", "()I");
        }
    
        #endregion
    
        #region Nested classes
    
        #endregion
    
        // TODO: complete the class
    }
    #endregion
}