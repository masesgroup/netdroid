/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.10.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Transition
{
    #region Visibility declaration
    /// <summary>
    /// <see href="https://developer.android.com/reference/android/transition/Visibility.html"/>
    /// </summary>
    public partial class Visibility : Android.Transition.Transition
    {
        const string _bridgeClassName = "android.transition.Visibility";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        [global::System.Obsolete("Visibility class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public Visibility() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        [global::System.Obsolete("Visibility class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public Visibility(params object[] args) : base(args) { }
    
        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
    
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => true;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;
    
        // TODO: complete the class
    
    }
    #endregion

    #region Visibility implementation
    public partial class Visibility
    {
        #region Constructors
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/transition/Visibility.html#%3Cinit%3E(android.content.Context,android.util.AttributeSet)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Content.Context"/></param>
        /// <param name="arg1"><see cref="Android.Util.AttributeSet"/></param>
        public Visibility(Android.Content.Context arg0, Android.Util.AttributeSet arg1)
            : base(arg0, arg1)
        {
        }
    
        #endregion
    
        #region Class/Interface conversion operators
    
        #endregion
    
        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/transition/Visibility.html#MODE_IN"/>
        /// </summary>
        public static int MODE_IN { get { if (!_MODE_INReady) { _MODE_INContent = SGetField<int>(LocalBridgeClazz, "MODE_IN"); _MODE_INReady = true; } return _MODE_INContent; } }
        private static int _MODE_INContent = default;
        private static bool _MODE_INReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/transition/Visibility.html#MODE_OUT"/>
        /// </summary>
        public static int MODE_OUT { get { if (!_MODE_OUTReady) { _MODE_OUTContent = SGetField<int>(LocalBridgeClazz, "MODE_OUT"); _MODE_OUTReady = true; } return _MODE_OUTContent; } }
        private static int _MODE_OUTContent = default;
        private static bool _MODE_OUTReady = false; // this is used because in case of generics 
    
        #endregion
    
        #region Static methods
    
        #endregion
    
        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/transition/Visibility.html#onAppear(android.view.ViewGroup,android.transition.TransitionValues,int,android.transition.TransitionValues,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.ViewGroup"/></param>
        /// <param name="arg1"><see cref="Android.Transition.TransitionValues"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <param name="arg3"><see cref="Android.Transition.TransitionValues"/></param>
        /// <param name="arg4"><see cref="int"/></param>
        /// <returns><see cref="Android.Animation.Animator"/></returns>
        public Android.Animation.Animator OnAppear(Android.View.ViewGroup arg0, Android.Transition.TransitionValues arg1, int arg2, Android.Transition.TransitionValues arg3, int arg4)
        {
            return IExecuteWithSignature<Android.Animation.Animator>("onAppear", "(Landroid/view/ViewGroup;Landroid/transition/TransitionValues;ILandroid/transition/TransitionValues;I)Landroid/animation/Animator;", arg0, arg1, arg2, arg3, arg4);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/transition/Visibility.html#onAppear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.ViewGroup"/></param>
        /// <param name="arg1"><see cref="Android.View.View"/></param>
        /// <param name="arg2"><see cref="Android.Transition.TransitionValues"/></param>
        /// <param name="arg3"><see cref="Android.Transition.TransitionValues"/></param>
        /// <returns><see cref="Android.Animation.Animator"/></returns>
        public Android.Animation.Animator OnAppear(Android.View.ViewGroup arg0, Android.View.View arg1, Android.Transition.TransitionValues arg2, Android.Transition.TransitionValues arg3)
        {
            return IExecuteWithSignature<Android.Animation.Animator>("onAppear", "(Landroid/view/ViewGroup;Landroid/view/View;Landroid/transition/TransitionValues;Landroid/transition/TransitionValues;)Landroid/animation/Animator;", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/transition/Visibility.html#onDisappear(android.view.ViewGroup,android.transition.TransitionValues,int,android.transition.TransitionValues,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.ViewGroup"/></param>
        /// <param name="arg1"><see cref="Android.Transition.TransitionValues"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <param name="arg3"><see cref="Android.Transition.TransitionValues"/></param>
        /// <param name="arg4"><see cref="int"/></param>
        /// <returns><see cref="Android.Animation.Animator"/></returns>
        public Android.Animation.Animator OnDisappear(Android.View.ViewGroup arg0, Android.Transition.TransitionValues arg1, int arg2, Android.Transition.TransitionValues arg3, int arg4)
        {
            return IExecuteWithSignature<Android.Animation.Animator>("onDisappear", "(Landroid/view/ViewGroup;Landroid/transition/TransitionValues;ILandroid/transition/TransitionValues;I)Landroid/animation/Animator;", arg0, arg1, arg2, arg3, arg4);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/transition/Visibility.html#onDisappear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.View.ViewGroup"/></param>
        /// <param name="arg1"><see cref="Android.View.View"/></param>
        /// <param name="arg2"><see cref="Android.Transition.TransitionValues"/></param>
        /// <param name="arg3"><see cref="Android.Transition.TransitionValues"/></param>
        /// <returns><see cref="Android.Animation.Animator"/></returns>
        public Android.Animation.Animator OnDisappear(Android.View.ViewGroup arg0, Android.View.View arg1, Android.Transition.TransitionValues arg2, Android.Transition.TransitionValues arg3)
        {
            return IExecuteWithSignature<Android.Animation.Animator>("onDisappear", "(Landroid/view/ViewGroup;Landroid/view/View;Landroid/transition/TransitionValues;Landroid/transition/TransitionValues;)Landroid/animation/Animator;", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/transition/Visibility.html#isVisible(android.transition.TransitionValues)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Transition.TransitionValues"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool IsVisible(Android.Transition.TransitionValues arg0)
        {
            return IExecuteWithSignature<bool>("isVisible", "(Landroid/transition/TransitionValues;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/transition/Visibility.html#getMode()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetMode()
        {
            return IExecuteWithSignature<int>("getMode", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/transition/Visibility.html#setMode(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetMode(int arg0)
        {
            IExecuteWithSignature("setMode", "(I)V", arg0);
        }
    
        #endregion
    
        #region Nested classes
    
        #endregion
    
        // TODO: complete the class
    }
    #endregion
}