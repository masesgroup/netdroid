/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.9.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Provider
{
    #region Contacts declaration
    /// <summary>
    /// <see href="https://developer.android.com/reference/android/provider/Contacts.html"/>
    /// </summary>
    [global::System.Obsolete()]
    public partial class Contacts : MASES.JCOBridge.C2JBridge.JVMBridgeBase<Contacts>
    {
        const string _bridgeClassName = "android.provider.Contacts";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public Contacts() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public Contacts(params object[] args) : base(args) { }

        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class
        #region ContactMethods declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/provider/Contacts.ContactMethods.html"/>
        /// </summary>
        [global::System.Obsolete()]
        public partial class ContactMethods : MASES.JCOBridge.C2JBridge.JVMBridgeBase<ContactMethods>
        {
            const string _bridgeClassName = "android.provider.Contacts$ContactMethods";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public ContactMethods() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public ContactMethods(params object[] args) : base(args) { }

            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;

            // TODO: complete the class

        }
        #endregion

        #region ContactMethodsColumns declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/provider/Contacts.ContactMethodsColumns.html"/>
        /// </summary>
        [global::System.Obsolete()]
        public partial class ContactMethodsColumns : MASES.JCOBridge.C2JBridge.JVMBridgeBase<ContactMethodsColumns>
        {
            const string _bridgeClassName = "android.provider.Contacts$ContactMethodsColumns";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            [global::System.Obsolete("ContactMethodsColumns class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public ContactMethodsColumns() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            [global::System.Obsolete("ContactMethodsColumns class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public ContactMethodsColumns(params object[] args) : base(args) { }

            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => true;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => true;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;

            // TODO: complete the class

        }
        #endregion

        #region Extensions declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/provider/Contacts.Extensions.html"/>
        /// </summary>
        [global::System.Obsolete()]
        public partial class Extensions : MASES.JCOBridge.C2JBridge.JVMBridgeBase<Extensions>
        {
            const string _bridgeClassName = "android.provider.Contacts$Extensions";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public Extensions() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public Extensions(params object[] args) : base(args) { }

            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;

            // TODO: complete the class

        }
        #endregion

        #region ExtensionsColumns declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/provider/Contacts.ExtensionsColumns.html"/>
        /// </summary>
        [global::System.Obsolete()]
        public partial class ExtensionsColumns : MASES.JCOBridge.C2JBridge.JVMBridgeBase<ExtensionsColumns>
        {
            const string _bridgeClassName = "android.provider.Contacts$ExtensionsColumns";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            [global::System.Obsolete("ExtensionsColumns class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public ExtensionsColumns() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            [global::System.Obsolete("ExtensionsColumns class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public ExtensionsColumns(params object[] args) : base(args) { }

            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => true;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => true;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;

            // TODO: complete the class

        }
        #endregion

        #region GroupMembership declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/provider/Contacts.GroupMembership.html"/>
        /// </summary>
        [global::System.Obsolete()]
        public partial class GroupMembership : MASES.JCOBridge.C2JBridge.JVMBridgeBase<GroupMembership>
        {
            const string _bridgeClassName = "android.provider.Contacts$GroupMembership";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public GroupMembership() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public GroupMembership(params object[] args) : base(args) { }

            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;

            // TODO: complete the class

        }
        #endregion

        #region Groups declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/provider/Contacts.Groups.html"/>
        /// </summary>
        [global::System.Obsolete()]
        public partial class Groups : MASES.JCOBridge.C2JBridge.JVMBridgeBase<Groups>
        {
            const string _bridgeClassName = "android.provider.Contacts$Groups";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public Groups() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public Groups(params object[] args) : base(args) { }

            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;

            // TODO: complete the class

        }
        #endregion

        #region GroupsColumns declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/provider/Contacts.GroupsColumns.html"/>
        /// </summary>
        [global::System.Obsolete()]
        public partial class GroupsColumns : MASES.JCOBridge.C2JBridge.JVMBridgeBase<GroupsColumns>
        {
            const string _bridgeClassName = "android.provider.Contacts$GroupsColumns";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            [global::System.Obsolete("GroupsColumns class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public GroupsColumns() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            [global::System.Obsolete("GroupsColumns class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public GroupsColumns(params object[] args) : base(args) { }

            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => true;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => true;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;

            // TODO: complete the class

        }
        #endregion

        #region Intents declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/provider/Contacts.Intents.html"/>
        /// </summary>
        [global::System.Obsolete()]
        public partial class Intents : MASES.JCOBridge.C2JBridge.JVMBridgeBase<Intents>
        {
            const string _bridgeClassName = "android.provider.Contacts$Intents";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public Intents() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public Intents(params object[] args) : base(args) { }

            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;

            // TODO: complete the class
            #region UI declaration
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.Intents.UI.html"/>
            /// </summary>
            [global::System.Obsolete()]
            public partial class UI : MASES.JCOBridge.C2JBridge.JVMBridgeBase<UI>
            {
                const string _bridgeClassName = "android.provider.Contacts$Intents$UI";
                /// <summary>
                /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
                /// </summary>
                public UI() { }
                /// <summary>
                /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
                /// </summary>
                public UI(params object[] args) : base(args) { }

                private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
                private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
                /// </summary>
                public override string BridgeClassName => _bridgeClassName;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
                /// </summary>
                public override bool IsBridgeAbstract => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
                /// </summary>
                public override bool IsBridgeCloseable => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
                /// </summary>
                public override bool IsBridgeInterface => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
                /// </summary>
                public override bool IsBridgeStatic => true;

                // TODO: complete the class

            }
            #endregion

            #region Insert declaration
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.Intents.Insert.html"/>
            /// </summary>
            [global::System.Obsolete()]
            public partial class Insert : MASES.JCOBridge.C2JBridge.JVMBridgeBase<Insert>
            {
                const string _bridgeClassName = "android.provider.Contacts$Intents$Insert";
                /// <summary>
                /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
                /// </summary>
                public Insert() { }
                /// <summary>
                /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
                /// </summary>
                public Insert(params object[] args) : base(args) { }

                private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
                private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
                /// </summary>
                public override string BridgeClassName => _bridgeClassName;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
                /// </summary>
                public override bool IsBridgeAbstract => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
                /// </summary>
                public override bool IsBridgeCloseable => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
                /// </summary>
                public override bool IsBridgeInterface => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
                /// </summary>
                public override bool IsBridgeStatic => true;

                // TODO: complete the class

            }
            #endregion

        
        }
        #endregion

        #region OrganizationColumns declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/provider/Contacts.OrganizationColumns.html"/>
        /// </summary>
        [global::System.Obsolete()]
        public partial class OrganizationColumns : MASES.JCOBridge.C2JBridge.JVMBridgeBase<OrganizationColumns>
        {
            const string _bridgeClassName = "android.provider.Contacts$OrganizationColumns";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            [global::System.Obsolete("OrganizationColumns class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public OrganizationColumns() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            [global::System.Obsolete("OrganizationColumns class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public OrganizationColumns(params object[] args) : base(args) { }

            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => true;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => true;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;

            // TODO: complete the class

        }
        #endregion

        #region Organizations declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/provider/Contacts.Organizations.html"/>
        /// </summary>
        [global::System.Obsolete()]
        public partial class Organizations : MASES.JCOBridge.C2JBridge.JVMBridgeBase<Organizations>
        {
            const string _bridgeClassName = "android.provider.Contacts$Organizations";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public Organizations() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public Organizations(params object[] args) : base(args) { }

            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;

            // TODO: complete the class

        }
        #endregion

        #region People declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/provider/Contacts.People.html"/>
        /// </summary>
        [global::System.Obsolete()]
        public partial class People : MASES.JCOBridge.C2JBridge.JVMBridgeBase<People>
        {
            const string _bridgeClassName = "android.provider.Contacts$People";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public People() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public People(params object[] args) : base(args) { }

            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;

            // TODO: complete the class
            #region Phones declaration
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.People.Phones.html"/>
            /// </summary>
            [global::System.Obsolete()]
            public partial class Phones : MASES.JCOBridge.C2JBridge.JVMBridgeBase<Phones>
            {
                const string _bridgeClassName = "android.provider.Contacts$People$Phones";
                /// <summary>
                /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
                /// </summary>
                public Phones() { }
                /// <summary>
                /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
                /// </summary>
                public Phones(params object[] args) : base(args) { }

                private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
                private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
                /// </summary>
                public override string BridgeClassName => _bridgeClassName;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
                /// </summary>
                public override bool IsBridgeAbstract => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
                /// </summary>
                public override bool IsBridgeCloseable => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
                /// </summary>
                public override bool IsBridgeInterface => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
                /// </summary>
                public override bool IsBridgeStatic => true;

                // TODO: complete the class

            }
            #endregion

            #region Extensions declaration
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.People.Extensions.html"/>
            /// </summary>
            [global::System.Obsolete()]
            public partial class Extensions : MASES.JCOBridge.C2JBridge.JVMBridgeBase<Extensions>
            {
                const string _bridgeClassName = "android.provider.Contacts$People$Extensions";
                /// <summary>
                /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
                /// </summary>
                public Extensions() { }
                /// <summary>
                /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
                /// </summary>
                public Extensions(params object[] args) : base(args) { }

                private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
                private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
                /// </summary>
                public override string BridgeClassName => _bridgeClassName;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
                /// </summary>
                public override bool IsBridgeAbstract => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
                /// </summary>
                public override bool IsBridgeCloseable => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
                /// </summary>
                public override bool IsBridgeInterface => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
                /// </summary>
                public override bool IsBridgeStatic => true;

                // TODO: complete the class

            }
            #endregion

            #region ContactMethods declaration
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.People.ContactMethods.html"/>
            /// </summary>
            [global::System.Obsolete()]
            public partial class ContactMethods : MASES.JCOBridge.C2JBridge.JVMBridgeBase<ContactMethods>
            {
                const string _bridgeClassName = "android.provider.Contacts$People$ContactMethods";
                /// <summary>
                /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
                /// </summary>
                public ContactMethods() { }
                /// <summary>
                /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
                /// </summary>
                public ContactMethods(params object[] args) : base(args) { }

                private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
                private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
                /// </summary>
                public override string BridgeClassName => _bridgeClassName;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
                /// </summary>
                public override bool IsBridgeAbstract => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
                /// </summary>
                public override bool IsBridgeCloseable => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
                /// </summary>
                public override bool IsBridgeInterface => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
                /// </summary>
                public override bool IsBridgeStatic => true;

                // TODO: complete the class

            }
            #endregion

        
        }
        #endregion

        #region PeopleColumns declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/provider/Contacts.PeopleColumns.html"/>
        /// </summary>
        [global::System.Obsolete()]
        public partial class PeopleColumns : MASES.JCOBridge.C2JBridge.JVMBridgeBase<PeopleColumns>
        {
            const string _bridgeClassName = "android.provider.Contacts$PeopleColumns";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            [global::System.Obsolete("PeopleColumns class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public PeopleColumns() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            [global::System.Obsolete("PeopleColumns class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public PeopleColumns(params object[] args) : base(args) { }

            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => true;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => true;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;

            // TODO: complete the class

        }
        #endregion

        #region Phones declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/provider/Contacts.Phones.html"/>
        /// </summary>
        [global::System.Obsolete()]
        public partial class Phones : MASES.JCOBridge.C2JBridge.JVMBridgeBase<Phones>
        {
            const string _bridgeClassName = "android.provider.Contacts$Phones";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public Phones() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public Phones(params object[] args) : base(args) { }

            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;

            // TODO: complete the class

        }
        #endregion

        #region PhonesColumns declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/provider/Contacts.PhonesColumns.html"/>
        /// </summary>
        [global::System.Obsolete()]
        public partial class PhonesColumns : MASES.JCOBridge.C2JBridge.JVMBridgeBase<PhonesColumns>
        {
            const string _bridgeClassName = "android.provider.Contacts$PhonesColumns";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            [global::System.Obsolete("PhonesColumns class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public PhonesColumns() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            [global::System.Obsolete("PhonesColumns class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public PhonesColumns(params object[] args) : base(args) { }

            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => true;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => true;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;

            // TODO: complete the class

        }
        #endregion

        #region Photos declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/provider/Contacts.Photos.html"/>
        /// </summary>
        [global::System.Obsolete()]
        public partial class Photos : MASES.JCOBridge.C2JBridge.JVMBridgeBase<Photos>
        {
            const string _bridgeClassName = "android.provider.Contacts$Photos";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public Photos() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public Photos(params object[] args) : base(args) { }

            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;

            // TODO: complete the class

        }
        #endregion

        #region PhotosColumns declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/provider/Contacts.PhotosColumns.html"/>
        /// </summary>
        [global::System.Obsolete()]
        public partial class PhotosColumns : MASES.JCOBridge.C2JBridge.JVMBridgeBase<PhotosColumns>
        {
            const string _bridgeClassName = "android.provider.Contacts$PhotosColumns";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            [global::System.Obsolete("PhotosColumns class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public PhotosColumns() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            [global::System.Obsolete("PhotosColumns class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public PhotosColumns(params object[] args) : base(args) { }

            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => true;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => true;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;

            // TODO: complete the class

        }
        #endregion

        #region PresenceColumns declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/provider/Contacts.PresenceColumns.html"/>
        /// </summary>
        [global::System.Obsolete()]
        public partial class PresenceColumns : MASES.JCOBridge.C2JBridge.JVMBridgeBase<PresenceColumns>
        {
            const string _bridgeClassName = "android.provider.Contacts$PresenceColumns";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            [global::System.Obsolete("PresenceColumns class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public PresenceColumns() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            [global::System.Obsolete("PresenceColumns class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public PresenceColumns(params object[] args) : base(args) { }

            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => true;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => true;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;

            // TODO: complete the class

        }
        #endregion

        #region Settings declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/provider/Contacts.Settings.html"/>
        /// </summary>
        [global::System.Obsolete()]
        public partial class Settings : MASES.JCOBridge.C2JBridge.JVMBridgeBase<Settings>
        {
            const string _bridgeClassName = "android.provider.Contacts$Settings";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public Settings() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public Settings(params object[] args) : base(args) { }

            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;

            // TODO: complete the class

        }
        #endregion

        #region SettingsColumns declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/provider/Contacts.SettingsColumns.html"/>
        /// </summary>
        [global::System.Obsolete()]
        public partial class SettingsColumns : MASES.JCOBridge.C2JBridge.JVMBridgeBase<SettingsColumns>
        {
            const string _bridgeClassName = "android.provider.Contacts$SettingsColumns";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            [global::System.Obsolete("SettingsColumns class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public SettingsColumns() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            [global::System.Obsolete("SettingsColumns class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public SettingsColumns(params object[] args) : base(args) { }

            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => true;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => true;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;

            // TODO: complete the class

        }
        #endregion

    
    }
    #endregion

    #region Contacts implementation
    public partial class Contacts
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/provider/Contacts.html#CONTENT_URI"/>
        /// </summary>
        [global::System.Obsolete()]
        public static Android.Net.Uri CONTENT_URI { get { if (!_CONTENT_URIReady) { _CONTENT_URIContent = SGetField<Android.Net.Uri>(LocalBridgeClazz, "CONTENT_URI"); _CONTENT_URIReady = true; } return _CONTENT_URIContent; } }
        private static Android.Net.Uri _CONTENT_URIContent = default;
        private static bool _CONTENT_URIReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/provider/Contacts.html#KIND_EMAIL"/>
        /// </summary>
        [global::System.Obsolete()]
        public static int KIND_EMAIL { get { if (!_KIND_EMAILReady) { _KIND_EMAILContent = SGetField<int>(LocalBridgeClazz, "KIND_EMAIL"); _KIND_EMAILReady = true; } return _KIND_EMAILContent; } }
        private static int _KIND_EMAILContent = default;
        private static bool _KIND_EMAILReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/provider/Contacts.html#KIND_IM"/>
        /// </summary>
        [global::System.Obsolete()]
        public static int KIND_IM { get { if (!_KIND_IMReady) { _KIND_IMContent = SGetField<int>(LocalBridgeClazz, "KIND_IM"); _KIND_IMReady = true; } return _KIND_IMContent; } }
        private static int _KIND_IMContent = default;
        private static bool _KIND_IMReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/provider/Contacts.html#KIND_ORGANIZATION"/>
        /// </summary>
        [global::System.Obsolete()]
        public static int KIND_ORGANIZATION { get { if (!_KIND_ORGANIZATIONReady) { _KIND_ORGANIZATIONContent = SGetField<int>(LocalBridgeClazz, "KIND_ORGANIZATION"); _KIND_ORGANIZATIONReady = true; } return _KIND_ORGANIZATIONContent; } }
        private static int _KIND_ORGANIZATIONContent = default;
        private static bool _KIND_ORGANIZATIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/provider/Contacts.html#KIND_PHONE"/>
        /// </summary>
        [global::System.Obsolete()]
        public static int KIND_PHONE { get { if (!_KIND_PHONEReady) { _KIND_PHONEContent = SGetField<int>(LocalBridgeClazz, "KIND_PHONE"); _KIND_PHONEReady = true; } return _KIND_PHONEContent; } }
        private static int _KIND_PHONEContent = default;
        private static bool _KIND_PHONEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/provider/Contacts.html#KIND_POSTAL"/>
        /// </summary>
        [global::System.Obsolete()]
        public static int KIND_POSTAL { get { if (!_KIND_POSTALReady) { _KIND_POSTALContent = SGetField<int>(LocalBridgeClazz, "KIND_POSTAL"); _KIND_POSTALReady = true; } return _KIND_POSTALContent; } }
        private static int _KIND_POSTALContent = default;
        private static bool _KIND_POSTALReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/provider/Contacts.html#AUTHORITY"/>
        /// </summary>
        [global::System.Obsolete()]
        public static Java.Lang.String AUTHORITY { get { if (!_AUTHORITYReady) { _AUTHORITYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "AUTHORITY"); _AUTHORITYReady = true; } return _AUTHORITYContent; } }
        private static Java.Lang.String _AUTHORITYContent = default;
        private static bool _AUTHORITYReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods

        #endregion

        #region Nested classes
        #region ContactMethods implementation
        public partial class ContactMethods : Android.Provider.IBaseColumns
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators
            /// <summary>
            /// Converter from <see cref="Android.Provider.Contacts.ContactMethods"/> to <see cref="Android.Provider.BaseColumns"/>
            /// </summary>
            public static implicit operator Android.Provider.BaseColumns(Android.Provider.Contacts.ContactMethods t) => t.Cast<Android.Provider.BaseColumns>();

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.ContactMethods.html#CONTENT_EMAIL_URI"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Android.Net.Uri CONTENT_EMAIL_URI { get { if (!_CONTENT_EMAIL_URIReady) { _CONTENT_EMAIL_URIContent = SGetField<Android.Net.Uri>(LocalBridgeClazz, "CONTENT_EMAIL_URI"); _CONTENT_EMAIL_URIReady = true; } return _CONTENT_EMAIL_URIContent; } }
            private static Android.Net.Uri _CONTENT_EMAIL_URIContent = default;
            private static bool _CONTENT_EMAIL_URIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.ContactMethods.html#CONTENT_URI"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Android.Net.Uri CONTENT_URI { get { if (!_CONTENT_URIReady) { _CONTENT_URIContent = SGetField<Android.Net.Uri>(LocalBridgeClazz, "CONTENT_URI"); _CONTENT_URIReady = true; } return _CONTENT_URIContent; } }
            private static Android.Net.Uri _CONTENT_URIContent = default;
            private static bool _CONTENT_URIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.ContactMethods.html#PROTOCOL_AIM"/>
            /// </summary>
            [global::System.Obsolete()]
            public static int PROTOCOL_AIM { get { if (!_PROTOCOL_AIMReady) { _PROTOCOL_AIMContent = SGetField<int>(LocalBridgeClazz, "PROTOCOL_AIM"); _PROTOCOL_AIMReady = true; } return _PROTOCOL_AIMContent; } }
            private static int _PROTOCOL_AIMContent = default;
            private static bool _PROTOCOL_AIMReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.ContactMethods.html#PROTOCOL_GOOGLE_TALK"/>
            /// </summary>
            [global::System.Obsolete()]
            public static int PROTOCOL_GOOGLE_TALK { get { if (!_PROTOCOL_GOOGLE_TALKReady) { _PROTOCOL_GOOGLE_TALKContent = SGetField<int>(LocalBridgeClazz, "PROTOCOL_GOOGLE_TALK"); _PROTOCOL_GOOGLE_TALKReady = true; } return _PROTOCOL_GOOGLE_TALKContent; } }
            private static int _PROTOCOL_GOOGLE_TALKContent = default;
            private static bool _PROTOCOL_GOOGLE_TALKReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.ContactMethods.html#PROTOCOL_ICQ"/>
            /// </summary>
            [global::System.Obsolete()]
            public static int PROTOCOL_ICQ { get { if (!_PROTOCOL_ICQReady) { _PROTOCOL_ICQContent = SGetField<int>(LocalBridgeClazz, "PROTOCOL_ICQ"); _PROTOCOL_ICQReady = true; } return _PROTOCOL_ICQContent; } }
            private static int _PROTOCOL_ICQContent = default;
            private static bool _PROTOCOL_ICQReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.ContactMethods.html#PROTOCOL_JABBER"/>
            /// </summary>
            [global::System.Obsolete()]
            public static int PROTOCOL_JABBER { get { if (!_PROTOCOL_JABBERReady) { _PROTOCOL_JABBERContent = SGetField<int>(LocalBridgeClazz, "PROTOCOL_JABBER"); _PROTOCOL_JABBERReady = true; } return _PROTOCOL_JABBERContent; } }
            private static int _PROTOCOL_JABBERContent = default;
            private static bool _PROTOCOL_JABBERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.ContactMethods.html#PROTOCOL_MSN"/>
            /// </summary>
            [global::System.Obsolete()]
            public static int PROTOCOL_MSN { get { if (!_PROTOCOL_MSNReady) { _PROTOCOL_MSNContent = SGetField<int>(LocalBridgeClazz, "PROTOCOL_MSN"); _PROTOCOL_MSNReady = true; } return _PROTOCOL_MSNContent; } }
            private static int _PROTOCOL_MSNContent = default;
            private static bool _PROTOCOL_MSNReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.ContactMethods.html#PROTOCOL_QQ"/>
            /// </summary>
            [global::System.Obsolete()]
            public static int PROTOCOL_QQ { get { if (!_PROTOCOL_QQReady) { _PROTOCOL_QQContent = SGetField<int>(LocalBridgeClazz, "PROTOCOL_QQ"); _PROTOCOL_QQReady = true; } return _PROTOCOL_QQContent; } }
            private static int _PROTOCOL_QQContent = default;
            private static bool _PROTOCOL_QQReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.ContactMethods.html#PROTOCOL_SKYPE"/>
            /// </summary>
            [global::System.Obsolete()]
            public static int PROTOCOL_SKYPE { get { if (!_PROTOCOL_SKYPEReady) { _PROTOCOL_SKYPEContent = SGetField<int>(LocalBridgeClazz, "PROTOCOL_SKYPE"); _PROTOCOL_SKYPEReady = true; } return _PROTOCOL_SKYPEContent; } }
            private static int _PROTOCOL_SKYPEContent = default;
            private static bool _PROTOCOL_SKYPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.ContactMethods.html#PROTOCOL_YAHOO"/>
            /// </summary>
            [global::System.Obsolete()]
            public static int PROTOCOL_YAHOO { get { if (!_PROTOCOL_YAHOOReady) { _PROTOCOL_YAHOOContent = SGetField<int>(LocalBridgeClazz, "PROTOCOL_YAHOO"); _PROTOCOL_YAHOOReady = true; } return _PROTOCOL_YAHOOContent; } }
            private static int _PROTOCOL_YAHOOContent = default;
            private static bool _PROTOCOL_YAHOOReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.ContactMethods.html#CONTENT_EMAIL_ITEM_TYPE"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String CONTENT_EMAIL_ITEM_TYPE { get { if (!_CONTENT_EMAIL_ITEM_TYPEReady) { _CONTENT_EMAIL_ITEM_TYPEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CONTENT_EMAIL_ITEM_TYPE"); _CONTENT_EMAIL_ITEM_TYPEReady = true; } return _CONTENT_EMAIL_ITEM_TYPEContent; } }
            private static Java.Lang.String _CONTENT_EMAIL_ITEM_TYPEContent = default;
            private static bool _CONTENT_EMAIL_ITEM_TYPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.ContactMethods.html#CONTENT_EMAIL_TYPE"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String CONTENT_EMAIL_TYPE { get { if (!_CONTENT_EMAIL_TYPEReady) { _CONTENT_EMAIL_TYPEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CONTENT_EMAIL_TYPE"); _CONTENT_EMAIL_TYPEReady = true; } return _CONTENT_EMAIL_TYPEContent; } }
            private static Java.Lang.String _CONTENT_EMAIL_TYPEContent = default;
            private static bool _CONTENT_EMAIL_TYPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.ContactMethods.html#CONTENT_IM_ITEM_TYPE"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String CONTENT_IM_ITEM_TYPE { get { if (!_CONTENT_IM_ITEM_TYPEReady) { _CONTENT_IM_ITEM_TYPEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CONTENT_IM_ITEM_TYPE"); _CONTENT_IM_ITEM_TYPEReady = true; } return _CONTENT_IM_ITEM_TYPEContent; } }
            private static Java.Lang.String _CONTENT_IM_ITEM_TYPEContent = default;
            private static bool _CONTENT_IM_ITEM_TYPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.ContactMethods.html#CONTENT_POSTAL_ITEM_TYPE"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String CONTENT_POSTAL_ITEM_TYPE { get { if (!_CONTENT_POSTAL_ITEM_TYPEReady) { _CONTENT_POSTAL_ITEM_TYPEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CONTENT_POSTAL_ITEM_TYPE"); _CONTENT_POSTAL_ITEM_TYPEReady = true; } return _CONTENT_POSTAL_ITEM_TYPEContent; } }
            private static Java.Lang.String _CONTENT_POSTAL_ITEM_TYPEContent = default;
            private static bool _CONTENT_POSTAL_ITEM_TYPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.ContactMethods.html#CONTENT_POSTAL_TYPE"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String CONTENT_POSTAL_TYPE { get { if (!_CONTENT_POSTAL_TYPEReady) { _CONTENT_POSTAL_TYPEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CONTENT_POSTAL_TYPE"); _CONTENT_POSTAL_TYPEReady = true; } return _CONTENT_POSTAL_TYPEContent; } }
            private static Java.Lang.String _CONTENT_POSTAL_TYPEContent = default;
            private static bool _CONTENT_POSTAL_TYPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.ContactMethods.html#CONTENT_TYPE"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String CONTENT_TYPE { get { if (!_CONTENT_TYPEReady) { _CONTENT_TYPEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CONTENT_TYPE"); _CONTENT_TYPEReady = true; } return _CONTENT_TYPEContent; } }
            private static Java.Lang.String _CONTENT_TYPEContent = default;
            private static bool _CONTENT_TYPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.ContactMethods.html#DEFAULT_SORT_ORDER"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String DEFAULT_SORT_ORDER { get { if (!_DEFAULT_SORT_ORDERReady) { _DEFAULT_SORT_ORDERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "DEFAULT_SORT_ORDER"); _DEFAULT_SORT_ORDERReady = true; } return _DEFAULT_SORT_ORDERContent; } }
            private static Java.Lang.String _DEFAULT_SORT_ORDERContent = default;
            private static bool _DEFAULT_SORT_ORDERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.ContactMethods.html#PERSON_ID"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String PERSON_ID { get { if (!_PERSON_IDReady) { _PERSON_IDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "PERSON_ID"); _PERSON_IDReady = true; } return _PERSON_IDContent; } }
            private static Java.Lang.String _PERSON_IDContent = default;
            private static bool _PERSON_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.ContactMethods.html#POSTAL_LOCATION_LATITUDE"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String POSTAL_LOCATION_LATITUDE { get { if (!_POSTAL_LOCATION_LATITUDEReady) { _POSTAL_LOCATION_LATITUDEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "POSTAL_LOCATION_LATITUDE"); _POSTAL_LOCATION_LATITUDEReady = true; } return _POSTAL_LOCATION_LATITUDEContent; } }
            private static Java.Lang.String _POSTAL_LOCATION_LATITUDEContent = default;
            private static bool _POSTAL_LOCATION_LATITUDEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.ContactMethods.html#POSTAL_LOCATION_LONGITUDE"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String POSTAL_LOCATION_LONGITUDE { get { if (!_POSTAL_LOCATION_LONGITUDEReady) { _POSTAL_LOCATION_LONGITUDEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "POSTAL_LOCATION_LONGITUDE"); _POSTAL_LOCATION_LONGITUDEReady = true; } return _POSTAL_LOCATION_LONGITUDEContent; } }
            private static Java.Lang.String _POSTAL_LOCATION_LONGITUDEContent = default;
            private static bool _POSTAL_LOCATION_LONGITUDEReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.ContactMethods.html#getDisplayLabel(android.content.Context,int,int,java.lang.CharSequence)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Content.Context"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            /// <param name="arg2"><see cref="int"/></param>
            /// <param name="arg3"><see cref="Java.Lang.CharSequence"/></param>
            /// <returns><see cref="Java.Lang.CharSequence"/></returns>
            [global::System.Obsolete()]
            public static Java.Lang.CharSequence GetDisplayLabel(Android.Content.Context arg0, int arg1, int arg2, Java.Lang.CharSequence arg3)
            {
                return SExecuteWithSignature<Java.Lang.CharSequence>(LocalBridgeClazz, "getDisplayLabel", "(Landroid/content/Context;IILjava/lang/CharSequence;)Ljava/lang/CharSequence;", arg0, arg1, arg2, arg3);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.ContactMethods.html#decodeImProtocol(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="object"/></returns>
            [global::System.Obsolete()]
            public static object DecodeImProtocol(Java.Lang.String arg0)
            {
                return SExecuteWithSignature(LocalBridgeClazz, "decodeImProtocol", "(Ljava/lang/String;)Ljava/lang/Object;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.ContactMethods.html#encodeCustomImProtocol(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Java.Lang.String"/></returns>
            [global::System.Obsolete()]
            public static Java.Lang.String EncodeCustomImProtocol(Java.Lang.String arg0)
            {
                return SExecuteWithSignature<Java.Lang.String>(LocalBridgeClazz, "encodeCustomImProtocol", "(Ljava/lang/String;)Ljava/lang/String;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.ContactMethods.html#encodePredefinedImProtocol(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <returns><see cref="Java.Lang.String"/></returns>
            [global::System.Obsolete()]
            public static Java.Lang.String EncodePredefinedImProtocol(int arg0)
            {
                return SExecuteWithSignature<Java.Lang.String>(LocalBridgeClazz, "encodePredefinedImProtocol", "(I)Ljava/lang/String;", arg0);
            }

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.ContactMethods.html#addPostalLocation(android.content.Context,long,double,double)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Content.Context"/></param>
            /// <param name="arg1"><see cref="long"/></param>
            /// <param name="arg2"><see cref="double"/></param>
            /// <param name="arg3"><see cref="double"/></param>
            [global::System.Obsolete()]
            public void AddPostalLocation(Android.Content.Context arg0, long arg1, double arg2, double arg3)
            {
                IExecuteWithSignature("addPostalLocation", "(Landroid/content/Context;JDD)V", arg0, arg1, arg2, arg3);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region ContactMethodsColumns implementation
        public partial class ContactMethodsColumns
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.ContactMethodsColumns.html#TYPE_CUSTOM"/>
            /// </summary>
            [global::System.Obsolete()]
            public static int TYPE_CUSTOM { get { if (!_TYPE_CUSTOMReady) { _TYPE_CUSTOMContent = SGetField<int>(LocalBridgeClazz, "TYPE_CUSTOM"); _TYPE_CUSTOMReady = true; } return _TYPE_CUSTOMContent; } }
            private static int _TYPE_CUSTOMContent = default;
            private static bool _TYPE_CUSTOMReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.ContactMethodsColumns.html#TYPE_HOME"/>
            /// </summary>
            [global::System.Obsolete()]
            public static int TYPE_HOME { get { if (!_TYPE_HOMEReady) { _TYPE_HOMEContent = SGetField<int>(LocalBridgeClazz, "TYPE_HOME"); _TYPE_HOMEReady = true; } return _TYPE_HOMEContent; } }
            private static int _TYPE_HOMEContent = default;
            private static bool _TYPE_HOMEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.ContactMethodsColumns.html#TYPE_OTHER"/>
            /// </summary>
            [global::System.Obsolete()]
            public static int TYPE_OTHER { get { if (!_TYPE_OTHERReady) { _TYPE_OTHERContent = SGetField<int>(LocalBridgeClazz, "TYPE_OTHER"); _TYPE_OTHERReady = true; } return _TYPE_OTHERContent; } }
            private static int _TYPE_OTHERContent = default;
            private static bool _TYPE_OTHERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.ContactMethodsColumns.html#TYPE_WORK"/>
            /// </summary>
            [global::System.Obsolete()]
            public static int TYPE_WORK { get { if (!_TYPE_WORKReady) { _TYPE_WORKContent = SGetField<int>(LocalBridgeClazz, "TYPE_WORK"); _TYPE_WORKReady = true; } return _TYPE_WORKContent; } }
            private static int _TYPE_WORKContent = default;
            private static bool _TYPE_WORKReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.ContactMethodsColumns.html#AUX_DATA"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String AUX_DATA { get { if (!_AUX_DATAReady) { _AUX_DATAContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "AUX_DATA"); _AUX_DATAReady = true; } return _AUX_DATAContent; } }
            private static Java.Lang.String _AUX_DATAContent = default;
            private static bool _AUX_DATAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.ContactMethodsColumns.html#DATA"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String DATA { get { if (!_DATAReady) { _DATAContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "DATA"); _DATAReady = true; } return _DATAContent; } }
            private static Java.Lang.String _DATAContent = default;
            private static bool _DATAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.ContactMethodsColumns.html#ISPRIMARY"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String ISPRIMARY { get { if (!_ISPRIMARYReady) { _ISPRIMARYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ISPRIMARY"); _ISPRIMARYReady = true; } return _ISPRIMARYContent; } }
            private static Java.Lang.String _ISPRIMARYContent = default;
            private static bool _ISPRIMARYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.ContactMethodsColumns.html#KIND"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String KIND { get { if (!_KINDReady) { _KINDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KIND"); _KINDReady = true; } return _KINDContent; } }
            private static Java.Lang.String _KINDContent = default;
            private static bool _KINDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.ContactMethodsColumns.html#LABEL"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String LABEL { get { if (!_LABELReady) { _LABELContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "LABEL"); _LABELReady = true; } return _LABELContent; } }
            private static Java.Lang.String _LABELContent = default;
            private static bool _LABELReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.ContactMethodsColumns.html#TYPE"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String TYPE { get { if (!_TYPEReady) { _TYPEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "TYPE"); _TYPEReady = true; } return _TYPEContent; } }
            private static Java.Lang.String _TYPEContent = default;
            private static bool _TYPEReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region Extensions implementation
        public partial class Extensions : Android.Provider.IBaseColumns
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators
            /// <summary>
            /// Converter from <see cref="Android.Provider.Contacts.Extensions"/> to <see cref="Android.Provider.BaseColumns"/>
            /// </summary>
            public static implicit operator Android.Provider.BaseColumns(Android.Provider.Contacts.Extensions t) => t.Cast<Android.Provider.BaseColumns>();

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.Extensions.html#CONTENT_URI"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Android.Net.Uri CONTENT_URI { get { if (!_CONTENT_URIReady) { _CONTENT_URIContent = SGetField<Android.Net.Uri>(LocalBridgeClazz, "CONTENT_URI"); _CONTENT_URIReady = true; } return _CONTENT_URIContent; } }
            private static Android.Net.Uri _CONTENT_URIContent = default;
            private static bool _CONTENT_URIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.Extensions.html#CONTENT_ITEM_TYPE"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String CONTENT_ITEM_TYPE { get { if (!_CONTENT_ITEM_TYPEReady) { _CONTENT_ITEM_TYPEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CONTENT_ITEM_TYPE"); _CONTENT_ITEM_TYPEReady = true; } return _CONTENT_ITEM_TYPEContent; } }
            private static Java.Lang.String _CONTENT_ITEM_TYPEContent = default;
            private static bool _CONTENT_ITEM_TYPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.Extensions.html#CONTENT_TYPE"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String CONTENT_TYPE { get { if (!_CONTENT_TYPEReady) { _CONTENT_TYPEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CONTENT_TYPE"); _CONTENT_TYPEReady = true; } return _CONTENT_TYPEContent; } }
            private static Java.Lang.String _CONTENT_TYPEContent = default;
            private static bool _CONTENT_TYPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.Extensions.html#DEFAULT_SORT_ORDER"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String DEFAULT_SORT_ORDER { get { if (!_DEFAULT_SORT_ORDERReady) { _DEFAULT_SORT_ORDERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "DEFAULT_SORT_ORDER"); _DEFAULT_SORT_ORDERReady = true; } return _DEFAULT_SORT_ORDERContent; } }
            private static Java.Lang.String _DEFAULT_SORT_ORDERContent = default;
            private static bool _DEFAULT_SORT_ORDERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.Extensions.html#PERSON_ID"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String PERSON_ID { get { if (!_PERSON_IDReady) { _PERSON_IDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "PERSON_ID"); _PERSON_IDReady = true; } return _PERSON_IDContent; } }
            private static Java.Lang.String _PERSON_IDContent = default;
            private static bool _PERSON_IDReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region ExtensionsColumns implementation
        public partial class ExtensionsColumns
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.ExtensionsColumns.html#NAME"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String NAME { get { if (!_NAMEReady) { _NAMEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "NAME"); _NAMEReady = true; } return _NAMEContent; } }
            private static Java.Lang.String _NAMEContent = default;
            private static bool _NAMEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.ExtensionsColumns.html#VALUE"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String VALUE { get { if (!_VALUEReady) { _VALUEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "VALUE"); _VALUEReady = true; } return _VALUEContent; } }
            private static Java.Lang.String _VALUEContent = default;
            private static bool _VALUEReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region GroupMembership implementation
        public partial class GroupMembership : Android.Provider.IBaseColumns
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators
            /// <summary>
            /// Converter from <see cref="Android.Provider.Contacts.GroupMembership"/> to <see cref="Android.Provider.BaseColumns"/>
            /// </summary>
            public static implicit operator Android.Provider.BaseColumns(Android.Provider.Contacts.GroupMembership t) => t.Cast<Android.Provider.BaseColumns>();

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.GroupMembership.html#CONTENT_URI"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Android.Net.Uri CONTENT_URI { get { if (!_CONTENT_URIReady) { _CONTENT_URIContent = SGetField<Android.Net.Uri>(LocalBridgeClazz, "CONTENT_URI"); _CONTENT_URIReady = true; } return _CONTENT_URIContent; } }
            private static Android.Net.Uri _CONTENT_URIContent = default;
            private static bool _CONTENT_URIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.GroupMembership.html#RAW_CONTENT_URI"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Android.Net.Uri RAW_CONTENT_URI { get { if (!_RAW_CONTENT_URIReady) { _RAW_CONTENT_URIContent = SGetField<Android.Net.Uri>(LocalBridgeClazz, "RAW_CONTENT_URI"); _RAW_CONTENT_URIReady = true; } return _RAW_CONTENT_URIContent; } }
            private static Android.Net.Uri _RAW_CONTENT_URIContent = default;
            private static bool _RAW_CONTENT_URIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.GroupMembership.html#CONTENT_DIRECTORY"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String CONTENT_DIRECTORY { get { if (!_CONTENT_DIRECTORYReady) { _CONTENT_DIRECTORYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CONTENT_DIRECTORY"); _CONTENT_DIRECTORYReady = true; } return _CONTENT_DIRECTORYContent; } }
            private static Java.Lang.String _CONTENT_DIRECTORYContent = default;
            private static bool _CONTENT_DIRECTORYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.GroupMembership.html#CONTENT_ITEM_TYPE"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String CONTENT_ITEM_TYPE { get { if (!_CONTENT_ITEM_TYPEReady) { _CONTENT_ITEM_TYPEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CONTENT_ITEM_TYPE"); _CONTENT_ITEM_TYPEReady = true; } return _CONTENT_ITEM_TYPEContent; } }
            private static Java.Lang.String _CONTENT_ITEM_TYPEContent = default;
            private static bool _CONTENT_ITEM_TYPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.GroupMembership.html#CONTENT_TYPE"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String CONTENT_TYPE { get { if (!_CONTENT_TYPEReady) { _CONTENT_TYPEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CONTENT_TYPE"); _CONTENT_TYPEReady = true; } return _CONTENT_TYPEContent; } }
            private static Java.Lang.String _CONTENT_TYPEContent = default;
            private static bool _CONTENT_TYPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.GroupMembership.html#DEFAULT_SORT_ORDER"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String DEFAULT_SORT_ORDER { get { if (!_DEFAULT_SORT_ORDERReady) { _DEFAULT_SORT_ORDERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "DEFAULT_SORT_ORDER"); _DEFAULT_SORT_ORDERReady = true; } return _DEFAULT_SORT_ORDERContent; } }
            private static Java.Lang.String _DEFAULT_SORT_ORDERContent = default;
            private static bool _DEFAULT_SORT_ORDERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.GroupMembership.html#GROUP_ID"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String GROUP_ID { get { if (!_GROUP_IDReady) { _GROUP_IDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "GROUP_ID"); _GROUP_IDReady = true; } return _GROUP_IDContent; } }
            private static Java.Lang.String _GROUP_IDContent = default;
            private static bool _GROUP_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.GroupMembership.html#GROUP_SYNC_ACCOUNT"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String GROUP_SYNC_ACCOUNT { get { if (!_GROUP_SYNC_ACCOUNTReady) { _GROUP_SYNC_ACCOUNTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "GROUP_SYNC_ACCOUNT"); _GROUP_SYNC_ACCOUNTReady = true; } return _GROUP_SYNC_ACCOUNTContent; } }
            private static Java.Lang.String _GROUP_SYNC_ACCOUNTContent = default;
            private static bool _GROUP_SYNC_ACCOUNTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.GroupMembership.html#GROUP_SYNC_ACCOUNT_TYPE"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String GROUP_SYNC_ACCOUNT_TYPE { get { if (!_GROUP_SYNC_ACCOUNT_TYPEReady) { _GROUP_SYNC_ACCOUNT_TYPEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "GROUP_SYNC_ACCOUNT_TYPE"); _GROUP_SYNC_ACCOUNT_TYPEReady = true; } return _GROUP_SYNC_ACCOUNT_TYPEContent; } }
            private static Java.Lang.String _GROUP_SYNC_ACCOUNT_TYPEContent = default;
            private static bool _GROUP_SYNC_ACCOUNT_TYPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.GroupMembership.html#GROUP_SYNC_ID"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String GROUP_SYNC_ID { get { if (!_GROUP_SYNC_IDReady) { _GROUP_SYNC_IDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "GROUP_SYNC_ID"); _GROUP_SYNC_IDReady = true; } return _GROUP_SYNC_IDContent; } }
            private static Java.Lang.String _GROUP_SYNC_IDContent = default;
            private static bool _GROUP_SYNC_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.GroupMembership.html#PERSON_ID"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String PERSON_ID { get { if (!_PERSON_IDReady) { _PERSON_IDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "PERSON_ID"); _PERSON_IDReady = true; } return _PERSON_IDContent; } }
            private static Java.Lang.String _PERSON_IDContent = default;
            private static bool _PERSON_IDReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region Groups implementation
        public partial class Groups : Android.Provider.IBaseColumns
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators
            /// <summary>
            /// Converter from <see cref="Android.Provider.Contacts.Groups"/> to <see cref="Android.Provider.BaseColumns"/>
            /// </summary>
            public static implicit operator Android.Provider.BaseColumns(Android.Provider.Contacts.Groups t) => t.Cast<Android.Provider.BaseColumns>();

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.Groups.html#CONTENT_URI"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Android.Net.Uri CONTENT_URI { get { if (!_CONTENT_URIReady) { _CONTENT_URIContent = SGetField<Android.Net.Uri>(LocalBridgeClazz, "CONTENT_URI"); _CONTENT_URIReady = true; } return _CONTENT_URIContent; } }
            private static Android.Net.Uri _CONTENT_URIContent = default;
            private static bool _CONTENT_URIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.Groups.html#DELETED_CONTENT_URI"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Android.Net.Uri DELETED_CONTENT_URI { get { if (!_DELETED_CONTENT_URIReady) { _DELETED_CONTENT_URIContent = SGetField<Android.Net.Uri>(LocalBridgeClazz, "DELETED_CONTENT_URI"); _DELETED_CONTENT_URIReady = true; } return _DELETED_CONTENT_URIContent; } }
            private static Android.Net.Uri _DELETED_CONTENT_URIContent = default;
            private static bool _DELETED_CONTENT_URIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.Groups.html#CONTENT_ITEM_TYPE"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String CONTENT_ITEM_TYPE { get { if (!_CONTENT_ITEM_TYPEReady) { _CONTENT_ITEM_TYPEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CONTENT_ITEM_TYPE"); _CONTENT_ITEM_TYPEReady = true; } return _CONTENT_ITEM_TYPEContent; } }
            private static Java.Lang.String _CONTENT_ITEM_TYPEContent = default;
            private static bool _CONTENT_ITEM_TYPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.Groups.html#CONTENT_TYPE"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String CONTENT_TYPE { get { if (!_CONTENT_TYPEReady) { _CONTENT_TYPEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CONTENT_TYPE"); _CONTENT_TYPEReady = true; } return _CONTENT_TYPEContent; } }
            private static Java.Lang.String _CONTENT_TYPEContent = default;
            private static bool _CONTENT_TYPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.Groups.html#DEFAULT_SORT_ORDER"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String DEFAULT_SORT_ORDER { get { if (!_DEFAULT_SORT_ORDERReady) { _DEFAULT_SORT_ORDERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "DEFAULT_SORT_ORDER"); _DEFAULT_SORT_ORDERReady = true; } return _DEFAULT_SORT_ORDERContent; } }
            private static Java.Lang.String _DEFAULT_SORT_ORDERContent = default;
            private static bool _DEFAULT_SORT_ORDERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.Groups.html#GROUP_ANDROID_STARRED"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String GROUP_ANDROID_STARRED { get { if (!_GROUP_ANDROID_STARREDReady) { _GROUP_ANDROID_STARREDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "GROUP_ANDROID_STARRED"); _GROUP_ANDROID_STARREDReady = true; } return _GROUP_ANDROID_STARREDContent; } }
            private static Java.Lang.String _GROUP_ANDROID_STARREDContent = default;
            private static bool _GROUP_ANDROID_STARREDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.Groups.html#GROUP_MY_CONTACTS"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String GROUP_MY_CONTACTS { get { if (!_GROUP_MY_CONTACTSReady) { _GROUP_MY_CONTACTSContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "GROUP_MY_CONTACTS"); _GROUP_MY_CONTACTSReady = true; } return _GROUP_MY_CONTACTSContent; } }
            private static Java.Lang.String _GROUP_MY_CONTACTSContent = default;
            private static bool _GROUP_MY_CONTACTSReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region GroupsColumns implementation
        public partial class GroupsColumns
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.GroupsColumns.html#NAME"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String NAME { get { if (!_NAMEReady) { _NAMEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "NAME"); _NAMEReady = true; } return _NAMEContent; } }
            private static Java.Lang.String _NAMEContent = default;
            private static bool _NAMEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.GroupsColumns.html#NOTES"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String NOTES { get { if (!_NOTESReady) { _NOTESContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "NOTES"); _NOTESReady = true; } return _NOTESContent; } }
            private static Java.Lang.String _NOTESContent = default;
            private static bool _NOTESReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.GroupsColumns.html#SHOULD_SYNC"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String SHOULD_SYNC { get { if (!_SHOULD_SYNCReady) { _SHOULD_SYNCContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SHOULD_SYNC"); _SHOULD_SYNCReady = true; } return _SHOULD_SYNCContent; } }
            private static Java.Lang.String _SHOULD_SYNCContent = default;
            private static bool _SHOULD_SYNCReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.GroupsColumns.html#SYSTEM_ID"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String SYSTEM_ID { get { if (!_SYSTEM_IDReady) { _SYSTEM_IDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SYSTEM_ID"); _SYSTEM_IDReady = true; } return _SYSTEM_IDContent; } }
            private static Java.Lang.String _SYSTEM_IDContent = default;
            private static bool _SYSTEM_IDReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region Intents implementation
        public partial class Intents
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.Intents.html#ATTACH_IMAGE"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String ATTACH_IMAGE { get { if (!_ATTACH_IMAGEReady) { _ATTACH_IMAGEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ATTACH_IMAGE"); _ATTACH_IMAGEReady = true; } return _ATTACH_IMAGEContent; } }
            private static Java.Lang.String _ATTACH_IMAGEContent = default;
            private static bool _ATTACH_IMAGEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.Intents.html#EXTRA_CREATE_DESCRIPTION"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String EXTRA_CREATE_DESCRIPTION { get { if (!_EXTRA_CREATE_DESCRIPTIONReady) { _EXTRA_CREATE_DESCRIPTIONContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_CREATE_DESCRIPTION"); _EXTRA_CREATE_DESCRIPTIONReady = true; } return _EXTRA_CREATE_DESCRIPTIONContent; } }
            private static Java.Lang.String _EXTRA_CREATE_DESCRIPTIONContent = default;
            private static bool _EXTRA_CREATE_DESCRIPTIONReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.Intents.html#EXTRA_FORCE_CREATE"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String EXTRA_FORCE_CREATE { get { if (!_EXTRA_FORCE_CREATEReady) { _EXTRA_FORCE_CREATEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_FORCE_CREATE"); _EXTRA_FORCE_CREATEReady = true; } return _EXTRA_FORCE_CREATEContent; } }
            private static Java.Lang.String _EXTRA_FORCE_CREATEContent = default;
            private static bool _EXTRA_FORCE_CREATEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.Intents.html#SEARCH_SUGGESTION_CLICKED"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String SEARCH_SUGGESTION_CLICKED { get { if (!_SEARCH_SUGGESTION_CLICKEDReady) { _SEARCH_SUGGESTION_CLICKEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SEARCH_SUGGESTION_CLICKED"); _SEARCH_SUGGESTION_CLICKEDReady = true; } return _SEARCH_SUGGESTION_CLICKEDContent; } }
            private static Java.Lang.String _SEARCH_SUGGESTION_CLICKEDContent = default;
            private static bool _SEARCH_SUGGESTION_CLICKEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.Intents.html#SEARCH_SUGGESTION_CREATE_CONTACT_CLICKED"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String SEARCH_SUGGESTION_CREATE_CONTACT_CLICKED { get { if (!_SEARCH_SUGGESTION_CREATE_CONTACT_CLICKEDReady) { _SEARCH_SUGGESTION_CREATE_CONTACT_CLICKEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SEARCH_SUGGESTION_CREATE_CONTACT_CLICKED"); _SEARCH_SUGGESTION_CREATE_CONTACT_CLICKEDReady = true; } return _SEARCH_SUGGESTION_CREATE_CONTACT_CLICKEDContent; } }
            private static Java.Lang.String _SEARCH_SUGGESTION_CREATE_CONTACT_CLICKEDContent = default;
            private static bool _SEARCH_SUGGESTION_CREATE_CONTACT_CLICKEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.Intents.html#SEARCH_SUGGESTION_DIAL_NUMBER_CLICKED"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String SEARCH_SUGGESTION_DIAL_NUMBER_CLICKED { get { if (!_SEARCH_SUGGESTION_DIAL_NUMBER_CLICKEDReady) { _SEARCH_SUGGESTION_DIAL_NUMBER_CLICKEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SEARCH_SUGGESTION_DIAL_NUMBER_CLICKED"); _SEARCH_SUGGESTION_DIAL_NUMBER_CLICKEDReady = true; } return _SEARCH_SUGGESTION_DIAL_NUMBER_CLICKEDContent; } }
            private static Java.Lang.String _SEARCH_SUGGESTION_DIAL_NUMBER_CLICKEDContent = default;
            private static bool _SEARCH_SUGGESTION_DIAL_NUMBER_CLICKEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.Intents.html#SHOW_OR_CREATE_CONTACT"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String SHOW_OR_CREATE_CONTACT { get { if (!_SHOW_OR_CREATE_CONTACTReady) { _SHOW_OR_CREATE_CONTACTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SHOW_OR_CREATE_CONTACT"); _SHOW_OR_CREATE_CONTACTReady = true; } return _SHOW_OR_CREATE_CONTACTContent; } }
            private static Java.Lang.String _SHOW_OR_CREATE_CONTACTContent = default;
            private static bool _SHOW_OR_CREATE_CONTACTReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes
            #region UI implementation
            public partial class UI
            {
                #region Constructors

                #endregion

                #region Class/Interface conversion operators

                #endregion

                #region Fields
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Contacts.Intents.UI.html#FILTER_CONTACTS_ACTION"/>
                /// </summary>
                [global::System.Obsolete()]
                public static Java.Lang.String FILTER_CONTACTS_ACTION { get { if (!_FILTER_CONTACTS_ACTIONReady) { _FILTER_CONTACTS_ACTIONContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "FILTER_CONTACTS_ACTION"); _FILTER_CONTACTS_ACTIONReady = true; } return _FILTER_CONTACTS_ACTIONContent; } }
                private static Java.Lang.String _FILTER_CONTACTS_ACTIONContent = default;
                private static bool _FILTER_CONTACTS_ACTIONReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Contacts.Intents.UI.html#FILTER_TEXT_EXTRA_KEY"/>
                /// </summary>
                [global::System.Obsolete()]
                public static Java.Lang.String FILTER_TEXT_EXTRA_KEY { get { if (!_FILTER_TEXT_EXTRA_KEYReady) { _FILTER_TEXT_EXTRA_KEYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "FILTER_TEXT_EXTRA_KEY"); _FILTER_TEXT_EXTRA_KEYReady = true; } return _FILTER_TEXT_EXTRA_KEYContent; } }
                private static Java.Lang.String _FILTER_TEXT_EXTRA_KEYContent = default;
                private static bool _FILTER_TEXT_EXTRA_KEYReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Contacts.Intents.UI.html#GROUP_NAME_EXTRA_KEY"/>
                /// </summary>
                [global::System.Obsolete()]
                public static Java.Lang.String GROUP_NAME_EXTRA_KEY { get { if (!_GROUP_NAME_EXTRA_KEYReady) { _GROUP_NAME_EXTRA_KEYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "GROUP_NAME_EXTRA_KEY"); _GROUP_NAME_EXTRA_KEYReady = true; } return _GROUP_NAME_EXTRA_KEYContent; } }
                private static Java.Lang.String _GROUP_NAME_EXTRA_KEYContent = default;
                private static bool _GROUP_NAME_EXTRA_KEYReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Contacts.Intents.UI.html#LIST_ALL_CONTACTS_ACTION"/>
                /// </summary>
                [global::System.Obsolete()]
                public static Java.Lang.String LIST_ALL_CONTACTS_ACTION { get { if (!_LIST_ALL_CONTACTS_ACTIONReady) { _LIST_ALL_CONTACTS_ACTIONContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "LIST_ALL_CONTACTS_ACTION"); _LIST_ALL_CONTACTS_ACTIONReady = true; } return _LIST_ALL_CONTACTS_ACTIONContent; } }
                private static Java.Lang.String _LIST_ALL_CONTACTS_ACTIONContent = default;
                private static bool _LIST_ALL_CONTACTS_ACTIONReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Contacts.Intents.UI.html#LIST_CONTACTS_WITH_PHONES_ACTION"/>
                /// </summary>
                [global::System.Obsolete()]
                public static Java.Lang.String LIST_CONTACTS_WITH_PHONES_ACTION { get { if (!_LIST_CONTACTS_WITH_PHONES_ACTIONReady) { _LIST_CONTACTS_WITH_PHONES_ACTIONContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "LIST_CONTACTS_WITH_PHONES_ACTION"); _LIST_CONTACTS_WITH_PHONES_ACTIONReady = true; } return _LIST_CONTACTS_WITH_PHONES_ACTIONContent; } }
                private static Java.Lang.String _LIST_CONTACTS_WITH_PHONES_ACTIONContent = default;
                private static bool _LIST_CONTACTS_WITH_PHONES_ACTIONReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Contacts.Intents.UI.html#LIST_DEFAULT"/>
                /// </summary>
                [global::System.Obsolete()]
                public static Java.Lang.String LIST_DEFAULT { get { if (!_LIST_DEFAULTReady) { _LIST_DEFAULTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "LIST_DEFAULT"); _LIST_DEFAULTReady = true; } return _LIST_DEFAULTContent; } }
                private static Java.Lang.String _LIST_DEFAULTContent = default;
                private static bool _LIST_DEFAULTReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Contacts.Intents.UI.html#LIST_FREQUENT_ACTION"/>
                /// </summary>
                [global::System.Obsolete()]
                public static Java.Lang.String LIST_FREQUENT_ACTION { get { if (!_LIST_FREQUENT_ACTIONReady) { _LIST_FREQUENT_ACTIONContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "LIST_FREQUENT_ACTION"); _LIST_FREQUENT_ACTIONReady = true; } return _LIST_FREQUENT_ACTIONContent; } }
                private static Java.Lang.String _LIST_FREQUENT_ACTIONContent = default;
                private static bool _LIST_FREQUENT_ACTIONReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Contacts.Intents.UI.html#LIST_GROUP_ACTION"/>
                /// </summary>
                [global::System.Obsolete()]
                public static Java.Lang.String LIST_GROUP_ACTION { get { if (!_LIST_GROUP_ACTIONReady) { _LIST_GROUP_ACTIONContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "LIST_GROUP_ACTION"); _LIST_GROUP_ACTIONReady = true; } return _LIST_GROUP_ACTIONContent; } }
                private static Java.Lang.String _LIST_GROUP_ACTIONContent = default;
                private static bool _LIST_GROUP_ACTIONReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Contacts.Intents.UI.html#LIST_STARRED_ACTION"/>
                /// </summary>
                [global::System.Obsolete()]
                public static Java.Lang.String LIST_STARRED_ACTION { get { if (!_LIST_STARRED_ACTIONReady) { _LIST_STARRED_ACTIONContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "LIST_STARRED_ACTION"); _LIST_STARRED_ACTIONReady = true; } return _LIST_STARRED_ACTIONContent; } }
                private static Java.Lang.String _LIST_STARRED_ACTIONContent = default;
                private static bool _LIST_STARRED_ACTIONReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Contacts.Intents.UI.html#LIST_STREQUENT_ACTION"/>
                /// </summary>
                [global::System.Obsolete()]
                public static Java.Lang.String LIST_STREQUENT_ACTION { get { if (!_LIST_STREQUENT_ACTIONReady) { _LIST_STREQUENT_ACTIONContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "LIST_STREQUENT_ACTION"); _LIST_STREQUENT_ACTIONReady = true; } return _LIST_STREQUENT_ACTIONContent; } }
                private static Java.Lang.String _LIST_STREQUENT_ACTIONContent = default;
                private static bool _LIST_STREQUENT_ACTIONReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Contacts.Intents.UI.html#TITLE_EXTRA_KEY"/>
                /// </summary>
                [global::System.Obsolete()]
                public static Java.Lang.String TITLE_EXTRA_KEY { get { if (!_TITLE_EXTRA_KEYReady) { _TITLE_EXTRA_KEYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "TITLE_EXTRA_KEY"); _TITLE_EXTRA_KEYReady = true; } return _TITLE_EXTRA_KEYContent; } }
                private static Java.Lang.String _TITLE_EXTRA_KEYContent = default;
                private static bool _TITLE_EXTRA_KEYReady = false; // this is used because in case of generics 

                #endregion

                #region Static methods

                #endregion

                #region Instance methods

                #endregion

                #region Nested classes

                #endregion

                // TODO: complete the class
            }
            #endregion

            #region Insert implementation
            public partial class Insert
            {
                #region Constructors

                #endregion

                #region Class/Interface conversion operators

                #endregion

                #region Fields
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Contacts.Intents.Insert.html#ACTION"/>
                /// </summary>
                [global::System.Obsolete()]
                public static Java.Lang.String ACTION { get { if (!_ACTIONReady) { _ACTIONContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION"); _ACTIONReady = true; } return _ACTIONContent; } }
                private static Java.Lang.String _ACTIONContent = default;
                private static bool _ACTIONReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Contacts.Intents.Insert.html#COMPANY"/>
                /// </summary>
                [global::System.Obsolete()]
                public static Java.Lang.String COMPANY { get { if (!_COMPANYReady) { _COMPANYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "COMPANY"); _COMPANYReady = true; } return _COMPANYContent; } }
                private static Java.Lang.String _COMPANYContent = default;
                private static bool _COMPANYReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Contacts.Intents.Insert.html#EMAIL"/>
                /// </summary>
                [global::System.Obsolete()]
                public static Java.Lang.String EMAIL { get { if (!_EMAILReady) { _EMAILContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EMAIL"); _EMAILReady = true; } return _EMAILContent; } }
                private static Java.Lang.String _EMAILContent = default;
                private static bool _EMAILReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Contacts.Intents.Insert.html#EMAIL_ISPRIMARY"/>
                /// </summary>
                [global::System.Obsolete()]
                public static Java.Lang.String EMAIL_ISPRIMARY { get { if (!_EMAIL_ISPRIMARYReady) { _EMAIL_ISPRIMARYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EMAIL_ISPRIMARY"); _EMAIL_ISPRIMARYReady = true; } return _EMAIL_ISPRIMARYContent; } }
                private static Java.Lang.String _EMAIL_ISPRIMARYContent = default;
                private static bool _EMAIL_ISPRIMARYReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Contacts.Intents.Insert.html#EMAIL_TYPE"/>
                /// </summary>
                [global::System.Obsolete()]
                public static Java.Lang.String EMAIL_TYPE { get { if (!_EMAIL_TYPEReady) { _EMAIL_TYPEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EMAIL_TYPE"); _EMAIL_TYPEReady = true; } return _EMAIL_TYPEContent; } }
                private static Java.Lang.String _EMAIL_TYPEContent = default;
                private static bool _EMAIL_TYPEReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Contacts.Intents.Insert.html#FULL_MODE"/>
                /// </summary>
                [global::System.Obsolete()]
                public static Java.Lang.String FULL_MODE { get { if (!_FULL_MODEReady) { _FULL_MODEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "FULL_MODE"); _FULL_MODEReady = true; } return _FULL_MODEContent; } }
                private static Java.Lang.String _FULL_MODEContent = default;
                private static bool _FULL_MODEReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Contacts.Intents.Insert.html#IM_HANDLE"/>
                /// </summary>
                [global::System.Obsolete()]
                public static Java.Lang.String IM_HANDLE { get { if (!_IM_HANDLEReady) { _IM_HANDLEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "IM_HANDLE"); _IM_HANDLEReady = true; } return _IM_HANDLEContent; } }
                private static Java.Lang.String _IM_HANDLEContent = default;
                private static bool _IM_HANDLEReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Contacts.Intents.Insert.html#IM_ISPRIMARY"/>
                /// </summary>
                [global::System.Obsolete()]
                public static Java.Lang.String IM_ISPRIMARY { get { if (!_IM_ISPRIMARYReady) { _IM_ISPRIMARYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "IM_ISPRIMARY"); _IM_ISPRIMARYReady = true; } return _IM_ISPRIMARYContent; } }
                private static Java.Lang.String _IM_ISPRIMARYContent = default;
                private static bool _IM_ISPRIMARYReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Contacts.Intents.Insert.html#IM_PROTOCOL"/>
                /// </summary>
                [global::System.Obsolete()]
                public static Java.Lang.String IM_PROTOCOL { get { if (!_IM_PROTOCOLReady) { _IM_PROTOCOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "IM_PROTOCOL"); _IM_PROTOCOLReady = true; } return _IM_PROTOCOLContent; } }
                private static Java.Lang.String _IM_PROTOCOLContent = default;
                private static bool _IM_PROTOCOLReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Contacts.Intents.Insert.html#JOB_TITLE"/>
                /// </summary>
                [global::System.Obsolete()]
                public static Java.Lang.String JOB_TITLE { get { if (!_JOB_TITLEReady) { _JOB_TITLEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "JOB_TITLE"); _JOB_TITLEReady = true; } return _JOB_TITLEContent; } }
                private static Java.Lang.String _JOB_TITLEContent = default;
                private static bool _JOB_TITLEReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Contacts.Intents.Insert.html#NAME"/>
                /// </summary>
                [global::System.Obsolete()]
                public static Java.Lang.String NAME { get { if (!_NAMEReady) { _NAMEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "NAME"); _NAMEReady = true; } return _NAMEContent; } }
                private static Java.Lang.String _NAMEContent = default;
                private static bool _NAMEReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Contacts.Intents.Insert.html#NOTES"/>
                /// </summary>
                [global::System.Obsolete()]
                public static Java.Lang.String NOTES { get { if (!_NOTESReady) { _NOTESContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "NOTES"); _NOTESReady = true; } return _NOTESContent; } }
                private static Java.Lang.String _NOTESContent = default;
                private static bool _NOTESReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Contacts.Intents.Insert.html#PHONE"/>
                /// </summary>
                [global::System.Obsolete()]
                public static Java.Lang.String PHONE { get { if (!_PHONEReady) { _PHONEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "PHONE"); _PHONEReady = true; } return _PHONEContent; } }
                private static Java.Lang.String _PHONEContent = default;
                private static bool _PHONEReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Contacts.Intents.Insert.html#PHONE_ISPRIMARY"/>
                /// </summary>
                [global::System.Obsolete()]
                public static Java.Lang.String PHONE_ISPRIMARY { get { if (!_PHONE_ISPRIMARYReady) { _PHONE_ISPRIMARYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "PHONE_ISPRIMARY"); _PHONE_ISPRIMARYReady = true; } return _PHONE_ISPRIMARYContent; } }
                private static Java.Lang.String _PHONE_ISPRIMARYContent = default;
                private static bool _PHONE_ISPRIMARYReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Contacts.Intents.Insert.html#PHONE_TYPE"/>
                /// </summary>
                [global::System.Obsolete()]
                public static Java.Lang.String PHONE_TYPE { get { if (!_PHONE_TYPEReady) { _PHONE_TYPEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "PHONE_TYPE"); _PHONE_TYPEReady = true; } return _PHONE_TYPEContent; } }
                private static Java.Lang.String _PHONE_TYPEContent = default;
                private static bool _PHONE_TYPEReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Contacts.Intents.Insert.html#PHONETIC_NAME"/>
                /// </summary>
                [global::System.Obsolete()]
                public static Java.Lang.String PHONETIC_NAME { get { if (!_PHONETIC_NAMEReady) { _PHONETIC_NAMEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "PHONETIC_NAME"); _PHONETIC_NAMEReady = true; } return _PHONETIC_NAMEContent; } }
                private static Java.Lang.String _PHONETIC_NAMEContent = default;
                private static bool _PHONETIC_NAMEReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Contacts.Intents.Insert.html#POSTAL"/>
                /// </summary>
                [global::System.Obsolete()]
                public static Java.Lang.String POSTAL { get { if (!_POSTALReady) { _POSTALContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "POSTAL"); _POSTALReady = true; } return _POSTALContent; } }
                private static Java.Lang.String _POSTALContent = default;
                private static bool _POSTALReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Contacts.Intents.Insert.html#POSTAL_ISPRIMARY"/>
                /// </summary>
                [global::System.Obsolete()]
                public static Java.Lang.String POSTAL_ISPRIMARY { get { if (!_POSTAL_ISPRIMARYReady) { _POSTAL_ISPRIMARYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "POSTAL_ISPRIMARY"); _POSTAL_ISPRIMARYReady = true; } return _POSTAL_ISPRIMARYContent; } }
                private static Java.Lang.String _POSTAL_ISPRIMARYContent = default;
                private static bool _POSTAL_ISPRIMARYReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Contacts.Intents.Insert.html#POSTAL_TYPE"/>
                /// </summary>
                [global::System.Obsolete()]
                public static Java.Lang.String POSTAL_TYPE { get { if (!_POSTAL_TYPEReady) { _POSTAL_TYPEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "POSTAL_TYPE"); _POSTAL_TYPEReady = true; } return _POSTAL_TYPEContent; } }
                private static Java.Lang.String _POSTAL_TYPEContent = default;
                private static bool _POSTAL_TYPEReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Contacts.Intents.Insert.html#SECONDARY_EMAIL"/>
                /// </summary>
                [global::System.Obsolete()]
                public static Java.Lang.String SECONDARY_EMAIL { get { if (!_SECONDARY_EMAILReady) { _SECONDARY_EMAILContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SECONDARY_EMAIL"); _SECONDARY_EMAILReady = true; } return _SECONDARY_EMAILContent; } }
                private static Java.Lang.String _SECONDARY_EMAILContent = default;
                private static bool _SECONDARY_EMAILReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Contacts.Intents.Insert.html#SECONDARY_EMAIL_TYPE"/>
                /// </summary>
                [global::System.Obsolete()]
                public static Java.Lang.String SECONDARY_EMAIL_TYPE { get { if (!_SECONDARY_EMAIL_TYPEReady) { _SECONDARY_EMAIL_TYPEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SECONDARY_EMAIL_TYPE"); _SECONDARY_EMAIL_TYPEReady = true; } return _SECONDARY_EMAIL_TYPEContent; } }
                private static Java.Lang.String _SECONDARY_EMAIL_TYPEContent = default;
                private static bool _SECONDARY_EMAIL_TYPEReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Contacts.Intents.Insert.html#SECONDARY_PHONE"/>
                /// </summary>
                [global::System.Obsolete()]
                public static Java.Lang.String SECONDARY_PHONE { get { if (!_SECONDARY_PHONEReady) { _SECONDARY_PHONEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SECONDARY_PHONE"); _SECONDARY_PHONEReady = true; } return _SECONDARY_PHONEContent; } }
                private static Java.Lang.String _SECONDARY_PHONEContent = default;
                private static bool _SECONDARY_PHONEReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Contacts.Intents.Insert.html#SECONDARY_PHONE_TYPE"/>
                /// </summary>
                [global::System.Obsolete()]
                public static Java.Lang.String SECONDARY_PHONE_TYPE { get { if (!_SECONDARY_PHONE_TYPEReady) { _SECONDARY_PHONE_TYPEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SECONDARY_PHONE_TYPE"); _SECONDARY_PHONE_TYPEReady = true; } return _SECONDARY_PHONE_TYPEContent; } }
                private static Java.Lang.String _SECONDARY_PHONE_TYPEContent = default;
                private static bool _SECONDARY_PHONE_TYPEReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Contacts.Intents.Insert.html#TERTIARY_EMAIL"/>
                /// </summary>
                [global::System.Obsolete()]
                public static Java.Lang.String TERTIARY_EMAIL { get { if (!_TERTIARY_EMAILReady) { _TERTIARY_EMAILContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "TERTIARY_EMAIL"); _TERTIARY_EMAILReady = true; } return _TERTIARY_EMAILContent; } }
                private static Java.Lang.String _TERTIARY_EMAILContent = default;
                private static bool _TERTIARY_EMAILReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Contacts.Intents.Insert.html#TERTIARY_EMAIL_TYPE"/>
                /// </summary>
                [global::System.Obsolete()]
                public static Java.Lang.String TERTIARY_EMAIL_TYPE { get { if (!_TERTIARY_EMAIL_TYPEReady) { _TERTIARY_EMAIL_TYPEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "TERTIARY_EMAIL_TYPE"); _TERTIARY_EMAIL_TYPEReady = true; } return _TERTIARY_EMAIL_TYPEContent; } }
                private static Java.Lang.String _TERTIARY_EMAIL_TYPEContent = default;
                private static bool _TERTIARY_EMAIL_TYPEReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Contacts.Intents.Insert.html#TERTIARY_PHONE"/>
                /// </summary>
                [global::System.Obsolete()]
                public static Java.Lang.String TERTIARY_PHONE { get { if (!_TERTIARY_PHONEReady) { _TERTIARY_PHONEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "TERTIARY_PHONE"); _TERTIARY_PHONEReady = true; } return _TERTIARY_PHONEContent; } }
                private static Java.Lang.String _TERTIARY_PHONEContent = default;
                private static bool _TERTIARY_PHONEReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Contacts.Intents.Insert.html#TERTIARY_PHONE_TYPE"/>
                /// </summary>
                [global::System.Obsolete()]
                public static Java.Lang.String TERTIARY_PHONE_TYPE { get { if (!_TERTIARY_PHONE_TYPEReady) { _TERTIARY_PHONE_TYPEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "TERTIARY_PHONE_TYPE"); _TERTIARY_PHONE_TYPEReady = true; } return _TERTIARY_PHONE_TYPEContent; } }
                private static Java.Lang.String _TERTIARY_PHONE_TYPEContent = default;
                private static bool _TERTIARY_PHONE_TYPEReady = false; // this is used because in case of generics 

                #endregion

                #region Static methods

                #endregion

                #region Instance methods

                #endregion

                #region Nested classes

                #endregion

                // TODO: complete the class
            }
            #endregion

        
            #endregion

            // TODO: complete the class
        }
        #endregion

        #region OrganizationColumns implementation
        public partial class OrganizationColumns
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.OrganizationColumns.html#TYPE_CUSTOM"/>
            /// </summary>
            [global::System.Obsolete()]
            public static int TYPE_CUSTOM { get { if (!_TYPE_CUSTOMReady) { _TYPE_CUSTOMContent = SGetField<int>(LocalBridgeClazz, "TYPE_CUSTOM"); _TYPE_CUSTOMReady = true; } return _TYPE_CUSTOMContent; } }
            private static int _TYPE_CUSTOMContent = default;
            private static bool _TYPE_CUSTOMReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.OrganizationColumns.html#TYPE_OTHER"/>
            /// </summary>
            [global::System.Obsolete()]
            public static int TYPE_OTHER { get { if (!_TYPE_OTHERReady) { _TYPE_OTHERContent = SGetField<int>(LocalBridgeClazz, "TYPE_OTHER"); _TYPE_OTHERReady = true; } return _TYPE_OTHERContent; } }
            private static int _TYPE_OTHERContent = default;
            private static bool _TYPE_OTHERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.OrganizationColumns.html#TYPE_WORK"/>
            /// </summary>
            [global::System.Obsolete()]
            public static int TYPE_WORK { get { if (!_TYPE_WORKReady) { _TYPE_WORKContent = SGetField<int>(LocalBridgeClazz, "TYPE_WORK"); _TYPE_WORKReady = true; } return _TYPE_WORKContent; } }
            private static int _TYPE_WORKContent = default;
            private static bool _TYPE_WORKReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.OrganizationColumns.html#COMPANY"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String COMPANY { get { if (!_COMPANYReady) { _COMPANYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "COMPANY"); _COMPANYReady = true; } return _COMPANYContent; } }
            private static Java.Lang.String _COMPANYContent = default;
            private static bool _COMPANYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.OrganizationColumns.html#ISPRIMARY"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String ISPRIMARY { get { if (!_ISPRIMARYReady) { _ISPRIMARYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ISPRIMARY"); _ISPRIMARYReady = true; } return _ISPRIMARYContent; } }
            private static Java.Lang.String _ISPRIMARYContent = default;
            private static bool _ISPRIMARYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.OrganizationColumns.html#LABEL"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String LABEL { get { if (!_LABELReady) { _LABELContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "LABEL"); _LABELReady = true; } return _LABELContent; } }
            private static Java.Lang.String _LABELContent = default;
            private static bool _LABELReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.OrganizationColumns.html#PERSON_ID"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String PERSON_ID { get { if (!_PERSON_IDReady) { _PERSON_IDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "PERSON_ID"); _PERSON_IDReady = true; } return _PERSON_IDContent; } }
            private static Java.Lang.String _PERSON_IDContent = default;
            private static bool _PERSON_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.OrganizationColumns.html#TITLE"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String TITLE { get { if (!_TITLEReady) { _TITLEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "TITLE"); _TITLEReady = true; } return _TITLEContent; } }
            private static Java.Lang.String _TITLEContent = default;
            private static bool _TITLEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.OrganizationColumns.html#TYPE"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String TYPE { get { if (!_TYPEReady) { _TYPEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "TYPE"); _TYPEReady = true; } return _TYPEContent; } }
            private static Java.Lang.String _TYPEContent = default;
            private static bool _TYPEReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region Organizations implementation
        public partial class Organizations : Android.Provider.IBaseColumns
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators
            /// <summary>
            /// Converter from <see cref="Android.Provider.Contacts.Organizations"/> to <see cref="Android.Provider.BaseColumns"/>
            /// </summary>
            public static implicit operator Android.Provider.BaseColumns(Android.Provider.Contacts.Organizations t) => t.Cast<Android.Provider.BaseColumns>();

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.Organizations.html#CONTENT_URI"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Android.Net.Uri CONTENT_URI { get { if (!_CONTENT_URIReady) { _CONTENT_URIContent = SGetField<Android.Net.Uri>(LocalBridgeClazz, "CONTENT_URI"); _CONTENT_URIReady = true; } return _CONTENT_URIContent; } }
            private static Android.Net.Uri _CONTENT_URIContent = default;
            private static bool _CONTENT_URIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.Organizations.html#CONTENT_DIRECTORY"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String CONTENT_DIRECTORY { get { if (!_CONTENT_DIRECTORYReady) { _CONTENT_DIRECTORYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CONTENT_DIRECTORY"); _CONTENT_DIRECTORYReady = true; } return _CONTENT_DIRECTORYContent; } }
            private static Java.Lang.String _CONTENT_DIRECTORYContent = default;
            private static bool _CONTENT_DIRECTORYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.Organizations.html#DEFAULT_SORT_ORDER"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String DEFAULT_SORT_ORDER { get { if (!_DEFAULT_SORT_ORDERReady) { _DEFAULT_SORT_ORDERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "DEFAULT_SORT_ORDER"); _DEFAULT_SORT_ORDERReady = true; } return _DEFAULT_SORT_ORDERContent; } }
            private static Java.Lang.String _DEFAULT_SORT_ORDERContent = default;
            private static bool _DEFAULT_SORT_ORDERReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.Organizations.html#getDisplayLabel(android.content.Context,int,java.lang.CharSequence)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Content.Context"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            /// <param name="arg2"><see cref="Java.Lang.CharSequence"/></param>
            /// <returns><see cref="Java.Lang.CharSequence"/></returns>
            [global::System.Obsolete()]
            public static Java.Lang.CharSequence GetDisplayLabel(Android.Content.Context arg0, int arg1, Java.Lang.CharSequence arg2)
            {
                return SExecuteWithSignature<Java.Lang.CharSequence>(LocalBridgeClazz, "getDisplayLabel", "(Landroid/content/Context;ILjava/lang/CharSequence;)Ljava/lang/CharSequence;", arg0, arg1, arg2);
            }

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region People implementation
        public partial class People : Android.Provider.IBaseColumns
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators
            /// <summary>
            /// Converter from <see cref="Android.Provider.Contacts.People"/> to <see cref="Android.Provider.BaseColumns"/>
            /// </summary>
            public static implicit operator Android.Provider.BaseColumns(Android.Provider.Contacts.People t) => t.Cast<Android.Provider.BaseColumns>();

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.People.html#CONTENT_FILTER_URI"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Android.Net.Uri CONTENT_FILTER_URI { get { if (!_CONTENT_FILTER_URIReady) { _CONTENT_FILTER_URIContent = SGetField<Android.Net.Uri>(LocalBridgeClazz, "CONTENT_FILTER_URI"); _CONTENT_FILTER_URIReady = true; } return _CONTENT_FILTER_URIContent; } }
            private static Android.Net.Uri _CONTENT_FILTER_URIContent = default;
            private static bool _CONTENT_FILTER_URIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.People.html#CONTENT_URI"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Android.Net.Uri CONTENT_URI { get { if (!_CONTENT_URIReady) { _CONTENT_URIContent = SGetField<Android.Net.Uri>(LocalBridgeClazz, "CONTENT_URI"); _CONTENT_URIReady = true; } return _CONTENT_URIContent; } }
            private static Android.Net.Uri _CONTENT_URIContent = default;
            private static bool _CONTENT_URIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.People.html#DELETED_CONTENT_URI"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Android.Net.Uri DELETED_CONTENT_URI { get { if (!_DELETED_CONTENT_URIReady) { _DELETED_CONTENT_URIContent = SGetField<Android.Net.Uri>(LocalBridgeClazz, "DELETED_CONTENT_URI"); _DELETED_CONTENT_URIReady = true; } return _DELETED_CONTENT_URIContent; } }
            private static Android.Net.Uri _DELETED_CONTENT_URIContent = default;
            private static bool _DELETED_CONTENT_URIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.People.html#CONTENT_ITEM_TYPE"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String CONTENT_ITEM_TYPE { get { if (!_CONTENT_ITEM_TYPEReady) { _CONTENT_ITEM_TYPEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CONTENT_ITEM_TYPE"); _CONTENT_ITEM_TYPEReady = true; } return _CONTENT_ITEM_TYPEContent; } }
            private static Java.Lang.String _CONTENT_ITEM_TYPEContent = default;
            private static bool _CONTENT_ITEM_TYPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.People.html#CONTENT_TYPE"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String CONTENT_TYPE { get { if (!_CONTENT_TYPEReady) { _CONTENT_TYPEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CONTENT_TYPE"); _CONTENT_TYPEReady = true; } return _CONTENT_TYPEContent; } }
            private static Java.Lang.String _CONTENT_TYPEContent = default;
            private static bool _CONTENT_TYPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.People.html#DEFAULT_SORT_ORDER"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String DEFAULT_SORT_ORDER { get { if (!_DEFAULT_SORT_ORDERReady) { _DEFAULT_SORT_ORDERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "DEFAULT_SORT_ORDER"); _DEFAULT_SORT_ORDERReady = true; } return _DEFAULT_SORT_ORDERContent; } }
            private static Java.Lang.String _DEFAULT_SORT_ORDERContent = default;
            private static bool _DEFAULT_SORT_ORDERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.People.html#PRIMARY_EMAIL_ID"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String PRIMARY_EMAIL_ID { get { if (!_PRIMARY_EMAIL_IDReady) { _PRIMARY_EMAIL_IDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "PRIMARY_EMAIL_ID"); _PRIMARY_EMAIL_IDReady = true; } return _PRIMARY_EMAIL_IDContent; } }
            private static Java.Lang.String _PRIMARY_EMAIL_IDContent = default;
            private static bool _PRIMARY_EMAIL_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.People.html#PRIMARY_ORGANIZATION_ID"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String PRIMARY_ORGANIZATION_ID { get { if (!_PRIMARY_ORGANIZATION_IDReady) { _PRIMARY_ORGANIZATION_IDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "PRIMARY_ORGANIZATION_ID"); _PRIMARY_ORGANIZATION_IDReady = true; } return _PRIMARY_ORGANIZATION_IDContent; } }
            private static Java.Lang.String _PRIMARY_ORGANIZATION_IDContent = default;
            private static bool _PRIMARY_ORGANIZATION_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.People.html#PRIMARY_PHONE_ID"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String PRIMARY_PHONE_ID { get { if (!_PRIMARY_PHONE_IDReady) { _PRIMARY_PHONE_IDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "PRIMARY_PHONE_ID"); _PRIMARY_PHONE_IDReady = true; } return _PRIMARY_PHONE_IDContent; } }
            private static Java.Lang.String _PRIMARY_PHONE_IDContent = default;
            private static bool _PRIMARY_PHONE_IDReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.People.html#queryGroups(android.content.ContentResolver,long)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Content.ContentResolver"/></param>
            /// <param name="arg1"><see cref="long"/></param>
            /// <returns><see cref="Android.Database.Cursor"/></returns>
            [global::System.Obsolete()]
            public static Android.Database.Cursor QueryGroups(Android.Content.ContentResolver arg0, long arg1)
            {
                return SExecuteWithSignature<Android.Database.Cursor>(LocalBridgeClazz, "queryGroups", "(Landroid/content/ContentResolver;J)Landroid/database/Cursor;", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.People.html#loadContactPhoto(android.content.Context,android.net.Uri,int,android.graphics.BitmapFactory.Options)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Content.Context"/></param>
            /// <param name="arg1"><see cref="Android.Net.Uri"/></param>
            /// <param name="arg2"><see cref="int"/></param>
            /// <param name="arg3"><see cref="Android.Graphics.BitmapFactory.Options"/></param>
            /// <returns><see cref="Android.Graphics.Bitmap"/></returns>
            [global::System.Obsolete()]
            public static Android.Graphics.Bitmap LoadContactPhoto(Android.Content.Context arg0, Android.Net.Uri arg1, int arg2, Android.Graphics.BitmapFactory.Options arg3)
            {
                return SExecuteWithSignature<Android.Graphics.Bitmap>(LocalBridgeClazz, "loadContactPhoto", "(Landroid/content/Context;Landroid/net/Uri;ILandroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;", arg0, arg1, arg2, arg3);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.People.html#addToGroup(android.content.ContentResolver,long,java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Content.ContentResolver"/></param>
            /// <param name="arg1"><see cref="long"/></param>
            /// <param name="arg2"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Android.Net.Uri"/></returns>
            [global::System.Obsolete()]
            public static Android.Net.Uri AddToGroup(Android.Content.ContentResolver arg0, long arg1, Java.Lang.String arg2)
            {
                return SExecuteWithSignature<Android.Net.Uri>(LocalBridgeClazz, "addToGroup", "(Landroid/content/ContentResolver;JLjava/lang/String;)Landroid/net/Uri;", arg0, arg1, arg2);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.People.html#addToGroup(android.content.ContentResolver,long,long)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Content.ContentResolver"/></param>
            /// <param name="arg1"><see cref="long"/></param>
            /// <param name="arg2"><see cref="long"/></param>
            /// <returns><see cref="Android.Net.Uri"/></returns>
            [global::System.Obsolete()]
            public static Android.Net.Uri AddToGroup(Android.Content.ContentResolver arg0, long arg1, long arg2)
            {
                return SExecuteWithSignature<Android.Net.Uri>(LocalBridgeClazz, "addToGroup", "(Landroid/content/ContentResolver;JJ)Landroid/net/Uri;", arg0, arg1, arg2);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.People.html#addToMyContactsGroup(android.content.ContentResolver,long)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Content.ContentResolver"/></param>
            /// <param name="arg1"><see cref="long"/></param>
            /// <returns><see cref="Android.Net.Uri"/></returns>
            [global::System.Obsolete()]
            public static Android.Net.Uri AddToMyContactsGroup(Android.Content.ContentResolver arg0, long arg1)
            {
                return SExecuteWithSignature<Android.Net.Uri>(LocalBridgeClazz, "addToMyContactsGroup", "(Landroid/content/ContentResolver;J)Landroid/net/Uri;", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.People.html#createPersonInMyContactsGroup(android.content.ContentResolver,android.content.ContentValues)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Content.ContentResolver"/></param>
            /// <param name="arg1"><see cref="Android.Content.ContentValues"/></param>
            /// <returns><see cref="Android.Net.Uri"/></returns>
            [global::System.Obsolete()]
            public static Android.Net.Uri CreatePersonInMyContactsGroup(Android.Content.ContentResolver arg0, Android.Content.ContentValues arg1)
            {
                return SExecuteWithSignature<Android.Net.Uri>(LocalBridgeClazz, "createPersonInMyContactsGroup", "(Landroid/content/ContentResolver;Landroid/content/ContentValues;)Landroid/net/Uri;", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.People.html#openContactPhotoInputStream(android.content.ContentResolver,android.net.Uri)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Content.ContentResolver"/></param>
            /// <param name="arg1"><see cref="Android.Net.Uri"/></param>
            /// <returns><see cref="Java.Io.InputStream"/></returns>
            [global::System.Obsolete()]
            public static Java.Io.InputStream OpenContactPhotoInputStream(Android.Content.ContentResolver arg0, Android.Net.Uri arg1)
            {
                return SExecuteWithSignature<Java.Io.InputStream>(LocalBridgeClazz, "openContactPhotoInputStream", "(Landroid/content/ContentResolver;Landroid/net/Uri;)Ljava/io/InputStream;", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.People.html#markAsContacted(android.content.ContentResolver,long)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Content.ContentResolver"/></param>
            /// <param name="arg1"><see cref="long"/></param>
            [global::System.Obsolete()]
            public static void MarkAsContacted(Android.Content.ContentResolver arg0, long arg1)
            {
                SExecuteWithSignature(LocalBridgeClazz, "markAsContacted", "(Landroid/content/ContentResolver;J)V", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.People.html#setPhotoData(android.content.ContentResolver,android.net.Uri,byte[])"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Content.ContentResolver"/></param>
            /// <param name="arg1"><see cref="Android.Net.Uri"/></param>
            /// <param name="arg2"><see cref="byte"/></param>
            [global::System.Obsolete()]
            public static void SetPhotoData(Android.Content.ContentResolver arg0, Android.Net.Uri arg1, byte[] arg2)
            {
                SExecuteWithSignature(LocalBridgeClazz, "setPhotoData", "(Landroid/content/ContentResolver;Landroid/net/Uri;[B)V", arg0, arg1, arg2);
            }

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes
            #region Phones implementation
            public partial class Phones : Android.Provider.IBaseColumns
            {
                #region Constructors

                #endregion

                #region Class/Interface conversion operators
                /// <summary>
                /// Converter from <see cref="Android.Provider.Contacts.People.Phones"/> to <see cref="Android.Provider.BaseColumns"/>
                /// </summary>
                public static implicit operator Android.Provider.BaseColumns(Android.Provider.Contacts.People.Phones t) => t.Cast<Android.Provider.BaseColumns>();

                #endregion

                #region Fields
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Contacts.People.Phones.html#CONTENT_DIRECTORY"/>
                /// </summary>
                [global::System.Obsolete()]
                public static Java.Lang.String CONTENT_DIRECTORY { get { if (!_CONTENT_DIRECTORYReady) { _CONTENT_DIRECTORYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CONTENT_DIRECTORY"); _CONTENT_DIRECTORYReady = true; } return _CONTENT_DIRECTORYContent; } }
                private static Java.Lang.String _CONTENT_DIRECTORYContent = default;
                private static bool _CONTENT_DIRECTORYReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Contacts.People.Phones.html#DEFAULT_SORT_ORDER"/>
                /// </summary>
                [global::System.Obsolete()]
                public static Java.Lang.String DEFAULT_SORT_ORDER { get { if (!_DEFAULT_SORT_ORDERReady) { _DEFAULT_SORT_ORDERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "DEFAULT_SORT_ORDER"); _DEFAULT_SORT_ORDERReady = true; } return _DEFAULT_SORT_ORDERContent; } }
                private static Java.Lang.String _DEFAULT_SORT_ORDERContent = default;
                private static bool _DEFAULT_SORT_ORDERReady = false; // this is used because in case of generics 

                #endregion

                #region Static methods

                #endregion

                #region Instance methods

                #endregion

                #region Nested classes

                #endregion

                // TODO: complete the class
            }
            #endregion

            #region Extensions implementation
            public partial class Extensions : Android.Provider.IBaseColumns
            {
                #region Constructors

                #endregion

                #region Class/Interface conversion operators
                /// <summary>
                /// Converter from <see cref="Android.Provider.Contacts.People.Extensions"/> to <see cref="Android.Provider.BaseColumns"/>
                /// </summary>
                public static implicit operator Android.Provider.BaseColumns(Android.Provider.Contacts.People.Extensions t) => t.Cast<Android.Provider.BaseColumns>();

                #endregion

                #region Fields
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Contacts.People.Extensions.html#CONTENT_DIRECTORY"/>
                /// </summary>
                [global::System.Obsolete()]
                public static Java.Lang.String CONTENT_DIRECTORY { get { if (!_CONTENT_DIRECTORYReady) { _CONTENT_DIRECTORYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CONTENT_DIRECTORY"); _CONTENT_DIRECTORYReady = true; } return _CONTENT_DIRECTORYContent; } }
                private static Java.Lang.String _CONTENT_DIRECTORYContent = default;
                private static bool _CONTENT_DIRECTORYReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Contacts.People.Extensions.html#DEFAULT_SORT_ORDER"/>
                /// </summary>
                [global::System.Obsolete()]
                public static Java.Lang.String DEFAULT_SORT_ORDER { get { if (!_DEFAULT_SORT_ORDERReady) { _DEFAULT_SORT_ORDERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "DEFAULT_SORT_ORDER"); _DEFAULT_SORT_ORDERReady = true; } return _DEFAULT_SORT_ORDERContent; } }
                private static Java.Lang.String _DEFAULT_SORT_ORDERContent = default;
                private static bool _DEFAULT_SORT_ORDERReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Contacts.People.Extensions.html#PERSON_ID"/>
                /// </summary>
                [global::System.Obsolete()]
                public static Java.Lang.String PERSON_ID { get { if (!_PERSON_IDReady) { _PERSON_IDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "PERSON_ID"); _PERSON_IDReady = true; } return _PERSON_IDContent; } }
                private static Java.Lang.String _PERSON_IDContent = default;
                private static bool _PERSON_IDReady = false; // this is used because in case of generics 

                #endregion

                #region Static methods

                #endregion

                #region Instance methods

                #endregion

                #region Nested classes

                #endregion

                // TODO: complete the class
            }
            #endregion

            #region ContactMethods implementation
            public partial class ContactMethods : Android.Provider.IBaseColumns
            {
                #region Constructors

                #endregion

                #region Class/Interface conversion operators
                /// <summary>
                /// Converter from <see cref="Android.Provider.Contacts.People.ContactMethods"/> to <see cref="Android.Provider.BaseColumns"/>
                /// </summary>
                public static implicit operator Android.Provider.BaseColumns(Android.Provider.Contacts.People.ContactMethods t) => t.Cast<Android.Provider.BaseColumns>();

                #endregion

                #region Fields
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Contacts.People.ContactMethods.html#CONTENT_DIRECTORY"/>
                /// </summary>
                [global::System.Obsolete()]
                public static Java.Lang.String CONTENT_DIRECTORY { get { if (!_CONTENT_DIRECTORYReady) { _CONTENT_DIRECTORYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CONTENT_DIRECTORY"); _CONTENT_DIRECTORYReady = true; } return _CONTENT_DIRECTORYContent; } }
                private static Java.Lang.String _CONTENT_DIRECTORYContent = default;
                private static bool _CONTENT_DIRECTORYReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Contacts.People.ContactMethods.html#DEFAULT_SORT_ORDER"/>
                /// </summary>
                [global::System.Obsolete()]
                public static Java.Lang.String DEFAULT_SORT_ORDER { get { if (!_DEFAULT_SORT_ORDERReady) { _DEFAULT_SORT_ORDERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "DEFAULT_SORT_ORDER"); _DEFAULT_SORT_ORDERReady = true; } return _DEFAULT_SORT_ORDERContent; } }
                private static Java.Lang.String _DEFAULT_SORT_ORDERContent = default;
                private static bool _DEFAULT_SORT_ORDERReady = false; // this is used because in case of generics 

                #endregion

                #region Static methods

                #endregion

                #region Instance methods

                #endregion

                #region Nested classes

                #endregion

                // TODO: complete the class
            }
            #endregion

        
            #endregion

            // TODO: complete the class
        }
        #endregion

        #region PeopleColumns implementation
        public partial class PeopleColumns
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.PeopleColumns.html#CUSTOM_RINGTONE"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String CUSTOM_RINGTONE { get { if (!_CUSTOM_RINGTONEReady) { _CUSTOM_RINGTONEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CUSTOM_RINGTONE"); _CUSTOM_RINGTONEReady = true; } return _CUSTOM_RINGTONEContent; } }
            private static Java.Lang.String _CUSTOM_RINGTONEContent = default;
            private static bool _CUSTOM_RINGTONEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.PeopleColumns.html#DISPLAY_NAME"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String DISPLAY_NAME { get { if (!_DISPLAY_NAMEReady) { _DISPLAY_NAMEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "DISPLAY_NAME"); _DISPLAY_NAMEReady = true; } return _DISPLAY_NAMEContent; } }
            private static Java.Lang.String _DISPLAY_NAMEContent = default;
            private static bool _DISPLAY_NAMEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.PeopleColumns.html#LAST_TIME_CONTACTED"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String LAST_TIME_CONTACTED { get { if (!_LAST_TIME_CONTACTEDReady) { _LAST_TIME_CONTACTEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "LAST_TIME_CONTACTED"); _LAST_TIME_CONTACTEDReady = true; } return _LAST_TIME_CONTACTEDContent; } }
            private static Java.Lang.String _LAST_TIME_CONTACTEDContent = default;
            private static bool _LAST_TIME_CONTACTEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.PeopleColumns.html#NAME"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String NAME { get { if (!_NAMEReady) { _NAMEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "NAME"); _NAMEReady = true; } return _NAMEContent; } }
            private static Java.Lang.String _NAMEContent = default;
            private static bool _NAMEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.PeopleColumns.html#NOTES"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String NOTES { get { if (!_NOTESReady) { _NOTESContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "NOTES"); _NOTESReady = true; } return _NOTESContent; } }
            private static Java.Lang.String _NOTESContent = default;
            private static bool _NOTESReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.PeopleColumns.html#PHONETIC_NAME"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String PHONETIC_NAME { get { if (!_PHONETIC_NAMEReady) { _PHONETIC_NAMEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "PHONETIC_NAME"); _PHONETIC_NAMEReady = true; } return _PHONETIC_NAMEContent; } }
            private static Java.Lang.String _PHONETIC_NAMEContent = default;
            private static bool _PHONETIC_NAMEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.PeopleColumns.html#PHOTO_VERSION"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String PHOTO_VERSION { get { if (!_PHOTO_VERSIONReady) { _PHOTO_VERSIONContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "PHOTO_VERSION"); _PHOTO_VERSIONReady = true; } return _PHOTO_VERSIONContent; } }
            private static Java.Lang.String _PHOTO_VERSIONContent = default;
            private static bool _PHOTO_VERSIONReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.PeopleColumns.html#SEND_TO_VOICEMAIL"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String SEND_TO_VOICEMAIL { get { if (!_SEND_TO_VOICEMAILReady) { _SEND_TO_VOICEMAILContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SEND_TO_VOICEMAIL"); _SEND_TO_VOICEMAILReady = true; } return _SEND_TO_VOICEMAILContent; } }
            private static Java.Lang.String _SEND_TO_VOICEMAILContent = default;
            private static bool _SEND_TO_VOICEMAILReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.PeopleColumns.html#STARRED"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String STARRED { get { if (!_STARREDReady) { _STARREDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "STARRED"); _STARREDReady = true; } return _STARREDContent; } }
            private static Java.Lang.String _STARREDContent = default;
            private static bool _STARREDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.PeopleColumns.html#TIMES_CONTACTED"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String TIMES_CONTACTED { get { if (!_TIMES_CONTACTEDReady) { _TIMES_CONTACTEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "TIMES_CONTACTED"); _TIMES_CONTACTEDReady = true; } return _TIMES_CONTACTEDContent; } }
            private static Java.Lang.String _TIMES_CONTACTEDContent = default;
            private static bool _TIMES_CONTACTEDReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region Phones implementation
        public partial class Phones : Android.Provider.IBaseColumns
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators
            /// <summary>
            /// Converter from <see cref="Android.Provider.Contacts.Phones"/> to <see cref="Android.Provider.BaseColumns"/>
            /// </summary>
            public static implicit operator Android.Provider.BaseColumns(Android.Provider.Contacts.Phones t) => t.Cast<Android.Provider.BaseColumns>();

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.Phones.html#CONTENT_FILTER_URL"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Android.Net.Uri CONTENT_FILTER_URL { get { if (!_CONTENT_FILTER_URLReady) { _CONTENT_FILTER_URLContent = SGetField<Android.Net.Uri>(LocalBridgeClazz, "CONTENT_FILTER_URL"); _CONTENT_FILTER_URLReady = true; } return _CONTENT_FILTER_URLContent; } }
            private static Android.Net.Uri _CONTENT_FILTER_URLContent = default;
            private static bool _CONTENT_FILTER_URLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.Phones.html#CONTENT_URI"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Android.Net.Uri CONTENT_URI { get { if (!_CONTENT_URIReady) { _CONTENT_URIContent = SGetField<Android.Net.Uri>(LocalBridgeClazz, "CONTENT_URI"); _CONTENT_URIReady = true; } return _CONTENT_URIContent; } }
            private static Android.Net.Uri _CONTENT_URIContent = default;
            private static bool _CONTENT_URIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.Phones.html#CONTENT_ITEM_TYPE"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String CONTENT_ITEM_TYPE { get { if (!_CONTENT_ITEM_TYPEReady) { _CONTENT_ITEM_TYPEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CONTENT_ITEM_TYPE"); _CONTENT_ITEM_TYPEReady = true; } return _CONTENT_ITEM_TYPEContent; } }
            private static Java.Lang.String _CONTENT_ITEM_TYPEContent = default;
            private static bool _CONTENT_ITEM_TYPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.Phones.html#CONTENT_TYPE"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String CONTENT_TYPE { get { if (!_CONTENT_TYPEReady) { _CONTENT_TYPEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CONTENT_TYPE"); _CONTENT_TYPEReady = true; } return _CONTENT_TYPEContent; } }
            private static Java.Lang.String _CONTENT_TYPEContent = default;
            private static bool _CONTENT_TYPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.Phones.html#DEFAULT_SORT_ORDER"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String DEFAULT_SORT_ORDER { get { if (!_DEFAULT_SORT_ORDERReady) { _DEFAULT_SORT_ORDERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "DEFAULT_SORT_ORDER"); _DEFAULT_SORT_ORDERReady = true; } return _DEFAULT_SORT_ORDERContent; } }
            private static Java.Lang.String _DEFAULT_SORT_ORDERContent = default;
            private static bool _DEFAULT_SORT_ORDERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.Phones.html#PERSON_ID"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String PERSON_ID { get { if (!_PERSON_IDReady) { _PERSON_IDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "PERSON_ID"); _PERSON_IDReady = true; } return _PERSON_IDContent; } }
            private static Java.Lang.String _PERSON_IDContent = default;
            private static bool _PERSON_IDReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.Phones.html#getDisplayLabel(android.content.Context,int,java.lang.CharSequence,java.lang.CharSequence[])"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Content.Context"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            /// <param name="arg2"><see cref="Java.Lang.CharSequence"/></param>
            /// <param name="arg3"><see cref="Java.Lang.CharSequence"/></param>
            /// <returns><see cref="Java.Lang.CharSequence"/></returns>
            [global::System.Obsolete()]
            public static Java.Lang.CharSequence GetDisplayLabel(Android.Content.Context arg0, int arg1, Java.Lang.CharSequence arg2, Java.Lang.CharSequence[] arg3)
            {
                return SExecuteWithSignature<Java.Lang.CharSequence>(LocalBridgeClazz, "getDisplayLabel", "(Landroid/content/Context;ILjava/lang/CharSequence;[Ljava/lang/CharSequence;)Ljava/lang/CharSequence;", arg0, arg1, arg2, arg3);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.Phones.html#getDisplayLabel(android.content.Context,int,java.lang.CharSequence)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Content.Context"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            /// <param name="arg2"><see cref="Java.Lang.CharSequence"/></param>
            /// <returns><see cref="Java.Lang.CharSequence"/></returns>
            [global::System.Obsolete()]
            public static Java.Lang.CharSequence GetDisplayLabel(Android.Content.Context arg0, int arg1, Java.Lang.CharSequence arg2)
            {
                return SExecuteWithSignature<Java.Lang.CharSequence>(LocalBridgeClazz, "getDisplayLabel", "(Landroid/content/Context;ILjava/lang/CharSequence;)Ljava/lang/CharSequence;", arg0, arg1, arg2);
            }

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region PhonesColumns implementation
        public partial class PhonesColumns
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.PhonesColumns.html#TYPE_CUSTOM"/>
            /// </summary>
            [global::System.Obsolete()]
            public static int TYPE_CUSTOM { get { if (!_TYPE_CUSTOMReady) { _TYPE_CUSTOMContent = SGetField<int>(LocalBridgeClazz, "TYPE_CUSTOM"); _TYPE_CUSTOMReady = true; } return _TYPE_CUSTOMContent; } }
            private static int _TYPE_CUSTOMContent = default;
            private static bool _TYPE_CUSTOMReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.PhonesColumns.html#TYPE_FAX_HOME"/>
            /// </summary>
            [global::System.Obsolete()]
            public static int TYPE_FAX_HOME { get { if (!_TYPE_FAX_HOMEReady) { _TYPE_FAX_HOMEContent = SGetField<int>(LocalBridgeClazz, "TYPE_FAX_HOME"); _TYPE_FAX_HOMEReady = true; } return _TYPE_FAX_HOMEContent; } }
            private static int _TYPE_FAX_HOMEContent = default;
            private static bool _TYPE_FAX_HOMEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.PhonesColumns.html#TYPE_FAX_WORK"/>
            /// </summary>
            [global::System.Obsolete()]
            public static int TYPE_FAX_WORK { get { if (!_TYPE_FAX_WORKReady) { _TYPE_FAX_WORKContent = SGetField<int>(LocalBridgeClazz, "TYPE_FAX_WORK"); _TYPE_FAX_WORKReady = true; } return _TYPE_FAX_WORKContent; } }
            private static int _TYPE_FAX_WORKContent = default;
            private static bool _TYPE_FAX_WORKReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.PhonesColumns.html#TYPE_HOME"/>
            /// </summary>
            [global::System.Obsolete()]
            public static int TYPE_HOME { get { if (!_TYPE_HOMEReady) { _TYPE_HOMEContent = SGetField<int>(LocalBridgeClazz, "TYPE_HOME"); _TYPE_HOMEReady = true; } return _TYPE_HOMEContent; } }
            private static int _TYPE_HOMEContent = default;
            private static bool _TYPE_HOMEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.PhonesColumns.html#TYPE_MOBILE"/>
            /// </summary>
            [global::System.Obsolete()]
            public static int TYPE_MOBILE { get { if (!_TYPE_MOBILEReady) { _TYPE_MOBILEContent = SGetField<int>(LocalBridgeClazz, "TYPE_MOBILE"); _TYPE_MOBILEReady = true; } return _TYPE_MOBILEContent; } }
            private static int _TYPE_MOBILEContent = default;
            private static bool _TYPE_MOBILEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.PhonesColumns.html#TYPE_OTHER"/>
            /// </summary>
            [global::System.Obsolete()]
            public static int TYPE_OTHER { get { if (!_TYPE_OTHERReady) { _TYPE_OTHERContent = SGetField<int>(LocalBridgeClazz, "TYPE_OTHER"); _TYPE_OTHERReady = true; } return _TYPE_OTHERContent; } }
            private static int _TYPE_OTHERContent = default;
            private static bool _TYPE_OTHERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.PhonesColumns.html#TYPE_PAGER"/>
            /// </summary>
            [global::System.Obsolete()]
            public static int TYPE_PAGER { get { if (!_TYPE_PAGERReady) { _TYPE_PAGERContent = SGetField<int>(LocalBridgeClazz, "TYPE_PAGER"); _TYPE_PAGERReady = true; } return _TYPE_PAGERContent; } }
            private static int _TYPE_PAGERContent = default;
            private static bool _TYPE_PAGERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.PhonesColumns.html#TYPE_WORK"/>
            /// </summary>
            [global::System.Obsolete()]
            public static int TYPE_WORK { get { if (!_TYPE_WORKReady) { _TYPE_WORKContent = SGetField<int>(LocalBridgeClazz, "TYPE_WORK"); _TYPE_WORKReady = true; } return _TYPE_WORKContent; } }
            private static int _TYPE_WORKContent = default;
            private static bool _TYPE_WORKReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.PhonesColumns.html#ISPRIMARY"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String ISPRIMARY { get { if (!_ISPRIMARYReady) { _ISPRIMARYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ISPRIMARY"); _ISPRIMARYReady = true; } return _ISPRIMARYContent; } }
            private static Java.Lang.String _ISPRIMARYContent = default;
            private static bool _ISPRIMARYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.PhonesColumns.html#LABEL"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String LABEL { get { if (!_LABELReady) { _LABELContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "LABEL"); _LABELReady = true; } return _LABELContent; } }
            private static Java.Lang.String _LABELContent = default;
            private static bool _LABELReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.PhonesColumns.html#NUMBER"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String NUMBER { get { if (!_NUMBERReady) { _NUMBERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "NUMBER"); _NUMBERReady = true; } return _NUMBERContent; } }
            private static Java.Lang.String _NUMBERContent = default;
            private static bool _NUMBERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.PhonesColumns.html#NUMBER_KEY"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String NUMBER_KEY { get { if (!_NUMBER_KEYReady) { _NUMBER_KEYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "NUMBER_KEY"); _NUMBER_KEYReady = true; } return _NUMBER_KEYContent; } }
            private static Java.Lang.String _NUMBER_KEYContent = default;
            private static bool _NUMBER_KEYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.PhonesColumns.html#TYPE"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String TYPE { get { if (!_TYPEReady) { _TYPEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "TYPE"); _TYPEReady = true; } return _TYPEContent; } }
            private static Java.Lang.String _TYPEContent = default;
            private static bool _TYPEReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region Photos implementation
        public partial class Photos : Android.Provider.IBaseColumns
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators
            /// <summary>
            /// Converter from <see cref="Android.Provider.Contacts.Photos"/> to <see cref="Android.Provider.BaseColumns"/>
            /// </summary>
            public static implicit operator Android.Provider.BaseColumns(Android.Provider.Contacts.Photos t) => t.Cast<Android.Provider.BaseColumns>();

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.Photos.html#CONTENT_URI"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Android.Net.Uri CONTENT_URI { get { if (!_CONTENT_URIReady) { _CONTENT_URIContent = SGetField<Android.Net.Uri>(LocalBridgeClazz, "CONTENT_URI"); _CONTENT_URIReady = true; } return _CONTENT_URIContent; } }
            private static Android.Net.Uri _CONTENT_URIContent = default;
            private static bool _CONTENT_URIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.Photos.html#CONTENT_DIRECTORY"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String CONTENT_DIRECTORY { get { if (!_CONTENT_DIRECTORYReady) { _CONTENT_DIRECTORYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CONTENT_DIRECTORY"); _CONTENT_DIRECTORYReady = true; } return _CONTENT_DIRECTORYContent; } }
            private static Java.Lang.String _CONTENT_DIRECTORYContent = default;
            private static bool _CONTENT_DIRECTORYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.Photos.html#DEFAULT_SORT_ORDER"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String DEFAULT_SORT_ORDER { get { if (!_DEFAULT_SORT_ORDERReady) { _DEFAULT_SORT_ORDERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "DEFAULT_SORT_ORDER"); _DEFAULT_SORT_ORDERReady = true; } return _DEFAULT_SORT_ORDERContent; } }
            private static Java.Lang.String _DEFAULT_SORT_ORDERContent = default;
            private static bool _DEFAULT_SORT_ORDERReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region PhotosColumns implementation
        public partial class PhotosColumns
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.PhotosColumns.html#DATA"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String DATA { get { if (!_DATAReady) { _DATAContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "DATA"); _DATAReady = true; } return _DATAContent; } }
            private static Java.Lang.String _DATAContent = default;
            private static bool _DATAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.PhotosColumns.html#DOWNLOAD_REQUIRED"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String DOWNLOAD_REQUIRED { get { if (!_DOWNLOAD_REQUIREDReady) { _DOWNLOAD_REQUIREDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "DOWNLOAD_REQUIRED"); _DOWNLOAD_REQUIREDReady = true; } return _DOWNLOAD_REQUIREDContent; } }
            private static Java.Lang.String _DOWNLOAD_REQUIREDContent = default;
            private static bool _DOWNLOAD_REQUIREDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.PhotosColumns.html#EXISTS_ON_SERVER"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String EXISTS_ON_SERVER { get { if (!_EXISTS_ON_SERVERReady) { _EXISTS_ON_SERVERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXISTS_ON_SERVER"); _EXISTS_ON_SERVERReady = true; } return _EXISTS_ON_SERVERContent; } }
            private static Java.Lang.String _EXISTS_ON_SERVERContent = default;
            private static bool _EXISTS_ON_SERVERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.PhotosColumns.html#LOCAL_VERSION"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String LOCAL_VERSION { get { if (!_LOCAL_VERSIONReady) { _LOCAL_VERSIONContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "LOCAL_VERSION"); _LOCAL_VERSIONReady = true; } return _LOCAL_VERSIONContent; } }
            private static Java.Lang.String _LOCAL_VERSIONContent = default;
            private static bool _LOCAL_VERSIONReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.PhotosColumns.html#PERSON_ID"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String PERSON_ID { get { if (!_PERSON_IDReady) { _PERSON_IDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "PERSON_ID"); _PERSON_IDReady = true; } return _PERSON_IDContent; } }
            private static Java.Lang.String _PERSON_IDContent = default;
            private static bool _PERSON_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.PhotosColumns.html#SYNC_ERROR"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String SYNC_ERROR { get { if (!_SYNC_ERRORReady) { _SYNC_ERRORContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SYNC_ERROR"); _SYNC_ERRORReady = true; } return _SYNC_ERRORContent; } }
            private static Java.Lang.String _SYNC_ERRORContent = default;
            private static bool _SYNC_ERRORReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region PresenceColumns implementation
        public partial class PresenceColumns
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.PresenceColumns.html#AVAILABLE"/>
            /// </summary>
            [global::System.Obsolete()]
            public static int AVAILABLE { get { if (!_AVAILABLEReady) { _AVAILABLEContent = SGetField<int>(LocalBridgeClazz, "AVAILABLE"); _AVAILABLEReady = true; } return _AVAILABLEContent; } }
            private static int _AVAILABLEContent = default;
            private static bool _AVAILABLEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.PresenceColumns.html#AWAY"/>
            /// </summary>
            [global::System.Obsolete()]
            public static int AWAY { get { if (!_AWAYReady) { _AWAYContent = SGetField<int>(LocalBridgeClazz, "AWAY"); _AWAYReady = true; } return _AWAYContent; } }
            private static int _AWAYContent = default;
            private static bool _AWAYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.PresenceColumns.html#DO_NOT_DISTURB"/>
            /// </summary>
            [global::System.Obsolete()]
            public static int DO_NOT_DISTURB { get { if (!_DO_NOT_DISTURBReady) { _DO_NOT_DISTURBContent = SGetField<int>(LocalBridgeClazz, "DO_NOT_DISTURB"); _DO_NOT_DISTURBReady = true; } return _DO_NOT_DISTURBContent; } }
            private static int _DO_NOT_DISTURBContent = default;
            private static bool _DO_NOT_DISTURBReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.PresenceColumns.html#IDLE"/>
            /// </summary>
            [global::System.Obsolete()]
            public static int IDLE { get { if (!_IDLEReady) { _IDLEContent = SGetField<int>(LocalBridgeClazz, "IDLE"); _IDLEReady = true; } return _IDLEContent; } }
            private static int _IDLEContent = default;
            private static bool _IDLEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.PresenceColumns.html#INVISIBLE"/>
            /// </summary>
            [global::System.Obsolete()]
            public static int INVISIBLE { get { if (!_INVISIBLEReady) { _INVISIBLEContent = SGetField<int>(LocalBridgeClazz, "INVISIBLE"); _INVISIBLEReady = true; } return _INVISIBLEContent; } }
            private static int _INVISIBLEContent = default;
            private static bool _INVISIBLEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.PresenceColumns.html#OFFLINE"/>
            /// </summary>
            [global::System.Obsolete()]
            public static int OFFLINE { get { if (!_OFFLINEReady) { _OFFLINEContent = SGetField<int>(LocalBridgeClazz, "OFFLINE"); _OFFLINEReady = true; } return _OFFLINEContent; } }
            private static int _OFFLINEContent = default;
            private static bool _OFFLINEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.PresenceColumns.html#IM_ACCOUNT"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String IM_ACCOUNT { get { if (!_IM_ACCOUNTReady) { _IM_ACCOUNTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "IM_ACCOUNT"); _IM_ACCOUNTReady = true; } return _IM_ACCOUNTContent; } }
            private static Java.Lang.String _IM_ACCOUNTContent = default;
            private static bool _IM_ACCOUNTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.PresenceColumns.html#IM_HANDLE"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String IM_HANDLE { get { if (!_IM_HANDLEReady) { _IM_HANDLEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "IM_HANDLE"); _IM_HANDLEReady = true; } return _IM_HANDLEContent; } }
            private static Java.Lang.String _IM_HANDLEContent = default;
            private static bool _IM_HANDLEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.PresenceColumns.html#IM_PROTOCOL"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String IM_PROTOCOL { get { if (!_IM_PROTOCOLReady) { _IM_PROTOCOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "IM_PROTOCOL"); _IM_PROTOCOLReady = true; } return _IM_PROTOCOLContent; } }
            private static Java.Lang.String _IM_PROTOCOLContent = default;
            private static bool _IM_PROTOCOLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.PresenceColumns.html#PRESENCE_CUSTOM_STATUS"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String PRESENCE_CUSTOM_STATUS { get { if (!_PRESENCE_CUSTOM_STATUSReady) { _PRESENCE_CUSTOM_STATUSContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "PRESENCE_CUSTOM_STATUS"); _PRESENCE_CUSTOM_STATUSReady = true; } return _PRESENCE_CUSTOM_STATUSContent; } }
            private static Java.Lang.String _PRESENCE_CUSTOM_STATUSContent = default;
            private static bool _PRESENCE_CUSTOM_STATUSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.PresenceColumns.html#PRESENCE_STATUS"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String PRESENCE_STATUS { get { if (!_PRESENCE_STATUSReady) { _PRESENCE_STATUSContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "PRESENCE_STATUS"); _PRESENCE_STATUSReady = true; } return _PRESENCE_STATUSContent; } }
            private static Java.Lang.String _PRESENCE_STATUSContent = default;
            private static bool _PRESENCE_STATUSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.PresenceColumns.html#PRIORITY"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String PRIORITY { get { if (!_PRIORITYReady) { _PRIORITYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "PRIORITY"); _PRIORITYReady = true; } return _PRIORITYContent; } }
            private static Java.Lang.String _PRIORITYContent = default;
            private static bool _PRIORITYReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region Settings implementation
        public partial class Settings : Android.Provider.IBaseColumns
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators
            /// <summary>
            /// Converter from <see cref="Android.Provider.Contacts.Settings"/> to <see cref="Android.Provider.BaseColumns"/>
            /// </summary>
            public static implicit operator Android.Provider.BaseColumns(Android.Provider.Contacts.Settings t) => t.Cast<Android.Provider.BaseColumns>();

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.Settings.html#CONTENT_URI"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Android.Net.Uri CONTENT_URI { get { if (!_CONTENT_URIReady) { _CONTENT_URIContent = SGetField<Android.Net.Uri>(LocalBridgeClazz, "CONTENT_URI"); _CONTENT_URIReady = true; } return _CONTENT_URIContent; } }
            private static Android.Net.Uri _CONTENT_URIContent = default;
            private static bool _CONTENT_URIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.Settings.html#CONTENT_DIRECTORY"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String CONTENT_DIRECTORY { get { if (!_CONTENT_DIRECTORYReady) { _CONTENT_DIRECTORYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CONTENT_DIRECTORY"); _CONTENT_DIRECTORYReady = true; } return _CONTENT_DIRECTORYContent; } }
            private static Java.Lang.String _CONTENT_DIRECTORYContent = default;
            private static bool _CONTENT_DIRECTORYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.Settings.html#DEFAULT_SORT_ORDER"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String DEFAULT_SORT_ORDER { get { if (!_DEFAULT_SORT_ORDERReady) { _DEFAULT_SORT_ORDERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "DEFAULT_SORT_ORDER"); _DEFAULT_SORT_ORDERReady = true; } return _DEFAULT_SORT_ORDERContent; } }
            private static Java.Lang.String _DEFAULT_SORT_ORDERContent = default;
            private static bool _DEFAULT_SORT_ORDERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.Settings.html#SYNC_EVERYTHING"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String SYNC_EVERYTHING { get { if (!_SYNC_EVERYTHINGReady) { _SYNC_EVERYTHINGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SYNC_EVERYTHING"); _SYNC_EVERYTHINGReady = true; } return _SYNC_EVERYTHINGContent; } }
            private static Java.Lang.String _SYNC_EVERYTHINGContent = default;
            private static bool _SYNC_EVERYTHINGReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.Settings.html#getSetting(android.content.ContentResolver,java.lang.String,java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Content.ContentResolver"/></param>
            /// <param name="arg1"><see cref="Java.Lang.String"/></param>
            /// <param name="arg2"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Java.Lang.String"/></returns>
            [global::System.Obsolete()]
            public static Java.Lang.String GetSetting(Android.Content.ContentResolver arg0, Java.Lang.String arg1, Java.Lang.String arg2)
            {
                return SExecuteWithSignature<Java.Lang.String>(LocalBridgeClazz, "getSetting", "(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", arg0, arg1, arg2);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.Settings.html#setSetting(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Content.ContentResolver"/></param>
            /// <param name="arg1"><see cref="Java.Lang.String"/></param>
            /// <param name="arg2"><see cref="Java.Lang.String"/></param>
            /// <param name="arg3"><see cref="Java.Lang.String"/></param>
            [global::System.Obsolete()]
            public static void SetSetting(Android.Content.ContentResolver arg0, Java.Lang.String arg1, Java.Lang.String arg2, Java.Lang.String arg3)
            {
                SExecuteWithSignature(LocalBridgeClazz, "setSetting", "(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", arg0, arg1, arg2, arg3);
            }

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region SettingsColumns implementation
        public partial class SettingsColumns
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.SettingsColumns.html#_SYNC_ACCOUNT"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String _SYNC_ACCOUNT { get { if (!__SYNC_ACCOUNTReady) { __SYNC_ACCOUNTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "_SYNC_ACCOUNT"); __SYNC_ACCOUNTReady = true; } return __SYNC_ACCOUNTContent; } }
            private static Java.Lang.String __SYNC_ACCOUNTContent = default;
            private static bool __SYNC_ACCOUNTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.SettingsColumns.html#_SYNC_ACCOUNT_TYPE"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String _SYNC_ACCOUNT_TYPE { get { if (!__SYNC_ACCOUNT_TYPEReady) { __SYNC_ACCOUNT_TYPEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "_SYNC_ACCOUNT_TYPE"); __SYNC_ACCOUNT_TYPEReady = true; } return __SYNC_ACCOUNT_TYPEContent; } }
            private static Java.Lang.String __SYNC_ACCOUNT_TYPEContent = default;
            private static bool __SYNC_ACCOUNT_TYPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.SettingsColumns.html#KEY"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String KEY { get { if (!_KEYReady) { _KEYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY"); _KEYReady = true; } return _KEYContent; } }
            private static Java.Lang.String _KEYContent = default;
            private static bool _KEYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Contacts.SettingsColumns.html#VALUE"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String VALUE { get { if (!_VALUEReady) { _VALUEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "VALUE"); _VALUEReady = true; } return _VALUEContent; } }
            private static Java.Lang.String _VALUEContent = default;
            private static bool _VALUEReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}