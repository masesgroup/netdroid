/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.10.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Provider
{
    #region Telephony declaration
    /// <summary>
    /// <see href="https://developer.android.com/reference/android/provider/Telephony.html"/>
    /// </summary>
    public partial class Telephony : MASES.JCOBridge.C2JBridge.JVMBridgeBase<Telephony>
    {
        const string _bridgeClassName = "android.provider.Telephony";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public Telephony() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public Telephony(params object[] args) : base(args) { }
    
        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
    
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;
    
        // TODO: complete the class
        #region BaseMmsColumns declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/provider/Telephony.BaseMmsColumns.html"/>
        /// </summary>
        public partial class BaseMmsColumns : Android.Provider.BaseColumns
        {
            const string _bridgeClassName = "android.provider.Telephony$BaseMmsColumns";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            [global::System.Obsolete("BaseMmsColumns class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public BaseMmsColumns() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            [global::System.Obsolete("BaseMmsColumns class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public BaseMmsColumns(params object[] args) : base(args) { }
        
            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
        
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => true;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => true;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;
        
            // TODO: complete the class
        
        }
        #endregion

        #region CanonicalAddressesColumns declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/provider/Telephony.CanonicalAddressesColumns.html"/>
        /// </summary>
        public partial class CanonicalAddressesColumns : Android.Provider.BaseColumns
        {
            const string _bridgeClassName = "android.provider.Telephony$CanonicalAddressesColumns";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            [global::System.Obsolete("CanonicalAddressesColumns class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public CanonicalAddressesColumns() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            [global::System.Obsolete("CanonicalAddressesColumns class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public CanonicalAddressesColumns(params object[] args) : base(args) { }
        
            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
        
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => true;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => true;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;
        
            // TODO: complete the class
        
        }
        #endregion

        #region CarrierId declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/provider/Telephony.CarrierId.html"/>
        /// </summary>
        public partial class CarrierId : Android.Provider.BaseColumns
        {
            const string _bridgeClassName = "android.provider.Telephony$CarrierId";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public CarrierId() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public CarrierId(params object[] args) : base(args) { }
        
            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
        
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;
        
            // TODO: complete the class
        
        }
        #endregion

        #region Carriers declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/provider/Telephony.Carriers.html"/>
        /// </summary>
        public partial class Carriers : Android.Provider.BaseColumns
        {
            const string _bridgeClassName = "android.provider.Telephony$Carriers";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public Carriers() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public Carriers(params object[] args) : base(args) { }
        
            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
        
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;
        
            // TODO: complete the class
        
        }
        #endregion

        #region Mms declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/provider/Telephony.Mms.html"/>
        /// </summary>
        public partial class Mms : Android.Provider.Telephony.BaseMmsColumns
        {
            const string _bridgeClassName = "android.provider.Telephony$Mms";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public Mms() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public Mms(params object[] args) : base(args) { }
        
            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
        
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;
        
            // TODO: complete the class
            #region Sent declaration
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.Mms.Sent.html"/>
            /// </summary>
            public partial class Sent : Android.Provider.Telephony.BaseMmsColumns
            {
                const string _bridgeClassName = "android.provider.Telephony$Mms$Sent";
                /// <summary>
                /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
                /// </summary>
                public Sent() { }
                /// <summary>
                /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
                /// </summary>
                public Sent(params object[] args) : base(args) { }
            
                private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
                private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
            
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
                /// </summary>
                public override string BridgeClassName => _bridgeClassName;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
                /// </summary>
                public override bool IsBridgeAbstract => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
                /// </summary>
                public override bool IsBridgeCloseable => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
                /// </summary>
                public override bool IsBridgeInterface => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
                /// </summary>
                public override bool IsBridgeStatic => true;
            
                // TODO: complete the class
            
            }
            #endregion

            #region Rate declaration
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.Mms.Rate.html"/>
            /// </summary>
            public partial class Rate : MASES.JCOBridge.C2JBridge.JVMBridgeBase<Rate>
            {
                const string _bridgeClassName = "android.provider.Telephony$Mms$Rate";
                /// <summary>
                /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
                /// </summary>
                public Rate() { }
                /// <summary>
                /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
                /// </summary>
                public Rate(params object[] args) : base(args) { }
            
                private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
                private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
            
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
                /// </summary>
                public override string BridgeClassName => _bridgeClassName;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
                /// </summary>
                public override bool IsBridgeAbstract => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
                /// </summary>
                public override bool IsBridgeCloseable => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
                /// </summary>
                public override bool IsBridgeInterface => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
                /// </summary>
                public override bool IsBridgeStatic => true;
            
                // TODO: complete the class
            
            }
            #endregion

            #region Part declaration
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.Mms.Part.html"/>
            /// </summary>
            public partial class Part : Android.Provider.BaseColumns
            {
                const string _bridgeClassName = "android.provider.Telephony$Mms$Part";
                /// <summary>
                /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
                /// </summary>
                public Part() { }
                /// <summary>
                /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
                /// </summary>
                public Part(params object[] args) : base(args) { }
            
                private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
                private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
            
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
                /// </summary>
                public override string BridgeClassName => _bridgeClassName;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
                /// </summary>
                public override bool IsBridgeAbstract => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
                /// </summary>
                public override bool IsBridgeCloseable => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
                /// </summary>
                public override bool IsBridgeInterface => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
                /// </summary>
                public override bool IsBridgeStatic => true;
            
                // TODO: complete the class
            
            }
            #endregion

            #region Outbox declaration
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.Mms.Outbox.html"/>
            /// </summary>
            public partial class Outbox : Android.Provider.Telephony.BaseMmsColumns
            {
                const string _bridgeClassName = "android.provider.Telephony$Mms$Outbox";
                /// <summary>
                /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
                /// </summary>
                public Outbox() { }
                /// <summary>
                /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
                /// </summary>
                public Outbox(params object[] args) : base(args) { }
            
                private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
                private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
            
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
                /// </summary>
                public override string BridgeClassName => _bridgeClassName;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
                /// </summary>
                public override bool IsBridgeAbstract => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
                /// </summary>
                public override bool IsBridgeCloseable => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
                /// </summary>
                public override bool IsBridgeInterface => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
                /// </summary>
                public override bool IsBridgeStatic => true;
            
                // TODO: complete the class
            
            }
            #endregion

            #region Intents declaration
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.Mms.Intents.html"/>
            /// </summary>
            public partial class Intents : MASES.JCOBridge.C2JBridge.JVMBridgeBase<Intents>
            {
                const string _bridgeClassName = "android.provider.Telephony$Mms$Intents";
                /// <summary>
                /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
                /// </summary>
                public Intents() { }
                /// <summary>
                /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
                /// </summary>
                public Intents(params object[] args) : base(args) { }
            
                private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
                private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
            
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
                /// </summary>
                public override string BridgeClassName => _bridgeClassName;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
                /// </summary>
                public override bool IsBridgeAbstract => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
                /// </summary>
                public override bool IsBridgeCloseable => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
                /// </summary>
                public override bool IsBridgeInterface => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
                /// </summary>
                public override bool IsBridgeStatic => true;
            
                // TODO: complete the class
            
            }
            #endregion

            #region Inbox declaration
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.Mms.Inbox.html"/>
            /// </summary>
            public partial class Inbox : Android.Provider.Telephony.BaseMmsColumns
            {
                const string _bridgeClassName = "android.provider.Telephony$Mms$Inbox";
                /// <summary>
                /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
                /// </summary>
                public Inbox() { }
                /// <summary>
                /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
                /// </summary>
                public Inbox(params object[] args) : base(args) { }
            
                private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
                private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
            
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
                /// </summary>
                public override string BridgeClassName => _bridgeClassName;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
                /// </summary>
                public override bool IsBridgeAbstract => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
                /// </summary>
                public override bool IsBridgeCloseable => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
                /// </summary>
                public override bool IsBridgeInterface => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
                /// </summary>
                public override bool IsBridgeStatic => true;
            
                // TODO: complete the class
            
            }
            #endregion

            #region Draft declaration
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.Mms.Draft.html"/>
            /// </summary>
            public partial class Draft : Android.Provider.Telephony.BaseMmsColumns
            {
                const string _bridgeClassName = "android.provider.Telephony$Mms$Draft";
                /// <summary>
                /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
                /// </summary>
                public Draft() { }
                /// <summary>
                /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
                /// </summary>
                public Draft(params object[] args) : base(args) { }
            
                private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
                private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
            
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
                /// </summary>
                public override string BridgeClassName => _bridgeClassName;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
                /// </summary>
                public override bool IsBridgeAbstract => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
                /// </summary>
                public override bool IsBridgeCloseable => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
                /// </summary>
                public override bool IsBridgeInterface => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
                /// </summary>
                public override bool IsBridgeStatic => true;
            
                // TODO: complete the class
            
            }
            #endregion

            #region Addr declaration
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.Mms.Addr.html"/>
            /// </summary>
            public partial class Addr : Android.Provider.BaseColumns
            {
                const string _bridgeClassName = "android.provider.Telephony$Mms$Addr";
                /// <summary>
                /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
                /// </summary>
                public Addr() { }
                /// <summary>
                /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
                /// </summary>
                public Addr(params object[] args) : base(args) { }
            
                private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
                private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
            
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
                /// </summary>
                public override string BridgeClassName => _bridgeClassName;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
                /// </summary>
                public override bool IsBridgeAbstract => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
                /// </summary>
                public override bool IsBridgeCloseable => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
                /// </summary>
                public override bool IsBridgeInterface => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
                /// </summary>
                public override bool IsBridgeStatic => true;
            
                // TODO: complete the class
            
            }
            #endregion

        
        }
        #endregion

        #region MmsSms declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/provider/Telephony.MmsSms.html"/>
        /// </summary>
        public partial class MmsSms : Android.Provider.BaseColumns
        {
            const string _bridgeClassName = "android.provider.Telephony$MmsSms";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public MmsSms() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public MmsSms(params object[] args) : base(args) { }
        
            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
        
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;
        
            // TODO: complete the class
            #region PendingMessages declaration
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.MmsSms.PendingMessages.html"/>
            /// </summary>
            public partial class PendingMessages : Android.Provider.BaseColumns
            {
                const string _bridgeClassName = "android.provider.Telephony$MmsSms$PendingMessages";
                /// <summary>
                /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
                /// </summary>
                public PendingMessages() { }
                /// <summary>
                /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
                /// </summary>
                public PendingMessages(params object[] args) : base(args) { }
            
                private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
                private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
            
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
                /// </summary>
                public override string BridgeClassName => _bridgeClassName;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
                /// </summary>
                public override bool IsBridgeAbstract => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
                /// </summary>
                public override bool IsBridgeCloseable => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
                /// </summary>
                public override bool IsBridgeInterface => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
                /// </summary>
                public override bool IsBridgeStatic => true;
            
                // TODO: complete the class
            
            }
            #endregion

        
        }
        #endregion

        #region ServiceStateTable declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/provider/Telephony.ServiceStateTable.html"/>
        /// </summary>
        public partial class ServiceStateTable : MASES.JCOBridge.C2JBridge.JVMBridgeBase<ServiceStateTable>
        {
            const string _bridgeClassName = "android.provider.Telephony$ServiceStateTable";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public ServiceStateTable() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public ServiceStateTable(params object[] args) : base(args) { }
        
            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
        
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;
        
            // TODO: complete the class
        
        }
        #endregion

        #region Sms declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/provider/Telephony.Sms.html"/>
        /// </summary>
        public partial class Sms : MASES.JCOBridge.C2JBridge.JVMBridgeBase<Sms>
        {
            const string _bridgeClassName = "android.provider.Telephony$Sms";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public Sms() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public Sms(params object[] args) : base(args) { }
        
            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
        
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;
        
            // TODO: complete the class
            #region Sent declaration
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.Sms.Sent.html"/>
            /// </summary>
            public partial class Sent : MASES.JCOBridge.C2JBridge.JVMBridgeBase<Sent>
            {
                const string _bridgeClassName = "android.provider.Telephony$Sms$Sent";
                /// <summary>
                /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
                /// </summary>
                public Sent() { }
                /// <summary>
                /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
                /// </summary>
                public Sent(params object[] args) : base(args) { }
            
                private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
                private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
            
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
                /// </summary>
                public override string BridgeClassName => _bridgeClassName;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
                /// </summary>
                public override bool IsBridgeAbstract => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
                /// </summary>
                public override bool IsBridgeCloseable => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
                /// </summary>
                public override bool IsBridgeInterface => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
                /// </summary>
                public override bool IsBridgeStatic => true;
            
                // TODO: complete the class
            
            }
            #endregion

            #region Outbox declaration
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.Sms.Outbox.html"/>
            /// </summary>
            public partial class Outbox : MASES.JCOBridge.C2JBridge.JVMBridgeBase<Outbox>
            {
                const string _bridgeClassName = "android.provider.Telephony$Sms$Outbox";
                /// <summary>
                /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
                /// </summary>
                public Outbox() { }
                /// <summary>
                /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
                /// </summary>
                public Outbox(params object[] args) : base(args) { }
            
                private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
                private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
            
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
                /// </summary>
                public override string BridgeClassName => _bridgeClassName;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
                /// </summary>
                public override bool IsBridgeAbstract => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
                /// </summary>
                public override bool IsBridgeCloseable => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
                /// </summary>
                public override bool IsBridgeInterface => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
                /// </summary>
                public override bool IsBridgeStatic => true;
            
                // TODO: complete the class
            
            }
            #endregion

            #region Intents declaration
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.Sms.Intents.html"/>
            /// </summary>
            public partial class Intents : MASES.JCOBridge.C2JBridge.JVMBridgeBase<Intents>
            {
                const string _bridgeClassName = "android.provider.Telephony$Sms$Intents";
                /// <summary>
                /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
                /// </summary>
                public Intents() { }
                /// <summary>
                /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
                /// </summary>
                public Intents(params object[] args) : base(args) { }
            
                private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
                private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
            
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
                /// </summary>
                public override string BridgeClassName => _bridgeClassName;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
                /// </summary>
                public override bool IsBridgeAbstract => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
                /// </summary>
                public override bool IsBridgeCloseable => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
                /// </summary>
                public override bool IsBridgeInterface => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
                /// </summary>
                public override bool IsBridgeStatic => true;
            
                // TODO: complete the class
            
            }
            #endregion

            #region Inbox declaration
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.Sms.Inbox.html"/>
            /// </summary>
            public partial class Inbox : MASES.JCOBridge.C2JBridge.JVMBridgeBase<Inbox>
            {
                const string _bridgeClassName = "android.provider.Telephony$Sms$Inbox";
                /// <summary>
                /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
                /// </summary>
                public Inbox() { }
                /// <summary>
                /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
                /// </summary>
                public Inbox(params object[] args) : base(args) { }
            
                private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
                private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
            
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
                /// </summary>
                public override string BridgeClassName => _bridgeClassName;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
                /// </summary>
                public override bool IsBridgeAbstract => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
                /// </summary>
                public override bool IsBridgeCloseable => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
                /// </summary>
                public override bool IsBridgeInterface => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
                /// </summary>
                public override bool IsBridgeStatic => true;
            
                // TODO: complete the class
            
            }
            #endregion

            #region Draft declaration
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.Sms.Draft.html"/>
            /// </summary>
            public partial class Draft : MASES.JCOBridge.C2JBridge.JVMBridgeBase<Draft>
            {
                const string _bridgeClassName = "android.provider.Telephony$Sms$Draft";
                /// <summary>
                /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
                /// </summary>
                public Draft() { }
                /// <summary>
                /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
                /// </summary>
                public Draft(params object[] args) : base(args) { }
            
                private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
                private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
            
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
                /// </summary>
                public override string BridgeClassName => _bridgeClassName;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
                /// </summary>
                public override bool IsBridgeAbstract => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
                /// </summary>
                public override bool IsBridgeCloseable => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
                /// </summary>
                public override bool IsBridgeInterface => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
                /// </summary>
                public override bool IsBridgeStatic => true;
            
                // TODO: complete the class
            
            }
            #endregion

            #region Conversations declaration
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.Sms.Conversations.html"/>
            /// </summary>
            public partial class Conversations : MASES.JCOBridge.C2JBridge.JVMBridgeBase<Conversations>
            {
                const string _bridgeClassName = "android.provider.Telephony$Sms$Conversations";
                /// <summary>
                /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
                /// </summary>
                public Conversations() { }
                /// <summary>
                /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
                /// </summary>
                public Conversations(params object[] args) : base(args) { }
            
                private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
                private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
            
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
                /// </summary>
                public override string BridgeClassName => _bridgeClassName;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
                /// </summary>
                public override bool IsBridgeAbstract => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
                /// </summary>
                public override bool IsBridgeCloseable => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
                /// </summary>
                public override bool IsBridgeInterface => false;
                /// <summary>
                /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
                /// </summary>
                public override bool IsBridgeStatic => true;
            
                // TODO: complete the class
            
            }
            #endregion

        
        }
        #endregion

        #region TextBasedSmsColumns declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/provider/Telephony.TextBasedSmsColumns.html"/>
        /// </summary>
        public partial class TextBasedSmsColumns : MASES.JCOBridge.C2JBridge.JVMBridgeBase<TextBasedSmsColumns>
        {
            const string _bridgeClassName = "android.provider.Telephony$TextBasedSmsColumns";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            [global::System.Obsolete("TextBasedSmsColumns class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public TextBasedSmsColumns() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            [global::System.Obsolete("TextBasedSmsColumns class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public TextBasedSmsColumns(params object[] args) : base(args) { }
        
            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
        
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => true;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => true;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;
        
            // TODO: complete the class
        
        }
        #endregion

        #region Threads declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/provider/Telephony.Threads.html"/>
        /// </summary>
        public partial class Threads : Android.Provider.Telephony.ThreadsColumns
        {
            const string _bridgeClassName = "android.provider.Telephony$Threads";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public Threads() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public Threads(params object[] args) : base(args) { }
        
            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
        
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;
        
            // TODO: complete the class
        
        }
        #endregion

        #region ThreadsColumns declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/provider/Telephony.ThreadsColumns.html"/>
        /// </summary>
        public partial class ThreadsColumns : Android.Provider.BaseColumns
        {
            const string _bridgeClassName = "android.provider.Telephony$ThreadsColumns";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            [global::System.Obsolete("ThreadsColumns class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public ThreadsColumns() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            [global::System.Obsolete("ThreadsColumns class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public ThreadsColumns(params object[] args) : base(args) { }
        
            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
        
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => true;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => true;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;
        
            // TODO: complete the class
        
        }
        #endregion

    
    }
    #endregion

    #region Telephony implementation
    public partial class Telephony
    {
        #region Constructors
    
        #endregion
    
        #region Class/Interface conversion operators
    
        #endregion
    
        #region Fields
    
        #endregion
    
        #region Static methods
    
        #endregion
    
        #region Instance methods
    
        #endregion
    
        #region Nested classes
        #region BaseMmsColumns implementation
        public partial class BaseMmsColumns
        {
            #region Constructors
        
            #endregion
        
            #region Class/Interface conversion operators
        
            #endregion
        
            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.BaseMmsColumns.html#MESSAGE_BOX_ALL"/>
            /// </summary>
            public static int MESSAGE_BOX_ALL { get { if (!_MESSAGE_BOX_ALLReady) { _MESSAGE_BOX_ALLContent = SGetField<int>(LocalBridgeClazz, "MESSAGE_BOX_ALL"); _MESSAGE_BOX_ALLReady = true; } return _MESSAGE_BOX_ALLContent; } }
            private static int _MESSAGE_BOX_ALLContent = default;
            private static bool _MESSAGE_BOX_ALLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.BaseMmsColumns.html#MESSAGE_BOX_DRAFTS"/>
            /// </summary>
            public static int MESSAGE_BOX_DRAFTS { get { if (!_MESSAGE_BOX_DRAFTSReady) { _MESSAGE_BOX_DRAFTSContent = SGetField<int>(LocalBridgeClazz, "MESSAGE_BOX_DRAFTS"); _MESSAGE_BOX_DRAFTSReady = true; } return _MESSAGE_BOX_DRAFTSContent; } }
            private static int _MESSAGE_BOX_DRAFTSContent = default;
            private static bool _MESSAGE_BOX_DRAFTSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.BaseMmsColumns.html#MESSAGE_BOX_FAILED"/>
            /// </summary>
            public static int MESSAGE_BOX_FAILED { get { if (!_MESSAGE_BOX_FAILEDReady) { _MESSAGE_BOX_FAILEDContent = SGetField<int>(LocalBridgeClazz, "MESSAGE_BOX_FAILED"); _MESSAGE_BOX_FAILEDReady = true; } return _MESSAGE_BOX_FAILEDContent; } }
            private static int _MESSAGE_BOX_FAILEDContent = default;
            private static bool _MESSAGE_BOX_FAILEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.BaseMmsColumns.html#MESSAGE_BOX_INBOX"/>
            /// </summary>
            public static int MESSAGE_BOX_INBOX { get { if (!_MESSAGE_BOX_INBOXReady) { _MESSAGE_BOX_INBOXContent = SGetField<int>(LocalBridgeClazz, "MESSAGE_BOX_INBOX"); _MESSAGE_BOX_INBOXReady = true; } return _MESSAGE_BOX_INBOXContent; } }
            private static int _MESSAGE_BOX_INBOXContent = default;
            private static bool _MESSAGE_BOX_INBOXReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.BaseMmsColumns.html#MESSAGE_BOX_OUTBOX"/>
            /// </summary>
            public static int MESSAGE_BOX_OUTBOX { get { if (!_MESSAGE_BOX_OUTBOXReady) { _MESSAGE_BOX_OUTBOXContent = SGetField<int>(LocalBridgeClazz, "MESSAGE_BOX_OUTBOX"); _MESSAGE_BOX_OUTBOXReady = true; } return _MESSAGE_BOX_OUTBOXContent; } }
            private static int _MESSAGE_BOX_OUTBOXContent = default;
            private static bool _MESSAGE_BOX_OUTBOXReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.BaseMmsColumns.html#MESSAGE_BOX_SENT"/>
            /// </summary>
            public static int MESSAGE_BOX_SENT { get { if (!_MESSAGE_BOX_SENTReady) { _MESSAGE_BOX_SENTContent = SGetField<int>(LocalBridgeClazz, "MESSAGE_BOX_SENT"); _MESSAGE_BOX_SENTReady = true; } return _MESSAGE_BOX_SENTContent; } }
            private static int _MESSAGE_BOX_SENTContent = default;
            private static bool _MESSAGE_BOX_SENTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.BaseMmsColumns.html#CONTENT_CLASS"/>
            /// </summary>
            public static Java.Lang.String CONTENT_CLASS { get { if (!_CONTENT_CLASSReady) { _CONTENT_CLASSContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CONTENT_CLASS"); _CONTENT_CLASSReady = true; } return _CONTENT_CLASSContent; } }
            private static Java.Lang.String _CONTENT_CLASSContent = default;
            private static bool _CONTENT_CLASSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.BaseMmsColumns.html#CONTENT_LOCATION"/>
            /// </summary>
            public static Java.Lang.String CONTENT_LOCATION { get { if (!_CONTENT_LOCATIONReady) { _CONTENT_LOCATIONContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CONTENT_LOCATION"); _CONTENT_LOCATIONReady = true; } return _CONTENT_LOCATIONContent; } }
            private static Java.Lang.String _CONTENT_LOCATIONContent = default;
            private static bool _CONTENT_LOCATIONReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.BaseMmsColumns.html#CONTENT_TYPE"/>
            /// </summary>
            public static Java.Lang.String CONTENT_TYPE { get { if (!_CONTENT_TYPEReady) { _CONTENT_TYPEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CONTENT_TYPE"); _CONTENT_TYPEReady = true; } return _CONTENT_TYPEContent; } }
            private static Java.Lang.String _CONTENT_TYPEContent = default;
            private static bool _CONTENT_TYPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.BaseMmsColumns.html#CREATOR"/>
            /// </summary>
            public static Java.Lang.String CREATOR { get { if (!_CREATORReady) { _CREATORContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CREATOR"); _CREATORReady = true; } return _CREATORContent; } }
            private static Java.Lang.String _CREATORContent = default;
            private static bool _CREATORReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.BaseMmsColumns.html#DATE"/>
            /// </summary>
            public static Java.Lang.String DATE { get { if (!_DATEReady) { _DATEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "DATE"); _DATEReady = true; } return _DATEContent; } }
            private static Java.Lang.String _DATEContent = default;
            private static bool _DATEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.BaseMmsColumns.html#DATE_SENT"/>
            /// </summary>
            public static Java.Lang.String DATE_SENT { get { if (!_DATE_SENTReady) { _DATE_SENTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "DATE_SENT"); _DATE_SENTReady = true; } return _DATE_SENTContent; } }
            private static Java.Lang.String _DATE_SENTContent = default;
            private static bool _DATE_SENTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.BaseMmsColumns.html#DELIVERY_REPORT"/>
            /// </summary>
            public static Java.Lang.String DELIVERY_REPORT { get { if (!_DELIVERY_REPORTReady) { _DELIVERY_REPORTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "DELIVERY_REPORT"); _DELIVERY_REPORTReady = true; } return _DELIVERY_REPORTContent; } }
            private static Java.Lang.String _DELIVERY_REPORTContent = default;
            private static bool _DELIVERY_REPORTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.BaseMmsColumns.html#DELIVERY_TIME"/>
            /// </summary>
            public static Java.Lang.String DELIVERY_TIME { get { if (!_DELIVERY_TIMEReady) { _DELIVERY_TIMEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "DELIVERY_TIME"); _DELIVERY_TIMEReady = true; } return _DELIVERY_TIMEContent; } }
            private static Java.Lang.String _DELIVERY_TIMEContent = default;
            private static bool _DELIVERY_TIMEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.BaseMmsColumns.html#EXPIRY"/>
            /// </summary>
            public static Java.Lang.String EXPIRY { get { if (!_EXPIRYReady) { _EXPIRYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXPIRY"); _EXPIRYReady = true; } return _EXPIRYContent; } }
            private static Java.Lang.String _EXPIRYContent = default;
            private static bool _EXPIRYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.BaseMmsColumns.html#LOCKED"/>
            /// </summary>
            public static Java.Lang.String LOCKED { get { if (!_LOCKEDReady) { _LOCKEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "LOCKED"); _LOCKEDReady = true; } return _LOCKEDContent; } }
            private static Java.Lang.String _LOCKEDContent = default;
            private static bool _LOCKEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.BaseMmsColumns.html#MESSAGE_BOX"/>
            /// </summary>
            public static Java.Lang.String MESSAGE_BOX { get { if (!_MESSAGE_BOXReady) { _MESSAGE_BOXContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "MESSAGE_BOX"); _MESSAGE_BOXReady = true; } return _MESSAGE_BOXContent; } }
            private static Java.Lang.String _MESSAGE_BOXContent = default;
            private static bool _MESSAGE_BOXReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.BaseMmsColumns.html#MESSAGE_CLASS"/>
            /// </summary>
            public static Java.Lang.String MESSAGE_CLASS { get { if (!_MESSAGE_CLASSReady) { _MESSAGE_CLASSContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "MESSAGE_CLASS"); _MESSAGE_CLASSReady = true; } return _MESSAGE_CLASSContent; } }
            private static Java.Lang.String _MESSAGE_CLASSContent = default;
            private static bool _MESSAGE_CLASSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.BaseMmsColumns.html#MESSAGE_ID"/>
            /// </summary>
            public static Java.Lang.String MESSAGE_ID { get { if (!_MESSAGE_IDReady) { _MESSAGE_IDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "MESSAGE_ID"); _MESSAGE_IDReady = true; } return _MESSAGE_IDContent; } }
            private static Java.Lang.String _MESSAGE_IDContent = default;
            private static bool _MESSAGE_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.BaseMmsColumns.html#MESSAGE_SIZE"/>
            /// </summary>
            public static Java.Lang.String MESSAGE_SIZE { get { if (!_MESSAGE_SIZEReady) { _MESSAGE_SIZEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "MESSAGE_SIZE"); _MESSAGE_SIZEReady = true; } return _MESSAGE_SIZEContent; } }
            private static Java.Lang.String _MESSAGE_SIZEContent = default;
            private static bool _MESSAGE_SIZEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.BaseMmsColumns.html#MESSAGE_TYPE"/>
            /// </summary>
            public static Java.Lang.String MESSAGE_TYPE { get { if (!_MESSAGE_TYPEReady) { _MESSAGE_TYPEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "MESSAGE_TYPE"); _MESSAGE_TYPEReady = true; } return _MESSAGE_TYPEContent; } }
            private static Java.Lang.String _MESSAGE_TYPEContent = default;
            private static bool _MESSAGE_TYPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.BaseMmsColumns.html#MMS_VERSION"/>
            /// </summary>
            public static Java.Lang.String MMS_VERSION { get { if (!_MMS_VERSIONReady) { _MMS_VERSIONContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "MMS_VERSION"); _MMS_VERSIONReady = true; } return _MMS_VERSIONContent; } }
            private static Java.Lang.String _MMS_VERSIONContent = default;
            private static bool _MMS_VERSIONReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.BaseMmsColumns.html#PRIORITY"/>
            /// </summary>
            public static Java.Lang.String PRIORITY { get { if (!_PRIORITYReady) { _PRIORITYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "PRIORITY"); _PRIORITYReady = true; } return _PRIORITYContent; } }
            private static Java.Lang.String _PRIORITYContent = default;
            private static bool _PRIORITYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.BaseMmsColumns.html#READ"/>
            /// </summary>
            public static Java.Lang.String READ { get { if (!_READReady) { _READContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "READ"); _READReady = true; } return _READContent; } }
            private static Java.Lang.String _READContent = default;
            private static bool _READReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.BaseMmsColumns.html#READ_REPORT"/>
            /// </summary>
            public static Java.Lang.String READ_REPORT { get { if (!_READ_REPORTReady) { _READ_REPORTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "READ_REPORT"); _READ_REPORTReady = true; } return _READ_REPORTContent; } }
            private static Java.Lang.String _READ_REPORTContent = default;
            private static bool _READ_REPORTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.BaseMmsColumns.html#READ_STATUS"/>
            /// </summary>
            public static Java.Lang.String READ_STATUS { get { if (!_READ_STATUSReady) { _READ_STATUSContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "READ_STATUS"); _READ_STATUSReady = true; } return _READ_STATUSContent; } }
            private static Java.Lang.String _READ_STATUSContent = default;
            private static bool _READ_STATUSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.BaseMmsColumns.html#REPORT_ALLOWED"/>
            /// </summary>
            public static Java.Lang.String REPORT_ALLOWED { get { if (!_REPORT_ALLOWEDReady) { _REPORT_ALLOWEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "REPORT_ALLOWED"); _REPORT_ALLOWEDReady = true; } return _REPORT_ALLOWEDContent; } }
            private static Java.Lang.String _REPORT_ALLOWEDContent = default;
            private static bool _REPORT_ALLOWEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.BaseMmsColumns.html#RESPONSE_STATUS"/>
            /// </summary>
            public static Java.Lang.String RESPONSE_STATUS { get { if (!_RESPONSE_STATUSReady) { _RESPONSE_STATUSContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "RESPONSE_STATUS"); _RESPONSE_STATUSReady = true; } return _RESPONSE_STATUSContent; } }
            private static Java.Lang.String _RESPONSE_STATUSContent = default;
            private static bool _RESPONSE_STATUSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.BaseMmsColumns.html#RESPONSE_TEXT"/>
            /// </summary>
            public static Java.Lang.String RESPONSE_TEXT { get { if (!_RESPONSE_TEXTReady) { _RESPONSE_TEXTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "RESPONSE_TEXT"); _RESPONSE_TEXTReady = true; } return _RESPONSE_TEXTContent; } }
            private static Java.Lang.String _RESPONSE_TEXTContent = default;
            private static bool _RESPONSE_TEXTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.BaseMmsColumns.html#RETRIEVE_STATUS"/>
            /// </summary>
            public static Java.Lang.String RETRIEVE_STATUS { get { if (!_RETRIEVE_STATUSReady) { _RETRIEVE_STATUSContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "RETRIEVE_STATUS"); _RETRIEVE_STATUSReady = true; } return _RETRIEVE_STATUSContent; } }
            private static Java.Lang.String _RETRIEVE_STATUSContent = default;
            private static bool _RETRIEVE_STATUSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.BaseMmsColumns.html#RETRIEVE_TEXT"/>
            /// </summary>
            public static Java.Lang.String RETRIEVE_TEXT { get { if (!_RETRIEVE_TEXTReady) { _RETRIEVE_TEXTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "RETRIEVE_TEXT"); _RETRIEVE_TEXTReady = true; } return _RETRIEVE_TEXTContent; } }
            private static Java.Lang.String _RETRIEVE_TEXTContent = default;
            private static bool _RETRIEVE_TEXTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.BaseMmsColumns.html#RETRIEVE_TEXT_CHARSET"/>
            /// </summary>
            public static Java.Lang.String RETRIEVE_TEXT_CHARSET { get { if (!_RETRIEVE_TEXT_CHARSETReady) { _RETRIEVE_TEXT_CHARSETContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "RETRIEVE_TEXT_CHARSET"); _RETRIEVE_TEXT_CHARSETReady = true; } return _RETRIEVE_TEXT_CHARSETContent; } }
            private static Java.Lang.String _RETRIEVE_TEXT_CHARSETContent = default;
            private static bool _RETRIEVE_TEXT_CHARSETReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.BaseMmsColumns.html#SEEN"/>
            /// </summary>
            public static Java.Lang.String SEEN { get { if (!_SEENReady) { _SEENContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SEEN"); _SEENReady = true; } return _SEENContent; } }
            private static Java.Lang.String _SEENContent = default;
            private static bool _SEENReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.BaseMmsColumns.html#STATUS"/>
            /// </summary>
            public static Java.Lang.String STATUS { get { if (!_STATUSReady) { _STATUSContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "STATUS"); _STATUSReady = true; } return _STATUSContent; } }
            private static Java.Lang.String _STATUSContent = default;
            private static bool _STATUSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.BaseMmsColumns.html#SUBJECT"/>
            /// </summary>
            public static Java.Lang.String SUBJECT { get { if (!_SUBJECTReady) { _SUBJECTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SUBJECT"); _SUBJECTReady = true; } return _SUBJECTContent; } }
            private static Java.Lang.String _SUBJECTContent = default;
            private static bool _SUBJECTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.BaseMmsColumns.html#SUBJECT_CHARSET"/>
            /// </summary>
            public static Java.Lang.String SUBJECT_CHARSET { get { if (!_SUBJECT_CHARSETReady) { _SUBJECT_CHARSETContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SUBJECT_CHARSET"); _SUBJECT_CHARSETReady = true; } return _SUBJECT_CHARSETContent; } }
            private static Java.Lang.String _SUBJECT_CHARSETContent = default;
            private static bool _SUBJECT_CHARSETReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.BaseMmsColumns.html#SUBSCRIPTION_ID"/>
            /// </summary>
            public static Java.Lang.String SUBSCRIPTION_ID { get { if (!_SUBSCRIPTION_IDReady) { _SUBSCRIPTION_IDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SUBSCRIPTION_ID"); _SUBSCRIPTION_IDReady = true; } return _SUBSCRIPTION_IDContent; } }
            private static Java.Lang.String _SUBSCRIPTION_IDContent = default;
            private static bool _SUBSCRIPTION_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.BaseMmsColumns.html#TEXT_ONLY"/>
            /// </summary>
            public static Java.Lang.String TEXT_ONLY { get { if (!_TEXT_ONLYReady) { _TEXT_ONLYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "TEXT_ONLY"); _TEXT_ONLYReady = true; } return _TEXT_ONLYContent; } }
            private static Java.Lang.String _TEXT_ONLYContent = default;
            private static bool _TEXT_ONLYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.BaseMmsColumns.html#THREAD_ID"/>
            /// </summary>
            public static Java.Lang.String THREAD_ID { get { if (!_THREAD_IDReady) { _THREAD_IDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "THREAD_ID"); _THREAD_IDReady = true; } return _THREAD_IDContent; } }
            private static Java.Lang.String _THREAD_IDContent = default;
            private static bool _THREAD_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.BaseMmsColumns.html#TRANSACTION_ID"/>
            /// </summary>
            public static Java.Lang.String TRANSACTION_ID { get { if (!_TRANSACTION_IDReady) { _TRANSACTION_IDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "TRANSACTION_ID"); _TRANSACTION_IDReady = true; } return _TRANSACTION_IDContent; } }
            private static Java.Lang.String _TRANSACTION_IDContent = default;
            private static bool _TRANSACTION_IDReady = false; // this is used because in case of generics 
        
            #endregion
        
            #region Static methods
        
            #endregion
        
            #region Instance methods
        
            #endregion
        
            #region Nested classes
        
            #endregion
        
            // TODO: complete the class
        }
        #endregion

        #region CanonicalAddressesColumns implementation
        public partial class CanonicalAddressesColumns
        {
            #region Constructors
        
            #endregion
        
            #region Class/Interface conversion operators
        
            #endregion
        
            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.CanonicalAddressesColumns.html#ADDRESS"/>
            /// </summary>
            public static Java.Lang.String ADDRESS { get { if (!_ADDRESSReady) { _ADDRESSContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ADDRESS"); _ADDRESSReady = true; } return _ADDRESSContent; } }
            private static Java.Lang.String _ADDRESSContent = default;
            private static bool _ADDRESSReady = false; // this is used because in case of generics 
        
            #endregion
        
            #region Static methods
        
            #endregion
        
            #region Instance methods
        
            #endregion
        
            #region Nested classes
        
            #endregion
        
            // TODO: complete the class
        }
        #endregion

        #region CarrierId implementation
        public partial class CarrierId
        {
            #region Constructors
        
            #endregion
        
            #region Class/Interface conversion operators
        
            #endregion
        
            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.CarrierId.html#CONTENT_URI"/>
            /// </summary>
            public static Android.Net.Uri CONTENT_URI { get { if (!_CONTENT_URIReady) { _CONTENT_URIContent = SGetField<Android.Net.Uri>(LocalBridgeClazz, "CONTENT_URI"); _CONTENT_URIReady = true; } return _CONTENT_URIContent; } }
            private static Android.Net.Uri _CONTENT_URIContent = default;
            private static bool _CONTENT_URIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.CarrierId.html#CARRIER_ID"/>
            /// </summary>
            public static Java.Lang.String CARRIER_ID { get { if (!_CARRIER_IDReady) { _CARRIER_IDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CARRIER_ID"); _CARRIER_IDReady = true; } return _CARRIER_IDContent; } }
            private static Java.Lang.String _CARRIER_IDContent = default;
            private static bool _CARRIER_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.CarrierId.html#CARRIER_NAME"/>
            /// </summary>
            public static Java.Lang.String CARRIER_NAME { get { if (!_CARRIER_NAMEReady) { _CARRIER_NAMEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CARRIER_NAME"); _CARRIER_NAMEReady = true; } return _CARRIER_NAMEContent; } }
            private static Java.Lang.String _CARRIER_NAMEContent = default;
            private static bool _CARRIER_NAMEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.CarrierId.html#SPECIFIC_CARRIER_ID"/>
            /// </summary>
            public static Java.Lang.String SPECIFIC_CARRIER_ID { get { if (!_SPECIFIC_CARRIER_IDReady) { _SPECIFIC_CARRIER_IDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SPECIFIC_CARRIER_ID"); _SPECIFIC_CARRIER_IDReady = true; } return _SPECIFIC_CARRIER_IDContent; } }
            private static Java.Lang.String _SPECIFIC_CARRIER_IDContent = default;
            private static bool _SPECIFIC_CARRIER_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.CarrierId.html#SPECIFIC_CARRIER_ID_NAME"/>
            /// </summary>
            public static Java.Lang.String SPECIFIC_CARRIER_ID_NAME { get { if (!_SPECIFIC_CARRIER_ID_NAMEReady) { _SPECIFIC_CARRIER_ID_NAMEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SPECIFIC_CARRIER_ID_NAME"); _SPECIFIC_CARRIER_ID_NAMEReady = true; } return _SPECIFIC_CARRIER_ID_NAMEContent; } }
            private static Java.Lang.String _SPECIFIC_CARRIER_ID_NAMEContent = default;
            private static bool _SPECIFIC_CARRIER_ID_NAMEReady = false; // this is used because in case of generics 
        
            #endregion
        
            #region Static methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.CarrierId.html#getSpecificCarrierIdUriForSubscriptionId(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <returns><see cref="Android.Net.Uri"/></returns>
            public static Android.Net.Uri GetSpecificCarrierIdUriForSubscriptionId(int arg0)
            {
                return SExecuteWithSignature<Android.Net.Uri>(LocalBridgeClazz, "getSpecificCarrierIdUriForSubscriptionId", "(I)Landroid/net/Uri;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.CarrierId.html#getUriForSubscriptionId(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <returns><see cref="Android.Net.Uri"/></returns>
            public static Android.Net.Uri GetUriForSubscriptionId(int arg0)
            {
                return SExecuteWithSignature<Android.Net.Uri>(LocalBridgeClazz, "getUriForSubscriptionId", "(I)Landroid/net/Uri;", arg0);
            }
        
            #endregion
        
            #region Instance methods
        
            #endregion
        
            #region Nested classes
        
            #endregion
        
            // TODO: complete the class
        }
        #endregion

        #region Carriers implementation
        public partial class Carriers
        {
            #region Constructors
        
            #endregion
        
            #region Class/Interface conversion operators
        
            #endregion
        
            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.Carriers.html#CONTENT_URI"/>
            /// </summary>
            public static Android.Net.Uri CONTENT_URI { get { if (!_CONTENT_URIReady) { _CONTENT_URIContent = SGetField<Android.Net.Uri>(LocalBridgeClazz, "CONTENT_URI"); _CONTENT_URIReady = true; } return _CONTENT_URIContent; } }
            private static Android.Net.Uri _CONTENT_URIContent = default;
            private static bool _CONTENT_URIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.Carriers.html#SIM_APN_URI"/>
            /// </summary>
            public static Android.Net.Uri SIM_APN_URI { get { if (!_SIM_APN_URIReady) { _SIM_APN_URIContent = SGetField<Android.Net.Uri>(LocalBridgeClazz, "SIM_APN_URI"); _SIM_APN_URIReady = true; } return _SIM_APN_URIContent; } }
            private static Android.Net.Uri _SIM_APN_URIContent = default;
            private static bool _SIM_APN_URIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.Carriers.html#ALWAYS_ON"/>
            /// </summary>
            public static Java.Lang.String ALWAYS_ON { get { if (!_ALWAYS_ONReady) { _ALWAYS_ONContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ALWAYS_ON"); _ALWAYS_ONReady = true; } return _ALWAYS_ONContent; } }
            private static Java.Lang.String _ALWAYS_ONContent = default;
            private static bool _ALWAYS_ONReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.Carriers.html#APN"/>
            /// </summary>
            public static Java.Lang.String APN { get { if (!_APNReady) { _APNContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "APN"); _APNReady = true; } return _APNContent; } }
            private static Java.Lang.String _APNContent = default;
            private static bool _APNReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.Carriers.html#AUTH_TYPE"/>
            /// </summary>
            public static Java.Lang.String AUTH_TYPE { get { if (!_AUTH_TYPEReady) { _AUTH_TYPEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "AUTH_TYPE"); _AUTH_TYPEReady = true; } return _AUTH_TYPEContent; } }
            private static Java.Lang.String _AUTH_TYPEContent = default;
            private static bool _AUTH_TYPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.Carriers.html#BEARER"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String BEARER { get { if (!_BEARERReady) { _BEARERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "BEARER"); _BEARERReady = true; } return _BEARERContent; } }
            private static Java.Lang.String _BEARERContent = default;
            private static bool _BEARERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.Carriers.html#CARRIER_ENABLED"/>
            /// </summary>
            public static Java.Lang.String CARRIER_ENABLED { get { if (!_CARRIER_ENABLEDReady) { _CARRIER_ENABLEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CARRIER_ENABLED"); _CARRIER_ENABLEDReady = true; } return _CARRIER_ENABLEDContent; } }
            private static Java.Lang.String _CARRIER_ENABLEDContent = default;
            private static bool _CARRIER_ENABLEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.Carriers.html#CARRIER_ID"/>
            /// </summary>
            public static Java.Lang.String CARRIER_ID { get { if (!_CARRIER_IDReady) { _CARRIER_IDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CARRIER_ID"); _CARRIER_IDReady = true; } return _CARRIER_IDContent; } }
            private static Java.Lang.String _CARRIER_IDContent = default;
            private static bool _CARRIER_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.Carriers.html#CURRENT"/>
            /// </summary>
            public static Java.Lang.String CURRENT { get { if (!_CURRENTReady) { _CURRENTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CURRENT"); _CURRENTReady = true; } return _CURRENTContent; } }
            private static Java.Lang.String _CURRENTContent = default;
            private static bool _CURRENTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.Carriers.html#DEFAULT_SORT_ORDER"/>
            /// </summary>
            public static Java.Lang.String DEFAULT_SORT_ORDER { get { if (!_DEFAULT_SORT_ORDERReady) { _DEFAULT_SORT_ORDERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "DEFAULT_SORT_ORDER"); _DEFAULT_SORT_ORDERReady = true; } return _DEFAULT_SORT_ORDERContent; } }
            private static Java.Lang.String _DEFAULT_SORT_ORDERContent = default;
            private static bool _DEFAULT_SORT_ORDERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.Carriers.html#MCC"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String MCC { get { if (!_MCCReady) { _MCCContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "MCC"); _MCCReady = true; } return _MCCContent; } }
            private static Java.Lang.String _MCCContent = default;
            private static bool _MCCReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.Carriers.html#MMSC"/>
            /// </summary>
            public static Java.Lang.String MMSC { get { if (!_MMSCReady) { _MMSCContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "MMSC"); _MMSCReady = true; } return _MMSCContent; } }
            private static Java.Lang.String _MMSCContent = default;
            private static bool _MMSCReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.Carriers.html#MMSPORT"/>
            /// </summary>
            public static Java.Lang.String MMSPORT { get { if (!_MMSPORTReady) { _MMSPORTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "MMSPORT"); _MMSPORTReady = true; } return _MMSPORTContent; } }
            private static Java.Lang.String _MMSPORTContent = default;
            private static bool _MMSPORTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.Carriers.html#MMSPROXY"/>
            /// </summary>
            public static Java.Lang.String MMSPROXY { get { if (!_MMSPROXYReady) { _MMSPROXYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "MMSPROXY"); _MMSPROXYReady = true; } return _MMSPROXYContent; } }
            private static Java.Lang.String _MMSPROXYContent = default;
            private static bool _MMSPROXYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.Carriers.html#MNC"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String MNC { get { if (!_MNCReady) { _MNCContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "MNC"); _MNCReady = true; } return _MNCContent; } }
            private static Java.Lang.String _MNCContent = default;
            private static bool _MNCReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.Carriers.html#MTU_V4"/>
            /// </summary>
            public static Java.Lang.String MTU_V4 { get { if (!_MTU_V4Ready) { _MTU_V4Content = SGetField<Java.Lang.String>(LocalBridgeClazz, "MTU_V4"); _MTU_V4Ready = true; } return _MTU_V4Content; } }
            private static Java.Lang.String _MTU_V4Content = default;
            private static bool _MTU_V4Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.Carriers.html#MTU_V6"/>
            /// </summary>
            public static Java.Lang.String MTU_V6 { get { if (!_MTU_V6Ready) { _MTU_V6Content = SGetField<Java.Lang.String>(LocalBridgeClazz, "MTU_V6"); _MTU_V6Ready = true; } return _MTU_V6Content; } }
            private static Java.Lang.String _MTU_V6Content = default;
            private static bool _MTU_V6Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.Carriers.html#MVNO_MATCH_DATA"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String MVNO_MATCH_DATA { get { if (!_MVNO_MATCH_DATAReady) { _MVNO_MATCH_DATAContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "MVNO_MATCH_DATA"); _MVNO_MATCH_DATAReady = true; } return _MVNO_MATCH_DATAContent; } }
            private static Java.Lang.String _MVNO_MATCH_DATAContent = default;
            private static bool _MVNO_MATCH_DATAReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.Carriers.html#MVNO_TYPE"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String MVNO_TYPE { get { if (!_MVNO_TYPEReady) { _MVNO_TYPEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "MVNO_TYPE"); _MVNO_TYPEReady = true; } return _MVNO_TYPEContent; } }
            private static Java.Lang.String _MVNO_TYPEContent = default;
            private static bool _MVNO_TYPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.Carriers.html#NAME"/>
            /// </summary>
            public static Java.Lang.String NAME { get { if (!_NAMEReady) { _NAMEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "NAME"); _NAMEReady = true; } return _NAMEContent; } }
            private static Java.Lang.String _NAMEContent = default;
            private static bool _NAMEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.Carriers.html#NETWORK_TYPE_BITMASK"/>
            /// </summary>
            public static Java.Lang.String NETWORK_TYPE_BITMASK { get { if (!_NETWORK_TYPE_BITMASKReady) { _NETWORK_TYPE_BITMASKContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "NETWORK_TYPE_BITMASK"); _NETWORK_TYPE_BITMASKReady = true; } return _NETWORK_TYPE_BITMASKContent; } }
            private static Java.Lang.String _NETWORK_TYPE_BITMASKContent = default;
            private static bool _NETWORK_TYPE_BITMASKReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.Carriers.html#NUMERIC"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String NUMERIC { get { if (!_NUMERICReady) { _NUMERICContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "NUMERIC"); _NUMERICReady = true; } return _NUMERICContent; } }
            private static Java.Lang.String _NUMERICContent = default;
            private static bool _NUMERICReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.Carriers.html#PASSWORD"/>
            /// </summary>
            public static Java.Lang.String PASSWORD { get { if (!_PASSWORDReady) { _PASSWORDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "PASSWORD"); _PASSWORDReady = true; } return _PASSWORDContent; } }
            private static Java.Lang.String _PASSWORDContent = default;
            private static bool _PASSWORDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.Carriers.html#PORT"/>
            /// </summary>
            public static Java.Lang.String PORT { get { if (!_PORTReady) { _PORTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "PORT"); _PORTReady = true; } return _PORTContent; } }
            private static Java.Lang.String _PORTContent = default;
            private static bool _PORTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.Carriers.html#PROTOCOL"/>
            /// </summary>
            public static Java.Lang.String PROTOCOL { get { if (!_PROTOCOLReady) { _PROTOCOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "PROTOCOL"); _PROTOCOLReady = true; } return _PROTOCOLContent; } }
            private static Java.Lang.String _PROTOCOLContent = default;
            private static bool _PROTOCOLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.Carriers.html#PROXY"/>
            /// </summary>
            public static Java.Lang.String PROXY { get { if (!_PROXYReady) { _PROXYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "PROXY"); _PROXYReady = true; } return _PROXYContent; } }
            private static Java.Lang.String _PROXYContent = default;
            private static bool _PROXYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.Carriers.html#ROAMING_PROTOCOL"/>
            /// </summary>
            public static Java.Lang.String ROAMING_PROTOCOL { get { if (!_ROAMING_PROTOCOLReady) { _ROAMING_PROTOCOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ROAMING_PROTOCOL"); _ROAMING_PROTOCOLReady = true; } return _ROAMING_PROTOCOLContent; } }
            private static Java.Lang.String _ROAMING_PROTOCOLContent = default;
            private static bool _ROAMING_PROTOCOLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.Carriers.html#SERVER"/>
            /// </summary>
            public static Java.Lang.String SERVER { get { if (!_SERVERReady) { _SERVERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SERVER"); _SERVERReady = true; } return _SERVERContent; } }
            private static Java.Lang.String _SERVERContent = default;
            private static bool _SERVERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.Carriers.html#SUBSCRIPTION_ID"/>
            /// </summary>
            public static Java.Lang.String SUBSCRIPTION_ID { get { if (!_SUBSCRIPTION_IDReady) { _SUBSCRIPTION_IDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SUBSCRIPTION_ID"); _SUBSCRIPTION_IDReady = true; } return _SUBSCRIPTION_IDContent; } }
            private static Java.Lang.String _SUBSCRIPTION_IDContent = default;
            private static bool _SUBSCRIPTION_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.Carriers.html#TYPE"/>
            /// </summary>
            public static Java.Lang.String TYPE { get { if (!_TYPEReady) { _TYPEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "TYPE"); _TYPEReady = true; } return _TYPEContent; } }
            private static Java.Lang.String _TYPEContent = default;
            private static bool _TYPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.Carriers.html#USER"/>
            /// </summary>
            public static Java.Lang.String USER { get { if (!_USERReady) { _USERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "USER"); _USERReady = true; } return _USERContent; } }
            private static Java.Lang.String _USERContent = default;
            private static bool _USERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.Carriers.html#USER_EDITABLE"/>
            /// </summary>
            public static Java.Lang.String USER_EDITABLE { get { if (!_USER_EDITABLEReady) { _USER_EDITABLEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "USER_EDITABLE"); _USER_EDITABLEReady = true; } return _USER_EDITABLEContent; } }
            private static Java.Lang.String _USER_EDITABLEContent = default;
            private static bool _USER_EDITABLEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.Carriers.html#USER_VISIBLE"/>
            /// </summary>
            public static Java.Lang.String USER_VISIBLE { get { if (!_USER_VISIBLEReady) { _USER_VISIBLEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "USER_VISIBLE"); _USER_VISIBLEReady = true; } return _USER_VISIBLEContent; } }
            private static Java.Lang.String _USER_VISIBLEContent = default;
            private static bool _USER_VISIBLEReady = false; // this is used because in case of generics 
        
            #endregion
        
            #region Static methods
        
            #endregion
        
            #region Instance methods
        
            #endregion
        
            #region Nested classes
        
            #endregion
        
            // TODO: complete the class
        }
        #endregion

        #region Mms implementation
        public partial class Mms
        {
            #region Constructors
        
            #endregion
        
            #region Class/Interface conversion operators
        
            #endregion
        
            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.Mms.html#CONTENT_URI"/>
            /// </summary>
            public static Android.Net.Uri CONTENT_URI { get { if (!_CONTENT_URIReady) { _CONTENT_URIContent = SGetField<Android.Net.Uri>(LocalBridgeClazz, "CONTENT_URI"); _CONTENT_URIReady = true; } return _CONTENT_URIContent; } }
            private static Android.Net.Uri _CONTENT_URIContent = default;
            private static bool _CONTENT_URIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.Mms.html#REPORT_REQUEST_URI"/>
            /// </summary>
            public static Android.Net.Uri REPORT_REQUEST_URI { get { if (!_REPORT_REQUEST_URIReady) { _REPORT_REQUEST_URIContent = SGetField<Android.Net.Uri>(LocalBridgeClazz, "REPORT_REQUEST_URI"); _REPORT_REQUEST_URIReady = true; } return _REPORT_REQUEST_URIContent; } }
            private static Android.Net.Uri _REPORT_REQUEST_URIContent = default;
            private static bool _REPORT_REQUEST_URIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.Mms.html#REPORT_STATUS_URI"/>
            /// </summary>
            public static Android.Net.Uri REPORT_STATUS_URI { get { if (!_REPORT_STATUS_URIReady) { _REPORT_STATUS_URIContent = SGetField<Android.Net.Uri>(LocalBridgeClazz, "REPORT_STATUS_URI"); _REPORT_STATUS_URIReady = true; } return _REPORT_STATUS_URIContent; } }
            private static Android.Net.Uri _REPORT_STATUS_URIContent = default;
            private static bool _REPORT_STATUS_URIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.Mms.html#DEFAULT_SORT_ORDER"/>
            /// </summary>
            public static Java.Lang.String DEFAULT_SORT_ORDER { get { if (!_DEFAULT_SORT_ORDERReady) { _DEFAULT_SORT_ORDERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "DEFAULT_SORT_ORDER"); _DEFAULT_SORT_ORDERReady = true; } return _DEFAULT_SORT_ORDERContent; } }
            private static Java.Lang.String _DEFAULT_SORT_ORDERContent = default;
            private static bool _DEFAULT_SORT_ORDERReady = false; // this is used because in case of generics 
        
            #endregion
        
            #region Static methods
        
            #endregion
        
            #region Instance methods
        
            #endregion
        
            #region Nested classes
            #region Sent implementation
            public partial class Sent
            {
                #region Constructors
            
                #endregion
            
                #region Class/Interface conversion operators
            
                #endregion
            
                #region Fields
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Mms.Sent.html#CONTENT_URI"/>
                /// </summary>
                public static Android.Net.Uri CONTENT_URI { get { if (!_CONTENT_URIReady) { _CONTENT_URIContent = SGetField<Android.Net.Uri>(LocalBridgeClazz, "CONTENT_URI"); _CONTENT_URIReady = true; } return _CONTENT_URIContent; } }
                private static Android.Net.Uri _CONTENT_URIContent = default;
                private static bool _CONTENT_URIReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Mms.Sent.html#DEFAULT_SORT_ORDER"/>
                /// </summary>
                public static Java.Lang.String DEFAULT_SORT_ORDER { get { if (!_DEFAULT_SORT_ORDERReady) { _DEFAULT_SORT_ORDERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "DEFAULT_SORT_ORDER"); _DEFAULT_SORT_ORDERReady = true; } return _DEFAULT_SORT_ORDERContent; } }
                private static Java.Lang.String _DEFAULT_SORT_ORDERContent = default;
                private static bool _DEFAULT_SORT_ORDERReady = false; // this is used because in case of generics 
            
                #endregion
            
                #region Static methods
            
                #endregion
            
                #region Instance methods
            
                #endregion
            
                #region Nested classes
            
                #endregion
            
                // TODO: complete the class
            }
            #endregion

            #region Rate implementation
            public partial class Rate
            {
                #region Constructors
            
                #endregion
            
                #region Class/Interface conversion operators
            
                #endregion
            
                #region Fields
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Mms.Rate.html#CONTENT_URI"/>
                /// </summary>
                public static Android.Net.Uri CONTENT_URI { get { if (!_CONTENT_URIReady) { _CONTENT_URIContent = SGetField<Android.Net.Uri>(LocalBridgeClazz, "CONTENT_URI"); _CONTENT_URIReady = true; } return _CONTENT_URIContent; } }
                private static Android.Net.Uri _CONTENT_URIContent = default;
                private static bool _CONTENT_URIReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Mms.Rate.html#SENT_TIME"/>
                /// </summary>
                public static Java.Lang.String SENT_TIME { get { if (!_SENT_TIMEReady) { _SENT_TIMEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SENT_TIME"); _SENT_TIMEReady = true; } return _SENT_TIMEContent; } }
                private static Java.Lang.String _SENT_TIMEContent = default;
                private static bool _SENT_TIMEReady = false; // this is used because in case of generics 
            
                #endregion
            
                #region Static methods
            
                #endregion
            
                #region Instance methods
            
                #endregion
            
                #region Nested classes
            
                #endregion
            
                // TODO: complete the class
            }
            #endregion

            #region Part implementation
            public partial class Part
            {
                #region Constructors
            
                #endregion
            
                #region Class/Interface conversion operators
            
                #endregion
            
                #region Fields
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Mms.Part.html#CONTENT_URI"/>
                /// </summary>
                public static Android.Net.Uri CONTENT_URI { get { if (!_CONTENT_URIReady) { _CONTENT_URIContent = SGetField<Android.Net.Uri>(LocalBridgeClazz, "CONTENT_URI"); _CONTENT_URIReady = true; } return _CONTENT_URIContent; } }
                private static Android.Net.Uri _CONTENT_URIContent = default;
                private static bool _CONTENT_URIReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Mms.Part.html#_DATA"/>
                /// </summary>
                public static Java.Lang.String _DATA { get { if (!__DATAReady) { __DATAContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "_DATA"); __DATAReady = true; } return __DATAContent; } }
                private static Java.Lang.String __DATAContent = default;
                private static bool __DATAReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Mms.Part.html#CHARSET"/>
                /// </summary>
                public static Java.Lang.String CHARSET { get { if (!_CHARSETReady) { _CHARSETContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CHARSET"); _CHARSETReady = true; } return _CHARSETContent; } }
                private static Java.Lang.String _CHARSETContent = default;
                private static bool _CHARSETReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Mms.Part.html#CONTENT_DISPOSITION"/>
                /// </summary>
                public static Java.Lang.String CONTENT_DISPOSITION { get { if (!_CONTENT_DISPOSITIONReady) { _CONTENT_DISPOSITIONContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CONTENT_DISPOSITION"); _CONTENT_DISPOSITIONReady = true; } return _CONTENT_DISPOSITIONContent; } }
                private static Java.Lang.String _CONTENT_DISPOSITIONContent = default;
                private static bool _CONTENT_DISPOSITIONReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Mms.Part.html#CONTENT_ID"/>
                /// </summary>
                public static Java.Lang.String CONTENT_ID { get { if (!_CONTENT_IDReady) { _CONTENT_IDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CONTENT_ID"); _CONTENT_IDReady = true; } return _CONTENT_IDContent; } }
                private static Java.Lang.String _CONTENT_IDContent = default;
                private static bool _CONTENT_IDReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Mms.Part.html#CONTENT_LOCATION"/>
                /// </summary>
                public static Java.Lang.String CONTENT_LOCATION { get { if (!_CONTENT_LOCATIONReady) { _CONTENT_LOCATIONContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CONTENT_LOCATION"); _CONTENT_LOCATIONReady = true; } return _CONTENT_LOCATIONContent; } }
                private static Java.Lang.String _CONTENT_LOCATIONContent = default;
                private static bool _CONTENT_LOCATIONReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Mms.Part.html#CONTENT_TYPE"/>
                /// </summary>
                public static Java.Lang.String CONTENT_TYPE { get { if (!_CONTENT_TYPEReady) { _CONTENT_TYPEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CONTENT_TYPE"); _CONTENT_TYPEReady = true; } return _CONTENT_TYPEContent; } }
                private static Java.Lang.String _CONTENT_TYPEContent = default;
                private static bool _CONTENT_TYPEReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Mms.Part.html#CT_START"/>
                /// </summary>
                public static Java.Lang.String CT_START { get { if (!_CT_STARTReady) { _CT_STARTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CT_START"); _CT_STARTReady = true; } return _CT_STARTContent; } }
                private static Java.Lang.String _CT_STARTContent = default;
                private static bool _CT_STARTReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Mms.Part.html#CT_TYPE"/>
                /// </summary>
                public static Java.Lang.String CT_TYPE { get { if (!_CT_TYPEReady) { _CT_TYPEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CT_TYPE"); _CT_TYPEReady = true; } return _CT_TYPEContent; } }
                private static Java.Lang.String _CT_TYPEContent = default;
                private static bool _CT_TYPEReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Mms.Part.html#FILENAME"/>
                /// </summary>
                public static Java.Lang.String FILENAME { get { if (!_FILENAMEReady) { _FILENAMEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "FILENAME"); _FILENAMEReady = true; } return _FILENAMEContent; } }
                private static Java.Lang.String _FILENAMEContent = default;
                private static bool _FILENAMEReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Mms.Part.html#MSG_ID"/>
                /// </summary>
                public static Java.Lang.String MSG_ID { get { if (!_MSG_IDReady) { _MSG_IDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "MSG_ID"); _MSG_IDReady = true; } return _MSG_IDContent; } }
                private static Java.Lang.String _MSG_IDContent = default;
                private static bool _MSG_IDReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Mms.Part.html#NAME"/>
                /// </summary>
                public static Java.Lang.String NAME { get { if (!_NAMEReady) { _NAMEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "NAME"); _NAMEReady = true; } return _NAMEContent; } }
                private static Java.Lang.String _NAMEContent = default;
                private static bool _NAMEReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Mms.Part.html#SEQ"/>
                /// </summary>
                public static Java.Lang.String SEQ { get { if (!_SEQReady) { _SEQContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SEQ"); _SEQReady = true; } return _SEQContent; } }
                private static Java.Lang.String _SEQContent = default;
                private static bool _SEQReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Mms.Part.html#TEXT"/>
                /// </summary>
                public static Java.Lang.String TEXT { get { if (!_TEXTReady) { _TEXTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "TEXT"); _TEXTReady = true; } return _TEXTContent; } }
                private static Java.Lang.String _TEXTContent = default;
                private static bool _TEXTReady = false; // this is used because in case of generics 
            
                #endregion
            
                #region Static methods
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Mms.Part.html#getPartUriForMessage(java.lang.String)"/>
                /// </summary>
                /// <param name="arg0"><see cref="Java.Lang.String"/></param>
                /// <returns><see cref="Android.Net.Uri"/></returns>
                public static Android.Net.Uri GetPartUriForMessage(Java.Lang.String arg0)
                {
                    return SExecute<Android.Net.Uri>(LocalBridgeClazz, "getPartUriForMessage", arg0);
                }
            
                #endregion
            
                #region Instance methods
            
                #endregion
            
                #region Nested classes
            
                #endregion
            
                // TODO: complete the class
            }
            #endregion

            #region Outbox implementation
            public partial class Outbox
            {
                #region Constructors
            
                #endregion
            
                #region Class/Interface conversion operators
            
                #endregion
            
                #region Fields
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Mms.Outbox.html#CONTENT_URI"/>
                /// </summary>
                public static Android.Net.Uri CONTENT_URI { get { if (!_CONTENT_URIReady) { _CONTENT_URIContent = SGetField<Android.Net.Uri>(LocalBridgeClazz, "CONTENT_URI"); _CONTENT_URIReady = true; } return _CONTENT_URIContent; } }
                private static Android.Net.Uri _CONTENT_URIContent = default;
                private static bool _CONTENT_URIReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Mms.Outbox.html#DEFAULT_SORT_ORDER"/>
                /// </summary>
                public static Java.Lang.String DEFAULT_SORT_ORDER { get { if (!_DEFAULT_SORT_ORDERReady) { _DEFAULT_SORT_ORDERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "DEFAULT_SORT_ORDER"); _DEFAULT_SORT_ORDERReady = true; } return _DEFAULT_SORT_ORDERContent; } }
                private static Java.Lang.String _DEFAULT_SORT_ORDERContent = default;
                private static bool _DEFAULT_SORT_ORDERReady = false; // this is used because in case of generics 
            
                #endregion
            
                #region Static methods
            
                #endregion
            
                #region Instance methods
            
                #endregion
            
                #region Nested classes
            
                #endregion
            
                // TODO: complete the class
            }
            #endregion

            #region Intents implementation
            public partial class Intents
            {
                #region Constructors
            
                #endregion
            
                #region Class/Interface conversion operators
            
                #endregion
            
                #region Fields
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Mms.Intents.html#CONTENT_CHANGED_ACTION"/>
                /// </summary>
                public static Java.Lang.String CONTENT_CHANGED_ACTION { get { if (!_CONTENT_CHANGED_ACTIONReady) { _CONTENT_CHANGED_ACTIONContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CONTENT_CHANGED_ACTION"); _CONTENT_CHANGED_ACTIONReady = true; } return _CONTENT_CHANGED_ACTIONContent; } }
                private static Java.Lang.String _CONTENT_CHANGED_ACTIONContent = default;
                private static bool _CONTENT_CHANGED_ACTIONReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Mms.Intents.html#DELETED_CONTENTS"/>
                /// </summary>
                public static Java.Lang.String DELETED_CONTENTS { get { if (!_DELETED_CONTENTSReady) { _DELETED_CONTENTSContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "DELETED_CONTENTS"); _DELETED_CONTENTSReady = true; } return _DELETED_CONTENTSContent; } }
                private static Java.Lang.String _DELETED_CONTENTSContent = default;
                private static bool _DELETED_CONTENTSReady = false; // this is used because in case of generics 
            
                #endregion
            
                #region Static methods
            
                #endregion
            
                #region Instance methods
            
                #endregion
            
                #region Nested classes
            
                #endregion
            
                // TODO: complete the class
            }
            #endregion

            #region Inbox implementation
            public partial class Inbox
            {
                #region Constructors
            
                #endregion
            
                #region Class/Interface conversion operators
            
                #endregion
            
                #region Fields
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Mms.Inbox.html#CONTENT_URI"/>
                /// </summary>
                public static Android.Net.Uri CONTENT_URI { get { if (!_CONTENT_URIReady) { _CONTENT_URIContent = SGetField<Android.Net.Uri>(LocalBridgeClazz, "CONTENT_URI"); _CONTENT_URIReady = true; } return _CONTENT_URIContent; } }
                private static Android.Net.Uri _CONTENT_URIContent = default;
                private static bool _CONTENT_URIReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Mms.Inbox.html#DEFAULT_SORT_ORDER"/>
                /// </summary>
                public static Java.Lang.String DEFAULT_SORT_ORDER { get { if (!_DEFAULT_SORT_ORDERReady) { _DEFAULT_SORT_ORDERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "DEFAULT_SORT_ORDER"); _DEFAULT_SORT_ORDERReady = true; } return _DEFAULT_SORT_ORDERContent; } }
                private static Java.Lang.String _DEFAULT_SORT_ORDERContent = default;
                private static bool _DEFAULT_SORT_ORDERReady = false; // this is used because in case of generics 
            
                #endregion
            
                #region Static methods
            
                #endregion
            
                #region Instance methods
            
                #endregion
            
                #region Nested classes
            
                #endregion
            
                // TODO: complete the class
            }
            #endregion

            #region Draft implementation
            public partial class Draft
            {
                #region Constructors
            
                #endregion
            
                #region Class/Interface conversion operators
            
                #endregion
            
                #region Fields
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Mms.Draft.html#CONTENT_URI"/>
                /// </summary>
                public static Android.Net.Uri CONTENT_URI { get { if (!_CONTENT_URIReady) { _CONTENT_URIContent = SGetField<Android.Net.Uri>(LocalBridgeClazz, "CONTENT_URI"); _CONTENT_URIReady = true; } return _CONTENT_URIContent; } }
                private static Android.Net.Uri _CONTENT_URIContent = default;
                private static bool _CONTENT_URIReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Mms.Draft.html#DEFAULT_SORT_ORDER"/>
                /// </summary>
                public static Java.Lang.String DEFAULT_SORT_ORDER { get { if (!_DEFAULT_SORT_ORDERReady) { _DEFAULT_SORT_ORDERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "DEFAULT_SORT_ORDER"); _DEFAULT_SORT_ORDERReady = true; } return _DEFAULT_SORT_ORDERContent; } }
                private static Java.Lang.String _DEFAULT_SORT_ORDERContent = default;
                private static bool _DEFAULT_SORT_ORDERReady = false; // this is used because in case of generics 
            
                #endregion
            
                #region Static methods
            
                #endregion
            
                #region Instance methods
            
                #endregion
            
                #region Nested classes
            
                #endregion
            
                // TODO: complete the class
            }
            #endregion

            #region Addr implementation
            public partial class Addr
            {
                #region Constructors
            
                #endregion
            
                #region Class/Interface conversion operators
            
                #endregion
            
                #region Fields
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Mms.Addr.html#ADDRESS"/>
                /// </summary>
                public static Java.Lang.String ADDRESS { get { if (!_ADDRESSReady) { _ADDRESSContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ADDRESS"); _ADDRESSReady = true; } return _ADDRESSContent; } }
                private static Java.Lang.String _ADDRESSContent = default;
                private static bool _ADDRESSReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Mms.Addr.html#CHARSET"/>
                /// </summary>
                public static Java.Lang.String CHARSET { get { if (!_CHARSETReady) { _CHARSETContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CHARSET"); _CHARSETReady = true; } return _CHARSETContent; } }
                private static Java.Lang.String _CHARSETContent = default;
                private static bool _CHARSETReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Mms.Addr.html#CONTACT_ID"/>
                /// </summary>
                public static Java.Lang.String CONTACT_ID { get { if (!_CONTACT_IDReady) { _CONTACT_IDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CONTACT_ID"); _CONTACT_IDReady = true; } return _CONTACT_IDContent; } }
                private static Java.Lang.String _CONTACT_IDContent = default;
                private static bool _CONTACT_IDReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Mms.Addr.html#MSG_ID"/>
                /// </summary>
                public static Java.Lang.String MSG_ID { get { if (!_MSG_IDReady) { _MSG_IDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "MSG_ID"); _MSG_IDReady = true; } return _MSG_IDContent; } }
                private static Java.Lang.String _MSG_IDContent = default;
                private static bool _MSG_IDReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Mms.Addr.html#TYPE"/>
                /// </summary>
                public static Java.Lang.String TYPE { get { if (!_TYPEReady) { _TYPEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "TYPE"); _TYPEReady = true; } return _TYPEContent; } }
                private static Java.Lang.String _TYPEContent = default;
                private static bool _TYPEReady = false; // this is used because in case of generics 
            
                #endregion
            
                #region Static methods
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Mms.Addr.html#getAddrUriForMessage(java.lang.String)"/>
                /// </summary>
                /// <param name="arg0"><see cref="Java.Lang.String"/></param>
                /// <returns><see cref="Android.Net.Uri"/></returns>
                public static Android.Net.Uri GetAddrUriForMessage(Java.Lang.String arg0)
                {
                    return SExecute<Android.Net.Uri>(LocalBridgeClazz, "getAddrUriForMessage", arg0);
                }
            
                #endregion
            
                #region Instance methods
            
                #endregion
            
                #region Nested classes
            
                #endregion
            
                // TODO: complete the class
            }
            #endregion

        
            #endregion
        
            // TODO: complete the class
        }
        #endregion

        #region MmsSms implementation
        public partial class MmsSms
        {
            #region Constructors
        
            #endregion
        
            #region Class/Interface conversion operators
        
            #endregion
        
            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.MmsSms.html#CONTENT_CONVERSATIONS_URI"/>
            /// </summary>
            public static Android.Net.Uri CONTENT_CONVERSATIONS_URI { get { if (!_CONTENT_CONVERSATIONS_URIReady) { _CONTENT_CONVERSATIONS_URIContent = SGetField<Android.Net.Uri>(LocalBridgeClazz, "CONTENT_CONVERSATIONS_URI"); _CONTENT_CONVERSATIONS_URIReady = true; } return _CONTENT_CONVERSATIONS_URIContent; } }
            private static Android.Net.Uri _CONTENT_CONVERSATIONS_URIContent = default;
            private static bool _CONTENT_CONVERSATIONS_URIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.MmsSms.html#CONTENT_DRAFT_URI"/>
            /// </summary>
            public static Android.Net.Uri CONTENT_DRAFT_URI { get { if (!_CONTENT_DRAFT_URIReady) { _CONTENT_DRAFT_URIContent = SGetField<Android.Net.Uri>(LocalBridgeClazz, "CONTENT_DRAFT_URI"); _CONTENT_DRAFT_URIReady = true; } return _CONTENT_DRAFT_URIContent; } }
            private static Android.Net.Uri _CONTENT_DRAFT_URIContent = default;
            private static bool _CONTENT_DRAFT_URIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.MmsSms.html#CONTENT_FILTER_BYPHONE_URI"/>
            /// </summary>
            public static Android.Net.Uri CONTENT_FILTER_BYPHONE_URI { get { if (!_CONTENT_FILTER_BYPHONE_URIReady) { _CONTENT_FILTER_BYPHONE_URIContent = SGetField<Android.Net.Uri>(LocalBridgeClazz, "CONTENT_FILTER_BYPHONE_URI"); _CONTENT_FILTER_BYPHONE_URIReady = true; } return _CONTENT_FILTER_BYPHONE_URIContent; } }
            private static Android.Net.Uri _CONTENT_FILTER_BYPHONE_URIContent = default;
            private static bool _CONTENT_FILTER_BYPHONE_URIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.MmsSms.html#CONTENT_LOCKED_URI"/>
            /// </summary>
            public static Android.Net.Uri CONTENT_LOCKED_URI { get { if (!_CONTENT_LOCKED_URIReady) { _CONTENT_LOCKED_URIContent = SGetField<Android.Net.Uri>(LocalBridgeClazz, "CONTENT_LOCKED_URI"); _CONTENT_LOCKED_URIReady = true; } return _CONTENT_LOCKED_URIContent; } }
            private static Android.Net.Uri _CONTENT_LOCKED_URIContent = default;
            private static bool _CONTENT_LOCKED_URIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.MmsSms.html#CONTENT_UNDELIVERED_URI"/>
            /// </summary>
            public static Android.Net.Uri CONTENT_UNDELIVERED_URI { get { if (!_CONTENT_UNDELIVERED_URIReady) { _CONTENT_UNDELIVERED_URIContent = SGetField<Android.Net.Uri>(LocalBridgeClazz, "CONTENT_UNDELIVERED_URI"); _CONTENT_UNDELIVERED_URIReady = true; } return _CONTENT_UNDELIVERED_URIContent; } }
            private static Android.Net.Uri _CONTENT_UNDELIVERED_URIContent = default;
            private static bool _CONTENT_UNDELIVERED_URIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.MmsSms.html#CONTENT_URI"/>
            /// </summary>
            public static Android.Net.Uri CONTENT_URI { get { if (!_CONTENT_URIReady) { _CONTENT_URIContent = SGetField<Android.Net.Uri>(LocalBridgeClazz, "CONTENT_URI"); _CONTENT_URIReady = true; } return _CONTENT_URIContent; } }
            private static Android.Net.Uri _CONTENT_URIContent = default;
            private static bool _CONTENT_URIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.MmsSms.html#SEARCH_URI"/>
            /// </summary>
            public static Android.Net.Uri SEARCH_URI { get { if (!_SEARCH_URIReady) { _SEARCH_URIContent = SGetField<Android.Net.Uri>(LocalBridgeClazz, "SEARCH_URI"); _SEARCH_URIReady = true; } return _SEARCH_URIContent; } }
            private static Android.Net.Uri _SEARCH_URIContent = default;
            private static bool _SEARCH_URIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.MmsSms.html#ERR_TYPE_GENERIC"/>
            /// </summary>
            public static int ERR_TYPE_GENERIC { get { if (!_ERR_TYPE_GENERICReady) { _ERR_TYPE_GENERICContent = SGetField<int>(LocalBridgeClazz, "ERR_TYPE_GENERIC"); _ERR_TYPE_GENERICReady = true; } return _ERR_TYPE_GENERICContent; } }
            private static int _ERR_TYPE_GENERICContent = default;
            private static bool _ERR_TYPE_GENERICReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.MmsSms.html#ERR_TYPE_GENERIC_PERMANENT"/>
            /// </summary>
            public static int ERR_TYPE_GENERIC_PERMANENT { get { if (!_ERR_TYPE_GENERIC_PERMANENTReady) { _ERR_TYPE_GENERIC_PERMANENTContent = SGetField<int>(LocalBridgeClazz, "ERR_TYPE_GENERIC_PERMANENT"); _ERR_TYPE_GENERIC_PERMANENTReady = true; } return _ERR_TYPE_GENERIC_PERMANENTContent; } }
            private static int _ERR_TYPE_GENERIC_PERMANENTContent = default;
            private static bool _ERR_TYPE_GENERIC_PERMANENTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.MmsSms.html#ERR_TYPE_MMS_PROTO_PERMANENT"/>
            /// </summary>
            public static int ERR_TYPE_MMS_PROTO_PERMANENT { get { if (!_ERR_TYPE_MMS_PROTO_PERMANENTReady) { _ERR_TYPE_MMS_PROTO_PERMANENTContent = SGetField<int>(LocalBridgeClazz, "ERR_TYPE_MMS_PROTO_PERMANENT"); _ERR_TYPE_MMS_PROTO_PERMANENTReady = true; } return _ERR_TYPE_MMS_PROTO_PERMANENTContent; } }
            private static int _ERR_TYPE_MMS_PROTO_PERMANENTContent = default;
            private static bool _ERR_TYPE_MMS_PROTO_PERMANENTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.MmsSms.html#ERR_TYPE_MMS_PROTO_TRANSIENT"/>
            /// </summary>
            public static int ERR_TYPE_MMS_PROTO_TRANSIENT { get { if (!_ERR_TYPE_MMS_PROTO_TRANSIENTReady) { _ERR_TYPE_MMS_PROTO_TRANSIENTContent = SGetField<int>(LocalBridgeClazz, "ERR_TYPE_MMS_PROTO_TRANSIENT"); _ERR_TYPE_MMS_PROTO_TRANSIENTReady = true; } return _ERR_TYPE_MMS_PROTO_TRANSIENTContent; } }
            private static int _ERR_TYPE_MMS_PROTO_TRANSIENTContent = default;
            private static bool _ERR_TYPE_MMS_PROTO_TRANSIENTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.MmsSms.html#ERR_TYPE_SMS_PROTO_PERMANENT"/>
            /// </summary>
            public static int ERR_TYPE_SMS_PROTO_PERMANENT { get { if (!_ERR_TYPE_SMS_PROTO_PERMANENTReady) { _ERR_TYPE_SMS_PROTO_PERMANENTContent = SGetField<int>(LocalBridgeClazz, "ERR_TYPE_SMS_PROTO_PERMANENT"); _ERR_TYPE_SMS_PROTO_PERMANENTReady = true; } return _ERR_TYPE_SMS_PROTO_PERMANENTContent; } }
            private static int _ERR_TYPE_SMS_PROTO_PERMANENTContent = default;
            private static bool _ERR_TYPE_SMS_PROTO_PERMANENTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.MmsSms.html#ERR_TYPE_SMS_PROTO_TRANSIENT"/>
            /// </summary>
            public static int ERR_TYPE_SMS_PROTO_TRANSIENT { get { if (!_ERR_TYPE_SMS_PROTO_TRANSIENTReady) { _ERR_TYPE_SMS_PROTO_TRANSIENTContent = SGetField<int>(LocalBridgeClazz, "ERR_TYPE_SMS_PROTO_TRANSIENT"); _ERR_TYPE_SMS_PROTO_TRANSIENTReady = true; } return _ERR_TYPE_SMS_PROTO_TRANSIENTContent; } }
            private static int _ERR_TYPE_SMS_PROTO_TRANSIENTContent = default;
            private static bool _ERR_TYPE_SMS_PROTO_TRANSIENTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.MmsSms.html#ERR_TYPE_TRANSPORT_FAILURE"/>
            /// </summary>
            public static int ERR_TYPE_TRANSPORT_FAILURE { get { if (!_ERR_TYPE_TRANSPORT_FAILUREReady) { _ERR_TYPE_TRANSPORT_FAILUREContent = SGetField<int>(LocalBridgeClazz, "ERR_TYPE_TRANSPORT_FAILURE"); _ERR_TYPE_TRANSPORT_FAILUREReady = true; } return _ERR_TYPE_TRANSPORT_FAILUREContent; } }
            private static int _ERR_TYPE_TRANSPORT_FAILUREContent = default;
            private static bool _ERR_TYPE_TRANSPORT_FAILUREReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.MmsSms.html#MMS_PROTO"/>
            /// </summary>
            public static int MMS_PROTO { get { if (!_MMS_PROTOReady) { _MMS_PROTOContent = SGetField<int>(LocalBridgeClazz, "MMS_PROTO"); _MMS_PROTOReady = true; } return _MMS_PROTOContent; } }
            private static int _MMS_PROTOContent = default;
            private static bool _MMS_PROTOReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.MmsSms.html#NO_ERROR"/>
            /// </summary>
            public static int NO_ERROR { get { if (!_NO_ERRORReady) { _NO_ERRORContent = SGetField<int>(LocalBridgeClazz, "NO_ERROR"); _NO_ERRORReady = true; } return _NO_ERRORContent; } }
            private static int _NO_ERRORContent = default;
            private static bool _NO_ERRORReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.MmsSms.html#SMS_PROTO"/>
            /// </summary>
            public static int SMS_PROTO { get { if (!_SMS_PROTOReady) { _SMS_PROTOContent = SGetField<int>(LocalBridgeClazz, "SMS_PROTO"); _SMS_PROTOReady = true; } return _SMS_PROTOContent; } }
            private static int _SMS_PROTOContent = default;
            private static bool _SMS_PROTOReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.MmsSms.html#TYPE_DISCRIMINATOR_COLUMN"/>
            /// </summary>
            public static Java.Lang.String TYPE_DISCRIMINATOR_COLUMN { get { if (!_TYPE_DISCRIMINATOR_COLUMNReady) { _TYPE_DISCRIMINATOR_COLUMNContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "TYPE_DISCRIMINATOR_COLUMN"); _TYPE_DISCRIMINATOR_COLUMNReady = true; } return _TYPE_DISCRIMINATOR_COLUMNContent; } }
            private static Java.Lang.String _TYPE_DISCRIMINATOR_COLUMNContent = default;
            private static bool _TYPE_DISCRIMINATOR_COLUMNReady = false; // this is used because in case of generics 
        
            #endregion
        
            #region Static methods
        
            #endregion
        
            #region Instance methods
        
            #endregion
        
            #region Nested classes
            #region PendingMessages implementation
            public partial class PendingMessages
            {
                #region Constructors
            
                #endregion
            
                #region Class/Interface conversion operators
            
                #endregion
            
                #region Fields
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.MmsSms.PendingMessages.html#CONTENT_URI"/>
                /// </summary>
                public static Android.Net.Uri CONTENT_URI { get { if (!_CONTENT_URIReady) { _CONTENT_URIContent = SGetField<Android.Net.Uri>(LocalBridgeClazz, "CONTENT_URI"); _CONTENT_URIReady = true; } return _CONTENT_URIContent; } }
                private static Android.Net.Uri _CONTENT_URIContent = default;
                private static bool _CONTENT_URIReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.MmsSms.PendingMessages.html#DUE_TIME"/>
                /// </summary>
                public static Java.Lang.String DUE_TIME { get { if (!_DUE_TIMEReady) { _DUE_TIMEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "DUE_TIME"); _DUE_TIMEReady = true; } return _DUE_TIMEContent; } }
                private static Java.Lang.String _DUE_TIMEContent = default;
                private static bool _DUE_TIMEReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.MmsSms.PendingMessages.html#ERROR_CODE"/>
                /// </summary>
                public static Java.Lang.String ERROR_CODE { get { if (!_ERROR_CODEReady) { _ERROR_CODEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ERROR_CODE"); _ERROR_CODEReady = true; } return _ERROR_CODEContent; } }
                private static Java.Lang.String _ERROR_CODEContent = default;
                private static bool _ERROR_CODEReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.MmsSms.PendingMessages.html#ERROR_TYPE"/>
                /// </summary>
                public static Java.Lang.String ERROR_TYPE { get { if (!_ERROR_TYPEReady) { _ERROR_TYPEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ERROR_TYPE"); _ERROR_TYPEReady = true; } return _ERROR_TYPEContent; } }
                private static Java.Lang.String _ERROR_TYPEContent = default;
                private static bool _ERROR_TYPEReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.MmsSms.PendingMessages.html#LAST_TRY"/>
                /// </summary>
                public static Java.Lang.String LAST_TRY { get { if (!_LAST_TRYReady) { _LAST_TRYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "LAST_TRY"); _LAST_TRYReady = true; } return _LAST_TRYContent; } }
                private static Java.Lang.String _LAST_TRYContent = default;
                private static bool _LAST_TRYReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.MmsSms.PendingMessages.html#MSG_ID"/>
                /// </summary>
                public static Java.Lang.String MSG_ID { get { if (!_MSG_IDReady) { _MSG_IDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "MSG_ID"); _MSG_IDReady = true; } return _MSG_IDContent; } }
                private static Java.Lang.String _MSG_IDContent = default;
                private static bool _MSG_IDReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.MmsSms.PendingMessages.html#MSG_TYPE"/>
                /// </summary>
                public static Java.Lang.String MSG_TYPE { get { if (!_MSG_TYPEReady) { _MSG_TYPEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "MSG_TYPE"); _MSG_TYPEReady = true; } return _MSG_TYPEContent; } }
                private static Java.Lang.String _MSG_TYPEContent = default;
                private static bool _MSG_TYPEReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.MmsSms.PendingMessages.html#PROTO_TYPE"/>
                /// </summary>
                public static Java.Lang.String PROTO_TYPE { get { if (!_PROTO_TYPEReady) { _PROTO_TYPEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "PROTO_TYPE"); _PROTO_TYPEReady = true; } return _PROTO_TYPEContent; } }
                private static Java.Lang.String _PROTO_TYPEContent = default;
                private static bool _PROTO_TYPEReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.MmsSms.PendingMessages.html#RETRY_INDEX"/>
                /// </summary>
                public static Java.Lang.String RETRY_INDEX { get { if (!_RETRY_INDEXReady) { _RETRY_INDEXContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "RETRY_INDEX"); _RETRY_INDEXReady = true; } return _RETRY_INDEXContent; } }
                private static Java.Lang.String _RETRY_INDEXContent = default;
                private static bool _RETRY_INDEXReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.MmsSms.PendingMessages.html#SUBSCRIPTION_ID"/>
                /// </summary>
                public static Java.Lang.String SUBSCRIPTION_ID { get { if (!_SUBSCRIPTION_IDReady) { _SUBSCRIPTION_IDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SUBSCRIPTION_ID"); _SUBSCRIPTION_IDReady = true; } return _SUBSCRIPTION_IDContent; } }
                private static Java.Lang.String _SUBSCRIPTION_IDContent = default;
                private static bool _SUBSCRIPTION_IDReady = false; // this is used because in case of generics 
            
                #endregion
            
                #region Static methods
            
                #endregion
            
                #region Instance methods
            
                #endregion
            
                #region Nested classes
            
                #endregion
            
                // TODO: complete the class
            }
            #endregion

        
            #endregion
        
            // TODO: complete the class
        }
        #endregion

        #region ServiceStateTable implementation
        public partial class ServiceStateTable
        {
            #region Constructors
        
            #endregion
        
            #region Class/Interface conversion operators
        
            #endregion
        
            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.ServiceStateTable.html#CONTENT_URI"/>
            /// </summary>
            public static Android.Net.Uri CONTENT_URI { get { if (!_CONTENT_URIReady) { _CONTENT_URIContent = SGetField<Android.Net.Uri>(LocalBridgeClazz, "CONTENT_URI"); _CONTENT_URIReady = true; } return _CONTENT_URIContent; } }
            private static Android.Net.Uri _CONTENT_URIContent = default;
            private static bool _CONTENT_URIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.ServiceStateTable.html#AUTHORITY"/>
            /// </summary>
            public static Java.Lang.String AUTHORITY { get { if (!_AUTHORITYReady) { _AUTHORITYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "AUTHORITY"); _AUTHORITYReady = true; } return _AUTHORITYContent; } }
            private static Java.Lang.String _AUTHORITYContent = default;
            private static bool _AUTHORITYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.ServiceStateTable.html#DATA_NETWORK_TYPE"/>
            /// </summary>
            public static Java.Lang.String DATA_NETWORK_TYPE { get { if (!_DATA_NETWORK_TYPEReady) { _DATA_NETWORK_TYPEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "DATA_NETWORK_TYPE"); _DATA_NETWORK_TYPEReady = true; } return _DATA_NETWORK_TYPEContent; } }
            private static Java.Lang.String _DATA_NETWORK_TYPEContent = default;
            private static bool _DATA_NETWORK_TYPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.ServiceStateTable.html#DATA_REG_STATE"/>
            /// </summary>
            public static Java.Lang.String DATA_REG_STATE { get { if (!_DATA_REG_STATEReady) { _DATA_REG_STATEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "DATA_REG_STATE"); _DATA_REG_STATEReady = true; } return _DATA_REG_STATEContent; } }
            private static Java.Lang.String _DATA_REG_STATEContent = default;
            private static bool _DATA_REG_STATEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.ServiceStateTable.html#DUPLEX_MODE"/>
            /// </summary>
            public static Java.Lang.String DUPLEX_MODE { get { if (!_DUPLEX_MODEReady) { _DUPLEX_MODEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "DUPLEX_MODE"); _DUPLEX_MODEReady = true; } return _DUPLEX_MODEContent; } }
            private static Java.Lang.String _DUPLEX_MODEContent = default;
            private static bool _DUPLEX_MODEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.ServiceStateTable.html#IS_MANUAL_NETWORK_SELECTION"/>
            /// </summary>
            public static Java.Lang.String IS_MANUAL_NETWORK_SELECTION { get { if (!_IS_MANUAL_NETWORK_SELECTIONReady) { _IS_MANUAL_NETWORK_SELECTIONContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "IS_MANUAL_NETWORK_SELECTION"); _IS_MANUAL_NETWORK_SELECTIONReady = true; } return _IS_MANUAL_NETWORK_SELECTIONContent; } }
            private static Java.Lang.String _IS_MANUAL_NETWORK_SELECTIONContent = default;
            private static bool _IS_MANUAL_NETWORK_SELECTIONReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.ServiceStateTable.html#VOICE_OPERATOR_NUMERIC"/>
            /// </summary>
            public static Java.Lang.String VOICE_OPERATOR_NUMERIC { get { if (!_VOICE_OPERATOR_NUMERICReady) { _VOICE_OPERATOR_NUMERICContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "VOICE_OPERATOR_NUMERIC"); _VOICE_OPERATOR_NUMERICReady = true; } return _VOICE_OPERATOR_NUMERICContent; } }
            private static Java.Lang.String _VOICE_OPERATOR_NUMERICContent = default;
            private static bool _VOICE_OPERATOR_NUMERICReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.ServiceStateTable.html#VOICE_REG_STATE"/>
            /// </summary>
            public static Java.Lang.String VOICE_REG_STATE { get { if (!_VOICE_REG_STATEReady) { _VOICE_REG_STATEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "VOICE_REG_STATE"); _VOICE_REG_STATEReady = true; } return _VOICE_REG_STATEContent; } }
            private static Java.Lang.String _VOICE_REG_STATEContent = default;
            private static bool _VOICE_REG_STATEReady = false; // this is used because in case of generics 
        
            #endregion
        
            #region Static methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.ServiceStateTable.html#getUriForSubscriptionId(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <returns><see cref="Android.Net.Uri"/></returns>
            public static Android.Net.Uri GetUriForSubscriptionId(int arg0)
            {
                return SExecuteWithSignature<Android.Net.Uri>(LocalBridgeClazz, "getUriForSubscriptionId", "(I)Landroid/net/Uri;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.ServiceStateTable.html#getUriForSubscriptionIdAndField(int,java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <param name="arg1"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Android.Net.Uri"/></returns>
            public static Android.Net.Uri GetUriForSubscriptionIdAndField(int arg0, Java.Lang.String arg1)
            {
                return SExecuteWithSignature<Android.Net.Uri>(LocalBridgeClazz, "getUriForSubscriptionIdAndField", "(ILjava/lang/String;)Landroid/net/Uri;", arg0, arg1);
            }
        
            #endregion
        
            #region Instance methods
        
            #endregion
        
            #region Nested classes
        
            #endregion
        
            // TODO: complete the class
        }
        #endregion

        #region Sms implementation
        public partial class Sms : Android.Provider.IBaseColumns
        {
            #region Constructors
        
            #endregion
        
            #region Class/Interface conversion operators
            /// <summary>
            /// Converter from <see cref="Android.Provider.Telephony.Sms"/> to <see cref="Android.Provider.BaseColumns"/>
            /// </summary>
            public static implicit operator Android.Provider.BaseColumns(Android.Provider.Telephony.Sms t) => t.Cast<Android.Provider.BaseColumns>();
        
            #endregion
        
            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.Sms.html#CONTENT_URI"/>
            /// </summary>
            public static Android.Net.Uri CONTENT_URI { get { if (!_CONTENT_URIReady) { _CONTENT_URIContent = SGetField<Android.Net.Uri>(LocalBridgeClazz, "CONTENT_URI"); _CONTENT_URIReady = true; } return _CONTENT_URIContent; } }
            private static Android.Net.Uri _CONTENT_URIContent = default;
            private static bool _CONTENT_URIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.Sms.html#DEFAULT_SORT_ORDER"/>
            /// </summary>
            public static Java.Lang.String DEFAULT_SORT_ORDER { get { if (!_DEFAULT_SORT_ORDERReady) { _DEFAULT_SORT_ORDERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "DEFAULT_SORT_ORDER"); _DEFAULT_SORT_ORDERReady = true; } return _DEFAULT_SORT_ORDERContent; } }
            private static Java.Lang.String _DEFAULT_SORT_ORDERContent = default;
            private static bool _DEFAULT_SORT_ORDERReady = false; // this is used because in case of generics 
        
            #endregion
        
            #region Static methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.Sms.html#getDefaultSmsPackage(android.content.Context)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Content.Context"/></param>
            /// <returns><see cref="Java.Lang.String"/></returns>
            public static Java.Lang.String GetDefaultSmsPackage(Android.Content.Context arg0)
            {
                return SExecuteWithSignature<Java.Lang.String>(LocalBridgeClazz, "getDefaultSmsPackage", "(Landroid/content/Context;)Ljava/lang/String;", arg0);
            }
        
            #endregion
        
            #region Instance methods
        
            #endregion
        
            #region Nested classes
            #region Sent implementation
            public partial class Sent : Android.Provider.IBaseColumns
            {
                #region Constructors
            
                #endregion
            
                #region Class/Interface conversion operators
                /// <summary>
                /// Converter from <see cref="Android.Provider.Telephony.Sms.Sent"/> to <see cref="Android.Provider.BaseColumns"/>
                /// </summary>
                public static implicit operator Android.Provider.BaseColumns(Android.Provider.Telephony.Sms.Sent t) => t.Cast<Android.Provider.BaseColumns>();
            
                #endregion
            
                #region Fields
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Sms.Sent.html#CONTENT_URI"/>
                /// </summary>
                public static Android.Net.Uri CONTENT_URI { get { if (!_CONTENT_URIReady) { _CONTENT_URIContent = SGetField<Android.Net.Uri>(LocalBridgeClazz, "CONTENT_URI"); _CONTENT_URIReady = true; } return _CONTENT_URIContent; } }
                private static Android.Net.Uri _CONTENT_URIContent = default;
                private static bool _CONTENT_URIReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Sms.Sent.html#DEFAULT_SORT_ORDER"/>
                /// </summary>
                public static Java.Lang.String DEFAULT_SORT_ORDER { get { if (!_DEFAULT_SORT_ORDERReady) { _DEFAULT_SORT_ORDERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "DEFAULT_SORT_ORDER"); _DEFAULT_SORT_ORDERReady = true; } return _DEFAULT_SORT_ORDERContent; } }
                private static Java.Lang.String _DEFAULT_SORT_ORDERContent = default;
                private static bool _DEFAULT_SORT_ORDERReady = false; // this is used because in case of generics 
            
                #endregion
            
                #region Static methods
            
                #endregion
            
                #region Instance methods
            
                #endregion
            
                #region Nested classes
            
                #endregion
            
                // TODO: complete the class
            }
            #endregion

            #region Outbox implementation
            public partial class Outbox : Android.Provider.IBaseColumns
            {
                #region Constructors
            
                #endregion
            
                #region Class/Interface conversion operators
                /// <summary>
                /// Converter from <see cref="Android.Provider.Telephony.Sms.Outbox"/> to <see cref="Android.Provider.BaseColumns"/>
                /// </summary>
                public static implicit operator Android.Provider.BaseColumns(Android.Provider.Telephony.Sms.Outbox t) => t.Cast<Android.Provider.BaseColumns>();
            
                #endregion
            
                #region Fields
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Sms.Outbox.html#CONTENT_URI"/>
                /// </summary>
                public static Android.Net.Uri CONTENT_URI { get { if (!_CONTENT_URIReady) { _CONTENT_URIContent = SGetField<Android.Net.Uri>(LocalBridgeClazz, "CONTENT_URI"); _CONTENT_URIReady = true; } return _CONTENT_URIContent; } }
                private static Android.Net.Uri _CONTENT_URIContent = default;
                private static bool _CONTENT_URIReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Sms.Outbox.html#DEFAULT_SORT_ORDER"/>
                /// </summary>
                public static Java.Lang.String DEFAULT_SORT_ORDER { get { if (!_DEFAULT_SORT_ORDERReady) { _DEFAULT_SORT_ORDERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "DEFAULT_SORT_ORDER"); _DEFAULT_SORT_ORDERReady = true; } return _DEFAULT_SORT_ORDERContent; } }
                private static Java.Lang.String _DEFAULT_SORT_ORDERContent = default;
                private static bool _DEFAULT_SORT_ORDERReady = false; // this is used because in case of generics 
            
                #endregion
            
                #region Static methods
            
                #endregion
            
                #region Instance methods
            
                #endregion
            
                #region Nested classes
            
                #endregion
            
                // TODO: complete the class
            }
            #endregion

            #region Intents implementation
            public partial class Intents
            {
                #region Constructors
            
                #endregion
            
                #region Class/Interface conversion operators
            
                #endregion
            
                #region Fields
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Sms.Intents.html#RESULT_SMS_DATABASE_ERROR"/>
                /// </summary>
                public static int RESULT_SMS_DATABASE_ERROR { get { if (!_RESULT_SMS_DATABASE_ERRORReady) { _RESULT_SMS_DATABASE_ERRORContent = SGetField<int>(LocalBridgeClazz, "RESULT_SMS_DATABASE_ERROR"); _RESULT_SMS_DATABASE_ERRORReady = true; } return _RESULT_SMS_DATABASE_ERRORContent; } }
                private static int _RESULT_SMS_DATABASE_ERRORContent = default;
                private static bool _RESULT_SMS_DATABASE_ERRORReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Sms.Intents.html#RESULT_SMS_DISPATCH_FAILURE"/>
                /// </summary>
                public static int RESULT_SMS_DISPATCH_FAILURE { get { if (!_RESULT_SMS_DISPATCH_FAILUREReady) { _RESULT_SMS_DISPATCH_FAILUREContent = SGetField<int>(LocalBridgeClazz, "RESULT_SMS_DISPATCH_FAILURE"); _RESULT_SMS_DISPATCH_FAILUREReady = true; } return _RESULT_SMS_DISPATCH_FAILUREContent; } }
                private static int _RESULT_SMS_DISPATCH_FAILUREContent = default;
                private static bool _RESULT_SMS_DISPATCH_FAILUREReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Sms.Intents.html#RESULT_SMS_DUPLICATED"/>
                /// </summary>
                public static int RESULT_SMS_DUPLICATED { get { if (!_RESULT_SMS_DUPLICATEDReady) { _RESULT_SMS_DUPLICATEDContent = SGetField<int>(LocalBridgeClazz, "RESULT_SMS_DUPLICATED"); _RESULT_SMS_DUPLICATEDReady = true; } return _RESULT_SMS_DUPLICATEDContent; } }
                private static int _RESULT_SMS_DUPLICATEDContent = default;
                private static bool _RESULT_SMS_DUPLICATEDReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Sms.Intents.html#RESULT_SMS_GENERIC_ERROR"/>
                /// </summary>
                public static int RESULT_SMS_GENERIC_ERROR { get { if (!_RESULT_SMS_GENERIC_ERRORReady) { _RESULT_SMS_GENERIC_ERRORContent = SGetField<int>(LocalBridgeClazz, "RESULT_SMS_GENERIC_ERROR"); _RESULT_SMS_GENERIC_ERRORReady = true; } return _RESULT_SMS_GENERIC_ERRORContent; } }
                private static int _RESULT_SMS_GENERIC_ERRORContent = default;
                private static bool _RESULT_SMS_GENERIC_ERRORReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Sms.Intents.html#RESULT_SMS_HANDLED"/>
                /// </summary>
                public static int RESULT_SMS_HANDLED { get { if (!_RESULT_SMS_HANDLEDReady) { _RESULT_SMS_HANDLEDContent = SGetField<int>(LocalBridgeClazz, "RESULT_SMS_HANDLED"); _RESULT_SMS_HANDLEDReady = true; } return _RESULT_SMS_HANDLEDContent; } }
                private static int _RESULT_SMS_HANDLEDContent = default;
                private static bool _RESULT_SMS_HANDLEDReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Sms.Intents.html#RESULT_SMS_INVALID_URI"/>
                /// </summary>
                public static int RESULT_SMS_INVALID_URI { get { if (!_RESULT_SMS_INVALID_URIReady) { _RESULT_SMS_INVALID_URIContent = SGetField<int>(LocalBridgeClazz, "RESULT_SMS_INVALID_URI"); _RESULT_SMS_INVALID_URIReady = true; } return _RESULT_SMS_INVALID_URIContent; } }
                private static int _RESULT_SMS_INVALID_URIContent = default;
                private static bool _RESULT_SMS_INVALID_URIReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Sms.Intents.html#RESULT_SMS_NULL_MESSAGE"/>
                /// </summary>
                public static int RESULT_SMS_NULL_MESSAGE { get { if (!_RESULT_SMS_NULL_MESSAGEReady) { _RESULT_SMS_NULL_MESSAGEContent = SGetField<int>(LocalBridgeClazz, "RESULT_SMS_NULL_MESSAGE"); _RESULT_SMS_NULL_MESSAGEReady = true; } return _RESULT_SMS_NULL_MESSAGEContent; } }
                private static int _RESULT_SMS_NULL_MESSAGEContent = default;
                private static bool _RESULT_SMS_NULL_MESSAGEReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Sms.Intents.html#RESULT_SMS_NULL_PDU"/>
                /// </summary>
                public static int RESULT_SMS_NULL_PDU { get { if (!_RESULT_SMS_NULL_PDUReady) { _RESULT_SMS_NULL_PDUContent = SGetField<int>(LocalBridgeClazz, "RESULT_SMS_NULL_PDU"); _RESULT_SMS_NULL_PDUReady = true; } return _RESULT_SMS_NULL_PDUContent; } }
                private static int _RESULT_SMS_NULL_PDUContent = default;
                private static bool _RESULT_SMS_NULL_PDUReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Sms.Intents.html#RESULT_SMS_OUT_OF_MEMORY"/>
                /// </summary>
                public static int RESULT_SMS_OUT_OF_MEMORY { get { if (!_RESULT_SMS_OUT_OF_MEMORYReady) { _RESULT_SMS_OUT_OF_MEMORYContent = SGetField<int>(LocalBridgeClazz, "RESULT_SMS_OUT_OF_MEMORY"); _RESULT_SMS_OUT_OF_MEMORYReady = true; } return _RESULT_SMS_OUT_OF_MEMORYContent; } }
                private static int _RESULT_SMS_OUT_OF_MEMORYContent = default;
                private static bool _RESULT_SMS_OUT_OF_MEMORYReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Sms.Intents.html#RESULT_SMS_RECEIVED_WHILE_ENCRYPTED"/>
                /// </summary>
                public static int RESULT_SMS_RECEIVED_WHILE_ENCRYPTED { get { if (!_RESULT_SMS_RECEIVED_WHILE_ENCRYPTEDReady) { _RESULT_SMS_RECEIVED_WHILE_ENCRYPTEDContent = SGetField<int>(LocalBridgeClazz, "RESULT_SMS_RECEIVED_WHILE_ENCRYPTED"); _RESULT_SMS_RECEIVED_WHILE_ENCRYPTEDReady = true; } return _RESULT_SMS_RECEIVED_WHILE_ENCRYPTEDContent; } }
                private static int _RESULT_SMS_RECEIVED_WHILE_ENCRYPTEDContent = default;
                private static bool _RESULT_SMS_RECEIVED_WHILE_ENCRYPTEDReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Sms.Intents.html#RESULT_SMS_UNSUPPORTED"/>
                /// </summary>
                public static int RESULT_SMS_UNSUPPORTED { get { if (!_RESULT_SMS_UNSUPPORTEDReady) { _RESULT_SMS_UNSUPPORTEDContent = SGetField<int>(LocalBridgeClazz, "RESULT_SMS_UNSUPPORTED"); _RESULT_SMS_UNSUPPORTEDReady = true; } return _RESULT_SMS_UNSUPPORTEDContent; } }
                private static int _RESULT_SMS_UNSUPPORTEDContent = default;
                private static bool _RESULT_SMS_UNSUPPORTEDReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Sms.Intents.html#ACTION_CHANGE_DEFAULT"/>
                /// </summary>
                public static Java.Lang.String ACTION_CHANGE_DEFAULT { get { if (!_ACTION_CHANGE_DEFAULTReady) { _ACTION_CHANGE_DEFAULTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_CHANGE_DEFAULT"); _ACTION_CHANGE_DEFAULTReady = true; } return _ACTION_CHANGE_DEFAULTContent; } }
                private static Java.Lang.String _ACTION_CHANGE_DEFAULTContent = default;
                private static bool _ACTION_CHANGE_DEFAULTReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Sms.Intents.html#ACTION_DEFAULT_SMS_PACKAGE_CHANGED"/>
                /// </summary>
                public static Java.Lang.String ACTION_DEFAULT_SMS_PACKAGE_CHANGED { get { if (!_ACTION_DEFAULT_SMS_PACKAGE_CHANGEDReady) { _ACTION_DEFAULT_SMS_PACKAGE_CHANGEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_DEFAULT_SMS_PACKAGE_CHANGED"); _ACTION_DEFAULT_SMS_PACKAGE_CHANGEDReady = true; } return _ACTION_DEFAULT_SMS_PACKAGE_CHANGEDContent; } }
                private static Java.Lang.String _ACTION_DEFAULT_SMS_PACKAGE_CHANGEDContent = default;
                private static bool _ACTION_DEFAULT_SMS_PACKAGE_CHANGEDReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Sms.Intents.html#ACTION_EXTERNAL_PROVIDER_CHANGE"/>
                /// </summary>
                public static Java.Lang.String ACTION_EXTERNAL_PROVIDER_CHANGE { get { if (!_ACTION_EXTERNAL_PROVIDER_CHANGEReady) { _ACTION_EXTERNAL_PROVIDER_CHANGEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_EXTERNAL_PROVIDER_CHANGE"); _ACTION_EXTERNAL_PROVIDER_CHANGEReady = true; } return _ACTION_EXTERNAL_PROVIDER_CHANGEContent; } }
                private static Java.Lang.String _ACTION_EXTERNAL_PROVIDER_CHANGEContent = default;
                private static bool _ACTION_EXTERNAL_PROVIDER_CHANGEReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Sms.Intents.html#DATA_SMS_RECEIVED_ACTION"/>
                /// </summary>
                public static Java.Lang.String DATA_SMS_RECEIVED_ACTION { get { if (!_DATA_SMS_RECEIVED_ACTIONReady) { _DATA_SMS_RECEIVED_ACTIONContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "DATA_SMS_RECEIVED_ACTION"); _DATA_SMS_RECEIVED_ACTIONReady = true; } return _DATA_SMS_RECEIVED_ACTIONContent; } }
                private static Java.Lang.String _DATA_SMS_RECEIVED_ACTIONContent = default;
                private static bool _DATA_SMS_RECEIVED_ACTIONReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Sms.Intents.html#EXTRA_IS_DEFAULT_SMS_APP"/>
                /// </summary>
                public static Java.Lang.String EXTRA_IS_DEFAULT_SMS_APP { get { if (!_EXTRA_IS_DEFAULT_SMS_APPReady) { _EXTRA_IS_DEFAULT_SMS_APPContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_IS_DEFAULT_SMS_APP"); _EXTRA_IS_DEFAULT_SMS_APPReady = true; } return _EXTRA_IS_DEFAULT_SMS_APPContent; } }
                private static Java.Lang.String _EXTRA_IS_DEFAULT_SMS_APPContent = default;
                private static bool _EXTRA_IS_DEFAULT_SMS_APPReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Sms.Intents.html#EXTRA_PACKAGE_NAME"/>
                /// </summary>
                public static Java.Lang.String EXTRA_PACKAGE_NAME { get { if (!_EXTRA_PACKAGE_NAMEReady) { _EXTRA_PACKAGE_NAMEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_PACKAGE_NAME"); _EXTRA_PACKAGE_NAMEReady = true; } return _EXTRA_PACKAGE_NAMEContent; } }
                private static Java.Lang.String _EXTRA_PACKAGE_NAMEContent = default;
                private static bool _EXTRA_PACKAGE_NAMEReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Sms.Intents.html#SECRET_CODE_ACTION"/>
                /// </summary>
                [global::System.Obsolete()]
                public static Java.Lang.String SECRET_CODE_ACTION { get { if (!_SECRET_CODE_ACTIONReady) { _SECRET_CODE_ACTIONContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SECRET_CODE_ACTION"); _SECRET_CODE_ACTIONReady = true; } return _SECRET_CODE_ACTIONContent; } }
                private static Java.Lang.String _SECRET_CODE_ACTIONContent = default;
                private static bool _SECRET_CODE_ACTIONReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Sms.Intents.html#SIM_FULL_ACTION"/>
                /// </summary>
                public static Java.Lang.String SIM_FULL_ACTION { get { if (!_SIM_FULL_ACTIONReady) { _SIM_FULL_ACTIONContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SIM_FULL_ACTION"); _SIM_FULL_ACTIONReady = true; } return _SIM_FULL_ACTIONContent; } }
                private static Java.Lang.String _SIM_FULL_ACTIONContent = default;
                private static bool _SIM_FULL_ACTIONReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Sms.Intents.html#SMS_CB_RECEIVED_ACTION"/>
                /// </summary>
                public static Java.Lang.String SMS_CB_RECEIVED_ACTION { get { if (!_SMS_CB_RECEIVED_ACTIONReady) { _SMS_CB_RECEIVED_ACTIONContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SMS_CB_RECEIVED_ACTION"); _SMS_CB_RECEIVED_ACTIONReady = true; } return _SMS_CB_RECEIVED_ACTIONContent; } }
                private static Java.Lang.String _SMS_CB_RECEIVED_ACTIONContent = default;
                private static bool _SMS_CB_RECEIVED_ACTIONReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Sms.Intents.html#SMS_DELIVER_ACTION"/>
                /// </summary>
                public static Java.Lang.String SMS_DELIVER_ACTION { get { if (!_SMS_DELIVER_ACTIONReady) { _SMS_DELIVER_ACTIONContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SMS_DELIVER_ACTION"); _SMS_DELIVER_ACTIONReady = true; } return _SMS_DELIVER_ACTIONContent; } }
                private static Java.Lang.String _SMS_DELIVER_ACTIONContent = default;
                private static bool _SMS_DELIVER_ACTIONReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Sms.Intents.html#SMS_RECEIVED_ACTION"/>
                /// </summary>
                public static Java.Lang.String SMS_RECEIVED_ACTION { get { if (!_SMS_RECEIVED_ACTIONReady) { _SMS_RECEIVED_ACTIONContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SMS_RECEIVED_ACTION"); _SMS_RECEIVED_ACTIONReady = true; } return _SMS_RECEIVED_ACTIONContent; } }
                private static Java.Lang.String _SMS_RECEIVED_ACTIONContent = default;
                private static bool _SMS_RECEIVED_ACTIONReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Sms.Intents.html#SMS_REJECTED_ACTION"/>
                /// </summary>
                public static Java.Lang.String SMS_REJECTED_ACTION { get { if (!_SMS_REJECTED_ACTIONReady) { _SMS_REJECTED_ACTIONContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SMS_REJECTED_ACTION"); _SMS_REJECTED_ACTIONReady = true; } return _SMS_REJECTED_ACTIONContent; } }
                private static Java.Lang.String _SMS_REJECTED_ACTIONContent = default;
                private static bool _SMS_REJECTED_ACTIONReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Sms.Intents.html#SMS_SERVICE_CATEGORY_PROGRAM_DATA_RECEIVED_ACTION"/>
                /// </summary>
                public static Java.Lang.String SMS_SERVICE_CATEGORY_PROGRAM_DATA_RECEIVED_ACTION { get { if (!_SMS_SERVICE_CATEGORY_PROGRAM_DATA_RECEIVED_ACTIONReady) { _SMS_SERVICE_CATEGORY_PROGRAM_DATA_RECEIVED_ACTIONContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SMS_SERVICE_CATEGORY_PROGRAM_DATA_RECEIVED_ACTION"); _SMS_SERVICE_CATEGORY_PROGRAM_DATA_RECEIVED_ACTIONReady = true; } return _SMS_SERVICE_CATEGORY_PROGRAM_DATA_RECEIVED_ACTIONContent; } }
                private static Java.Lang.String _SMS_SERVICE_CATEGORY_PROGRAM_DATA_RECEIVED_ACTIONContent = default;
                private static bool _SMS_SERVICE_CATEGORY_PROGRAM_DATA_RECEIVED_ACTIONReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Sms.Intents.html#WAP_PUSH_DELIVER_ACTION"/>
                /// </summary>
                public static Java.Lang.String WAP_PUSH_DELIVER_ACTION { get { if (!_WAP_PUSH_DELIVER_ACTIONReady) { _WAP_PUSH_DELIVER_ACTIONContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "WAP_PUSH_DELIVER_ACTION"); _WAP_PUSH_DELIVER_ACTIONReady = true; } return _WAP_PUSH_DELIVER_ACTIONContent; } }
                private static Java.Lang.String _WAP_PUSH_DELIVER_ACTIONContent = default;
                private static bool _WAP_PUSH_DELIVER_ACTIONReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Sms.Intents.html#WAP_PUSH_RECEIVED_ACTION"/>
                /// </summary>
                public static Java.Lang.String WAP_PUSH_RECEIVED_ACTION { get { if (!_WAP_PUSH_RECEIVED_ACTIONReady) { _WAP_PUSH_RECEIVED_ACTIONContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "WAP_PUSH_RECEIVED_ACTION"); _WAP_PUSH_RECEIVED_ACTIONReady = true; } return _WAP_PUSH_RECEIVED_ACTIONContent; } }
                private static Java.Lang.String _WAP_PUSH_RECEIVED_ACTIONContent = default;
                private static bool _WAP_PUSH_RECEIVED_ACTIONReady = false; // this is used because in case of generics 
            
                #endregion
            
                #region Static methods
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Sms.Intents.html#getMessagesFromIntent(android.content.Intent)"/>
                /// </summary>
                /// <param name="arg0"><see cref="Android.Content.Intent"/></param>
                /// <returns><see cref="Android.Telephony.SmsMessage"/></returns>
                public static Android.Telephony.SmsMessage[] GetMessagesFromIntent(Android.Content.Intent arg0)
                {
                    return SExecuteArray<Android.Telephony.SmsMessage>(LocalBridgeClazz, "getMessagesFromIntent", arg0);
                }
            
                #endregion
            
                #region Instance methods
            
                #endregion
            
                #region Nested classes
            
                #endregion
            
                // TODO: complete the class
            }
            #endregion

            #region Inbox implementation
            public partial class Inbox : Android.Provider.IBaseColumns
            {
                #region Constructors
            
                #endregion
            
                #region Class/Interface conversion operators
                /// <summary>
                /// Converter from <see cref="Android.Provider.Telephony.Sms.Inbox"/> to <see cref="Android.Provider.BaseColumns"/>
                /// </summary>
                public static implicit operator Android.Provider.BaseColumns(Android.Provider.Telephony.Sms.Inbox t) => t.Cast<Android.Provider.BaseColumns>();
            
                #endregion
            
                #region Fields
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Sms.Inbox.html#CONTENT_URI"/>
                /// </summary>
                public static Android.Net.Uri CONTENT_URI { get { if (!_CONTENT_URIReady) { _CONTENT_URIContent = SGetField<Android.Net.Uri>(LocalBridgeClazz, "CONTENT_URI"); _CONTENT_URIReady = true; } return _CONTENT_URIContent; } }
                private static Android.Net.Uri _CONTENT_URIContent = default;
                private static bool _CONTENT_URIReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Sms.Inbox.html#DEFAULT_SORT_ORDER"/>
                /// </summary>
                public static Java.Lang.String DEFAULT_SORT_ORDER { get { if (!_DEFAULT_SORT_ORDERReady) { _DEFAULT_SORT_ORDERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "DEFAULT_SORT_ORDER"); _DEFAULT_SORT_ORDERReady = true; } return _DEFAULT_SORT_ORDERContent; } }
                private static Java.Lang.String _DEFAULT_SORT_ORDERContent = default;
                private static bool _DEFAULT_SORT_ORDERReady = false; // this is used because in case of generics 
            
                #endregion
            
                #region Static methods
            
                #endregion
            
                #region Instance methods
            
                #endregion
            
                #region Nested classes
            
                #endregion
            
                // TODO: complete the class
            }
            #endregion

            #region Draft implementation
            public partial class Draft : Android.Provider.IBaseColumns
            {
                #region Constructors
            
                #endregion
            
                #region Class/Interface conversion operators
                /// <summary>
                /// Converter from <see cref="Android.Provider.Telephony.Sms.Draft"/> to <see cref="Android.Provider.BaseColumns"/>
                /// </summary>
                public static implicit operator Android.Provider.BaseColumns(Android.Provider.Telephony.Sms.Draft t) => t.Cast<Android.Provider.BaseColumns>();
            
                #endregion
            
                #region Fields
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Sms.Draft.html#CONTENT_URI"/>
                /// </summary>
                public static Android.Net.Uri CONTENT_URI { get { if (!_CONTENT_URIReady) { _CONTENT_URIContent = SGetField<Android.Net.Uri>(LocalBridgeClazz, "CONTENT_URI"); _CONTENT_URIReady = true; } return _CONTENT_URIContent; } }
                private static Android.Net.Uri _CONTENT_URIContent = default;
                private static bool _CONTENT_URIReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Sms.Draft.html#DEFAULT_SORT_ORDER"/>
                /// </summary>
                public static Java.Lang.String DEFAULT_SORT_ORDER { get { if (!_DEFAULT_SORT_ORDERReady) { _DEFAULT_SORT_ORDERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "DEFAULT_SORT_ORDER"); _DEFAULT_SORT_ORDERReady = true; } return _DEFAULT_SORT_ORDERContent; } }
                private static Java.Lang.String _DEFAULT_SORT_ORDERContent = default;
                private static bool _DEFAULT_SORT_ORDERReady = false; // this is used because in case of generics 
            
                #endregion
            
                #region Static methods
            
                #endregion
            
                #region Instance methods
            
                #endregion
            
                #region Nested classes
            
                #endregion
            
                // TODO: complete the class
            }
            #endregion

            #region Conversations implementation
            public partial class Conversations : Android.Provider.IBaseColumns
            {
                #region Constructors
            
                #endregion
            
                #region Class/Interface conversion operators
                /// <summary>
                /// Converter from <see cref="Android.Provider.Telephony.Sms.Conversations"/> to <see cref="Android.Provider.BaseColumns"/>
                /// </summary>
                public static implicit operator Android.Provider.BaseColumns(Android.Provider.Telephony.Sms.Conversations t) => t.Cast<Android.Provider.BaseColumns>();
            
                #endregion
            
                #region Fields
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Sms.Conversations.html#CONTENT_URI"/>
                /// </summary>
                public static Android.Net.Uri CONTENT_URI { get { if (!_CONTENT_URIReady) { _CONTENT_URIContent = SGetField<Android.Net.Uri>(LocalBridgeClazz, "CONTENT_URI"); _CONTENT_URIReady = true; } return _CONTENT_URIContent; } }
                private static Android.Net.Uri _CONTENT_URIContent = default;
                private static bool _CONTENT_URIReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Sms.Conversations.html#DEFAULT_SORT_ORDER"/>
                /// </summary>
                public static Java.Lang.String DEFAULT_SORT_ORDER { get { if (!_DEFAULT_SORT_ORDERReady) { _DEFAULT_SORT_ORDERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "DEFAULT_SORT_ORDER"); _DEFAULT_SORT_ORDERReady = true; } return _DEFAULT_SORT_ORDERContent; } }
                private static Java.Lang.String _DEFAULT_SORT_ORDERContent = default;
                private static bool _DEFAULT_SORT_ORDERReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Sms.Conversations.html#MESSAGE_COUNT"/>
                /// </summary>
                public static Java.Lang.String MESSAGE_COUNT { get { if (!_MESSAGE_COUNTReady) { _MESSAGE_COUNTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "MESSAGE_COUNT"); _MESSAGE_COUNTReady = true; } return _MESSAGE_COUNTContent; } }
                private static Java.Lang.String _MESSAGE_COUNTContent = default;
                private static bool _MESSAGE_COUNTReady = false; // this is used because in case of generics 
                /// <summary>
                /// <see href="https://developer.android.com/reference/android/provider/Telephony.Sms.Conversations.html#SNIPPET"/>
                /// </summary>
                public static Java.Lang.String SNIPPET { get { if (!_SNIPPETReady) { _SNIPPETContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SNIPPET"); _SNIPPETReady = true; } return _SNIPPETContent; } }
                private static Java.Lang.String _SNIPPETContent = default;
                private static bool _SNIPPETReady = false; // this is used because in case of generics 
            
                #endregion
            
                #region Static methods
            
                #endregion
            
                #region Instance methods
            
                #endregion
            
                #region Nested classes
            
                #endregion
            
                // TODO: complete the class
            }
            #endregion

        
            #endregion
        
            // TODO: complete the class
        }
        #endregion

        #region TextBasedSmsColumns implementation
        public partial class TextBasedSmsColumns
        {
            #region Constructors
        
            #endregion
        
            #region Class/Interface conversion operators
        
            #endregion
        
            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.TextBasedSmsColumns.html#MESSAGE_TYPE_ALL"/>
            /// </summary>
            public static int MESSAGE_TYPE_ALL { get { if (!_MESSAGE_TYPE_ALLReady) { _MESSAGE_TYPE_ALLContent = SGetField<int>(LocalBridgeClazz, "MESSAGE_TYPE_ALL"); _MESSAGE_TYPE_ALLReady = true; } return _MESSAGE_TYPE_ALLContent; } }
            private static int _MESSAGE_TYPE_ALLContent = default;
            private static bool _MESSAGE_TYPE_ALLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.TextBasedSmsColumns.html#MESSAGE_TYPE_DRAFT"/>
            /// </summary>
            public static int MESSAGE_TYPE_DRAFT { get { if (!_MESSAGE_TYPE_DRAFTReady) { _MESSAGE_TYPE_DRAFTContent = SGetField<int>(LocalBridgeClazz, "MESSAGE_TYPE_DRAFT"); _MESSAGE_TYPE_DRAFTReady = true; } return _MESSAGE_TYPE_DRAFTContent; } }
            private static int _MESSAGE_TYPE_DRAFTContent = default;
            private static bool _MESSAGE_TYPE_DRAFTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.TextBasedSmsColumns.html#MESSAGE_TYPE_FAILED"/>
            /// </summary>
            public static int MESSAGE_TYPE_FAILED { get { if (!_MESSAGE_TYPE_FAILEDReady) { _MESSAGE_TYPE_FAILEDContent = SGetField<int>(LocalBridgeClazz, "MESSAGE_TYPE_FAILED"); _MESSAGE_TYPE_FAILEDReady = true; } return _MESSAGE_TYPE_FAILEDContent; } }
            private static int _MESSAGE_TYPE_FAILEDContent = default;
            private static bool _MESSAGE_TYPE_FAILEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.TextBasedSmsColumns.html#MESSAGE_TYPE_INBOX"/>
            /// </summary>
            public static int MESSAGE_TYPE_INBOX { get { if (!_MESSAGE_TYPE_INBOXReady) { _MESSAGE_TYPE_INBOXContent = SGetField<int>(LocalBridgeClazz, "MESSAGE_TYPE_INBOX"); _MESSAGE_TYPE_INBOXReady = true; } return _MESSAGE_TYPE_INBOXContent; } }
            private static int _MESSAGE_TYPE_INBOXContent = default;
            private static bool _MESSAGE_TYPE_INBOXReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.TextBasedSmsColumns.html#MESSAGE_TYPE_OUTBOX"/>
            /// </summary>
            public static int MESSAGE_TYPE_OUTBOX { get { if (!_MESSAGE_TYPE_OUTBOXReady) { _MESSAGE_TYPE_OUTBOXContent = SGetField<int>(LocalBridgeClazz, "MESSAGE_TYPE_OUTBOX"); _MESSAGE_TYPE_OUTBOXReady = true; } return _MESSAGE_TYPE_OUTBOXContent; } }
            private static int _MESSAGE_TYPE_OUTBOXContent = default;
            private static bool _MESSAGE_TYPE_OUTBOXReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.TextBasedSmsColumns.html#MESSAGE_TYPE_QUEUED"/>
            /// </summary>
            public static int MESSAGE_TYPE_QUEUED { get { if (!_MESSAGE_TYPE_QUEUEDReady) { _MESSAGE_TYPE_QUEUEDContent = SGetField<int>(LocalBridgeClazz, "MESSAGE_TYPE_QUEUED"); _MESSAGE_TYPE_QUEUEDReady = true; } return _MESSAGE_TYPE_QUEUEDContent; } }
            private static int _MESSAGE_TYPE_QUEUEDContent = default;
            private static bool _MESSAGE_TYPE_QUEUEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.TextBasedSmsColumns.html#MESSAGE_TYPE_SENT"/>
            /// </summary>
            public static int MESSAGE_TYPE_SENT { get { if (!_MESSAGE_TYPE_SENTReady) { _MESSAGE_TYPE_SENTContent = SGetField<int>(LocalBridgeClazz, "MESSAGE_TYPE_SENT"); _MESSAGE_TYPE_SENTReady = true; } return _MESSAGE_TYPE_SENTContent; } }
            private static int _MESSAGE_TYPE_SENTContent = default;
            private static bool _MESSAGE_TYPE_SENTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.TextBasedSmsColumns.html#STATUS_COMPLETE"/>
            /// </summary>
            public static int STATUS_COMPLETE { get { if (!_STATUS_COMPLETEReady) { _STATUS_COMPLETEContent = SGetField<int>(LocalBridgeClazz, "STATUS_COMPLETE"); _STATUS_COMPLETEReady = true; } return _STATUS_COMPLETEContent; } }
            private static int _STATUS_COMPLETEContent = default;
            private static bool _STATUS_COMPLETEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.TextBasedSmsColumns.html#STATUS_FAILED"/>
            /// </summary>
            public static int STATUS_FAILED { get { if (!_STATUS_FAILEDReady) { _STATUS_FAILEDContent = SGetField<int>(LocalBridgeClazz, "STATUS_FAILED"); _STATUS_FAILEDReady = true; } return _STATUS_FAILEDContent; } }
            private static int _STATUS_FAILEDContent = default;
            private static bool _STATUS_FAILEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.TextBasedSmsColumns.html#STATUS_NONE"/>
            /// </summary>
            public static int STATUS_NONE { get { if (!_STATUS_NONEReady) { _STATUS_NONEContent = SGetField<int>(LocalBridgeClazz, "STATUS_NONE"); _STATUS_NONEReady = true; } return _STATUS_NONEContent; } }
            private static int _STATUS_NONEContent = default;
            private static bool _STATUS_NONEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.TextBasedSmsColumns.html#STATUS_PENDING"/>
            /// </summary>
            public static int STATUS_PENDING { get { if (!_STATUS_PENDINGReady) { _STATUS_PENDINGContent = SGetField<int>(LocalBridgeClazz, "STATUS_PENDING"); _STATUS_PENDINGReady = true; } return _STATUS_PENDINGContent; } }
            private static int _STATUS_PENDINGContent = default;
            private static bool _STATUS_PENDINGReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.TextBasedSmsColumns.html#ADDRESS"/>
            /// </summary>
            public static Java.Lang.String ADDRESS { get { if (!_ADDRESSReady) { _ADDRESSContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ADDRESS"); _ADDRESSReady = true; } return _ADDRESSContent; } }
            private static Java.Lang.String _ADDRESSContent = default;
            private static bool _ADDRESSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.TextBasedSmsColumns.html#BODY"/>
            /// </summary>
            public static Java.Lang.String BODY { get { if (!_BODYReady) { _BODYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "BODY"); _BODYReady = true; } return _BODYContent; } }
            private static Java.Lang.String _BODYContent = default;
            private static bool _BODYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.TextBasedSmsColumns.html#CREATOR"/>
            /// </summary>
            public static Java.Lang.String CREATOR { get { if (!_CREATORReady) { _CREATORContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CREATOR"); _CREATORReady = true; } return _CREATORContent; } }
            private static Java.Lang.String _CREATORContent = default;
            private static bool _CREATORReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.TextBasedSmsColumns.html#DATE"/>
            /// </summary>
            public static Java.Lang.String DATE { get { if (!_DATEReady) { _DATEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "DATE"); _DATEReady = true; } return _DATEContent; } }
            private static Java.Lang.String _DATEContent = default;
            private static bool _DATEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.TextBasedSmsColumns.html#DATE_SENT"/>
            /// </summary>
            public static Java.Lang.String DATE_SENT { get { if (!_DATE_SENTReady) { _DATE_SENTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "DATE_SENT"); _DATE_SENTReady = true; } return _DATE_SENTContent; } }
            private static Java.Lang.String _DATE_SENTContent = default;
            private static bool _DATE_SENTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.TextBasedSmsColumns.html#ERROR_CODE"/>
            /// </summary>
            public static Java.Lang.String ERROR_CODE { get { if (!_ERROR_CODEReady) { _ERROR_CODEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ERROR_CODE"); _ERROR_CODEReady = true; } return _ERROR_CODEContent; } }
            private static Java.Lang.String _ERROR_CODEContent = default;
            private static bool _ERROR_CODEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.TextBasedSmsColumns.html#LOCKED"/>
            /// </summary>
            public static Java.Lang.String LOCKED { get { if (!_LOCKEDReady) { _LOCKEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "LOCKED"); _LOCKEDReady = true; } return _LOCKEDContent; } }
            private static Java.Lang.String _LOCKEDContent = default;
            private static bool _LOCKEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.TextBasedSmsColumns.html#PERSON"/>
            /// </summary>
            public static Java.Lang.String PERSON { get { if (!_PERSONReady) { _PERSONContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "PERSON"); _PERSONReady = true; } return _PERSONContent; } }
            private static Java.Lang.String _PERSONContent = default;
            private static bool _PERSONReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.TextBasedSmsColumns.html#PROTOCOL"/>
            /// </summary>
            public static Java.Lang.String PROTOCOL { get { if (!_PROTOCOLReady) { _PROTOCOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "PROTOCOL"); _PROTOCOLReady = true; } return _PROTOCOLContent; } }
            private static Java.Lang.String _PROTOCOLContent = default;
            private static bool _PROTOCOLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.TextBasedSmsColumns.html#READ"/>
            /// </summary>
            public static Java.Lang.String READ { get { if (!_READReady) { _READContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "READ"); _READReady = true; } return _READContent; } }
            private static Java.Lang.String _READContent = default;
            private static bool _READReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.TextBasedSmsColumns.html#REPLY_PATH_PRESENT"/>
            /// </summary>
            public static Java.Lang.String REPLY_PATH_PRESENT { get { if (!_REPLY_PATH_PRESENTReady) { _REPLY_PATH_PRESENTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "REPLY_PATH_PRESENT"); _REPLY_PATH_PRESENTReady = true; } return _REPLY_PATH_PRESENTContent; } }
            private static Java.Lang.String _REPLY_PATH_PRESENTContent = default;
            private static bool _REPLY_PATH_PRESENTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.TextBasedSmsColumns.html#SEEN"/>
            /// </summary>
            public static Java.Lang.String SEEN { get { if (!_SEENReady) { _SEENContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SEEN"); _SEENReady = true; } return _SEENContent; } }
            private static Java.Lang.String _SEENContent = default;
            private static bool _SEENReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.TextBasedSmsColumns.html#SERVICE_CENTER"/>
            /// </summary>
            public static Java.Lang.String SERVICE_CENTER { get { if (!_SERVICE_CENTERReady) { _SERVICE_CENTERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SERVICE_CENTER"); _SERVICE_CENTERReady = true; } return _SERVICE_CENTERContent; } }
            private static Java.Lang.String _SERVICE_CENTERContent = default;
            private static bool _SERVICE_CENTERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.TextBasedSmsColumns.html#STATUS"/>
            /// </summary>
            public static Java.Lang.String STATUS { get { if (!_STATUSReady) { _STATUSContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "STATUS"); _STATUSReady = true; } return _STATUSContent; } }
            private static Java.Lang.String _STATUSContent = default;
            private static bool _STATUSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.TextBasedSmsColumns.html#SUBJECT"/>
            /// </summary>
            public static Java.Lang.String SUBJECT { get { if (!_SUBJECTReady) { _SUBJECTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SUBJECT"); _SUBJECTReady = true; } return _SUBJECTContent; } }
            private static Java.Lang.String _SUBJECTContent = default;
            private static bool _SUBJECTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.TextBasedSmsColumns.html#SUBSCRIPTION_ID"/>
            /// </summary>
            public static Java.Lang.String SUBSCRIPTION_ID { get { if (!_SUBSCRIPTION_IDReady) { _SUBSCRIPTION_IDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SUBSCRIPTION_ID"); _SUBSCRIPTION_IDReady = true; } return _SUBSCRIPTION_IDContent; } }
            private static Java.Lang.String _SUBSCRIPTION_IDContent = default;
            private static bool _SUBSCRIPTION_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.TextBasedSmsColumns.html#THREAD_ID"/>
            /// </summary>
            public static Java.Lang.String THREAD_ID { get { if (!_THREAD_IDReady) { _THREAD_IDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "THREAD_ID"); _THREAD_IDReady = true; } return _THREAD_IDContent; } }
            private static Java.Lang.String _THREAD_IDContent = default;
            private static bool _THREAD_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.TextBasedSmsColumns.html#TYPE"/>
            /// </summary>
            public static Java.Lang.String TYPE { get { if (!_TYPEReady) { _TYPEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "TYPE"); _TYPEReady = true; } return _TYPEContent; } }
            private static Java.Lang.String _TYPEContent = default;
            private static bool _TYPEReady = false; // this is used because in case of generics 
        
            #endregion
        
            #region Static methods
        
            #endregion
        
            #region Instance methods
        
            #endregion
        
            #region Nested classes
        
            #endregion
        
            // TODO: complete the class
        }
        #endregion

        #region Threads implementation
        public partial class Threads
        {
            #region Constructors
        
            #endregion
        
            #region Class/Interface conversion operators
        
            #endregion
        
            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.Threads.html#CONTENT_URI"/>
            /// </summary>
            public static Android.Net.Uri CONTENT_URI { get { if (!_CONTENT_URIReady) { _CONTENT_URIContent = SGetField<Android.Net.Uri>(LocalBridgeClazz, "CONTENT_URI"); _CONTENT_URIReady = true; } return _CONTENT_URIContent; } }
            private static Android.Net.Uri _CONTENT_URIContent = default;
            private static bool _CONTENT_URIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.Threads.html#OBSOLETE_THREADS_URI"/>
            /// </summary>
            public static Android.Net.Uri OBSOLETE_THREADS_URI { get { if (!_OBSOLETE_THREADS_URIReady) { _OBSOLETE_THREADS_URIContent = SGetField<Android.Net.Uri>(LocalBridgeClazz, "OBSOLETE_THREADS_URI"); _OBSOLETE_THREADS_URIReady = true; } return _OBSOLETE_THREADS_URIContent; } }
            private static Android.Net.Uri _OBSOLETE_THREADS_URIContent = default;
            private static bool _OBSOLETE_THREADS_URIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.Threads.html#BROADCAST_THREAD"/>
            /// </summary>
            public static int BROADCAST_THREAD { get { if (!_BROADCAST_THREADReady) { _BROADCAST_THREADContent = SGetField<int>(LocalBridgeClazz, "BROADCAST_THREAD"); _BROADCAST_THREADReady = true; } return _BROADCAST_THREADContent; } }
            private static int _BROADCAST_THREADContent = default;
            private static bool _BROADCAST_THREADReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.Threads.html#COMMON_THREAD"/>
            /// </summary>
            public static int COMMON_THREAD { get { if (!_COMMON_THREADReady) { _COMMON_THREADContent = SGetField<int>(LocalBridgeClazz, "COMMON_THREAD"); _COMMON_THREADReady = true; } return _COMMON_THREADContent; } }
            private static int _COMMON_THREADContent = default;
            private static bool _COMMON_THREADReady = false; // this is used because in case of generics 
        
            #endregion
        
            #region Static methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.Threads.html#getOrCreateThreadId(android.content.Context,java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Content.Context"/></param>
            /// <param name="arg1"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="long"/></returns>
            public static long GetOrCreateThreadId(Android.Content.Context arg0, Java.Lang.String arg1)
            {
                return SExecuteWithSignature<long>(LocalBridgeClazz, "getOrCreateThreadId", "(Landroid/content/Context;Ljava/lang/String;)J", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.Threads.html#getOrCreateThreadId(android.content.Context,java.util.Set)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Content.Context"/></param>
            /// <param name="arg1"><see cref="Java.Util.Set"/></param>
            /// <returns><see cref="long"/></returns>
            public static long GetOrCreateThreadId(Android.Content.Context arg0, Java.Util.Set<Java.Lang.String> arg1)
            {
                return SExecuteWithSignature<long>(LocalBridgeClazz, "getOrCreateThreadId", "(Landroid/content/Context;Ljava/util/Set;)J", arg0, arg1);
            }
        
            #endregion
        
            #region Instance methods
        
            #endregion
        
            #region Nested classes
        
            #endregion
        
            // TODO: complete the class
        }
        #endregion

        #region ThreadsColumns implementation
        public partial class ThreadsColumns
        {
            #region Constructors
        
            #endregion
        
            #region Class/Interface conversion operators
        
            #endregion
        
            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.ThreadsColumns.html#ARCHIVED"/>
            /// </summary>
            public static Java.Lang.String ARCHIVED { get { if (!_ARCHIVEDReady) { _ARCHIVEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ARCHIVED"); _ARCHIVEDReady = true; } return _ARCHIVEDContent; } }
            private static Java.Lang.String _ARCHIVEDContent = default;
            private static bool _ARCHIVEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.ThreadsColumns.html#DATE"/>
            /// </summary>
            public static Java.Lang.String DATE { get { if (!_DATEReady) { _DATEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "DATE"); _DATEReady = true; } return _DATEContent; } }
            private static Java.Lang.String _DATEContent = default;
            private static bool _DATEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.ThreadsColumns.html#ERROR"/>
            /// </summary>
            public static Java.Lang.String ERROR { get { if (!_ERRORReady) { _ERRORContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ERROR"); _ERRORReady = true; } return _ERRORContent; } }
            private static Java.Lang.String _ERRORContent = default;
            private static bool _ERRORReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.ThreadsColumns.html#HAS_ATTACHMENT"/>
            /// </summary>
            public static Java.Lang.String HAS_ATTACHMENT { get { if (!_HAS_ATTACHMENTReady) { _HAS_ATTACHMENTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "HAS_ATTACHMENT"); _HAS_ATTACHMENTReady = true; } return _HAS_ATTACHMENTContent; } }
            private static Java.Lang.String _HAS_ATTACHMENTContent = default;
            private static bool _HAS_ATTACHMENTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.ThreadsColumns.html#MESSAGE_COUNT"/>
            /// </summary>
            public static Java.Lang.String MESSAGE_COUNT { get { if (!_MESSAGE_COUNTReady) { _MESSAGE_COUNTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "MESSAGE_COUNT"); _MESSAGE_COUNTReady = true; } return _MESSAGE_COUNTContent; } }
            private static Java.Lang.String _MESSAGE_COUNTContent = default;
            private static bool _MESSAGE_COUNTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.ThreadsColumns.html#READ"/>
            /// </summary>
            public static Java.Lang.String READ { get { if (!_READReady) { _READContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "READ"); _READReady = true; } return _READContent; } }
            private static Java.Lang.String _READContent = default;
            private static bool _READReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.ThreadsColumns.html#RECIPIENT_IDS"/>
            /// </summary>
            public static Java.Lang.String RECIPIENT_IDS { get { if (!_RECIPIENT_IDSReady) { _RECIPIENT_IDSContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "RECIPIENT_IDS"); _RECIPIENT_IDSReady = true; } return _RECIPIENT_IDSContent; } }
            private static Java.Lang.String _RECIPIENT_IDSContent = default;
            private static bool _RECIPIENT_IDSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.ThreadsColumns.html#SNIPPET"/>
            /// </summary>
            public static Java.Lang.String SNIPPET { get { if (!_SNIPPETReady) { _SNIPPETContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SNIPPET"); _SNIPPETReady = true; } return _SNIPPETContent; } }
            private static Java.Lang.String _SNIPPETContent = default;
            private static bool _SNIPPETReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.ThreadsColumns.html#SNIPPET_CHARSET"/>
            /// </summary>
            public static Java.Lang.String SNIPPET_CHARSET { get { if (!_SNIPPET_CHARSETReady) { _SNIPPET_CHARSETContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SNIPPET_CHARSET"); _SNIPPET_CHARSETReady = true; } return _SNIPPET_CHARSETContent; } }
            private static Java.Lang.String _SNIPPET_CHARSETContent = default;
            private static bool _SNIPPET_CHARSETReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/provider/Telephony.ThreadsColumns.html#TYPE"/>
            /// </summary>
            public static Java.Lang.String TYPE { get { if (!_TYPEReady) { _TYPEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "TYPE"); _TYPEReady = true; } return _TYPEContent; } }
            private static Java.Lang.String _TYPEContent = default;
            private static bool _TYPEReady = false; // this is used because in case of generics 
        
            #endregion
        
            #region Static methods
        
            #endregion
        
            #region Instance methods
        
            #endregion
        
            #region Nested classes
        
            #endregion
        
            // TODO: complete the class
        }
        #endregion

    
        #endregion
    
        // TODO: complete the class
    }
    #endregion
}