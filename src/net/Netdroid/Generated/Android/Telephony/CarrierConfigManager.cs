/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.2.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Telephony
{
    #region CarrierConfigManager
    public partial class CarrierConfigManager
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#CARRIER_NR_AVAILABILITY_NSA"/>
        /// </summary>
        public static int CARRIER_NR_AVAILABILITY_NSA { get { if (!_CARRIER_NR_AVAILABILITY_NSAReady) { _CARRIER_NR_AVAILABILITY_NSAContent = SGetField<int>(LocalBridgeClazz, "CARRIER_NR_AVAILABILITY_NSA"); _CARRIER_NR_AVAILABILITY_NSAReady = true; } return _CARRIER_NR_AVAILABILITY_NSAContent; } }
        private static int _CARRIER_NR_AVAILABILITY_NSAContent = default;
        private static bool _CARRIER_NR_AVAILABILITY_NSAReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#CARRIER_NR_AVAILABILITY_SA"/>
        /// </summary>
        public static int CARRIER_NR_AVAILABILITY_SA { get { if (!_CARRIER_NR_AVAILABILITY_SAReady) { _CARRIER_NR_AVAILABILITY_SAContent = SGetField<int>(LocalBridgeClazz, "CARRIER_NR_AVAILABILITY_SA"); _CARRIER_NR_AVAILABILITY_SAReady = true; } return _CARRIER_NR_AVAILABILITY_SAContent; } }
        private static int _CARRIER_NR_AVAILABILITY_SAContent = default;
        private static bool _CARRIER_NR_AVAILABILITY_SAReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#CROSS_SIM_SPN_FORMAT_CARRIER_NAME_ONLY"/>
        /// </summary>
        public static int CROSS_SIM_SPN_FORMAT_CARRIER_NAME_ONLY { get { if (!_CROSS_SIM_SPN_FORMAT_CARRIER_NAME_ONLYReady) { _CROSS_SIM_SPN_FORMAT_CARRIER_NAME_ONLYContent = SGetField<int>(LocalBridgeClazz, "CROSS_SIM_SPN_FORMAT_CARRIER_NAME_ONLY"); _CROSS_SIM_SPN_FORMAT_CARRIER_NAME_ONLYReady = true; } return _CROSS_SIM_SPN_FORMAT_CARRIER_NAME_ONLYContent; } }
        private static int _CROSS_SIM_SPN_FORMAT_CARRIER_NAME_ONLYContent = default;
        private static bool _CROSS_SIM_SPN_FORMAT_CARRIER_NAME_ONLYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#CROSS_SIM_SPN_FORMAT_CARRIER_NAME_WITH_BRANDING"/>
        /// </summary>
        public static int CROSS_SIM_SPN_FORMAT_CARRIER_NAME_WITH_BRANDING { get { if (!_CROSS_SIM_SPN_FORMAT_CARRIER_NAME_WITH_BRANDINGReady) { _CROSS_SIM_SPN_FORMAT_CARRIER_NAME_WITH_BRANDINGContent = SGetField<int>(LocalBridgeClazz, "CROSS_SIM_SPN_FORMAT_CARRIER_NAME_WITH_BRANDING"); _CROSS_SIM_SPN_FORMAT_CARRIER_NAME_WITH_BRANDINGReady = true; } return _CROSS_SIM_SPN_FORMAT_CARRIER_NAME_WITH_BRANDINGContent; } }
        private static int _CROSS_SIM_SPN_FORMAT_CARRIER_NAME_WITH_BRANDINGContent = default;
        private static bool _CROSS_SIM_SPN_FORMAT_CARRIER_NAME_WITH_BRANDINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#DATA_CYCLE_THRESHOLD_DISABLED"/>
        /// </summary>
        public static int DATA_CYCLE_THRESHOLD_DISABLED { get { if (!_DATA_CYCLE_THRESHOLD_DISABLEDReady) { _DATA_CYCLE_THRESHOLD_DISABLEDContent = SGetField<int>(LocalBridgeClazz, "DATA_CYCLE_THRESHOLD_DISABLED"); _DATA_CYCLE_THRESHOLD_DISABLEDReady = true; } return _DATA_CYCLE_THRESHOLD_DISABLEDContent; } }
        private static int _DATA_CYCLE_THRESHOLD_DISABLEDContent = default;
        private static bool _DATA_CYCLE_THRESHOLD_DISABLEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#DATA_CYCLE_USE_PLATFORM_DEFAULT"/>
        /// </summary>
        public static int DATA_CYCLE_USE_PLATFORM_DEFAULT { get { if (!_DATA_CYCLE_USE_PLATFORM_DEFAULTReady) { _DATA_CYCLE_USE_PLATFORM_DEFAULTContent = SGetField<int>(LocalBridgeClazz, "DATA_CYCLE_USE_PLATFORM_DEFAULT"); _DATA_CYCLE_USE_PLATFORM_DEFAULTReady = true; } return _DATA_CYCLE_USE_PLATFORM_DEFAULTContent; } }
        private static int _DATA_CYCLE_USE_PLATFORM_DEFAULTContent = default;
        private static bool _DATA_CYCLE_USE_PLATFORM_DEFAULTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#SERVICE_CLASS_NONE"/>
        /// </summary>
        public static int SERVICE_CLASS_NONE { get { if (!_SERVICE_CLASS_NONEReady) { _SERVICE_CLASS_NONEContent = SGetField<int>(LocalBridgeClazz, "SERVICE_CLASS_NONE"); _SERVICE_CLASS_NONEReady = true; } return _SERVICE_CLASS_NONEContent; } }
        private static int _SERVICE_CLASS_NONEContent = default;
        private static bool _SERVICE_CLASS_NONEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#SERVICE_CLASS_VOICE"/>
        /// </summary>
        public static int SERVICE_CLASS_VOICE { get { if (!_SERVICE_CLASS_VOICEReady) { _SERVICE_CLASS_VOICEContent = SGetField<int>(LocalBridgeClazz, "SERVICE_CLASS_VOICE"); _SERVICE_CLASS_VOICEReady = true; } return _SERVICE_CLASS_VOICEContent; } }
        private static int _SERVICE_CLASS_VOICEContent = default;
        private static bool _SERVICE_CLASS_VOICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#USSD_OVER_CS_ONLY"/>
        /// </summary>
        public static int USSD_OVER_CS_ONLY { get { if (!_USSD_OVER_CS_ONLYReady) { _USSD_OVER_CS_ONLYContent = SGetField<int>(LocalBridgeClazz, "USSD_OVER_CS_ONLY"); _USSD_OVER_CS_ONLYReady = true; } return _USSD_OVER_CS_ONLYContent; } }
        private static int _USSD_OVER_CS_ONLYContent = default;
        private static bool _USSD_OVER_CS_ONLYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#USSD_OVER_CS_PREFERRED"/>
        /// </summary>
        public static int USSD_OVER_CS_PREFERRED { get { if (!_USSD_OVER_CS_PREFERREDReady) { _USSD_OVER_CS_PREFERREDContent = SGetField<int>(LocalBridgeClazz, "USSD_OVER_CS_PREFERRED"); _USSD_OVER_CS_PREFERREDReady = true; } return _USSD_OVER_CS_PREFERREDContent; } }
        private static int _USSD_OVER_CS_PREFERREDContent = default;
        private static bool _USSD_OVER_CS_PREFERREDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#USSD_OVER_IMS_ONLY"/>
        /// </summary>
        public static int USSD_OVER_IMS_ONLY { get { if (!_USSD_OVER_IMS_ONLYReady) { _USSD_OVER_IMS_ONLYContent = SGetField<int>(LocalBridgeClazz, "USSD_OVER_IMS_ONLY"); _USSD_OVER_IMS_ONLYReady = true; } return _USSD_OVER_IMS_ONLYContent; } }
        private static int _USSD_OVER_IMS_ONLYContent = default;
        private static bool _USSD_OVER_IMS_ONLYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#USSD_OVER_IMS_PREFERRED"/>
        /// </summary>
        public static int USSD_OVER_IMS_PREFERRED { get { if (!_USSD_OVER_IMS_PREFERREDReady) { _USSD_OVER_IMS_PREFERREDContent = SGetField<int>(LocalBridgeClazz, "USSD_OVER_IMS_PREFERRED"); _USSD_OVER_IMS_PREFERREDReady = true; } return _USSD_OVER_IMS_PREFERREDContent; } }
        private static int _USSD_OVER_IMS_PREFERREDContent = default;
        private static bool _USSD_OVER_IMS_PREFERREDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#ACTION_CARRIER_CONFIG_CHANGED"/>
        /// </summary>
        public static Java.Lang.String ACTION_CARRIER_CONFIG_CHANGED { get { if (!_ACTION_CARRIER_CONFIG_CHANGEDReady) { _ACTION_CARRIER_CONFIG_CHANGEDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACTION_CARRIER_CONFIG_CHANGED"); _ACTION_CARRIER_CONFIG_CHANGEDReady = true; } return _ACTION_CARRIER_CONFIG_CHANGEDContent; } }
        private static Java.Lang.String _ACTION_CARRIER_CONFIG_CHANGEDContent = default;
        private static bool _ACTION_CARRIER_CONFIG_CHANGEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#ENABLE_EAP_METHOD_PREFIX_BOOL"/>
        /// </summary>
        public static Java.Lang.String ENABLE_EAP_METHOD_PREFIX_BOOL { get { if (!_ENABLE_EAP_METHOD_PREFIX_BOOLReady) { _ENABLE_EAP_METHOD_PREFIX_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ENABLE_EAP_METHOD_PREFIX_BOOL"); _ENABLE_EAP_METHOD_PREFIX_BOOLReady = true; } return _ENABLE_EAP_METHOD_PREFIX_BOOLContent; } }
        private static Java.Lang.String _ENABLE_EAP_METHOD_PREFIX_BOOLContent = default;
        private static bool _ENABLE_EAP_METHOD_PREFIX_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#EXTRA_REBROADCAST_ON_UNLOCK"/>
        /// </summary>
        public static Java.Lang.String EXTRA_REBROADCAST_ON_UNLOCK { get { if (!_EXTRA_REBROADCAST_ON_UNLOCKReady) { _EXTRA_REBROADCAST_ON_UNLOCKContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_REBROADCAST_ON_UNLOCK"); _EXTRA_REBROADCAST_ON_UNLOCKReady = true; } return _EXTRA_REBROADCAST_ON_UNLOCKContent; } }
        private static Java.Lang.String _EXTRA_REBROADCAST_ON_UNLOCKContent = default;
        private static bool _EXTRA_REBROADCAST_ON_UNLOCKReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#EXTRA_SLOT_INDEX"/>
        /// </summary>
        public static Java.Lang.String EXTRA_SLOT_INDEX { get { if (!_EXTRA_SLOT_INDEXReady) { _EXTRA_SLOT_INDEXContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_SLOT_INDEX"); _EXTRA_SLOT_INDEXReady = true; } return _EXTRA_SLOT_INDEXContent; } }
        private static Java.Lang.String _EXTRA_SLOT_INDEXContent = default;
        private static bool _EXTRA_SLOT_INDEXReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#EXTRA_SUBSCRIPTION_INDEX"/>
        /// </summary>
        public static Java.Lang.String EXTRA_SUBSCRIPTION_INDEX { get { if (!_EXTRA_SUBSCRIPTION_INDEXReady) { _EXTRA_SUBSCRIPTION_INDEXContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_SUBSCRIPTION_INDEX"); _EXTRA_SUBSCRIPTION_INDEXReady = true; } return _EXTRA_SUBSCRIPTION_INDEXContent; } }
        private static Java.Lang.String _EXTRA_SUBSCRIPTION_INDEXContent = default;
        private static bool _EXTRA_SUBSCRIPTION_INDEXReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#IMSI_KEY_AVAILABILITY_INT"/>
        /// </summary>
        public static Java.Lang.String IMSI_KEY_AVAILABILITY_INT { get { if (!_IMSI_KEY_AVAILABILITY_INTReady) { _IMSI_KEY_AVAILABILITY_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "IMSI_KEY_AVAILABILITY_INT"); _IMSI_KEY_AVAILABILITY_INTReady = true; } return _IMSI_KEY_AVAILABILITY_INTContent; } }
        private static Java.Lang.String _IMSI_KEY_AVAILABILITY_INTContent = default;
        private static bool _IMSI_KEY_AVAILABILITY_INTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_5G_NR_SSRSRP_THRESHOLDS_INT_ARRAY"/>
        /// </summary>
        public static Java.Lang.String KEY_5G_NR_SSRSRP_THRESHOLDS_INT_ARRAY { get { if (!_KEY_5G_NR_SSRSRP_THRESHOLDS_INT_ARRAYReady) { _KEY_5G_NR_SSRSRP_THRESHOLDS_INT_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_5G_NR_SSRSRP_THRESHOLDS_INT_ARRAY"); _KEY_5G_NR_SSRSRP_THRESHOLDS_INT_ARRAYReady = true; } return _KEY_5G_NR_SSRSRP_THRESHOLDS_INT_ARRAYContent; } }
        private static Java.Lang.String _KEY_5G_NR_SSRSRP_THRESHOLDS_INT_ARRAYContent = default;
        private static bool _KEY_5G_NR_SSRSRP_THRESHOLDS_INT_ARRAYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_5G_NR_SSRSRQ_THRESHOLDS_INT_ARRAY"/>
        /// </summary>
        public static Java.Lang.String KEY_5G_NR_SSRSRQ_THRESHOLDS_INT_ARRAY { get { if (!_KEY_5G_NR_SSRSRQ_THRESHOLDS_INT_ARRAYReady) { _KEY_5G_NR_SSRSRQ_THRESHOLDS_INT_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_5G_NR_SSRSRQ_THRESHOLDS_INT_ARRAY"); _KEY_5G_NR_SSRSRQ_THRESHOLDS_INT_ARRAYReady = true; } return _KEY_5G_NR_SSRSRQ_THRESHOLDS_INT_ARRAYContent; } }
        private static Java.Lang.String _KEY_5G_NR_SSRSRQ_THRESHOLDS_INT_ARRAYContent = default;
        private static bool _KEY_5G_NR_SSRSRQ_THRESHOLDS_INT_ARRAYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_5G_NR_SSSINR_THRESHOLDS_INT_ARRAY"/>
        /// </summary>
        public static Java.Lang.String KEY_5G_NR_SSSINR_THRESHOLDS_INT_ARRAY { get { if (!_KEY_5G_NR_SSSINR_THRESHOLDS_INT_ARRAYReady) { _KEY_5G_NR_SSSINR_THRESHOLDS_INT_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_5G_NR_SSSINR_THRESHOLDS_INT_ARRAY"); _KEY_5G_NR_SSSINR_THRESHOLDS_INT_ARRAYReady = true; } return _KEY_5G_NR_SSSINR_THRESHOLDS_INT_ARRAYContent; } }
        private static Java.Lang.String _KEY_5G_NR_SSSINR_THRESHOLDS_INT_ARRAYContent = default;
        private static bool _KEY_5G_NR_SSSINR_THRESHOLDS_INT_ARRAYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_ADDITIONAL_CALL_SETTING_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_ADDITIONAL_CALL_SETTING_BOOL { get { if (!_KEY_ADDITIONAL_CALL_SETTING_BOOLReady) { _KEY_ADDITIONAL_CALL_SETTING_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_ADDITIONAL_CALL_SETTING_BOOL"); _KEY_ADDITIONAL_CALL_SETTING_BOOLReady = true; } return _KEY_ADDITIONAL_CALL_SETTING_BOOLContent; } }
        private static Java.Lang.String _KEY_ADDITIONAL_CALL_SETTING_BOOLContent = default;
        private static bool _KEY_ADDITIONAL_CALL_SETTING_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_ADDITIONAL_SETTINGS_CALL_WAITING_VISIBILITY_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_ADDITIONAL_SETTINGS_CALL_WAITING_VISIBILITY_BOOL { get { if (!_KEY_ADDITIONAL_SETTINGS_CALL_WAITING_VISIBILITY_BOOLReady) { _KEY_ADDITIONAL_SETTINGS_CALL_WAITING_VISIBILITY_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_ADDITIONAL_SETTINGS_CALL_WAITING_VISIBILITY_BOOL"); _KEY_ADDITIONAL_SETTINGS_CALL_WAITING_VISIBILITY_BOOLReady = true; } return _KEY_ADDITIONAL_SETTINGS_CALL_WAITING_VISIBILITY_BOOLContent; } }
        private static Java.Lang.String _KEY_ADDITIONAL_SETTINGS_CALL_WAITING_VISIBILITY_BOOLContent = default;
        private static bool _KEY_ADDITIONAL_SETTINGS_CALL_WAITING_VISIBILITY_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_ADDITIONAL_SETTINGS_CALLER_ID_VISIBILITY_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_ADDITIONAL_SETTINGS_CALLER_ID_VISIBILITY_BOOL { get { if (!_KEY_ADDITIONAL_SETTINGS_CALLER_ID_VISIBILITY_BOOLReady) { _KEY_ADDITIONAL_SETTINGS_CALLER_ID_VISIBILITY_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_ADDITIONAL_SETTINGS_CALLER_ID_VISIBILITY_BOOL"); _KEY_ADDITIONAL_SETTINGS_CALLER_ID_VISIBILITY_BOOLReady = true; } return _KEY_ADDITIONAL_SETTINGS_CALLER_ID_VISIBILITY_BOOLContent; } }
        private static Java.Lang.String _KEY_ADDITIONAL_SETTINGS_CALLER_ID_VISIBILITY_BOOLContent = default;
        private static bool _KEY_ADDITIONAL_SETTINGS_CALLER_ID_VISIBILITY_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_ALLOW_ADD_CALL_DURING_VIDEO_CALL_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_ALLOW_ADD_CALL_DURING_VIDEO_CALL_BOOL { get { if (!_KEY_ALLOW_ADD_CALL_DURING_VIDEO_CALL_BOOLReady) { _KEY_ALLOW_ADD_CALL_DURING_VIDEO_CALL_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_ALLOW_ADD_CALL_DURING_VIDEO_CALL_BOOL"); _KEY_ALLOW_ADD_CALL_DURING_VIDEO_CALL_BOOLReady = true; } return _KEY_ALLOW_ADD_CALL_DURING_VIDEO_CALL_BOOLContent; } }
        private static Java.Lang.String _KEY_ALLOW_ADD_CALL_DURING_VIDEO_CALL_BOOLContent = default;
        private static bool _KEY_ALLOW_ADD_CALL_DURING_VIDEO_CALL_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_ALLOW_ADDING_APNS_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_ALLOW_ADDING_APNS_BOOL { get { if (!_KEY_ALLOW_ADDING_APNS_BOOLReady) { _KEY_ALLOW_ADDING_APNS_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_ALLOW_ADDING_APNS_BOOL"); _KEY_ALLOW_ADDING_APNS_BOOLReady = true; } return _KEY_ALLOW_ADDING_APNS_BOOLContent; } }
        private static Java.Lang.String _KEY_ALLOW_ADDING_APNS_BOOLContent = default;
        private static bool _KEY_ALLOW_ADDING_APNS_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_ALLOW_EMERGENCY_NUMBERS_IN_CALL_LOG_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_ALLOW_EMERGENCY_NUMBERS_IN_CALL_LOG_BOOL { get { if (!_KEY_ALLOW_EMERGENCY_NUMBERS_IN_CALL_LOG_BOOLReady) { _KEY_ALLOW_EMERGENCY_NUMBERS_IN_CALL_LOG_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_ALLOW_EMERGENCY_NUMBERS_IN_CALL_LOG_BOOL"); _KEY_ALLOW_EMERGENCY_NUMBERS_IN_CALL_LOG_BOOLReady = true; } return _KEY_ALLOW_EMERGENCY_NUMBERS_IN_CALL_LOG_BOOLContent; } }
        private static Java.Lang.String _KEY_ALLOW_EMERGENCY_NUMBERS_IN_CALL_LOG_BOOLContent = default;
        private static bool _KEY_ALLOW_EMERGENCY_NUMBERS_IN_CALL_LOG_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_ALLOW_EMERGENCY_VIDEO_CALLS_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_ALLOW_EMERGENCY_VIDEO_CALLS_BOOL { get { if (!_KEY_ALLOW_EMERGENCY_VIDEO_CALLS_BOOLReady) { _KEY_ALLOW_EMERGENCY_VIDEO_CALLS_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_ALLOW_EMERGENCY_VIDEO_CALLS_BOOL"); _KEY_ALLOW_EMERGENCY_VIDEO_CALLS_BOOLReady = true; } return _KEY_ALLOW_EMERGENCY_VIDEO_CALLS_BOOLContent; } }
        private static Java.Lang.String _KEY_ALLOW_EMERGENCY_VIDEO_CALLS_BOOLContent = default;
        private static bool _KEY_ALLOW_EMERGENCY_VIDEO_CALLS_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_ALLOW_HOLD_CALL_DURING_EMERGENCY_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_ALLOW_HOLD_CALL_DURING_EMERGENCY_BOOL { get { if (!_KEY_ALLOW_HOLD_CALL_DURING_EMERGENCY_BOOLReady) { _KEY_ALLOW_HOLD_CALL_DURING_EMERGENCY_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_ALLOW_HOLD_CALL_DURING_EMERGENCY_BOOL"); _KEY_ALLOW_HOLD_CALL_DURING_EMERGENCY_BOOLReady = true; } return _KEY_ALLOW_HOLD_CALL_DURING_EMERGENCY_BOOLContent; } }
        private static Java.Lang.String _KEY_ALLOW_HOLD_CALL_DURING_EMERGENCY_BOOLContent = default;
        private static bool _KEY_ALLOW_HOLD_CALL_DURING_EMERGENCY_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_ALLOW_HOLD_VIDEO_CALL_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_ALLOW_HOLD_VIDEO_CALL_BOOL { get { if (!_KEY_ALLOW_HOLD_VIDEO_CALL_BOOLReady) { _KEY_ALLOW_HOLD_VIDEO_CALL_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_ALLOW_HOLD_VIDEO_CALL_BOOL"); _KEY_ALLOW_HOLD_VIDEO_CALL_BOOLReady = true; } return _KEY_ALLOW_HOLD_VIDEO_CALL_BOOLContent; } }
        private static Java.Lang.String _KEY_ALLOW_HOLD_VIDEO_CALL_BOOLContent = default;
        private static bool _KEY_ALLOW_HOLD_VIDEO_CALL_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_ALLOW_LOCAL_DTMF_TONES_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_ALLOW_LOCAL_DTMF_TONES_BOOL { get { if (!_KEY_ALLOW_LOCAL_DTMF_TONES_BOOLReady) { _KEY_ALLOW_LOCAL_DTMF_TONES_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_ALLOW_LOCAL_DTMF_TONES_BOOL"); _KEY_ALLOW_LOCAL_DTMF_TONES_BOOLReady = true; } return _KEY_ALLOW_LOCAL_DTMF_TONES_BOOLContent; } }
        private static Java.Lang.String _KEY_ALLOW_LOCAL_DTMF_TONES_BOOLContent = default;
        private static bool _KEY_ALLOW_LOCAL_DTMF_TONES_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_ALLOW_MERGE_WIFI_CALLS_WHEN_VOWIFI_OFF_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_ALLOW_MERGE_WIFI_CALLS_WHEN_VOWIFI_OFF_BOOL { get { if (!_KEY_ALLOW_MERGE_WIFI_CALLS_WHEN_VOWIFI_OFF_BOOLReady) { _KEY_ALLOW_MERGE_WIFI_CALLS_WHEN_VOWIFI_OFF_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_ALLOW_MERGE_WIFI_CALLS_WHEN_VOWIFI_OFF_BOOL"); _KEY_ALLOW_MERGE_WIFI_CALLS_WHEN_VOWIFI_OFF_BOOLReady = true; } return _KEY_ALLOW_MERGE_WIFI_CALLS_WHEN_VOWIFI_OFF_BOOLContent; } }
        private static Java.Lang.String _KEY_ALLOW_MERGE_WIFI_CALLS_WHEN_VOWIFI_OFF_BOOLContent = default;
        private static bool _KEY_ALLOW_MERGE_WIFI_CALLS_WHEN_VOWIFI_OFF_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_ALLOW_NON_EMERGENCY_CALLS_IN_ECM_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_ALLOW_NON_EMERGENCY_CALLS_IN_ECM_BOOL { get { if (!_KEY_ALLOW_NON_EMERGENCY_CALLS_IN_ECM_BOOLReady) { _KEY_ALLOW_NON_EMERGENCY_CALLS_IN_ECM_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_ALLOW_NON_EMERGENCY_CALLS_IN_ECM_BOOL"); _KEY_ALLOW_NON_EMERGENCY_CALLS_IN_ECM_BOOLReady = true; } return _KEY_ALLOW_NON_EMERGENCY_CALLS_IN_ECM_BOOLContent; } }
        private static Java.Lang.String _KEY_ALLOW_NON_EMERGENCY_CALLS_IN_ECM_BOOLContent = default;
        private static bool _KEY_ALLOW_NON_EMERGENCY_CALLS_IN_ECM_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_ALLOW_VIDEO_CALLING_FALLBACK_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_ALLOW_VIDEO_CALLING_FALLBACK_BOOL { get { if (!_KEY_ALLOW_VIDEO_CALLING_FALLBACK_BOOLReady) { _KEY_ALLOW_VIDEO_CALLING_FALLBACK_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_ALLOW_VIDEO_CALLING_FALLBACK_BOOL"); _KEY_ALLOW_VIDEO_CALLING_FALLBACK_BOOLReady = true; } return _KEY_ALLOW_VIDEO_CALLING_FALLBACK_BOOLContent; } }
        private static Java.Lang.String _KEY_ALLOW_VIDEO_CALLING_FALLBACK_BOOLContent = default;
        private static bool _KEY_ALLOW_VIDEO_CALLING_FALLBACK_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_ALWAYS_SHOW_DATA_RAT_ICON_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_ALWAYS_SHOW_DATA_RAT_ICON_BOOL { get { if (!_KEY_ALWAYS_SHOW_DATA_RAT_ICON_BOOLReady) { _KEY_ALWAYS_SHOW_DATA_RAT_ICON_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_ALWAYS_SHOW_DATA_RAT_ICON_BOOL"); _KEY_ALWAYS_SHOW_DATA_RAT_ICON_BOOLReady = true; } return _KEY_ALWAYS_SHOW_DATA_RAT_ICON_BOOLContent; } }
        private static Java.Lang.String _KEY_ALWAYS_SHOW_DATA_RAT_ICON_BOOLContent = default;
        private static bool _KEY_ALWAYS_SHOW_DATA_RAT_ICON_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_ALWAYS_SHOW_EMERGENCY_ALERT_ONOFF_BOOL"/>
        /// </summary>
        [global::System.Obsolete()]
        public static Java.Lang.String KEY_ALWAYS_SHOW_EMERGENCY_ALERT_ONOFF_BOOL { get { if (!_KEY_ALWAYS_SHOW_EMERGENCY_ALERT_ONOFF_BOOLReady) { _KEY_ALWAYS_SHOW_EMERGENCY_ALERT_ONOFF_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_ALWAYS_SHOW_EMERGENCY_ALERT_ONOFF_BOOL"); _KEY_ALWAYS_SHOW_EMERGENCY_ALERT_ONOFF_BOOLReady = true; } return _KEY_ALWAYS_SHOW_EMERGENCY_ALERT_ONOFF_BOOLContent; } }
        private static Java.Lang.String _KEY_ALWAYS_SHOW_EMERGENCY_ALERT_ONOFF_BOOLContent = default;
        private static bool _KEY_ALWAYS_SHOW_EMERGENCY_ALERT_ONOFF_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_ALWAYS_SHOW_PRIMARY_SIGNAL_BAR_IN_OPPORTUNISTIC_NETWORK_BOOLEAN"/>
        /// </summary>
        public static Java.Lang.String KEY_ALWAYS_SHOW_PRIMARY_SIGNAL_BAR_IN_OPPORTUNISTIC_NETWORK_BOOLEAN { get { if (!_KEY_ALWAYS_SHOW_PRIMARY_SIGNAL_BAR_IN_OPPORTUNISTIC_NETWORK_BOOLEANReady) { _KEY_ALWAYS_SHOW_PRIMARY_SIGNAL_BAR_IN_OPPORTUNISTIC_NETWORK_BOOLEANContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_ALWAYS_SHOW_PRIMARY_SIGNAL_BAR_IN_OPPORTUNISTIC_NETWORK_BOOLEAN"); _KEY_ALWAYS_SHOW_PRIMARY_SIGNAL_BAR_IN_OPPORTUNISTIC_NETWORK_BOOLEANReady = true; } return _KEY_ALWAYS_SHOW_PRIMARY_SIGNAL_BAR_IN_OPPORTUNISTIC_NETWORK_BOOLEANContent; } }
        private static Java.Lang.String _KEY_ALWAYS_SHOW_PRIMARY_SIGNAL_BAR_IN_OPPORTUNISTIC_NETWORK_BOOLEANContent = default;
        private static bool _KEY_ALWAYS_SHOW_PRIMARY_SIGNAL_BAR_IN_OPPORTUNISTIC_NETWORK_BOOLEANReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_APN_EXPAND_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_APN_EXPAND_BOOL { get { if (!_KEY_APN_EXPAND_BOOLReady) { _KEY_APN_EXPAND_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_APN_EXPAND_BOOL"); _KEY_APN_EXPAND_BOOLReady = true; } return _KEY_APN_EXPAND_BOOLContent; } }
        private static Java.Lang.String _KEY_APN_EXPAND_BOOLContent = default;
        private static bool _KEY_APN_EXPAND_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_APN_SETTINGS_DEFAULT_APN_TYPES_STRING_ARRAY"/>
        /// </summary>
        public static Java.Lang.String KEY_APN_SETTINGS_DEFAULT_APN_TYPES_STRING_ARRAY { get { if (!_KEY_APN_SETTINGS_DEFAULT_APN_TYPES_STRING_ARRAYReady) { _KEY_APN_SETTINGS_DEFAULT_APN_TYPES_STRING_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_APN_SETTINGS_DEFAULT_APN_TYPES_STRING_ARRAY"); _KEY_APN_SETTINGS_DEFAULT_APN_TYPES_STRING_ARRAYReady = true; } return _KEY_APN_SETTINGS_DEFAULT_APN_TYPES_STRING_ARRAYContent; } }
        private static Java.Lang.String _KEY_APN_SETTINGS_DEFAULT_APN_TYPES_STRING_ARRAYContent = default;
        private static bool _KEY_APN_SETTINGS_DEFAULT_APN_TYPES_STRING_ARRAYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_AUTO_RETRY_ENABLED_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_AUTO_RETRY_ENABLED_BOOL { get { if (!_KEY_AUTO_RETRY_ENABLED_BOOLReady) { _KEY_AUTO_RETRY_ENABLED_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_AUTO_RETRY_ENABLED_BOOL"); _KEY_AUTO_RETRY_ENABLED_BOOLReady = true; } return _KEY_AUTO_RETRY_ENABLED_BOOLContent; } }
        private static Java.Lang.String _KEY_AUTO_RETRY_ENABLED_BOOLContent = default;
        private static bool _KEY_AUTO_RETRY_ENABLED_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CALL_BARRING_DEFAULT_SERVICE_CLASS_INT"/>
        /// </summary>
        public static Java.Lang.String KEY_CALL_BARRING_DEFAULT_SERVICE_CLASS_INT { get { if (!_KEY_CALL_BARRING_DEFAULT_SERVICE_CLASS_INTReady) { _KEY_CALL_BARRING_DEFAULT_SERVICE_CLASS_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CALL_BARRING_DEFAULT_SERVICE_CLASS_INT"); _KEY_CALL_BARRING_DEFAULT_SERVICE_CLASS_INTReady = true; } return _KEY_CALL_BARRING_DEFAULT_SERVICE_CLASS_INTContent; } }
        private static Java.Lang.String _KEY_CALL_BARRING_DEFAULT_SERVICE_CLASS_INTContent = default;
        private static bool _KEY_CALL_BARRING_DEFAULT_SERVICE_CLASS_INTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CALL_BARRING_SUPPORTS_DEACTIVATE_ALL_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_CALL_BARRING_SUPPORTS_DEACTIVATE_ALL_BOOL { get { if (!_KEY_CALL_BARRING_SUPPORTS_DEACTIVATE_ALL_BOOLReady) { _KEY_CALL_BARRING_SUPPORTS_DEACTIVATE_ALL_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CALL_BARRING_SUPPORTS_DEACTIVATE_ALL_BOOL"); _KEY_CALL_BARRING_SUPPORTS_DEACTIVATE_ALL_BOOLReady = true; } return _KEY_CALL_BARRING_SUPPORTS_DEACTIVATE_ALL_BOOLContent; } }
        private static Java.Lang.String _KEY_CALL_BARRING_SUPPORTS_DEACTIVATE_ALL_BOOLContent = default;
        private static bool _KEY_CALL_BARRING_SUPPORTS_DEACTIVATE_ALL_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CALL_BARRING_SUPPORTS_PASSWORD_CHANGE_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_CALL_BARRING_SUPPORTS_PASSWORD_CHANGE_BOOL { get { if (!_KEY_CALL_BARRING_SUPPORTS_PASSWORD_CHANGE_BOOLReady) { _KEY_CALL_BARRING_SUPPORTS_PASSWORD_CHANGE_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CALL_BARRING_SUPPORTS_PASSWORD_CHANGE_BOOL"); _KEY_CALL_BARRING_SUPPORTS_PASSWORD_CHANGE_BOOLReady = true; } return _KEY_CALL_BARRING_SUPPORTS_PASSWORD_CHANGE_BOOLContent; } }
        private static Java.Lang.String _KEY_CALL_BARRING_SUPPORTS_PASSWORD_CHANGE_BOOLContent = default;
        private static bool _KEY_CALL_BARRING_SUPPORTS_PASSWORD_CHANGE_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CALL_BARRING_VISIBILITY_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_CALL_BARRING_VISIBILITY_BOOL { get { if (!_KEY_CALL_BARRING_VISIBILITY_BOOLReady) { _KEY_CALL_BARRING_VISIBILITY_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CALL_BARRING_VISIBILITY_BOOL"); _KEY_CALL_BARRING_VISIBILITY_BOOLReady = true; } return _KEY_CALL_BARRING_VISIBILITY_BOOLContent; } }
        private static Java.Lang.String _KEY_CALL_BARRING_VISIBILITY_BOOLContent = default;
        private static bool _KEY_CALL_BARRING_VISIBILITY_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CALL_COMPOSER_PICTURE_SERVER_URL_STRING"/>
        /// </summary>
        public static Java.Lang.String KEY_CALL_COMPOSER_PICTURE_SERVER_URL_STRING { get { if (!_KEY_CALL_COMPOSER_PICTURE_SERVER_URL_STRINGReady) { _KEY_CALL_COMPOSER_PICTURE_SERVER_URL_STRINGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CALL_COMPOSER_PICTURE_SERVER_URL_STRING"); _KEY_CALL_COMPOSER_PICTURE_SERVER_URL_STRINGReady = true; } return _KEY_CALL_COMPOSER_PICTURE_SERVER_URL_STRINGContent; } }
        private static Java.Lang.String _KEY_CALL_COMPOSER_PICTURE_SERVER_URL_STRINGContent = default;
        private static bool _KEY_CALL_COMPOSER_PICTURE_SERVER_URL_STRINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CALL_FORWARDING_BLOCKS_WHILE_ROAMING_STRING_ARRAY"/>
        /// </summary>
        public static Java.Lang.String KEY_CALL_FORWARDING_BLOCKS_WHILE_ROAMING_STRING_ARRAY { get { if (!_KEY_CALL_FORWARDING_BLOCKS_WHILE_ROAMING_STRING_ARRAYReady) { _KEY_CALL_FORWARDING_BLOCKS_WHILE_ROAMING_STRING_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CALL_FORWARDING_BLOCKS_WHILE_ROAMING_STRING_ARRAY"); _KEY_CALL_FORWARDING_BLOCKS_WHILE_ROAMING_STRING_ARRAYReady = true; } return _KEY_CALL_FORWARDING_BLOCKS_WHILE_ROAMING_STRING_ARRAYContent; } }
        private static Java.Lang.String _KEY_CALL_FORWARDING_BLOCKS_WHILE_ROAMING_STRING_ARRAYContent = default;
        private static bool _KEY_CALL_FORWARDING_BLOCKS_WHILE_ROAMING_STRING_ARRAYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CALL_REDIRECTION_SERVICE_COMPONENT_NAME_STRING"/>
        /// </summary>
        public static Java.Lang.String KEY_CALL_REDIRECTION_SERVICE_COMPONENT_NAME_STRING { get { if (!_KEY_CALL_REDIRECTION_SERVICE_COMPONENT_NAME_STRINGReady) { _KEY_CALL_REDIRECTION_SERVICE_COMPONENT_NAME_STRINGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CALL_REDIRECTION_SERVICE_COMPONENT_NAME_STRING"); _KEY_CALL_REDIRECTION_SERVICE_COMPONENT_NAME_STRINGReady = true; } return _KEY_CALL_REDIRECTION_SERVICE_COMPONENT_NAME_STRINGContent; } }
        private static Java.Lang.String _KEY_CALL_REDIRECTION_SERVICE_COMPONENT_NAME_STRINGContent = default;
        private static bool _KEY_CALL_REDIRECTION_SERVICE_COMPONENT_NAME_STRINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CAPABILITIES_EXEMPT_FROM_SINGLE_DC_CHECK_INT_ARRAY"/>
        /// </summary>
        public static Java.Lang.String KEY_CAPABILITIES_EXEMPT_FROM_SINGLE_DC_CHECK_INT_ARRAY { get { if (!_KEY_CAPABILITIES_EXEMPT_FROM_SINGLE_DC_CHECK_INT_ARRAYReady) { _KEY_CAPABILITIES_EXEMPT_FROM_SINGLE_DC_CHECK_INT_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CAPABILITIES_EXEMPT_FROM_SINGLE_DC_CHECK_INT_ARRAY"); _KEY_CAPABILITIES_EXEMPT_FROM_SINGLE_DC_CHECK_INT_ARRAYReady = true; } return _KEY_CAPABILITIES_EXEMPT_FROM_SINGLE_DC_CHECK_INT_ARRAYContent; } }
        private static Java.Lang.String _KEY_CAPABILITIES_EXEMPT_FROM_SINGLE_DC_CHECK_INT_ARRAYContent = default;
        private static bool _KEY_CAPABILITIES_EXEMPT_FROM_SINGLE_DC_CHECK_INT_ARRAYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CARRIER_ALLOW_DEFLECT_IMS_CALL_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_CARRIER_ALLOW_DEFLECT_IMS_CALL_BOOL { get { if (!_KEY_CARRIER_ALLOW_DEFLECT_IMS_CALL_BOOLReady) { _KEY_CARRIER_ALLOW_DEFLECT_IMS_CALL_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CARRIER_ALLOW_DEFLECT_IMS_CALL_BOOL"); _KEY_CARRIER_ALLOW_DEFLECT_IMS_CALL_BOOLReady = true; } return _KEY_CARRIER_ALLOW_DEFLECT_IMS_CALL_BOOLContent; } }
        private static Java.Lang.String _KEY_CARRIER_ALLOW_DEFLECT_IMS_CALL_BOOLContent = default;
        private static bool _KEY_CARRIER_ALLOW_DEFLECT_IMS_CALL_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CARRIER_ALLOW_TURNOFF_IMS_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_CARRIER_ALLOW_TURNOFF_IMS_BOOL { get { if (!_KEY_CARRIER_ALLOW_TURNOFF_IMS_BOOLReady) { _KEY_CARRIER_ALLOW_TURNOFF_IMS_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CARRIER_ALLOW_TURNOFF_IMS_BOOL"); _KEY_CARRIER_ALLOW_TURNOFF_IMS_BOOLReady = true; } return _KEY_CARRIER_ALLOW_TURNOFF_IMS_BOOLContent; } }
        private static Java.Lang.String _KEY_CARRIER_ALLOW_TURNOFF_IMS_BOOLContent = default;
        private static bool _KEY_CARRIER_ALLOW_TURNOFF_IMS_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CARRIER_APP_REQUIRED_DURING_SIM_SETUP_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_CARRIER_APP_REQUIRED_DURING_SIM_SETUP_BOOL { get { if (!_KEY_CARRIER_APP_REQUIRED_DURING_SIM_SETUP_BOOLReady) { _KEY_CARRIER_APP_REQUIRED_DURING_SIM_SETUP_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CARRIER_APP_REQUIRED_DURING_SIM_SETUP_BOOL"); _KEY_CARRIER_APP_REQUIRED_DURING_SIM_SETUP_BOOLReady = true; } return _KEY_CARRIER_APP_REQUIRED_DURING_SIM_SETUP_BOOLContent; } }
        private static Java.Lang.String _KEY_CARRIER_APP_REQUIRED_DURING_SIM_SETUP_BOOLContent = default;
        private static bool _KEY_CARRIER_APP_REQUIRED_DURING_SIM_SETUP_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CARRIER_CALL_SCREENING_APP_STRING"/>
        /// </summary>
        public static Java.Lang.String KEY_CARRIER_CALL_SCREENING_APP_STRING { get { if (!_KEY_CARRIER_CALL_SCREENING_APP_STRINGReady) { _KEY_CARRIER_CALL_SCREENING_APP_STRINGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CARRIER_CALL_SCREENING_APP_STRING"); _KEY_CARRIER_CALL_SCREENING_APP_STRINGReady = true; } return _KEY_CARRIER_CALL_SCREENING_APP_STRINGContent; } }
        private static Java.Lang.String _KEY_CARRIER_CALL_SCREENING_APP_STRINGContent = default;
        private static bool _KEY_CARRIER_CALL_SCREENING_APP_STRINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CARRIER_CERTIFICATE_STRING_ARRAY"/>
        /// </summary>
        public static Java.Lang.String KEY_CARRIER_CERTIFICATE_STRING_ARRAY { get { if (!_KEY_CARRIER_CERTIFICATE_STRING_ARRAYReady) { _KEY_CARRIER_CERTIFICATE_STRING_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CARRIER_CERTIFICATE_STRING_ARRAY"); _KEY_CARRIER_CERTIFICATE_STRING_ARRAYReady = true; } return _KEY_CARRIER_CERTIFICATE_STRING_ARRAYContent; } }
        private static Java.Lang.String _KEY_CARRIER_CERTIFICATE_STRING_ARRAYContent = default;
        private static bool _KEY_CARRIER_CERTIFICATE_STRING_ARRAYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CARRIER_CONFIG_APPLIED_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_CARRIER_CONFIG_APPLIED_BOOL { get { if (!_KEY_CARRIER_CONFIG_APPLIED_BOOLReady) { _KEY_CARRIER_CONFIG_APPLIED_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CARRIER_CONFIG_APPLIED_BOOL"); _KEY_CARRIER_CONFIG_APPLIED_BOOLReady = true; } return _KEY_CARRIER_CONFIG_APPLIED_BOOLContent; } }
        private static Java.Lang.String _KEY_CARRIER_CONFIG_APPLIED_BOOLContent = default;
        private static bool _KEY_CARRIER_CONFIG_APPLIED_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CARRIER_CONFIG_VERSION_STRING"/>
        /// </summary>
        public static Java.Lang.String KEY_CARRIER_CONFIG_VERSION_STRING { get { if (!_KEY_CARRIER_CONFIG_VERSION_STRINGReady) { _KEY_CARRIER_CONFIG_VERSION_STRINGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CARRIER_CONFIG_VERSION_STRING"); _KEY_CARRIER_CONFIG_VERSION_STRINGReady = true; } return _KEY_CARRIER_CONFIG_VERSION_STRINGContent; } }
        private static Java.Lang.String _KEY_CARRIER_CONFIG_VERSION_STRINGContent = default;
        private static bool _KEY_CARRIER_CONFIG_VERSION_STRINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CARRIER_CROSS_SIM_IMS_AVAILABLE_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_CARRIER_CROSS_SIM_IMS_AVAILABLE_BOOL { get { if (!_KEY_CARRIER_CROSS_SIM_IMS_AVAILABLE_BOOLReady) { _KEY_CARRIER_CROSS_SIM_IMS_AVAILABLE_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CARRIER_CROSS_SIM_IMS_AVAILABLE_BOOL"); _KEY_CARRIER_CROSS_SIM_IMS_AVAILABLE_BOOLReady = true; } return _KEY_CARRIER_CROSS_SIM_IMS_AVAILABLE_BOOLContent; } }
        private static Java.Lang.String _KEY_CARRIER_CROSS_SIM_IMS_AVAILABLE_BOOLContent = default;
        private static bool _KEY_CARRIER_CROSS_SIM_IMS_AVAILABLE_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CARRIER_DATA_CALL_PERMANENT_FAILURE_STRINGS"/>
        /// </summary>
        [global::System.Obsolete()]
        public static Java.Lang.String KEY_CARRIER_DATA_CALL_PERMANENT_FAILURE_STRINGS { get { if (!_KEY_CARRIER_DATA_CALL_PERMANENT_FAILURE_STRINGSReady) { _KEY_CARRIER_DATA_CALL_PERMANENT_FAILURE_STRINGSContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CARRIER_DATA_CALL_PERMANENT_FAILURE_STRINGS"); _KEY_CARRIER_DATA_CALL_PERMANENT_FAILURE_STRINGSReady = true; } return _KEY_CARRIER_DATA_CALL_PERMANENT_FAILURE_STRINGSContent; } }
        private static Java.Lang.String _KEY_CARRIER_DATA_CALL_PERMANENT_FAILURE_STRINGSContent = default;
        private static bool _KEY_CARRIER_DATA_CALL_PERMANENT_FAILURE_STRINGSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CARRIER_DEFAULT_ACTIONS_ON_DCFAILURE_STRING_ARRAY"/>
        /// </summary>
        public static Java.Lang.String KEY_CARRIER_DEFAULT_ACTIONS_ON_DCFAILURE_STRING_ARRAY { get { if (!_KEY_CARRIER_DEFAULT_ACTIONS_ON_DCFAILURE_STRING_ARRAYReady) { _KEY_CARRIER_DEFAULT_ACTIONS_ON_DCFAILURE_STRING_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CARRIER_DEFAULT_ACTIONS_ON_DCFAILURE_STRING_ARRAY"); _KEY_CARRIER_DEFAULT_ACTIONS_ON_DCFAILURE_STRING_ARRAYReady = true; } return _KEY_CARRIER_DEFAULT_ACTIONS_ON_DCFAILURE_STRING_ARRAYContent; } }
        private static Java.Lang.String _KEY_CARRIER_DEFAULT_ACTIONS_ON_DCFAILURE_STRING_ARRAYContent = default;
        private static bool _KEY_CARRIER_DEFAULT_ACTIONS_ON_DCFAILURE_STRING_ARRAYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CARRIER_DEFAULT_ACTIONS_ON_DEFAULT_NETWORK_AVAILABLE"/>
        /// </summary>
        public static Java.Lang.String KEY_CARRIER_DEFAULT_ACTIONS_ON_DEFAULT_NETWORK_AVAILABLE { get { if (!_KEY_CARRIER_DEFAULT_ACTIONS_ON_DEFAULT_NETWORK_AVAILABLEReady) { _KEY_CARRIER_DEFAULT_ACTIONS_ON_DEFAULT_NETWORK_AVAILABLEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CARRIER_DEFAULT_ACTIONS_ON_DEFAULT_NETWORK_AVAILABLE"); _KEY_CARRIER_DEFAULT_ACTIONS_ON_DEFAULT_NETWORK_AVAILABLEReady = true; } return _KEY_CARRIER_DEFAULT_ACTIONS_ON_DEFAULT_NETWORK_AVAILABLEContent; } }
        private static Java.Lang.String _KEY_CARRIER_DEFAULT_ACTIONS_ON_DEFAULT_NETWORK_AVAILABLEContent = default;
        private static bool _KEY_CARRIER_DEFAULT_ACTIONS_ON_DEFAULT_NETWORK_AVAILABLEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CARRIER_DEFAULT_ACTIONS_ON_REDIRECTION_STRING_ARRAY"/>
        /// </summary>
        public static Java.Lang.String KEY_CARRIER_DEFAULT_ACTIONS_ON_REDIRECTION_STRING_ARRAY { get { if (!_KEY_CARRIER_DEFAULT_ACTIONS_ON_REDIRECTION_STRING_ARRAYReady) { _KEY_CARRIER_DEFAULT_ACTIONS_ON_REDIRECTION_STRING_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CARRIER_DEFAULT_ACTIONS_ON_REDIRECTION_STRING_ARRAY"); _KEY_CARRIER_DEFAULT_ACTIONS_ON_REDIRECTION_STRING_ARRAYReady = true; } return _KEY_CARRIER_DEFAULT_ACTIONS_ON_REDIRECTION_STRING_ARRAYContent; } }
        private static Java.Lang.String _KEY_CARRIER_DEFAULT_ACTIONS_ON_REDIRECTION_STRING_ARRAYContent = default;
        private static bool _KEY_CARRIER_DEFAULT_ACTIONS_ON_REDIRECTION_STRING_ARRAYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CARRIER_DEFAULT_ACTIONS_ON_RESET"/>
        /// </summary>
        public static Java.Lang.String KEY_CARRIER_DEFAULT_ACTIONS_ON_RESET { get { if (!_KEY_CARRIER_DEFAULT_ACTIONS_ON_RESETReady) { _KEY_CARRIER_DEFAULT_ACTIONS_ON_RESETContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CARRIER_DEFAULT_ACTIONS_ON_RESET"); _KEY_CARRIER_DEFAULT_ACTIONS_ON_RESETReady = true; } return _KEY_CARRIER_DEFAULT_ACTIONS_ON_RESETContent; } }
        private static Java.Lang.String _KEY_CARRIER_DEFAULT_ACTIONS_ON_RESETContent = default;
        private static bool _KEY_CARRIER_DEFAULT_ACTIONS_ON_RESETReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CARRIER_DEFAULT_REDIRECTION_URL_STRING_ARRAY"/>
        /// </summary>
        public static Java.Lang.String KEY_CARRIER_DEFAULT_REDIRECTION_URL_STRING_ARRAY { get { if (!_KEY_CARRIER_DEFAULT_REDIRECTION_URL_STRING_ARRAYReady) { _KEY_CARRIER_DEFAULT_REDIRECTION_URL_STRING_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CARRIER_DEFAULT_REDIRECTION_URL_STRING_ARRAY"); _KEY_CARRIER_DEFAULT_REDIRECTION_URL_STRING_ARRAYReady = true; } return _KEY_CARRIER_DEFAULT_REDIRECTION_URL_STRING_ARRAYContent; } }
        private static Java.Lang.String _KEY_CARRIER_DEFAULT_REDIRECTION_URL_STRING_ARRAYContent = default;
        private static bool _KEY_CARRIER_DEFAULT_REDIRECTION_URL_STRING_ARRAYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CARRIER_DEFAULT_WFC_IMS_ENABLED_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_CARRIER_DEFAULT_WFC_IMS_ENABLED_BOOL { get { if (!_KEY_CARRIER_DEFAULT_WFC_IMS_ENABLED_BOOLReady) { _KEY_CARRIER_DEFAULT_WFC_IMS_ENABLED_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CARRIER_DEFAULT_WFC_IMS_ENABLED_BOOL"); _KEY_CARRIER_DEFAULT_WFC_IMS_ENABLED_BOOLReady = true; } return _KEY_CARRIER_DEFAULT_WFC_IMS_ENABLED_BOOLContent; } }
        private static Java.Lang.String _KEY_CARRIER_DEFAULT_WFC_IMS_ENABLED_BOOLContent = default;
        private static bool _KEY_CARRIER_DEFAULT_WFC_IMS_ENABLED_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CARRIER_DEFAULT_WFC_IMS_MODE_INT"/>
        /// </summary>
        public static Java.Lang.String KEY_CARRIER_DEFAULT_WFC_IMS_MODE_INT { get { if (!_KEY_CARRIER_DEFAULT_WFC_IMS_MODE_INTReady) { _KEY_CARRIER_DEFAULT_WFC_IMS_MODE_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CARRIER_DEFAULT_WFC_IMS_MODE_INT"); _KEY_CARRIER_DEFAULT_WFC_IMS_MODE_INTReady = true; } return _KEY_CARRIER_DEFAULT_WFC_IMS_MODE_INTContent; } }
        private static Java.Lang.String _KEY_CARRIER_DEFAULT_WFC_IMS_MODE_INTContent = default;
        private static bool _KEY_CARRIER_DEFAULT_WFC_IMS_MODE_INTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CARRIER_DEFAULT_WFC_IMS_ROAMING_MODE_INT"/>
        /// </summary>
        public static Java.Lang.String KEY_CARRIER_DEFAULT_WFC_IMS_ROAMING_MODE_INT { get { if (!_KEY_CARRIER_DEFAULT_WFC_IMS_ROAMING_MODE_INTReady) { _KEY_CARRIER_DEFAULT_WFC_IMS_ROAMING_MODE_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CARRIER_DEFAULT_WFC_IMS_ROAMING_MODE_INT"); _KEY_CARRIER_DEFAULT_WFC_IMS_ROAMING_MODE_INTReady = true; } return _KEY_CARRIER_DEFAULT_WFC_IMS_ROAMING_MODE_INTContent; } }
        private static Java.Lang.String _KEY_CARRIER_DEFAULT_WFC_IMS_ROAMING_MODE_INTContent = default;
        private static bool _KEY_CARRIER_DEFAULT_WFC_IMS_ROAMING_MODE_INTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CARRIER_FORCE_DISABLE_ETWS_CMAS_TEST_BOOL"/>
        /// </summary>
        [global::System.Obsolete()]
        public static Java.Lang.String KEY_CARRIER_FORCE_DISABLE_ETWS_CMAS_TEST_BOOL { get { if (!_KEY_CARRIER_FORCE_DISABLE_ETWS_CMAS_TEST_BOOLReady) { _KEY_CARRIER_FORCE_DISABLE_ETWS_CMAS_TEST_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CARRIER_FORCE_DISABLE_ETWS_CMAS_TEST_BOOL"); _KEY_CARRIER_FORCE_DISABLE_ETWS_CMAS_TEST_BOOLReady = true; } return _KEY_CARRIER_FORCE_DISABLE_ETWS_CMAS_TEST_BOOLContent; } }
        private static Java.Lang.String _KEY_CARRIER_FORCE_DISABLE_ETWS_CMAS_TEST_BOOLContent = default;
        private static bool _KEY_CARRIER_FORCE_DISABLE_ETWS_CMAS_TEST_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CARRIER_IMS_GBA_REQUIRED_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_CARRIER_IMS_GBA_REQUIRED_BOOL { get { if (!_KEY_CARRIER_IMS_GBA_REQUIRED_BOOLReady) { _KEY_CARRIER_IMS_GBA_REQUIRED_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CARRIER_IMS_GBA_REQUIRED_BOOL"); _KEY_CARRIER_IMS_GBA_REQUIRED_BOOLReady = true; } return _KEY_CARRIER_IMS_GBA_REQUIRED_BOOLContent; } }
        private static Java.Lang.String _KEY_CARRIER_IMS_GBA_REQUIRED_BOOLContent = default;
        private static bool _KEY_CARRIER_IMS_GBA_REQUIRED_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CARRIER_INSTANT_LETTERING_AVAILABLE_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_CARRIER_INSTANT_LETTERING_AVAILABLE_BOOL { get { if (!_KEY_CARRIER_INSTANT_LETTERING_AVAILABLE_BOOLReady) { _KEY_CARRIER_INSTANT_LETTERING_AVAILABLE_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CARRIER_INSTANT_LETTERING_AVAILABLE_BOOL"); _KEY_CARRIER_INSTANT_LETTERING_AVAILABLE_BOOLReady = true; } return _KEY_CARRIER_INSTANT_LETTERING_AVAILABLE_BOOLContent; } }
        private static Java.Lang.String _KEY_CARRIER_INSTANT_LETTERING_AVAILABLE_BOOLContent = default;
        private static bool _KEY_CARRIER_INSTANT_LETTERING_AVAILABLE_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CARRIER_INSTANT_LETTERING_ENCODING_STRING"/>
        /// </summary>
        public static Java.Lang.String KEY_CARRIER_INSTANT_LETTERING_ENCODING_STRING { get { if (!_KEY_CARRIER_INSTANT_LETTERING_ENCODING_STRINGReady) { _KEY_CARRIER_INSTANT_LETTERING_ENCODING_STRINGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CARRIER_INSTANT_LETTERING_ENCODING_STRING"); _KEY_CARRIER_INSTANT_LETTERING_ENCODING_STRINGReady = true; } return _KEY_CARRIER_INSTANT_LETTERING_ENCODING_STRINGContent; } }
        private static Java.Lang.String _KEY_CARRIER_INSTANT_LETTERING_ENCODING_STRINGContent = default;
        private static bool _KEY_CARRIER_INSTANT_LETTERING_ENCODING_STRINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CARRIER_INSTANT_LETTERING_ESCAPED_CHARS_STRING"/>
        /// </summary>
        public static Java.Lang.String KEY_CARRIER_INSTANT_LETTERING_ESCAPED_CHARS_STRING { get { if (!_KEY_CARRIER_INSTANT_LETTERING_ESCAPED_CHARS_STRINGReady) { _KEY_CARRIER_INSTANT_LETTERING_ESCAPED_CHARS_STRINGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CARRIER_INSTANT_LETTERING_ESCAPED_CHARS_STRING"); _KEY_CARRIER_INSTANT_LETTERING_ESCAPED_CHARS_STRINGReady = true; } return _KEY_CARRIER_INSTANT_LETTERING_ESCAPED_CHARS_STRINGContent; } }
        private static Java.Lang.String _KEY_CARRIER_INSTANT_LETTERING_ESCAPED_CHARS_STRINGContent = default;
        private static bool _KEY_CARRIER_INSTANT_LETTERING_ESCAPED_CHARS_STRINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CARRIER_INSTANT_LETTERING_INVALID_CHARS_STRING"/>
        /// </summary>
        public static Java.Lang.String KEY_CARRIER_INSTANT_LETTERING_INVALID_CHARS_STRING { get { if (!_KEY_CARRIER_INSTANT_LETTERING_INVALID_CHARS_STRINGReady) { _KEY_CARRIER_INSTANT_LETTERING_INVALID_CHARS_STRINGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CARRIER_INSTANT_LETTERING_INVALID_CHARS_STRING"); _KEY_CARRIER_INSTANT_LETTERING_INVALID_CHARS_STRINGReady = true; } return _KEY_CARRIER_INSTANT_LETTERING_INVALID_CHARS_STRINGContent; } }
        private static Java.Lang.String _KEY_CARRIER_INSTANT_LETTERING_INVALID_CHARS_STRINGContent = default;
        private static bool _KEY_CARRIER_INSTANT_LETTERING_INVALID_CHARS_STRINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CARRIER_INSTANT_LETTERING_LENGTH_LIMIT_INT"/>
        /// </summary>
        public static Java.Lang.String KEY_CARRIER_INSTANT_LETTERING_LENGTH_LIMIT_INT { get { if (!_KEY_CARRIER_INSTANT_LETTERING_LENGTH_LIMIT_INTReady) { _KEY_CARRIER_INSTANT_LETTERING_LENGTH_LIMIT_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CARRIER_INSTANT_LETTERING_LENGTH_LIMIT_INT"); _KEY_CARRIER_INSTANT_LETTERING_LENGTH_LIMIT_INTReady = true; } return _KEY_CARRIER_INSTANT_LETTERING_LENGTH_LIMIT_INTContent; } }
        private static Java.Lang.String _KEY_CARRIER_INSTANT_LETTERING_LENGTH_LIMIT_INTContent = default;
        private static bool _KEY_CARRIER_INSTANT_LETTERING_LENGTH_LIMIT_INTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CARRIER_METERED_APN_TYPES_STRINGS"/>
        /// </summary>
        public static Java.Lang.String KEY_CARRIER_METERED_APN_TYPES_STRINGS { get { if (!_KEY_CARRIER_METERED_APN_TYPES_STRINGSReady) { _KEY_CARRIER_METERED_APN_TYPES_STRINGSContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CARRIER_METERED_APN_TYPES_STRINGS"); _KEY_CARRIER_METERED_APN_TYPES_STRINGSReady = true; } return _KEY_CARRIER_METERED_APN_TYPES_STRINGSContent; } }
        private static Java.Lang.String _KEY_CARRIER_METERED_APN_TYPES_STRINGSContent = default;
        private static bool _KEY_CARRIER_METERED_APN_TYPES_STRINGSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CARRIER_METERED_ROAMING_APN_TYPES_STRINGS"/>
        /// </summary>
        public static Java.Lang.String KEY_CARRIER_METERED_ROAMING_APN_TYPES_STRINGS { get { if (!_KEY_CARRIER_METERED_ROAMING_APN_TYPES_STRINGSReady) { _KEY_CARRIER_METERED_ROAMING_APN_TYPES_STRINGSContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CARRIER_METERED_ROAMING_APN_TYPES_STRINGS"); _KEY_CARRIER_METERED_ROAMING_APN_TYPES_STRINGSReady = true; } return _KEY_CARRIER_METERED_ROAMING_APN_TYPES_STRINGSContent; } }
        private static Java.Lang.String _KEY_CARRIER_METERED_ROAMING_APN_TYPES_STRINGSContent = default;
        private static bool _KEY_CARRIER_METERED_ROAMING_APN_TYPES_STRINGSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CARRIER_NAME_OVERRIDE_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_CARRIER_NAME_OVERRIDE_BOOL { get { if (!_KEY_CARRIER_NAME_OVERRIDE_BOOLReady) { _KEY_CARRIER_NAME_OVERRIDE_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CARRIER_NAME_OVERRIDE_BOOL"); _KEY_CARRIER_NAME_OVERRIDE_BOOLReady = true; } return _KEY_CARRIER_NAME_OVERRIDE_BOOLContent; } }
        private static Java.Lang.String _KEY_CARRIER_NAME_OVERRIDE_BOOLContent = default;
        private static bool _KEY_CARRIER_NAME_OVERRIDE_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CARRIER_NAME_STRING"/>
        /// </summary>
        public static Java.Lang.String KEY_CARRIER_NAME_STRING { get { if (!_KEY_CARRIER_NAME_STRINGReady) { _KEY_CARRIER_NAME_STRINGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CARRIER_NAME_STRING"); _KEY_CARRIER_NAME_STRINGReady = true; } return _KEY_CARRIER_NAME_STRINGContent; } }
        private static Java.Lang.String _KEY_CARRIER_NAME_STRINGContent = default;
        private static bool _KEY_CARRIER_NAME_STRINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CARRIER_NR_AVAILABILITIES_INT_ARRAY"/>
        /// </summary>
        public static Java.Lang.String KEY_CARRIER_NR_AVAILABILITIES_INT_ARRAY { get { if (!_KEY_CARRIER_NR_AVAILABILITIES_INT_ARRAYReady) { _KEY_CARRIER_NR_AVAILABILITIES_INT_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CARRIER_NR_AVAILABILITIES_INT_ARRAY"); _KEY_CARRIER_NR_AVAILABILITIES_INT_ARRAYReady = true; } return _KEY_CARRIER_NR_AVAILABILITIES_INT_ARRAYContent; } }
        private static Java.Lang.String _KEY_CARRIER_NR_AVAILABILITIES_INT_ARRAYContent = default;
        private static bool _KEY_CARRIER_NR_AVAILABILITIES_INT_ARRAYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CARRIER_PROVISIONS_WIFI_MERGED_NETWORKS_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_CARRIER_PROVISIONS_WIFI_MERGED_NETWORKS_BOOL { get { if (!_KEY_CARRIER_PROVISIONS_WIFI_MERGED_NETWORKS_BOOLReady) { _KEY_CARRIER_PROVISIONS_WIFI_MERGED_NETWORKS_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CARRIER_PROVISIONS_WIFI_MERGED_NETWORKS_BOOL"); _KEY_CARRIER_PROVISIONS_WIFI_MERGED_NETWORKS_BOOLReady = true; } return _KEY_CARRIER_PROVISIONS_WIFI_MERGED_NETWORKS_BOOLContent; } }
        private static Java.Lang.String _KEY_CARRIER_PROVISIONS_WIFI_MERGED_NETWORKS_BOOLContent = default;
        private static bool _KEY_CARRIER_PROVISIONS_WIFI_MERGED_NETWORKS_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CARRIER_RCS_PROVISIONING_REQUIRED_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_CARRIER_RCS_PROVISIONING_REQUIRED_BOOL { get { if (!_KEY_CARRIER_RCS_PROVISIONING_REQUIRED_BOOLReady) { _KEY_CARRIER_RCS_PROVISIONING_REQUIRED_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CARRIER_RCS_PROVISIONING_REQUIRED_BOOL"); _KEY_CARRIER_RCS_PROVISIONING_REQUIRED_BOOLReady = true; } return _KEY_CARRIER_RCS_PROVISIONING_REQUIRED_BOOLContent; } }
        private static Java.Lang.String _KEY_CARRIER_RCS_PROVISIONING_REQUIRED_BOOLContent = default;
        private static bool _KEY_CARRIER_RCS_PROVISIONING_REQUIRED_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CARRIER_SERVICE_NAME_STRING_ARRAY"/>
        /// </summary>
        public static Java.Lang.String KEY_CARRIER_SERVICE_NAME_STRING_ARRAY { get { if (!_KEY_CARRIER_SERVICE_NAME_STRING_ARRAYReady) { _KEY_CARRIER_SERVICE_NAME_STRING_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CARRIER_SERVICE_NAME_STRING_ARRAY"); _KEY_CARRIER_SERVICE_NAME_STRING_ARRAYReady = true; } return _KEY_CARRIER_SERVICE_NAME_STRING_ARRAYContent; } }
        private static Java.Lang.String _KEY_CARRIER_SERVICE_NAME_STRING_ARRAYContent = default;
        private static bool _KEY_CARRIER_SERVICE_NAME_STRING_ARRAYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CARRIER_SERVICE_NUMBER_STRING_ARRAY"/>
        /// </summary>
        public static Java.Lang.String KEY_CARRIER_SERVICE_NUMBER_STRING_ARRAY { get { if (!_KEY_CARRIER_SERVICE_NUMBER_STRING_ARRAYReady) { _KEY_CARRIER_SERVICE_NUMBER_STRING_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CARRIER_SERVICE_NUMBER_STRING_ARRAY"); _KEY_CARRIER_SERVICE_NUMBER_STRING_ARRAYReady = true; } return _KEY_CARRIER_SERVICE_NUMBER_STRING_ARRAYContent; } }
        private static Java.Lang.String _KEY_CARRIER_SERVICE_NUMBER_STRING_ARRAYContent = default;
        private static bool _KEY_CARRIER_SERVICE_NUMBER_STRING_ARRAYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CARRIER_SETTINGS_ACTIVITY_COMPONENT_NAME_STRING"/>
        /// </summary>
        public static Java.Lang.String KEY_CARRIER_SETTINGS_ACTIVITY_COMPONENT_NAME_STRING { get { if (!_KEY_CARRIER_SETTINGS_ACTIVITY_COMPONENT_NAME_STRINGReady) { _KEY_CARRIER_SETTINGS_ACTIVITY_COMPONENT_NAME_STRINGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CARRIER_SETTINGS_ACTIVITY_COMPONENT_NAME_STRING"); _KEY_CARRIER_SETTINGS_ACTIVITY_COMPONENT_NAME_STRINGReady = true; } return _KEY_CARRIER_SETTINGS_ACTIVITY_COMPONENT_NAME_STRINGContent; } }
        private static Java.Lang.String _KEY_CARRIER_SETTINGS_ACTIVITY_COMPONENT_NAME_STRINGContent = default;
        private static bool _KEY_CARRIER_SETTINGS_ACTIVITY_COMPONENT_NAME_STRINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CARRIER_SETTINGS_ENABLE_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_CARRIER_SETTINGS_ENABLE_BOOL { get { if (!_KEY_CARRIER_SETTINGS_ENABLE_BOOLReady) { _KEY_CARRIER_SETTINGS_ENABLE_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CARRIER_SETTINGS_ENABLE_BOOL"); _KEY_CARRIER_SETTINGS_ENABLE_BOOLReady = true; } return _KEY_CARRIER_SETTINGS_ENABLE_BOOLContent; } }
        private static Java.Lang.String _KEY_CARRIER_SETTINGS_ENABLE_BOOLContent = default;
        private static bool _KEY_CARRIER_SETTINGS_ENABLE_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CARRIER_SUPPORTS_OPP_DATA_AUTO_PROVISIONING_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_CARRIER_SUPPORTS_OPP_DATA_AUTO_PROVISIONING_BOOL { get { if (!_KEY_CARRIER_SUPPORTS_OPP_DATA_AUTO_PROVISIONING_BOOLReady) { _KEY_CARRIER_SUPPORTS_OPP_DATA_AUTO_PROVISIONING_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CARRIER_SUPPORTS_OPP_DATA_AUTO_PROVISIONING_BOOL"); _KEY_CARRIER_SUPPORTS_OPP_DATA_AUTO_PROVISIONING_BOOLReady = true; } return _KEY_CARRIER_SUPPORTS_OPP_DATA_AUTO_PROVISIONING_BOOLContent; } }
        private static Java.Lang.String _KEY_CARRIER_SUPPORTS_OPP_DATA_AUTO_PROVISIONING_BOOLContent = default;
        private static bool _KEY_CARRIER_SUPPORTS_OPP_DATA_AUTO_PROVISIONING_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CARRIER_SUPPORTS_SS_OVER_UT_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_CARRIER_SUPPORTS_SS_OVER_UT_BOOL { get { if (!_KEY_CARRIER_SUPPORTS_SS_OVER_UT_BOOLReady) { _KEY_CARRIER_SUPPORTS_SS_OVER_UT_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CARRIER_SUPPORTS_SS_OVER_UT_BOOL"); _KEY_CARRIER_SUPPORTS_SS_OVER_UT_BOOLReady = true; } return _KEY_CARRIER_SUPPORTS_SS_OVER_UT_BOOLContent; } }
        private static Java.Lang.String _KEY_CARRIER_SUPPORTS_SS_OVER_UT_BOOLContent = default;
        private static bool _KEY_CARRIER_SUPPORTS_SS_OVER_UT_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CARRIER_SUPPORTS_TETHERING_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_CARRIER_SUPPORTS_TETHERING_BOOL { get { if (!_KEY_CARRIER_SUPPORTS_TETHERING_BOOLReady) { _KEY_CARRIER_SUPPORTS_TETHERING_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CARRIER_SUPPORTS_TETHERING_BOOL"); _KEY_CARRIER_SUPPORTS_TETHERING_BOOLReady = true; } return _KEY_CARRIER_SUPPORTS_TETHERING_BOOLContent; } }
        private static Java.Lang.String _KEY_CARRIER_SUPPORTS_TETHERING_BOOLContent = default;
        private static bool _KEY_CARRIER_SUPPORTS_TETHERING_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CARRIER_USE_IMS_FIRST_FOR_EMERGENCY_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_CARRIER_USE_IMS_FIRST_FOR_EMERGENCY_BOOL { get { if (!_KEY_CARRIER_USE_IMS_FIRST_FOR_EMERGENCY_BOOLReady) { _KEY_CARRIER_USE_IMS_FIRST_FOR_EMERGENCY_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CARRIER_USE_IMS_FIRST_FOR_EMERGENCY_BOOL"); _KEY_CARRIER_USE_IMS_FIRST_FOR_EMERGENCY_BOOLReady = true; } return _KEY_CARRIER_USE_IMS_FIRST_FOR_EMERGENCY_BOOLContent; } }
        private static Java.Lang.String _KEY_CARRIER_USE_IMS_FIRST_FOR_EMERGENCY_BOOLContent = default;
        private static bool _KEY_CARRIER_USE_IMS_FIRST_FOR_EMERGENCY_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CARRIER_USSD_METHOD_INT"/>
        /// </summary>
        public static Java.Lang.String KEY_CARRIER_USSD_METHOD_INT { get { if (!_KEY_CARRIER_USSD_METHOD_INTReady) { _KEY_CARRIER_USSD_METHOD_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CARRIER_USSD_METHOD_INT"); _KEY_CARRIER_USSD_METHOD_INTReady = true; } return _KEY_CARRIER_USSD_METHOD_INTContent; } }
        private static Java.Lang.String _KEY_CARRIER_USSD_METHOD_INTContent = default;
        private static bool _KEY_CARRIER_USSD_METHOD_INTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CARRIER_UT_PROVISIONING_REQUIRED_BOOL"/>
        /// </summary>
        [global::System.Obsolete()]
        public static Java.Lang.String KEY_CARRIER_UT_PROVISIONING_REQUIRED_BOOL { get { if (!_KEY_CARRIER_UT_PROVISIONING_REQUIRED_BOOLReady) { _KEY_CARRIER_UT_PROVISIONING_REQUIRED_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CARRIER_UT_PROVISIONING_REQUIRED_BOOL"); _KEY_CARRIER_UT_PROVISIONING_REQUIRED_BOOLReady = true; } return _KEY_CARRIER_UT_PROVISIONING_REQUIRED_BOOLContent; } }
        private static Java.Lang.String _KEY_CARRIER_UT_PROVISIONING_REQUIRED_BOOLContent = default;
        private static bool _KEY_CARRIER_UT_PROVISIONING_REQUIRED_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CARRIER_VOLTE_AVAILABLE_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_CARRIER_VOLTE_AVAILABLE_BOOL { get { if (!_KEY_CARRIER_VOLTE_AVAILABLE_BOOLReady) { _KEY_CARRIER_VOLTE_AVAILABLE_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CARRIER_VOLTE_AVAILABLE_BOOL"); _KEY_CARRIER_VOLTE_AVAILABLE_BOOLReady = true; } return _KEY_CARRIER_VOLTE_AVAILABLE_BOOLContent; } }
        private static Java.Lang.String _KEY_CARRIER_VOLTE_AVAILABLE_BOOLContent = default;
        private static bool _KEY_CARRIER_VOLTE_AVAILABLE_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CARRIER_VOLTE_OVERRIDE_WFC_PROVISIONING_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_CARRIER_VOLTE_OVERRIDE_WFC_PROVISIONING_BOOL { get { if (!_KEY_CARRIER_VOLTE_OVERRIDE_WFC_PROVISIONING_BOOLReady) { _KEY_CARRIER_VOLTE_OVERRIDE_WFC_PROVISIONING_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CARRIER_VOLTE_OVERRIDE_WFC_PROVISIONING_BOOL"); _KEY_CARRIER_VOLTE_OVERRIDE_WFC_PROVISIONING_BOOLReady = true; } return _KEY_CARRIER_VOLTE_OVERRIDE_WFC_PROVISIONING_BOOLContent; } }
        private static Java.Lang.String _KEY_CARRIER_VOLTE_OVERRIDE_WFC_PROVISIONING_BOOLContent = default;
        private static bool _KEY_CARRIER_VOLTE_OVERRIDE_WFC_PROVISIONING_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CARRIER_VOLTE_PROVISIONED_BOOL"/>
        /// </summary>
        [global::System.Obsolete()]
        public static Java.Lang.String KEY_CARRIER_VOLTE_PROVISIONED_BOOL { get { if (!_KEY_CARRIER_VOLTE_PROVISIONED_BOOLReady) { _KEY_CARRIER_VOLTE_PROVISIONED_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CARRIER_VOLTE_PROVISIONED_BOOL"); _KEY_CARRIER_VOLTE_PROVISIONED_BOOLReady = true; } return _KEY_CARRIER_VOLTE_PROVISIONED_BOOLContent; } }
        private static Java.Lang.String _KEY_CARRIER_VOLTE_PROVISIONED_BOOLContent = default;
        private static bool _KEY_CARRIER_VOLTE_PROVISIONED_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CARRIER_VOLTE_PROVISIONING_REQUIRED_BOOL"/>
        /// </summary>
        [global::System.Obsolete()]
        public static Java.Lang.String KEY_CARRIER_VOLTE_PROVISIONING_REQUIRED_BOOL { get { if (!_KEY_CARRIER_VOLTE_PROVISIONING_REQUIRED_BOOLReady) { _KEY_CARRIER_VOLTE_PROVISIONING_REQUIRED_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CARRIER_VOLTE_PROVISIONING_REQUIRED_BOOL"); _KEY_CARRIER_VOLTE_PROVISIONING_REQUIRED_BOOLReady = true; } return _KEY_CARRIER_VOLTE_PROVISIONING_REQUIRED_BOOLContent; } }
        private static Java.Lang.String _KEY_CARRIER_VOLTE_PROVISIONING_REQUIRED_BOOLContent = default;
        private static bool _KEY_CARRIER_VOLTE_PROVISIONING_REQUIRED_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CARRIER_VOLTE_TTY_SUPPORTED_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_CARRIER_VOLTE_TTY_SUPPORTED_BOOL { get { if (!_KEY_CARRIER_VOLTE_TTY_SUPPORTED_BOOLReady) { _KEY_CARRIER_VOLTE_TTY_SUPPORTED_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CARRIER_VOLTE_TTY_SUPPORTED_BOOL"); _KEY_CARRIER_VOLTE_TTY_SUPPORTED_BOOLReady = true; } return _KEY_CARRIER_VOLTE_TTY_SUPPORTED_BOOLContent; } }
        private static Java.Lang.String _KEY_CARRIER_VOLTE_TTY_SUPPORTED_BOOLContent = default;
        private static bool _KEY_CARRIER_VOLTE_TTY_SUPPORTED_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CARRIER_VT_AVAILABLE_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_CARRIER_VT_AVAILABLE_BOOL { get { if (!_KEY_CARRIER_VT_AVAILABLE_BOOLReady) { _KEY_CARRIER_VT_AVAILABLE_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CARRIER_VT_AVAILABLE_BOOL"); _KEY_CARRIER_VT_AVAILABLE_BOOLReady = true; } return _KEY_CARRIER_VT_AVAILABLE_BOOLContent; } }
        private static Java.Lang.String _KEY_CARRIER_VT_AVAILABLE_BOOLContent = default;
        private static bool _KEY_CARRIER_VT_AVAILABLE_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CARRIER_VVM_PACKAGE_NAME_STRING"/>
        /// </summary>
        [global::System.Obsolete()]
        public static Java.Lang.String KEY_CARRIER_VVM_PACKAGE_NAME_STRING { get { if (!_KEY_CARRIER_VVM_PACKAGE_NAME_STRINGReady) { _KEY_CARRIER_VVM_PACKAGE_NAME_STRINGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CARRIER_VVM_PACKAGE_NAME_STRING"); _KEY_CARRIER_VVM_PACKAGE_NAME_STRINGReady = true; } return _KEY_CARRIER_VVM_PACKAGE_NAME_STRINGContent; } }
        private static Java.Lang.String _KEY_CARRIER_VVM_PACKAGE_NAME_STRINGContent = default;
        private static bool _KEY_CARRIER_VVM_PACKAGE_NAME_STRINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CARRIER_VVM_PACKAGE_NAME_STRING_ARRAY"/>
        /// </summary>
        public static Java.Lang.String KEY_CARRIER_VVM_PACKAGE_NAME_STRING_ARRAY { get { if (!_KEY_CARRIER_VVM_PACKAGE_NAME_STRING_ARRAYReady) { _KEY_CARRIER_VVM_PACKAGE_NAME_STRING_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CARRIER_VVM_PACKAGE_NAME_STRING_ARRAY"); _KEY_CARRIER_VVM_PACKAGE_NAME_STRING_ARRAYReady = true; } return _KEY_CARRIER_VVM_PACKAGE_NAME_STRING_ARRAYContent; } }
        private static Java.Lang.String _KEY_CARRIER_VVM_PACKAGE_NAME_STRING_ARRAYContent = default;
        private static bool _KEY_CARRIER_VVM_PACKAGE_NAME_STRING_ARRAYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CARRIER_WFC_IMS_AVAILABLE_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_CARRIER_WFC_IMS_AVAILABLE_BOOL { get { if (!_KEY_CARRIER_WFC_IMS_AVAILABLE_BOOLReady) { _KEY_CARRIER_WFC_IMS_AVAILABLE_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CARRIER_WFC_IMS_AVAILABLE_BOOL"); _KEY_CARRIER_WFC_IMS_AVAILABLE_BOOLReady = true; } return _KEY_CARRIER_WFC_IMS_AVAILABLE_BOOLContent; } }
        private static Java.Lang.String _KEY_CARRIER_WFC_IMS_AVAILABLE_BOOLContent = default;
        private static bool _KEY_CARRIER_WFC_IMS_AVAILABLE_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CARRIER_WFC_SUPPORTS_WIFI_ONLY_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_CARRIER_WFC_SUPPORTS_WIFI_ONLY_BOOL { get { if (!_KEY_CARRIER_WFC_SUPPORTS_WIFI_ONLY_BOOLReady) { _KEY_CARRIER_WFC_SUPPORTS_WIFI_ONLY_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CARRIER_WFC_SUPPORTS_WIFI_ONLY_BOOL"); _KEY_CARRIER_WFC_SUPPORTS_WIFI_ONLY_BOOLReady = true; } return _KEY_CARRIER_WFC_SUPPORTS_WIFI_ONLY_BOOLContent; } }
        private static Java.Lang.String _KEY_CARRIER_WFC_SUPPORTS_WIFI_ONLY_BOOLContent = default;
        private static bool _KEY_CARRIER_WFC_SUPPORTS_WIFI_ONLY_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CDMA_3WAYCALL_FLASH_DELAY_INT"/>
        /// </summary>
        public static Java.Lang.String KEY_CDMA_3WAYCALL_FLASH_DELAY_INT { get { if (!_KEY_CDMA_3WAYCALL_FLASH_DELAY_INTReady) { _KEY_CDMA_3WAYCALL_FLASH_DELAY_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CDMA_3WAYCALL_FLASH_DELAY_INT"); _KEY_CDMA_3WAYCALL_FLASH_DELAY_INTReady = true; } return _KEY_CDMA_3WAYCALL_FLASH_DELAY_INTContent; } }
        private static Java.Lang.String _KEY_CDMA_3WAYCALL_FLASH_DELAY_INTContent = default;
        private static bool _KEY_CDMA_3WAYCALL_FLASH_DELAY_INTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CDMA_DTMF_TONE_DELAY_INT"/>
        /// </summary>
        public static Java.Lang.String KEY_CDMA_DTMF_TONE_DELAY_INT { get { if (!_KEY_CDMA_DTMF_TONE_DELAY_INTReady) { _KEY_CDMA_DTMF_TONE_DELAY_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CDMA_DTMF_TONE_DELAY_INT"); _KEY_CDMA_DTMF_TONE_DELAY_INTReady = true; } return _KEY_CDMA_DTMF_TONE_DELAY_INTContent; } }
        private static Java.Lang.String _KEY_CDMA_DTMF_TONE_DELAY_INTContent = default;
        private static bool _KEY_CDMA_DTMF_TONE_DELAY_INTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CDMA_NONROAMING_NETWORKS_STRING_ARRAY"/>
        /// </summary>
        public static Java.Lang.String KEY_CDMA_NONROAMING_NETWORKS_STRING_ARRAY { get { if (!_KEY_CDMA_NONROAMING_NETWORKS_STRING_ARRAYReady) { _KEY_CDMA_NONROAMING_NETWORKS_STRING_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CDMA_NONROAMING_NETWORKS_STRING_ARRAY"); _KEY_CDMA_NONROAMING_NETWORKS_STRING_ARRAYReady = true; } return _KEY_CDMA_NONROAMING_NETWORKS_STRING_ARRAYContent; } }
        private static Java.Lang.String _KEY_CDMA_NONROAMING_NETWORKS_STRING_ARRAYContent = default;
        private static bool _KEY_CDMA_NONROAMING_NETWORKS_STRING_ARRAYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CDMA_ROAMING_MODE_INT"/>
        /// </summary>
        public static Java.Lang.String KEY_CDMA_ROAMING_MODE_INT { get { if (!_KEY_CDMA_ROAMING_MODE_INTReady) { _KEY_CDMA_ROAMING_MODE_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CDMA_ROAMING_MODE_INT"); _KEY_CDMA_ROAMING_MODE_INTReady = true; } return _KEY_CDMA_ROAMING_MODE_INTContent; } }
        private static Java.Lang.String _KEY_CDMA_ROAMING_MODE_INTContent = default;
        private static bool _KEY_CDMA_ROAMING_MODE_INTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CDMA_ROAMING_NETWORKS_STRING_ARRAY"/>
        /// </summary>
        public static Java.Lang.String KEY_CDMA_ROAMING_NETWORKS_STRING_ARRAY { get { if (!_KEY_CDMA_ROAMING_NETWORKS_STRING_ARRAYReady) { _KEY_CDMA_ROAMING_NETWORKS_STRING_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CDMA_ROAMING_NETWORKS_STRING_ARRAY"); _KEY_CDMA_ROAMING_NETWORKS_STRING_ARRAYReady = true; } return _KEY_CDMA_ROAMING_NETWORKS_STRING_ARRAYContent; } }
        private static Java.Lang.String _KEY_CDMA_ROAMING_NETWORKS_STRING_ARRAYContent = default;
        private static bool _KEY_CDMA_ROAMING_NETWORKS_STRING_ARRAYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CELLULAR_USAGE_SETTING_INT"/>
        /// </summary>
        public static Java.Lang.String KEY_CELLULAR_USAGE_SETTING_INT { get { if (!_KEY_CELLULAR_USAGE_SETTING_INTReady) { _KEY_CELLULAR_USAGE_SETTING_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CELLULAR_USAGE_SETTING_INT"); _KEY_CELLULAR_USAGE_SETTING_INTReady = true; } return _KEY_CELLULAR_USAGE_SETTING_INTContent; } }
        private static Java.Lang.String _KEY_CELLULAR_USAGE_SETTING_INTContent = default;
        private static bool _KEY_CELLULAR_USAGE_SETTING_INTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CHECK_PRICING_WITH_CARRIER_FOR_DATA_ROAMING_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_CHECK_PRICING_WITH_CARRIER_FOR_DATA_ROAMING_BOOL { get { if (!_KEY_CHECK_PRICING_WITH_CARRIER_FOR_DATA_ROAMING_BOOLReady) { _KEY_CHECK_PRICING_WITH_CARRIER_FOR_DATA_ROAMING_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CHECK_PRICING_WITH_CARRIER_FOR_DATA_ROAMING_BOOL"); _KEY_CHECK_PRICING_WITH_CARRIER_FOR_DATA_ROAMING_BOOLReady = true; } return _KEY_CHECK_PRICING_WITH_CARRIER_FOR_DATA_ROAMING_BOOLContent; } }
        private static Java.Lang.String _KEY_CHECK_PRICING_WITH_CARRIER_FOR_DATA_ROAMING_BOOLContent = default;
        private static bool _KEY_CHECK_PRICING_WITH_CARRIER_FOR_DATA_ROAMING_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CI_ACTION_ON_SYS_UPDATE_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_CI_ACTION_ON_SYS_UPDATE_BOOL { get { if (!_KEY_CI_ACTION_ON_SYS_UPDATE_BOOLReady) { _KEY_CI_ACTION_ON_SYS_UPDATE_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CI_ACTION_ON_SYS_UPDATE_BOOL"); _KEY_CI_ACTION_ON_SYS_UPDATE_BOOLReady = true; } return _KEY_CI_ACTION_ON_SYS_UPDATE_BOOLContent; } }
        private static Java.Lang.String _KEY_CI_ACTION_ON_SYS_UPDATE_BOOLContent = default;
        private static bool _KEY_CI_ACTION_ON_SYS_UPDATE_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CI_ACTION_ON_SYS_UPDATE_EXTRA_STRING"/>
        /// </summary>
        public static Java.Lang.String KEY_CI_ACTION_ON_SYS_UPDATE_EXTRA_STRING { get { if (!_KEY_CI_ACTION_ON_SYS_UPDATE_EXTRA_STRINGReady) { _KEY_CI_ACTION_ON_SYS_UPDATE_EXTRA_STRINGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CI_ACTION_ON_SYS_UPDATE_EXTRA_STRING"); _KEY_CI_ACTION_ON_SYS_UPDATE_EXTRA_STRINGReady = true; } return _KEY_CI_ACTION_ON_SYS_UPDATE_EXTRA_STRINGContent; } }
        private static Java.Lang.String _KEY_CI_ACTION_ON_SYS_UPDATE_EXTRA_STRINGContent = default;
        private static bool _KEY_CI_ACTION_ON_SYS_UPDATE_EXTRA_STRINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CI_ACTION_ON_SYS_UPDATE_EXTRA_VAL_STRING"/>
        /// </summary>
        public static Java.Lang.String KEY_CI_ACTION_ON_SYS_UPDATE_EXTRA_VAL_STRING { get { if (!_KEY_CI_ACTION_ON_SYS_UPDATE_EXTRA_VAL_STRINGReady) { _KEY_CI_ACTION_ON_SYS_UPDATE_EXTRA_VAL_STRINGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CI_ACTION_ON_SYS_UPDATE_EXTRA_VAL_STRING"); _KEY_CI_ACTION_ON_SYS_UPDATE_EXTRA_VAL_STRINGReady = true; } return _KEY_CI_ACTION_ON_SYS_UPDATE_EXTRA_VAL_STRINGContent; } }
        private static Java.Lang.String _KEY_CI_ACTION_ON_SYS_UPDATE_EXTRA_VAL_STRINGContent = default;
        private static bool _KEY_CI_ACTION_ON_SYS_UPDATE_EXTRA_VAL_STRINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CI_ACTION_ON_SYS_UPDATE_INTENT_STRING"/>
        /// </summary>
        public static Java.Lang.String KEY_CI_ACTION_ON_SYS_UPDATE_INTENT_STRING { get { if (!_KEY_CI_ACTION_ON_SYS_UPDATE_INTENT_STRINGReady) { _KEY_CI_ACTION_ON_SYS_UPDATE_INTENT_STRINGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CI_ACTION_ON_SYS_UPDATE_INTENT_STRING"); _KEY_CI_ACTION_ON_SYS_UPDATE_INTENT_STRINGReady = true; } return _KEY_CI_ACTION_ON_SYS_UPDATE_INTENT_STRINGContent; } }
        private static Java.Lang.String _KEY_CI_ACTION_ON_SYS_UPDATE_INTENT_STRINGContent = default;
        private static bool _KEY_CI_ACTION_ON_SYS_UPDATE_INTENT_STRINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CONFIG_IMS_MMTEL_PACKAGE_OVERRIDE_STRING"/>
        /// </summary>
        public static Java.Lang.String KEY_CONFIG_IMS_MMTEL_PACKAGE_OVERRIDE_STRING { get { if (!_KEY_CONFIG_IMS_MMTEL_PACKAGE_OVERRIDE_STRINGReady) { _KEY_CONFIG_IMS_MMTEL_PACKAGE_OVERRIDE_STRINGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CONFIG_IMS_MMTEL_PACKAGE_OVERRIDE_STRING"); _KEY_CONFIG_IMS_MMTEL_PACKAGE_OVERRIDE_STRINGReady = true; } return _KEY_CONFIG_IMS_MMTEL_PACKAGE_OVERRIDE_STRINGContent; } }
        private static Java.Lang.String _KEY_CONFIG_IMS_MMTEL_PACKAGE_OVERRIDE_STRINGContent = default;
        private static bool _KEY_CONFIG_IMS_MMTEL_PACKAGE_OVERRIDE_STRINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CONFIG_IMS_PACKAGE_OVERRIDE_STRING"/>
        /// </summary>
        [global::System.Obsolete()]
        public static Java.Lang.String KEY_CONFIG_IMS_PACKAGE_OVERRIDE_STRING { get { if (!_KEY_CONFIG_IMS_PACKAGE_OVERRIDE_STRINGReady) { _KEY_CONFIG_IMS_PACKAGE_OVERRIDE_STRINGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CONFIG_IMS_PACKAGE_OVERRIDE_STRING"); _KEY_CONFIG_IMS_PACKAGE_OVERRIDE_STRINGReady = true; } return _KEY_CONFIG_IMS_PACKAGE_OVERRIDE_STRINGContent; } }
        private static Java.Lang.String _KEY_CONFIG_IMS_PACKAGE_OVERRIDE_STRINGContent = default;
        private static bool _KEY_CONFIG_IMS_PACKAGE_OVERRIDE_STRINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CONFIG_IMS_RCS_PACKAGE_OVERRIDE_STRING"/>
        /// </summary>
        public static Java.Lang.String KEY_CONFIG_IMS_RCS_PACKAGE_OVERRIDE_STRING { get { if (!_KEY_CONFIG_IMS_RCS_PACKAGE_OVERRIDE_STRINGReady) { _KEY_CONFIG_IMS_RCS_PACKAGE_OVERRIDE_STRINGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CONFIG_IMS_RCS_PACKAGE_OVERRIDE_STRING"); _KEY_CONFIG_IMS_RCS_PACKAGE_OVERRIDE_STRINGReady = true; } return _KEY_CONFIG_IMS_RCS_PACKAGE_OVERRIDE_STRINGContent; } }
        private static Java.Lang.String _KEY_CONFIG_IMS_RCS_PACKAGE_OVERRIDE_STRINGContent = default;
        private static bool _KEY_CONFIG_IMS_RCS_PACKAGE_OVERRIDE_STRINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CONFIG_PLANS_PACKAGE_OVERRIDE_STRING"/>
        /// </summary>
        public static Java.Lang.String KEY_CONFIG_PLANS_PACKAGE_OVERRIDE_STRING { get { if (!_KEY_CONFIG_PLANS_PACKAGE_OVERRIDE_STRINGReady) { _KEY_CONFIG_PLANS_PACKAGE_OVERRIDE_STRINGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CONFIG_PLANS_PACKAGE_OVERRIDE_STRING"); _KEY_CONFIG_PLANS_PACKAGE_OVERRIDE_STRINGReady = true; } return _KEY_CONFIG_PLANS_PACKAGE_OVERRIDE_STRINGContent; } }
        private static Java.Lang.String _KEY_CONFIG_PLANS_PACKAGE_OVERRIDE_STRINGContent = default;
        private static bool _KEY_CONFIG_PLANS_PACKAGE_OVERRIDE_STRINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CONFIG_TELEPHONY_USE_OWN_NUMBER_FOR_VOICEMAIL_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_CONFIG_TELEPHONY_USE_OWN_NUMBER_FOR_VOICEMAIL_BOOL { get { if (!_KEY_CONFIG_TELEPHONY_USE_OWN_NUMBER_FOR_VOICEMAIL_BOOLReady) { _KEY_CONFIG_TELEPHONY_USE_OWN_NUMBER_FOR_VOICEMAIL_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CONFIG_TELEPHONY_USE_OWN_NUMBER_FOR_VOICEMAIL_BOOL"); _KEY_CONFIG_TELEPHONY_USE_OWN_NUMBER_FOR_VOICEMAIL_BOOLReady = true; } return _KEY_CONFIG_TELEPHONY_USE_OWN_NUMBER_FOR_VOICEMAIL_BOOLContent; } }
        private static Java.Lang.String _KEY_CONFIG_TELEPHONY_USE_OWN_NUMBER_FOR_VOICEMAIL_BOOLContent = default;
        private static bool _KEY_CONFIG_TELEPHONY_USE_OWN_NUMBER_FOR_VOICEMAIL_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CONFIG_WIFI_DISABLE_IN_ECBM"/>
        /// </summary>
        public static Java.Lang.String KEY_CONFIG_WIFI_DISABLE_IN_ECBM { get { if (!_KEY_CONFIG_WIFI_DISABLE_IN_ECBMReady) { _KEY_CONFIG_WIFI_DISABLE_IN_ECBMContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CONFIG_WIFI_DISABLE_IN_ECBM"); _KEY_CONFIG_WIFI_DISABLE_IN_ECBMReady = true; } return _KEY_CONFIG_WIFI_DISABLE_IN_ECBMContent; } }
        private static Java.Lang.String _KEY_CONFIG_WIFI_DISABLE_IN_ECBMContent = default;
        private static bool _KEY_CONFIG_WIFI_DISABLE_IN_ECBMReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CROSS_SIM_SPN_FORMAT_INT"/>
        /// </summary>
        public static Java.Lang.String KEY_CROSS_SIM_SPN_FORMAT_INT { get { if (!_KEY_CROSS_SIM_SPN_FORMAT_INTReady) { _KEY_CROSS_SIM_SPN_FORMAT_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CROSS_SIM_SPN_FORMAT_INT"); _KEY_CROSS_SIM_SPN_FORMAT_INTReady = true; } return _KEY_CROSS_SIM_SPN_FORMAT_INTContent; } }
        private static Java.Lang.String _KEY_CROSS_SIM_SPN_FORMAT_INTContent = default;
        private static bool _KEY_CROSS_SIM_SPN_FORMAT_INTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_CSP_ENABLED_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_CSP_ENABLED_BOOL { get { if (!_KEY_CSP_ENABLED_BOOLReady) { _KEY_CSP_ENABLED_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CSP_ENABLED_BOOL"); _KEY_CSP_ENABLED_BOOLReady = true; } return _KEY_CSP_ENABLED_BOOLContent; } }
        private static Java.Lang.String _KEY_CSP_ENABLED_BOOLContent = default;
        private static bool _KEY_CSP_ENABLED_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_DATA_LIMIT_NOTIFICATION_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_DATA_LIMIT_NOTIFICATION_BOOL { get { if (!_KEY_DATA_LIMIT_NOTIFICATION_BOOLReady) { _KEY_DATA_LIMIT_NOTIFICATION_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_DATA_LIMIT_NOTIFICATION_BOOL"); _KEY_DATA_LIMIT_NOTIFICATION_BOOLReady = true; } return _KEY_DATA_LIMIT_NOTIFICATION_BOOLContent; } }
        private static Java.Lang.String _KEY_DATA_LIMIT_NOTIFICATION_BOOLContent = default;
        private static bool _KEY_DATA_LIMIT_NOTIFICATION_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_DATA_LIMIT_THRESHOLD_BYTES_LONG"/>
        /// </summary>
        public static Java.Lang.String KEY_DATA_LIMIT_THRESHOLD_BYTES_LONG { get { if (!_KEY_DATA_LIMIT_THRESHOLD_BYTES_LONGReady) { _KEY_DATA_LIMIT_THRESHOLD_BYTES_LONGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_DATA_LIMIT_THRESHOLD_BYTES_LONG"); _KEY_DATA_LIMIT_THRESHOLD_BYTES_LONGReady = true; } return _KEY_DATA_LIMIT_THRESHOLD_BYTES_LONGContent; } }
        private static Java.Lang.String _KEY_DATA_LIMIT_THRESHOLD_BYTES_LONGContent = default;
        private static bool _KEY_DATA_LIMIT_THRESHOLD_BYTES_LONGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_DATA_RAPID_NOTIFICATION_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_DATA_RAPID_NOTIFICATION_BOOL { get { if (!_KEY_DATA_RAPID_NOTIFICATION_BOOLReady) { _KEY_DATA_RAPID_NOTIFICATION_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_DATA_RAPID_NOTIFICATION_BOOL"); _KEY_DATA_RAPID_NOTIFICATION_BOOLReady = true; } return _KEY_DATA_RAPID_NOTIFICATION_BOOLContent; } }
        private static Java.Lang.String _KEY_DATA_RAPID_NOTIFICATION_BOOLContent = default;
        private static bool _KEY_DATA_RAPID_NOTIFICATION_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_DATA_SWITCH_VALIDATION_MIN_INTERVAL_MILLIS_LONG"/>
        /// </summary>
        public static Java.Lang.String KEY_DATA_SWITCH_VALIDATION_MIN_INTERVAL_MILLIS_LONG { get { if (!_KEY_DATA_SWITCH_VALIDATION_MIN_INTERVAL_MILLIS_LONGReady) { _KEY_DATA_SWITCH_VALIDATION_MIN_INTERVAL_MILLIS_LONGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_DATA_SWITCH_VALIDATION_MIN_INTERVAL_MILLIS_LONG"); _KEY_DATA_SWITCH_VALIDATION_MIN_INTERVAL_MILLIS_LONGReady = true; } return _KEY_DATA_SWITCH_VALIDATION_MIN_INTERVAL_MILLIS_LONGContent; } }
        private static Java.Lang.String _KEY_DATA_SWITCH_VALIDATION_MIN_INTERVAL_MILLIS_LONGContent = default;
        private static bool _KEY_DATA_SWITCH_VALIDATION_MIN_INTERVAL_MILLIS_LONGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_DATA_SWITCH_VALIDATION_TIMEOUT_LONG"/>
        /// </summary>
        public static Java.Lang.String KEY_DATA_SWITCH_VALIDATION_TIMEOUT_LONG { get { if (!_KEY_DATA_SWITCH_VALIDATION_TIMEOUT_LONGReady) { _KEY_DATA_SWITCH_VALIDATION_TIMEOUT_LONGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_DATA_SWITCH_VALIDATION_TIMEOUT_LONG"); _KEY_DATA_SWITCH_VALIDATION_TIMEOUT_LONGReady = true; } return _KEY_DATA_SWITCH_VALIDATION_TIMEOUT_LONGContent; } }
        private static Java.Lang.String _KEY_DATA_SWITCH_VALIDATION_TIMEOUT_LONGContent = default;
        private static bool _KEY_DATA_SWITCH_VALIDATION_TIMEOUT_LONGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_DATA_WARNING_NOTIFICATION_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_DATA_WARNING_NOTIFICATION_BOOL { get { if (!_KEY_DATA_WARNING_NOTIFICATION_BOOLReady) { _KEY_DATA_WARNING_NOTIFICATION_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_DATA_WARNING_NOTIFICATION_BOOL"); _KEY_DATA_WARNING_NOTIFICATION_BOOLReady = true; } return _KEY_DATA_WARNING_NOTIFICATION_BOOLContent; } }
        private static Java.Lang.String _KEY_DATA_WARNING_NOTIFICATION_BOOLContent = default;
        private static bool _KEY_DATA_WARNING_NOTIFICATION_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_DATA_WARNING_THRESHOLD_BYTES_LONG"/>
        /// </summary>
        public static Java.Lang.String KEY_DATA_WARNING_THRESHOLD_BYTES_LONG { get { if (!_KEY_DATA_WARNING_THRESHOLD_BYTES_LONGReady) { _KEY_DATA_WARNING_THRESHOLD_BYTES_LONGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_DATA_WARNING_THRESHOLD_BYTES_LONG"); _KEY_DATA_WARNING_THRESHOLD_BYTES_LONGReady = true; } return _KEY_DATA_WARNING_THRESHOLD_BYTES_LONGContent; } }
        private static Java.Lang.String _KEY_DATA_WARNING_THRESHOLD_BYTES_LONGContent = default;
        private static bool _KEY_DATA_WARNING_THRESHOLD_BYTES_LONGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_DEFAULT_SIM_CALL_MANAGER_STRING"/>
        /// </summary>
        public static Java.Lang.String KEY_DEFAULT_SIM_CALL_MANAGER_STRING { get { if (!_KEY_DEFAULT_SIM_CALL_MANAGER_STRINGReady) { _KEY_DEFAULT_SIM_CALL_MANAGER_STRINGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_DEFAULT_SIM_CALL_MANAGER_STRING"); _KEY_DEFAULT_SIM_CALL_MANAGER_STRINGReady = true; } return _KEY_DEFAULT_SIM_CALL_MANAGER_STRINGContent; } }
        private static Java.Lang.String _KEY_DEFAULT_SIM_CALL_MANAGER_STRINGContent = default;
        private static bool _KEY_DEFAULT_SIM_CALL_MANAGER_STRINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_DEFAULT_VM_NUMBER_ROAMING_AND_IMS_UNREGISTERED_STRING"/>
        /// </summary>
        public static Java.Lang.String KEY_DEFAULT_VM_NUMBER_ROAMING_AND_IMS_UNREGISTERED_STRING { get { if (!_KEY_DEFAULT_VM_NUMBER_ROAMING_AND_IMS_UNREGISTERED_STRINGReady) { _KEY_DEFAULT_VM_NUMBER_ROAMING_AND_IMS_UNREGISTERED_STRINGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_DEFAULT_VM_NUMBER_ROAMING_AND_IMS_UNREGISTERED_STRING"); _KEY_DEFAULT_VM_NUMBER_ROAMING_AND_IMS_UNREGISTERED_STRINGReady = true; } return _KEY_DEFAULT_VM_NUMBER_ROAMING_AND_IMS_UNREGISTERED_STRINGContent; } }
        private static Java.Lang.String _KEY_DEFAULT_VM_NUMBER_ROAMING_AND_IMS_UNREGISTERED_STRINGContent = default;
        private static bool _KEY_DEFAULT_VM_NUMBER_ROAMING_AND_IMS_UNREGISTERED_STRINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_DEFAULT_VM_NUMBER_STRING"/>
        /// </summary>
        public static Java.Lang.String KEY_DEFAULT_VM_NUMBER_STRING { get { if (!_KEY_DEFAULT_VM_NUMBER_STRINGReady) { _KEY_DEFAULT_VM_NUMBER_STRINGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_DEFAULT_VM_NUMBER_STRING"); _KEY_DEFAULT_VM_NUMBER_STRINGReady = true; } return _KEY_DEFAULT_VM_NUMBER_STRINGContent; } }
        private static Java.Lang.String _KEY_DEFAULT_VM_NUMBER_STRINGContent = default;
        private static bool _KEY_DEFAULT_VM_NUMBER_STRINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_DIAL_STRING_REPLACE_STRING_ARRAY"/>
        /// </summary>
        public static Java.Lang.String KEY_DIAL_STRING_REPLACE_STRING_ARRAY { get { if (!_KEY_DIAL_STRING_REPLACE_STRING_ARRAYReady) { _KEY_DIAL_STRING_REPLACE_STRING_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_DIAL_STRING_REPLACE_STRING_ARRAY"); _KEY_DIAL_STRING_REPLACE_STRING_ARRAYReady = true; } return _KEY_DIAL_STRING_REPLACE_STRING_ARRAYContent; } }
        private static Java.Lang.String _KEY_DIAL_STRING_REPLACE_STRING_ARRAYContent = default;
        private static bool _KEY_DIAL_STRING_REPLACE_STRING_ARRAYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_DISABLE_CDMA_ACTIVATION_CODE_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_DISABLE_CDMA_ACTIVATION_CODE_BOOL { get { if (!_KEY_DISABLE_CDMA_ACTIVATION_CODE_BOOLReady) { _KEY_DISABLE_CDMA_ACTIVATION_CODE_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_DISABLE_CDMA_ACTIVATION_CODE_BOOL"); _KEY_DISABLE_CDMA_ACTIVATION_CODE_BOOLReady = true; } return _KEY_DISABLE_CDMA_ACTIVATION_CODE_BOOLContent; } }
        private static Java.Lang.String _KEY_DISABLE_CDMA_ACTIVATION_CODE_BOOLContent = default;
        private static bool _KEY_DISABLE_CDMA_ACTIVATION_CODE_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_DISABLE_CHARGE_INDICATION_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_DISABLE_CHARGE_INDICATION_BOOL { get { if (!_KEY_DISABLE_CHARGE_INDICATION_BOOLReady) { _KEY_DISABLE_CHARGE_INDICATION_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_DISABLE_CHARGE_INDICATION_BOOL"); _KEY_DISABLE_CHARGE_INDICATION_BOOLReady = true; } return _KEY_DISABLE_CHARGE_INDICATION_BOOLContent; } }
        private static Java.Lang.String _KEY_DISABLE_CHARGE_INDICATION_BOOLContent = default;
        private static bool _KEY_DISABLE_CHARGE_INDICATION_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_DISABLE_SUPPLEMENTARY_SERVICES_IN_AIRPLANE_MODE_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_DISABLE_SUPPLEMENTARY_SERVICES_IN_AIRPLANE_MODE_BOOL { get { if (!_KEY_DISABLE_SUPPLEMENTARY_SERVICES_IN_AIRPLANE_MODE_BOOLReady) { _KEY_DISABLE_SUPPLEMENTARY_SERVICES_IN_AIRPLANE_MODE_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_DISABLE_SUPPLEMENTARY_SERVICES_IN_AIRPLANE_MODE_BOOL"); _KEY_DISABLE_SUPPLEMENTARY_SERVICES_IN_AIRPLANE_MODE_BOOLReady = true; } return _KEY_DISABLE_SUPPLEMENTARY_SERVICES_IN_AIRPLANE_MODE_BOOLContent; } }
        private static Java.Lang.String _KEY_DISABLE_SUPPLEMENTARY_SERVICES_IN_AIRPLANE_MODE_BOOLContent = default;
        private static bool _KEY_DISABLE_SUPPLEMENTARY_SERVICES_IN_AIRPLANE_MODE_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_DISCONNECT_CAUSE_PLAY_BUSYTONE_INT_ARRAY"/>
        /// </summary>
        public static Java.Lang.String KEY_DISCONNECT_CAUSE_PLAY_BUSYTONE_INT_ARRAY { get { if (!_KEY_DISCONNECT_CAUSE_PLAY_BUSYTONE_INT_ARRAYReady) { _KEY_DISCONNECT_CAUSE_PLAY_BUSYTONE_INT_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_DISCONNECT_CAUSE_PLAY_BUSYTONE_INT_ARRAY"); _KEY_DISCONNECT_CAUSE_PLAY_BUSYTONE_INT_ARRAYReady = true; } return _KEY_DISCONNECT_CAUSE_PLAY_BUSYTONE_INT_ARRAYContent; } }
        private static Java.Lang.String _KEY_DISCONNECT_CAUSE_PLAY_BUSYTONE_INT_ARRAYContent = default;
        private static bool _KEY_DISCONNECT_CAUSE_PLAY_BUSYTONE_INT_ARRAYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_DISPLAY_CALL_STRENGTH_INDICATOR_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_DISPLAY_CALL_STRENGTH_INDICATOR_BOOL { get { if (!_KEY_DISPLAY_CALL_STRENGTH_INDICATOR_BOOLReady) { _KEY_DISPLAY_CALL_STRENGTH_INDICATOR_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_DISPLAY_CALL_STRENGTH_INDICATOR_BOOL"); _KEY_DISPLAY_CALL_STRENGTH_INDICATOR_BOOLReady = true; } return _KEY_DISPLAY_CALL_STRENGTH_INDICATOR_BOOLContent; } }
        private static Java.Lang.String _KEY_DISPLAY_CALL_STRENGTH_INDICATOR_BOOLContent = default;
        private static bool _KEY_DISPLAY_CALL_STRENGTH_INDICATOR_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_DISPLAY_HD_AUDIO_PROPERTY_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_DISPLAY_HD_AUDIO_PROPERTY_BOOL { get { if (!_KEY_DISPLAY_HD_AUDIO_PROPERTY_BOOLReady) { _KEY_DISPLAY_HD_AUDIO_PROPERTY_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_DISPLAY_HD_AUDIO_PROPERTY_BOOL"); _KEY_DISPLAY_HD_AUDIO_PROPERTY_BOOLReady = true; } return _KEY_DISPLAY_HD_AUDIO_PROPERTY_BOOLContent; } }
        private static Java.Lang.String _KEY_DISPLAY_HD_AUDIO_PROPERTY_BOOLContent = default;
        private static bool _KEY_DISPLAY_HD_AUDIO_PROPERTY_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_DROP_VIDEO_CALL_WHEN_ANSWERING_AUDIO_CALL_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_DROP_VIDEO_CALL_WHEN_ANSWERING_AUDIO_CALL_BOOL { get { if (!_KEY_DROP_VIDEO_CALL_WHEN_ANSWERING_AUDIO_CALL_BOOLReady) { _KEY_DROP_VIDEO_CALL_WHEN_ANSWERING_AUDIO_CALL_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_DROP_VIDEO_CALL_WHEN_ANSWERING_AUDIO_CALL_BOOL"); _KEY_DROP_VIDEO_CALL_WHEN_ANSWERING_AUDIO_CALL_BOOLReady = true; } return _KEY_DROP_VIDEO_CALL_WHEN_ANSWERING_AUDIO_CALL_BOOLContent; } }
        private static Java.Lang.String _KEY_DROP_VIDEO_CALL_WHEN_ANSWERING_AUDIO_CALL_BOOLContent = default;
        private static bool _KEY_DROP_VIDEO_CALL_WHEN_ANSWERING_AUDIO_CALL_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_DTMF_TYPE_ENABLED_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_DTMF_TYPE_ENABLED_BOOL { get { if (!_KEY_DTMF_TYPE_ENABLED_BOOLReady) { _KEY_DTMF_TYPE_ENABLED_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_DTMF_TYPE_ENABLED_BOOL"); _KEY_DTMF_TYPE_ENABLED_BOOLReady = true; } return _KEY_DTMF_TYPE_ENABLED_BOOLContent; } }
        private static Java.Lang.String _KEY_DTMF_TYPE_ENABLED_BOOLContent = default;
        private static bool _KEY_DTMF_TYPE_ENABLED_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_DURATION_BLOCKING_DISABLED_AFTER_EMERGENCY_INT"/>
        /// </summary>
        public static Java.Lang.String KEY_DURATION_BLOCKING_DISABLED_AFTER_EMERGENCY_INT { get { if (!_KEY_DURATION_BLOCKING_DISABLED_AFTER_EMERGENCY_INTReady) { _KEY_DURATION_BLOCKING_DISABLED_AFTER_EMERGENCY_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_DURATION_BLOCKING_DISABLED_AFTER_EMERGENCY_INT"); _KEY_DURATION_BLOCKING_DISABLED_AFTER_EMERGENCY_INTReady = true; } return _KEY_DURATION_BLOCKING_DISABLED_AFTER_EMERGENCY_INTContent; } }
        private static Java.Lang.String _KEY_DURATION_BLOCKING_DISABLED_AFTER_EMERGENCY_INTContent = default;
        private static bool _KEY_DURATION_BLOCKING_DISABLED_AFTER_EMERGENCY_INTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_EDITABLE_ENHANCED_4G_LTE_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_EDITABLE_ENHANCED_4G_LTE_BOOL { get { if (!_KEY_EDITABLE_ENHANCED_4G_LTE_BOOLReady) { _KEY_EDITABLE_ENHANCED_4G_LTE_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_EDITABLE_ENHANCED_4G_LTE_BOOL"); _KEY_EDITABLE_ENHANCED_4G_LTE_BOOLReady = true; } return _KEY_EDITABLE_ENHANCED_4G_LTE_BOOLContent; } }
        private static Java.Lang.String _KEY_EDITABLE_ENHANCED_4G_LTE_BOOLContent = default;
        private static bool _KEY_EDITABLE_ENHANCED_4G_LTE_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_EDITABLE_VOICEMAIL_NUMBER_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_EDITABLE_VOICEMAIL_NUMBER_BOOL { get { if (!_KEY_EDITABLE_VOICEMAIL_NUMBER_BOOLReady) { _KEY_EDITABLE_VOICEMAIL_NUMBER_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_EDITABLE_VOICEMAIL_NUMBER_BOOL"); _KEY_EDITABLE_VOICEMAIL_NUMBER_BOOLReady = true; } return _KEY_EDITABLE_VOICEMAIL_NUMBER_BOOLContent; } }
        private static Java.Lang.String _KEY_EDITABLE_VOICEMAIL_NUMBER_BOOLContent = default;
        private static bool _KEY_EDITABLE_VOICEMAIL_NUMBER_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_EDITABLE_VOICEMAIL_NUMBER_SETTING_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_EDITABLE_VOICEMAIL_NUMBER_SETTING_BOOL { get { if (!_KEY_EDITABLE_VOICEMAIL_NUMBER_SETTING_BOOLReady) { _KEY_EDITABLE_VOICEMAIL_NUMBER_SETTING_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_EDITABLE_VOICEMAIL_NUMBER_SETTING_BOOL"); _KEY_EDITABLE_VOICEMAIL_NUMBER_SETTING_BOOLReady = true; } return _KEY_EDITABLE_VOICEMAIL_NUMBER_SETTING_BOOLContent; } }
        private static Java.Lang.String _KEY_EDITABLE_VOICEMAIL_NUMBER_SETTING_BOOLContent = default;
        private static bool _KEY_EDITABLE_VOICEMAIL_NUMBER_SETTING_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_EDITABLE_WFC_MODE_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_EDITABLE_WFC_MODE_BOOL { get { if (!_KEY_EDITABLE_WFC_MODE_BOOLReady) { _KEY_EDITABLE_WFC_MODE_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_EDITABLE_WFC_MODE_BOOL"); _KEY_EDITABLE_WFC_MODE_BOOLReady = true; } return _KEY_EDITABLE_WFC_MODE_BOOLContent; } }
        private static Java.Lang.String _KEY_EDITABLE_WFC_MODE_BOOLContent = default;
        private static bool _KEY_EDITABLE_WFC_MODE_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_EDITABLE_WFC_ROAMING_MODE_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_EDITABLE_WFC_ROAMING_MODE_BOOL { get { if (!_KEY_EDITABLE_WFC_ROAMING_MODE_BOOLReady) { _KEY_EDITABLE_WFC_ROAMING_MODE_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_EDITABLE_WFC_ROAMING_MODE_BOOL"); _KEY_EDITABLE_WFC_ROAMING_MODE_BOOLReady = true; } return _KEY_EDITABLE_WFC_ROAMING_MODE_BOOLContent; } }
        private static Java.Lang.String _KEY_EDITABLE_WFC_ROAMING_MODE_BOOLContent = default;
        private static bool _KEY_EDITABLE_WFC_ROAMING_MODE_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_EMERGENCY_NOTIFICATION_DELAY_INT"/>
        /// </summary>
        public static Java.Lang.String KEY_EMERGENCY_NOTIFICATION_DELAY_INT { get { if (!_KEY_EMERGENCY_NOTIFICATION_DELAY_INTReady) { _KEY_EMERGENCY_NOTIFICATION_DELAY_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_EMERGENCY_NOTIFICATION_DELAY_INT"); _KEY_EMERGENCY_NOTIFICATION_DELAY_INTReady = true; } return _KEY_EMERGENCY_NOTIFICATION_DELAY_INTContent; } }
        private static Java.Lang.String _KEY_EMERGENCY_NOTIFICATION_DELAY_INTContent = default;
        private static bool _KEY_EMERGENCY_NOTIFICATION_DELAY_INTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_EMERGENCY_NUMBER_PREFIX_STRING_ARRAY"/>
        /// </summary>
        public static Java.Lang.String KEY_EMERGENCY_NUMBER_PREFIX_STRING_ARRAY { get { if (!_KEY_EMERGENCY_NUMBER_PREFIX_STRING_ARRAYReady) { _KEY_EMERGENCY_NUMBER_PREFIX_STRING_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_EMERGENCY_NUMBER_PREFIX_STRING_ARRAY"); _KEY_EMERGENCY_NUMBER_PREFIX_STRING_ARRAYReady = true; } return _KEY_EMERGENCY_NUMBER_PREFIX_STRING_ARRAYContent; } }
        private static Java.Lang.String _KEY_EMERGENCY_NUMBER_PREFIX_STRING_ARRAYContent = default;
        private static bool _KEY_EMERGENCY_NUMBER_PREFIX_STRING_ARRAYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_ENABLE_CROSS_SIM_CALLING_ON_OPPORTUNISTIC_DATA_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_ENABLE_CROSS_SIM_CALLING_ON_OPPORTUNISTIC_DATA_BOOL { get { if (!_KEY_ENABLE_CROSS_SIM_CALLING_ON_OPPORTUNISTIC_DATA_BOOLReady) { _KEY_ENABLE_CROSS_SIM_CALLING_ON_OPPORTUNISTIC_DATA_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_ENABLE_CROSS_SIM_CALLING_ON_OPPORTUNISTIC_DATA_BOOL"); _KEY_ENABLE_CROSS_SIM_CALLING_ON_OPPORTUNISTIC_DATA_BOOLReady = true; } return _KEY_ENABLE_CROSS_SIM_CALLING_ON_OPPORTUNISTIC_DATA_BOOLContent; } }
        private static Java.Lang.String _KEY_ENABLE_CROSS_SIM_CALLING_ON_OPPORTUNISTIC_DATA_BOOLContent = default;
        private static bool _KEY_ENABLE_CROSS_SIM_CALLING_ON_OPPORTUNISTIC_DATA_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_ENABLE_DIALER_KEY_VIBRATION_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_ENABLE_DIALER_KEY_VIBRATION_BOOL { get { if (!_KEY_ENABLE_DIALER_KEY_VIBRATION_BOOLReady) { _KEY_ENABLE_DIALER_KEY_VIBRATION_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_ENABLE_DIALER_KEY_VIBRATION_BOOL"); _KEY_ENABLE_DIALER_KEY_VIBRATION_BOOLReady = true; } return _KEY_ENABLE_DIALER_KEY_VIBRATION_BOOLContent; } }
        private static Java.Lang.String _KEY_ENABLE_DIALER_KEY_VIBRATION_BOOLContent = default;
        private static bool _KEY_ENABLE_DIALER_KEY_VIBRATION_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_ENHANCED_4G_LTE_ON_BY_DEFAULT_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_ENHANCED_4G_LTE_ON_BY_DEFAULT_BOOL { get { if (!_KEY_ENHANCED_4G_LTE_ON_BY_DEFAULT_BOOLReady) { _KEY_ENHANCED_4G_LTE_ON_BY_DEFAULT_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_ENHANCED_4G_LTE_ON_BY_DEFAULT_BOOL"); _KEY_ENHANCED_4G_LTE_ON_BY_DEFAULT_BOOLReady = true; } return _KEY_ENHANCED_4G_LTE_ON_BY_DEFAULT_BOOLContent; } }
        private static Java.Lang.String _KEY_ENHANCED_4G_LTE_ON_BY_DEFAULT_BOOLContent = default;
        private static bool _KEY_ENHANCED_4G_LTE_ON_BY_DEFAULT_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_ENHANCED_4G_LTE_TITLE_VARIANT_INT"/>
        /// </summary>
        public static Java.Lang.String KEY_ENHANCED_4G_LTE_TITLE_VARIANT_INT { get { if (!_KEY_ENHANCED_4G_LTE_TITLE_VARIANT_INTReady) { _KEY_ENHANCED_4G_LTE_TITLE_VARIANT_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_ENHANCED_4G_LTE_TITLE_VARIANT_INT"); _KEY_ENHANCED_4G_LTE_TITLE_VARIANT_INTReady = true; } return _KEY_ENHANCED_4G_LTE_TITLE_VARIANT_INTContent; } }
        private static Java.Lang.String _KEY_ENHANCED_4G_LTE_TITLE_VARIANT_INTContent = default;
        private static bool _KEY_ENHANCED_4G_LTE_TITLE_VARIANT_INTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_ESIM_DOWNLOAD_RETRY_BACKOFF_TIMER_SEC_INT"/>
        /// </summary>
        public static Java.Lang.String KEY_ESIM_DOWNLOAD_RETRY_BACKOFF_TIMER_SEC_INT { get { if (!_KEY_ESIM_DOWNLOAD_RETRY_BACKOFF_TIMER_SEC_INTReady) { _KEY_ESIM_DOWNLOAD_RETRY_BACKOFF_TIMER_SEC_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_ESIM_DOWNLOAD_RETRY_BACKOFF_TIMER_SEC_INT"); _KEY_ESIM_DOWNLOAD_RETRY_BACKOFF_TIMER_SEC_INTReady = true; } return _KEY_ESIM_DOWNLOAD_RETRY_BACKOFF_TIMER_SEC_INTContent; } }
        private static Java.Lang.String _KEY_ESIM_DOWNLOAD_RETRY_BACKOFF_TIMER_SEC_INTContent = default;
        private static bool _KEY_ESIM_DOWNLOAD_RETRY_BACKOFF_TIMER_SEC_INTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_ESIM_MAX_DOWNLOAD_RETRY_ATTEMPTS_INT"/>
        /// </summary>
        public static Java.Lang.String KEY_ESIM_MAX_DOWNLOAD_RETRY_ATTEMPTS_INT { get { if (!_KEY_ESIM_MAX_DOWNLOAD_RETRY_ATTEMPTS_INTReady) { _KEY_ESIM_MAX_DOWNLOAD_RETRY_ATTEMPTS_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_ESIM_MAX_DOWNLOAD_RETRY_ATTEMPTS_INT"); _KEY_ESIM_MAX_DOWNLOAD_RETRY_ATTEMPTS_INTReady = true; } return _KEY_ESIM_MAX_DOWNLOAD_RETRY_ATTEMPTS_INTContent; } }
        private static Java.Lang.String _KEY_ESIM_MAX_DOWNLOAD_RETRY_ATTEMPTS_INTContent = default;
        private static bool _KEY_ESIM_MAX_DOWNLOAD_RETRY_ATTEMPTS_INTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_FORCE_HOME_NETWORK_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_FORCE_HOME_NETWORK_BOOL { get { if (!_KEY_FORCE_HOME_NETWORK_BOOLReady) { _KEY_FORCE_HOME_NETWORK_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_FORCE_HOME_NETWORK_BOOL"); _KEY_FORCE_HOME_NETWORK_BOOLReady = true; } return _KEY_FORCE_HOME_NETWORK_BOOLContent; } }
        private static Java.Lang.String _KEY_FORCE_HOME_NETWORK_BOOLContent = default;
        private static bool _KEY_FORCE_HOME_NETWORK_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_GSM_DTMF_TONE_DELAY_INT"/>
        /// </summary>
        public static Java.Lang.String KEY_GSM_DTMF_TONE_DELAY_INT { get { if (!_KEY_GSM_DTMF_TONE_DELAY_INTReady) { _KEY_GSM_DTMF_TONE_DELAY_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_GSM_DTMF_TONE_DELAY_INT"); _KEY_GSM_DTMF_TONE_DELAY_INTReady = true; } return _KEY_GSM_DTMF_TONE_DELAY_INTContent; } }
        private static Java.Lang.String _KEY_GSM_DTMF_TONE_DELAY_INTContent = default;
        private static bool _KEY_GSM_DTMF_TONE_DELAY_INTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_GSM_NONROAMING_NETWORKS_STRING_ARRAY"/>
        /// </summary>
        public static Java.Lang.String KEY_GSM_NONROAMING_NETWORKS_STRING_ARRAY { get { if (!_KEY_GSM_NONROAMING_NETWORKS_STRING_ARRAYReady) { _KEY_GSM_NONROAMING_NETWORKS_STRING_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_GSM_NONROAMING_NETWORKS_STRING_ARRAY"); _KEY_GSM_NONROAMING_NETWORKS_STRING_ARRAYReady = true; } return _KEY_GSM_NONROAMING_NETWORKS_STRING_ARRAYContent; } }
        private static Java.Lang.String _KEY_GSM_NONROAMING_NETWORKS_STRING_ARRAYContent = default;
        private static bool _KEY_GSM_NONROAMING_NETWORKS_STRING_ARRAYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_GSM_ROAMING_NETWORKS_STRING_ARRAY"/>
        /// </summary>
        public static Java.Lang.String KEY_GSM_ROAMING_NETWORKS_STRING_ARRAY { get { if (!_KEY_GSM_ROAMING_NETWORKS_STRING_ARRAYReady) { _KEY_GSM_ROAMING_NETWORKS_STRING_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_GSM_ROAMING_NETWORKS_STRING_ARRAY"); _KEY_GSM_ROAMING_NETWORKS_STRING_ARRAYReady = true; } return _KEY_GSM_ROAMING_NETWORKS_STRING_ARRAYContent; } }
        private static Java.Lang.String _KEY_GSM_ROAMING_NETWORKS_STRING_ARRAYContent = default;
        private static bool _KEY_GSM_ROAMING_NETWORKS_STRING_ARRAYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_HAS_IN_CALL_NOISE_SUPPRESSION_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_HAS_IN_CALL_NOISE_SUPPRESSION_BOOL { get { if (!_KEY_HAS_IN_CALL_NOISE_SUPPRESSION_BOOLReady) { _KEY_HAS_IN_CALL_NOISE_SUPPRESSION_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_HAS_IN_CALL_NOISE_SUPPRESSION_BOOL"); _KEY_HAS_IN_CALL_NOISE_SUPPRESSION_BOOLReady = true; } return _KEY_HAS_IN_CALL_NOISE_SUPPRESSION_BOOLContent; } }
        private static Java.Lang.String _KEY_HAS_IN_CALL_NOISE_SUPPRESSION_BOOLContent = default;
        private static bool _KEY_HAS_IN_CALL_NOISE_SUPPRESSION_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_HIDE_CARRIER_NETWORK_SETTINGS_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_HIDE_CARRIER_NETWORK_SETTINGS_BOOL { get { if (!_KEY_HIDE_CARRIER_NETWORK_SETTINGS_BOOLReady) { _KEY_HIDE_CARRIER_NETWORK_SETTINGS_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_HIDE_CARRIER_NETWORK_SETTINGS_BOOL"); _KEY_HIDE_CARRIER_NETWORK_SETTINGS_BOOLReady = true; } return _KEY_HIDE_CARRIER_NETWORK_SETTINGS_BOOLContent; } }
        private static Java.Lang.String _KEY_HIDE_CARRIER_NETWORK_SETTINGS_BOOLContent = default;
        private static bool _KEY_HIDE_CARRIER_NETWORK_SETTINGS_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_HIDE_ENABLE_2G"/>
        /// </summary>
        [global::System.Obsolete()]
        public static Java.Lang.String KEY_HIDE_ENABLE_2G { get { if (!_KEY_HIDE_ENABLE_2GReady) { _KEY_HIDE_ENABLE_2GContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_HIDE_ENABLE_2G"); _KEY_HIDE_ENABLE_2GReady = true; } return _KEY_HIDE_ENABLE_2GContent; } }
        private static Java.Lang.String _KEY_HIDE_ENABLE_2GContent = default;
        private static bool _KEY_HIDE_ENABLE_2GReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_HIDE_ENHANCED_4G_LTE_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_HIDE_ENHANCED_4G_LTE_BOOL { get { if (!_KEY_HIDE_ENHANCED_4G_LTE_BOOLReady) { _KEY_HIDE_ENHANCED_4G_LTE_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_HIDE_ENHANCED_4G_LTE_BOOL"); _KEY_HIDE_ENHANCED_4G_LTE_BOOLReady = true; } return _KEY_HIDE_ENHANCED_4G_LTE_BOOLContent; } }
        private static Java.Lang.String _KEY_HIDE_ENHANCED_4G_LTE_BOOLContent = default;
        private static bool _KEY_HIDE_ENHANCED_4G_LTE_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_HIDE_IMS_APN_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_HIDE_IMS_APN_BOOL { get { if (!_KEY_HIDE_IMS_APN_BOOLReady) { _KEY_HIDE_IMS_APN_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_HIDE_IMS_APN_BOOL"); _KEY_HIDE_IMS_APN_BOOLReady = true; } return _KEY_HIDE_IMS_APN_BOOLContent; } }
        private static Java.Lang.String _KEY_HIDE_IMS_APN_BOOLContent = default;
        private static bool _KEY_HIDE_IMS_APN_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_HIDE_LTE_PLUS_DATA_ICON_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_HIDE_LTE_PLUS_DATA_ICON_BOOL { get { if (!_KEY_HIDE_LTE_PLUS_DATA_ICON_BOOLReady) { _KEY_HIDE_LTE_PLUS_DATA_ICON_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_HIDE_LTE_PLUS_DATA_ICON_BOOL"); _KEY_HIDE_LTE_PLUS_DATA_ICON_BOOLReady = true; } return _KEY_HIDE_LTE_PLUS_DATA_ICON_BOOLContent; } }
        private static Java.Lang.String _KEY_HIDE_LTE_PLUS_DATA_ICON_BOOLContent = default;
        private static bool _KEY_HIDE_LTE_PLUS_DATA_ICON_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_HIDE_PREFERRED_NETWORK_TYPE_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_HIDE_PREFERRED_NETWORK_TYPE_BOOL { get { if (!_KEY_HIDE_PREFERRED_NETWORK_TYPE_BOOLReady) { _KEY_HIDE_PREFERRED_NETWORK_TYPE_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_HIDE_PREFERRED_NETWORK_TYPE_BOOL"); _KEY_HIDE_PREFERRED_NETWORK_TYPE_BOOLReady = true; } return _KEY_HIDE_PREFERRED_NETWORK_TYPE_BOOLContent; } }
        private static Java.Lang.String _KEY_HIDE_PREFERRED_NETWORK_TYPE_BOOLContent = default;
        private static bool _KEY_HIDE_PREFERRED_NETWORK_TYPE_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_HIDE_PRESET_APN_DETAILS_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_HIDE_PRESET_APN_DETAILS_BOOL { get { if (!_KEY_HIDE_PRESET_APN_DETAILS_BOOLReady) { _KEY_HIDE_PRESET_APN_DETAILS_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_HIDE_PRESET_APN_DETAILS_BOOL"); _KEY_HIDE_PRESET_APN_DETAILS_BOOLReady = true; } return _KEY_HIDE_PRESET_APN_DETAILS_BOOLContent; } }
        private static Java.Lang.String _KEY_HIDE_PRESET_APN_DETAILS_BOOLContent = default;
        private static bool _KEY_HIDE_PRESET_APN_DETAILS_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_HIDE_SIM_LOCK_SETTINGS_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_HIDE_SIM_LOCK_SETTINGS_BOOL { get { if (!_KEY_HIDE_SIM_LOCK_SETTINGS_BOOLReady) { _KEY_HIDE_SIM_LOCK_SETTINGS_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_HIDE_SIM_LOCK_SETTINGS_BOOL"); _KEY_HIDE_SIM_LOCK_SETTINGS_BOOLReady = true; } return _KEY_HIDE_SIM_LOCK_SETTINGS_BOOLContent; } }
        private static Java.Lang.String _KEY_HIDE_SIM_LOCK_SETTINGS_BOOLContent = default;
        private static bool _KEY_HIDE_SIM_LOCK_SETTINGS_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_HIDE_TTY_HCO_VCO_WITH_RTT_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_HIDE_TTY_HCO_VCO_WITH_RTT_BOOL { get { if (!_KEY_HIDE_TTY_HCO_VCO_WITH_RTT_BOOLReady) { _KEY_HIDE_TTY_HCO_VCO_WITH_RTT_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_HIDE_TTY_HCO_VCO_WITH_RTT_BOOL"); _KEY_HIDE_TTY_HCO_VCO_WITH_RTT_BOOLReady = true; } return _KEY_HIDE_TTY_HCO_VCO_WITH_RTT_BOOLContent; } }
        private static Java.Lang.String _KEY_HIDE_TTY_HCO_VCO_WITH_RTT_BOOLContent = default;
        private static bool _KEY_HIDE_TTY_HCO_VCO_WITH_RTT_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_IGNORE_DATA_ENABLED_CHANGED_FOR_VIDEO_CALLS"/>
        /// </summary>
        public static Java.Lang.String KEY_IGNORE_DATA_ENABLED_CHANGED_FOR_VIDEO_CALLS { get { if (!_KEY_IGNORE_DATA_ENABLED_CHANGED_FOR_VIDEO_CALLSReady) { _KEY_IGNORE_DATA_ENABLED_CHANGED_FOR_VIDEO_CALLSContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_IGNORE_DATA_ENABLED_CHANGED_FOR_VIDEO_CALLS"); _KEY_IGNORE_DATA_ENABLED_CHANGED_FOR_VIDEO_CALLSReady = true; } return _KEY_IGNORE_DATA_ENABLED_CHANGED_FOR_VIDEO_CALLSContent; } }
        private static Java.Lang.String _KEY_IGNORE_DATA_ENABLED_CHANGED_FOR_VIDEO_CALLSContent = default;
        private static bool _KEY_IGNORE_DATA_ENABLED_CHANGED_FOR_VIDEO_CALLSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_IGNORE_RTT_MODE_SETTING_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_IGNORE_RTT_MODE_SETTING_BOOL { get { if (!_KEY_IGNORE_RTT_MODE_SETTING_BOOLReady) { _KEY_IGNORE_RTT_MODE_SETTING_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_IGNORE_RTT_MODE_SETTING_BOOL"); _KEY_IGNORE_RTT_MODE_SETTING_BOOLReady = true; } return _KEY_IGNORE_RTT_MODE_SETTING_BOOLContent; } }
        private static Java.Lang.String _KEY_IGNORE_RTT_MODE_SETTING_BOOLContent = default;
        private static bool _KEY_IGNORE_RTT_MODE_SETTING_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_IGNORE_SIM_NETWORK_LOCKED_EVENTS_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_IGNORE_SIM_NETWORK_LOCKED_EVENTS_BOOL { get { if (!_KEY_IGNORE_SIM_NETWORK_LOCKED_EVENTS_BOOLReady) { _KEY_IGNORE_SIM_NETWORK_LOCKED_EVENTS_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_IGNORE_SIM_NETWORK_LOCKED_EVENTS_BOOL"); _KEY_IGNORE_SIM_NETWORK_LOCKED_EVENTS_BOOLReady = true; } return _KEY_IGNORE_SIM_NETWORK_LOCKED_EVENTS_BOOLContent; } }
        private static Java.Lang.String _KEY_IGNORE_SIM_NETWORK_LOCKED_EVENTS_BOOLContent = default;
        private static bool _KEY_IGNORE_SIM_NETWORK_LOCKED_EVENTS_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_IMS_CONFERENCE_SIZE_LIMIT_INT"/>
        /// </summary>
        public static Java.Lang.String KEY_IMS_CONFERENCE_SIZE_LIMIT_INT { get { if (!_KEY_IMS_CONFERENCE_SIZE_LIMIT_INTReady) { _KEY_IMS_CONFERENCE_SIZE_LIMIT_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_IMS_CONFERENCE_SIZE_LIMIT_INT"); _KEY_IMS_CONFERENCE_SIZE_LIMIT_INTReady = true; } return _KEY_IMS_CONFERENCE_SIZE_LIMIT_INTContent; } }
        private static Java.Lang.String _KEY_IMS_CONFERENCE_SIZE_LIMIT_INTContent = default;
        private static bool _KEY_IMS_CONFERENCE_SIZE_LIMIT_INTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_IMS_DTMF_TONE_DELAY_INT"/>
        /// </summary>
        public static Java.Lang.String KEY_IMS_DTMF_TONE_DELAY_INT { get { if (!_KEY_IMS_DTMF_TONE_DELAY_INTReady) { _KEY_IMS_DTMF_TONE_DELAY_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_IMS_DTMF_TONE_DELAY_INT"); _KEY_IMS_DTMF_TONE_DELAY_INTReady = true; } return _KEY_IMS_DTMF_TONE_DELAY_INTContent; } }
        private static Java.Lang.String _KEY_IMS_DTMF_TONE_DELAY_INTContent = default;
        private static bool _KEY_IMS_DTMF_TONE_DELAY_INTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_INCLUDE_LTE_FOR_NR_ADVANCED_THRESHOLD_BANDWIDTH_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_INCLUDE_LTE_FOR_NR_ADVANCED_THRESHOLD_BANDWIDTH_BOOL { get { if (!_KEY_INCLUDE_LTE_FOR_NR_ADVANCED_THRESHOLD_BANDWIDTH_BOOLReady) { _KEY_INCLUDE_LTE_FOR_NR_ADVANCED_THRESHOLD_BANDWIDTH_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_INCLUDE_LTE_FOR_NR_ADVANCED_THRESHOLD_BANDWIDTH_BOOL"); _KEY_INCLUDE_LTE_FOR_NR_ADVANCED_THRESHOLD_BANDWIDTH_BOOLReady = true; } return _KEY_INCLUDE_LTE_FOR_NR_ADVANCED_THRESHOLD_BANDWIDTH_BOOLContent; } }
        private static Java.Lang.String _KEY_INCLUDE_LTE_FOR_NR_ADVANCED_THRESHOLD_BANDWIDTH_BOOLContent = default;
        private static bool _KEY_INCLUDE_LTE_FOR_NR_ADVANCED_THRESHOLD_BANDWIDTH_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_IS_IMS_CONFERENCE_SIZE_ENFORCED_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_IS_IMS_CONFERENCE_SIZE_ENFORCED_BOOL { get { if (!_KEY_IS_IMS_CONFERENCE_SIZE_ENFORCED_BOOLReady) { _KEY_IS_IMS_CONFERENCE_SIZE_ENFORCED_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_IS_IMS_CONFERENCE_SIZE_ENFORCED_BOOL"); _KEY_IS_IMS_CONFERENCE_SIZE_ENFORCED_BOOLReady = true; } return _KEY_IS_IMS_CONFERENCE_SIZE_ENFORCED_BOOLContent; } }
        private static Java.Lang.String _KEY_IS_IMS_CONFERENCE_SIZE_ENFORCED_BOOLContent = default;
        private static bool _KEY_IS_IMS_CONFERENCE_SIZE_ENFORCED_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_IS_OPPORTUNISTIC_SUBSCRIPTION_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_IS_OPPORTUNISTIC_SUBSCRIPTION_BOOL { get { if (!_KEY_IS_OPPORTUNISTIC_SUBSCRIPTION_BOOLReady) { _KEY_IS_OPPORTUNISTIC_SUBSCRIPTION_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_IS_OPPORTUNISTIC_SUBSCRIPTION_BOOL"); _KEY_IS_OPPORTUNISTIC_SUBSCRIPTION_BOOLReady = true; } return _KEY_IS_OPPORTUNISTIC_SUBSCRIPTION_BOOLContent; } }
        private static Java.Lang.String _KEY_IS_OPPORTUNISTIC_SUBSCRIPTION_BOOLContent = default;
        private static bool _KEY_IS_OPPORTUNISTIC_SUBSCRIPTION_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_LTE_ENABLED_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_LTE_ENABLED_BOOL { get { if (!_KEY_LTE_ENABLED_BOOLReady) { _KEY_LTE_ENABLED_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_LTE_ENABLED_BOOL"); _KEY_LTE_ENABLED_BOOLReady = true; } return _KEY_LTE_ENABLED_BOOLContent; } }
        private static Java.Lang.String _KEY_LTE_ENABLED_BOOLContent = default;
        private static bool _KEY_LTE_ENABLED_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_LTE_RSRQ_THRESHOLDS_INT_ARRAY"/>
        /// </summary>
        public static Java.Lang.String KEY_LTE_RSRQ_THRESHOLDS_INT_ARRAY { get { if (!_KEY_LTE_RSRQ_THRESHOLDS_INT_ARRAYReady) { _KEY_LTE_RSRQ_THRESHOLDS_INT_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_LTE_RSRQ_THRESHOLDS_INT_ARRAY"); _KEY_LTE_RSRQ_THRESHOLDS_INT_ARRAYReady = true; } return _KEY_LTE_RSRQ_THRESHOLDS_INT_ARRAYContent; } }
        private static Java.Lang.String _KEY_LTE_RSRQ_THRESHOLDS_INT_ARRAYContent = default;
        private static bool _KEY_LTE_RSRQ_THRESHOLDS_INT_ARRAYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_LTE_RSSNR_THRESHOLDS_INT_ARRAY"/>
        /// </summary>
        public static Java.Lang.String KEY_LTE_RSSNR_THRESHOLDS_INT_ARRAY { get { if (!_KEY_LTE_RSSNR_THRESHOLDS_INT_ARRAYReady) { _KEY_LTE_RSSNR_THRESHOLDS_INT_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_LTE_RSSNR_THRESHOLDS_INT_ARRAY"); _KEY_LTE_RSSNR_THRESHOLDS_INT_ARRAYReady = true; } return _KEY_LTE_RSSNR_THRESHOLDS_INT_ARRAYContent; } }
        private static Java.Lang.String _KEY_LTE_RSSNR_THRESHOLDS_INT_ARRAYContent = default;
        private static bool _KEY_LTE_RSSNR_THRESHOLDS_INT_ARRAYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_MDN_IS_ADDITIONAL_VOICEMAIL_NUMBER_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_MDN_IS_ADDITIONAL_VOICEMAIL_NUMBER_BOOL { get { if (!_KEY_MDN_IS_ADDITIONAL_VOICEMAIL_NUMBER_BOOLReady) { _KEY_MDN_IS_ADDITIONAL_VOICEMAIL_NUMBER_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_MDN_IS_ADDITIONAL_VOICEMAIL_NUMBER_BOOL"); _KEY_MDN_IS_ADDITIONAL_VOICEMAIL_NUMBER_BOOLReady = true; } return _KEY_MDN_IS_ADDITIONAL_VOICEMAIL_NUMBER_BOOLContent; } }
        private static Java.Lang.String _KEY_MDN_IS_ADDITIONAL_VOICEMAIL_NUMBER_BOOLContent = default;
        private static bool _KEY_MDN_IS_ADDITIONAL_VOICEMAIL_NUMBER_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_MMS_ALIAS_ENABLED_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_MMS_ALIAS_ENABLED_BOOL { get { if (!_KEY_MMS_ALIAS_ENABLED_BOOLReady) { _KEY_MMS_ALIAS_ENABLED_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_MMS_ALIAS_ENABLED_BOOL"); _KEY_MMS_ALIAS_ENABLED_BOOLReady = true; } return _KEY_MMS_ALIAS_ENABLED_BOOLContent; } }
        private static Java.Lang.String _KEY_MMS_ALIAS_ENABLED_BOOLContent = default;
        private static bool _KEY_MMS_ALIAS_ENABLED_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_MMS_ALIAS_MAX_CHARS_INT"/>
        /// </summary>
        public static Java.Lang.String KEY_MMS_ALIAS_MAX_CHARS_INT { get { if (!_KEY_MMS_ALIAS_MAX_CHARS_INTReady) { _KEY_MMS_ALIAS_MAX_CHARS_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_MMS_ALIAS_MAX_CHARS_INT"); _KEY_MMS_ALIAS_MAX_CHARS_INTReady = true; } return _KEY_MMS_ALIAS_MAX_CHARS_INTContent; } }
        private static Java.Lang.String _KEY_MMS_ALIAS_MAX_CHARS_INTContent = default;
        private static bool _KEY_MMS_ALIAS_MAX_CHARS_INTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_MMS_ALIAS_MIN_CHARS_INT"/>
        /// </summary>
        public static Java.Lang.String KEY_MMS_ALIAS_MIN_CHARS_INT { get { if (!_KEY_MMS_ALIAS_MIN_CHARS_INTReady) { _KEY_MMS_ALIAS_MIN_CHARS_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_MMS_ALIAS_MIN_CHARS_INT"); _KEY_MMS_ALIAS_MIN_CHARS_INTReady = true; } return _KEY_MMS_ALIAS_MIN_CHARS_INTContent; } }
        private static Java.Lang.String _KEY_MMS_ALIAS_MIN_CHARS_INTContent = default;
        private static bool _KEY_MMS_ALIAS_MIN_CHARS_INTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_MMS_ALLOW_ATTACH_AUDIO_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_MMS_ALLOW_ATTACH_AUDIO_BOOL { get { if (!_KEY_MMS_ALLOW_ATTACH_AUDIO_BOOLReady) { _KEY_MMS_ALLOW_ATTACH_AUDIO_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_MMS_ALLOW_ATTACH_AUDIO_BOOL"); _KEY_MMS_ALLOW_ATTACH_AUDIO_BOOLReady = true; } return _KEY_MMS_ALLOW_ATTACH_AUDIO_BOOLContent; } }
        private static Java.Lang.String _KEY_MMS_ALLOW_ATTACH_AUDIO_BOOLContent = default;
        private static bool _KEY_MMS_ALLOW_ATTACH_AUDIO_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_MMS_APPEND_TRANSACTION_ID_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_MMS_APPEND_TRANSACTION_ID_BOOL { get { if (!_KEY_MMS_APPEND_TRANSACTION_ID_BOOLReady) { _KEY_MMS_APPEND_TRANSACTION_ID_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_MMS_APPEND_TRANSACTION_ID_BOOL"); _KEY_MMS_APPEND_TRANSACTION_ID_BOOLReady = true; } return _KEY_MMS_APPEND_TRANSACTION_ID_BOOLContent; } }
        private static Java.Lang.String _KEY_MMS_APPEND_TRANSACTION_ID_BOOLContent = default;
        private static bool _KEY_MMS_APPEND_TRANSACTION_ID_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_MMS_CLOSE_CONNECTION_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_MMS_CLOSE_CONNECTION_BOOL { get { if (!_KEY_MMS_CLOSE_CONNECTION_BOOLReady) { _KEY_MMS_CLOSE_CONNECTION_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_MMS_CLOSE_CONNECTION_BOOL"); _KEY_MMS_CLOSE_CONNECTION_BOOLReady = true; } return _KEY_MMS_CLOSE_CONNECTION_BOOLContent; } }
        private static Java.Lang.String _KEY_MMS_CLOSE_CONNECTION_BOOLContent = default;
        private static bool _KEY_MMS_CLOSE_CONNECTION_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_MMS_EMAIL_GATEWAY_NUMBER_STRING"/>
        /// </summary>
        public static Java.Lang.String KEY_MMS_EMAIL_GATEWAY_NUMBER_STRING { get { if (!_KEY_MMS_EMAIL_GATEWAY_NUMBER_STRINGReady) { _KEY_MMS_EMAIL_GATEWAY_NUMBER_STRINGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_MMS_EMAIL_GATEWAY_NUMBER_STRING"); _KEY_MMS_EMAIL_GATEWAY_NUMBER_STRINGReady = true; } return _KEY_MMS_EMAIL_GATEWAY_NUMBER_STRINGContent; } }
        private static Java.Lang.String _KEY_MMS_EMAIL_GATEWAY_NUMBER_STRINGContent = default;
        private static bool _KEY_MMS_EMAIL_GATEWAY_NUMBER_STRINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_MMS_GROUP_MMS_ENABLED_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_MMS_GROUP_MMS_ENABLED_BOOL { get { if (!_KEY_MMS_GROUP_MMS_ENABLED_BOOLReady) { _KEY_MMS_GROUP_MMS_ENABLED_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_MMS_GROUP_MMS_ENABLED_BOOL"); _KEY_MMS_GROUP_MMS_ENABLED_BOOLReady = true; } return _KEY_MMS_GROUP_MMS_ENABLED_BOOLContent; } }
        private static Java.Lang.String _KEY_MMS_GROUP_MMS_ENABLED_BOOLContent = default;
        private static bool _KEY_MMS_GROUP_MMS_ENABLED_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_MMS_HTTP_PARAMS_STRING"/>
        /// </summary>
        public static Java.Lang.String KEY_MMS_HTTP_PARAMS_STRING { get { if (!_KEY_MMS_HTTP_PARAMS_STRINGReady) { _KEY_MMS_HTTP_PARAMS_STRINGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_MMS_HTTP_PARAMS_STRING"); _KEY_MMS_HTTP_PARAMS_STRINGReady = true; } return _KEY_MMS_HTTP_PARAMS_STRINGContent; } }
        private static Java.Lang.String _KEY_MMS_HTTP_PARAMS_STRINGContent = default;
        private static bool _KEY_MMS_HTTP_PARAMS_STRINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_MMS_HTTP_SOCKET_TIMEOUT_INT"/>
        /// </summary>
        public static Java.Lang.String KEY_MMS_HTTP_SOCKET_TIMEOUT_INT { get { if (!_KEY_MMS_HTTP_SOCKET_TIMEOUT_INTReady) { _KEY_MMS_HTTP_SOCKET_TIMEOUT_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_MMS_HTTP_SOCKET_TIMEOUT_INT"); _KEY_MMS_HTTP_SOCKET_TIMEOUT_INTReady = true; } return _KEY_MMS_HTTP_SOCKET_TIMEOUT_INTContent; } }
        private static Java.Lang.String _KEY_MMS_HTTP_SOCKET_TIMEOUT_INTContent = default;
        private static bool _KEY_MMS_HTTP_SOCKET_TIMEOUT_INTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_MMS_MAX_IMAGE_HEIGHT_INT"/>
        /// </summary>
        public static Java.Lang.String KEY_MMS_MAX_IMAGE_HEIGHT_INT { get { if (!_KEY_MMS_MAX_IMAGE_HEIGHT_INTReady) { _KEY_MMS_MAX_IMAGE_HEIGHT_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_MMS_MAX_IMAGE_HEIGHT_INT"); _KEY_MMS_MAX_IMAGE_HEIGHT_INTReady = true; } return _KEY_MMS_MAX_IMAGE_HEIGHT_INTContent; } }
        private static Java.Lang.String _KEY_MMS_MAX_IMAGE_HEIGHT_INTContent = default;
        private static bool _KEY_MMS_MAX_IMAGE_HEIGHT_INTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_MMS_MAX_IMAGE_WIDTH_INT"/>
        /// </summary>
        public static Java.Lang.String KEY_MMS_MAX_IMAGE_WIDTH_INT { get { if (!_KEY_MMS_MAX_IMAGE_WIDTH_INTReady) { _KEY_MMS_MAX_IMAGE_WIDTH_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_MMS_MAX_IMAGE_WIDTH_INT"); _KEY_MMS_MAX_IMAGE_WIDTH_INTReady = true; } return _KEY_MMS_MAX_IMAGE_WIDTH_INTContent; } }
        private static Java.Lang.String _KEY_MMS_MAX_IMAGE_WIDTH_INTContent = default;
        private static bool _KEY_MMS_MAX_IMAGE_WIDTH_INTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_MMS_MAX_MESSAGE_SIZE_INT"/>
        /// </summary>
        public static Java.Lang.String KEY_MMS_MAX_MESSAGE_SIZE_INT { get { if (!_KEY_MMS_MAX_MESSAGE_SIZE_INTReady) { _KEY_MMS_MAX_MESSAGE_SIZE_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_MMS_MAX_MESSAGE_SIZE_INT"); _KEY_MMS_MAX_MESSAGE_SIZE_INTReady = true; } return _KEY_MMS_MAX_MESSAGE_SIZE_INTContent; } }
        private static Java.Lang.String _KEY_MMS_MAX_MESSAGE_SIZE_INTContent = default;
        private static bool _KEY_MMS_MAX_MESSAGE_SIZE_INTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_MMS_MESSAGE_TEXT_MAX_SIZE_INT"/>
        /// </summary>
        public static Java.Lang.String KEY_MMS_MESSAGE_TEXT_MAX_SIZE_INT { get { if (!_KEY_MMS_MESSAGE_TEXT_MAX_SIZE_INTReady) { _KEY_MMS_MESSAGE_TEXT_MAX_SIZE_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_MMS_MESSAGE_TEXT_MAX_SIZE_INT"); _KEY_MMS_MESSAGE_TEXT_MAX_SIZE_INTReady = true; } return _KEY_MMS_MESSAGE_TEXT_MAX_SIZE_INTContent; } }
        private static Java.Lang.String _KEY_MMS_MESSAGE_TEXT_MAX_SIZE_INTContent = default;
        private static bool _KEY_MMS_MESSAGE_TEXT_MAX_SIZE_INTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_MMS_MMS_DELIVERY_REPORT_ENABLED_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_MMS_MMS_DELIVERY_REPORT_ENABLED_BOOL { get { if (!_KEY_MMS_MMS_DELIVERY_REPORT_ENABLED_BOOLReady) { _KEY_MMS_MMS_DELIVERY_REPORT_ENABLED_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_MMS_MMS_DELIVERY_REPORT_ENABLED_BOOL"); _KEY_MMS_MMS_DELIVERY_REPORT_ENABLED_BOOLReady = true; } return _KEY_MMS_MMS_DELIVERY_REPORT_ENABLED_BOOLContent; } }
        private static Java.Lang.String _KEY_MMS_MMS_DELIVERY_REPORT_ENABLED_BOOLContent = default;
        private static bool _KEY_MMS_MMS_DELIVERY_REPORT_ENABLED_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_MMS_MMS_ENABLED_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_MMS_MMS_ENABLED_BOOL { get { if (!_KEY_MMS_MMS_ENABLED_BOOLReady) { _KEY_MMS_MMS_ENABLED_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_MMS_MMS_ENABLED_BOOL"); _KEY_MMS_MMS_ENABLED_BOOLReady = true; } return _KEY_MMS_MMS_ENABLED_BOOLContent; } }
        private static Java.Lang.String _KEY_MMS_MMS_ENABLED_BOOLContent = default;
        private static bool _KEY_MMS_MMS_ENABLED_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_MMS_MMS_READ_REPORT_ENABLED_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_MMS_MMS_READ_REPORT_ENABLED_BOOL { get { if (!_KEY_MMS_MMS_READ_REPORT_ENABLED_BOOLReady) { _KEY_MMS_MMS_READ_REPORT_ENABLED_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_MMS_MMS_READ_REPORT_ENABLED_BOOL"); _KEY_MMS_MMS_READ_REPORT_ENABLED_BOOLReady = true; } return _KEY_MMS_MMS_READ_REPORT_ENABLED_BOOLContent; } }
        private static Java.Lang.String _KEY_MMS_MMS_READ_REPORT_ENABLED_BOOLContent = default;
        private static bool _KEY_MMS_MMS_READ_REPORT_ENABLED_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_MMS_MULTIPART_SMS_ENABLED_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_MMS_MULTIPART_SMS_ENABLED_BOOL { get { if (!_KEY_MMS_MULTIPART_SMS_ENABLED_BOOLReady) { _KEY_MMS_MULTIPART_SMS_ENABLED_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_MMS_MULTIPART_SMS_ENABLED_BOOL"); _KEY_MMS_MULTIPART_SMS_ENABLED_BOOLReady = true; } return _KEY_MMS_MULTIPART_SMS_ENABLED_BOOLContent; } }
        private static Java.Lang.String _KEY_MMS_MULTIPART_SMS_ENABLED_BOOLContent = default;
        private static bool _KEY_MMS_MULTIPART_SMS_ENABLED_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_MMS_NAI_SUFFIX_STRING"/>
        /// </summary>
        public static Java.Lang.String KEY_MMS_NAI_SUFFIX_STRING { get { if (!_KEY_MMS_NAI_SUFFIX_STRINGReady) { _KEY_MMS_NAI_SUFFIX_STRINGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_MMS_NAI_SUFFIX_STRING"); _KEY_MMS_NAI_SUFFIX_STRINGReady = true; } return _KEY_MMS_NAI_SUFFIX_STRINGContent; } }
        private static Java.Lang.String _KEY_MMS_NAI_SUFFIX_STRINGContent = default;
        private static bool _KEY_MMS_NAI_SUFFIX_STRINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_MMS_NETWORK_RELEASE_TIMEOUT_MILLIS_INT"/>
        /// </summary>
        public static Java.Lang.String KEY_MMS_NETWORK_RELEASE_TIMEOUT_MILLIS_INT { get { if (!_KEY_MMS_NETWORK_RELEASE_TIMEOUT_MILLIS_INTReady) { _KEY_MMS_NETWORK_RELEASE_TIMEOUT_MILLIS_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_MMS_NETWORK_RELEASE_TIMEOUT_MILLIS_INT"); _KEY_MMS_NETWORK_RELEASE_TIMEOUT_MILLIS_INTReady = true; } return _KEY_MMS_NETWORK_RELEASE_TIMEOUT_MILLIS_INTContent; } }
        private static Java.Lang.String _KEY_MMS_NETWORK_RELEASE_TIMEOUT_MILLIS_INTContent = default;
        private static bool _KEY_MMS_NETWORK_RELEASE_TIMEOUT_MILLIS_INTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_MMS_NOTIFY_WAP_MMSC_ENABLED_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_MMS_NOTIFY_WAP_MMSC_ENABLED_BOOL { get { if (!_KEY_MMS_NOTIFY_WAP_MMSC_ENABLED_BOOLReady) { _KEY_MMS_NOTIFY_WAP_MMSC_ENABLED_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_MMS_NOTIFY_WAP_MMSC_ENABLED_BOOL"); _KEY_MMS_NOTIFY_WAP_MMSC_ENABLED_BOOLReady = true; } return _KEY_MMS_NOTIFY_WAP_MMSC_ENABLED_BOOLContent; } }
        private static Java.Lang.String _KEY_MMS_NOTIFY_WAP_MMSC_ENABLED_BOOLContent = default;
        private static bool _KEY_MMS_NOTIFY_WAP_MMSC_ENABLED_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_MMS_RECIPIENT_LIMIT_INT"/>
        /// </summary>
        public static Java.Lang.String KEY_MMS_RECIPIENT_LIMIT_INT { get { if (!_KEY_MMS_RECIPIENT_LIMIT_INTReady) { _KEY_MMS_RECIPIENT_LIMIT_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_MMS_RECIPIENT_LIMIT_INT"); _KEY_MMS_RECIPIENT_LIMIT_INTReady = true; } return _KEY_MMS_RECIPIENT_LIMIT_INTContent; } }
        private static Java.Lang.String _KEY_MMS_RECIPIENT_LIMIT_INTContent = default;
        private static bool _KEY_MMS_RECIPIENT_LIMIT_INTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_MMS_SEND_MULTIPART_SMS_AS_SEPARATE_MESSAGES_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_MMS_SEND_MULTIPART_SMS_AS_SEPARATE_MESSAGES_BOOL { get { if (!_KEY_MMS_SEND_MULTIPART_SMS_AS_SEPARATE_MESSAGES_BOOLReady) { _KEY_MMS_SEND_MULTIPART_SMS_AS_SEPARATE_MESSAGES_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_MMS_SEND_MULTIPART_SMS_AS_SEPARATE_MESSAGES_BOOL"); _KEY_MMS_SEND_MULTIPART_SMS_AS_SEPARATE_MESSAGES_BOOLReady = true; } return _KEY_MMS_SEND_MULTIPART_SMS_AS_SEPARATE_MESSAGES_BOOLContent; } }
        private static Java.Lang.String _KEY_MMS_SEND_MULTIPART_SMS_AS_SEPARATE_MESSAGES_BOOLContent = default;
        private static bool _KEY_MMS_SEND_MULTIPART_SMS_AS_SEPARATE_MESSAGES_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_MMS_SHOW_CELL_BROADCAST_APP_LINKS_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_MMS_SHOW_CELL_BROADCAST_APP_LINKS_BOOL { get { if (!_KEY_MMS_SHOW_CELL_BROADCAST_APP_LINKS_BOOLReady) { _KEY_MMS_SHOW_CELL_BROADCAST_APP_LINKS_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_MMS_SHOW_CELL_BROADCAST_APP_LINKS_BOOL"); _KEY_MMS_SHOW_CELL_BROADCAST_APP_LINKS_BOOLReady = true; } return _KEY_MMS_SHOW_CELL_BROADCAST_APP_LINKS_BOOLContent; } }
        private static Java.Lang.String _KEY_MMS_SHOW_CELL_BROADCAST_APP_LINKS_BOOLContent = default;
        private static bool _KEY_MMS_SHOW_CELL_BROADCAST_APP_LINKS_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_MMS_SMS_DELIVERY_REPORT_ENABLED_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_MMS_SMS_DELIVERY_REPORT_ENABLED_BOOL { get { if (!_KEY_MMS_SMS_DELIVERY_REPORT_ENABLED_BOOLReady) { _KEY_MMS_SMS_DELIVERY_REPORT_ENABLED_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_MMS_SMS_DELIVERY_REPORT_ENABLED_BOOL"); _KEY_MMS_SMS_DELIVERY_REPORT_ENABLED_BOOLReady = true; } return _KEY_MMS_SMS_DELIVERY_REPORT_ENABLED_BOOLContent; } }
        private static Java.Lang.String _KEY_MMS_SMS_DELIVERY_REPORT_ENABLED_BOOLContent = default;
        private static bool _KEY_MMS_SMS_DELIVERY_REPORT_ENABLED_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_MMS_SMS_TO_MMS_TEXT_LENGTH_THRESHOLD_INT"/>
        /// </summary>
        public static Java.Lang.String KEY_MMS_SMS_TO_MMS_TEXT_LENGTH_THRESHOLD_INT { get { if (!_KEY_MMS_SMS_TO_MMS_TEXT_LENGTH_THRESHOLD_INTReady) { _KEY_MMS_SMS_TO_MMS_TEXT_LENGTH_THRESHOLD_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_MMS_SMS_TO_MMS_TEXT_LENGTH_THRESHOLD_INT"); _KEY_MMS_SMS_TO_MMS_TEXT_LENGTH_THRESHOLD_INTReady = true; } return _KEY_MMS_SMS_TO_MMS_TEXT_LENGTH_THRESHOLD_INTContent; } }
        private static Java.Lang.String _KEY_MMS_SMS_TO_MMS_TEXT_LENGTH_THRESHOLD_INTContent = default;
        private static bool _KEY_MMS_SMS_TO_MMS_TEXT_LENGTH_THRESHOLD_INTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_MMS_SMS_TO_MMS_TEXT_THRESHOLD_INT"/>
        /// </summary>
        public static Java.Lang.String KEY_MMS_SMS_TO_MMS_TEXT_THRESHOLD_INT { get { if (!_KEY_MMS_SMS_TO_MMS_TEXT_THRESHOLD_INTReady) { _KEY_MMS_SMS_TO_MMS_TEXT_THRESHOLD_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_MMS_SMS_TO_MMS_TEXT_THRESHOLD_INT"); _KEY_MMS_SMS_TO_MMS_TEXT_THRESHOLD_INTReady = true; } return _KEY_MMS_SMS_TO_MMS_TEXT_THRESHOLD_INTContent; } }
        private static Java.Lang.String _KEY_MMS_SMS_TO_MMS_TEXT_THRESHOLD_INTContent = default;
        private static bool _KEY_MMS_SMS_TO_MMS_TEXT_THRESHOLD_INTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_MMS_SUBJECT_MAX_LENGTH_INT"/>
        /// </summary>
        public static Java.Lang.String KEY_MMS_SUBJECT_MAX_LENGTH_INT { get { if (!_KEY_MMS_SUBJECT_MAX_LENGTH_INTReady) { _KEY_MMS_SUBJECT_MAX_LENGTH_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_MMS_SUBJECT_MAX_LENGTH_INT"); _KEY_MMS_SUBJECT_MAX_LENGTH_INTReady = true; } return _KEY_MMS_SUBJECT_MAX_LENGTH_INTContent; } }
        private static Java.Lang.String _KEY_MMS_SUBJECT_MAX_LENGTH_INTContent = default;
        private static bool _KEY_MMS_SUBJECT_MAX_LENGTH_INTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_MMS_SUPPORT_HTTP_CHARSET_HEADER_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_MMS_SUPPORT_HTTP_CHARSET_HEADER_BOOL { get { if (!_KEY_MMS_SUPPORT_HTTP_CHARSET_HEADER_BOOLReady) { _KEY_MMS_SUPPORT_HTTP_CHARSET_HEADER_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_MMS_SUPPORT_HTTP_CHARSET_HEADER_BOOL"); _KEY_MMS_SUPPORT_HTTP_CHARSET_HEADER_BOOLReady = true; } return _KEY_MMS_SUPPORT_HTTP_CHARSET_HEADER_BOOLContent; } }
        private static Java.Lang.String _KEY_MMS_SUPPORT_HTTP_CHARSET_HEADER_BOOLContent = default;
        private static bool _KEY_MMS_SUPPORT_HTTP_CHARSET_HEADER_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_MMS_SUPPORT_MMS_CONTENT_DISPOSITION_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_MMS_SUPPORT_MMS_CONTENT_DISPOSITION_BOOL { get { if (!_KEY_MMS_SUPPORT_MMS_CONTENT_DISPOSITION_BOOLReady) { _KEY_MMS_SUPPORT_MMS_CONTENT_DISPOSITION_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_MMS_SUPPORT_MMS_CONTENT_DISPOSITION_BOOL"); _KEY_MMS_SUPPORT_MMS_CONTENT_DISPOSITION_BOOLReady = true; } return _KEY_MMS_SUPPORT_MMS_CONTENT_DISPOSITION_BOOLContent; } }
        private static Java.Lang.String _KEY_MMS_SUPPORT_MMS_CONTENT_DISPOSITION_BOOLContent = default;
        private static bool _KEY_MMS_SUPPORT_MMS_CONTENT_DISPOSITION_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_MMS_UA_PROF_TAG_NAME_STRING"/>
        /// </summary>
        public static Java.Lang.String KEY_MMS_UA_PROF_TAG_NAME_STRING { get { if (!_KEY_MMS_UA_PROF_TAG_NAME_STRINGReady) { _KEY_MMS_UA_PROF_TAG_NAME_STRINGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_MMS_UA_PROF_TAG_NAME_STRING"); _KEY_MMS_UA_PROF_TAG_NAME_STRINGReady = true; } return _KEY_MMS_UA_PROF_TAG_NAME_STRINGContent; } }
        private static Java.Lang.String _KEY_MMS_UA_PROF_TAG_NAME_STRINGContent = default;
        private static bool _KEY_MMS_UA_PROF_TAG_NAME_STRINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_MMS_UA_PROF_URL_STRING"/>
        /// </summary>
        public static Java.Lang.String KEY_MMS_UA_PROF_URL_STRING { get { if (!_KEY_MMS_UA_PROF_URL_STRINGReady) { _KEY_MMS_UA_PROF_URL_STRINGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_MMS_UA_PROF_URL_STRING"); _KEY_MMS_UA_PROF_URL_STRINGReady = true; } return _KEY_MMS_UA_PROF_URL_STRINGContent; } }
        private static Java.Lang.String _KEY_MMS_UA_PROF_URL_STRINGContent = default;
        private static bool _KEY_MMS_UA_PROF_URL_STRINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_MMS_USER_AGENT_STRING"/>
        /// </summary>
        public static Java.Lang.String KEY_MMS_USER_AGENT_STRING { get { if (!_KEY_MMS_USER_AGENT_STRINGReady) { _KEY_MMS_USER_AGENT_STRINGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_MMS_USER_AGENT_STRING"); _KEY_MMS_USER_AGENT_STRINGReady = true; } return _KEY_MMS_USER_AGENT_STRINGContent; } }
        private static Java.Lang.String _KEY_MMS_USER_AGENT_STRINGContent = default;
        private static bool _KEY_MMS_USER_AGENT_STRINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_MONTHLY_DATA_CYCLE_DAY_INT"/>
        /// </summary>
        public static Java.Lang.String KEY_MONTHLY_DATA_CYCLE_DAY_INT { get { if (!_KEY_MONTHLY_DATA_CYCLE_DAY_INTReady) { _KEY_MONTHLY_DATA_CYCLE_DAY_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_MONTHLY_DATA_CYCLE_DAY_INT"); _KEY_MONTHLY_DATA_CYCLE_DAY_INTReady = true; } return _KEY_MONTHLY_DATA_CYCLE_DAY_INTContent; } }
        private static Java.Lang.String _KEY_MONTHLY_DATA_CYCLE_DAY_INTContent = default;
        private static bool _KEY_MONTHLY_DATA_CYCLE_DAY_INTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_ONLY_AUTO_SELECT_IN_HOME_NETWORK_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_ONLY_AUTO_SELECT_IN_HOME_NETWORK_BOOL { get { if (!_KEY_ONLY_AUTO_SELECT_IN_HOME_NETWORK_BOOLReady) { _KEY_ONLY_AUTO_SELECT_IN_HOME_NETWORK_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_ONLY_AUTO_SELECT_IN_HOME_NETWORK_BOOL"); _KEY_ONLY_AUTO_SELECT_IN_HOME_NETWORK_BOOLReady = true; } return _KEY_ONLY_AUTO_SELECT_IN_HOME_NETWORK_BOOLContent; } }
        private static Java.Lang.String _KEY_ONLY_AUTO_SELECT_IN_HOME_NETWORK_BOOLContent = default;
        private static bool _KEY_ONLY_AUTO_SELECT_IN_HOME_NETWORK_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_ONLY_SINGLE_DC_ALLOWED_INT_ARRAY"/>
        /// </summary>
        public static Java.Lang.String KEY_ONLY_SINGLE_DC_ALLOWED_INT_ARRAY { get { if (!_KEY_ONLY_SINGLE_DC_ALLOWED_INT_ARRAYReady) { _KEY_ONLY_SINGLE_DC_ALLOWED_INT_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_ONLY_SINGLE_DC_ALLOWED_INT_ARRAY"); _KEY_ONLY_SINGLE_DC_ALLOWED_INT_ARRAYReady = true; } return _KEY_ONLY_SINGLE_DC_ALLOWED_INT_ARRAYContent; } }
        private static Java.Lang.String _KEY_ONLY_SINGLE_DC_ALLOWED_INT_ARRAYContent = default;
        private static bool _KEY_ONLY_SINGLE_DC_ALLOWED_INT_ARRAYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_OPERATOR_SELECTION_EXPAND_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_OPERATOR_SELECTION_EXPAND_BOOL { get { if (!_KEY_OPERATOR_SELECTION_EXPAND_BOOLReady) { _KEY_OPERATOR_SELECTION_EXPAND_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_OPERATOR_SELECTION_EXPAND_BOOL"); _KEY_OPERATOR_SELECTION_EXPAND_BOOLReady = true; } return _KEY_OPERATOR_SELECTION_EXPAND_BOOLContent; } }
        private static Java.Lang.String _KEY_OPERATOR_SELECTION_EXPAND_BOOLContent = default;
        private static bool _KEY_OPERATOR_SELECTION_EXPAND_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_OPPORTUNISTIC_NETWORK_BACKOFF_TIME_LONG"/>
        /// </summary>
        public static Java.Lang.String KEY_OPPORTUNISTIC_NETWORK_BACKOFF_TIME_LONG { get { if (!_KEY_OPPORTUNISTIC_NETWORK_BACKOFF_TIME_LONGReady) { _KEY_OPPORTUNISTIC_NETWORK_BACKOFF_TIME_LONGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_OPPORTUNISTIC_NETWORK_BACKOFF_TIME_LONG"); _KEY_OPPORTUNISTIC_NETWORK_BACKOFF_TIME_LONGReady = true; } return _KEY_OPPORTUNISTIC_NETWORK_BACKOFF_TIME_LONGContent; } }
        private static Java.Lang.String _KEY_OPPORTUNISTIC_NETWORK_BACKOFF_TIME_LONGContent = default;
        private static bool _KEY_OPPORTUNISTIC_NETWORK_BACKOFF_TIME_LONGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_OPPORTUNISTIC_NETWORK_DATA_SWITCH_EXIT_HYSTERESIS_TIME_LONG"/>
        /// </summary>
        public static Java.Lang.String KEY_OPPORTUNISTIC_NETWORK_DATA_SWITCH_EXIT_HYSTERESIS_TIME_LONG { get { if (!_KEY_OPPORTUNISTIC_NETWORK_DATA_SWITCH_EXIT_HYSTERESIS_TIME_LONGReady) { _KEY_OPPORTUNISTIC_NETWORK_DATA_SWITCH_EXIT_HYSTERESIS_TIME_LONGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_OPPORTUNISTIC_NETWORK_DATA_SWITCH_EXIT_HYSTERESIS_TIME_LONG"); _KEY_OPPORTUNISTIC_NETWORK_DATA_SWITCH_EXIT_HYSTERESIS_TIME_LONGReady = true; } return _KEY_OPPORTUNISTIC_NETWORK_DATA_SWITCH_EXIT_HYSTERESIS_TIME_LONGContent; } }
        private static Java.Lang.String _KEY_OPPORTUNISTIC_NETWORK_DATA_SWITCH_EXIT_HYSTERESIS_TIME_LONGContent = default;
        private static bool _KEY_OPPORTUNISTIC_NETWORK_DATA_SWITCH_EXIT_HYSTERESIS_TIME_LONGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_OPPORTUNISTIC_NETWORK_DATA_SWITCH_HYSTERESIS_TIME_LONG"/>
        /// </summary>
        public static Java.Lang.String KEY_OPPORTUNISTIC_NETWORK_DATA_SWITCH_HYSTERESIS_TIME_LONG { get { if (!_KEY_OPPORTUNISTIC_NETWORK_DATA_SWITCH_HYSTERESIS_TIME_LONGReady) { _KEY_OPPORTUNISTIC_NETWORK_DATA_SWITCH_HYSTERESIS_TIME_LONGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_OPPORTUNISTIC_NETWORK_DATA_SWITCH_HYSTERESIS_TIME_LONG"); _KEY_OPPORTUNISTIC_NETWORK_DATA_SWITCH_HYSTERESIS_TIME_LONGReady = true; } return _KEY_OPPORTUNISTIC_NETWORK_DATA_SWITCH_HYSTERESIS_TIME_LONGContent; } }
        private static Java.Lang.String _KEY_OPPORTUNISTIC_NETWORK_DATA_SWITCH_HYSTERESIS_TIME_LONGContent = default;
        private static bool _KEY_OPPORTUNISTIC_NETWORK_DATA_SWITCH_HYSTERESIS_TIME_LONGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_OPPORTUNISTIC_NETWORK_ENTRY_OR_EXIT_HYSTERESIS_TIME_LONG"/>
        /// </summary>
        public static Java.Lang.String KEY_OPPORTUNISTIC_NETWORK_ENTRY_OR_EXIT_HYSTERESIS_TIME_LONG { get { if (!_KEY_OPPORTUNISTIC_NETWORK_ENTRY_OR_EXIT_HYSTERESIS_TIME_LONGReady) { _KEY_OPPORTUNISTIC_NETWORK_ENTRY_OR_EXIT_HYSTERESIS_TIME_LONGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_OPPORTUNISTIC_NETWORK_ENTRY_OR_EXIT_HYSTERESIS_TIME_LONG"); _KEY_OPPORTUNISTIC_NETWORK_ENTRY_OR_EXIT_HYSTERESIS_TIME_LONGReady = true; } return _KEY_OPPORTUNISTIC_NETWORK_ENTRY_OR_EXIT_HYSTERESIS_TIME_LONGContent; } }
        private static Java.Lang.String _KEY_OPPORTUNISTIC_NETWORK_ENTRY_OR_EXIT_HYSTERESIS_TIME_LONGContent = default;
        private static bool _KEY_OPPORTUNISTIC_NETWORK_ENTRY_OR_EXIT_HYSTERESIS_TIME_LONGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_OPPORTUNISTIC_NETWORK_ENTRY_THRESHOLD_BANDWIDTH_INT"/>
        /// </summary>
        public static Java.Lang.String KEY_OPPORTUNISTIC_NETWORK_ENTRY_THRESHOLD_BANDWIDTH_INT { get { if (!_KEY_OPPORTUNISTIC_NETWORK_ENTRY_THRESHOLD_BANDWIDTH_INTReady) { _KEY_OPPORTUNISTIC_NETWORK_ENTRY_THRESHOLD_BANDWIDTH_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_OPPORTUNISTIC_NETWORK_ENTRY_THRESHOLD_BANDWIDTH_INT"); _KEY_OPPORTUNISTIC_NETWORK_ENTRY_THRESHOLD_BANDWIDTH_INTReady = true; } return _KEY_OPPORTUNISTIC_NETWORK_ENTRY_THRESHOLD_BANDWIDTH_INTContent; } }
        private static Java.Lang.String _KEY_OPPORTUNISTIC_NETWORK_ENTRY_THRESHOLD_BANDWIDTH_INTContent = default;
        private static bool _KEY_OPPORTUNISTIC_NETWORK_ENTRY_THRESHOLD_BANDWIDTH_INTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_OPPORTUNISTIC_NETWORK_ENTRY_THRESHOLD_RSRP_INT"/>
        /// </summary>
        public static Java.Lang.String KEY_OPPORTUNISTIC_NETWORK_ENTRY_THRESHOLD_RSRP_INT { get { if (!_KEY_OPPORTUNISTIC_NETWORK_ENTRY_THRESHOLD_RSRP_INTReady) { _KEY_OPPORTUNISTIC_NETWORK_ENTRY_THRESHOLD_RSRP_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_OPPORTUNISTIC_NETWORK_ENTRY_THRESHOLD_RSRP_INT"); _KEY_OPPORTUNISTIC_NETWORK_ENTRY_THRESHOLD_RSRP_INTReady = true; } return _KEY_OPPORTUNISTIC_NETWORK_ENTRY_THRESHOLD_RSRP_INTContent; } }
        private static Java.Lang.String _KEY_OPPORTUNISTIC_NETWORK_ENTRY_THRESHOLD_RSRP_INTContent = default;
        private static bool _KEY_OPPORTUNISTIC_NETWORK_ENTRY_THRESHOLD_RSRP_INTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_OPPORTUNISTIC_NETWORK_ENTRY_THRESHOLD_RSSNR_INT"/>
        /// </summary>
        public static Java.Lang.String KEY_OPPORTUNISTIC_NETWORK_ENTRY_THRESHOLD_RSSNR_INT { get { if (!_KEY_OPPORTUNISTIC_NETWORK_ENTRY_THRESHOLD_RSSNR_INTReady) { _KEY_OPPORTUNISTIC_NETWORK_ENTRY_THRESHOLD_RSSNR_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_OPPORTUNISTIC_NETWORK_ENTRY_THRESHOLD_RSSNR_INT"); _KEY_OPPORTUNISTIC_NETWORK_ENTRY_THRESHOLD_RSSNR_INTReady = true; } return _KEY_OPPORTUNISTIC_NETWORK_ENTRY_THRESHOLD_RSSNR_INTContent; } }
        private static Java.Lang.String _KEY_OPPORTUNISTIC_NETWORK_ENTRY_THRESHOLD_RSSNR_INTContent = default;
        private static bool _KEY_OPPORTUNISTIC_NETWORK_ENTRY_THRESHOLD_RSSNR_INTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_OPPORTUNISTIC_NETWORK_EXIT_THRESHOLD_RSRP_INT"/>
        /// </summary>
        public static Java.Lang.String KEY_OPPORTUNISTIC_NETWORK_EXIT_THRESHOLD_RSRP_INT { get { if (!_KEY_OPPORTUNISTIC_NETWORK_EXIT_THRESHOLD_RSRP_INTReady) { _KEY_OPPORTUNISTIC_NETWORK_EXIT_THRESHOLD_RSRP_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_OPPORTUNISTIC_NETWORK_EXIT_THRESHOLD_RSRP_INT"); _KEY_OPPORTUNISTIC_NETWORK_EXIT_THRESHOLD_RSRP_INTReady = true; } return _KEY_OPPORTUNISTIC_NETWORK_EXIT_THRESHOLD_RSRP_INTContent; } }
        private static Java.Lang.String _KEY_OPPORTUNISTIC_NETWORK_EXIT_THRESHOLD_RSRP_INTContent = default;
        private static bool _KEY_OPPORTUNISTIC_NETWORK_EXIT_THRESHOLD_RSRP_INTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_OPPORTUNISTIC_NETWORK_EXIT_THRESHOLD_RSSNR_INT"/>
        /// </summary>
        public static Java.Lang.String KEY_OPPORTUNISTIC_NETWORK_EXIT_THRESHOLD_RSSNR_INT { get { if (!_KEY_OPPORTUNISTIC_NETWORK_EXIT_THRESHOLD_RSSNR_INTReady) { _KEY_OPPORTUNISTIC_NETWORK_EXIT_THRESHOLD_RSSNR_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_OPPORTUNISTIC_NETWORK_EXIT_THRESHOLD_RSSNR_INT"); _KEY_OPPORTUNISTIC_NETWORK_EXIT_THRESHOLD_RSSNR_INTReady = true; } return _KEY_OPPORTUNISTIC_NETWORK_EXIT_THRESHOLD_RSSNR_INTContent; } }
        private static Java.Lang.String _KEY_OPPORTUNISTIC_NETWORK_EXIT_THRESHOLD_RSSNR_INTContent = default;
        private static bool _KEY_OPPORTUNISTIC_NETWORK_EXIT_THRESHOLD_RSSNR_INTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_OPPORTUNISTIC_NETWORK_MAX_BACKOFF_TIME_LONG"/>
        /// </summary>
        public static Java.Lang.String KEY_OPPORTUNISTIC_NETWORK_MAX_BACKOFF_TIME_LONG { get { if (!_KEY_OPPORTUNISTIC_NETWORK_MAX_BACKOFF_TIME_LONGReady) { _KEY_OPPORTUNISTIC_NETWORK_MAX_BACKOFF_TIME_LONGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_OPPORTUNISTIC_NETWORK_MAX_BACKOFF_TIME_LONG"); _KEY_OPPORTUNISTIC_NETWORK_MAX_BACKOFF_TIME_LONGReady = true; } return _KEY_OPPORTUNISTIC_NETWORK_MAX_BACKOFF_TIME_LONGContent; } }
        private static Java.Lang.String _KEY_OPPORTUNISTIC_NETWORK_MAX_BACKOFF_TIME_LONGContent = default;
        private static bool _KEY_OPPORTUNISTIC_NETWORK_MAX_BACKOFF_TIME_LONGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_OPPORTUNISTIC_NETWORK_PING_PONG_TIME_LONG"/>
        /// </summary>
        public static Java.Lang.String KEY_OPPORTUNISTIC_NETWORK_PING_PONG_TIME_LONG { get { if (!_KEY_OPPORTUNISTIC_NETWORK_PING_PONG_TIME_LONGReady) { _KEY_OPPORTUNISTIC_NETWORK_PING_PONG_TIME_LONGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_OPPORTUNISTIC_NETWORK_PING_PONG_TIME_LONG"); _KEY_OPPORTUNISTIC_NETWORK_PING_PONG_TIME_LONGReady = true; } return _KEY_OPPORTUNISTIC_NETWORK_PING_PONG_TIME_LONGContent; } }
        private static Java.Lang.String _KEY_OPPORTUNISTIC_NETWORK_PING_PONG_TIME_LONGContent = default;
        private static bool _KEY_OPPORTUNISTIC_NETWORK_PING_PONG_TIME_LONGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_PING_TEST_BEFORE_DATA_SWITCH_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_PING_TEST_BEFORE_DATA_SWITCH_BOOL { get { if (!_KEY_PING_TEST_BEFORE_DATA_SWITCH_BOOLReady) { _KEY_PING_TEST_BEFORE_DATA_SWITCH_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_PING_TEST_BEFORE_DATA_SWITCH_BOOL"); _KEY_PING_TEST_BEFORE_DATA_SWITCH_BOOLReady = true; } return _KEY_PING_TEST_BEFORE_DATA_SWITCH_BOOLContent; } }
        private static Java.Lang.String _KEY_PING_TEST_BEFORE_DATA_SWITCH_BOOLContent = default;
        private static bool _KEY_PING_TEST_BEFORE_DATA_SWITCH_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_PREFER_2G_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_PREFER_2G_BOOL { get { if (!_KEY_PREFER_2G_BOOLReady) { _KEY_PREFER_2G_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_PREFER_2G_BOOL"); _KEY_PREFER_2G_BOOLReady = true; } return _KEY_PREFER_2G_BOOLContent; } }
        private static Java.Lang.String _KEY_PREFER_2G_BOOLContent = default;
        private static bool _KEY_PREFER_2G_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_PREMIUM_CAPABILITY_MAXIMUM_DAILY_NOTIFICATION_COUNT_INT"/>
        /// </summary>
        public static Java.Lang.String KEY_PREMIUM_CAPABILITY_MAXIMUM_DAILY_NOTIFICATION_COUNT_INT { get { if (!_KEY_PREMIUM_CAPABILITY_MAXIMUM_DAILY_NOTIFICATION_COUNT_INTReady) { _KEY_PREMIUM_CAPABILITY_MAXIMUM_DAILY_NOTIFICATION_COUNT_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_PREMIUM_CAPABILITY_MAXIMUM_DAILY_NOTIFICATION_COUNT_INT"); _KEY_PREMIUM_CAPABILITY_MAXIMUM_DAILY_NOTIFICATION_COUNT_INTReady = true; } return _KEY_PREMIUM_CAPABILITY_MAXIMUM_DAILY_NOTIFICATION_COUNT_INTContent; } }
        private static Java.Lang.String _KEY_PREMIUM_CAPABILITY_MAXIMUM_DAILY_NOTIFICATION_COUNT_INTContent = default;
        private static bool _KEY_PREMIUM_CAPABILITY_MAXIMUM_DAILY_NOTIFICATION_COUNT_INTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_PREMIUM_CAPABILITY_MAXIMUM_MONTHLY_NOTIFICATION_COUNT_INT"/>
        /// </summary>
        public static Java.Lang.String KEY_PREMIUM_CAPABILITY_MAXIMUM_MONTHLY_NOTIFICATION_COUNT_INT { get { if (!_KEY_PREMIUM_CAPABILITY_MAXIMUM_MONTHLY_NOTIFICATION_COUNT_INTReady) { _KEY_PREMIUM_CAPABILITY_MAXIMUM_MONTHLY_NOTIFICATION_COUNT_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_PREMIUM_CAPABILITY_MAXIMUM_MONTHLY_NOTIFICATION_COUNT_INT"); _KEY_PREMIUM_CAPABILITY_MAXIMUM_MONTHLY_NOTIFICATION_COUNT_INTReady = true; } return _KEY_PREMIUM_CAPABILITY_MAXIMUM_MONTHLY_NOTIFICATION_COUNT_INTContent; } }
        private static Java.Lang.String _KEY_PREMIUM_CAPABILITY_MAXIMUM_MONTHLY_NOTIFICATION_COUNT_INTContent = default;
        private static bool _KEY_PREMIUM_CAPABILITY_MAXIMUM_MONTHLY_NOTIFICATION_COUNT_INTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_PREMIUM_CAPABILITY_NETWORK_SETUP_TIME_MILLIS_LONG"/>
        /// </summary>
        public static Java.Lang.String KEY_PREMIUM_CAPABILITY_NETWORK_SETUP_TIME_MILLIS_LONG { get { if (!_KEY_PREMIUM_CAPABILITY_NETWORK_SETUP_TIME_MILLIS_LONGReady) { _KEY_PREMIUM_CAPABILITY_NETWORK_SETUP_TIME_MILLIS_LONGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_PREMIUM_CAPABILITY_NETWORK_SETUP_TIME_MILLIS_LONG"); _KEY_PREMIUM_CAPABILITY_NETWORK_SETUP_TIME_MILLIS_LONGReady = true; } return _KEY_PREMIUM_CAPABILITY_NETWORK_SETUP_TIME_MILLIS_LONGContent; } }
        private static Java.Lang.String _KEY_PREMIUM_CAPABILITY_NETWORK_SETUP_TIME_MILLIS_LONGContent = default;
        private static bool _KEY_PREMIUM_CAPABILITY_NETWORK_SETUP_TIME_MILLIS_LONGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_PREMIUM_CAPABILITY_NOTIFICATION_BACKOFF_HYSTERESIS_TIME_MILLIS_LONG"/>
        /// </summary>
        public static Java.Lang.String KEY_PREMIUM_CAPABILITY_NOTIFICATION_BACKOFF_HYSTERESIS_TIME_MILLIS_LONG { get { if (!_KEY_PREMIUM_CAPABILITY_NOTIFICATION_BACKOFF_HYSTERESIS_TIME_MILLIS_LONGReady) { _KEY_PREMIUM_CAPABILITY_NOTIFICATION_BACKOFF_HYSTERESIS_TIME_MILLIS_LONGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_PREMIUM_CAPABILITY_NOTIFICATION_BACKOFF_HYSTERESIS_TIME_MILLIS_LONG"); _KEY_PREMIUM_CAPABILITY_NOTIFICATION_BACKOFF_HYSTERESIS_TIME_MILLIS_LONGReady = true; } return _KEY_PREMIUM_CAPABILITY_NOTIFICATION_BACKOFF_HYSTERESIS_TIME_MILLIS_LONGContent; } }
        private static Java.Lang.String _KEY_PREMIUM_CAPABILITY_NOTIFICATION_BACKOFF_HYSTERESIS_TIME_MILLIS_LONGContent = default;
        private static bool _KEY_PREMIUM_CAPABILITY_NOTIFICATION_BACKOFF_HYSTERESIS_TIME_MILLIS_LONGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_PREMIUM_CAPABILITY_NOTIFICATION_DISPLAY_TIMEOUT_MILLIS_LONG"/>
        /// </summary>
        public static Java.Lang.String KEY_PREMIUM_CAPABILITY_NOTIFICATION_DISPLAY_TIMEOUT_MILLIS_LONG { get { if (!_KEY_PREMIUM_CAPABILITY_NOTIFICATION_DISPLAY_TIMEOUT_MILLIS_LONGReady) { _KEY_PREMIUM_CAPABILITY_NOTIFICATION_DISPLAY_TIMEOUT_MILLIS_LONGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_PREMIUM_CAPABILITY_NOTIFICATION_DISPLAY_TIMEOUT_MILLIS_LONG"); _KEY_PREMIUM_CAPABILITY_NOTIFICATION_DISPLAY_TIMEOUT_MILLIS_LONGReady = true; } return _KEY_PREMIUM_CAPABILITY_NOTIFICATION_DISPLAY_TIMEOUT_MILLIS_LONGContent; } }
        private static Java.Lang.String _KEY_PREMIUM_CAPABILITY_NOTIFICATION_DISPLAY_TIMEOUT_MILLIS_LONGContent = default;
        private static bool _KEY_PREMIUM_CAPABILITY_NOTIFICATION_DISPLAY_TIMEOUT_MILLIS_LONGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_PREMIUM_CAPABILITY_PURCHASE_CONDITION_BACKOFF_HYSTERESIS_TIME_MILLIS_LONG"/>
        /// </summary>
        public static Java.Lang.String KEY_PREMIUM_CAPABILITY_PURCHASE_CONDITION_BACKOFF_HYSTERESIS_TIME_MILLIS_LONG { get { if (!_KEY_PREMIUM_CAPABILITY_PURCHASE_CONDITION_BACKOFF_HYSTERESIS_TIME_MILLIS_LONGReady) { _KEY_PREMIUM_CAPABILITY_PURCHASE_CONDITION_BACKOFF_HYSTERESIS_TIME_MILLIS_LONGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_PREMIUM_CAPABILITY_PURCHASE_CONDITION_BACKOFF_HYSTERESIS_TIME_MILLIS_LONG"); _KEY_PREMIUM_CAPABILITY_PURCHASE_CONDITION_BACKOFF_HYSTERESIS_TIME_MILLIS_LONGReady = true; } return _KEY_PREMIUM_CAPABILITY_PURCHASE_CONDITION_BACKOFF_HYSTERESIS_TIME_MILLIS_LONGContent; } }
        private static Java.Lang.String _KEY_PREMIUM_CAPABILITY_PURCHASE_CONDITION_BACKOFF_HYSTERESIS_TIME_MILLIS_LONGContent = default;
        private static bool _KEY_PREMIUM_CAPABILITY_PURCHASE_CONDITION_BACKOFF_HYSTERESIS_TIME_MILLIS_LONGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_PREMIUM_CAPABILITY_PURCHASE_URL_STRING"/>
        /// </summary>
        public static Java.Lang.String KEY_PREMIUM_CAPABILITY_PURCHASE_URL_STRING { get { if (!_KEY_PREMIUM_CAPABILITY_PURCHASE_URL_STRINGReady) { _KEY_PREMIUM_CAPABILITY_PURCHASE_URL_STRINGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_PREMIUM_CAPABILITY_PURCHASE_URL_STRING"); _KEY_PREMIUM_CAPABILITY_PURCHASE_URL_STRINGReady = true; } return _KEY_PREMIUM_CAPABILITY_PURCHASE_URL_STRINGContent; } }
        private static Java.Lang.String _KEY_PREMIUM_CAPABILITY_PURCHASE_URL_STRINGContent = default;
        private static bool _KEY_PREMIUM_CAPABILITY_PURCHASE_URL_STRINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_PREMIUM_CAPABILITY_SUPPORTED_ON_LTE_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_PREMIUM_CAPABILITY_SUPPORTED_ON_LTE_BOOL { get { if (!_KEY_PREMIUM_CAPABILITY_SUPPORTED_ON_LTE_BOOLReady) { _KEY_PREMIUM_CAPABILITY_SUPPORTED_ON_LTE_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_PREMIUM_CAPABILITY_SUPPORTED_ON_LTE_BOOL"); _KEY_PREMIUM_CAPABILITY_SUPPORTED_ON_LTE_BOOLReady = true; } return _KEY_PREMIUM_CAPABILITY_SUPPORTED_ON_LTE_BOOLContent; } }
        private static Java.Lang.String _KEY_PREMIUM_CAPABILITY_SUPPORTED_ON_LTE_BOOLContent = default;
        private static bool _KEY_PREMIUM_CAPABILITY_SUPPORTED_ON_LTE_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_PREVENT_CLIR_ACTIVATION_AND_DEACTIVATION_CODE_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_PREVENT_CLIR_ACTIVATION_AND_DEACTIVATION_CODE_BOOL { get { if (!_KEY_PREVENT_CLIR_ACTIVATION_AND_DEACTIVATION_CODE_BOOLReady) { _KEY_PREVENT_CLIR_ACTIVATION_AND_DEACTIVATION_CODE_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_PREVENT_CLIR_ACTIVATION_AND_DEACTIVATION_CODE_BOOL"); _KEY_PREVENT_CLIR_ACTIVATION_AND_DEACTIVATION_CODE_BOOLReady = true; } return _KEY_PREVENT_CLIR_ACTIVATION_AND_DEACTIVATION_CODE_BOOLContent; } }
        private static Java.Lang.String _KEY_PREVENT_CLIR_ACTIVATION_AND_DEACTIVATION_CODE_BOOLContent = default;
        private static bool _KEY_PREVENT_CLIR_ACTIVATION_AND_DEACTIVATION_CODE_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_RADIO_RESTART_FAILURE_CAUSES_INT_ARRAY"/>
        /// </summary>
        public static Java.Lang.String KEY_RADIO_RESTART_FAILURE_CAUSES_INT_ARRAY { get { if (!_KEY_RADIO_RESTART_FAILURE_CAUSES_INT_ARRAYReady) { _KEY_RADIO_RESTART_FAILURE_CAUSES_INT_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_RADIO_RESTART_FAILURE_CAUSES_INT_ARRAY"); _KEY_RADIO_RESTART_FAILURE_CAUSES_INT_ARRAYReady = true; } return _KEY_RADIO_RESTART_FAILURE_CAUSES_INT_ARRAYContent; } }
        private static Java.Lang.String _KEY_RADIO_RESTART_FAILURE_CAUSES_INT_ARRAYContent = default;
        private static bool _KEY_RADIO_RESTART_FAILURE_CAUSES_INT_ARRAYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_RATCHET_NR_ADVANCED_BANDWIDTH_IF_RRC_IDLE_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_RATCHET_NR_ADVANCED_BANDWIDTH_IF_RRC_IDLE_BOOL { get { if (!_KEY_RATCHET_NR_ADVANCED_BANDWIDTH_IF_RRC_IDLE_BOOLReady) { _KEY_RATCHET_NR_ADVANCED_BANDWIDTH_IF_RRC_IDLE_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_RATCHET_NR_ADVANCED_BANDWIDTH_IF_RRC_IDLE_BOOL"); _KEY_RATCHET_NR_ADVANCED_BANDWIDTH_IF_RRC_IDLE_BOOLReady = true; } return _KEY_RATCHET_NR_ADVANCED_BANDWIDTH_IF_RRC_IDLE_BOOLContent; } }
        private static Java.Lang.String _KEY_RATCHET_NR_ADVANCED_BANDWIDTH_IF_RRC_IDLE_BOOLContent = default;
        private static bool _KEY_RATCHET_NR_ADVANCED_BANDWIDTH_IF_RRC_IDLE_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_RCS_CONFIG_SERVER_URL_STRING"/>
        /// </summary>
        public static Java.Lang.String KEY_RCS_CONFIG_SERVER_URL_STRING { get { if (!_KEY_RCS_CONFIG_SERVER_URL_STRINGReady) { _KEY_RCS_CONFIG_SERVER_URL_STRINGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_RCS_CONFIG_SERVER_URL_STRING"); _KEY_RCS_CONFIG_SERVER_URL_STRINGReady = true; } return _KEY_RCS_CONFIG_SERVER_URL_STRINGContent; } }
        private static Java.Lang.String _KEY_RCS_CONFIG_SERVER_URL_STRINGContent = default;
        private static bool _KEY_RCS_CONFIG_SERVER_URL_STRINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_READ_ONLY_APN_FIELDS_STRING_ARRAY"/>
        /// </summary>
        public static Java.Lang.String KEY_READ_ONLY_APN_FIELDS_STRING_ARRAY { get { if (!_KEY_READ_ONLY_APN_FIELDS_STRING_ARRAYReady) { _KEY_READ_ONLY_APN_FIELDS_STRING_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_READ_ONLY_APN_FIELDS_STRING_ARRAY"); _KEY_READ_ONLY_APN_FIELDS_STRING_ARRAYReady = true; } return _KEY_READ_ONLY_APN_FIELDS_STRING_ARRAYContent; } }
        private static Java.Lang.String _KEY_READ_ONLY_APN_FIELDS_STRING_ARRAYContent = default;
        private static bool _KEY_READ_ONLY_APN_FIELDS_STRING_ARRAYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_READ_ONLY_APN_TYPES_STRING_ARRAY"/>
        /// </summary>
        public static Java.Lang.String KEY_READ_ONLY_APN_TYPES_STRING_ARRAY { get { if (!_KEY_READ_ONLY_APN_TYPES_STRING_ARRAYReady) { _KEY_READ_ONLY_APN_TYPES_STRING_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_READ_ONLY_APN_TYPES_STRING_ARRAY"); _KEY_READ_ONLY_APN_TYPES_STRING_ARRAYReady = true; } return _KEY_READ_ONLY_APN_TYPES_STRING_ARRAYContent; } }
        private static Java.Lang.String _KEY_READ_ONLY_APN_TYPES_STRING_ARRAYContent = default;
        private static bool _KEY_READ_ONLY_APN_TYPES_STRING_ARRAYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_REQUIRE_ENTITLEMENT_CHECKS_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_REQUIRE_ENTITLEMENT_CHECKS_BOOL { get { if (!_KEY_REQUIRE_ENTITLEMENT_CHECKS_BOOLReady) { _KEY_REQUIRE_ENTITLEMENT_CHECKS_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_REQUIRE_ENTITLEMENT_CHECKS_BOOL"); _KEY_REQUIRE_ENTITLEMENT_CHECKS_BOOLReady = true; } return _KEY_REQUIRE_ENTITLEMENT_CHECKS_BOOLContent; } }
        private static Java.Lang.String _KEY_REQUIRE_ENTITLEMENT_CHECKS_BOOLContent = default;
        private static bool _KEY_REQUIRE_ENTITLEMENT_CHECKS_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_RESTART_RADIO_ON_PDP_FAIL_REGULAR_DEACTIVATION_BOOL"/>
        /// </summary>
        [global::System.Obsolete()]
        public static Java.Lang.String KEY_RESTART_RADIO_ON_PDP_FAIL_REGULAR_DEACTIVATION_BOOL { get { if (!_KEY_RESTART_RADIO_ON_PDP_FAIL_REGULAR_DEACTIVATION_BOOLReady) { _KEY_RESTART_RADIO_ON_PDP_FAIL_REGULAR_DEACTIVATION_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_RESTART_RADIO_ON_PDP_FAIL_REGULAR_DEACTIVATION_BOOL"); _KEY_RESTART_RADIO_ON_PDP_FAIL_REGULAR_DEACTIVATION_BOOLReady = true; } return _KEY_RESTART_RADIO_ON_PDP_FAIL_REGULAR_DEACTIVATION_BOOLContent; } }
        private static Java.Lang.String _KEY_RESTART_RADIO_ON_PDP_FAIL_REGULAR_DEACTIVATION_BOOLContent = default;
        private static bool _KEY_RESTART_RADIO_ON_PDP_FAIL_REGULAR_DEACTIVATION_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_RTT_AUTO_UPGRADE_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_RTT_AUTO_UPGRADE_BOOL { get { if (!_KEY_RTT_AUTO_UPGRADE_BOOLReady) { _KEY_RTT_AUTO_UPGRADE_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_RTT_AUTO_UPGRADE_BOOL"); _KEY_RTT_AUTO_UPGRADE_BOOLReady = true; } return _KEY_RTT_AUTO_UPGRADE_BOOLContent; } }
        private static Java.Lang.String _KEY_RTT_AUTO_UPGRADE_BOOLContent = default;
        private static bool _KEY_RTT_AUTO_UPGRADE_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_RTT_DOWNGRADE_SUPPORTED_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_RTT_DOWNGRADE_SUPPORTED_BOOL { get { if (!_KEY_RTT_DOWNGRADE_SUPPORTED_BOOLReady) { _KEY_RTT_DOWNGRADE_SUPPORTED_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_RTT_DOWNGRADE_SUPPORTED_BOOL"); _KEY_RTT_DOWNGRADE_SUPPORTED_BOOLReady = true; } return _KEY_RTT_DOWNGRADE_SUPPORTED_BOOLContent; } }
        private static Java.Lang.String _KEY_RTT_DOWNGRADE_SUPPORTED_BOOLContent = default;
        private static bool _KEY_RTT_DOWNGRADE_SUPPORTED_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_RTT_SUPPORTED_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_RTT_SUPPORTED_BOOL { get { if (!_KEY_RTT_SUPPORTED_BOOLReady) { _KEY_RTT_SUPPORTED_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_RTT_SUPPORTED_BOOL"); _KEY_RTT_SUPPORTED_BOOLReady = true; } return _KEY_RTT_SUPPORTED_BOOLContent; } }
        private static Java.Lang.String _KEY_RTT_SUPPORTED_BOOLContent = default;
        private static bool _KEY_RTT_SUPPORTED_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_RTT_SUPPORTED_FOR_VT_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_RTT_SUPPORTED_FOR_VT_BOOL { get { if (!_KEY_RTT_SUPPORTED_FOR_VT_BOOLReady) { _KEY_RTT_SUPPORTED_FOR_VT_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_RTT_SUPPORTED_FOR_VT_BOOL"); _KEY_RTT_SUPPORTED_FOR_VT_BOOLReady = true; } return _KEY_RTT_SUPPORTED_FOR_VT_BOOLContent; } }
        private static Java.Lang.String _KEY_RTT_SUPPORTED_FOR_VT_BOOLContent = default;
        private static bool _KEY_RTT_SUPPORTED_FOR_VT_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_RTT_SUPPORTED_WHILE_ROAMING_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_RTT_SUPPORTED_WHILE_ROAMING_BOOL { get { if (!_KEY_RTT_SUPPORTED_WHILE_ROAMING_BOOLReady) { _KEY_RTT_SUPPORTED_WHILE_ROAMING_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_RTT_SUPPORTED_WHILE_ROAMING_BOOL"); _KEY_RTT_SUPPORTED_WHILE_ROAMING_BOOLReady = true; } return _KEY_RTT_SUPPORTED_WHILE_ROAMING_BOOLContent; } }
        private static Java.Lang.String _KEY_RTT_SUPPORTED_WHILE_ROAMING_BOOLContent = default;
        private static bool _KEY_RTT_SUPPORTED_WHILE_ROAMING_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_RTT_UPGRADE_SUPPORTED_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_RTT_UPGRADE_SUPPORTED_BOOL { get { if (!_KEY_RTT_UPGRADE_SUPPORTED_BOOLReady) { _KEY_RTT_UPGRADE_SUPPORTED_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_RTT_UPGRADE_SUPPORTED_BOOL"); _KEY_RTT_UPGRADE_SUPPORTED_BOOLReady = true; } return _KEY_RTT_UPGRADE_SUPPORTED_BOOLContent; } }
        private static Java.Lang.String _KEY_RTT_UPGRADE_SUPPORTED_BOOLContent = default;
        private static bool _KEY_RTT_UPGRADE_SUPPORTED_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_RTT_UPGRADE_SUPPORTED_FOR_DOWNGRADED_VT_CALL_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_RTT_UPGRADE_SUPPORTED_FOR_DOWNGRADED_VT_CALL_BOOL { get { if (!_KEY_RTT_UPGRADE_SUPPORTED_FOR_DOWNGRADED_VT_CALL_BOOLReady) { _KEY_RTT_UPGRADE_SUPPORTED_FOR_DOWNGRADED_VT_CALL_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_RTT_UPGRADE_SUPPORTED_FOR_DOWNGRADED_VT_CALL_BOOL"); _KEY_RTT_UPGRADE_SUPPORTED_FOR_DOWNGRADED_VT_CALL_BOOLReady = true; } return _KEY_RTT_UPGRADE_SUPPORTED_FOR_DOWNGRADED_VT_CALL_BOOLContent; } }
        private static Java.Lang.String _KEY_RTT_UPGRADE_SUPPORTED_FOR_DOWNGRADED_VT_CALL_BOOLContent = default;
        private static bool _KEY_RTT_UPGRADE_SUPPORTED_FOR_DOWNGRADED_VT_CALL_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_SHOW_4G_FOR_3G_DATA_ICON_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_SHOW_4G_FOR_3G_DATA_ICON_BOOL { get { if (!_KEY_SHOW_4G_FOR_3G_DATA_ICON_BOOLReady) { _KEY_SHOW_4G_FOR_3G_DATA_ICON_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SHOW_4G_FOR_3G_DATA_ICON_BOOL"); _KEY_SHOW_4G_FOR_3G_DATA_ICON_BOOLReady = true; } return _KEY_SHOW_4G_FOR_3G_DATA_ICON_BOOLContent; } }
        private static Java.Lang.String _KEY_SHOW_4G_FOR_3G_DATA_ICON_BOOLContent = default;
        private static bool _KEY_SHOW_4G_FOR_3G_DATA_ICON_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_SHOW_4G_FOR_LTE_DATA_ICON_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_SHOW_4G_FOR_LTE_DATA_ICON_BOOL { get { if (!_KEY_SHOW_4G_FOR_LTE_DATA_ICON_BOOLReady) { _KEY_SHOW_4G_FOR_LTE_DATA_ICON_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SHOW_4G_FOR_LTE_DATA_ICON_BOOL"); _KEY_SHOW_4G_FOR_LTE_DATA_ICON_BOOLReady = true; } return _KEY_SHOW_4G_FOR_LTE_DATA_ICON_BOOLContent; } }
        private static Java.Lang.String _KEY_SHOW_4G_FOR_LTE_DATA_ICON_BOOLContent = default;
        private static bool _KEY_SHOW_4G_FOR_LTE_DATA_ICON_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_SHOW_APN_SETTING_CDMA_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_SHOW_APN_SETTING_CDMA_BOOL { get { if (!_KEY_SHOW_APN_SETTING_CDMA_BOOLReady) { _KEY_SHOW_APN_SETTING_CDMA_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SHOW_APN_SETTING_CDMA_BOOL"); _KEY_SHOW_APN_SETTING_CDMA_BOOLReady = true; } return _KEY_SHOW_APN_SETTING_CDMA_BOOLContent; } }
        private static Java.Lang.String _KEY_SHOW_APN_SETTING_CDMA_BOOLContent = default;
        private static bool _KEY_SHOW_APN_SETTING_CDMA_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_SHOW_BLOCKING_PAY_PHONE_OPTION_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_SHOW_BLOCKING_PAY_PHONE_OPTION_BOOL { get { if (!_KEY_SHOW_BLOCKING_PAY_PHONE_OPTION_BOOLReady) { _KEY_SHOW_BLOCKING_PAY_PHONE_OPTION_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SHOW_BLOCKING_PAY_PHONE_OPTION_BOOL"); _KEY_SHOW_BLOCKING_PAY_PHONE_OPTION_BOOLReady = true; } return _KEY_SHOW_BLOCKING_PAY_PHONE_OPTION_BOOLContent; } }
        private static Java.Lang.String _KEY_SHOW_BLOCKING_PAY_PHONE_OPTION_BOOLContent = default;
        private static bool _KEY_SHOW_BLOCKING_PAY_PHONE_OPTION_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_SHOW_CALL_BLOCKING_DISABLED_NOTIFICATION_ALWAYS_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_SHOW_CALL_BLOCKING_DISABLED_NOTIFICATION_ALWAYS_BOOL { get { if (!_KEY_SHOW_CALL_BLOCKING_DISABLED_NOTIFICATION_ALWAYS_BOOLReady) { _KEY_SHOW_CALL_BLOCKING_DISABLED_NOTIFICATION_ALWAYS_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SHOW_CALL_BLOCKING_DISABLED_NOTIFICATION_ALWAYS_BOOL"); _KEY_SHOW_CALL_BLOCKING_DISABLED_NOTIFICATION_ALWAYS_BOOLReady = true; } return _KEY_SHOW_CALL_BLOCKING_DISABLED_NOTIFICATION_ALWAYS_BOOLContent; } }
        private static Java.Lang.String _KEY_SHOW_CALL_BLOCKING_DISABLED_NOTIFICATION_ALWAYS_BOOLContent = default;
        private static bool _KEY_SHOW_CALL_BLOCKING_DISABLED_NOTIFICATION_ALWAYS_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_SHOW_CDMA_CHOICES_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_SHOW_CDMA_CHOICES_BOOL { get { if (!_KEY_SHOW_CDMA_CHOICES_BOOLReady) { _KEY_SHOW_CDMA_CHOICES_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SHOW_CDMA_CHOICES_BOOL"); _KEY_SHOW_CDMA_CHOICES_BOOLReady = true; } return _KEY_SHOW_CDMA_CHOICES_BOOLContent; } }
        private static Java.Lang.String _KEY_SHOW_CDMA_CHOICES_BOOLContent = default;
        private static bool _KEY_SHOW_CDMA_CHOICES_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_SHOW_FORWARDED_NUMBER_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_SHOW_FORWARDED_NUMBER_BOOL { get { if (!_KEY_SHOW_FORWARDED_NUMBER_BOOLReady) { _KEY_SHOW_FORWARDED_NUMBER_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SHOW_FORWARDED_NUMBER_BOOL"); _KEY_SHOW_FORWARDED_NUMBER_BOOLReady = true; } return _KEY_SHOW_FORWARDED_NUMBER_BOOLContent; } }
        private static Java.Lang.String _KEY_SHOW_FORWARDED_NUMBER_BOOLContent = default;
        private static bool _KEY_SHOW_FORWARDED_NUMBER_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_SHOW_ICCID_IN_SIM_STATUS_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_SHOW_ICCID_IN_SIM_STATUS_BOOL { get { if (!_KEY_SHOW_ICCID_IN_SIM_STATUS_BOOLReady) { _KEY_SHOW_ICCID_IN_SIM_STATUS_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SHOW_ICCID_IN_SIM_STATUS_BOOL"); _KEY_SHOW_ICCID_IN_SIM_STATUS_BOOLReady = true; } return _KEY_SHOW_ICCID_IN_SIM_STATUS_BOOLContent; } }
        private static Java.Lang.String _KEY_SHOW_ICCID_IN_SIM_STATUS_BOOLContent = default;
        private static bool _KEY_SHOW_ICCID_IN_SIM_STATUS_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_SHOW_IMS_REGISTRATION_STATUS_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_SHOW_IMS_REGISTRATION_STATUS_BOOL { get { if (!_KEY_SHOW_IMS_REGISTRATION_STATUS_BOOLReady) { _KEY_SHOW_IMS_REGISTRATION_STATUS_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SHOW_IMS_REGISTRATION_STATUS_BOOL"); _KEY_SHOW_IMS_REGISTRATION_STATUS_BOOLReady = true; } return _KEY_SHOW_IMS_REGISTRATION_STATUS_BOOLContent; } }
        private static Java.Lang.String _KEY_SHOW_IMS_REGISTRATION_STATUS_BOOLContent = default;
        private static bool _KEY_SHOW_IMS_REGISTRATION_STATUS_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_SHOW_ONSCREEN_DIAL_BUTTON_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_SHOW_ONSCREEN_DIAL_BUTTON_BOOL { get { if (!_KEY_SHOW_ONSCREEN_DIAL_BUTTON_BOOLReady) { _KEY_SHOW_ONSCREEN_DIAL_BUTTON_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SHOW_ONSCREEN_DIAL_BUTTON_BOOL"); _KEY_SHOW_ONSCREEN_DIAL_BUTTON_BOOLReady = true; } return _KEY_SHOW_ONSCREEN_DIAL_BUTTON_BOOLContent; } }
        private static Java.Lang.String _KEY_SHOW_ONSCREEN_DIAL_BUTTON_BOOLContent = default;
        private static bool _KEY_SHOW_ONSCREEN_DIAL_BUTTON_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_SHOW_SIGNAL_STRENGTH_IN_SIM_STATUS_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_SHOW_SIGNAL_STRENGTH_IN_SIM_STATUS_BOOL { get { if (!_KEY_SHOW_SIGNAL_STRENGTH_IN_SIM_STATUS_BOOLReady) { _KEY_SHOW_SIGNAL_STRENGTH_IN_SIM_STATUS_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SHOW_SIGNAL_STRENGTH_IN_SIM_STATUS_BOOL"); _KEY_SHOW_SIGNAL_STRENGTH_IN_SIM_STATUS_BOOLReady = true; } return _KEY_SHOW_SIGNAL_STRENGTH_IN_SIM_STATUS_BOOLContent; } }
        private static Java.Lang.String _KEY_SHOW_SIGNAL_STRENGTH_IN_SIM_STATUS_BOOLContent = default;
        private static bool _KEY_SHOW_SIGNAL_STRENGTH_IN_SIM_STATUS_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_SHOW_VIDEO_CALL_CHARGES_ALERT_DIALOG_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_SHOW_VIDEO_CALL_CHARGES_ALERT_DIALOG_BOOL { get { if (!_KEY_SHOW_VIDEO_CALL_CHARGES_ALERT_DIALOG_BOOLReady) { _KEY_SHOW_VIDEO_CALL_CHARGES_ALERT_DIALOG_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SHOW_VIDEO_CALL_CHARGES_ALERT_DIALOG_BOOL"); _KEY_SHOW_VIDEO_CALL_CHARGES_ALERT_DIALOG_BOOLReady = true; } return _KEY_SHOW_VIDEO_CALL_CHARGES_ALERT_DIALOG_BOOLContent; } }
        private static Java.Lang.String _KEY_SHOW_VIDEO_CALL_CHARGES_ALERT_DIALOG_BOOLContent = default;
        private static bool _KEY_SHOW_VIDEO_CALL_CHARGES_ALERT_DIALOG_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_SHOW_WFC_LOCATION_PRIVACY_POLICY_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_SHOW_WFC_LOCATION_PRIVACY_POLICY_BOOL { get { if (!_KEY_SHOW_WFC_LOCATION_PRIVACY_POLICY_BOOLReady) { _KEY_SHOW_WFC_LOCATION_PRIVACY_POLICY_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SHOW_WFC_LOCATION_PRIVACY_POLICY_BOOL"); _KEY_SHOW_WFC_LOCATION_PRIVACY_POLICY_BOOLReady = true; } return _KEY_SHOW_WFC_LOCATION_PRIVACY_POLICY_BOOLContent; } }
        private static Java.Lang.String _KEY_SHOW_WFC_LOCATION_PRIVACY_POLICY_BOOLContent = default;
        private static bool _KEY_SHOW_WFC_LOCATION_PRIVACY_POLICY_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_SIM_COUNTRY_ISO_OVERRIDE_STRING"/>
        /// </summary>
        public static Java.Lang.String KEY_SIM_COUNTRY_ISO_OVERRIDE_STRING { get { if (!_KEY_SIM_COUNTRY_ISO_OVERRIDE_STRINGReady) { _KEY_SIM_COUNTRY_ISO_OVERRIDE_STRINGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SIM_COUNTRY_ISO_OVERRIDE_STRING"); _KEY_SIM_COUNTRY_ISO_OVERRIDE_STRINGReady = true; } return _KEY_SIM_COUNTRY_ISO_OVERRIDE_STRINGContent; } }
        private static Java.Lang.String _KEY_SIM_COUNTRY_ISO_OVERRIDE_STRINGContent = default;
        private static bool _KEY_SIM_COUNTRY_ISO_OVERRIDE_STRINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_SIM_NETWORK_UNLOCK_ALLOW_DISMISS_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_SIM_NETWORK_UNLOCK_ALLOW_DISMISS_BOOL { get { if (!_KEY_SIM_NETWORK_UNLOCK_ALLOW_DISMISS_BOOLReady) { _KEY_SIM_NETWORK_UNLOCK_ALLOW_DISMISS_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SIM_NETWORK_UNLOCK_ALLOW_DISMISS_BOOL"); _KEY_SIM_NETWORK_UNLOCK_ALLOW_DISMISS_BOOLReady = true; } return _KEY_SIM_NETWORK_UNLOCK_ALLOW_DISMISS_BOOLContent; } }
        private static Java.Lang.String _KEY_SIM_NETWORK_UNLOCK_ALLOW_DISMISS_BOOLContent = default;
        private static bool _KEY_SIM_NETWORK_UNLOCK_ALLOW_DISMISS_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_SIMPLIFIED_NETWORK_SETTINGS_BOOL"/>
        /// </summary>
        [global::System.Obsolete()]
        public static Java.Lang.String KEY_SIMPLIFIED_NETWORK_SETTINGS_BOOL { get { if (!_KEY_SIMPLIFIED_NETWORK_SETTINGS_BOOLReady) { _KEY_SIMPLIFIED_NETWORK_SETTINGS_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SIMPLIFIED_NETWORK_SETTINGS_BOOL"); _KEY_SIMPLIFIED_NETWORK_SETTINGS_BOOLReady = true; } return _KEY_SIMPLIFIED_NETWORK_SETTINGS_BOOLContent; } }
        private static Java.Lang.String _KEY_SIMPLIFIED_NETWORK_SETTINGS_BOOLContent = default;
        private static bool _KEY_SIMPLIFIED_NETWORK_SETTINGS_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_SMDP_SERVER_ADDRESS_STRING"/>
        /// </summary>
        public static Java.Lang.String KEY_SMDP_SERVER_ADDRESS_STRING { get { if (!_KEY_SMDP_SERVER_ADDRESS_STRINGReady) { _KEY_SMDP_SERVER_ADDRESS_STRINGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SMDP_SERVER_ADDRESS_STRING"); _KEY_SMDP_SERVER_ADDRESS_STRINGReady = true; } return _KEY_SMDP_SERVER_ADDRESS_STRINGContent; } }
        private static Java.Lang.String _KEY_SMDP_SERVER_ADDRESS_STRINGContent = default;
        private static bool _KEY_SMDP_SERVER_ADDRESS_STRINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_SMS_REQUIRES_DESTINATION_NUMBER_CONVERSION_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_SMS_REQUIRES_DESTINATION_NUMBER_CONVERSION_BOOL { get { if (!_KEY_SMS_REQUIRES_DESTINATION_NUMBER_CONVERSION_BOOLReady) { _KEY_SMS_REQUIRES_DESTINATION_NUMBER_CONVERSION_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SMS_REQUIRES_DESTINATION_NUMBER_CONVERSION_BOOL"); _KEY_SMS_REQUIRES_DESTINATION_NUMBER_CONVERSION_BOOLReady = true; } return _KEY_SMS_REQUIRES_DESTINATION_NUMBER_CONVERSION_BOOLContent; } }
        private static Java.Lang.String _KEY_SMS_REQUIRES_DESTINATION_NUMBER_CONVERSION_BOOLContent = default;
        private static bool _KEY_SMS_REQUIRES_DESTINATION_NUMBER_CONVERSION_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_SUBSCRIPTION_GROUP_UUID_STRING"/>
        /// </summary>
        public static Java.Lang.String KEY_SUBSCRIPTION_GROUP_UUID_STRING { get { if (!_KEY_SUBSCRIPTION_GROUP_UUID_STRINGReady) { _KEY_SUBSCRIPTION_GROUP_UUID_STRINGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SUBSCRIPTION_GROUP_UUID_STRING"); _KEY_SUBSCRIPTION_GROUP_UUID_STRINGReady = true; } return _KEY_SUBSCRIPTION_GROUP_UUID_STRINGContent; } }
        private static Java.Lang.String _KEY_SUBSCRIPTION_GROUP_UUID_STRINGContent = default;
        private static bool _KEY_SUBSCRIPTION_GROUP_UUID_STRINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_SUPPORT_3GPP_CALL_FORWARDING_WHILE_ROAMING_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_SUPPORT_3GPP_CALL_FORWARDING_WHILE_ROAMING_BOOL { get { if (!_KEY_SUPPORT_3GPP_CALL_FORWARDING_WHILE_ROAMING_BOOLReady) { _KEY_SUPPORT_3GPP_CALL_FORWARDING_WHILE_ROAMING_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SUPPORT_3GPP_CALL_FORWARDING_WHILE_ROAMING_BOOL"); _KEY_SUPPORT_3GPP_CALL_FORWARDING_WHILE_ROAMING_BOOLReady = true; } return _KEY_SUPPORT_3GPP_CALL_FORWARDING_WHILE_ROAMING_BOOLContent; } }
        private static Java.Lang.String _KEY_SUPPORT_3GPP_CALL_FORWARDING_WHILE_ROAMING_BOOLContent = default;
        private static bool _KEY_SUPPORT_3GPP_CALL_FORWARDING_WHILE_ROAMING_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_SUPPORT_ADD_CONFERENCE_PARTICIPANTS_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_SUPPORT_ADD_CONFERENCE_PARTICIPANTS_BOOL { get { if (!_KEY_SUPPORT_ADD_CONFERENCE_PARTICIPANTS_BOOLReady) { _KEY_SUPPORT_ADD_CONFERENCE_PARTICIPANTS_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SUPPORT_ADD_CONFERENCE_PARTICIPANTS_BOOL"); _KEY_SUPPORT_ADD_CONFERENCE_PARTICIPANTS_BOOLReady = true; } return _KEY_SUPPORT_ADD_CONFERENCE_PARTICIPANTS_BOOLContent; } }
        private static Java.Lang.String _KEY_SUPPORT_ADD_CONFERENCE_PARTICIPANTS_BOOLContent = default;
        private static bool _KEY_SUPPORT_ADD_CONFERENCE_PARTICIPANTS_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_SUPPORT_ADHOC_CONFERENCE_CALLS_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_SUPPORT_ADHOC_CONFERENCE_CALLS_BOOL { get { if (!_KEY_SUPPORT_ADHOC_CONFERENCE_CALLS_BOOLReady) { _KEY_SUPPORT_ADHOC_CONFERENCE_CALLS_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SUPPORT_ADHOC_CONFERENCE_CALLS_BOOL"); _KEY_SUPPORT_ADHOC_CONFERENCE_CALLS_BOOLReady = true; } return _KEY_SUPPORT_ADHOC_CONFERENCE_CALLS_BOOLContent; } }
        private static Java.Lang.String _KEY_SUPPORT_ADHOC_CONFERENCE_CALLS_BOOLContent = default;
        private static bool _KEY_SUPPORT_ADHOC_CONFERENCE_CALLS_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_SUPPORT_CLIR_NETWORK_DEFAULT_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_SUPPORT_CLIR_NETWORK_DEFAULT_BOOL { get { if (!_KEY_SUPPORT_CLIR_NETWORK_DEFAULT_BOOLReady) { _KEY_SUPPORT_CLIR_NETWORK_DEFAULT_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SUPPORT_CLIR_NETWORK_DEFAULT_BOOL"); _KEY_SUPPORT_CLIR_NETWORK_DEFAULT_BOOLReady = true; } return _KEY_SUPPORT_CLIR_NETWORK_DEFAULT_BOOLContent; } }
        private static Java.Lang.String _KEY_SUPPORT_CLIR_NETWORK_DEFAULT_BOOLContent = default;
        private static bool _KEY_SUPPORT_CLIR_NETWORK_DEFAULT_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_SUPPORT_CONFERENCE_CALL_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_SUPPORT_CONFERENCE_CALL_BOOL { get { if (!_KEY_SUPPORT_CONFERENCE_CALL_BOOLReady) { _KEY_SUPPORT_CONFERENCE_CALL_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SUPPORT_CONFERENCE_CALL_BOOL"); _KEY_SUPPORT_CONFERENCE_CALL_BOOLReady = true; } return _KEY_SUPPORT_CONFERENCE_CALL_BOOLContent; } }
        private static Java.Lang.String _KEY_SUPPORT_CONFERENCE_CALL_BOOLContent = default;
        private static bool _KEY_SUPPORT_CONFERENCE_CALL_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_SUPPORT_EMERGENCY_SMS_OVER_IMS_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_SUPPORT_EMERGENCY_SMS_OVER_IMS_BOOL { get { if (!_KEY_SUPPORT_EMERGENCY_SMS_OVER_IMS_BOOLReady) { _KEY_SUPPORT_EMERGENCY_SMS_OVER_IMS_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SUPPORT_EMERGENCY_SMS_OVER_IMS_BOOL"); _KEY_SUPPORT_EMERGENCY_SMS_OVER_IMS_BOOLReady = true; } return _KEY_SUPPORT_EMERGENCY_SMS_OVER_IMS_BOOLContent; } }
        private static Java.Lang.String _KEY_SUPPORT_EMERGENCY_SMS_OVER_IMS_BOOLContent = default;
        private static bool _KEY_SUPPORT_EMERGENCY_SMS_OVER_IMS_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_SUPPORT_ENHANCED_CALL_BLOCKING_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_SUPPORT_ENHANCED_CALL_BLOCKING_BOOL { get { if (!_KEY_SUPPORT_ENHANCED_CALL_BLOCKING_BOOLReady) { _KEY_SUPPORT_ENHANCED_CALL_BLOCKING_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SUPPORT_ENHANCED_CALL_BLOCKING_BOOL"); _KEY_SUPPORT_ENHANCED_CALL_BLOCKING_BOOLReady = true; } return _KEY_SUPPORT_ENHANCED_CALL_BLOCKING_BOOLContent; } }
        private static Java.Lang.String _KEY_SUPPORT_ENHANCED_CALL_BLOCKING_BOOLContent = default;
        private static bool _KEY_SUPPORT_ENHANCED_CALL_BLOCKING_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_SUPPORT_IMS_CONFERENCE_EVENT_PACKAGE_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_SUPPORT_IMS_CONFERENCE_EVENT_PACKAGE_BOOL { get { if (!_KEY_SUPPORT_IMS_CONFERENCE_EVENT_PACKAGE_BOOLReady) { _KEY_SUPPORT_IMS_CONFERENCE_EVENT_PACKAGE_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SUPPORT_IMS_CONFERENCE_EVENT_PACKAGE_BOOL"); _KEY_SUPPORT_IMS_CONFERENCE_EVENT_PACKAGE_BOOLReady = true; } return _KEY_SUPPORT_IMS_CONFERENCE_EVENT_PACKAGE_BOOLContent; } }
        private static Java.Lang.String _KEY_SUPPORT_IMS_CONFERENCE_EVENT_PACKAGE_BOOLContent = default;
        private static bool _KEY_SUPPORT_IMS_CONFERENCE_EVENT_PACKAGE_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_SUPPORT_PAUSE_IMS_VIDEO_CALLS_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_SUPPORT_PAUSE_IMS_VIDEO_CALLS_BOOL { get { if (!_KEY_SUPPORT_PAUSE_IMS_VIDEO_CALLS_BOOLReady) { _KEY_SUPPORT_PAUSE_IMS_VIDEO_CALLS_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SUPPORT_PAUSE_IMS_VIDEO_CALLS_BOOL"); _KEY_SUPPORT_PAUSE_IMS_VIDEO_CALLS_BOOLReady = true; } return _KEY_SUPPORT_PAUSE_IMS_VIDEO_CALLS_BOOLContent; } }
        private static Java.Lang.String _KEY_SUPPORT_PAUSE_IMS_VIDEO_CALLS_BOOLContent = default;
        private static bool _KEY_SUPPORT_PAUSE_IMS_VIDEO_CALLS_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_SUPPORT_SWAP_AFTER_MERGE_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_SUPPORT_SWAP_AFTER_MERGE_BOOL { get { if (!_KEY_SUPPORT_SWAP_AFTER_MERGE_BOOLReady) { _KEY_SUPPORT_SWAP_AFTER_MERGE_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SUPPORT_SWAP_AFTER_MERGE_BOOL"); _KEY_SUPPORT_SWAP_AFTER_MERGE_BOOLReady = true; } return _KEY_SUPPORT_SWAP_AFTER_MERGE_BOOLContent; } }
        private static Java.Lang.String _KEY_SUPPORT_SWAP_AFTER_MERGE_BOOLContent = default;
        private static bool _KEY_SUPPORT_SWAP_AFTER_MERGE_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_SUPPORT_TDSCDMA_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_SUPPORT_TDSCDMA_BOOL { get { if (!_KEY_SUPPORT_TDSCDMA_BOOLReady) { _KEY_SUPPORT_TDSCDMA_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SUPPORT_TDSCDMA_BOOL"); _KEY_SUPPORT_TDSCDMA_BOOLReady = true; } return _KEY_SUPPORT_TDSCDMA_BOOLContent; } }
        private static Java.Lang.String _KEY_SUPPORT_TDSCDMA_BOOLContent = default;
        private static bool _KEY_SUPPORT_TDSCDMA_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_SUPPORT_TDSCDMA_ROAMING_NETWORKS_STRING_ARRAY"/>
        /// </summary>
        public static Java.Lang.String KEY_SUPPORT_TDSCDMA_ROAMING_NETWORKS_STRING_ARRAY { get { if (!_KEY_SUPPORT_TDSCDMA_ROAMING_NETWORKS_STRING_ARRAYReady) { _KEY_SUPPORT_TDSCDMA_ROAMING_NETWORKS_STRING_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SUPPORT_TDSCDMA_ROAMING_NETWORKS_STRING_ARRAY"); _KEY_SUPPORT_TDSCDMA_ROAMING_NETWORKS_STRING_ARRAYReady = true; } return _KEY_SUPPORT_TDSCDMA_ROAMING_NETWORKS_STRING_ARRAYContent; } }
        private static Java.Lang.String _KEY_SUPPORT_TDSCDMA_ROAMING_NETWORKS_STRING_ARRAYContent = default;
        private static bool _KEY_SUPPORT_TDSCDMA_ROAMING_NETWORKS_STRING_ARRAYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_SUPPORTED_PREMIUM_CAPABILITIES_INT_ARRAY"/>
        /// </summary>
        public static Java.Lang.String KEY_SUPPORTED_PREMIUM_CAPABILITIES_INT_ARRAY { get { if (!_KEY_SUPPORTED_PREMIUM_CAPABILITIES_INT_ARRAYReady) { _KEY_SUPPORTED_PREMIUM_CAPABILITIES_INT_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SUPPORTED_PREMIUM_CAPABILITIES_INT_ARRAY"); _KEY_SUPPORTED_PREMIUM_CAPABILITIES_INT_ARRAYReady = true; } return _KEY_SUPPORTED_PREMIUM_CAPABILITIES_INT_ARRAYContent; } }
        private static Java.Lang.String _KEY_SUPPORTED_PREMIUM_CAPABILITIES_INT_ARRAYContent = default;
        private static bool _KEY_SUPPORTED_PREMIUM_CAPABILITIES_INT_ARRAYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_SUPPORTS_CALL_COMPOSER_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_SUPPORTS_CALL_COMPOSER_BOOL { get { if (!_KEY_SUPPORTS_CALL_COMPOSER_BOOLReady) { _KEY_SUPPORTS_CALL_COMPOSER_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SUPPORTS_CALL_COMPOSER_BOOL"); _KEY_SUPPORTS_CALL_COMPOSER_BOOLReady = true; } return _KEY_SUPPORTS_CALL_COMPOSER_BOOLContent; } }
        private static Java.Lang.String _KEY_SUPPORTS_CALL_COMPOSER_BOOLContent = default;
        private static bool _KEY_SUPPORTS_CALL_COMPOSER_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_SUPPORTS_DEVICE_TO_DEVICE_COMMUNICATION_USING_DTMF_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_SUPPORTS_DEVICE_TO_DEVICE_COMMUNICATION_USING_DTMF_BOOL { get { if (!_KEY_SUPPORTS_DEVICE_TO_DEVICE_COMMUNICATION_USING_DTMF_BOOLReady) { _KEY_SUPPORTS_DEVICE_TO_DEVICE_COMMUNICATION_USING_DTMF_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SUPPORTS_DEVICE_TO_DEVICE_COMMUNICATION_USING_DTMF_BOOL"); _KEY_SUPPORTS_DEVICE_TO_DEVICE_COMMUNICATION_USING_DTMF_BOOLReady = true; } return _KEY_SUPPORTS_DEVICE_TO_DEVICE_COMMUNICATION_USING_DTMF_BOOLContent; } }
        private static Java.Lang.String _KEY_SUPPORTS_DEVICE_TO_DEVICE_COMMUNICATION_USING_DTMF_BOOLContent = default;
        private static bool _KEY_SUPPORTS_DEVICE_TO_DEVICE_COMMUNICATION_USING_DTMF_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_SUPPORTS_DEVICE_TO_DEVICE_COMMUNICATION_USING_RTP_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_SUPPORTS_DEVICE_TO_DEVICE_COMMUNICATION_USING_RTP_BOOL { get { if (!_KEY_SUPPORTS_DEVICE_TO_DEVICE_COMMUNICATION_USING_RTP_BOOLReady) { _KEY_SUPPORTS_DEVICE_TO_DEVICE_COMMUNICATION_USING_RTP_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SUPPORTS_DEVICE_TO_DEVICE_COMMUNICATION_USING_RTP_BOOL"); _KEY_SUPPORTS_DEVICE_TO_DEVICE_COMMUNICATION_USING_RTP_BOOLReady = true; } return _KEY_SUPPORTS_DEVICE_TO_DEVICE_COMMUNICATION_USING_RTP_BOOLContent; } }
        private static Java.Lang.String _KEY_SUPPORTS_DEVICE_TO_DEVICE_COMMUNICATION_USING_RTP_BOOLContent = default;
        private static bool _KEY_SUPPORTS_DEVICE_TO_DEVICE_COMMUNICATION_USING_RTP_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_SUPPORTS_SDP_NEGOTIATION_OF_D2D_RTP_HEADER_EXTENSIONS_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_SUPPORTS_SDP_NEGOTIATION_OF_D2D_RTP_HEADER_EXTENSIONS_BOOL { get { if (!_KEY_SUPPORTS_SDP_NEGOTIATION_OF_D2D_RTP_HEADER_EXTENSIONS_BOOLReady) { _KEY_SUPPORTS_SDP_NEGOTIATION_OF_D2D_RTP_HEADER_EXTENSIONS_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SUPPORTS_SDP_NEGOTIATION_OF_D2D_RTP_HEADER_EXTENSIONS_BOOL"); _KEY_SUPPORTS_SDP_NEGOTIATION_OF_D2D_RTP_HEADER_EXTENSIONS_BOOLReady = true; } return _KEY_SUPPORTS_SDP_NEGOTIATION_OF_D2D_RTP_HEADER_EXTENSIONS_BOOLContent; } }
        private static Java.Lang.String _KEY_SUPPORTS_SDP_NEGOTIATION_OF_D2D_RTP_HEADER_EXTENSIONS_BOOLContent = default;
        private static bool _KEY_SUPPORTS_SDP_NEGOTIATION_OF_D2D_RTP_HEADER_EXTENSIONS_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_SWITCH_DATA_TO_PRIMARY_IF_PRIMARY_IS_OOS_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_SWITCH_DATA_TO_PRIMARY_IF_PRIMARY_IS_OOS_BOOL { get { if (!_KEY_SWITCH_DATA_TO_PRIMARY_IF_PRIMARY_IS_OOS_BOOLReady) { _KEY_SWITCH_DATA_TO_PRIMARY_IF_PRIMARY_IS_OOS_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SWITCH_DATA_TO_PRIMARY_IF_PRIMARY_IS_OOS_BOOL"); _KEY_SWITCH_DATA_TO_PRIMARY_IF_PRIMARY_IS_OOS_BOOLReady = true; } return _KEY_SWITCH_DATA_TO_PRIMARY_IF_PRIMARY_IS_OOS_BOOLContent; } }
        private static Java.Lang.String _KEY_SWITCH_DATA_TO_PRIMARY_IF_PRIMARY_IS_OOS_BOOLContent = default;
        private static bool _KEY_SWITCH_DATA_TO_PRIMARY_IF_PRIMARY_IS_OOS_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_TREAT_DOWNGRADED_VIDEO_CALLS_AS_VIDEO_CALLS_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_TREAT_DOWNGRADED_VIDEO_CALLS_AS_VIDEO_CALLS_BOOL { get { if (!_KEY_TREAT_DOWNGRADED_VIDEO_CALLS_AS_VIDEO_CALLS_BOOLReady) { _KEY_TREAT_DOWNGRADED_VIDEO_CALLS_AS_VIDEO_CALLS_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_TREAT_DOWNGRADED_VIDEO_CALLS_AS_VIDEO_CALLS_BOOL"); _KEY_TREAT_DOWNGRADED_VIDEO_CALLS_AS_VIDEO_CALLS_BOOLReady = true; } return _KEY_TREAT_DOWNGRADED_VIDEO_CALLS_AS_VIDEO_CALLS_BOOLContent; } }
        private static Java.Lang.String _KEY_TREAT_DOWNGRADED_VIDEO_CALLS_AS_VIDEO_CALLS_BOOLContent = default;
        private static bool _KEY_TREAT_DOWNGRADED_VIDEO_CALLS_AS_VIDEO_CALLS_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_TTY_SUPPORTED_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_TTY_SUPPORTED_BOOL { get { if (!_KEY_TTY_SUPPORTED_BOOLReady) { _KEY_TTY_SUPPORTED_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_TTY_SUPPORTED_BOOL"); _KEY_TTY_SUPPORTED_BOOLReady = true; } return _KEY_TTY_SUPPORTED_BOOLContent; } }
        private static Java.Lang.String _KEY_TTY_SUPPORTED_BOOLContent = default;
        private static bool _KEY_TTY_SUPPORTED_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_UNLOGGABLE_NUMBERS_STRING_ARRAY"/>
        /// </summary>
        public static Java.Lang.String KEY_UNLOGGABLE_NUMBERS_STRING_ARRAY { get { if (!_KEY_UNLOGGABLE_NUMBERS_STRING_ARRAYReady) { _KEY_UNLOGGABLE_NUMBERS_STRING_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_UNLOGGABLE_NUMBERS_STRING_ARRAY"); _KEY_UNLOGGABLE_NUMBERS_STRING_ARRAYReady = true; } return _KEY_UNLOGGABLE_NUMBERS_STRING_ARRAYContent; } }
        private static Java.Lang.String _KEY_UNLOGGABLE_NUMBERS_STRING_ARRAYContent = default;
        private static bool _KEY_UNLOGGABLE_NUMBERS_STRING_ARRAYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_USE_ACS_FOR_RCS_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_USE_ACS_FOR_RCS_BOOL { get { if (!_KEY_USE_ACS_FOR_RCS_BOOLReady) { _KEY_USE_ACS_FOR_RCS_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_USE_ACS_FOR_RCS_BOOL"); _KEY_USE_ACS_FOR_RCS_BOOLReady = true; } return _KEY_USE_ACS_FOR_RCS_BOOLContent; } }
        private static Java.Lang.String _KEY_USE_ACS_FOR_RCS_BOOLContent = default;
        private static bool _KEY_USE_ACS_FOR_RCS_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_USE_HFA_FOR_PROVISIONING_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_USE_HFA_FOR_PROVISIONING_BOOL { get { if (!_KEY_USE_HFA_FOR_PROVISIONING_BOOLReady) { _KEY_USE_HFA_FOR_PROVISIONING_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_USE_HFA_FOR_PROVISIONING_BOOL"); _KEY_USE_HFA_FOR_PROVISIONING_BOOLReady = true; } return _KEY_USE_HFA_FOR_PROVISIONING_BOOLContent; } }
        private static Java.Lang.String _KEY_USE_HFA_FOR_PROVISIONING_BOOLContent = default;
        private static bool _KEY_USE_HFA_FOR_PROVISIONING_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_USE_IP_FOR_CALLING_INDICATOR_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_USE_IP_FOR_CALLING_INDICATOR_BOOL { get { if (!_KEY_USE_IP_FOR_CALLING_INDICATOR_BOOLReady) { _KEY_USE_IP_FOR_CALLING_INDICATOR_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_USE_IP_FOR_CALLING_INDICATOR_BOOL"); _KEY_USE_IP_FOR_CALLING_INDICATOR_BOOLReady = true; } return _KEY_USE_IP_FOR_CALLING_INDICATOR_BOOLContent; } }
        private static Java.Lang.String _KEY_USE_IP_FOR_CALLING_INDICATOR_BOOLContent = default;
        private static bool _KEY_USE_IP_FOR_CALLING_INDICATOR_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_USE_OTASP_FOR_PROVISIONING_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_USE_OTASP_FOR_PROVISIONING_BOOL { get { if (!_KEY_USE_OTASP_FOR_PROVISIONING_BOOLReady) { _KEY_USE_OTASP_FOR_PROVISIONING_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_USE_OTASP_FOR_PROVISIONING_BOOL"); _KEY_USE_OTASP_FOR_PROVISIONING_BOOLReady = true; } return _KEY_USE_OTASP_FOR_PROVISIONING_BOOLContent; } }
        private static Java.Lang.String _KEY_USE_OTASP_FOR_PROVISIONING_BOOLContent = default;
        private static bool _KEY_USE_OTASP_FOR_PROVISIONING_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_USE_RCS_PRESENCE_BOOL"/>
        /// </summary>
        [global::System.Obsolete()]
        public static Java.Lang.String KEY_USE_RCS_PRESENCE_BOOL { get { if (!_KEY_USE_RCS_PRESENCE_BOOLReady) { _KEY_USE_RCS_PRESENCE_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_USE_RCS_PRESENCE_BOOL"); _KEY_USE_RCS_PRESENCE_BOOLReady = true; } return _KEY_USE_RCS_PRESENCE_BOOLContent; } }
        private static Java.Lang.String _KEY_USE_RCS_PRESENCE_BOOLContent = default;
        private static bool _KEY_USE_RCS_PRESENCE_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_USE_RCS_SIP_OPTIONS_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_USE_RCS_SIP_OPTIONS_BOOL { get { if (!_KEY_USE_RCS_SIP_OPTIONS_BOOLReady) { _KEY_USE_RCS_SIP_OPTIONS_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_USE_RCS_SIP_OPTIONS_BOOL"); _KEY_USE_RCS_SIP_OPTIONS_BOOLReady = true; } return _KEY_USE_RCS_SIP_OPTIONS_BOOLContent; } }
        private static Java.Lang.String _KEY_USE_RCS_SIP_OPTIONS_BOOLContent = default;
        private static bool _KEY_USE_RCS_SIP_OPTIONS_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_USE_WFC_HOME_NETWORK_MODE_IN_ROAMING_NETWORK_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_USE_WFC_HOME_NETWORK_MODE_IN_ROAMING_NETWORK_BOOL { get { if (!_KEY_USE_WFC_HOME_NETWORK_MODE_IN_ROAMING_NETWORK_BOOLReady) { _KEY_USE_WFC_HOME_NETWORK_MODE_IN_ROAMING_NETWORK_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_USE_WFC_HOME_NETWORK_MODE_IN_ROAMING_NETWORK_BOOL"); _KEY_USE_WFC_HOME_NETWORK_MODE_IN_ROAMING_NETWORK_BOOLReady = true; } return _KEY_USE_WFC_HOME_NETWORK_MODE_IN_ROAMING_NETWORK_BOOLContent; } }
        private static Java.Lang.String _KEY_USE_WFC_HOME_NETWORK_MODE_IN_ROAMING_NETWORK_BOOLContent = default;
        private static bool _KEY_USE_WFC_HOME_NETWORK_MODE_IN_ROAMING_NETWORK_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_VOICE_PRIVACY_DISABLE_UI_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_VOICE_PRIVACY_DISABLE_UI_BOOL { get { if (!_KEY_VOICE_PRIVACY_DISABLE_UI_BOOLReady) { _KEY_VOICE_PRIVACY_DISABLE_UI_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_VOICE_PRIVACY_DISABLE_UI_BOOL"); _KEY_VOICE_PRIVACY_DISABLE_UI_BOOLReady = true; } return _KEY_VOICE_PRIVACY_DISABLE_UI_BOOLContent; } }
        private static Java.Lang.String _KEY_VOICE_PRIVACY_DISABLE_UI_BOOLContent = default;
        private static bool _KEY_VOICE_PRIVACY_DISABLE_UI_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_VOICEMAIL_NOTIFICATION_PERSISTENT_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_VOICEMAIL_NOTIFICATION_PERSISTENT_BOOL { get { if (!_KEY_VOICEMAIL_NOTIFICATION_PERSISTENT_BOOLReady) { _KEY_VOICEMAIL_NOTIFICATION_PERSISTENT_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_VOICEMAIL_NOTIFICATION_PERSISTENT_BOOL"); _KEY_VOICEMAIL_NOTIFICATION_PERSISTENT_BOOLReady = true; } return _KEY_VOICEMAIL_NOTIFICATION_PERSISTENT_BOOLContent; } }
        private static Java.Lang.String _KEY_VOICEMAIL_NOTIFICATION_PERSISTENT_BOOLContent = default;
        private static bool _KEY_VOICEMAIL_NOTIFICATION_PERSISTENT_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_VOLTE_REPLACEMENT_RAT_INT"/>
        /// </summary>
        public static Java.Lang.String KEY_VOLTE_REPLACEMENT_RAT_INT { get { if (!_KEY_VOLTE_REPLACEMENT_RAT_INTReady) { _KEY_VOLTE_REPLACEMENT_RAT_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_VOLTE_REPLACEMENT_RAT_INT"); _KEY_VOLTE_REPLACEMENT_RAT_INTReady = true; } return _KEY_VOLTE_REPLACEMENT_RAT_INTContent; } }
        private static Java.Lang.String _KEY_VOLTE_REPLACEMENT_RAT_INTContent = default;
        private static bool _KEY_VOLTE_REPLACEMENT_RAT_INTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_VONR_ENABLED_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_VONR_ENABLED_BOOL { get { if (!_KEY_VONR_ENABLED_BOOLReady) { _KEY_VONR_ENABLED_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_VONR_ENABLED_BOOL"); _KEY_VONR_ENABLED_BOOLReady = true; } return _KEY_VONR_ENABLED_BOOLContent; } }
        private static Java.Lang.String _KEY_VONR_ENABLED_BOOLContent = default;
        private static bool _KEY_VONR_ENABLED_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_VONR_ON_BY_DEFAULT_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_VONR_ON_BY_DEFAULT_BOOL { get { if (!_KEY_VONR_ON_BY_DEFAULT_BOOLReady) { _KEY_VONR_ON_BY_DEFAULT_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_VONR_ON_BY_DEFAULT_BOOL"); _KEY_VONR_ON_BY_DEFAULT_BOOLReady = true; } return _KEY_VONR_ON_BY_DEFAULT_BOOLContent; } }
        private static Java.Lang.String _KEY_VONR_ON_BY_DEFAULT_BOOLContent = default;
        private static bool _KEY_VONR_ON_BY_DEFAULT_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_VONR_SETTING_VISIBILITY_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_VONR_SETTING_VISIBILITY_BOOL { get { if (!_KEY_VONR_SETTING_VISIBILITY_BOOLReady) { _KEY_VONR_SETTING_VISIBILITY_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_VONR_SETTING_VISIBILITY_BOOL"); _KEY_VONR_SETTING_VISIBILITY_BOOLReady = true; } return _KEY_VONR_SETTING_VISIBILITY_BOOLContent; } }
        private static Java.Lang.String _KEY_VONR_SETTING_VISIBILITY_BOOLContent = default;
        private static bool _KEY_VONR_SETTING_VISIBILITY_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_VT_UPGRADE_SUPPORTED_FOR_DOWNGRADED_RTT_CALL_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_VT_UPGRADE_SUPPORTED_FOR_DOWNGRADED_RTT_CALL_BOOL { get { if (!_KEY_VT_UPGRADE_SUPPORTED_FOR_DOWNGRADED_RTT_CALL_BOOLReady) { _KEY_VT_UPGRADE_SUPPORTED_FOR_DOWNGRADED_RTT_CALL_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_VT_UPGRADE_SUPPORTED_FOR_DOWNGRADED_RTT_CALL_BOOL"); _KEY_VT_UPGRADE_SUPPORTED_FOR_DOWNGRADED_RTT_CALL_BOOLReady = true; } return _KEY_VT_UPGRADE_SUPPORTED_FOR_DOWNGRADED_RTT_CALL_BOOLContent; } }
        private static Java.Lang.String _KEY_VT_UPGRADE_SUPPORTED_FOR_DOWNGRADED_RTT_CALL_BOOLContent = default;
        private static bool _KEY_VT_UPGRADE_SUPPORTED_FOR_DOWNGRADED_RTT_CALL_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_VVM_CELLULAR_DATA_REQUIRED_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_VVM_CELLULAR_DATA_REQUIRED_BOOL { get { if (!_KEY_VVM_CELLULAR_DATA_REQUIRED_BOOLReady) { _KEY_VVM_CELLULAR_DATA_REQUIRED_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_VVM_CELLULAR_DATA_REQUIRED_BOOL"); _KEY_VVM_CELLULAR_DATA_REQUIRED_BOOLReady = true; } return _KEY_VVM_CELLULAR_DATA_REQUIRED_BOOLContent; } }
        private static Java.Lang.String _KEY_VVM_CELLULAR_DATA_REQUIRED_BOOLContent = default;
        private static bool _KEY_VVM_CELLULAR_DATA_REQUIRED_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_VVM_CLIENT_PREFIX_STRING"/>
        /// </summary>
        public static Java.Lang.String KEY_VVM_CLIENT_PREFIX_STRING { get { if (!_KEY_VVM_CLIENT_PREFIX_STRINGReady) { _KEY_VVM_CLIENT_PREFIX_STRINGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_VVM_CLIENT_PREFIX_STRING"); _KEY_VVM_CLIENT_PREFIX_STRINGReady = true; } return _KEY_VVM_CLIENT_PREFIX_STRINGContent; } }
        private static Java.Lang.String _KEY_VVM_CLIENT_PREFIX_STRINGContent = default;
        private static bool _KEY_VVM_CLIENT_PREFIX_STRINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_VVM_DESTINATION_NUMBER_STRING"/>
        /// </summary>
        public static Java.Lang.String KEY_VVM_DESTINATION_NUMBER_STRING { get { if (!_KEY_VVM_DESTINATION_NUMBER_STRINGReady) { _KEY_VVM_DESTINATION_NUMBER_STRINGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_VVM_DESTINATION_NUMBER_STRING"); _KEY_VVM_DESTINATION_NUMBER_STRINGReady = true; } return _KEY_VVM_DESTINATION_NUMBER_STRINGContent; } }
        private static Java.Lang.String _KEY_VVM_DESTINATION_NUMBER_STRINGContent = default;
        private static bool _KEY_VVM_DESTINATION_NUMBER_STRINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_VVM_DISABLED_CAPABILITIES_STRING_ARRAY"/>
        /// </summary>
        public static Java.Lang.String KEY_VVM_DISABLED_CAPABILITIES_STRING_ARRAY { get { if (!_KEY_VVM_DISABLED_CAPABILITIES_STRING_ARRAYReady) { _KEY_VVM_DISABLED_CAPABILITIES_STRING_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_VVM_DISABLED_CAPABILITIES_STRING_ARRAY"); _KEY_VVM_DISABLED_CAPABILITIES_STRING_ARRAYReady = true; } return _KEY_VVM_DISABLED_CAPABILITIES_STRING_ARRAYContent; } }
        private static Java.Lang.String _KEY_VVM_DISABLED_CAPABILITIES_STRING_ARRAYContent = default;
        private static bool _KEY_VVM_DISABLED_CAPABILITIES_STRING_ARRAYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_VVM_LEGACY_MODE_ENABLED_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_VVM_LEGACY_MODE_ENABLED_BOOL { get { if (!_KEY_VVM_LEGACY_MODE_ENABLED_BOOLReady) { _KEY_VVM_LEGACY_MODE_ENABLED_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_VVM_LEGACY_MODE_ENABLED_BOOL"); _KEY_VVM_LEGACY_MODE_ENABLED_BOOLReady = true; } return _KEY_VVM_LEGACY_MODE_ENABLED_BOOLContent; } }
        private static Java.Lang.String _KEY_VVM_LEGACY_MODE_ENABLED_BOOLContent = default;
        private static bool _KEY_VVM_LEGACY_MODE_ENABLED_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_VVM_PORT_NUMBER_INT"/>
        /// </summary>
        public static Java.Lang.String KEY_VVM_PORT_NUMBER_INT { get { if (!_KEY_VVM_PORT_NUMBER_INTReady) { _KEY_VVM_PORT_NUMBER_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_VVM_PORT_NUMBER_INT"); _KEY_VVM_PORT_NUMBER_INTReady = true; } return _KEY_VVM_PORT_NUMBER_INTContent; } }
        private static Java.Lang.String _KEY_VVM_PORT_NUMBER_INTContent = default;
        private static bool _KEY_VVM_PORT_NUMBER_INTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_VVM_PREFETCH_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_VVM_PREFETCH_BOOL { get { if (!_KEY_VVM_PREFETCH_BOOLReady) { _KEY_VVM_PREFETCH_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_VVM_PREFETCH_BOOL"); _KEY_VVM_PREFETCH_BOOLReady = true; } return _KEY_VVM_PREFETCH_BOOLContent; } }
        private static Java.Lang.String _KEY_VVM_PREFETCH_BOOLContent = default;
        private static bool _KEY_VVM_PREFETCH_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_VVM_SSL_ENABLED_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_VVM_SSL_ENABLED_BOOL { get { if (!_KEY_VVM_SSL_ENABLED_BOOLReady) { _KEY_VVM_SSL_ENABLED_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_VVM_SSL_ENABLED_BOOL"); _KEY_VVM_SSL_ENABLED_BOOLReady = true; } return _KEY_VVM_SSL_ENABLED_BOOLContent; } }
        private static Java.Lang.String _KEY_VVM_SSL_ENABLED_BOOLContent = default;
        private static bool _KEY_VVM_SSL_ENABLED_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_VVM_TYPE_STRING"/>
        /// </summary>
        public static Java.Lang.String KEY_VVM_TYPE_STRING { get { if (!_KEY_VVM_TYPE_STRINGReady) { _KEY_VVM_TYPE_STRINGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_VVM_TYPE_STRING"); _KEY_VVM_TYPE_STRINGReady = true; } return _KEY_VVM_TYPE_STRINGContent; } }
        private static Java.Lang.String _KEY_VVM_TYPE_STRINGContent = default;
        private static bool _KEY_VVM_TYPE_STRINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_WFC_EMERGENCY_ADDRESS_CARRIER_APP_STRING"/>
        /// </summary>
        public static Java.Lang.String KEY_WFC_EMERGENCY_ADDRESS_CARRIER_APP_STRING { get { if (!_KEY_WFC_EMERGENCY_ADDRESS_CARRIER_APP_STRINGReady) { _KEY_WFC_EMERGENCY_ADDRESS_CARRIER_APP_STRINGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_WFC_EMERGENCY_ADDRESS_CARRIER_APP_STRING"); _KEY_WFC_EMERGENCY_ADDRESS_CARRIER_APP_STRINGReady = true; } return _KEY_WFC_EMERGENCY_ADDRESS_CARRIER_APP_STRINGContent; } }
        private static Java.Lang.String _KEY_WFC_EMERGENCY_ADDRESS_CARRIER_APP_STRINGContent = default;
        private static bool _KEY_WFC_EMERGENCY_ADDRESS_CARRIER_APP_STRINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_WORLD_MODE_ENABLED_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_WORLD_MODE_ENABLED_BOOL { get { if (!_KEY_WORLD_MODE_ENABLED_BOOLReady) { _KEY_WORLD_MODE_ENABLED_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_WORLD_MODE_ENABLED_BOOL"); _KEY_WORLD_MODE_ENABLED_BOOLReady = true; } return _KEY_WORLD_MODE_ENABLED_BOOLContent; } }
        private static Java.Lang.String _KEY_WORLD_MODE_ENABLED_BOOLContent = default;
        private static bool _KEY_WORLD_MODE_ENABLED_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#KEY_WORLD_PHONE_BOOL"/>
        /// </summary>
        public static Java.Lang.String KEY_WORLD_PHONE_BOOL { get { if (!_KEY_WORLD_PHONE_BOOLReady) { _KEY_WORLD_PHONE_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_WORLD_PHONE_BOOL"); _KEY_WORLD_PHONE_BOOLReady = true; } return _KEY_WORLD_PHONE_BOOLContent; } }
        private static Java.Lang.String _KEY_WORLD_PHONE_BOOLContent = default;
        private static bool _KEY_WORLD_PHONE_BOOLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#REMOVE_GROUP_UUID_STRING"/>
        /// </summary>
        public static Java.Lang.String REMOVE_GROUP_UUID_STRING { get { if (!_REMOVE_GROUP_UUID_STRINGReady) { _REMOVE_GROUP_UUID_STRINGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "REMOVE_GROUP_UUID_STRING"); _REMOVE_GROUP_UUID_STRINGReady = true; } return _REMOVE_GROUP_UUID_STRINGContent; } }
        private static Java.Lang.String _REMOVE_GROUP_UUID_STRINGContent = default;
        private static bool _REMOVE_GROUP_UUID_STRINGReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#isConfigForIdentifiedCarrier(android.os.PersistableBundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.PersistableBundle"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool IsConfigForIdentifiedCarrier(Android.Os.PersistableBundle arg0)
        {
            return SExecuteWithSignature<bool>(LocalBridgeClazz, "isConfigForIdentifiedCarrier", "(Landroid/os/PersistableBundle;)Z", arg0);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#getConfig()"/>
        /// </summary>
        /// <returns><see cref="Android.Os.PersistableBundle"/></returns>
        [global::System.Obsolete()]
        public Android.Os.PersistableBundle GetConfig()
        {
            return IExecuteWithSignature<Android.Os.PersistableBundle>("getConfig", "()Landroid/os/PersistableBundle;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#getConfig(java.lang.String[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Android.Os.PersistableBundle"/></returns>
        public Android.Os.PersistableBundle GetConfig(params Java.Lang.String[] arg0)
        {
            if (arg0.Length == 0) return IExecuteWithSignature<Android.Os.PersistableBundle>("getConfig", "([Ljava/lang/String;)Landroid/os/PersistableBundle;"); else return IExecuteWithSignature<Android.Os.PersistableBundle>("getConfig", "([Ljava/lang/String;)Landroid/os/PersistableBundle;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#getConfigByComponentForSubId(java.lang.String,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="Android.Os.PersistableBundle"/></returns>
        public Android.Os.PersistableBundle GetConfigByComponentForSubId(Java.Lang.String arg0, int arg1)
        {
            return IExecute<Android.Os.PersistableBundle>("getConfigByComponentForSubId", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#getConfigForSubId(int,java.lang.String[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Android.Os.PersistableBundle"/></returns>
        public Android.Os.PersistableBundle GetConfigForSubId(int arg0, params Java.Lang.String[] arg1)
        {
            if (arg1.Length == 0) return IExecute<Android.Os.PersistableBundle>("getConfigForSubId", arg0); else return IExecute<Android.Os.PersistableBundle>("getConfigForSubId", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#getConfigForSubId(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Android.Os.PersistableBundle"/></returns>
        [global::System.Obsolete()]
        public Android.Os.PersistableBundle GetConfigForSubId(int arg0)
        {
            return IExecuteWithSignature<Android.Os.PersistableBundle>("getConfigForSubId", "(I)Landroid/os/PersistableBundle;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#notifyConfigChangedForSubId(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void NotifyConfigChangedForSubId(int arg0)
        {
            IExecuteWithSignature("notifyConfigChangedForSubId", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#registerCarrierConfigChangeListener(java.util.concurrent.Executor,android.telephony.CarrierConfigManager.CarrierConfigChangeListener)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Concurrent.Executor"/></param>
        /// <param name="arg1"><see cref="Android.Telephony.CarrierConfigManager.CarrierConfigChangeListener"/></param>
        public void RegisterCarrierConfigChangeListener(Java.Util.Concurrent.Executor arg0, Android.Telephony.CarrierConfigManager.CarrierConfigChangeListener arg1)
        {
            IExecute("registerCarrierConfigChangeListener", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.html#unregisterCarrierConfigChangeListener(android.telephony.CarrierConfigManager.CarrierConfigChangeListener)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Telephony.CarrierConfigManager.CarrierConfigChangeListener"/></param>
        public void UnregisterCarrierConfigChangeListener(Android.Telephony.CarrierConfigManager.CarrierConfigChangeListener arg0)
        {
            IExecuteWithSignature("unregisterCarrierConfigChangeListener", "(Landroid/telephony/CarrierConfigManager$CarrierConfigChangeListener;)V", arg0);
        }

        #endregion

        #region Nested classes
        #region Apn
        public partial class Apn
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Apn.html#KEY_PREFIX"/>
            /// </summary>
            [global::System.Obsolete()]
            public static Java.Lang.String KEY_PREFIX { get { if (!_KEY_PREFIXReady) { _KEY_PREFIXContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_PREFIX"); _KEY_PREFIXReady = true; } return _KEY_PREFIXContent; } }
            private static Java.Lang.String _KEY_PREFIXContent = default;
            private static bool _KEY_PREFIXReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Apn.html#KEY_SETTINGS_DEFAULT_PROTOCOL_STRING"/>
            /// </summary>
            public static Java.Lang.String KEY_SETTINGS_DEFAULT_PROTOCOL_STRING { get { if (!_KEY_SETTINGS_DEFAULT_PROTOCOL_STRINGReady) { _KEY_SETTINGS_DEFAULT_PROTOCOL_STRINGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SETTINGS_DEFAULT_PROTOCOL_STRING"); _KEY_SETTINGS_DEFAULT_PROTOCOL_STRINGReady = true; } return _KEY_SETTINGS_DEFAULT_PROTOCOL_STRINGContent; } }
            private static Java.Lang.String _KEY_SETTINGS_DEFAULT_PROTOCOL_STRINGContent = default;
            private static bool _KEY_SETTINGS_DEFAULT_PROTOCOL_STRINGReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Apn.html#KEY_SETTINGS_DEFAULT_ROAMING_PROTOCOL_STRING"/>
            /// </summary>
            public static Java.Lang.String KEY_SETTINGS_DEFAULT_ROAMING_PROTOCOL_STRING { get { if (!_KEY_SETTINGS_DEFAULT_ROAMING_PROTOCOL_STRINGReady) { _KEY_SETTINGS_DEFAULT_ROAMING_PROTOCOL_STRINGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SETTINGS_DEFAULT_ROAMING_PROTOCOL_STRING"); _KEY_SETTINGS_DEFAULT_ROAMING_PROTOCOL_STRINGReady = true; } return _KEY_SETTINGS_DEFAULT_ROAMING_PROTOCOL_STRINGContent; } }
            private static Java.Lang.String _KEY_SETTINGS_DEFAULT_ROAMING_PROTOCOL_STRINGContent = default;
            private static bool _KEY_SETTINGS_DEFAULT_ROAMING_PROTOCOL_STRINGReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Apn.html#PROTOCOL_IPV4"/>
            /// </summary>
            public static Java.Lang.String PROTOCOL_IPV4 { get { if (!_PROTOCOL_IPV4Ready) { _PROTOCOL_IPV4Content = SGetField<Java.Lang.String>(LocalBridgeClazz, "PROTOCOL_IPV4"); _PROTOCOL_IPV4Ready = true; } return _PROTOCOL_IPV4Content; } }
            private static Java.Lang.String _PROTOCOL_IPV4Content = default;
            private static bool _PROTOCOL_IPV4Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Apn.html#PROTOCOL_IPV4V6"/>
            /// </summary>
            public static Java.Lang.String PROTOCOL_IPV4V6 { get { if (!_PROTOCOL_IPV4V6Ready) { _PROTOCOL_IPV4V6Content = SGetField<Java.Lang.String>(LocalBridgeClazz, "PROTOCOL_IPV4V6"); _PROTOCOL_IPV4V6Ready = true; } return _PROTOCOL_IPV4V6Content; } }
            private static Java.Lang.String _PROTOCOL_IPV4V6Content = default;
            private static bool _PROTOCOL_IPV4V6Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Apn.html#PROTOCOL_IPV6"/>
            /// </summary>
            public static Java.Lang.String PROTOCOL_IPV6 { get { if (!_PROTOCOL_IPV6Ready) { _PROTOCOL_IPV6Content = SGetField<Java.Lang.String>(LocalBridgeClazz, "PROTOCOL_IPV6"); _PROTOCOL_IPV6Ready = true; } return _PROTOCOL_IPV6Content; } }
            private static Java.Lang.String _PROTOCOL_IPV6Content = default;
            private static bool _PROTOCOL_IPV6Ready = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region Bsf
        public partial class Bsf
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Bsf.html#KEY_BSF_SERVER_FQDN_STRING"/>
            /// </summary>
            public static Java.Lang.String KEY_BSF_SERVER_FQDN_STRING { get { if (!_KEY_BSF_SERVER_FQDN_STRINGReady) { _KEY_BSF_SERVER_FQDN_STRINGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_BSF_SERVER_FQDN_STRING"); _KEY_BSF_SERVER_FQDN_STRINGReady = true; } return _KEY_BSF_SERVER_FQDN_STRINGContent; } }
            private static Java.Lang.String _KEY_BSF_SERVER_FQDN_STRINGContent = default;
            private static bool _KEY_BSF_SERVER_FQDN_STRINGReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Bsf.html#KEY_BSF_SERVER_PORT_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_BSF_SERVER_PORT_INT { get { if (!_KEY_BSF_SERVER_PORT_INTReady) { _KEY_BSF_SERVER_PORT_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_BSF_SERVER_PORT_INT"); _KEY_BSF_SERVER_PORT_INTReady = true; } return _KEY_BSF_SERVER_PORT_INTContent; } }
            private static Java.Lang.String _KEY_BSF_SERVER_PORT_INTContent = default;
            private static bool _KEY_BSF_SERVER_PORT_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Bsf.html#KEY_BSF_TRANSPORT_TYPE_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_BSF_TRANSPORT_TYPE_INT { get { if (!_KEY_BSF_TRANSPORT_TYPE_INTReady) { _KEY_BSF_TRANSPORT_TYPE_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_BSF_TRANSPORT_TYPE_INT"); _KEY_BSF_TRANSPORT_TYPE_INTReady = true; } return _KEY_BSF_TRANSPORT_TYPE_INTContent; } }
            private static Java.Lang.String _KEY_BSF_TRANSPORT_TYPE_INTContent = default;
            private static bool _KEY_BSF_TRANSPORT_TYPE_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Bsf.html#KEY_PREFIX"/>
            /// </summary>
            public static Java.Lang.String KEY_PREFIX { get { if (!_KEY_PREFIXReady) { _KEY_PREFIXContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_PREFIX"); _KEY_PREFIXReady = true; } return _KEY_PREFIXContent; } }
            private static Java.Lang.String _KEY_PREFIXContent = default;
            private static bool _KEY_PREFIXReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region CarrierConfigChangeListener
        public partial class CarrierConfigChangeListener
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// Handlers initializer for <see cref="CarrierConfigChangeListener"/>
            /// </summary>
            protected virtual void InitializeHandlers()
            {
                AddEventHandler("onCarrierConfigChanged", new global::System.EventHandler<CLRListenerEventArgs<CLREventData<int>>>(OnCarrierConfigChangedEventHandler));

            }

            /// <summary>
            /// Handler for <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.CarrierConfigChangeListener.html#onCarrierConfigChanged(int,int,int,int)"/>
            /// </summary>
            /// <remarks>If <see cref="OnOnCarrierConfigChanged"/> has a value it takes precedence over corresponding class method</remarks>
            public global::System.Action<int, int, int, int> OnOnCarrierConfigChanged { get; set; } = null;

            void OnCarrierConfigChangedEventHandler(object sender, CLRListenerEventArgs<CLREventData<int>> data)
            {
                var methodToExecute = (OnOnCarrierConfigChanged != null) ? OnOnCarrierConfigChanged : OnCarrierConfigChanged;
                methodToExecute.Invoke(data.EventData.TypedEventData, data.EventData.GetAt<int>(0), data.EventData.GetAt<int>(1), data.EventData.GetAt<int>(2));
            }

            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.CarrierConfigChangeListener.html#onCarrierConfigChanged(int,int,int,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            /// <param name="arg2"><see cref="int"/></param>
            /// <param name="arg3"><see cref="int"/></param>
            public virtual void OnCarrierConfigChanged(int arg0, int arg1, int arg2, int arg3)
            {
                
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region CarrierConfigChangeListenerDirect
        public partial class CarrierConfigChangeListenerDirect
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.CarrierConfigChangeListener.html#onCarrierConfigChanged(int,int,int,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            /// <param name="arg2"><see cref="int"/></param>
            /// <param name="arg3"><see cref="int"/></param>
            public override void OnCarrierConfigChanged(int arg0, int arg1, int arg2, int arg3)
            {
                IExecute("onCarrierConfigChanged", arg0, arg1, arg2, arg3);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region Gps
        public partial class Gps
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Gps.html#KEY_PERSIST_LPP_MODE_BOOL"/>
            /// </summary>
            public static Java.Lang.String KEY_PERSIST_LPP_MODE_BOOL { get { if (!_KEY_PERSIST_LPP_MODE_BOOLReady) { _KEY_PERSIST_LPP_MODE_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_PERSIST_LPP_MODE_BOOL"); _KEY_PERSIST_LPP_MODE_BOOLReady = true; } return _KEY_PERSIST_LPP_MODE_BOOLContent; } }
            private static Java.Lang.String _KEY_PERSIST_LPP_MODE_BOOLContent = default;
            private static bool _KEY_PERSIST_LPP_MODE_BOOLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Gps.html#KEY_PREFIX"/>
            /// </summary>
            public static Java.Lang.String KEY_PREFIX { get { if (!_KEY_PREFIXReady) { _KEY_PREFIXContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_PREFIX"); _KEY_PREFIXReady = true; } return _KEY_PREFIXContent; } }
            private static Java.Lang.String _KEY_PREFIXContent = default;
            private static bool _KEY_PREFIXReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region Ims
        public partial class Ims
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#E911_RTCP_INACTIVITY_ON_CONNECTED"/>
            /// </summary>
            public static int E911_RTCP_INACTIVITY_ON_CONNECTED { get { if (!_E911_RTCP_INACTIVITY_ON_CONNECTEDReady) { _E911_RTCP_INACTIVITY_ON_CONNECTEDContent = SGetField<int>(LocalBridgeClazz, "E911_RTCP_INACTIVITY_ON_CONNECTED"); _E911_RTCP_INACTIVITY_ON_CONNECTEDReady = true; } return _E911_RTCP_INACTIVITY_ON_CONNECTEDContent; } }
            private static int _E911_RTCP_INACTIVITY_ON_CONNECTEDContent = default;
            private static bool _E911_RTCP_INACTIVITY_ON_CONNECTEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#E911_RTP_INACTIVITY_ON_CONNECTED"/>
            /// </summary>
            public static int E911_RTP_INACTIVITY_ON_CONNECTED { get { if (!_E911_RTP_INACTIVITY_ON_CONNECTEDReady) { _E911_RTP_INACTIVITY_ON_CONNECTEDContent = SGetField<int>(LocalBridgeClazz, "E911_RTP_INACTIVITY_ON_CONNECTED"); _E911_RTP_INACTIVITY_ON_CONNECTEDReady = true; } return _E911_RTP_INACTIVITY_ON_CONNECTEDContent; } }
            private static int _E911_RTP_INACTIVITY_ON_CONNECTEDContent = default;
            private static bool _E911_RTP_INACTIVITY_ON_CONNECTEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#GEOLOCATION_PIDF_FOR_EMERGENCY_ON_CELLULAR"/>
            /// </summary>
            public static int GEOLOCATION_PIDF_FOR_EMERGENCY_ON_CELLULAR { get { if (!_GEOLOCATION_PIDF_FOR_EMERGENCY_ON_CELLULARReady) { _GEOLOCATION_PIDF_FOR_EMERGENCY_ON_CELLULARContent = SGetField<int>(LocalBridgeClazz, "GEOLOCATION_PIDF_FOR_EMERGENCY_ON_CELLULAR"); _GEOLOCATION_PIDF_FOR_EMERGENCY_ON_CELLULARReady = true; } return _GEOLOCATION_PIDF_FOR_EMERGENCY_ON_CELLULARContent; } }
            private static int _GEOLOCATION_PIDF_FOR_EMERGENCY_ON_CELLULARContent = default;
            private static bool _GEOLOCATION_PIDF_FOR_EMERGENCY_ON_CELLULARReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#GEOLOCATION_PIDF_FOR_EMERGENCY_ON_WIFI"/>
            /// </summary>
            public static int GEOLOCATION_PIDF_FOR_EMERGENCY_ON_WIFI { get { if (!_GEOLOCATION_PIDF_FOR_EMERGENCY_ON_WIFIReady) { _GEOLOCATION_PIDF_FOR_EMERGENCY_ON_WIFIContent = SGetField<int>(LocalBridgeClazz, "GEOLOCATION_PIDF_FOR_EMERGENCY_ON_WIFI"); _GEOLOCATION_PIDF_FOR_EMERGENCY_ON_WIFIReady = true; } return _GEOLOCATION_PIDF_FOR_EMERGENCY_ON_WIFIContent; } }
            private static int _GEOLOCATION_PIDF_FOR_EMERGENCY_ON_WIFIContent = default;
            private static bool _GEOLOCATION_PIDF_FOR_EMERGENCY_ON_WIFIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#GEOLOCATION_PIDF_FOR_NON_EMERGENCY_ON_CELLULAR"/>
            /// </summary>
            public static int GEOLOCATION_PIDF_FOR_NON_EMERGENCY_ON_CELLULAR { get { if (!_GEOLOCATION_PIDF_FOR_NON_EMERGENCY_ON_CELLULARReady) { _GEOLOCATION_PIDF_FOR_NON_EMERGENCY_ON_CELLULARContent = SGetField<int>(LocalBridgeClazz, "GEOLOCATION_PIDF_FOR_NON_EMERGENCY_ON_CELLULAR"); _GEOLOCATION_PIDF_FOR_NON_EMERGENCY_ON_CELLULARReady = true; } return _GEOLOCATION_PIDF_FOR_NON_EMERGENCY_ON_CELLULARContent; } }
            private static int _GEOLOCATION_PIDF_FOR_NON_EMERGENCY_ON_CELLULARContent = default;
            private static bool _GEOLOCATION_PIDF_FOR_NON_EMERGENCY_ON_CELLULARReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#GEOLOCATION_PIDF_FOR_NON_EMERGENCY_ON_WIFI"/>
            /// </summary>
            public static int GEOLOCATION_PIDF_FOR_NON_EMERGENCY_ON_WIFI { get { if (!_GEOLOCATION_PIDF_FOR_NON_EMERGENCY_ON_WIFIReady) { _GEOLOCATION_PIDF_FOR_NON_EMERGENCY_ON_WIFIContent = SGetField<int>(LocalBridgeClazz, "GEOLOCATION_PIDF_FOR_NON_EMERGENCY_ON_WIFI"); _GEOLOCATION_PIDF_FOR_NON_EMERGENCY_ON_WIFIReady = true; } return _GEOLOCATION_PIDF_FOR_NON_EMERGENCY_ON_WIFIContent; } }
            private static int _GEOLOCATION_PIDF_FOR_NON_EMERGENCY_ON_WIFIContent = default;
            private static bool _GEOLOCATION_PIDF_FOR_NON_EMERGENCY_ON_WIFIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#IPSEC_AUTHENTICATION_ALGORITHM_HMAC_MD5"/>
            /// </summary>
            public static int IPSEC_AUTHENTICATION_ALGORITHM_HMAC_MD5 { get { if (!_IPSEC_AUTHENTICATION_ALGORITHM_HMAC_MD5Ready) { _IPSEC_AUTHENTICATION_ALGORITHM_HMAC_MD5Content = SGetField<int>(LocalBridgeClazz, "IPSEC_AUTHENTICATION_ALGORITHM_HMAC_MD5"); _IPSEC_AUTHENTICATION_ALGORITHM_HMAC_MD5Ready = true; } return _IPSEC_AUTHENTICATION_ALGORITHM_HMAC_MD5Content; } }
            private static int _IPSEC_AUTHENTICATION_ALGORITHM_HMAC_MD5Content = default;
            private static bool _IPSEC_AUTHENTICATION_ALGORITHM_HMAC_MD5Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#IPSEC_AUTHENTICATION_ALGORITHM_HMAC_SHA1"/>
            /// </summary>
            public static int IPSEC_AUTHENTICATION_ALGORITHM_HMAC_SHA1 { get { if (!_IPSEC_AUTHENTICATION_ALGORITHM_HMAC_SHA1Ready) { _IPSEC_AUTHENTICATION_ALGORITHM_HMAC_SHA1Content = SGetField<int>(LocalBridgeClazz, "IPSEC_AUTHENTICATION_ALGORITHM_HMAC_SHA1"); _IPSEC_AUTHENTICATION_ALGORITHM_HMAC_SHA1Ready = true; } return _IPSEC_AUTHENTICATION_ALGORITHM_HMAC_SHA1Content; } }
            private static int _IPSEC_AUTHENTICATION_ALGORITHM_HMAC_SHA1Content = default;
            private static bool _IPSEC_AUTHENTICATION_ALGORITHM_HMAC_SHA1Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#IPSEC_ENCRYPTION_ALGORITHM_AES_CBC"/>
            /// </summary>
            public static int IPSEC_ENCRYPTION_ALGORITHM_AES_CBC { get { if (!_IPSEC_ENCRYPTION_ALGORITHM_AES_CBCReady) { _IPSEC_ENCRYPTION_ALGORITHM_AES_CBCContent = SGetField<int>(LocalBridgeClazz, "IPSEC_ENCRYPTION_ALGORITHM_AES_CBC"); _IPSEC_ENCRYPTION_ALGORITHM_AES_CBCReady = true; } return _IPSEC_ENCRYPTION_ALGORITHM_AES_CBCContent; } }
            private static int _IPSEC_ENCRYPTION_ALGORITHM_AES_CBCContent = default;
            private static bool _IPSEC_ENCRYPTION_ALGORITHM_AES_CBCReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#IPSEC_ENCRYPTION_ALGORITHM_DES_EDE3_CBC"/>
            /// </summary>
            public static int IPSEC_ENCRYPTION_ALGORITHM_DES_EDE3_CBC { get { if (!_IPSEC_ENCRYPTION_ALGORITHM_DES_EDE3_CBCReady) { _IPSEC_ENCRYPTION_ALGORITHM_DES_EDE3_CBCContent = SGetField<int>(LocalBridgeClazz, "IPSEC_ENCRYPTION_ALGORITHM_DES_EDE3_CBC"); _IPSEC_ENCRYPTION_ALGORITHM_DES_EDE3_CBCReady = true; } return _IPSEC_ENCRYPTION_ALGORITHM_DES_EDE3_CBCContent; } }
            private static int _IPSEC_ENCRYPTION_ALGORITHM_DES_EDE3_CBCContent = default;
            private static bool _IPSEC_ENCRYPTION_ALGORITHM_DES_EDE3_CBCReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#IPSEC_ENCRYPTION_ALGORITHM_NULL"/>
            /// </summary>
            public static int IPSEC_ENCRYPTION_ALGORITHM_NULL { get { if (!_IPSEC_ENCRYPTION_ALGORITHM_NULLReady) { _IPSEC_ENCRYPTION_ALGORITHM_NULLContent = SGetField<int>(LocalBridgeClazz, "IPSEC_ENCRYPTION_ALGORITHM_NULL"); _IPSEC_ENCRYPTION_ALGORITHM_NULLReady = true; } return _IPSEC_ENCRYPTION_ALGORITHM_NULLContent; } }
            private static int _IPSEC_ENCRYPTION_ALGORITHM_NULLContent = default;
            private static bool _IPSEC_ENCRYPTION_ALGORITHM_NULLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#NETWORK_TYPE_HOME"/>
            /// </summary>
            public static int NETWORK_TYPE_HOME { get { if (!_NETWORK_TYPE_HOMEReady) { _NETWORK_TYPE_HOMEContent = SGetField<int>(LocalBridgeClazz, "NETWORK_TYPE_HOME"); _NETWORK_TYPE_HOMEReady = true; } return _NETWORK_TYPE_HOMEContent; } }
            private static int _NETWORK_TYPE_HOMEContent = default;
            private static bool _NETWORK_TYPE_HOMEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#NETWORK_TYPE_ROAMING"/>
            /// </summary>
            public static int NETWORK_TYPE_ROAMING { get { if (!_NETWORK_TYPE_ROAMINGReady) { _NETWORK_TYPE_ROAMINGContent = SGetField<int>(LocalBridgeClazz, "NETWORK_TYPE_ROAMING"); _NETWORK_TYPE_ROAMINGReady = true; } return _NETWORK_TYPE_ROAMINGContent; } }
            private static int _NETWORK_TYPE_ROAMINGContent = default;
            private static bool _NETWORK_TYPE_ROAMINGReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#PREFERRED_TRANSPORT_DYNAMIC_UDP_TCP"/>
            /// </summary>
            public static int PREFERRED_TRANSPORT_DYNAMIC_UDP_TCP { get { if (!_PREFERRED_TRANSPORT_DYNAMIC_UDP_TCPReady) { _PREFERRED_TRANSPORT_DYNAMIC_UDP_TCPContent = SGetField<int>(LocalBridgeClazz, "PREFERRED_TRANSPORT_DYNAMIC_UDP_TCP"); _PREFERRED_TRANSPORT_DYNAMIC_UDP_TCPReady = true; } return _PREFERRED_TRANSPORT_DYNAMIC_UDP_TCPContent; } }
            private static int _PREFERRED_TRANSPORT_DYNAMIC_UDP_TCPContent = default;
            private static bool _PREFERRED_TRANSPORT_DYNAMIC_UDP_TCPReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#PREFERRED_TRANSPORT_TCP"/>
            /// </summary>
            public static int PREFERRED_TRANSPORT_TCP { get { if (!_PREFERRED_TRANSPORT_TCPReady) { _PREFERRED_TRANSPORT_TCPContent = SGetField<int>(LocalBridgeClazz, "PREFERRED_TRANSPORT_TCP"); _PREFERRED_TRANSPORT_TCPReady = true; } return _PREFERRED_TRANSPORT_TCPContent; } }
            private static int _PREFERRED_TRANSPORT_TCPContent = default;
            private static bool _PREFERRED_TRANSPORT_TCPReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#PREFERRED_TRANSPORT_TLS"/>
            /// </summary>
            public static int PREFERRED_TRANSPORT_TLS { get { if (!_PREFERRED_TRANSPORT_TLSReady) { _PREFERRED_TRANSPORT_TLSContent = SGetField<int>(LocalBridgeClazz, "PREFERRED_TRANSPORT_TLS"); _PREFERRED_TRANSPORT_TLSReady = true; } return _PREFERRED_TRANSPORT_TLSContent; } }
            private static int _PREFERRED_TRANSPORT_TLSContent = default;
            private static bool _PREFERRED_TRANSPORT_TLSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#PREFERRED_TRANSPORT_UDP"/>
            /// </summary>
            public static int PREFERRED_TRANSPORT_UDP { get { if (!_PREFERRED_TRANSPORT_UDPReady) { _PREFERRED_TRANSPORT_UDPContent = SGetField<int>(LocalBridgeClazz, "PREFERRED_TRANSPORT_UDP"); _PREFERRED_TRANSPORT_UDPReady = true; } return _PREFERRED_TRANSPORT_UDPContent; } }
            private static int _PREFERRED_TRANSPORT_UDPContent = default;
            private static bool _PREFERRED_TRANSPORT_UDPReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#REQUEST_URI_FORMAT_SIP"/>
            /// </summary>
            public static int REQUEST_URI_FORMAT_SIP { get { if (!_REQUEST_URI_FORMAT_SIPReady) { _REQUEST_URI_FORMAT_SIPContent = SGetField<int>(LocalBridgeClazz, "REQUEST_URI_FORMAT_SIP"); _REQUEST_URI_FORMAT_SIPReady = true; } return _REQUEST_URI_FORMAT_SIPContent; } }
            private static int _REQUEST_URI_FORMAT_SIPContent = default;
            private static bool _REQUEST_URI_FORMAT_SIPReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#REQUEST_URI_FORMAT_TEL"/>
            /// </summary>
            public static int REQUEST_URI_FORMAT_TEL { get { if (!_REQUEST_URI_FORMAT_TELReady) { _REQUEST_URI_FORMAT_TELContent = SGetField<int>(LocalBridgeClazz, "REQUEST_URI_FORMAT_TEL"); _REQUEST_URI_FORMAT_TELReady = true; } return _REQUEST_URI_FORMAT_TELContent; } }
            private static int _REQUEST_URI_FORMAT_TELContent = default;
            private static bool _REQUEST_URI_FORMAT_TELReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#RTCP_INACTIVITY_ON_CONNECTED"/>
            /// </summary>
            public static int RTCP_INACTIVITY_ON_CONNECTED { get { if (!_RTCP_INACTIVITY_ON_CONNECTEDReady) { _RTCP_INACTIVITY_ON_CONNECTEDContent = SGetField<int>(LocalBridgeClazz, "RTCP_INACTIVITY_ON_CONNECTED"); _RTCP_INACTIVITY_ON_CONNECTEDReady = true; } return _RTCP_INACTIVITY_ON_CONNECTEDContent; } }
            private static int _RTCP_INACTIVITY_ON_CONNECTEDContent = default;
            private static bool _RTCP_INACTIVITY_ON_CONNECTEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#RTCP_INACTIVITY_ON_HOLD"/>
            /// </summary>
            public static int RTCP_INACTIVITY_ON_HOLD { get { if (!_RTCP_INACTIVITY_ON_HOLDReady) { _RTCP_INACTIVITY_ON_HOLDContent = SGetField<int>(LocalBridgeClazz, "RTCP_INACTIVITY_ON_HOLD"); _RTCP_INACTIVITY_ON_HOLDReady = true; } return _RTCP_INACTIVITY_ON_HOLDContent; } }
            private static int _RTCP_INACTIVITY_ON_HOLDContent = default;
            private static bool _RTCP_INACTIVITY_ON_HOLDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#RTP_INACTIVITY_ON_CONNECTED"/>
            /// </summary>
            public static int RTP_INACTIVITY_ON_CONNECTED { get { if (!_RTP_INACTIVITY_ON_CONNECTEDReady) { _RTP_INACTIVITY_ON_CONNECTEDContent = SGetField<int>(LocalBridgeClazz, "RTP_INACTIVITY_ON_CONNECTED"); _RTP_INACTIVITY_ON_CONNECTEDReady = true; } return _RTP_INACTIVITY_ON_CONNECTEDContent; } }
            private static int _RTP_INACTIVITY_ON_CONNECTEDContent = default;
            private static bool _RTP_INACTIVITY_ON_CONNECTEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#KEY_CAPABILITY_TYPE_CALL_COMPOSER_INT_ARRAY"/>
            /// </summary>
            public static Java.Lang.String KEY_CAPABILITY_TYPE_CALL_COMPOSER_INT_ARRAY { get { if (!_KEY_CAPABILITY_TYPE_CALL_COMPOSER_INT_ARRAYReady) { _KEY_CAPABILITY_TYPE_CALL_COMPOSER_INT_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CAPABILITY_TYPE_CALL_COMPOSER_INT_ARRAY"); _KEY_CAPABILITY_TYPE_CALL_COMPOSER_INT_ARRAYReady = true; } return _KEY_CAPABILITY_TYPE_CALL_COMPOSER_INT_ARRAYContent; } }
            private static Java.Lang.String _KEY_CAPABILITY_TYPE_CALL_COMPOSER_INT_ARRAYContent = default;
            private static bool _KEY_CAPABILITY_TYPE_CALL_COMPOSER_INT_ARRAYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#KEY_CAPABILITY_TYPE_OPTIONS_UCE_INT_ARRAY"/>
            /// </summary>
            public static Java.Lang.String KEY_CAPABILITY_TYPE_OPTIONS_UCE_INT_ARRAY { get { if (!_KEY_CAPABILITY_TYPE_OPTIONS_UCE_INT_ARRAYReady) { _KEY_CAPABILITY_TYPE_OPTIONS_UCE_INT_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CAPABILITY_TYPE_OPTIONS_UCE_INT_ARRAY"); _KEY_CAPABILITY_TYPE_OPTIONS_UCE_INT_ARRAYReady = true; } return _KEY_CAPABILITY_TYPE_OPTIONS_UCE_INT_ARRAYContent; } }
            private static Java.Lang.String _KEY_CAPABILITY_TYPE_OPTIONS_UCE_INT_ARRAYContent = default;
            private static bool _KEY_CAPABILITY_TYPE_OPTIONS_UCE_INT_ARRAYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#KEY_CAPABILITY_TYPE_PRESENCE_UCE_INT_ARRAY"/>
            /// </summary>
            public static Java.Lang.String KEY_CAPABILITY_TYPE_PRESENCE_UCE_INT_ARRAY { get { if (!_KEY_CAPABILITY_TYPE_PRESENCE_UCE_INT_ARRAYReady) { _KEY_CAPABILITY_TYPE_PRESENCE_UCE_INT_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CAPABILITY_TYPE_PRESENCE_UCE_INT_ARRAY"); _KEY_CAPABILITY_TYPE_PRESENCE_UCE_INT_ARRAYReady = true; } return _KEY_CAPABILITY_TYPE_PRESENCE_UCE_INT_ARRAYContent; } }
            private static Java.Lang.String _KEY_CAPABILITY_TYPE_PRESENCE_UCE_INT_ARRAYContent = default;
            private static bool _KEY_CAPABILITY_TYPE_PRESENCE_UCE_INT_ARRAYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#KEY_CAPABILITY_TYPE_SMS_INT_ARRAY"/>
            /// </summary>
            public static Java.Lang.String KEY_CAPABILITY_TYPE_SMS_INT_ARRAY { get { if (!_KEY_CAPABILITY_TYPE_SMS_INT_ARRAYReady) { _KEY_CAPABILITY_TYPE_SMS_INT_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CAPABILITY_TYPE_SMS_INT_ARRAY"); _KEY_CAPABILITY_TYPE_SMS_INT_ARRAYReady = true; } return _KEY_CAPABILITY_TYPE_SMS_INT_ARRAYContent; } }
            private static Java.Lang.String _KEY_CAPABILITY_TYPE_SMS_INT_ARRAYContent = default;
            private static bool _KEY_CAPABILITY_TYPE_SMS_INT_ARRAYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#KEY_CAPABILITY_TYPE_UT_INT_ARRAY"/>
            /// </summary>
            public static Java.Lang.String KEY_CAPABILITY_TYPE_UT_INT_ARRAY { get { if (!_KEY_CAPABILITY_TYPE_UT_INT_ARRAYReady) { _KEY_CAPABILITY_TYPE_UT_INT_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CAPABILITY_TYPE_UT_INT_ARRAY"); _KEY_CAPABILITY_TYPE_UT_INT_ARRAYReady = true; } return _KEY_CAPABILITY_TYPE_UT_INT_ARRAYContent; } }
            private static Java.Lang.String _KEY_CAPABILITY_TYPE_UT_INT_ARRAYContent = default;
            private static bool _KEY_CAPABILITY_TYPE_UT_INT_ARRAYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#KEY_CAPABILITY_TYPE_VIDEO_INT_ARRAY"/>
            /// </summary>
            public static Java.Lang.String KEY_CAPABILITY_TYPE_VIDEO_INT_ARRAY { get { if (!_KEY_CAPABILITY_TYPE_VIDEO_INT_ARRAYReady) { _KEY_CAPABILITY_TYPE_VIDEO_INT_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CAPABILITY_TYPE_VIDEO_INT_ARRAY"); _KEY_CAPABILITY_TYPE_VIDEO_INT_ARRAYReady = true; } return _KEY_CAPABILITY_TYPE_VIDEO_INT_ARRAYContent; } }
            private static Java.Lang.String _KEY_CAPABILITY_TYPE_VIDEO_INT_ARRAYContent = default;
            private static bool _KEY_CAPABILITY_TYPE_VIDEO_INT_ARRAYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#KEY_CAPABILITY_TYPE_VOICE_INT_ARRAY"/>
            /// </summary>
            public static Java.Lang.String KEY_CAPABILITY_TYPE_VOICE_INT_ARRAY { get { if (!_KEY_CAPABILITY_TYPE_VOICE_INT_ARRAYReady) { _KEY_CAPABILITY_TYPE_VOICE_INT_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CAPABILITY_TYPE_VOICE_INT_ARRAY"); _KEY_CAPABILITY_TYPE_VOICE_INT_ARRAYReady = true; } return _KEY_CAPABILITY_TYPE_VOICE_INT_ARRAYContent; } }
            private static Java.Lang.String _KEY_CAPABILITY_TYPE_VOICE_INT_ARRAYContent = default;
            private static bool _KEY_CAPABILITY_TYPE_VOICE_INT_ARRAYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#KEY_ENABLE_PRESENCE_CAPABILITY_EXCHANGE_BOOL"/>
            /// </summary>
            public static Java.Lang.String KEY_ENABLE_PRESENCE_CAPABILITY_EXCHANGE_BOOL { get { if (!_KEY_ENABLE_PRESENCE_CAPABILITY_EXCHANGE_BOOLReady) { _KEY_ENABLE_PRESENCE_CAPABILITY_EXCHANGE_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_ENABLE_PRESENCE_CAPABILITY_EXCHANGE_BOOL"); _KEY_ENABLE_PRESENCE_CAPABILITY_EXCHANGE_BOOLReady = true; } return _KEY_ENABLE_PRESENCE_CAPABILITY_EXCHANGE_BOOLContent; } }
            private static Java.Lang.String _KEY_ENABLE_PRESENCE_CAPABILITY_EXCHANGE_BOOLContent = default;
            private static bool _KEY_ENABLE_PRESENCE_CAPABILITY_EXCHANGE_BOOLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#KEY_ENABLE_PRESENCE_GROUP_SUBSCRIBE_BOOL"/>
            /// </summary>
            public static Java.Lang.String KEY_ENABLE_PRESENCE_GROUP_SUBSCRIBE_BOOL { get { if (!_KEY_ENABLE_PRESENCE_GROUP_SUBSCRIBE_BOOLReady) { _KEY_ENABLE_PRESENCE_GROUP_SUBSCRIBE_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_ENABLE_PRESENCE_GROUP_SUBSCRIBE_BOOL"); _KEY_ENABLE_PRESENCE_GROUP_SUBSCRIBE_BOOLReady = true; } return _KEY_ENABLE_PRESENCE_GROUP_SUBSCRIBE_BOOLContent; } }
            private static Java.Lang.String _KEY_ENABLE_PRESENCE_GROUP_SUBSCRIBE_BOOLContent = default;
            private static bool _KEY_ENABLE_PRESENCE_GROUP_SUBSCRIBE_BOOLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#KEY_ENABLE_PRESENCE_PUBLISH_BOOL"/>
            /// </summary>
            public static Java.Lang.String KEY_ENABLE_PRESENCE_PUBLISH_BOOL { get { if (!_KEY_ENABLE_PRESENCE_PUBLISH_BOOLReady) { _KEY_ENABLE_PRESENCE_PUBLISH_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_ENABLE_PRESENCE_PUBLISH_BOOL"); _KEY_ENABLE_PRESENCE_PUBLISH_BOOLReady = true; } return _KEY_ENABLE_PRESENCE_PUBLISH_BOOLContent; } }
            private static Java.Lang.String _KEY_ENABLE_PRESENCE_PUBLISH_BOOLContent = default;
            private static bool _KEY_ENABLE_PRESENCE_PUBLISH_BOOLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#KEY_GEOLOCATION_PIDF_IN_SIP_INVITE_SUPPORT_INT_ARRAY"/>
            /// </summary>
            public static Java.Lang.String KEY_GEOLOCATION_PIDF_IN_SIP_INVITE_SUPPORT_INT_ARRAY { get { if (!_KEY_GEOLOCATION_PIDF_IN_SIP_INVITE_SUPPORT_INT_ARRAYReady) { _KEY_GEOLOCATION_PIDF_IN_SIP_INVITE_SUPPORT_INT_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_GEOLOCATION_PIDF_IN_SIP_INVITE_SUPPORT_INT_ARRAY"); _KEY_GEOLOCATION_PIDF_IN_SIP_INVITE_SUPPORT_INT_ARRAYReady = true; } return _KEY_GEOLOCATION_PIDF_IN_SIP_INVITE_SUPPORT_INT_ARRAYContent; } }
            private static Java.Lang.String _KEY_GEOLOCATION_PIDF_IN_SIP_INVITE_SUPPORT_INT_ARRAYContent = default;
            private static bool _KEY_GEOLOCATION_PIDF_IN_SIP_INVITE_SUPPORT_INT_ARRAYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#KEY_GEOLOCATION_PIDF_IN_SIP_REGISTER_SUPPORT_INT_ARRAY"/>
            /// </summary>
            public static Java.Lang.String KEY_GEOLOCATION_PIDF_IN_SIP_REGISTER_SUPPORT_INT_ARRAY { get { if (!_KEY_GEOLOCATION_PIDF_IN_SIP_REGISTER_SUPPORT_INT_ARRAYReady) { _KEY_GEOLOCATION_PIDF_IN_SIP_REGISTER_SUPPORT_INT_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_GEOLOCATION_PIDF_IN_SIP_REGISTER_SUPPORT_INT_ARRAY"); _KEY_GEOLOCATION_PIDF_IN_SIP_REGISTER_SUPPORT_INT_ARRAYReady = true; } return _KEY_GEOLOCATION_PIDF_IN_SIP_REGISTER_SUPPORT_INT_ARRAYContent; } }
            private static Java.Lang.String _KEY_GEOLOCATION_PIDF_IN_SIP_REGISTER_SUPPORT_INT_ARRAYContent = default;
            private static bool _KEY_GEOLOCATION_PIDF_IN_SIP_REGISTER_SUPPORT_INT_ARRAYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#KEY_GRUU_ENABLED_BOOL"/>
            /// </summary>
            public static Java.Lang.String KEY_GRUU_ENABLED_BOOL { get { if (!_KEY_GRUU_ENABLED_BOOLReady) { _KEY_GRUU_ENABLED_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_GRUU_ENABLED_BOOL"); _KEY_GRUU_ENABLED_BOOLReady = true; } return _KEY_GRUU_ENABLED_BOOLContent; } }
            private static Java.Lang.String _KEY_GRUU_ENABLED_BOOLContent = default;
            private static bool _KEY_GRUU_ENABLED_BOOLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#KEY_IMS_PDN_ENABLED_IN_NO_VOPS_SUPPORT_INT_ARRAY"/>
            /// </summary>
            public static Java.Lang.String KEY_IMS_PDN_ENABLED_IN_NO_VOPS_SUPPORT_INT_ARRAY { get { if (!_KEY_IMS_PDN_ENABLED_IN_NO_VOPS_SUPPORT_INT_ARRAYReady) { _KEY_IMS_PDN_ENABLED_IN_NO_VOPS_SUPPORT_INT_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_IMS_PDN_ENABLED_IN_NO_VOPS_SUPPORT_INT_ARRAY"); _KEY_IMS_PDN_ENABLED_IN_NO_VOPS_SUPPORT_INT_ARRAYReady = true; } return _KEY_IMS_PDN_ENABLED_IN_NO_VOPS_SUPPORT_INT_ARRAYContent; } }
            private static Java.Lang.String _KEY_IMS_PDN_ENABLED_IN_NO_VOPS_SUPPORT_INT_ARRAYContent = default;
            private static bool _KEY_IMS_PDN_ENABLED_IN_NO_VOPS_SUPPORT_INT_ARRAYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#KEY_IMS_SINGLE_REGISTRATION_REQUIRED_BOOL"/>
            /// </summary>
            public static Java.Lang.String KEY_IMS_SINGLE_REGISTRATION_REQUIRED_BOOL { get { if (!_KEY_IMS_SINGLE_REGISTRATION_REQUIRED_BOOLReady) { _KEY_IMS_SINGLE_REGISTRATION_REQUIRED_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_IMS_SINGLE_REGISTRATION_REQUIRED_BOOL"); _KEY_IMS_SINGLE_REGISTRATION_REQUIRED_BOOLReady = true; } return _KEY_IMS_SINGLE_REGISTRATION_REQUIRED_BOOLContent; } }
            private static Java.Lang.String _KEY_IMS_SINGLE_REGISTRATION_REQUIRED_BOOLContent = default;
            private static bool _KEY_IMS_SINGLE_REGISTRATION_REQUIRED_BOOLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#KEY_IMS_USER_AGENT_STRING"/>
            /// </summary>
            public static Java.Lang.String KEY_IMS_USER_AGENT_STRING { get { if (!_KEY_IMS_USER_AGENT_STRINGReady) { _KEY_IMS_USER_AGENT_STRINGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_IMS_USER_AGENT_STRING"); _KEY_IMS_USER_AGENT_STRINGReady = true; } return _KEY_IMS_USER_AGENT_STRINGContent; } }
            private static Java.Lang.String _KEY_IMS_USER_AGENT_STRINGContent = default;
            private static bool _KEY_IMS_USER_AGENT_STRINGReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#KEY_IPSEC_AUTHENTICATION_ALGORITHMS_INT_ARRAY"/>
            /// </summary>
            public static Java.Lang.String KEY_IPSEC_AUTHENTICATION_ALGORITHMS_INT_ARRAY { get { if (!_KEY_IPSEC_AUTHENTICATION_ALGORITHMS_INT_ARRAYReady) { _KEY_IPSEC_AUTHENTICATION_ALGORITHMS_INT_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_IPSEC_AUTHENTICATION_ALGORITHMS_INT_ARRAY"); _KEY_IPSEC_AUTHENTICATION_ALGORITHMS_INT_ARRAYReady = true; } return _KEY_IPSEC_AUTHENTICATION_ALGORITHMS_INT_ARRAYContent; } }
            private static Java.Lang.String _KEY_IPSEC_AUTHENTICATION_ALGORITHMS_INT_ARRAYContent = default;
            private static bool _KEY_IPSEC_AUTHENTICATION_ALGORITHMS_INT_ARRAYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#KEY_IPSEC_ENCRYPTION_ALGORITHMS_INT_ARRAY"/>
            /// </summary>
            public static Java.Lang.String KEY_IPSEC_ENCRYPTION_ALGORITHMS_INT_ARRAY { get { if (!_KEY_IPSEC_ENCRYPTION_ALGORITHMS_INT_ARRAYReady) { _KEY_IPSEC_ENCRYPTION_ALGORITHMS_INT_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_IPSEC_ENCRYPTION_ALGORITHMS_INT_ARRAY"); _KEY_IPSEC_ENCRYPTION_ALGORITHMS_INT_ARRAYReady = true; } return _KEY_IPSEC_ENCRYPTION_ALGORITHMS_INT_ARRAYContent; } }
            private static Java.Lang.String _KEY_IPSEC_ENCRYPTION_ALGORITHMS_INT_ARRAYContent = default;
            private static bool _KEY_IPSEC_ENCRYPTION_ALGORITHMS_INT_ARRAYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#KEY_IPV4_SIP_MTU_SIZE_CELLULAR_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_IPV4_SIP_MTU_SIZE_CELLULAR_INT { get { if (!_KEY_IPV4_SIP_MTU_SIZE_CELLULAR_INTReady) { _KEY_IPV4_SIP_MTU_SIZE_CELLULAR_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_IPV4_SIP_MTU_SIZE_CELLULAR_INT"); _KEY_IPV4_SIP_MTU_SIZE_CELLULAR_INTReady = true; } return _KEY_IPV4_SIP_MTU_SIZE_CELLULAR_INTContent; } }
            private static Java.Lang.String _KEY_IPV4_SIP_MTU_SIZE_CELLULAR_INTContent = default;
            private static bool _KEY_IPV4_SIP_MTU_SIZE_CELLULAR_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#KEY_IPV6_SIP_MTU_SIZE_CELLULAR_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_IPV6_SIP_MTU_SIZE_CELLULAR_INT { get { if (!_KEY_IPV6_SIP_MTU_SIZE_CELLULAR_INTReady) { _KEY_IPV6_SIP_MTU_SIZE_CELLULAR_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_IPV6_SIP_MTU_SIZE_CELLULAR_INT"); _KEY_IPV6_SIP_MTU_SIZE_CELLULAR_INTReady = true; } return _KEY_IPV6_SIP_MTU_SIZE_CELLULAR_INTContent; } }
            private static Java.Lang.String _KEY_IPV6_SIP_MTU_SIZE_CELLULAR_INTContent = default;
            private static bool _KEY_IPV6_SIP_MTU_SIZE_CELLULAR_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#KEY_KEEP_PDN_UP_IN_NO_VOPS_BOOL"/>
            /// </summary>
            public static Java.Lang.String KEY_KEEP_PDN_UP_IN_NO_VOPS_BOOL { get { if (!_KEY_KEEP_PDN_UP_IN_NO_VOPS_BOOLReady) { _KEY_KEEP_PDN_UP_IN_NO_VOPS_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_KEEP_PDN_UP_IN_NO_VOPS_BOOL"); _KEY_KEEP_PDN_UP_IN_NO_VOPS_BOOLReady = true; } return _KEY_KEEP_PDN_UP_IN_NO_VOPS_BOOLContent; } }
            private static Java.Lang.String _KEY_KEEP_PDN_UP_IN_NO_VOPS_BOOLContent = default;
            private static bool _KEY_KEEP_PDN_UP_IN_NO_VOPS_BOOLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#KEY_MMTEL_REQUIRES_PROVISIONING_BUNDLE"/>
            /// </summary>
            public static Java.Lang.String KEY_MMTEL_REQUIRES_PROVISIONING_BUNDLE { get { if (!_KEY_MMTEL_REQUIRES_PROVISIONING_BUNDLEReady) { _KEY_MMTEL_REQUIRES_PROVISIONING_BUNDLEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_MMTEL_REQUIRES_PROVISIONING_BUNDLE"); _KEY_MMTEL_REQUIRES_PROVISIONING_BUNDLEReady = true; } return _KEY_MMTEL_REQUIRES_PROVISIONING_BUNDLEContent; } }
            private static Java.Lang.String _KEY_MMTEL_REQUIRES_PROVISIONING_BUNDLEContent = default;
            private static bool _KEY_MMTEL_REQUIRES_PROVISIONING_BUNDLEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#KEY_NON_RCS_CAPABILITIES_CACHE_EXPIRATION_SEC_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_NON_RCS_CAPABILITIES_CACHE_EXPIRATION_SEC_INT { get { if (!_KEY_NON_RCS_CAPABILITIES_CACHE_EXPIRATION_SEC_INTReady) { _KEY_NON_RCS_CAPABILITIES_CACHE_EXPIRATION_SEC_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_NON_RCS_CAPABILITIES_CACHE_EXPIRATION_SEC_INT"); _KEY_NON_RCS_CAPABILITIES_CACHE_EXPIRATION_SEC_INTReady = true; } return _KEY_NON_RCS_CAPABILITIES_CACHE_EXPIRATION_SEC_INTContent; } }
            private static Java.Lang.String _KEY_NON_RCS_CAPABILITIES_CACHE_EXPIRATION_SEC_INTContent = default;
            private static bool _KEY_NON_RCS_CAPABILITIES_CACHE_EXPIRATION_SEC_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#KEY_PHONE_CONTEXT_DOMAIN_NAME_STRING"/>
            /// </summary>
            public static Java.Lang.String KEY_PHONE_CONTEXT_DOMAIN_NAME_STRING { get { if (!_KEY_PHONE_CONTEXT_DOMAIN_NAME_STRINGReady) { _KEY_PHONE_CONTEXT_DOMAIN_NAME_STRINGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_PHONE_CONTEXT_DOMAIN_NAME_STRING"); _KEY_PHONE_CONTEXT_DOMAIN_NAME_STRINGReady = true; } return _KEY_PHONE_CONTEXT_DOMAIN_NAME_STRINGContent; } }
            private static Java.Lang.String _KEY_PHONE_CONTEXT_DOMAIN_NAME_STRINGContent = default;
            private static bool _KEY_PHONE_CONTEXT_DOMAIN_NAME_STRINGReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#KEY_PREFIX"/>
            /// </summary>
            public static Java.Lang.String KEY_PREFIX { get { if (!_KEY_PREFIXReady) { _KEY_PREFIXContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_PREFIX"); _KEY_PREFIXReady = true; } return _KEY_PREFIXContent; } }
            private static Java.Lang.String _KEY_PREFIXContent = default;
            private static bool _KEY_PREFIXReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#KEY_RCS_BULK_CAPABILITY_EXCHANGE_BOOL"/>
            /// </summary>
            public static Java.Lang.String KEY_RCS_BULK_CAPABILITY_EXCHANGE_BOOL { get { if (!_KEY_RCS_BULK_CAPABILITY_EXCHANGE_BOOLReady) { _KEY_RCS_BULK_CAPABILITY_EXCHANGE_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_RCS_BULK_CAPABILITY_EXCHANGE_BOOL"); _KEY_RCS_BULK_CAPABILITY_EXCHANGE_BOOLReady = true; } return _KEY_RCS_BULK_CAPABILITY_EXCHANGE_BOOLContent; } }
            private static Java.Lang.String _KEY_RCS_BULK_CAPABILITY_EXCHANGE_BOOLContent = default;
            private static bool _KEY_RCS_BULK_CAPABILITY_EXCHANGE_BOOLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#KEY_RCS_FEATURE_TAG_ALLOWED_STRING_ARRAY"/>
            /// </summary>
            public static Java.Lang.String KEY_RCS_FEATURE_TAG_ALLOWED_STRING_ARRAY { get { if (!_KEY_RCS_FEATURE_TAG_ALLOWED_STRING_ARRAYReady) { _KEY_RCS_FEATURE_TAG_ALLOWED_STRING_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_RCS_FEATURE_TAG_ALLOWED_STRING_ARRAY"); _KEY_RCS_FEATURE_TAG_ALLOWED_STRING_ARRAYReady = true; } return _KEY_RCS_FEATURE_TAG_ALLOWED_STRING_ARRAYContent; } }
            private static Java.Lang.String _KEY_RCS_FEATURE_TAG_ALLOWED_STRING_ARRAYContent = default;
            private static bool _KEY_RCS_FEATURE_TAG_ALLOWED_STRING_ARRAYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#KEY_RCS_REQUIRES_PROVISIONING_BUNDLE"/>
            /// </summary>
            public static Java.Lang.String KEY_RCS_REQUIRES_PROVISIONING_BUNDLE { get { if (!_KEY_RCS_REQUIRES_PROVISIONING_BUNDLEReady) { _KEY_RCS_REQUIRES_PROVISIONING_BUNDLEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_RCS_REQUIRES_PROVISIONING_BUNDLE"); _KEY_RCS_REQUIRES_PROVISIONING_BUNDLEReady = true; } return _KEY_RCS_REQUIRES_PROVISIONING_BUNDLEContent; } }
            private static Java.Lang.String _KEY_RCS_REQUIRES_PROVISIONING_BUNDLEContent = default;
            private static bool _KEY_RCS_REQUIRES_PROVISIONING_BUNDLEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#KEY_REGISTRATION_EVENT_PACKAGE_SUPPORTED_BOOL"/>
            /// </summary>
            public static Java.Lang.String KEY_REGISTRATION_EVENT_PACKAGE_SUPPORTED_BOOL { get { if (!_KEY_REGISTRATION_EVENT_PACKAGE_SUPPORTED_BOOLReady) { _KEY_REGISTRATION_EVENT_PACKAGE_SUPPORTED_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_REGISTRATION_EVENT_PACKAGE_SUPPORTED_BOOL"); _KEY_REGISTRATION_EVENT_PACKAGE_SUPPORTED_BOOLReady = true; } return _KEY_REGISTRATION_EVENT_PACKAGE_SUPPORTED_BOOLContent; } }
            private static Java.Lang.String _KEY_REGISTRATION_EVENT_PACKAGE_SUPPORTED_BOOLContent = default;
            private static bool _KEY_REGISTRATION_EVENT_PACKAGE_SUPPORTED_BOOLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#KEY_REGISTRATION_EXPIRY_TIMER_SEC_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_REGISTRATION_EXPIRY_TIMER_SEC_INT { get { if (!_KEY_REGISTRATION_EXPIRY_TIMER_SEC_INTReady) { _KEY_REGISTRATION_EXPIRY_TIMER_SEC_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_REGISTRATION_EXPIRY_TIMER_SEC_INT"); _KEY_REGISTRATION_EXPIRY_TIMER_SEC_INTReady = true; } return _KEY_REGISTRATION_EXPIRY_TIMER_SEC_INTContent; } }
            private static Java.Lang.String _KEY_REGISTRATION_EXPIRY_TIMER_SEC_INTContent = default;
            private static bool _KEY_REGISTRATION_EXPIRY_TIMER_SEC_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#KEY_REGISTRATION_RETRY_BASE_TIMER_MILLIS_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_REGISTRATION_RETRY_BASE_TIMER_MILLIS_INT { get { if (!_KEY_REGISTRATION_RETRY_BASE_TIMER_MILLIS_INTReady) { _KEY_REGISTRATION_RETRY_BASE_TIMER_MILLIS_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_REGISTRATION_RETRY_BASE_TIMER_MILLIS_INT"); _KEY_REGISTRATION_RETRY_BASE_TIMER_MILLIS_INTReady = true; } return _KEY_REGISTRATION_RETRY_BASE_TIMER_MILLIS_INTContent; } }
            private static Java.Lang.String _KEY_REGISTRATION_RETRY_BASE_TIMER_MILLIS_INTContent = default;
            private static bool _KEY_REGISTRATION_RETRY_BASE_TIMER_MILLIS_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#KEY_REGISTRATION_RETRY_MAX_TIMER_MILLIS_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_REGISTRATION_RETRY_MAX_TIMER_MILLIS_INT { get { if (!_KEY_REGISTRATION_RETRY_MAX_TIMER_MILLIS_INTReady) { _KEY_REGISTRATION_RETRY_MAX_TIMER_MILLIS_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_REGISTRATION_RETRY_MAX_TIMER_MILLIS_INT"); _KEY_REGISTRATION_RETRY_MAX_TIMER_MILLIS_INTReady = true; } return _KEY_REGISTRATION_RETRY_MAX_TIMER_MILLIS_INTContent; } }
            private static Java.Lang.String _KEY_REGISTRATION_RETRY_MAX_TIMER_MILLIS_INTContent = default;
            private static bool _KEY_REGISTRATION_RETRY_MAX_TIMER_MILLIS_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#KEY_REGISTRATION_SUBSCRIBE_EXPIRY_TIMER_SEC_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_REGISTRATION_SUBSCRIBE_EXPIRY_TIMER_SEC_INT { get { if (!_KEY_REGISTRATION_SUBSCRIBE_EXPIRY_TIMER_SEC_INTReady) { _KEY_REGISTRATION_SUBSCRIBE_EXPIRY_TIMER_SEC_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_REGISTRATION_SUBSCRIBE_EXPIRY_TIMER_SEC_INT"); _KEY_REGISTRATION_SUBSCRIBE_EXPIRY_TIMER_SEC_INTReady = true; } return _KEY_REGISTRATION_SUBSCRIBE_EXPIRY_TIMER_SEC_INTContent; } }
            private static Java.Lang.String _KEY_REGISTRATION_SUBSCRIBE_EXPIRY_TIMER_SEC_INTContent = default;
            private static bool _KEY_REGISTRATION_SUBSCRIBE_EXPIRY_TIMER_SEC_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#KEY_REQUEST_URI_TYPE_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_REQUEST_URI_TYPE_INT { get { if (!_KEY_REQUEST_URI_TYPE_INTReady) { _KEY_REQUEST_URI_TYPE_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_REQUEST_URI_TYPE_INT"); _KEY_REQUEST_URI_TYPE_INTReady = true; } return _KEY_REQUEST_URI_TYPE_INTContent; } }
            private static Java.Lang.String _KEY_REQUEST_URI_TYPE_INTContent = default;
            private static bool _KEY_REQUEST_URI_TYPE_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#KEY_SIP_OVER_IPSEC_ENABLED_BOOL"/>
            /// </summary>
            public static Java.Lang.String KEY_SIP_OVER_IPSEC_ENABLED_BOOL { get { if (!_KEY_SIP_OVER_IPSEC_ENABLED_BOOLReady) { _KEY_SIP_OVER_IPSEC_ENABLED_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SIP_OVER_IPSEC_ENABLED_BOOL"); _KEY_SIP_OVER_IPSEC_ENABLED_BOOLReady = true; } return _KEY_SIP_OVER_IPSEC_ENABLED_BOOLContent; } }
            private static Java.Lang.String _KEY_SIP_OVER_IPSEC_ENABLED_BOOLContent = default;
            private static bool _KEY_SIP_OVER_IPSEC_ENABLED_BOOLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#KEY_SIP_PREFERRED_TRANSPORT_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_SIP_PREFERRED_TRANSPORT_INT { get { if (!_KEY_SIP_PREFERRED_TRANSPORT_INTReady) { _KEY_SIP_PREFERRED_TRANSPORT_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SIP_PREFERRED_TRANSPORT_INT"); _KEY_SIP_PREFERRED_TRANSPORT_INTReady = true; } return _KEY_SIP_PREFERRED_TRANSPORT_INTContent; } }
            private static Java.Lang.String _KEY_SIP_PREFERRED_TRANSPORT_INTContent = default;
            private static bool _KEY_SIP_PREFERRED_TRANSPORT_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#KEY_SIP_SERVER_PORT_NUMBER_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_SIP_SERVER_PORT_NUMBER_INT { get { if (!_KEY_SIP_SERVER_PORT_NUMBER_INTReady) { _KEY_SIP_SERVER_PORT_NUMBER_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SIP_SERVER_PORT_NUMBER_INT"); _KEY_SIP_SERVER_PORT_NUMBER_INTReady = true; } return _KEY_SIP_SERVER_PORT_NUMBER_INTContent; } }
            private static Java.Lang.String _KEY_SIP_SERVER_PORT_NUMBER_INTContent = default;
            private static bool _KEY_SIP_SERVER_PORT_NUMBER_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#KEY_SIP_TIMER_B_MILLIS_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_SIP_TIMER_B_MILLIS_INT { get { if (!_KEY_SIP_TIMER_B_MILLIS_INTReady) { _KEY_SIP_TIMER_B_MILLIS_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SIP_TIMER_B_MILLIS_INT"); _KEY_SIP_TIMER_B_MILLIS_INTReady = true; } return _KEY_SIP_TIMER_B_MILLIS_INTContent; } }
            private static Java.Lang.String _KEY_SIP_TIMER_B_MILLIS_INTContent = default;
            private static bool _KEY_SIP_TIMER_B_MILLIS_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#KEY_SIP_TIMER_C_MILLIS_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_SIP_TIMER_C_MILLIS_INT { get { if (!_KEY_SIP_TIMER_C_MILLIS_INTReady) { _KEY_SIP_TIMER_C_MILLIS_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SIP_TIMER_C_MILLIS_INT"); _KEY_SIP_TIMER_C_MILLIS_INTReady = true; } return _KEY_SIP_TIMER_C_MILLIS_INTContent; } }
            private static Java.Lang.String _KEY_SIP_TIMER_C_MILLIS_INTContent = default;
            private static bool _KEY_SIP_TIMER_C_MILLIS_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#KEY_SIP_TIMER_D_MILLIS_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_SIP_TIMER_D_MILLIS_INT { get { if (!_KEY_SIP_TIMER_D_MILLIS_INTReady) { _KEY_SIP_TIMER_D_MILLIS_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SIP_TIMER_D_MILLIS_INT"); _KEY_SIP_TIMER_D_MILLIS_INTReady = true; } return _KEY_SIP_TIMER_D_MILLIS_INTContent; } }
            private static Java.Lang.String _KEY_SIP_TIMER_D_MILLIS_INTContent = default;
            private static bool _KEY_SIP_TIMER_D_MILLIS_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#KEY_SIP_TIMER_F_MILLIS_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_SIP_TIMER_F_MILLIS_INT { get { if (!_KEY_SIP_TIMER_F_MILLIS_INTReady) { _KEY_SIP_TIMER_F_MILLIS_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SIP_TIMER_F_MILLIS_INT"); _KEY_SIP_TIMER_F_MILLIS_INTReady = true; } return _KEY_SIP_TIMER_F_MILLIS_INTContent; } }
            private static Java.Lang.String _KEY_SIP_TIMER_F_MILLIS_INTContent = default;
            private static bool _KEY_SIP_TIMER_F_MILLIS_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#KEY_SIP_TIMER_H_MILLIS_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_SIP_TIMER_H_MILLIS_INT { get { if (!_KEY_SIP_TIMER_H_MILLIS_INTReady) { _KEY_SIP_TIMER_H_MILLIS_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SIP_TIMER_H_MILLIS_INT"); _KEY_SIP_TIMER_H_MILLIS_INTReady = true; } return _KEY_SIP_TIMER_H_MILLIS_INTContent; } }
            private static Java.Lang.String _KEY_SIP_TIMER_H_MILLIS_INTContent = default;
            private static bool _KEY_SIP_TIMER_H_MILLIS_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#KEY_SIP_TIMER_J_MILLIS_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_SIP_TIMER_J_MILLIS_INT { get { if (!_KEY_SIP_TIMER_J_MILLIS_INTReady) { _KEY_SIP_TIMER_J_MILLIS_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SIP_TIMER_J_MILLIS_INT"); _KEY_SIP_TIMER_J_MILLIS_INTReady = true; } return _KEY_SIP_TIMER_J_MILLIS_INTContent; } }
            private static Java.Lang.String _KEY_SIP_TIMER_J_MILLIS_INTContent = default;
            private static bool _KEY_SIP_TIMER_J_MILLIS_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#KEY_SIP_TIMER_T1_MILLIS_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_SIP_TIMER_T1_MILLIS_INT { get { if (!_KEY_SIP_TIMER_T1_MILLIS_INTReady) { _KEY_SIP_TIMER_T1_MILLIS_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SIP_TIMER_T1_MILLIS_INT"); _KEY_SIP_TIMER_T1_MILLIS_INTReady = true; } return _KEY_SIP_TIMER_T1_MILLIS_INTContent; } }
            private static Java.Lang.String _KEY_SIP_TIMER_T1_MILLIS_INTContent = default;
            private static bool _KEY_SIP_TIMER_T1_MILLIS_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#KEY_SIP_TIMER_T2_MILLIS_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_SIP_TIMER_T2_MILLIS_INT { get { if (!_KEY_SIP_TIMER_T2_MILLIS_INTReady) { _KEY_SIP_TIMER_T2_MILLIS_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SIP_TIMER_T2_MILLIS_INT"); _KEY_SIP_TIMER_T2_MILLIS_INTReady = true; } return _KEY_SIP_TIMER_T2_MILLIS_INTContent; } }
            private static Java.Lang.String _KEY_SIP_TIMER_T2_MILLIS_INTContent = default;
            private static bool _KEY_SIP_TIMER_T2_MILLIS_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#KEY_SIP_TIMER_T4_MILLIS_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_SIP_TIMER_T4_MILLIS_INT { get { if (!_KEY_SIP_TIMER_T4_MILLIS_INTReady) { _KEY_SIP_TIMER_T4_MILLIS_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SIP_TIMER_T4_MILLIS_INT"); _KEY_SIP_TIMER_T4_MILLIS_INTReady = true; } return _KEY_SIP_TIMER_T4_MILLIS_INTContent; } }
            private static Java.Lang.String _KEY_SIP_TIMER_T4_MILLIS_INTContent = default;
            private static bool _KEY_SIP_TIMER_T4_MILLIS_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#KEY_SUPPORTED_RATS_INT_ARRAY"/>
            /// </summary>
            public static Java.Lang.String KEY_SUPPORTED_RATS_INT_ARRAY { get { if (!_KEY_SUPPORTED_RATS_INT_ARRAYReady) { _KEY_SUPPORTED_RATS_INT_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SUPPORTED_RATS_INT_ARRAY"); _KEY_SUPPORTED_RATS_INT_ARRAYReady = true; } return _KEY_SUPPORTED_RATS_INT_ARRAYContent; } }
            private static Java.Lang.String _KEY_SUPPORTED_RATS_INT_ARRAYContent = default;
            private static bool _KEY_SUPPORTED_RATS_INT_ARRAYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#KEY_USE_SIP_URI_FOR_PRESENCE_SUBSCRIBE_BOOL"/>
            /// </summary>
            public static Java.Lang.String KEY_USE_SIP_URI_FOR_PRESENCE_SUBSCRIBE_BOOL { get { if (!_KEY_USE_SIP_URI_FOR_PRESENCE_SUBSCRIBE_BOOLReady) { _KEY_USE_SIP_URI_FOR_PRESENCE_SUBSCRIBE_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_USE_SIP_URI_FOR_PRESENCE_SUBSCRIBE_BOOL"); _KEY_USE_SIP_URI_FOR_PRESENCE_SUBSCRIBE_BOOLReady = true; } return _KEY_USE_SIP_URI_FOR_PRESENCE_SUBSCRIBE_BOOLContent; } }
            private static Java.Lang.String _KEY_USE_SIP_URI_FOR_PRESENCE_SUBSCRIBE_BOOLContent = default;
            private static bool _KEY_USE_SIP_URI_FOR_PRESENCE_SUBSCRIBE_BOOLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Ims.html#KEY_WIFI_OFF_DEFERRING_TIME_MILLIS_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_WIFI_OFF_DEFERRING_TIME_MILLIS_INT { get { if (!_KEY_WIFI_OFF_DEFERRING_TIME_MILLIS_INTReady) { _KEY_WIFI_OFF_DEFERRING_TIME_MILLIS_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_WIFI_OFF_DEFERRING_TIME_MILLIS_INT"); _KEY_WIFI_OFF_DEFERRING_TIME_MILLIS_INTReady = true; } return _KEY_WIFI_OFF_DEFERRING_TIME_MILLIS_INTContent; } }
            private static Java.Lang.String _KEY_WIFI_OFF_DEFERRING_TIME_MILLIS_INTContent = default;
            private static bool _KEY_WIFI_OFF_DEFERRING_TIME_MILLIS_INTReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region ImsEmergency
        public partial class ImsEmergency
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsEmergency.html#KEY_EMERGENCY_CALLBACK_MODE_SUPPORTED_BOOL"/>
            /// </summary>
            public static Java.Lang.String KEY_EMERGENCY_CALLBACK_MODE_SUPPORTED_BOOL { get { if (!_KEY_EMERGENCY_CALLBACK_MODE_SUPPORTED_BOOLReady) { _KEY_EMERGENCY_CALLBACK_MODE_SUPPORTED_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_EMERGENCY_CALLBACK_MODE_SUPPORTED_BOOL"); _KEY_EMERGENCY_CALLBACK_MODE_SUPPORTED_BOOLReady = true; } return _KEY_EMERGENCY_CALLBACK_MODE_SUPPORTED_BOOLContent; } }
            private static Java.Lang.String _KEY_EMERGENCY_CALLBACK_MODE_SUPPORTED_BOOLContent = default;
            private static bool _KEY_EMERGENCY_CALLBACK_MODE_SUPPORTED_BOOLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsEmergency.html#KEY_EMERGENCY_OVER_IMS_SUPPORTED_RATS_INT_ARRAY"/>
            /// </summary>
            public static Java.Lang.String KEY_EMERGENCY_OVER_IMS_SUPPORTED_RATS_INT_ARRAY { get { if (!_KEY_EMERGENCY_OVER_IMS_SUPPORTED_RATS_INT_ARRAYReady) { _KEY_EMERGENCY_OVER_IMS_SUPPORTED_RATS_INT_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_EMERGENCY_OVER_IMS_SUPPORTED_RATS_INT_ARRAY"); _KEY_EMERGENCY_OVER_IMS_SUPPORTED_RATS_INT_ARRAYReady = true; } return _KEY_EMERGENCY_OVER_IMS_SUPPORTED_RATS_INT_ARRAYContent; } }
            private static Java.Lang.String _KEY_EMERGENCY_OVER_IMS_SUPPORTED_RATS_INT_ARRAYContent = default;
            private static bool _KEY_EMERGENCY_OVER_IMS_SUPPORTED_RATS_INT_ARRAYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsEmergency.html#KEY_EMERGENCY_QOS_PRECONDITION_SUPPORTED_BOOL"/>
            /// </summary>
            public static Java.Lang.String KEY_EMERGENCY_QOS_PRECONDITION_SUPPORTED_BOOL { get { if (!_KEY_EMERGENCY_QOS_PRECONDITION_SUPPORTED_BOOLReady) { _KEY_EMERGENCY_QOS_PRECONDITION_SUPPORTED_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_EMERGENCY_QOS_PRECONDITION_SUPPORTED_BOOL"); _KEY_EMERGENCY_QOS_PRECONDITION_SUPPORTED_BOOLReady = true; } return _KEY_EMERGENCY_QOS_PRECONDITION_SUPPORTED_BOOLContent; } }
            private static Java.Lang.String _KEY_EMERGENCY_QOS_PRECONDITION_SUPPORTED_BOOLContent = default;
            private static bool _KEY_EMERGENCY_QOS_PRECONDITION_SUPPORTED_BOOLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsEmergency.html#KEY_EMERGENCY_REGISTRATION_TIMER_MILLIS_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_EMERGENCY_REGISTRATION_TIMER_MILLIS_INT { get { if (!_KEY_EMERGENCY_REGISTRATION_TIMER_MILLIS_INTReady) { _KEY_EMERGENCY_REGISTRATION_TIMER_MILLIS_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_EMERGENCY_REGISTRATION_TIMER_MILLIS_INT"); _KEY_EMERGENCY_REGISTRATION_TIMER_MILLIS_INTReady = true; } return _KEY_EMERGENCY_REGISTRATION_TIMER_MILLIS_INTContent; } }
            private static Java.Lang.String _KEY_EMERGENCY_REGISTRATION_TIMER_MILLIS_INTContent = default;
            private static bool _KEY_EMERGENCY_REGISTRATION_TIMER_MILLIS_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsEmergency.html#KEY_PREFIX"/>
            /// </summary>
            public static Java.Lang.String KEY_PREFIX { get { if (!_KEY_PREFIXReady) { _KEY_PREFIXContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_PREFIX"); _KEY_PREFIXReady = true; } return _KEY_PREFIXContent; } }
            private static Java.Lang.String _KEY_PREFIXContent = default;
            private static bool _KEY_PREFIXReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsEmergency.html#KEY_REFRESH_GEOLOCATION_TIMEOUT_MILLIS_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_REFRESH_GEOLOCATION_TIMEOUT_MILLIS_INT { get { if (!_KEY_REFRESH_GEOLOCATION_TIMEOUT_MILLIS_INTReady) { _KEY_REFRESH_GEOLOCATION_TIMEOUT_MILLIS_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_REFRESH_GEOLOCATION_TIMEOUT_MILLIS_INT"); _KEY_REFRESH_GEOLOCATION_TIMEOUT_MILLIS_INTReady = true; } return _KEY_REFRESH_GEOLOCATION_TIMEOUT_MILLIS_INTContent; } }
            private static Java.Lang.String _KEY_REFRESH_GEOLOCATION_TIMEOUT_MILLIS_INTContent = default;
            private static bool _KEY_REFRESH_GEOLOCATION_TIMEOUT_MILLIS_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsEmergency.html#KEY_RETRY_EMERGENCY_ON_IMS_PDN_BOOL"/>
            /// </summary>
            public static Java.Lang.String KEY_RETRY_EMERGENCY_ON_IMS_PDN_BOOL { get { if (!_KEY_RETRY_EMERGENCY_ON_IMS_PDN_BOOLReady) { _KEY_RETRY_EMERGENCY_ON_IMS_PDN_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_RETRY_EMERGENCY_ON_IMS_PDN_BOOL"); _KEY_RETRY_EMERGENCY_ON_IMS_PDN_BOOLReady = true; } return _KEY_RETRY_EMERGENCY_ON_IMS_PDN_BOOLContent; } }
            private static Java.Lang.String _KEY_RETRY_EMERGENCY_ON_IMS_PDN_BOOLContent = default;
            private static bool _KEY_RETRY_EMERGENCY_ON_IMS_PDN_BOOLReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region ImsRtt
        public partial class ImsRtt
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsRtt.html#KEY_PREFIX"/>
            /// </summary>
            public static Java.Lang.String KEY_PREFIX { get { if (!_KEY_PREFIXReady) { _KEY_PREFIXContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_PREFIX"); _KEY_PREFIXReady = true; } return _KEY_PREFIXContent; } }
            private static Java.Lang.String _KEY_PREFIXContent = default;
            private static bool _KEY_PREFIXReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsRtt.html#KEY_RED_PAYLOAD_TYPE_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_RED_PAYLOAD_TYPE_INT { get { if (!_KEY_RED_PAYLOAD_TYPE_INTReady) { _KEY_RED_PAYLOAD_TYPE_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_RED_PAYLOAD_TYPE_INT"); _KEY_RED_PAYLOAD_TYPE_INTReady = true; } return _KEY_RED_PAYLOAD_TYPE_INTContent; } }
            private static Java.Lang.String _KEY_RED_PAYLOAD_TYPE_INTContent = default;
            private static bool _KEY_RED_PAYLOAD_TYPE_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsRtt.html#KEY_T140_PAYLOAD_TYPE_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_T140_PAYLOAD_TYPE_INT { get { if (!_KEY_T140_PAYLOAD_TYPE_INTReady) { _KEY_T140_PAYLOAD_TYPE_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_T140_PAYLOAD_TYPE_INT"); _KEY_T140_PAYLOAD_TYPE_INTReady = true; } return _KEY_T140_PAYLOAD_TYPE_INTContent; } }
            private static Java.Lang.String _KEY_T140_PAYLOAD_TYPE_INTContent = default;
            private static bool _KEY_T140_PAYLOAD_TYPE_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsRtt.html#KEY_TEXT_AS_BANDWIDTH_KBPS_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_TEXT_AS_BANDWIDTH_KBPS_INT { get { if (!_KEY_TEXT_AS_BANDWIDTH_KBPS_INTReady) { _KEY_TEXT_AS_BANDWIDTH_KBPS_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_TEXT_AS_BANDWIDTH_KBPS_INT"); _KEY_TEXT_AS_BANDWIDTH_KBPS_INTReady = true; } return _KEY_TEXT_AS_BANDWIDTH_KBPS_INTContent; } }
            private static Java.Lang.String _KEY_TEXT_AS_BANDWIDTH_KBPS_INTContent = default;
            private static bool _KEY_TEXT_AS_BANDWIDTH_KBPS_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsRtt.html#KEY_TEXT_CODEC_CAPABILITY_PAYLOAD_TYPES_BUNDLE"/>
            /// </summary>
            public static Java.Lang.String KEY_TEXT_CODEC_CAPABILITY_PAYLOAD_TYPES_BUNDLE { get { if (!_KEY_TEXT_CODEC_CAPABILITY_PAYLOAD_TYPES_BUNDLEReady) { _KEY_TEXT_CODEC_CAPABILITY_PAYLOAD_TYPES_BUNDLEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_TEXT_CODEC_CAPABILITY_PAYLOAD_TYPES_BUNDLE"); _KEY_TEXT_CODEC_CAPABILITY_PAYLOAD_TYPES_BUNDLEReady = true; } return _KEY_TEXT_CODEC_CAPABILITY_PAYLOAD_TYPES_BUNDLEContent; } }
            private static Java.Lang.String _KEY_TEXT_CODEC_CAPABILITY_PAYLOAD_TYPES_BUNDLEContent = default;
            private static bool _KEY_TEXT_CODEC_CAPABILITY_PAYLOAD_TYPES_BUNDLEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsRtt.html#KEY_TEXT_ON_DEFAULT_BEARER_SUPPORTED_BOOL"/>
            /// </summary>
            public static Java.Lang.String KEY_TEXT_ON_DEFAULT_BEARER_SUPPORTED_BOOL { get { if (!_KEY_TEXT_ON_DEFAULT_BEARER_SUPPORTED_BOOLReady) { _KEY_TEXT_ON_DEFAULT_BEARER_SUPPORTED_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_TEXT_ON_DEFAULT_BEARER_SUPPORTED_BOOL"); _KEY_TEXT_ON_DEFAULT_BEARER_SUPPORTED_BOOLReady = true; } return _KEY_TEXT_ON_DEFAULT_BEARER_SUPPORTED_BOOLContent; } }
            private static Java.Lang.String _KEY_TEXT_ON_DEFAULT_BEARER_SUPPORTED_BOOLContent = default;
            private static bool _KEY_TEXT_ON_DEFAULT_BEARER_SUPPORTED_BOOLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsRtt.html#KEY_TEXT_QOS_PRECONDITION_SUPPORTED_BOOL"/>
            /// </summary>
            public static Java.Lang.String KEY_TEXT_QOS_PRECONDITION_SUPPORTED_BOOL { get { if (!_KEY_TEXT_QOS_PRECONDITION_SUPPORTED_BOOLReady) { _KEY_TEXT_QOS_PRECONDITION_SUPPORTED_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_TEXT_QOS_PRECONDITION_SUPPORTED_BOOL"); _KEY_TEXT_QOS_PRECONDITION_SUPPORTED_BOOLReady = true; } return _KEY_TEXT_QOS_PRECONDITION_SUPPORTED_BOOLContent; } }
            private static Java.Lang.String _KEY_TEXT_QOS_PRECONDITION_SUPPORTED_BOOLContent = default;
            private static bool _KEY_TEXT_QOS_PRECONDITION_SUPPORTED_BOOLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsRtt.html#KEY_TEXT_RR_BANDWIDTH_BPS_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_TEXT_RR_BANDWIDTH_BPS_INT { get { if (!_KEY_TEXT_RR_BANDWIDTH_BPS_INTReady) { _KEY_TEXT_RR_BANDWIDTH_BPS_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_TEXT_RR_BANDWIDTH_BPS_INT"); _KEY_TEXT_RR_BANDWIDTH_BPS_INTReady = true; } return _KEY_TEXT_RR_BANDWIDTH_BPS_INTContent; } }
            private static Java.Lang.String _KEY_TEXT_RR_BANDWIDTH_BPS_INTContent = default;
            private static bool _KEY_TEXT_RR_BANDWIDTH_BPS_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsRtt.html#KEY_TEXT_RS_BANDWIDTH_BPS_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_TEXT_RS_BANDWIDTH_BPS_INT { get { if (!_KEY_TEXT_RS_BANDWIDTH_BPS_INTReady) { _KEY_TEXT_RS_BANDWIDTH_BPS_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_TEXT_RS_BANDWIDTH_BPS_INT"); _KEY_TEXT_RS_BANDWIDTH_BPS_INTReady = true; } return _KEY_TEXT_RS_BANDWIDTH_BPS_INTContent; } }
            private static Java.Lang.String _KEY_TEXT_RS_BANDWIDTH_BPS_INTContent = default;
            private static bool _KEY_TEXT_RS_BANDWIDTH_BPS_INTReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region ImsServiceEntitlement
        public partial class ImsServiceEntitlement
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsServiceEntitlement.html#KEY_ENTITLEMENT_SERVER_URL_STRING"/>
            /// </summary>
            public static Java.Lang.String KEY_ENTITLEMENT_SERVER_URL_STRING { get { if (!_KEY_ENTITLEMENT_SERVER_URL_STRINGReady) { _KEY_ENTITLEMENT_SERVER_URL_STRINGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_ENTITLEMENT_SERVER_URL_STRING"); _KEY_ENTITLEMENT_SERVER_URL_STRINGReady = true; } return _KEY_ENTITLEMENT_SERVER_URL_STRINGContent; } }
            private static Java.Lang.String _KEY_ENTITLEMENT_SERVER_URL_STRINGContent = default;
            private static bool _KEY_ENTITLEMENT_SERVER_URL_STRINGReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsServiceEntitlement.html#KEY_FCM_SENDER_ID_STRING"/>
            /// </summary>
            public static Java.Lang.String KEY_FCM_SENDER_ID_STRING { get { if (!_KEY_FCM_SENDER_ID_STRINGReady) { _KEY_FCM_SENDER_ID_STRINGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_FCM_SENDER_ID_STRING"); _KEY_FCM_SENDER_ID_STRINGReady = true; } return _KEY_FCM_SENDER_ID_STRINGContent; } }
            private static Java.Lang.String _KEY_FCM_SENDER_ID_STRINGContent = default;
            private static bool _KEY_FCM_SENDER_ID_STRINGReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsServiceEntitlement.html#KEY_IMS_PROVISIONING_BOOL"/>
            /// </summary>
            public static Java.Lang.String KEY_IMS_PROVISIONING_BOOL { get { if (!_KEY_IMS_PROVISIONING_BOOLReady) { _KEY_IMS_PROVISIONING_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_IMS_PROVISIONING_BOOL"); _KEY_IMS_PROVISIONING_BOOLReady = true; } return _KEY_IMS_PROVISIONING_BOOLContent; } }
            private static Java.Lang.String _KEY_IMS_PROVISIONING_BOOLContent = default;
            private static bool _KEY_IMS_PROVISIONING_BOOLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsServiceEntitlement.html#KEY_PREFIX"/>
            /// </summary>
            public static Java.Lang.String KEY_PREFIX { get { if (!_KEY_PREFIXReady) { _KEY_PREFIXContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_PREFIX"); _KEY_PREFIXReady = true; } return _KEY_PREFIXContent; } }
            private static Java.Lang.String _KEY_PREFIXContent = default;
            private static bool _KEY_PREFIXReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsServiceEntitlement.html#KEY_SHOW_VOWIFI_WEBVIEW_BOOL"/>
            /// </summary>
            public static Java.Lang.String KEY_SHOW_VOWIFI_WEBVIEW_BOOL { get { if (!_KEY_SHOW_VOWIFI_WEBVIEW_BOOLReady) { _KEY_SHOW_VOWIFI_WEBVIEW_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SHOW_VOWIFI_WEBVIEW_BOOL"); _KEY_SHOW_VOWIFI_WEBVIEW_BOOLReady = true; } return _KEY_SHOW_VOWIFI_WEBVIEW_BOOLContent; } }
            private static Java.Lang.String _KEY_SHOW_VOWIFI_WEBVIEW_BOOLContent = default;
            private static bool _KEY_SHOW_VOWIFI_WEBVIEW_BOOLReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region ImsSms
        public partial class ImsSms
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsSms.html#SMS_FORMAT_3GPP"/>
            /// </summary>
            public static int SMS_FORMAT_3GPP { get { if (!_SMS_FORMAT_3GPPReady) { _SMS_FORMAT_3GPPContent = SGetField<int>(LocalBridgeClazz, "SMS_FORMAT_3GPP"); _SMS_FORMAT_3GPPReady = true; } return _SMS_FORMAT_3GPPContent; } }
            private static int _SMS_FORMAT_3GPPContent = default;
            private static bool _SMS_FORMAT_3GPPReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsSms.html#SMS_FORMAT_3GPP2"/>
            /// </summary>
            public static int SMS_FORMAT_3GPP2 { get { if (!_SMS_FORMAT_3GPP2Ready) { _SMS_FORMAT_3GPP2Content = SGetField<int>(LocalBridgeClazz, "SMS_FORMAT_3GPP2"); _SMS_FORMAT_3GPP2Ready = true; } return _SMS_FORMAT_3GPP2Content; } }
            private static int _SMS_FORMAT_3GPP2Content = default;
            private static bool _SMS_FORMAT_3GPP2Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsSms.html#KEY_PREFIX"/>
            /// </summary>
            public static Java.Lang.String KEY_PREFIX { get { if (!_KEY_PREFIXReady) { _KEY_PREFIXContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_PREFIX"); _KEY_PREFIXReady = true; } return _KEY_PREFIXContent; } }
            private static Java.Lang.String _KEY_PREFIXContent = default;
            private static bool _KEY_PREFIXReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsSms.html#KEY_SMS_CSFB_RETRY_ON_FAILURE_BOOL"/>
            /// </summary>
            public static Java.Lang.String KEY_SMS_CSFB_RETRY_ON_FAILURE_BOOL { get { if (!_KEY_SMS_CSFB_RETRY_ON_FAILURE_BOOLReady) { _KEY_SMS_CSFB_RETRY_ON_FAILURE_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SMS_CSFB_RETRY_ON_FAILURE_BOOL"); _KEY_SMS_CSFB_RETRY_ON_FAILURE_BOOLReady = true; } return _KEY_SMS_CSFB_RETRY_ON_FAILURE_BOOLContent; } }
            private static Java.Lang.String _KEY_SMS_CSFB_RETRY_ON_FAILURE_BOOLContent = default;
            private static bool _KEY_SMS_CSFB_RETRY_ON_FAILURE_BOOLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsSms.html#KEY_SMS_MAX_RETRY_COUNT_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_SMS_MAX_RETRY_COUNT_INT { get { if (!_KEY_SMS_MAX_RETRY_COUNT_INTReady) { _KEY_SMS_MAX_RETRY_COUNT_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SMS_MAX_RETRY_COUNT_INT"); _KEY_SMS_MAX_RETRY_COUNT_INTReady = true; } return _KEY_SMS_MAX_RETRY_COUNT_INTContent; } }
            private static Java.Lang.String _KEY_SMS_MAX_RETRY_COUNT_INTContent = default;
            private static bool _KEY_SMS_MAX_RETRY_COUNT_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsSms.html#KEY_SMS_MAX_RETRY_OVER_IMS_COUNT_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_SMS_MAX_RETRY_OVER_IMS_COUNT_INT { get { if (!_KEY_SMS_MAX_RETRY_OVER_IMS_COUNT_INTReady) { _KEY_SMS_MAX_RETRY_OVER_IMS_COUNT_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SMS_MAX_RETRY_OVER_IMS_COUNT_INT"); _KEY_SMS_MAX_RETRY_OVER_IMS_COUNT_INTReady = true; } return _KEY_SMS_MAX_RETRY_OVER_IMS_COUNT_INTContent; } }
            private static Java.Lang.String _KEY_SMS_MAX_RETRY_OVER_IMS_COUNT_INTContent = default;
            private static bool _KEY_SMS_MAX_RETRY_OVER_IMS_COUNT_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsSms.html#KEY_SMS_OVER_IMS_FORMAT_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_SMS_OVER_IMS_FORMAT_INT { get { if (!_KEY_SMS_OVER_IMS_FORMAT_INTReady) { _KEY_SMS_OVER_IMS_FORMAT_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SMS_OVER_IMS_FORMAT_INT"); _KEY_SMS_OVER_IMS_FORMAT_INTReady = true; } return _KEY_SMS_OVER_IMS_FORMAT_INTContent; } }
            private static Java.Lang.String _KEY_SMS_OVER_IMS_FORMAT_INTContent = default;
            private static bool _KEY_SMS_OVER_IMS_FORMAT_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsSms.html#KEY_SMS_OVER_IMS_SEND_RETRY_DELAY_MILLIS_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_SMS_OVER_IMS_SEND_RETRY_DELAY_MILLIS_INT { get { if (!_KEY_SMS_OVER_IMS_SEND_RETRY_DELAY_MILLIS_INTReady) { _KEY_SMS_OVER_IMS_SEND_RETRY_DELAY_MILLIS_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SMS_OVER_IMS_SEND_RETRY_DELAY_MILLIS_INT"); _KEY_SMS_OVER_IMS_SEND_RETRY_DELAY_MILLIS_INTReady = true; } return _KEY_SMS_OVER_IMS_SEND_RETRY_DELAY_MILLIS_INTContent; } }
            private static Java.Lang.String _KEY_SMS_OVER_IMS_SEND_RETRY_DELAY_MILLIS_INTContent = default;
            private static bool _KEY_SMS_OVER_IMS_SEND_RETRY_DELAY_MILLIS_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsSms.html#KEY_SMS_OVER_IMS_SUPPORTED_BOOL"/>
            /// </summary>
            public static Java.Lang.String KEY_SMS_OVER_IMS_SUPPORTED_BOOL { get { if (!_KEY_SMS_OVER_IMS_SUPPORTED_BOOLReady) { _KEY_SMS_OVER_IMS_SUPPORTED_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SMS_OVER_IMS_SUPPORTED_BOOL"); _KEY_SMS_OVER_IMS_SUPPORTED_BOOLReady = true; } return _KEY_SMS_OVER_IMS_SUPPORTED_BOOLContent; } }
            private static Java.Lang.String _KEY_SMS_OVER_IMS_SUPPORTED_BOOLContent = default;
            private static bool _KEY_SMS_OVER_IMS_SUPPORTED_BOOLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsSms.html#KEY_SMS_OVER_IMS_SUPPORTED_RATS_INT_ARRAY"/>
            /// </summary>
            public static Java.Lang.String KEY_SMS_OVER_IMS_SUPPORTED_RATS_INT_ARRAY { get { if (!_KEY_SMS_OVER_IMS_SUPPORTED_RATS_INT_ARRAYReady) { _KEY_SMS_OVER_IMS_SUPPORTED_RATS_INT_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SMS_OVER_IMS_SUPPORTED_RATS_INT_ARRAY"); _KEY_SMS_OVER_IMS_SUPPORTED_RATS_INT_ARRAYReady = true; } return _KEY_SMS_OVER_IMS_SUPPORTED_RATS_INT_ARRAYContent; } }
            private static Java.Lang.String _KEY_SMS_OVER_IMS_SUPPORTED_RATS_INT_ARRAYContent = default;
            private static bool _KEY_SMS_OVER_IMS_SUPPORTED_RATS_INT_ARRAYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsSms.html#KEY_SMS_RP_CAUSE_VALUES_TO_FALLBACK_INT_ARRAY"/>
            /// </summary>
            public static Java.Lang.String KEY_SMS_RP_CAUSE_VALUES_TO_FALLBACK_INT_ARRAY { get { if (!_KEY_SMS_RP_CAUSE_VALUES_TO_FALLBACK_INT_ARRAYReady) { _KEY_SMS_RP_CAUSE_VALUES_TO_FALLBACK_INT_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SMS_RP_CAUSE_VALUES_TO_FALLBACK_INT_ARRAY"); _KEY_SMS_RP_CAUSE_VALUES_TO_FALLBACK_INT_ARRAYReady = true; } return _KEY_SMS_RP_CAUSE_VALUES_TO_FALLBACK_INT_ARRAYContent; } }
            private static Java.Lang.String _KEY_SMS_RP_CAUSE_VALUES_TO_FALLBACK_INT_ARRAYContent = default;
            private static bool _KEY_SMS_RP_CAUSE_VALUES_TO_FALLBACK_INT_ARRAYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsSms.html#KEY_SMS_RP_CAUSE_VALUES_TO_RETRY_OVER_IMS_INT_ARRAY"/>
            /// </summary>
            public static Java.Lang.String KEY_SMS_RP_CAUSE_VALUES_TO_RETRY_OVER_IMS_INT_ARRAY { get { if (!_KEY_SMS_RP_CAUSE_VALUES_TO_RETRY_OVER_IMS_INT_ARRAYReady) { _KEY_SMS_RP_CAUSE_VALUES_TO_RETRY_OVER_IMS_INT_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SMS_RP_CAUSE_VALUES_TO_RETRY_OVER_IMS_INT_ARRAY"); _KEY_SMS_RP_CAUSE_VALUES_TO_RETRY_OVER_IMS_INT_ARRAYReady = true; } return _KEY_SMS_RP_CAUSE_VALUES_TO_RETRY_OVER_IMS_INT_ARRAYContent; } }
            private static Java.Lang.String _KEY_SMS_RP_CAUSE_VALUES_TO_RETRY_OVER_IMS_INT_ARRAYContent = default;
            private static bool _KEY_SMS_RP_CAUSE_VALUES_TO_RETRY_OVER_IMS_INT_ARRAYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsSms.html#KEY_SMS_TR1_TIMER_MILLIS_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_SMS_TR1_TIMER_MILLIS_INT { get { if (!_KEY_SMS_TR1_TIMER_MILLIS_INTReady) { _KEY_SMS_TR1_TIMER_MILLIS_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SMS_TR1_TIMER_MILLIS_INT"); _KEY_SMS_TR1_TIMER_MILLIS_INTReady = true; } return _KEY_SMS_TR1_TIMER_MILLIS_INTContent; } }
            private static Java.Lang.String _KEY_SMS_TR1_TIMER_MILLIS_INTContent = default;
            private static bool _KEY_SMS_TR1_TIMER_MILLIS_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsSms.html#KEY_SMS_TR2_TIMER_MILLIS_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_SMS_TR2_TIMER_MILLIS_INT { get { if (!_KEY_SMS_TR2_TIMER_MILLIS_INTReady) { _KEY_SMS_TR2_TIMER_MILLIS_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SMS_TR2_TIMER_MILLIS_INT"); _KEY_SMS_TR2_TIMER_MILLIS_INTReady = true; } return _KEY_SMS_TR2_TIMER_MILLIS_INTContent; } }
            private static Java.Lang.String _KEY_SMS_TR2_TIMER_MILLIS_INTContent = default;
            private static bool _KEY_SMS_TR2_TIMER_MILLIS_INTReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region ImsSs
        public partial class ImsSs
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsSs.html#CALL_WAITING_SYNC_FIRST_CHANGE"/>
            /// </summary>
            public static int CALL_WAITING_SYNC_FIRST_CHANGE { get { if (!_CALL_WAITING_SYNC_FIRST_CHANGEReady) { _CALL_WAITING_SYNC_FIRST_CHANGEContent = SGetField<int>(LocalBridgeClazz, "CALL_WAITING_SYNC_FIRST_CHANGE"); _CALL_WAITING_SYNC_FIRST_CHANGEReady = true; } return _CALL_WAITING_SYNC_FIRST_CHANGEContent; } }
            private static int _CALL_WAITING_SYNC_FIRST_CHANGEContent = default;
            private static bool _CALL_WAITING_SYNC_FIRST_CHANGEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsSs.html#CALL_WAITING_SYNC_FIRST_POWER_UP"/>
            /// </summary>
            public static int CALL_WAITING_SYNC_FIRST_POWER_UP { get { if (!_CALL_WAITING_SYNC_FIRST_POWER_UPReady) { _CALL_WAITING_SYNC_FIRST_POWER_UPContent = SGetField<int>(LocalBridgeClazz, "CALL_WAITING_SYNC_FIRST_POWER_UP"); _CALL_WAITING_SYNC_FIRST_POWER_UPReady = true; } return _CALL_WAITING_SYNC_FIRST_POWER_UPContent; } }
            private static int _CALL_WAITING_SYNC_FIRST_POWER_UPContent = default;
            private static bool _CALL_WAITING_SYNC_FIRST_POWER_UPReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsSs.html#CALL_WAITING_SYNC_IMS_ONLY"/>
            /// </summary>
            public static int CALL_WAITING_SYNC_IMS_ONLY { get { if (!_CALL_WAITING_SYNC_IMS_ONLYReady) { _CALL_WAITING_SYNC_IMS_ONLYContent = SGetField<int>(LocalBridgeClazz, "CALL_WAITING_SYNC_IMS_ONLY"); _CALL_WAITING_SYNC_IMS_ONLYReady = true; } return _CALL_WAITING_SYNC_IMS_ONLYContent; } }
            private static int _CALL_WAITING_SYNC_IMS_ONLYContent = default;
            private static bool _CALL_WAITING_SYNC_IMS_ONLYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsSs.html#CALL_WAITING_SYNC_NONE"/>
            /// </summary>
            public static int CALL_WAITING_SYNC_NONE { get { if (!_CALL_WAITING_SYNC_NONEReady) { _CALL_WAITING_SYNC_NONEContent = SGetField<int>(LocalBridgeClazz, "CALL_WAITING_SYNC_NONE"); _CALL_WAITING_SYNC_NONEReady = true; } return _CALL_WAITING_SYNC_NONEContent; } }
            private static int _CALL_WAITING_SYNC_NONEContent = default;
            private static bool _CALL_WAITING_SYNC_NONEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsSs.html#CALL_WAITING_SYNC_USER_CHANGE"/>
            /// </summary>
            public static int CALL_WAITING_SYNC_USER_CHANGE { get { if (!_CALL_WAITING_SYNC_USER_CHANGEReady) { _CALL_WAITING_SYNC_USER_CHANGEContent = SGetField<int>(LocalBridgeClazz, "CALL_WAITING_SYNC_USER_CHANGE"); _CALL_WAITING_SYNC_USER_CHANGEReady = true; } return _CALL_WAITING_SYNC_USER_CHANGEContent; } }
            private static int _CALL_WAITING_SYNC_USER_CHANGEContent = default;
            private static bool _CALL_WAITING_SYNC_USER_CHANGEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsSs.html#SUPPLEMENTARY_SERVICE_CB_ACR"/>
            /// </summary>
            public static int SUPPLEMENTARY_SERVICE_CB_ACR { get { if (!_SUPPLEMENTARY_SERVICE_CB_ACRReady) { _SUPPLEMENTARY_SERVICE_CB_ACRContent = SGetField<int>(LocalBridgeClazz, "SUPPLEMENTARY_SERVICE_CB_ACR"); _SUPPLEMENTARY_SERVICE_CB_ACRReady = true; } return _SUPPLEMENTARY_SERVICE_CB_ACRContent; } }
            private static int _SUPPLEMENTARY_SERVICE_CB_ACRContent = default;
            private static bool _SUPPLEMENTARY_SERVICE_CB_ACRReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsSs.html#SUPPLEMENTARY_SERVICE_CB_ALL"/>
            /// </summary>
            public static int SUPPLEMENTARY_SERVICE_CB_ALL { get { if (!_SUPPLEMENTARY_SERVICE_CB_ALLReady) { _SUPPLEMENTARY_SERVICE_CB_ALLContent = SGetField<int>(LocalBridgeClazz, "SUPPLEMENTARY_SERVICE_CB_ALL"); _SUPPLEMENTARY_SERVICE_CB_ALLReady = true; } return _SUPPLEMENTARY_SERVICE_CB_ALLContent; } }
            private static int _SUPPLEMENTARY_SERVICE_CB_ALLContent = default;
            private static bool _SUPPLEMENTARY_SERVICE_CB_ALLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsSs.html#SUPPLEMENTARY_SERVICE_CB_BAIC"/>
            /// </summary>
            public static int SUPPLEMENTARY_SERVICE_CB_BAIC { get { if (!_SUPPLEMENTARY_SERVICE_CB_BAICReady) { _SUPPLEMENTARY_SERVICE_CB_BAICContent = SGetField<int>(LocalBridgeClazz, "SUPPLEMENTARY_SERVICE_CB_BAIC"); _SUPPLEMENTARY_SERVICE_CB_BAICReady = true; } return _SUPPLEMENTARY_SERVICE_CB_BAICContent; } }
            private static int _SUPPLEMENTARY_SERVICE_CB_BAICContent = default;
            private static bool _SUPPLEMENTARY_SERVICE_CB_BAICReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsSs.html#SUPPLEMENTARY_SERVICE_CB_BAOC"/>
            /// </summary>
            public static int SUPPLEMENTARY_SERVICE_CB_BAOC { get { if (!_SUPPLEMENTARY_SERVICE_CB_BAOCReady) { _SUPPLEMENTARY_SERVICE_CB_BAOCContent = SGetField<int>(LocalBridgeClazz, "SUPPLEMENTARY_SERVICE_CB_BAOC"); _SUPPLEMENTARY_SERVICE_CB_BAOCReady = true; } return _SUPPLEMENTARY_SERVICE_CB_BAOCContent; } }
            private static int _SUPPLEMENTARY_SERVICE_CB_BAOCContent = default;
            private static bool _SUPPLEMENTARY_SERVICE_CB_BAOCReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsSs.html#SUPPLEMENTARY_SERVICE_CB_BIC_ROAM"/>
            /// </summary>
            public static int SUPPLEMENTARY_SERVICE_CB_BIC_ROAM { get { if (!_SUPPLEMENTARY_SERVICE_CB_BIC_ROAMReady) { _SUPPLEMENTARY_SERVICE_CB_BIC_ROAMContent = SGetField<int>(LocalBridgeClazz, "SUPPLEMENTARY_SERVICE_CB_BIC_ROAM"); _SUPPLEMENTARY_SERVICE_CB_BIC_ROAMReady = true; } return _SUPPLEMENTARY_SERVICE_CB_BIC_ROAMContent; } }
            private static int _SUPPLEMENTARY_SERVICE_CB_BIC_ROAMContent = default;
            private static bool _SUPPLEMENTARY_SERVICE_CB_BIC_ROAMReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsSs.html#SUPPLEMENTARY_SERVICE_CB_BIL"/>
            /// </summary>
            public static int SUPPLEMENTARY_SERVICE_CB_BIL { get { if (!_SUPPLEMENTARY_SERVICE_CB_BILReady) { _SUPPLEMENTARY_SERVICE_CB_BILContent = SGetField<int>(LocalBridgeClazz, "SUPPLEMENTARY_SERVICE_CB_BIL"); _SUPPLEMENTARY_SERVICE_CB_BILReady = true; } return _SUPPLEMENTARY_SERVICE_CB_BILContent; } }
            private static int _SUPPLEMENTARY_SERVICE_CB_BILContent = default;
            private static bool _SUPPLEMENTARY_SERVICE_CB_BILReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsSs.html#SUPPLEMENTARY_SERVICE_CB_BOIC"/>
            /// </summary>
            public static int SUPPLEMENTARY_SERVICE_CB_BOIC { get { if (!_SUPPLEMENTARY_SERVICE_CB_BOICReady) { _SUPPLEMENTARY_SERVICE_CB_BOICContent = SGetField<int>(LocalBridgeClazz, "SUPPLEMENTARY_SERVICE_CB_BOIC"); _SUPPLEMENTARY_SERVICE_CB_BOICReady = true; } return _SUPPLEMENTARY_SERVICE_CB_BOICContent; } }
            private static int _SUPPLEMENTARY_SERVICE_CB_BOICContent = default;
            private static bool _SUPPLEMENTARY_SERVICE_CB_BOICReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsSs.html#SUPPLEMENTARY_SERVICE_CB_BOIC_EXHC"/>
            /// </summary>
            public static int SUPPLEMENTARY_SERVICE_CB_BOIC_EXHC { get { if (!_SUPPLEMENTARY_SERVICE_CB_BOIC_EXHCReady) { _SUPPLEMENTARY_SERVICE_CB_BOIC_EXHCContent = SGetField<int>(LocalBridgeClazz, "SUPPLEMENTARY_SERVICE_CB_BOIC_EXHC"); _SUPPLEMENTARY_SERVICE_CB_BOIC_EXHCReady = true; } return _SUPPLEMENTARY_SERVICE_CB_BOIC_EXHCContent; } }
            private static int _SUPPLEMENTARY_SERVICE_CB_BOIC_EXHCContent = default;
            private static bool _SUPPLEMENTARY_SERVICE_CB_BOIC_EXHCReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsSs.html#SUPPLEMENTARY_SERVICE_CB_IBS"/>
            /// </summary>
            public static int SUPPLEMENTARY_SERVICE_CB_IBS { get { if (!_SUPPLEMENTARY_SERVICE_CB_IBSReady) { _SUPPLEMENTARY_SERVICE_CB_IBSContent = SGetField<int>(LocalBridgeClazz, "SUPPLEMENTARY_SERVICE_CB_IBS"); _SUPPLEMENTARY_SERVICE_CB_IBSReady = true; } return _SUPPLEMENTARY_SERVICE_CB_IBSContent; } }
            private static int _SUPPLEMENTARY_SERVICE_CB_IBSContent = default;
            private static bool _SUPPLEMENTARY_SERVICE_CB_IBSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsSs.html#SUPPLEMENTARY_SERVICE_CB_OBS"/>
            /// </summary>
            public static int SUPPLEMENTARY_SERVICE_CB_OBS { get { if (!_SUPPLEMENTARY_SERVICE_CB_OBSReady) { _SUPPLEMENTARY_SERVICE_CB_OBSContent = SGetField<int>(LocalBridgeClazz, "SUPPLEMENTARY_SERVICE_CB_OBS"); _SUPPLEMENTARY_SERVICE_CB_OBSReady = true; } return _SUPPLEMENTARY_SERVICE_CB_OBSContent; } }
            private static int _SUPPLEMENTARY_SERVICE_CB_OBSContent = default;
            private static bool _SUPPLEMENTARY_SERVICE_CB_OBSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsSs.html#SUPPLEMENTARY_SERVICE_CF_ALL"/>
            /// </summary>
            public static int SUPPLEMENTARY_SERVICE_CF_ALL { get { if (!_SUPPLEMENTARY_SERVICE_CF_ALLReady) { _SUPPLEMENTARY_SERVICE_CF_ALLContent = SGetField<int>(LocalBridgeClazz, "SUPPLEMENTARY_SERVICE_CF_ALL"); _SUPPLEMENTARY_SERVICE_CF_ALLReady = true; } return _SUPPLEMENTARY_SERVICE_CF_ALLContent; } }
            private static int _SUPPLEMENTARY_SERVICE_CF_ALLContent = default;
            private static bool _SUPPLEMENTARY_SERVICE_CF_ALLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsSs.html#SUPPLEMENTARY_SERVICE_CF_ALL_CONDITONAL_FORWARDING"/>
            /// </summary>
            public static int SUPPLEMENTARY_SERVICE_CF_ALL_CONDITONAL_FORWARDING { get { if (!_SUPPLEMENTARY_SERVICE_CF_ALL_CONDITONAL_FORWARDINGReady) { _SUPPLEMENTARY_SERVICE_CF_ALL_CONDITONAL_FORWARDINGContent = SGetField<int>(LocalBridgeClazz, "SUPPLEMENTARY_SERVICE_CF_ALL_CONDITONAL_FORWARDING"); _SUPPLEMENTARY_SERVICE_CF_ALL_CONDITONAL_FORWARDINGReady = true; } return _SUPPLEMENTARY_SERVICE_CF_ALL_CONDITONAL_FORWARDINGContent; } }
            private static int _SUPPLEMENTARY_SERVICE_CF_ALL_CONDITONAL_FORWARDINGContent = default;
            private static bool _SUPPLEMENTARY_SERVICE_CF_ALL_CONDITONAL_FORWARDINGReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsSs.html#SUPPLEMENTARY_SERVICE_CF_CFB"/>
            /// </summary>
            public static int SUPPLEMENTARY_SERVICE_CF_CFB { get { if (!_SUPPLEMENTARY_SERVICE_CF_CFBReady) { _SUPPLEMENTARY_SERVICE_CF_CFBContent = SGetField<int>(LocalBridgeClazz, "SUPPLEMENTARY_SERVICE_CF_CFB"); _SUPPLEMENTARY_SERVICE_CF_CFBReady = true; } return _SUPPLEMENTARY_SERVICE_CF_CFBContent; } }
            private static int _SUPPLEMENTARY_SERVICE_CF_CFBContent = default;
            private static bool _SUPPLEMENTARY_SERVICE_CF_CFBReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsSs.html#SUPPLEMENTARY_SERVICE_CF_CFNL"/>
            /// </summary>
            public static int SUPPLEMENTARY_SERVICE_CF_CFNL { get { if (!_SUPPLEMENTARY_SERVICE_CF_CFNLReady) { _SUPPLEMENTARY_SERVICE_CF_CFNLContent = SGetField<int>(LocalBridgeClazz, "SUPPLEMENTARY_SERVICE_CF_CFNL"); _SUPPLEMENTARY_SERVICE_CF_CFNLReady = true; } return _SUPPLEMENTARY_SERVICE_CF_CFNLContent; } }
            private static int _SUPPLEMENTARY_SERVICE_CF_CFNLContent = default;
            private static bool _SUPPLEMENTARY_SERVICE_CF_CFNLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsSs.html#SUPPLEMENTARY_SERVICE_CF_CFNRC"/>
            /// </summary>
            public static int SUPPLEMENTARY_SERVICE_CF_CFNRC { get { if (!_SUPPLEMENTARY_SERVICE_CF_CFNRCReady) { _SUPPLEMENTARY_SERVICE_CF_CFNRCContent = SGetField<int>(LocalBridgeClazz, "SUPPLEMENTARY_SERVICE_CF_CFNRC"); _SUPPLEMENTARY_SERVICE_CF_CFNRCReady = true; } return _SUPPLEMENTARY_SERVICE_CF_CFNRCContent; } }
            private static int _SUPPLEMENTARY_SERVICE_CF_CFNRCContent = default;
            private static bool _SUPPLEMENTARY_SERVICE_CF_CFNRCReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsSs.html#SUPPLEMENTARY_SERVICE_CF_CFNRY"/>
            /// </summary>
            public static int SUPPLEMENTARY_SERVICE_CF_CFNRY { get { if (!_SUPPLEMENTARY_SERVICE_CF_CFNRYReady) { _SUPPLEMENTARY_SERVICE_CF_CFNRYContent = SGetField<int>(LocalBridgeClazz, "SUPPLEMENTARY_SERVICE_CF_CFNRY"); _SUPPLEMENTARY_SERVICE_CF_CFNRYReady = true; } return _SUPPLEMENTARY_SERVICE_CF_CFNRYContent; } }
            private static int _SUPPLEMENTARY_SERVICE_CF_CFNRYContent = default;
            private static bool _SUPPLEMENTARY_SERVICE_CF_CFNRYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsSs.html#SUPPLEMENTARY_SERVICE_CF_CFU"/>
            /// </summary>
            public static int SUPPLEMENTARY_SERVICE_CF_CFU { get { if (!_SUPPLEMENTARY_SERVICE_CF_CFUReady) { _SUPPLEMENTARY_SERVICE_CF_CFUContent = SGetField<int>(LocalBridgeClazz, "SUPPLEMENTARY_SERVICE_CF_CFU"); _SUPPLEMENTARY_SERVICE_CF_CFUReady = true; } return _SUPPLEMENTARY_SERVICE_CF_CFUContent; } }
            private static int _SUPPLEMENTARY_SERVICE_CF_CFUContent = default;
            private static bool _SUPPLEMENTARY_SERVICE_CF_CFUReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsSs.html#SUPPLEMENTARY_SERVICE_CW"/>
            /// </summary>
            public static int SUPPLEMENTARY_SERVICE_CW { get { if (!_SUPPLEMENTARY_SERVICE_CWReady) { _SUPPLEMENTARY_SERVICE_CWContent = SGetField<int>(LocalBridgeClazz, "SUPPLEMENTARY_SERVICE_CW"); _SUPPLEMENTARY_SERVICE_CWReady = true; } return _SUPPLEMENTARY_SERVICE_CWContent; } }
            private static int _SUPPLEMENTARY_SERVICE_CWContent = default;
            private static bool _SUPPLEMENTARY_SERVICE_CWReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsSs.html#SUPPLEMENTARY_SERVICE_IDENTIFICATION_OIP"/>
            /// </summary>
            public static int SUPPLEMENTARY_SERVICE_IDENTIFICATION_OIP { get { if (!_SUPPLEMENTARY_SERVICE_IDENTIFICATION_OIPReady) { _SUPPLEMENTARY_SERVICE_IDENTIFICATION_OIPContent = SGetField<int>(LocalBridgeClazz, "SUPPLEMENTARY_SERVICE_IDENTIFICATION_OIP"); _SUPPLEMENTARY_SERVICE_IDENTIFICATION_OIPReady = true; } return _SUPPLEMENTARY_SERVICE_IDENTIFICATION_OIPContent; } }
            private static int _SUPPLEMENTARY_SERVICE_IDENTIFICATION_OIPContent = default;
            private static bool _SUPPLEMENTARY_SERVICE_IDENTIFICATION_OIPReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsSs.html#SUPPLEMENTARY_SERVICE_IDENTIFICATION_OIR"/>
            /// </summary>
            public static int SUPPLEMENTARY_SERVICE_IDENTIFICATION_OIR { get { if (!_SUPPLEMENTARY_SERVICE_IDENTIFICATION_OIRReady) { _SUPPLEMENTARY_SERVICE_IDENTIFICATION_OIRContent = SGetField<int>(LocalBridgeClazz, "SUPPLEMENTARY_SERVICE_IDENTIFICATION_OIR"); _SUPPLEMENTARY_SERVICE_IDENTIFICATION_OIRReady = true; } return _SUPPLEMENTARY_SERVICE_IDENTIFICATION_OIRContent; } }
            private static int _SUPPLEMENTARY_SERVICE_IDENTIFICATION_OIRContent = default;
            private static bool _SUPPLEMENTARY_SERVICE_IDENTIFICATION_OIRReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsSs.html#SUPPLEMENTARY_SERVICE_IDENTIFICATION_TIP"/>
            /// </summary>
            public static int SUPPLEMENTARY_SERVICE_IDENTIFICATION_TIP { get { if (!_SUPPLEMENTARY_SERVICE_IDENTIFICATION_TIPReady) { _SUPPLEMENTARY_SERVICE_IDENTIFICATION_TIPContent = SGetField<int>(LocalBridgeClazz, "SUPPLEMENTARY_SERVICE_IDENTIFICATION_TIP"); _SUPPLEMENTARY_SERVICE_IDENTIFICATION_TIPReady = true; } return _SUPPLEMENTARY_SERVICE_IDENTIFICATION_TIPContent; } }
            private static int _SUPPLEMENTARY_SERVICE_IDENTIFICATION_TIPContent = default;
            private static bool _SUPPLEMENTARY_SERVICE_IDENTIFICATION_TIPReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsSs.html#SUPPLEMENTARY_SERVICE_IDENTIFICATION_TIR"/>
            /// </summary>
            public static int SUPPLEMENTARY_SERVICE_IDENTIFICATION_TIR { get { if (!_SUPPLEMENTARY_SERVICE_IDENTIFICATION_TIRReady) { _SUPPLEMENTARY_SERVICE_IDENTIFICATION_TIRContent = SGetField<int>(LocalBridgeClazz, "SUPPLEMENTARY_SERVICE_IDENTIFICATION_TIR"); _SUPPLEMENTARY_SERVICE_IDENTIFICATION_TIRReady = true; } return _SUPPLEMENTARY_SERVICE_IDENTIFICATION_TIRContent; } }
            private static int _SUPPLEMENTARY_SERVICE_IDENTIFICATION_TIRContent = default;
            private static bool _SUPPLEMENTARY_SERVICE_IDENTIFICATION_TIRReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsSs.html#KEY_NETWORK_INITIATED_USSD_OVER_IMS_SUPPORTED_BOOL"/>
            /// </summary>
            public static Java.Lang.String KEY_NETWORK_INITIATED_USSD_OVER_IMS_SUPPORTED_BOOL { get { if (!_KEY_NETWORK_INITIATED_USSD_OVER_IMS_SUPPORTED_BOOLReady) { _KEY_NETWORK_INITIATED_USSD_OVER_IMS_SUPPORTED_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_NETWORK_INITIATED_USSD_OVER_IMS_SUPPORTED_BOOL"); _KEY_NETWORK_INITIATED_USSD_OVER_IMS_SUPPORTED_BOOLReady = true; } return _KEY_NETWORK_INITIATED_USSD_OVER_IMS_SUPPORTED_BOOLContent; } }
            private static Java.Lang.String _KEY_NETWORK_INITIATED_USSD_OVER_IMS_SUPPORTED_BOOLContent = default;
            private static bool _KEY_NETWORK_INITIATED_USSD_OVER_IMS_SUPPORTED_BOOLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsSs.html#KEY_PREFIX"/>
            /// </summary>
            public static Java.Lang.String KEY_PREFIX { get { if (!_KEY_PREFIXReady) { _KEY_PREFIXContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_PREFIX"); _KEY_PREFIXReady = true; } return _KEY_PREFIXContent; } }
            private static Java.Lang.String _KEY_PREFIXContent = default;
            private static bool _KEY_PREFIXReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsSs.html#KEY_TERMINAL_BASED_CALL_WAITING_DEFAULT_ENABLED_BOOL"/>
            /// </summary>
            public static Java.Lang.String KEY_TERMINAL_BASED_CALL_WAITING_DEFAULT_ENABLED_BOOL { get { if (!_KEY_TERMINAL_BASED_CALL_WAITING_DEFAULT_ENABLED_BOOLReady) { _KEY_TERMINAL_BASED_CALL_WAITING_DEFAULT_ENABLED_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_TERMINAL_BASED_CALL_WAITING_DEFAULT_ENABLED_BOOL"); _KEY_TERMINAL_BASED_CALL_WAITING_DEFAULT_ENABLED_BOOLReady = true; } return _KEY_TERMINAL_BASED_CALL_WAITING_DEFAULT_ENABLED_BOOLContent; } }
            private static Java.Lang.String _KEY_TERMINAL_BASED_CALL_WAITING_DEFAULT_ENABLED_BOOLContent = default;
            private static bool _KEY_TERMINAL_BASED_CALL_WAITING_DEFAULT_ENABLED_BOOLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsSs.html#KEY_TERMINAL_BASED_CALL_WAITING_SYNC_TYPE_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_TERMINAL_BASED_CALL_WAITING_SYNC_TYPE_INT { get { if (!_KEY_TERMINAL_BASED_CALL_WAITING_SYNC_TYPE_INTReady) { _KEY_TERMINAL_BASED_CALL_WAITING_SYNC_TYPE_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_TERMINAL_BASED_CALL_WAITING_SYNC_TYPE_INT"); _KEY_TERMINAL_BASED_CALL_WAITING_SYNC_TYPE_INTReady = true; } return _KEY_TERMINAL_BASED_CALL_WAITING_SYNC_TYPE_INTContent; } }
            private static Java.Lang.String _KEY_TERMINAL_BASED_CALL_WAITING_SYNC_TYPE_INTContent = default;
            private static bool _KEY_TERMINAL_BASED_CALL_WAITING_SYNC_TYPE_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsSs.html#KEY_USE_CSFB_ON_XCAP_OVER_UT_FAILURE_BOOL"/>
            /// </summary>
            public static Java.Lang.String KEY_USE_CSFB_ON_XCAP_OVER_UT_FAILURE_BOOL { get { if (!_KEY_USE_CSFB_ON_XCAP_OVER_UT_FAILURE_BOOLReady) { _KEY_USE_CSFB_ON_XCAP_OVER_UT_FAILURE_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_USE_CSFB_ON_XCAP_OVER_UT_FAILURE_BOOL"); _KEY_USE_CSFB_ON_XCAP_OVER_UT_FAILURE_BOOLReady = true; } return _KEY_USE_CSFB_ON_XCAP_OVER_UT_FAILURE_BOOLContent; } }
            private static Java.Lang.String _KEY_USE_CSFB_ON_XCAP_OVER_UT_FAILURE_BOOLContent = default;
            private static bool _KEY_USE_CSFB_ON_XCAP_OVER_UT_FAILURE_BOOLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsSs.html#KEY_UT_AS_SERVER_FQDN_STRING"/>
            /// </summary>
            public static Java.Lang.String KEY_UT_AS_SERVER_FQDN_STRING { get { if (!_KEY_UT_AS_SERVER_FQDN_STRINGReady) { _KEY_UT_AS_SERVER_FQDN_STRINGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_UT_AS_SERVER_FQDN_STRING"); _KEY_UT_AS_SERVER_FQDN_STRINGReady = true; } return _KEY_UT_AS_SERVER_FQDN_STRINGContent; } }
            private static Java.Lang.String _KEY_UT_AS_SERVER_FQDN_STRINGContent = default;
            private static bool _KEY_UT_AS_SERVER_FQDN_STRINGReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsSs.html#KEY_UT_AS_SERVER_PORT_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_UT_AS_SERVER_PORT_INT { get { if (!_KEY_UT_AS_SERVER_PORT_INTReady) { _KEY_UT_AS_SERVER_PORT_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_UT_AS_SERVER_PORT_INT"); _KEY_UT_AS_SERVER_PORT_INTReady = true; } return _KEY_UT_AS_SERVER_PORT_INTContent; } }
            private static Java.Lang.String _KEY_UT_AS_SERVER_PORT_INTContent = default;
            private static bool _KEY_UT_AS_SERVER_PORT_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsSs.html#KEY_UT_IPTYPE_HOME_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_UT_IPTYPE_HOME_INT { get { if (!_KEY_UT_IPTYPE_HOME_INTReady) { _KEY_UT_IPTYPE_HOME_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_UT_IPTYPE_HOME_INT"); _KEY_UT_IPTYPE_HOME_INTReady = true; } return _KEY_UT_IPTYPE_HOME_INTContent; } }
            private static Java.Lang.String _KEY_UT_IPTYPE_HOME_INTContent = default;
            private static bool _KEY_UT_IPTYPE_HOME_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsSs.html#KEY_UT_IPTYPE_ROAMING_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_UT_IPTYPE_ROAMING_INT { get { if (!_KEY_UT_IPTYPE_ROAMING_INTReady) { _KEY_UT_IPTYPE_ROAMING_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_UT_IPTYPE_ROAMING_INT"); _KEY_UT_IPTYPE_ROAMING_INTReady = true; } return _KEY_UT_IPTYPE_ROAMING_INTContent; } }
            private static Java.Lang.String _KEY_UT_IPTYPE_ROAMING_INTContent = default;
            private static bool _KEY_UT_IPTYPE_ROAMING_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsSs.html#KEY_UT_REQUIRES_IMS_REGISTRATION_BOOL"/>
            /// </summary>
            public static Java.Lang.String KEY_UT_REQUIRES_IMS_REGISTRATION_BOOL { get { if (!_KEY_UT_REQUIRES_IMS_REGISTRATION_BOOLReady) { _KEY_UT_REQUIRES_IMS_REGISTRATION_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_UT_REQUIRES_IMS_REGISTRATION_BOOL"); _KEY_UT_REQUIRES_IMS_REGISTRATION_BOOLReady = true; } return _KEY_UT_REQUIRES_IMS_REGISTRATION_BOOLContent; } }
            private static Java.Lang.String _KEY_UT_REQUIRES_IMS_REGISTRATION_BOOLContent = default;
            private static bool _KEY_UT_REQUIRES_IMS_REGISTRATION_BOOLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsSs.html#KEY_UT_SERVER_BASED_SERVICES_INT_ARRAY"/>
            /// </summary>
            public static Java.Lang.String KEY_UT_SERVER_BASED_SERVICES_INT_ARRAY { get { if (!_KEY_UT_SERVER_BASED_SERVICES_INT_ARRAYReady) { _KEY_UT_SERVER_BASED_SERVICES_INT_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_UT_SERVER_BASED_SERVICES_INT_ARRAY"); _KEY_UT_SERVER_BASED_SERVICES_INT_ARRAYReady = true; } return _KEY_UT_SERVER_BASED_SERVICES_INT_ARRAYContent; } }
            private static Java.Lang.String _KEY_UT_SERVER_BASED_SERVICES_INT_ARRAYContent = default;
            private static bool _KEY_UT_SERVER_BASED_SERVICES_INT_ARRAYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsSs.html#KEY_UT_SUPPORTED_WHEN_PS_DATA_OFF_BOOL"/>
            /// </summary>
            public static Java.Lang.String KEY_UT_SUPPORTED_WHEN_PS_DATA_OFF_BOOL { get { if (!_KEY_UT_SUPPORTED_WHEN_PS_DATA_OFF_BOOLReady) { _KEY_UT_SUPPORTED_WHEN_PS_DATA_OFF_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_UT_SUPPORTED_WHEN_PS_DATA_OFF_BOOL"); _KEY_UT_SUPPORTED_WHEN_PS_DATA_OFF_BOOLReady = true; } return _KEY_UT_SUPPORTED_WHEN_PS_DATA_OFF_BOOLContent; } }
            private static Java.Lang.String _KEY_UT_SUPPORTED_WHEN_PS_DATA_OFF_BOOLContent = default;
            private static bool _KEY_UT_SUPPORTED_WHEN_PS_DATA_OFF_BOOLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsSs.html#KEY_UT_SUPPORTED_WHEN_ROAMING_BOOL"/>
            /// </summary>
            public static Java.Lang.String KEY_UT_SUPPORTED_WHEN_ROAMING_BOOL { get { if (!_KEY_UT_SUPPORTED_WHEN_ROAMING_BOOLReady) { _KEY_UT_SUPPORTED_WHEN_ROAMING_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_UT_SUPPORTED_WHEN_ROAMING_BOOL"); _KEY_UT_SUPPORTED_WHEN_ROAMING_BOOLReady = true; } return _KEY_UT_SUPPORTED_WHEN_ROAMING_BOOLContent; } }
            private static Java.Lang.String _KEY_UT_SUPPORTED_WHEN_ROAMING_BOOLContent = default;
            private static bool _KEY_UT_SUPPORTED_WHEN_ROAMING_BOOLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsSs.html#KEY_UT_TERMINAL_BASED_SERVICES_INT_ARRAY"/>
            /// </summary>
            public static Java.Lang.String KEY_UT_TERMINAL_BASED_SERVICES_INT_ARRAY { get { if (!_KEY_UT_TERMINAL_BASED_SERVICES_INT_ARRAYReady) { _KEY_UT_TERMINAL_BASED_SERVICES_INT_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_UT_TERMINAL_BASED_SERVICES_INT_ARRAY"); _KEY_UT_TERMINAL_BASED_SERVICES_INT_ARRAYReady = true; } return _KEY_UT_TERMINAL_BASED_SERVICES_INT_ARRAYContent; } }
            private static Java.Lang.String _KEY_UT_TERMINAL_BASED_SERVICES_INT_ARRAYContent = default;
            private static bool _KEY_UT_TERMINAL_BASED_SERVICES_INT_ARRAYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsSs.html#KEY_UT_TRANSPORT_TYPE_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_UT_TRANSPORT_TYPE_INT { get { if (!_KEY_UT_TRANSPORT_TYPE_INTReady) { _KEY_UT_TRANSPORT_TYPE_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_UT_TRANSPORT_TYPE_INT"); _KEY_UT_TRANSPORT_TYPE_INTReady = true; } return _KEY_UT_TRANSPORT_TYPE_INTContent; } }
            private static Java.Lang.String _KEY_UT_TRANSPORT_TYPE_INTContent = default;
            private static bool _KEY_UT_TRANSPORT_TYPE_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsSs.html#KEY_XCAP_OVER_UT_SUPPORTED_RATS_INT_ARRAY"/>
            /// </summary>
            public static Java.Lang.String KEY_XCAP_OVER_UT_SUPPORTED_RATS_INT_ARRAY { get { if (!_KEY_XCAP_OVER_UT_SUPPORTED_RATS_INT_ARRAYReady) { _KEY_XCAP_OVER_UT_SUPPORTED_RATS_INT_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_XCAP_OVER_UT_SUPPORTED_RATS_INT_ARRAY"); _KEY_XCAP_OVER_UT_SUPPORTED_RATS_INT_ARRAYReady = true; } return _KEY_XCAP_OVER_UT_SUPPORTED_RATS_INT_ARRAYContent; } }
            private static Java.Lang.String _KEY_XCAP_OVER_UT_SUPPORTED_RATS_INT_ARRAYContent = default;
            private static bool _KEY_XCAP_OVER_UT_SUPPORTED_RATS_INT_ARRAYReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region ImsVoice
        public partial class ImsVoice
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#ALERTING_SRVCC_SUPPORT"/>
            /// </summary>
            public static int ALERTING_SRVCC_SUPPORT { get { if (!_ALERTING_SRVCC_SUPPORTReady) { _ALERTING_SRVCC_SUPPORTContent = SGetField<int>(LocalBridgeClazz, "ALERTING_SRVCC_SUPPORT"); _ALERTING_SRVCC_SUPPORTReady = true; } return _ALERTING_SRVCC_SUPPORTContent; } }
            private static int _ALERTING_SRVCC_SUPPORTContent = default;
            private static bool _ALERTING_SRVCC_SUPPORTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#BANDWIDTH_EFFICIENT"/>
            /// </summary>
            public static int BANDWIDTH_EFFICIENT { get { if (!_BANDWIDTH_EFFICIENTReady) { _BANDWIDTH_EFFICIENTContent = SGetField<int>(LocalBridgeClazz, "BANDWIDTH_EFFICIENT"); _BANDWIDTH_EFFICIENTReady = true; } return _BANDWIDTH_EFFICIENTContent; } }
            private static int _BANDWIDTH_EFFICIENTContent = default;
            private static bool _BANDWIDTH_EFFICIENTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#BASIC_SRVCC_SUPPORT"/>
            /// </summary>
            public static int BASIC_SRVCC_SUPPORT { get { if (!_BASIC_SRVCC_SUPPORTReady) { _BASIC_SRVCC_SUPPORTContent = SGetField<int>(LocalBridgeClazz, "BASIC_SRVCC_SUPPORT"); _BASIC_SRVCC_SUPPORTReady = true; } return _BASIC_SRVCC_SUPPORTContent; } }
            private static int _BASIC_SRVCC_SUPPORTContent = default;
            private static bool _BASIC_SRVCC_SUPPORTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#CONFERENCE_SUBSCRIBE_TYPE_IN_DIALOG"/>
            /// </summary>
            public static int CONFERENCE_SUBSCRIBE_TYPE_IN_DIALOG { get { if (!_CONFERENCE_SUBSCRIBE_TYPE_IN_DIALOGReady) { _CONFERENCE_SUBSCRIBE_TYPE_IN_DIALOGContent = SGetField<int>(LocalBridgeClazz, "CONFERENCE_SUBSCRIBE_TYPE_IN_DIALOG"); _CONFERENCE_SUBSCRIBE_TYPE_IN_DIALOGReady = true; } return _CONFERENCE_SUBSCRIBE_TYPE_IN_DIALOGContent; } }
            private static int _CONFERENCE_SUBSCRIBE_TYPE_IN_DIALOGContent = default;
            private static bool _CONFERENCE_SUBSCRIBE_TYPE_IN_DIALOGReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#CONFERENCE_SUBSCRIBE_TYPE_OUT_OF_DIALOG"/>
            /// </summary>
            public static int CONFERENCE_SUBSCRIBE_TYPE_OUT_OF_DIALOG { get { if (!_CONFERENCE_SUBSCRIBE_TYPE_OUT_OF_DIALOGReady) { _CONFERENCE_SUBSCRIBE_TYPE_OUT_OF_DIALOGContent = SGetField<int>(LocalBridgeClazz, "CONFERENCE_SUBSCRIBE_TYPE_OUT_OF_DIALOG"); _CONFERENCE_SUBSCRIBE_TYPE_OUT_OF_DIALOGReady = true; } return _CONFERENCE_SUBSCRIBE_TYPE_OUT_OF_DIALOGContent; } }
            private static int _CONFERENCE_SUBSCRIBE_TYPE_OUT_OF_DIALOGContent = default;
            private static bool _CONFERENCE_SUBSCRIBE_TYPE_OUT_OF_DIALOGReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#EVS_ENCODED_BW_TYPE_FB"/>
            /// </summary>
            public static int EVS_ENCODED_BW_TYPE_FB { get { if (!_EVS_ENCODED_BW_TYPE_FBReady) { _EVS_ENCODED_BW_TYPE_FBContent = SGetField<int>(LocalBridgeClazz, "EVS_ENCODED_BW_TYPE_FB"); _EVS_ENCODED_BW_TYPE_FBReady = true; } return _EVS_ENCODED_BW_TYPE_FBContent; } }
            private static int _EVS_ENCODED_BW_TYPE_FBContent = default;
            private static bool _EVS_ENCODED_BW_TYPE_FBReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#EVS_ENCODED_BW_TYPE_NB"/>
            /// </summary>
            public static int EVS_ENCODED_BW_TYPE_NB { get { if (!_EVS_ENCODED_BW_TYPE_NBReady) { _EVS_ENCODED_BW_TYPE_NBContent = SGetField<int>(LocalBridgeClazz, "EVS_ENCODED_BW_TYPE_NB"); _EVS_ENCODED_BW_TYPE_NBReady = true; } return _EVS_ENCODED_BW_TYPE_NBContent; } }
            private static int _EVS_ENCODED_BW_TYPE_NBContent = default;
            private static bool _EVS_ENCODED_BW_TYPE_NBReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#EVS_ENCODED_BW_TYPE_NB_WB"/>
            /// </summary>
            public static int EVS_ENCODED_BW_TYPE_NB_WB { get { if (!_EVS_ENCODED_BW_TYPE_NB_WBReady) { _EVS_ENCODED_BW_TYPE_NB_WBContent = SGetField<int>(LocalBridgeClazz, "EVS_ENCODED_BW_TYPE_NB_WB"); _EVS_ENCODED_BW_TYPE_NB_WBReady = true; } return _EVS_ENCODED_BW_TYPE_NB_WBContent; } }
            private static int _EVS_ENCODED_BW_TYPE_NB_WBContent = default;
            private static bool _EVS_ENCODED_BW_TYPE_NB_WBReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#EVS_ENCODED_BW_TYPE_NB_WB_SWB"/>
            /// </summary>
            public static int EVS_ENCODED_BW_TYPE_NB_WB_SWB { get { if (!_EVS_ENCODED_BW_TYPE_NB_WB_SWBReady) { _EVS_ENCODED_BW_TYPE_NB_WB_SWBContent = SGetField<int>(LocalBridgeClazz, "EVS_ENCODED_BW_TYPE_NB_WB_SWB"); _EVS_ENCODED_BW_TYPE_NB_WB_SWBReady = true; } return _EVS_ENCODED_BW_TYPE_NB_WB_SWBContent; } }
            private static int _EVS_ENCODED_BW_TYPE_NB_WB_SWBContent = default;
            private static bool _EVS_ENCODED_BW_TYPE_NB_WB_SWBReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#EVS_ENCODED_BW_TYPE_NB_WB_SWB_FB"/>
            /// </summary>
            public static int EVS_ENCODED_BW_TYPE_NB_WB_SWB_FB { get { if (!_EVS_ENCODED_BW_TYPE_NB_WB_SWB_FBReady) { _EVS_ENCODED_BW_TYPE_NB_WB_SWB_FBContent = SGetField<int>(LocalBridgeClazz, "EVS_ENCODED_BW_TYPE_NB_WB_SWB_FB"); _EVS_ENCODED_BW_TYPE_NB_WB_SWB_FBReady = true; } return _EVS_ENCODED_BW_TYPE_NB_WB_SWB_FBContent; } }
            private static int _EVS_ENCODED_BW_TYPE_NB_WB_SWB_FBContent = default;
            private static bool _EVS_ENCODED_BW_TYPE_NB_WB_SWB_FBReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#EVS_ENCODED_BW_TYPE_SWB"/>
            /// </summary>
            public static int EVS_ENCODED_BW_TYPE_SWB { get { if (!_EVS_ENCODED_BW_TYPE_SWBReady) { _EVS_ENCODED_BW_TYPE_SWBContent = SGetField<int>(LocalBridgeClazz, "EVS_ENCODED_BW_TYPE_SWB"); _EVS_ENCODED_BW_TYPE_SWBReady = true; } return _EVS_ENCODED_BW_TYPE_SWBContent; } }
            private static int _EVS_ENCODED_BW_TYPE_SWBContent = default;
            private static bool _EVS_ENCODED_BW_TYPE_SWBReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#EVS_ENCODED_BW_TYPE_WB"/>
            /// </summary>
            public static int EVS_ENCODED_BW_TYPE_WB { get { if (!_EVS_ENCODED_BW_TYPE_WBReady) { _EVS_ENCODED_BW_TYPE_WBContent = SGetField<int>(LocalBridgeClazz, "EVS_ENCODED_BW_TYPE_WB"); _EVS_ENCODED_BW_TYPE_WBReady = true; } return _EVS_ENCODED_BW_TYPE_WBContent; } }
            private static int _EVS_ENCODED_BW_TYPE_WBContent = default;
            private static bool _EVS_ENCODED_BW_TYPE_WBReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#EVS_ENCODED_BW_TYPE_WB_SWB"/>
            /// </summary>
            public static int EVS_ENCODED_BW_TYPE_WB_SWB { get { if (!_EVS_ENCODED_BW_TYPE_WB_SWBReady) { _EVS_ENCODED_BW_TYPE_WB_SWBContent = SGetField<int>(LocalBridgeClazz, "EVS_ENCODED_BW_TYPE_WB_SWB"); _EVS_ENCODED_BW_TYPE_WB_SWBReady = true; } return _EVS_ENCODED_BW_TYPE_WB_SWBContent; } }
            private static int _EVS_ENCODED_BW_TYPE_WB_SWBContent = default;
            private static bool _EVS_ENCODED_BW_TYPE_WB_SWBReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#EVS_ENCODED_BW_TYPE_WB_SWB_FB"/>
            /// </summary>
            public static int EVS_ENCODED_BW_TYPE_WB_SWB_FB { get { if (!_EVS_ENCODED_BW_TYPE_WB_SWB_FBReady) { _EVS_ENCODED_BW_TYPE_WB_SWB_FBContent = SGetField<int>(LocalBridgeClazz, "EVS_ENCODED_BW_TYPE_WB_SWB_FB"); _EVS_ENCODED_BW_TYPE_WB_SWB_FBReady = true; } return _EVS_ENCODED_BW_TYPE_WB_SWB_FBContent; } }
            private static int _EVS_ENCODED_BW_TYPE_WB_SWB_FBContent = default;
            private static bool _EVS_ENCODED_BW_TYPE_WB_SWB_FBReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#EVS_OPERATIONAL_MODE_AMRWB_IO"/>
            /// </summary>
            public static int EVS_OPERATIONAL_MODE_AMRWB_IO { get { if (!_EVS_OPERATIONAL_MODE_AMRWB_IOReady) { _EVS_OPERATIONAL_MODE_AMRWB_IOContent = SGetField<int>(LocalBridgeClazz, "EVS_OPERATIONAL_MODE_AMRWB_IO"); _EVS_OPERATIONAL_MODE_AMRWB_IOReady = true; } return _EVS_OPERATIONAL_MODE_AMRWB_IOContent; } }
            private static int _EVS_OPERATIONAL_MODE_AMRWB_IOContent = default;
            private static bool _EVS_OPERATIONAL_MODE_AMRWB_IOReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#EVS_OPERATIONAL_MODE_PRIMARY"/>
            /// </summary>
            public static int EVS_OPERATIONAL_MODE_PRIMARY { get { if (!_EVS_OPERATIONAL_MODE_PRIMARYReady) { _EVS_OPERATIONAL_MODE_PRIMARYContent = SGetField<int>(LocalBridgeClazz, "EVS_OPERATIONAL_MODE_PRIMARY"); _EVS_OPERATIONAL_MODE_PRIMARYReady = true; } return _EVS_OPERATIONAL_MODE_PRIMARYContent; } }
            private static int _EVS_OPERATIONAL_MODE_PRIMARYContent = default;
            private static bool _EVS_OPERATIONAL_MODE_PRIMARYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#EVS_PRIMARY_MODE_BITRATE_128_0_KBPS"/>
            /// </summary>
            public static int EVS_PRIMARY_MODE_BITRATE_128_0_KBPS { get { if (!_EVS_PRIMARY_MODE_BITRATE_128_0_KBPSReady) { _EVS_PRIMARY_MODE_BITRATE_128_0_KBPSContent = SGetField<int>(LocalBridgeClazz, "EVS_PRIMARY_MODE_BITRATE_128_0_KBPS"); _EVS_PRIMARY_MODE_BITRATE_128_0_KBPSReady = true; } return _EVS_PRIMARY_MODE_BITRATE_128_0_KBPSContent; } }
            private static int _EVS_PRIMARY_MODE_BITRATE_128_0_KBPSContent = default;
            private static bool _EVS_PRIMARY_MODE_BITRATE_128_0_KBPSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#EVS_PRIMARY_MODE_BITRATE_13_2_KBPS"/>
            /// </summary>
            public static int EVS_PRIMARY_MODE_BITRATE_13_2_KBPS { get { if (!_EVS_PRIMARY_MODE_BITRATE_13_2_KBPSReady) { _EVS_PRIMARY_MODE_BITRATE_13_2_KBPSContent = SGetField<int>(LocalBridgeClazz, "EVS_PRIMARY_MODE_BITRATE_13_2_KBPS"); _EVS_PRIMARY_MODE_BITRATE_13_2_KBPSReady = true; } return _EVS_PRIMARY_MODE_BITRATE_13_2_KBPSContent; } }
            private static int _EVS_PRIMARY_MODE_BITRATE_13_2_KBPSContent = default;
            private static bool _EVS_PRIMARY_MODE_BITRATE_13_2_KBPSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#EVS_PRIMARY_MODE_BITRATE_16_4_KBPS"/>
            /// </summary>
            public static int EVS_PRIMARY_MODE_BITRATE_16_4_KBPS { get { if (!_EVS_PRIMARY_MODE_BITRATE_16_4_KBPSReady) { _EVS_PRIMARY_MODE_BITRATE_16_4_KBPSContent = SGetField<int>(LocalBridgeClazz, "EVS_PRIMARY_MODE_BITRATE_16_4_KBPS"); _EVS_PRIMARY_MODE_BITRATE_16_4_KBPSReady = true; } return _EVS_PRIMARY_MODE_BITRATE_16_4_KBPSContent; } }
            private static int _EVS_PRIMARY_MODE_BITRATE_16_4_KBPSContent = default;
            private static bool _EVS_PRIMARY_MODE_BITRATE_16_4_KBPSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#EVS_PRIMARY_MODE_BITRATE_24_4_KBPS"/>
            /// </summary>
            public static int EVS_PRIMARY_MODE_BITRATE_24_4_KBPS { get { if (!_EVS_PRIMARY_MODE_BITRATE_24_4_KBPSReady) { _EVS_PRIMARY_MODE_BITRATE_24_4_KBPSContent = SGetField<int>(LocalBridgeClazz, "EVS_PRIMARY_MODE_BITRATE_24_4_KBPS"); _EVS_PRIMARY_MODE_BITRATE_24_4_KBPSReady = true; } return _EVS_PRIMARY_MODE_BITRATE_24_4_KBPSContent; } }
            private static int _EVS_PRIMARY_MODE_BITRATE_24_4_KBPSContent = default;
            private static bool _EVS_PRIMARY_MODE_BITRATE_24_4_KBPSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#EVS_PRIMARY_MODE_BITRATE_32_0_KBPS"/>
            /// </summary>
            public static int EVS_PRIMARY_MODE_BITRATE_32_0_KBPS { get { if (!_EVS_PRIMARY_MODE_BITRATE_32_0_KBPSReady) { _EVS_PRIMARY_MODE_BITRATE_32_0_KBPSContent = SGetField<int>(LocalBridgeClazz, "EVS_PRIMARY_MODE_BITRATE_32_0_KBPS"); _EVS_PRIMARY_MODE_BITRATE_32_0_KBPSReady = true; } return _EVS_PRIMARY_MODE_BITRATE_32_0_KBPSContent; } }
            private static int _EVS_PRIMARY_MODE_BITRATE_32_0_KBPSContent = default;
            private static bool _EVS_PRIMARY_MODE_BITRATE_32_0_KBPSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#EVS_PRIMARY_MODE_BITRATE_48_0_KBPS"/>
            /// </summary>
            public static int EVS_PRIMARY_MODE_BITRATE_48_0_KBPS { get { if (!_EVS_PRIMARY_MODE_BITRATE_48_0_KBPSReady) { _EVS_PRIMARY_MODE_BITRATE_48_0_KBPSContent = SGetField<int>(LocalBridgeClazz, "EVS_PRIMARY_MODE_BITRATE_48_0_KBPS"); _EVS_PRIMARY_MODE_BITRATE_48_0_KBPSReady = true; } return _EVS_PRIMARY_MODE_BITRATE_48_0_KBPSContent; } }
            private static int _EVS_PRIMARY_MODE_BITRATE_48_0_KBPSContent = default;
            private static bool _EVS_PRIMARY_MODE_BITRATE_48_0_KBPSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#EVS_PRIMARY_MODE_BITRATE_5_9_KBPS"/>
            /// </summary>
            public static int EVS_PRIMARY_MODE_BITRATE_5_9_KBPS { get { if (!_EVS_PRIMARY_MODE_BITRATE_5_9_KBPSReady) { _EVS_PRIMARY_MODE_BITRATE_5_9_KBPSContent = SGetField<int>(LocalBridgeClazz, "EVS_PRIMARY_MODE_BITRATE_5_9_KBPS"); _EVS_PRIMARY_MODE_BITRATE_5_9_KBPSReady = true; } return _EVS_PRIMARY_MODE_BITRATE_5_9_KBPSContent; } }
            private static int _EVS_PRIMARY_MODE_BITRATE_5_9_KBPSContent = default;
            private static bool _EVS_PRIMARY_MODE_BITRATE_5_9_KBPSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#EVS_PRIMARY_MODE_BITRATE_64_0_KBPS"/>
            /// </summary>
            public static int EVS_PRIMARY_MODE_BITRATE_64_0_KBPS { get { if (!_EVS_PRIMARY_MODE_BITRATE_64_0_KBPSReady) { _EVS_PRIMARY_MODE_BITRATE_64_0_KBPSContent = SGetField<int>(LocalBridgeClazz, "EVS_PRIMARY_MODE_BITRATE_64_0_KBPS"); _EVS_PRIMARY_MODE_BITRATE_64_0_KBPSReady = true; } return _EVS_PRIMARY_MODE_BITRATE_64_0_KBPSContent; } }
            private static int _EVS_PRIMARY_MODE_BITRATE_64_0_KBPSContent = default;
            private static bool _EVS_PRIMARY_MODE_BITRATE_64_0_KBPSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#EVS_PRIMARY_MODE_BITRATE_7_2_KBPS"/>
            /// </summary>
            public static int EVS_PRIMARY_MODE_BITRATE_7_2_KBPS { get { if (!_EVS_PRIMARY_MODE_BITRATE_7_2_KBPSReady) { _EVS_PRIMARY_MODE_BITRATE_7_2_KBPSContent = SGetField<int>(LocalBridgeClazz, "EVS_PRIMARY_MODE_BITRATE_7_2_KBPS"); _EVS_PRIMARY_MODE_BITRATE_7_2_KBPSReady = true; } return _EVS_PRIMARY_MODE_BITRATE_7_2_KBPSContent; } }
            private static int _EVS_PRIMARY_MODE_BITRATE_7_2_KBPSContent = default;
            private static bool _EVS_PRIMARY_MODE_BITRATE_7_2_KBPSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#EVS_PRIMARY_MODE_BITRATE_8_0_KBPS"/>
            /// </summary>
            public static int EVS_PRIMARY_MODE_BITRATE_8_0_KBPS { get { if (!_EVS_PRIMARY_MODE_BITRATE_8_0_KBPSReady) { _EVS_PRIMARY_MODE_BITRATE_8_0_KBPSContent = SGetField<int>(LocalBridgeClazz, "EVS_PRIMARY_MODE_BITRATE_8_0_KBPS"); _EVS_PRIMARY_MODE_BITRATE_8_0_KBPSReady = true; } return _EVS_PRIMARY_MODE_BITRATE_8_0_KBPSContent; } }
            private static int _EVS_PRIMARY_MODE_BITRATE_8_0_KBPSContent = default;
            private static bool _EVS_PRIMARY_MODE_BITRATE_8_0_KBPSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#EVS_PRIMARY_MODE_BITRATE_9_6_KBPS"/>
            /// </summary>
            public static int EVS_PRIMARY_MODE_BITRATE_9_6_KBPS { get { if (!_EVS_PRIMARY_MODE_BITRATE_9_6_KBPSReady) { _EVS_PRIMARY_MODE_BITRATE_9_6_KBPSContent = SGetField<int>(LocalBridgeClazz, "EVS_PRIMARY_MODE_BITRATE_9_6_KBPS"); _EVS_PRIMARY_MODE_BITRATE_9_6_KBPSReady = true; } return _EVS_PRIMARY_MODE_BITRATE_9_6_KBPSContent; } }
            private static int _EVS_PRIMARY_MODE_BITRATE_9_6_KBPSContent = default;
            private static bool _EVS_PRIMARY_MODE_BITRATE_9_6_KBPSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#EVS_PRIMARY_MODE_BITRATE_96_0_KBPS"/>
            /// </summary>
            public static int EVS_PRIMARY_MODE_BITRATE_96_0_KBPS { get { if (!_EVS_PRIMARY_MODE_BITRATE_96_0_KBPSReady) { _EVS_PRIMARY_MODE_BITRATE_96_0_KBPSContent = SGetField<int>(LocalBridgeClazz, "EVS_PRIMARY_MODE_BITRATE_96_0_KBPS"); _EVS_PRIMARY_MODE_BITRATE_96_0_KBPSReady = true; } return _EVS_PRIMARY_MODE_BITRATE_96_0_KBPSContent; } }
            private static int _EVS_PRIMARY_MODE_BITRATE_96_0_KBPSContent = default;
            private static bool _EVS_PRIMARY_MODE_BITRATE_96_0_KBPSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#MIDCALL_SRVCC_SUPPORT"/>
            /// </summary>
            public static int MIDCALL_SRVCC_SUPPORT { get { if (!_MIDCALL_SRVCC_SUPPORTReady) { _MIDCALL_SRVCC_SUPPORTContent = SGetField<int>(LocalBridgeClazz, "MIDCALL_SRVCC_SUPPORT"); _MIDCALL_SRVCC_SUPPORTReady = true; } return _MIDCALL_SRVCC_SUPPORTContent; } }
            private static int _MIDCALL_SRVCC_SUPPORTContent = default;
            private static bool _MIDCALL_SRVCC_SUPPORTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#OCTET_ALIGNED"/>
            /// </summary>
            public static int OCTET_ALIGNED { get { if (!_OCTET_ALIGNEDReady) { _OCTET_ALIGNEDContent = SGetField<int>(LocalBridgeClazz, "OCTET_ALIGNED"); _OCTET_ALIGNEDReady = true; } return _OCTET_ALIGNEDContent; } }
            private static int _OCTET_ALIGNEDContent = default;
            private static bool _OCTET_ALIGNEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#PREALERTING_SRVCC_SUPPORT"/>
            /// </summary>
            public static int PREALERTING_SRVCC_SUPPORT { get { if (!_PREALERTING_SRVCC_SUPPORTReady) { _PREALERTING_SRVCC_SUPPORTContent = SGetField<int>(LocalBridgeClazz, "PREALERTING_SRVCC_SUPPORT"); _PREALERTING_SRVCC_SUPPORTReady = true; } return _PREALERTING_SRVCC_SUPPORTContent; } }
            private static int _PREALERTING_SRVCC_SUPPORTContent = default;
            private static bool _PREALERTING_SRVCC_SUPPORTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#SESSION_PRIVACY_TYPE_HEADER"/>
            /// </summary>
            public static int SESSION_PRIVACY_TYPE_HEADER { get { if (!_SESSION_PRIVACY_TYPE_HEADERReady) { _SESSION_PRIVACY_TYPE_HEADERContent = SGetField<int>(LocalBridgeClazz, "SESSION_PRIVACY_TYPE_HEADER"); _SESSION_PRIVACY_TYPE_HEADERReady = true; } return _SESSION_PRIVACY_TYPE_HEADERContent; } }
            private static int _SESSION_PRIVACY_TYPE_HEADERContent = default;
            private static bool _SESSION_PRIVACY_TYPE_HEADERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#SESSION_PRIVACY_TYPE_ID"/>
            /// </summary>
            public static int SESSION_PRIVACY_TYPE_ID { get { if (!_SESSION_PRIVACY_TYPE_IDReady) { _SESSION_PRIVACY_TYPE_IDContent = SGetField<int>(LocalBridgeClazz, "SESSION_PRIVACY_TYPE_ID"); _SESSION_PRIVACY_TYPE_IDReady = true; } return _SESSION_PRIVACY_TYPE_IDContent; } }
            private static int _SESSION_PRIVACY_TYPE_IDContent = default;
            private static bool _SESSION_PRIVACY_TYPE_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#SESSION_PRIVACY_TYPE_NONE"/>
            /// </summary>
            public static int SESSION_PRIVACY_TYPE_NONE { get { if (!_SESSION_PRIVACY_TYPE_NONEReady) { _SESSION_PRIVACY_TYPE_NONEContent = SGetField<int>(LocalBridgeClazz, "SESSION_PRIVACY_TYPE_NONE"); _SESSION_PRIVACY_TYPE_NONEReady = true; } return _SESSION_PRIVACY_TYPE_NONEContent; } }
            private static int _SESSION_PRIVACY_TYPE_NONEContent = default;
            private static bool _SESSION_PRIVACY_TYPE_NONEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#SESSION_REFRESH_METHOD_INVITE"/>
            /// </summary>
            public static int SESSION_REFRESH_METHOD_INVITE { get { if (!_SESSION_REFRESH_METHOD_INVITEReady) { _SESSION_REFRESH_METHOD_INVITEContent = SGetField<int>(LocalBridgeClazz, "SESSION_REFRESH_METHOD_INVITE"); _SESSION_REFRESH_METHOD_INVITEReady = true; } return _SESSION_REFRESH_METHOD_INVITEContent; } }
            private static int _SESSION_REFRESH_METHOD_INVITEContent = default;
            private static bool _SESSION_REFRESH_METHOD_INVITEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#SESSION_REFRESH_METHOD_UPDATE_PREFERRED"/>
            /// </summary>
            public static int SESSION_REFRESH_METHOD_UPDATE_PREFERRED { get { if (!_SESSION_REFRESH_METHOD_UPDATE_PREFERREDReady) { _SESSION_REFRESH_METHOD_UPDATE_PREFERREDContent = SGetField<int>(LocalBridgeClazz, "SESSION_REFRESH_METHOD_UPDATE_PREFERRED"); _SESSION_REFRESH_METHOD_UPDATE_PREFERREDReady = true; } return _SESSION_REFRESH_METHOD_UPDATE_PREFERREDContent; } }
            private static int _SESSION_REFRESH_METHOD_UPDATE_PREFERREDContent = default;
            private static bool _SESSION_REFRESH_METHOD_UPDATE_PREFERREDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#SESSION_REFRESHER_TYPE_UAC"/>
            /// </summary>
            public static int SESSION_REFRESHER_TYPE_UAC { get { if (!_SESSION_REFRESHER_TYPE_UACReady) { _SESSION_REFRESHER_TYPE_UACContent = SGetField<int>(LocalBridgeClazz, "SESSION_REFRESHER_TYPE_UAC"); _SESSION_REFRESHER_TYPE_UACReady = true; } return _SESSION_REFRESHER_TYPE_UACContent; } }
            private static int _SESSION_REFRESHER_TYPE_UACContent = default;
            private static bool _SESSION_REFRESHER_TYPE_UACReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#SESSION_REFRESHER_TYPE_UAS"/>
            /// </summary>
            public static int SESSION_REFRESHER_TYPE_UAS { get { if (!_SESSION_REFRESHER_TYPE_UASReady) { _SESSION_REFRESHER_TYPE_UASContent = SGetField<int>(LocalBridgeClazz, "SESSION_REFRESHER_TYPE_UAS"); _SESSION_REFRESHER_TYPE_UASReady = true; } return _SESSION_REFRESHER_TYPE_UASContent; } }
            private static int _SESSION_REFRESHER_TYPE_UASContent = default;
            private static bool _SESSION_REFRESHER_TYPE_UASReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#SESSION_REFRESHER_TYPE_UNKNOWN"/>
            /// </summary>
            public static int SESSION_REFRESHER_TYPE_UNKNOWN { get { if (!_SESSION_REFRESHER_TYPE_UNKNOWNReady) { _SESSION_REFRESHER_TYPE_UNKNOWNContent = SGetField<int>(LocalBridgeClazz, "SESSION_REFRESHER_TYPE_UNKNOWN"); _SESSION_REFRESHER_TYPE_UNKNOWNReady = true; } return _SESSION_REFRESHER_TYPE_UNKNOWNContent; } }
            private static int _SESSION_REFRESHER_TYPE_UNKNOWNContent = default;
            private static bool _SESSION_REFRESHER_TYPE_UNKNOWNReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#KEY_AMR_CODEC_ATTRIBUTE_MODESET_INT_ARRAY"/>
            /// </summary>
            public static Java.Lang.String KEY_AMR_CODEC_ATTRIBUTE_MODESET_INT_ARRAY { get { if (!_KEY_AMR_CODEC_ATTRIBUTE_MODESET_INT_ARRAYReady) { _KEY_AMR_CODEC_ATTRIBUTE_MODESET_INT_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_AMR_CODEC_ATTRIBUTE_MODESET_INT_ARRAY"); _KEY_AMR_CODEC_ATTRIBUTE_MODESET_INT_ARRAYReady = true; } return _KEY_AMR_CODEC_ATTRIBUTE_MODESET_INT_ARRAYContent; } }
            private static Java.Lang.String _KEY_AMR_CODEC_ATTRIBUTE_MODESET_INT_ARRAYContent = default;
            private static bool _KEY_AMR_CODEC_ATTRIBUTE_MODESET_INT_ARRAYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#KEY_AMR_CODEC_ATTRIBUTE_PAYLOAD_FORMAT_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_AMR_CODEC_ATTRIBUTE_PAYLOAD_FORMAT_INT { get { if (!_KEY_AMR_CODEC_ATTRIBUTE_PAYLOAD_FORMAT_INTReady) { _KEY_AMR_CODEC_ATTRIBUTE_PAYLOAD_FORMAT_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_AMR_CODEC_ATTRIBUTE_PAYLOAD_FORMAT_INT"); _KEY_AMR_CODEC_ATTRIBUTE_PAYLOAD_FORMAT_INTReady = true; } return _KEY_AMR_CODEC_ATTRIBUTE_PAYLOAD_FORMAT_INTContent; } }
            private static Java.Lang.String _KEY_AMR_CODEC_ATTRIBUTE_PAYLOAD_FORMAT_INTContent = default;
            private static bool _KEY_AMR_CODEC_ATTRIBUTE_PAYLOAD_FORMAT_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#KEY_AMRNB_PAYLOAD_DESCRIPTION_BUNDLE"/>
            /// </summary>
            public static Java.Lang.String KEY_AMRNB_PAYLOAD_DESCRIPTION_BUNDLE { get { if (!_KEY_AMRNB_PAYLOAD_DESCRIPTION_BUNDLEReady) { _KEY_AMRNB_PAYLOAD_DESCRIPTION_BUNDLEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_AMRNB_PAYLOAD_DESCRIPTION_BUNDLE"); _KEY_AMRNB_PAYLOAD_DESCRIPTION_BUNDLEReady = true; } return _KEY_AMRNB_PAYLOAD_DESCRIPTION_BUNDLEContent; } }
            private static Java.Lang.String _KEY_AMRNB_PAYLOAD_DESCRIPTION_BUNDLEContent = default;
            private static bool _KEY_AMRNB_PAYLOAD_DESCRIPTION_BUNDLEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#KEY_AMRNB_PAYLOAD_TYPE_INT_ARRAY"/>
            /// </summary>
            public static Java.Lang.String KEY_AMRNB_PAYLOAD_TYPE_INT_ARRAY { get { if (!_KEY_AMRNB_PAYLOAD_TYPE_INT_ARRAYReady) { _KEY_AMRNB_PAYLOAD_TYPE_INT_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_AMRNB_PAYLOAD_TYPE_INT_ARRAY"); _KEY_AMRNB_PAYLOAD_TYPE_INT_ARRAYReady = true; } return _KEY_AMRNB_PAYLOAD_TYPE_INT_ARRAYContent; } }
            private static Java.Lang.String _KEY_AMRNB_PAYLOAD_TYPE_INT_ARRAYContent = default;
            private static bool _KEY_AMRNB_PAYLOAD_TYPE_INT_ARRAYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#KEY_AMRWB_PAYLOAD_DESCRIPTION_BUNDLE"/>
            /// </summary>
            public static Java.Lang.String KEY_AMRWB_PAYLOAD_DESCRIPTION_BUNDLE { get { if (!_KEY_AMRWB_PAYLOAD_DESCRIPTION_BUNDLEReady) { _KEY_AMRWB_PAYLOAD_DESCRIPTION_BUNDLEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_AMRWB_PAYLOAD_DESCRIPTION_BUNDLE"); _KEY_AMRWB_PAYLOAD_DESCRIPTION_BUNDLEReady = true; } return _KEY_AMRWB_PAYLOAD_DESCRIPTION_BUNDLEContent; } }
            private static Java.Lang.String _KEY_AMRWB_PAYLOAD_DESCRIPTION_BUNDLEContent = default;
            private static bool _KEY_AMRWB_PAYLOAD_DESCRIPTION_BUNDLEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#KEY_AMRWB_PAYLOAD_TYPE_INT_ARRAY"/>
            /// </summary>
            public static Java.Lang.String KEY_AMRWB_PAYLOAD_TYPE_INT_ARRAY { get { if (!_KEY_AMRWB_PAYLOAD_TYPE_INT_ARRAYReady) { _KEY_AMRWB_PAYLOAD_TYPE_INT_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_AMRWB_PAYLOAD_TYPE_INT_ARRAY"); _KEY_AMRWB_PAYLOAD_TYPE_INT_ARRAYReady = true; } return _KEY_AMRWB_PAYLOAD_TYPE_INT_ARRAYContent; } }
            private static Java.Lang.String _KEY_AMRWB_PAYLOAD_TYPE_INT_ARRAYContent = default;
            private static bool _KEY_AMRWB_PAYLOAD_TYPE_INT_ARRAYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#KEY_AUDIO_AS_BANDWIDTH_KBPS_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_AUDIO_AS_BANDWIDTH_KBPS_INT { get { if (!_KEY_AUDIO_AS_BANDWIDTH_KBPS_INTReady) { _KEY_AUDIO_AS_BANDWIDTH_KBPS_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_AUDIO_AS_BANDWIDTH_KBPS_INT"); _KEY_AUDIO_AS_BANDWIDTH_KBPS_INTReady = true; } return _KEY_AUDIO_AS_BANDWIDTH_KBPS_INTContent; } }
            private static Java.Lang.String _KEY_AUDIO_AS_BANDWIDTH_KBPS_INTContent = default;
            private static bool _KEY_AUDIO_AS_BANDWIDTH_KBPS_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#KEY_AUDIO_CODEC_CAPABILITY_PAYLOAD_TYPES_BUNDLE"/>
            /// </summary>
            public static Java.Lang.String KEY_AUDIO_CODEC_CAPABILITY_PAYLOAD_TYPES_BUNDLE { get { if (!_KEY_AUDIO_CODEC_CAPABILITY_PAYLOAD_TYPES_BUNDLEReady) { _KEY_AUDIO_CODEC_CAPABILITY_PAYLOAD_TYPES_BUNDLEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_AUDIO_CODEC_CAPABILITY_PAYLOAD_TYPES_BUNDLE"); _KEY_AUDIO_CODEC_CAPABILITY_PAYLOAD_TYPES_BUNDLEReady = true; } return _KEY_AUDIO_CODEC_CAPABILITY_PAYLOAD_TYPES_BUNDLEContent; } }
            private static Java.Lang.String _KEY_AUDIO_CODEC_CAPABILITY_PAYLOAD_TYPES_BUNDLEContent = default;
            private static bool _KEY_AUDIO_CODEC_CAPABILITY_PAYLOAD_TYPES_BUNDLEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#KEY_AUDIO_INACTIVITY_CALL_END_REASONS_INT_ARRAY"/>
            /// </summary>
            public static Java.Lang.String KEY_AUDIO_INACTIVITY_CALL_END_REASONS_INT_ARRAY { get { if (!_KEY_AUDIO_INACTIVITY_CALL_END_REASONS_INT_ARRAYReady) { _KEY_AUDIO_INACTIVITY_CALL_END_REASONS_INT_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_AUDIO_INACTIVITY_CALL_END_REASONS_INT_ARRAY"); _KEY_AUDIO_INACTIVITY_CALL_END_REASONS_INT_ARRAYReady = true; } return _KEY_AUDIO_INACTIVITY_CALL_END_REASONS_INT_ARRAYContent; } }
            private static Java.Lang.String _KEY_AUDIO_INACTIVITY_CALL_END_REASONS_INT_ARRAYContent = default;
            private static bool _KEY_AUDIO_INACTIVITY_CALL_END_REASONS_INT_ARRAYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#KEY_AUDIO_RR_BANDWIDTH_BPS_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_AUDIO_RR_BANDWIDTH_BPS_INT { get { if (!_KEY_AUDIO_RR_BANDWIDTH_BPS_INTReady) { _KEY_AUDIO_RR_BANDWIDTH_BPS_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_AUDIO_RR_BANDWIDTH_BPS_INT"); _KEY_AUDIO_RR_BANDWIDTH_BPS_INTReady = true; } return _KEY_AUDIO_RR_BANDWIDTH_BPS_INTContent; } }
            private static Java.Lang.String _KEY_AUDIO_RR_BANDWIDTH_BPS_INTContent = default;
            private static bool _KEY_AUDIO_RR_BANDWIDTH_BPS_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#KEY_AUDIO_RS_BANDWIDTH_BPS_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_AUDIO_RS_BANDWIDTH_BPS_INT { get { if (!_KEY_AUDIO_RS_BANDWIDTH_BPS_INTReady) { _KEY_AUDIO_RS_BANDWIDTH_BPS_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_AUDIO_RS_BANDWIDTH_BPS_INT"); _KEY_AUDIO_RS_BANDWIDTH_BPS_INTReady = true; } return _KEY_AUDIO_RS_BANDWIDTH_BPS_INTContent; } }
            private static Java.Lang.String _KEY_AUDIO_RS_BANDWIDTH_BPS_INTContent = default;
            private static bool _KEY_AUDIO_RS_BANDWIDTH_BPS_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#KEY_AUDIO_RTCP_INACTIVITY_TIMER_MILLIS_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_AUDIO_RTCP_INACTIVITY_TIMER_MILLIS_INT { get { if (!_KEY_AUDIO_RTCP_INACTIVITY_TIMER_MILLIS_INTReady) { _KEY_AUDIO_RTCP_INACTIVITY_TIMER_MILLIS_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_AUDIO_RTCP_INACTIVITY_TIMER_MILLIS_INT"); _KEY_AUDIO_RTCP_INACTIVITY_TIMER_MILLIS_INTReady = true; } return _KEY_AUDIO_RTCP_INACTIVITY_TIMER_MILLIS_INTContent; } }
            private static Java.Lang.String _KEY_AUDIO_RTCP_INACTIVITY_TIMER_MILLIS_INTContent = default;
            private static bool _KEY_AUDIO_RTCP_INACTIVITY_TIMER_MILLIS_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#KEY_AUDIO_RTP_INACTIVITY_TIMER_MILLIS_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_AUDIO_RTP_INACTIVITY_TIMER_MILLIS_INT { get { if (!_KEY_AUDIO_RTP_INACTIVITY_TIMER_MILLIS_INTReady) { _KEY_AUDIO_RTP_INACTIVITY_TIMER_MILLIS_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_AUDIO_RTP_INACTIVITY_TIMER_MILLIS_INT"); _KEY_AUDIO_RTP_INACTIVITY_TIMER_MILLIS_INTReady = true; } return _KEY_AUDIO_RTP_INACTIVITY_TIMER_MILLIS_INTContent; } }
            private static Java.Lang.String _KEY_AUDIO_RTP_INACTIVITY_TIMER_MILLIS_INTContent = default;
            private static bool _KEY_AUDIO_RTP_INACTIVITY_TIMER_MILLIS_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#KEY_CARRIER_VOLTE_ROAMING_AVAILABLE_BOOL"/>
            /// </summary>
            public static Java.Lang.String KEY_CARRIER_VOLTE_ROAMING_AVAILABLE_BOOL { get { if (!_KEY_CARRIER_VOLTE_ROAMING_AVAILABLE_BOOLReady) { _KEY_CARRIER_VOLTE_ROAMING_AVAILABLE_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CARRIER_VOLTE_ROAMING_AVAILABLE_BOOL"); _KEY_CARRIER_VOLTE_ROAMING_AVAILABLE_BOOLReady = true; } return _KEY_CARRIER_VOLTE_ROAMING_AVAILABLE_BOOLContent; } }
            private static Java.Lang.String _KEY_CARRIER_VOLTE_ROAMING_AVAILABLE_BOOLContent = default;
            private static bool _KEY_CARRIER_VOLTE_ROAMING_AVAILABLE_BOOLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#KEY_CODEC_ATTRIBUTE_MODE_CHANGE_CAPABILITY_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_CODEC_ATTRIBUTE_MODE_CHANGE_CAPABILITY_INT { get { if (!_KEY_CODEC_ATTRIBUTE_MODE_CHANGE_CAPABILITY_INTReady) { _KEY_CODEC_ATTRIBUTE_MODE_CHANGE_CAPABILITY_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CODEC_ATTRIBUTE_MODE_CHANGE_CAPABILITY_INT"); _KEY_CODEC_ATTRIBUTE_MODE_CHANGE_CAPABILITY_INTReady = true; } return _KEY_CODEC_ATTRIBUTE_MODE_CHANGE_CAPABILITY_INTContent; } }
            private static Java.Lang.String _KEY_CODEC_ATTRIBUTE_MODE_CHANGE_CAPABILITY_INTContent = default;
            private static bool _KEY_CODEC_ATTRIBUTE_MODE_CHANGE_CAPABILITY_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#KEY_CODEC_ATTRIBUTE_MODE_CHANGE_NEIGHBOR_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_CODEC_ATTRIBUTE_MODE_CHANGE_NEIGHBOR_INT { get { if (!_KEY_CODEC_ATTRIBUTE_MODE_CHANGE_NEIGHBOR_INTReady) { _KEY_CODEC_ATTRIBUTE_MODE_CHANGE_NEIGHBOR_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CODEC_ATTRIBUTE_MODE_CHANGE_NEIGHBOR_INT"); _KEY_CODEC_ATTRIBUTE_MODE_CHANGE_NEIGHBOR_INTReady = true; } return _KEY_CODEC_ATTRIBUTE_MODE_CHANGE_NEIGHBOR_INTContent; } }
            private static Java.Lang.String _KEY_CODEC_ATTRIBUTE_MODE_CHANGE_NEIGHBOR_INTContent = default;
            private static bool _KEY_CODEC_ATTRIBUTE_MODE_CHANGE_NEIGHBOR_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#KEY_CODEC_ATTRIBUTE_MODE_CHANGE_PERIOD_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_CODEC_ATTRIBUTE_MODE_CHANGE_PERIOD_INT { get { if (!_KEY_CODEC_ATTRIBUTE_MODE_CHANGE_PERIOD_INTReady) { _KEY_CODEC_ATTRIBUTE_MODE_CHANGE_PERIOD_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CODEC_ATTRIBUTE_MODE_CHANGE_PERIOD_INT"); _KEY_CODEC_ATTRIBUTE_MODE_CHANGE_PERIOD_INTReady = true; } return _KEY_CODEC_ATTRIBUTE_MODE_CHANGE_PERIOD_INTContent; } }
            private static Java.Lang.String _KEY_CODEC_ATTRIBUTE_MODE_CHANGE_PERIOD_INTContent = default;
            private static bool _KEY_CODEC_ATTRIBUTE_MODE_CHANGE_PERIOD_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#KEY_CONFERENCE_FACTORY_URI_STRING"/>
            /// </summary>
            public static Java.Lang.String KEY_CONFERENCE_FACTORY_URI_STRING { get { if (!_KEY_CONFERENCE_FACTORY_URI_STRINGReady) { _KEY_CONFERENCE_FACTORY_URI_STRINGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CONFERENCE_FACTORY_URI_STRING"); _KEY_CONFERENCE_FACTORY_URI_STRINGReady = true; } return _KEY_CONFERENCE_FACTORY_URI_STRINGContent; } }
            private static Java.Lang.String _KEY_CONFERENCE_FACTORY_URI_STRINGContent = default;
            private static bool _KEY_CONFERENCE_FACTORY_URI_STRINGReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#KEY_CONFERENCE_SUBSCRIBE_TYPE_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_CONFERENCE_SUBSCRIBE_TYPE_INT { get { if (!_KEY_CONFERENCE_SUBSCRIBE_TYPE_INTReady) { _KEY_CONFERENCE_SUBSCRIBE_TYPE_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CONFERENCE_SUBSCRIBE_TYPE_INT"); _KEY_CONFERENCE_SUBSCRIBE_TYPE_INTReady = true; } return _KEY_CONFERENCE_SUBSCRIBE_TYPE_INTContent; } }
            private static Java.Lang.String _KEY_CONFERENCE_SUBSCRIBE_TYPE_INTContent = default;
            private static bool _KEY_CONFERENCE_SUBSCRIBE_TYPE_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#KEY_DEDICATED_BEARER_WAIT_TIMER_MILLIS_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_DEDICATED_BEARER_WAIT_TIMER_MILLIS_INT { get { if (!_KEY_DEDICATED_BEARER_WAIT_TIMER_MILLIS_INTReady) { _KEY_DEDICATED_BEARER_WAIT_TIMER_MILLIS_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_DEDICATED_BEARER_WAIT_TIMER_MILLIS_INT"); _KEY_DEDICATED_BEARER_WAIT_TIMER_MILLIS_INTReady = true; } return _KEY_DEDICATED_BEARER_WAIT_TIMER_MILLIS_INTContent; } }
            private static Java.Lang.String _KEY_DEDICATED_BEARER_WAIT_TIMER_MILLIS_INTContent = default;
            private static bool _KEY_DEDICATED_BEARER_WAIT_TIMER_MILLIS_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#KEY_DTMFNB_PAYLOAD_TYPE_INT_ARRAY"/>
            /// </summary>
            public static Java.Lang.String KEY_DTMFNB_PAYLOAD_TYPE_INT_ARRAY { get { if (!_KEY_DTMFNB_PAYLOAD_TYPE_INT_ARRAYReady) { _KEY_DTMFNB_PAYLOAD_TYPE_INT_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_DTMFNB_PAYLOAD_TYPE_INT_ARRAY"); _KEY_DTMFNB_PAYLOAD_TYPE_INT_ARRAYReady = true; } return _KEY_DTMFNB_PAYLOAD_TYPE_INT_ARRAYContent; } }
            private static Java.Lang.String _KEY_DTMFNB_PAYLOAD_TYPE_INT_ARRAYContent = default;
            private static bool _KEY_DTMFNB_PAYLOAD_TYPE_INT_ARRAYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#KEY_DTMFWB_PAYLOAD_TYPE_INT_ARRAY"/>
            /// </summary>
            public static Java.Lang.String KEY_DTMFWB_PAYLOAD_TYPE_INT_ARRAY { get { if (!_KEY_DTMFWB_PAYLOAD_TYPE_INT_ARRAYReady) { _KEY_DTMFWB_PAYLOAD_TYPE_INT_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_DTMFWB_PAYLOAD_TYPE_INT_ARRAY"); _KEY_DTMFWB_PAYLOAD_TYPE_INT_ARRAYReady = true; } return _KEY_DTMFWB_PAYLOAD_TYPE_INT_ARRAYContent; } }
            private static Java.Lang.String _KEY_DTMFWB_PAYLOAD_TYPE_INT_ARRAYContent = default;
            private static bool _KEY_DTMFWB_PAYLOAD_TYPE_INT_ARRAYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#KEY_EVS_CODEC_ATTRIBUTE_BANDWIDTH_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_EVS_CODEC_ATTRIBUTE_BANDWIDTH_INT { get { if (!_KEY_EVS_CODEC_ATTRIBUTE_BANDWIDTH_INTReady) { _KEY_EVS_CODEC_ATTRIBUTE_BANDWIDTH_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_EVS_CODEC_ATTRIBUTE_BANDWIDTH_INT"); _KEY_EVS_CODEC_ATTRIBUTE_BANDWIDTH_INTReady = true; } return _KEY_EVS_CODEC_ATTRIBUTE_BANDWIDTH_INTContent; } }
            private static Java.Lang.String _KEY_EVS_CODEC_ATTRIBUTE_BANDWIDTH_INTContent = default;
            private static bool _KEY_EVS_CODEC_ATTRIBUTE_BANDWIDTH_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#KEY_EVS_CODEC_ATTRIBUTE_BITRATE_INT_ARRAY"/>
            /// </summary>
            public static Java.Lang.String KEY_EVS_CODEC_ATTRIBUTE_BITRATE_INT_ARRAY { get { if (!_KEY_EVS_CODEC_ATTRIBUTE_BITRATE_INT_ARRAYReady) { _KEY_EVS_CODEC_ATTRIBUTE_BITRATE_INT_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_EVS_CODEC_ATTRIBUTE_BITRATE_INT_ARRAY"); _KEY_EVS_CODEC_ATTRIBUTE_BITRATE_INT_ARRAYReady = true; } return _KEY_EVS_CODEC_ATTRIBUTE_BITRATE_INT_ARRAYContent; } }
            private static Java.Lang.String _KEY_EVS_CODEC_ATTRIBUTE_BITRATE_INT_ARRAYContent = default;
            private static bool _KEY_EVS_CODEC_ATTRIBUTE_BITRATE_INT_ARRAYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#KEY_EVS_CODEC_ATTRIBUTE_CH_AW_RECV_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_EVS_CODEC_ATTRIBUTE_CH_AW_RECV_INT { get { if (!_KEY_EVS_CODEC_ATTRIBUTE_CH_AW_RECV_INTReady) { _KEY_EVS_CODEC_ATTRIBUTE_CH_AW_RECV_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_EVS_CODEC_ATTRIBUTE_CH_AW_RECV_INT"); _KEY_EVS_CODEC_ATTRIBUTE_CH_AW_RECV_INTReady = true; } return _KEY_EVS_CODEC_ATTRIBUTE_CH_AW_RECV_INTContent; } }
            private static Java.Lang.String _KEY_EVS_CODEC_ATTRIBUTE_CH_AW_RECV_INTContent = default;
            private static bool _KEY_EVS_CODEC_ATTRIBUTE_CH_AW_RECV_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#KEY_EVS_CODEC_ATTRIBUTE_CHANNELS_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_EVS_CODEC_ATTRIBUTE_CHANNELS_INT { get { if (!_KEY_EVS_CODEC_ATTRIBUTE_CHANNELS_INTReady) { _KEY_EVS_CODEC_ATTRIBUTE_CHANNELS_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_EVS_CODEC_ATTRIBUTE_CHANNELS_INT"); _KEY_EVS_CODEC_ATTRIBUTE_CHANNELS_INTReady = true; } return _KEY_EVS_CODEC_ATTRIBUTE_CHANNELS_INTContent; } }
            private static Java.Lang.String _KEY_EVS_CODEC_ATTRIBUTE_CHANNELS_INTContent = default;
            private static bool _KEY_EVS_CODEC_ATTRIBUTE_CHANNELS_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#KEY_EVS_CODEC_ATTRIBUTE_CMR_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_EVS_CODEC_ATTRIBUTE_CMR_INT { get { if (!_KEY_EVS_CODEC_ATTRIBUTE_CMR_INTReady) { _KEY_EVS_CODEC_ATTRIBUTE_CMR_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_EVS_CODEC_ATTRIBUTE_CMR_INT"); _KEY_EVS_CODEC_ATTRIBUTE_CMR_INTReady = true; } return _KEY_EVS_CODEC_ATTRIBUTE_CMR_INTContent; } }
            private static Java.Lang.String _KEY_EVS_CODEC_ATTRIBUTE_CMR_INTContent = default;
            private static bool _KEY_EVS_CODEC_ATTRIBUTE_CMR_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#KEY_EVS_CODEC_ATTRIBUTE_DTX_BOOL"/>
            /// </summary>
            public static Java.Lang.String KEY_EVS_CODEC_ATTRIBUTE_DTX_BOOL { get { if (!_KEY_EVS_CODEC_ATTRIBUTE_DTX_BOOLReady) { _KEY_EVS_CODEC_ATTRIBUTE_DTX_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_EVS_CODEC_ATTRIBUTE_DTX_BOOL"); _KEY_EVS_CODEC_ATTRIBUTE_DTX_BOOLReady = true; } return _KEY_EVS_CODEC_ATTRIBUTE_DTX_BOOLContent; } }
            private static Java.Lang.String _KEY_EVS_CODEC_ATTRIBUTE_DTX_BOOLContent = default;
            private static bool _KEY_EVS_CODEC_ATTRIBUTE_DTX_BOOLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#KEY_EVS_CODEC_ATTRIBUTE_DTX_RECV_BOOL"/>
            /// </summary>
            public static Java.Lang.String KEY_EVS_CODEC_ATTRIBUTE_DTX_RECV_BOOL { get { if (!_KEY_EVS_CODEC_ATTRIBUTE_DTX_RECV_BOOLReady) { _KEY_EVS_CODEC_ATTRIBUTE_DTX_RECV_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_EVS_CODEC_ATTRIBUTE_DTX_RECV_BOOL"); _KEY_EVS_CODEC_ATTRIBUTE_DTX_RECV_BOOLReady = true; } return _KEY_EVS_CODEC_ATTRIBUTE_DTX_RECV_BOOLContent; } }
            private static Java.Lang.String _KEY_EVS_CODEC_ATTRIBUTE_DTX_RECV_BOOLContent = default;
            private static bool _KEY_EVS_CODEC_ATTRIBUTE_DTX_RECV_BOOLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#KEY_EVS_CODEC_ATTRIBUTE_HF_ONLY_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_EVS_CODEC_ATTRIBUTE_HF_ONLY_INT { get { if (!_KEY_EVS_CODEC_ATTRIBUTE_HF_ONLY_INTReady) { _KEY_EVS_CODEC_ATTRIBUTE_HF_ONLY_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_EVS_CODEC_ATTRIBUTE_HF_ONLY_INT"); _KEY_EVS_CODEC_ATTRIBUTE_HF_ONLY_INTReady = true; } return _KEY_EVS_CODEC_ATTRIBUTE_HF_ONLY_INTContent; } }
            private static Java.Lang.String _KEY_EVS_CODEC_ATTRIBUTE_HF_ONLY_INTContent = default;
            private static bool _KEY_EVS_CODEC_ATTRIBUTE_HF_ONLY_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#KEY_EVS_CODEC_ATTRIBUTE_MODE_SWITCH_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_EVS_CODEC_ATTRIBUTE_MODE_SWITCH_INT { get { if (!_KEY_EVS_CODEC_ATTRIBUTE_MODE_SWITCH_INTReady) { _KEY_EVS_CODEC_ATTRIBUTE_MODE_SWITCH_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_EVS_CODEC_ATTRIBUTE_MODE_SWITCH_INT"); _KEY_EVS_CODEC_ATTRIBUTE_MODE_SWITCH_INTReady = true; } return _KEY_EVS_CODEC_ATTRIBUTE_MODE_SWITCH_INTContent; } }
            private static Java.Lang.String _KEY_EVS_CODEC_ATTRIBUTE_MODE_SWITCH_INTContent = default;
            private static bool _KEY_EVS_CODEC_ATTRIBUTE_MODE_SWITCH_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#KEY_EVS_PAYLOAD_DESCRIPTION_BUNDLE"/>
            /// </summary>
            public static Java.Lang.String KEY_EVS_PAYLOAD_DESCRIPTION_BUNDLE { get { if (!_KEY_EVS_PAYLOAD_DESCRIPTION_BUNDLEReady) { _KEY_EVS_PAYLOAD_DESCRIPTION_BUNDLEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_EVS_PAYLOAD_DESCRIPTION_BUNDLE"); _KEY_EVS_PAYLOAD_DESCRIPTION_BUNDLEReady = true; } return _KEY_EVS_PAYLOAD_DESCRIPTION_BUNDLEContent; } }
            private static Java.Lang.String _KEY_EVS_PAYLOAD_DESCRIPTION_BUNDLEContent = default;
            private static bool _KEY_EVS_PAYLOAD_DESCRIPTION_BUNDLEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#KEY_EVS_PAYLOAD_TYPE_INT_ARRAY"/>
            /// </summary>
            public static Java.Lang.String KEY_EVS_PAYLOAD_TYPE_INT_ARRAY { get { if (!_KEY_EVS_PAYLOAD_TYPE_INT_ARRAYReady) { _KEY_EVS_PAYLOAD_TYPE_INT_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_EVS_PAYLOAD_TYPE_INT_ARRAY"); _KEY_EVS_PAYLOAD_TYPE_INT_ARRAYReady = true; } return _KEY_EVS_PAYLOAD_TYPE_INT_ARRAYContent; } }
            private static Java.Lang.String _KEY_EVS_PAYLOAD_TYPE_INT_ARRAYContent = default;
            private static bool _KEY_EVS_PAYLOAD_TYPE_INT_ARRAYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#KEY_INCLUDE_CALLER_ID_SERVICE_CODES_IN_SIP_INVITE_BOOL"/>
            /// </summary>
            public static Java.Lang.String KEY_INCLUDE_CALLER_ID_SERVICE_CODES_IN_SIP_INVITE_BOOL { get { if (!_KEY_INCLUDE_CALLER_ID_SERVICE_CODES_IN_SIP_INVITE_BOOLReady) { _KEY_INCLUDE_CALLER_ID_SERVICE_CODES_IN_SIP_INVITE_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_INCLUDE_CALLER_ID_SERVICE_CODES_IN_SIP_INVITE_BOOL"); _KEY_INCLUDE_CALLER_ID_SERVICE_CODES_IN_SIP_INVITE_BOOLReady = true; } return _KEY_INCLUDE_CALLER_ID_SERVICE_CODES_IN_SIP_INVITE_BOOLContent; } }
            private static Java.Lang.String _KEY_INCLUDE_CALLER_ID_SERVICE_CODES_IN_SIP_INVITE_BOOLContent = default;
            private static bool _KEY_INCLUDE_CALLER_ID_SERVICE_CODES_IN_SIP_INVITE_BOOLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#KEY_MINIMUM_SESSION_EXPIRES_TIMER_SEC_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_MINIMUM_SESSION_EXPIRES_TIMER_SEC_INT { get { if (!_KEY_MINIMUM_SESSION_EXPIRES_TIMER_SEC_INTReady) { _KEY_MINIMUM_SESSION_EXPIRES_TIMER_SEC_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_MINIMUM_SESSION_EXPIRES_TIMER_SEC_INT"); _KEY_MINIMUM_SESSION_EXPIRES_TIMER_SEC_INTReady = true; } return _KEY_MINIMUM_SESSION_EXPIRES_TIMER_SEC_INTContent; } }
            private static Java.Lang.String _KEY_MINIMUM_SESSION_EXPIRES_TIMER_SEC_INTContent = default;
            private static bool _KEY_MINIMUM_SESSION_EXPIRES_TIMER_SEC_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#KEY_MO_CALL_REQUEST_TIMEOUT_MILLIS_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_MO_CALL_REQUEST_TIMEOUT_MILLIS_INT { get { if (!_KEY_MO_CALL_REQUEST_TIMEOUT_MILLIS_INTReady) { _KEY_MO_CALL_REQUEST_TIMEOUT_MILLIS_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_MO_CALL_REQUEST_TIMEOUT_MILLIS_INT"); _KEY_MO_CALL_REQUEST_TIMEOUT_MILLIS_INTReady = true; } return _KEY_MO_CALL_REQUEST_TIMEOUT_MILLIS_INTContent; } }
            private static Java.Lang.String _KEY_MO_CALL_REQUEST_TIMEOUT_MILLIS_INTContent = default;
            private static bool _KEY_MO_CALL_REQUEST_TIMEOUT_MILLIS_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#KEY_MULTIENDPOINT_SUPPORTED_BOOL"/>
            /// </summary>
            public static Java.Lang.String KEY_MULTIENDPOINT_SUPPORTED_BOOL { get { if (!_KEY_MULTIENDPOINT_SUPPORTED_BOOLReady) { _KEY_MULTIENDPOINT_SUPPORTED_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_MULTIENDPOINT_SUPPORTED_BOOL"); _KEY_MULTIENDPOINT_SUPPORTED_BOOLReady = true; } return _KEY_MULTIENDPOINT_SUPPORTED_BOOLContent; } }
            private static Java.Lang.String _KEY_MULTIENDPOINT_SUPPORTED_BOOLContent = default;
            private static bool _KEY_MULTIENDPOINT_SUPPORTED_BOOLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#KEY_OIP_SOURCE_FROM_HEADER_BOOL"/>
            /// </summary>
            public static Java.Lang.String KEY_OIP_SOURCE_FROM_HEADER_BOOL { get { if (!_KEY_OIP_SOURCE_FROM_HEADER_BOOLReady) { _KEY_OIP_SOURCE_FROM_HEADER_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_OIP_SOURCE_FROM_HEADER_BOOL"); _KEY_OIP_SOURCE_FROM_HEADER_BOOLReady = true; } return _KEY_OIP_SOURCE_FROM_HEADER_BOOLContent; } }
            private static Java.Lang.String _KEY_OIP_SOURCE_FROM_HEADER_BOOLContent = default;
            private static bool _KEY_OIP_SOURCE_FROM_HEADER_BOOLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#KEY_PRACK_SUPPORTED_FOR_18X_BOOL"/>
            /// </summary>
            public static Java.Lang.String KEY_PRACK_SUPPORTED_FOR_18X_BOOL { get { if (!_KEY_PRACK_SUPPORTED_FOR_18X_BOOLReady) { _KEY_PRACK_SUPPORTED_FOR_18X_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_PRACK_SUPPORTED_FOR_18X_BOOL"); _KEY_PRACK_SUPPORTED_FOR_18X_BOOLReady = true; } return _KEY_PRACK_SUPPORTED_FOR_18X_BOOLContent; } }
            private static Java.Lang.String _KEY_PRACK_SUPPORTED_FOR_18X_BOOLContent = default;
            private static bool _KEY_PRACK_SUPPORTED_FOR_18X_BOOLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#KEY_PREFIX"/>
            /// </summary>
            public static Java.Lang.String KEY_PREFIX { get { if (!_KEY_PREFIXReady) { _KEY_PREFIXContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_PREFIX"); _KEY_PREFIXReady = true; } return _KEY_PREFIXContent; } }
            private static Java.Lang.String _KEY_PREFIXContent = default;
            private static bool _KEY_PREFIXReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#KEY_RINGBACK_TIMER_MILLIS_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_RINGBACK_TIMER_MILLIS_INT { get { if (!_KEY_RINGBACK_TIMER_MILLIS_INTReady) { _KEY_RINGBACK_TIMER_MILLIS_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_RINGBACK_TIMER_MILLIS_INT"); _KEY_RINGBACK_TIMER_MILLIS_INTReady = true; } return _KEY_RINGBACK_TIMER_MILLIS_INTContent; } }
            private static Java.Lang.String _KEY_RINGBACK_TIMER_MILLIS_INTContent = default;
            private static bool _KEY_RINGBACK_TIMER_MILLIS_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#KEY_RINGING_TIMER_MILLIS_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_RINGING_TIMER_MILLIS_INT { get { if (!_KEY_RINGING_TIMER_MILLIS_INTReady) { _KEY_RINGING_TIMER_MILLIS_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_RINGING_TIMER_MILLIS_INT"); _KEY_RINGING_TIMER_MILLIS_INTReady = true; } return _KEY_RINGING_TIMER_MILLIS_INTContent; } }
            private static Java.Lang.String _KEY_RINGING_TIMER_MILLIS_INTContent = default;
            private static bool _KEY_RINGING_TIMER_MILLIS_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#KEY_SESSION_EXPIRES_TIMER_SEC_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_SESSION_EXPIRES_TIMER_SEC_INT { get { if (!_KEY_SESSION_EXPIRES_TIMER_SEC_INTReady) { _KEY_SESSION_EXPIRES_TIMER_SEC_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SESSION_EXPIRES_TIMER_SEC_INT"); _KEY_SESSION_EXPIRES_TIMER_SEC_INTReady = true; } return _KEY_SESSION_EXPIRES_TIMER_SEC_INTContent; } }
            private static Java.Lang.String _KEY_SESSION_EXPIRES_TIMER_SEC_INTContent = default;
            private static bool _KEY_SESSION_EXPIRES_TIMER_SEC_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#KEY_SESSION_PRIVACY_TYPE_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_SESSION_PRIVACY_TYPE_INT { get { if (!_KEY_SESSION_PRIVACY_TYPE_INTReady) { _KEY_SESSION_PRIVACY_TYPE_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SESSION_PRIVACY_TYPE_INT"); _KEY_SESSION_PRIVACY_TYPE_INTReady = true; } return _KEY_SESSION_PRIVACY_TYPE_INTContent; } }
            private static Java.Lang.String _KEY_SESSION_PRIVACY_TYPE_INTContent = default;
            private static bool _KEY_SESSION_PRIVACY_TYPE_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#KEY_SESSION_REFRESH_METHOD_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_SESSION_REFRESH_METHOD_INT { get { if (!_KEY_SESSION_REFRESH_METHOD_INTReady) { _KEY_SESSION_REFRESH_METHOD_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SESSION_REFRESH_METHOD_INT"); _KEY_SESSION_REFRESH_METHOD_INTReady = true; } return _KEY_SESSION_REFRESH_METHOD_INTContent; } }
            private static Java.Lang.String _KEY_SESSION_REFRESH_METHOD_INTContent = default;
            private static bool _KEY_SESSION_REFRESH_METHOD_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#KEY_SESSION_REFRESHER_TYPE_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_SESSION_REFRESHER_TYPE_INT { get { if (!_KEY_SESSION_REFRESHER_TYPE_INTReady) { _KEY_SESSION_REFRESHER_TYPE_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SESSION_REFRESHER_TYPE_INT"); _KEY_SESSION_REFRESHER_TYPE_INTReady = true; } return _KEY_SESSION_REFRESHER_TYPE_INTContent; } }
            private static Java.Lang.String _KEY_SESSION_REFRESHER_TYPE_INTContent = default;
            private static bool _KEY_SESSION_REFRESHER_TYPE_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#KEY_SESSION_TIMER_SUPPORTED_BOOL"/>
            /// </summary>
            public static Java.Lang.String KEY_SESSION_TIMER_SUPPORTED_BOOL { get { if (!_KEY_SESSION_TIMER_SUPPORTED_BOOLReady) { _KEY_SESSION_TIMER_SUPPORTED_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SESSION_TIMER_SUPPORTED_BOOL"); _KEY_SESSION_TIMER_SUPPORTED_BOOLReady = true; } return _KEY_SESSION_TIMER_SUPPORTED_BOOLContent; } }
            private static Java.Lang.String _KEY_SESSION_TIMER_SUPPORTED_BOOLContent = default;
            private static bool _KEY_SESSION_TIMER_SUPPORTED_BOOLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#KEY_SRVCC_TYPE_INT_ARRAY"/>
            /// </summary>
            public static Java.Lang.String KEY_SRVCC_TYPE_INT_ARRAY { get { if (!_KEY_SRVCC_TYPE_INT_ARRAYReady) { _KEY_SRVCC_TYPE_INT_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SRVCC_TYPE_INT_ARRAY"); _KEY_SRVCC_TYPE_INT_ARRAYReady = true; } return _KEY_SRVCC_TYPE_INT_ARRAYContent; } }
            private static Java.Lang.String _KEY_SRVCC_TYPE_INT_ARRAYContent = default;
            private static bool _KEY_SRVCC_TYPE_INT_ARRAYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#KEY_VOICE_ON_DEFAULT_BEARER_SUPPORTED_BOOL"/>
            /// </summary>
            public static Java.Lang.String KEY_VOICE_ON_DEFAULT_BEARER_SUPPORTED_BOOL { get { if (!_KEY_VOICE_ON_DEFAULT_BEARER_SUPPORTED_BOOLReady) { _KEY_VOICE_ON_DEFAULT_BEARER_SUPPORTED_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_VOICE_ON_DEFAULT_BEARER_SUPPORTED_BOOL"); _KEY_VOICE_ON_DEFAULT_BEARER_SUPPORTED_BOOLReady = true; } return _KEY_VOICE_ON_DEFAULT_BEARER_SUPPORTED_BOOLContent; } }
            private static Java.Lang.String _KEY_VOICE_ON_DEFAULT_BEARER_SUPPORTED_BOOLContent = default;
            private static bool _KEY_VOICE_ON_DEFAULT_BEARER_SUPPORTED_BOOLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVoice.html#KEY_VOICE_QOS_PRECONDITION_SUPPORTED_BOOL"/>
            /// </summary>
            public static Java.Lang.String KEY_VOICE_QOS_PRECONDITION_SUPPORTED_BOOL { get { if (!_KEY_VOICE_QOS_PRECONDITION_SUPPORTED_BOOLReady) { _KEY_VOICE_QOS_PRECONDITION_SUPPORTED_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_VOICE_QOS_PRECONDITION_SUPPORTED_BOOL"); _KEY_VOICE_QOS_PRECONDITION_SUPPORTED_BOOLReady = true; } return _KEY_VOICE_QOS_PRECONDITION_SUPPORTED_BOOLContent; } }
            private static Java.Lang.String _KEY_VOICE_QOS_PRECONDITION_SUPPORTED_BOOLContent = default;
            private static bool _KEY_VOICE_QOS_PRECONDITION_SUPPORTED_BOOLReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region ImsVt
        public partial class ImsVt
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVt.html#KEY_H264_PAYLOAD_DESCRIPTION_BUNDLE"/>
            /// </summary>
            public static Java.Lang.String KEY_H264_PAYLOAD_DESCRIPTION_BUNDLE { get { if (!_KEY_H264_PAYLOAD_DESCRIPTION_BUNDLEReady) { _KEY_H264_PAYLOAD_DESCRIPTION_BUNDLEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_H264_PAYLOAD_DESCRIPTION_BUNDLE"); _KEY_H264_PAYLOAD_DESCRIPTION_BUNDLEReady = true; } return _KEY_H264_PAYLOAD_DESCRIPTION_BUNDLEContent; } }
            private static Java.Lang.String _KEY_H264_PAYLOAD_DESCRIPTION_BUNDLEContent = default;
            private static bool _KEY_H264_PAYLOAD_DESCRIPTION_BUNDLEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVt.html#KEY_H264_PAYLOAD_TYPE_INT_ARRAY"/>
            /// </summary>
            public static Java.Lang.String KEY_H264_PAYLOAD_TYPE_INT_ARRAY { get { if (!_KEY_H264_PAYLOAD_TYPE_INT_ARRAYReady) { _KEY_H264_PAYLOAD_TYPE_INT_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_H264_PAYLOAD_TYPE_INT_ARRAY"); _KEY_H264_PAYLOAD_TYPE_INT_ARRAYReady = true; } return _KEY_H264_PAYLOAD_TYPE_INT_ARRAYContent; } }
            private static Java.Lang.String _KEY_H264_PAYLOAD_TYPE_INT_ARRAYContent = default;
            private static bool _KEY_H264_PAYLOAD_TYPE_INT_ARRAYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVt.html#KEY_H264_VIDEO_CODEC_ATTRIBUTE_PROFILE_LEVEL_ID_STRING"/>
            /// </summary>
            public static Java.Lang.String KEY_H264_VIDEO_CODEC_ATTRIBUTE_PROFILE_LEVEL_ID_STRING { get { if (!_KEY_H264_VIDEO_CODEC_ATTRIBUTE_PROFILE_LEVEL_ID_STRINGReady) { _KEY_H264_VIDEO_CODEC_ATTRIBUTE_PROFILE_LEVEL_ID_STRINGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_H264_VIDEO_CODEC_ATTRIBUTE_PROFILE_LEVEL_ID_STRING"); _KEY_H264_VIDEO_CODEC_ATTRIBUTE_PROFILE_LEVEL_ID_STRINGReady = true; } return _KEY_H264_VIDEO_CODEC_ATTRIBUTE_PROFILE_LEVEL_ID_STRINGContent; } }
            private static Java.Lang.String _KEY_H264_VIDEO_CODEC_ATTRIBUTE_PROFILE_LEVEL_ID_STRINGContent = default;
            private static bool _KEY_H264_VIDEO_CODEC_ATTRIBUTE_PROFILE_LEVEL_ID_STRINGReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVt.html#KEY_PREFIX"/>
            /// </summary>
            public static Java.Lang.String KEY_PREFIX { get { if (!_KEY_PREFIXReady) { _KEY_PREFIXContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_PREFIX"); _KEY_PREFIXReady = true; } return _KEY_PREFIXContent; } }
            private static Java.Lang.String _KEY_PREFIXContent = default;
            private static bool _KEY_PREFIXReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVt.html#KEY_VIDEO_AS_BANDWIDTH_KBPS_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_VIDEO_AS_BANDWIDTH_KBPS_INT { get { if (!_KEY_VIDEO_AS_BANDWIDTH_KBPS_INTReady) { _KEY_VIDEO_AS_BANDWIDTH_KBPS_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_VIDEO_AS_BANDWIDTH_KBPS_INT"); _KEY_VIDEO_AS_BANDWIDTH_KBPS_INTReady = true; } return _KEY_VIDEO_AS_BANDWIDTH_KBPS_INTContent; } }
            private static Java.Lang.String _KEY_VIDEO_AS_BANDWIDTH_KBPS_INTContent = default;
            private static bool _KEY_VIDEO_AS_BANDWIDTH_KBPS_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVt.html#KEY_VIDEO_CODEC_ATTRIBUTE_FRAME_RATE_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_VIDEO_CODEC_ATTRIBUTE_FRAME_RATE_INT { get { if (!_KEY_VIDEO_CODEC_ATTRIBUTE_FRAME_RATE_INTReady) { _KEY_VIDEO_CODEC_ATTRIBUTE_FRAME_RATE_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_VIDEO_CODEC_ATTRIBUTE_FRAME_RATE_INT"); _KEY_VIDEO_CODEC_ATTRIBUTE_FRAME_RATE_INTReady = true; } return _KEY_VIDEO_CODEC_ATTRIBUTE_FRAME_RATE_INTContent; } }
            private static Java.Lang.String _KEY_VIDEO_CODEC_ATTRIBUTE_FRAME_RATE_INTContent = default;
            private static bool _KEY_VIDEO_CODEC_ATTRIBUTE_FRAME_RATE_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVt.html#KEY_VIDEO_CODEC_ATTRIBUTE_PACKETIZATION_MODE_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_VIDEO_CODEC_ATTRIBUTE_PACKETIZATION_MODE_INT { get { if (!_KEY_VIDEO_CODEC_ATTRIBUTE_PACKETIZATION_MODE_INTReady) { _KEY_VIDEO_CODEC_ATTRIBUTE_PACKETIZATION_MODE_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_VIDEO_CODEC_ATTRIBUTE_PACKETIZATION_MODE_INT"); _KEY_VIDEO_CODEC_ATTRIBUTE_PACKETIZATION_MODE_INTReady = true; } return _KEY_VIDEO_CODEC_ATTRIBUTE_PACKETIZATION_MODE_INTContent; } }
            private static Java.Lang.String _KEY_VIDEO_CODEC_ATTRIBUTE_PACKETIZATION_MODE_INTContent = default;
            private static bool _KEY_VIDEO_CODEC_ATTRIBUTE_PACKETIZATION_MODE_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVt.html#KEY_VIDEO_CODEC_ATTRIBUTE_RESOLUTION_INT_ARRAY"/>
            /// </summary>
            public static Java.Lang.String KEY_VIDEO_CODEC_ATTRIBUTE_RESOLUTION_INT_ARRAY { get { if (!_KEY_VIDEO_CODEC_ATTRIBUTE_RESOLUTION_INT_ARRAYReady) { _KEY_VIDEO_CODEC_ATTRIBUTE_RESOLUTION_INT_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_VIDEO_CODEC_ATTRIBUTE_RESOLUTION_INT_ARRAY"); _KEY_VIDEO_CODEC_ATTRIBUTE_RESOLUTION_INT_ARRAYReady = true; } return _KEY_VIDEO_CODEC_ATTRIBUTE_RESOLUTION_INT_ARRAYContent; } }
            private static Java.Lang.String _KEY_VIDEO_CODEC_ATTRIBUTE_RESOLUTION_INT_ARRAYContent = default;
            private static bool _KEY_VIDEO_CODEC_ATTRIBUTE_RESOLUTION_INT_ARRAYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVt.html#KEY_VIDEO_CODEC_CAPABILITY_PAYLOAD_TYPES_BUNDLE"/>
            /// </summary>
            public static Java.Lang.String KEY_VIDEO_CODEC_CAPABILITY_PAYLOAD_TYPES_BUNDLE { get { if (!_KEY_VIDEO_CODEC_CAPABILITY_PAYLOAD_TYPES_BUNDLEReady) { _KEY_VIDEO_CODEC_CAPABILITY_PAYLOAD_TYPES_BUNDLEContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_VIDEO_CODEC_CAPABILITY_PAYLOAD_TYPES_BUNDLE"); _KEY_VIDEO_CODEC_CAPABILITY_PAYLOAD_TYPES_BUNDLEReady = true; } return _KEY_VIDEO_CODEC_CAPABILITY_PAYLOAD_TYPES_BUNDLEContent; } }
            private static Java.Lang.String _KEY_VIDEO_CODEC_CAPABILITY_PAYLOAD_TYPES_BUNDLEContent = default;
            private static bool _KEY_VIDEO_CODEC_CAPABILITY_PAYLOAD_TYPES_BUNDLEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVt.html#KEY_VIDEO_ON_DEFAULT_BEARER_SUPPORTED_BOOL"/>
            /// </summary>
            public static Java.Lang.String KEY_VIDEO_ON_DEFAULT_BEARER_SUPPORTED_BOOL { get { if (!_KEY_VIDEO_ON_DEFAULT_BEARER_SUPPORTED_BOOLReady) { _KEY_VIDEO_ON_DEFAULT_BEARER_SUPPORTED_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_VIDEO_ON_DEFAULT_BEARER_SUPPORTED_BOOL"); _KEY_VIDEO_ON_DEFAULT_BEARER_SUPPORTED_BOOLReady = true; } return _KEY_VIDEO_ON_DEFAULT_BEARER_SUPPORTED_BOOLContent; } }
            private static Java.Lang.String _KEY_VIDEO_ON_DEFAULT_BEARER_SUPPORTED_BOOLContent = default;
            private static bool _KEY_VIDEO_ON_DEFAULT_BEARER_SUPPORTED_BOOLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVt.html#KEY_VIDEO_QOS_PRECONDITION_SUPPORTED_BOOL"/>
            /// </summary>
            public static Java.Lang.String KEY_VIDEO_QOS_PRECONDITION_SUPPORTED_BOOL { get { if (!_KEY_VIDEO_QOS_PRECONDITION_SUPPORTED_BOOLReady) { _KEY_VIDEO_QOS_PRECONDITION_SUPPORTED_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_VIDEO_QOS_PRECONDITION_SUPPORTED_BOOL"); _KEY_VIDEO_QOS_PRECONDITION_SUPPORTED_BOOLReady = true; } return _KEY_VIDEO_QOS_PRECONDITION_SUPPORTED_BOOLContent; } }
            private static Java.Lang.String _KEY_VIDEO_QOS_PRECONDITION_SUPPORTED_BOOLContent = default;
            private static bool _KEY_VIDEO_QOS_PRECONDITION_SUPPORTED_BOOLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVt.html#KEY_VIDEO_RR_BANDWIDTH_BPS_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_VIDEO_RR_BANDWIDTH_BPS_INT { get { if (!_KEY_VIDEO_RR_BANDWIDTH_BPS_INTReady) { _KEY_VIDEO_RR_BANDWIDTH_BPS_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_VIDEO_RR_BANDWIDTH_BPS_INT"); _KEY_VIDEO_RR_BANDWIDTH_BPS_INTReady = true; } return _KEY_VIDEO_RR_BANDWIDTH_BPS_INTContent; } }
            private static Java.Lang.String _KEY_VIDEO_RR_BANDWIDTH_BPS_INTContent = default;
            private static bool _KEY_VIDEO_RR_BANDWIDTH_BPS_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVt.html#KEY_VIDEO_RS_BANDWIDTH_BPS_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_VIDEO_RS_BANDWIDTH_BPS_INT { get { if (!_KEY_VIDEO_RS_BANDWIDTH_BPS_INTReady) { _KEY_VIDEO_RS_BANDWIDTH_BPS_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_VIDEO_RS_BANDWIDTH_BPS_INT"); _KEY_VIDEO_RS_BANDWIDTH_BPS_INTReady = true; } return _KEY_VIDEO_RS_BANDWIDTH_BPS_INTContent; } }
            private static Java.Lang.String _KEY_VIDEO_RS_BANDWIDTH_BPS_INTContent = default;
            private static bool _KEY_VIDEO_RS_BANDWIDTH_BPS_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVt.html#KEY_VIDEO_RTCP_INACTIVITY_TIMER_MILLIS_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_VIDEO_RTCP_INACTIVITY_TIMER_MILLIS_INT { get { if (!_KEY_VIDEO_RTCP_INACTIVITY_TIMER_MILLIS_INTReady) { _KEY_VIDEO_RTCP_INACTIVITY_TIMER_MILLIS_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_VIDEO_RTCP_INACTIVITY_TIMER_MILLIS_INT"); _KEY_VIDEO_RTCP_INACTIVITY_TIMER_MILLIS_INTReady = true; } return _KEY_VIDEO_RTCP_INACTIVITY_TIMER_MILLIS_INTContent; } }
            private static Java.Lang.String _KEY_VIDEO_RTCP_INACTIVITY_TIMER_MILLIS_INTContent = default;
            private static bool _KEY_VIDEO_RTCP_INACTIVITY_TIMER_MILLIS_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVt.html#KEY_VIDEO_RTP_DSCP_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_VIDEO_RTP_DSCP_INT { get { if (!_KEY_VIDEO_RTP_DSCP_INTReady) { _KEY_VIDEO_RTP_DSCP_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_VIDEO_RTP_DSCP_INT"); _KEY_VIDEO_RTP_DSCP_INTReady = true; } return _KEY_VIDEO_RTP_DSCP_INTContent; } }
            private static Java.Lang.String _KEY_VIDEO_RTP_DSCP_INTContent = default;
            private static bool _KEY_VIDEO_RTP_DSCP_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsVt.html#KEY_VIDEO_RTP_INACTIVITY_TIMER_MILLIS_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_VIDEO_RTP_INACTIVITY_TIMER_MILLIS_INT { get { if (!_KEY_VIDEO_RTP_INACTIVITY_TIMER_MILLIS_INTReady) { _KEY_VIDEO_RTP_INACTIVITY_TIMER_MILLIS_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_VIDEO_RTP_INACTIVITY_TIMER_MILLIS_INT"); _KEY_VIDEO_RTP_INACTIVITY_TIMER_MILLIS_INTReady = true; } return _KEY_VIDEO_RTP_INACTIVITY_TIMER_MILLIS_INTContent; } }
            private static Java.Lang.String _KEY_VIDEO_RTP_INACTIVITY_TIMER_MILLIS_INTContent = default;
            private static bool _KEY_VIDEO_RTP_INACTIVITY_TIMER_MILLIS_INTReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region ImsWfc
        public partial class ImsWfc
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsWfc.html#KEY_EMERGENCY_CALL_OVER_EMERGENCY_PDN_BOOL"/>
            /// </summary>
            public static Java.Lang.String KEY_EMERGENCY_CALL_OVER_EMERGENCY_PDN_BOOL { get { if (!_KEY_EMERGENCY_CALL_OVER_EMERGENCY_PDN_BOOLReady) { _KEY_EMERGENCY_CALL_OVER_EMERGENCY_PDN_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_EMERGENCY_CALL_OVER_EMERGENCY_PDN_BOOL"); _KEY_EMERGENCY_CALL_OVER_EMERGENCY_PDN_BOOLReady = true; } return _KEY_EMERGENCY_CALL_OVER_EMERGENCY_PDN_BOOLContent; } }
            private static Java.Lang.String _KEY_EMERGENCY_CALL_OVER_EMERGENCY_PDN_BOOLContent = default;
            private static bool _KEY_EMERGENCY_CALL_OVER_EMERGENCY_PDN_BOOLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsWfc.html#KEY_PIDF_SHORT_CODE_STRING_ARRAY"/>
            /// </summary>
            public static Java.Lang.String KEY_PIDF_SHORT_CODE_STRING_ARRAY { get { if (!_KEY_PIDF_SHORT_CODE_STRING_ARRAYReady) { _KEY_PIDF_SHORT_CODE_STRING_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_PIDF_SHORT_CODE_STRING_ARRAY"); _KEY_PIDF_SHORT_CODE_STRING_ARRAYReady = true; } return _KEY_PIDF_SHORT_CODE_STRING_ARRAYContent; } }
            private static Java.Lang.String _KEY_PIDF_SHORT_CODE_STRING_ARRAYContent = default;
            private static bool _KEY_PIDF_SHORT_CODE_STRING_ARRAYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.ImsWfc.html#KEY_PREFIX"/>
            /// </summary>
            public static Java.Lang.String KEY_PREFIX { get { if (!_KEY_PREFIXReady) { _KEY_PREFIXContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_PREFIX"); _KEY_PREFIXReady = true; } return _KEY_PREFIXContent; } }
            private static Java.Lang.String _KEY_PREFIXContent = default;
            private static bool _KEY_PREFIXReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region Iwlan
        public partial class Iwlan
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Iwlan.html#AUTHENTICATION_METHOD_CERT"/>
            /// </summary>
            public static int AUTHENTICATION_METHOD_CERT { get { if (!_AUTHENTICATION_METHOD_CERTReady) { _AUTHENTICATION_METHOD_CERTContent = SGetField<int>(LocalBridgeClazz, "AUTHENTICATION_METHOD_CERT"); _AUTHENTICATION_METHOD_CERTReady = true; } return _AUTHENTICATION_METHOD_CERTContent; } }
            private static int _AUTHENTICATION_METHOD_CERTContent = default;
            private static bool _AUTHENTICATION_METHOD_CERTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Iwlan.html#AUTHENTICATION_METHOD_EAP_ONLY"/>
            /// </summary>
            public static int AUTHENTICATION_METHOD_EAP_ONLY { get { if (!_AUTHENTICATION_METHOD_EAP_ONLYReady) { _AUTHENTICATION_METHOD_EAP_ONLYContent = SGetField<int>(LocalBridgeClazz, "AUTHENTICATION_METHOD_EAP_ONLY"); _AUTHENTICATION_METHOD_EAP_ONLYReady = true; } return _AUTHENTICATION_METHOD_EAP_ONLYContent; } }
            private static int _AUTHENTICATION_METHOD_EAP_ONLYContent = default;
            private static bool _AUTHENTICATION_METHOD_EAP_ONLYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Iwlan.html#EPDG_ADDRESS_CELLULAR_LOC"/>
            /// </summary>
            public static int EPDG_ADDRESS_CELLULAR_LOC { get { if (!_EPDG_ADDRESS_CELLULAR_LOCReady) { _EPDG_ADDRESS_CELLULAR_LOCContent = SGetField<int>(LocalBridgeClazz, "EPDG_ADDRESS_CELLULAR_LOC"); _EPDG_ADDRESS_CELLULAR_LOCReady = true; } return _EPDG_ADDRESS_CELLULAR_LOCContent; } }
            private static int _EPDG_ADDRESS_CELLULAR_LOCContent = default;
            private static bool _EPDG_ADDRESS_CELLULAR_LOCReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Iwlan.html#EPDG_ADDRESS_IPV4_ONLY"/>
            /// </summary>
            public static int EPDG_ADDRESS_IPV4_ONLY { get { if (!_EPDG_ADDRESS_IPV4_ONLYReady) { _EPDG_ADDRESS_IPV4_ONLYContent = SGetField<int>(LocalBridgeClazz, "EPDG_ADDRESS_IPV4_ONLY"); _EPDG_ADDRESS_IPV4_ONLYReady = true; } return _EPDG_ADDRESS_IPV4_ONLYContent; } }
            private static int _EPDG_ADDRESS_IPV4_ONLYContent = default;
            private static bool _EPDG_ADDRESS_IPV4_ONLYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Iwlan.html#EPDG_ADDRESS_IPV4_PREFERRED"/>
            /// </summary>
            public static int EPDG_ADDRESS_IPV4_PREFERRED { get { if (!_EPDG_ADDRESS_IPV4_PREFERREDReady) { _EPDG_ADDRESS_IPV4_PREFERREDContent = SGetField<int>(LocalBridgeClazz, "EPDG_ADDRESS_IPV4_PREFERRED"); _EPDG_ADDRESS_IPV4_PREFERREDReady = true; } return _EPDG_ADDRESS_IPV4_PREFERREDContent; } }
            private static int _EPDG_ADDRESS_IPV4_PREFERREDContent = default;
            private static bool _EPDG_ADDRESS_IPV4_PREFERREDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Iwlan.html#EPDG_ADDRESS_IPV6_PREFERRED"/>
            /// </summary>
            public static int EPDG_ADDRESS_IPV6_PREFERRED { get { if (!_EPDG_ADDRESS_IPV6_PREFERREDReady) { _EPDG_ADDRESS_IPV6_PREFERREDContent = SGetField<int>(LocalBridgeClazz, "EPDG_ADDRESS_IPV6_PREFERRED"); _EPDG_ADDRESS_IPV6_PREFERREDReady = true; } return _EPDG_ADDRESS_IPV6_PREFERREDContent; } }
            private static int _EPDG_ADDRESS_IPV6_PREFERREDContent = default;
            private static bool _EPDG_ADDRESS_IPV6_PREFERREDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Iwlan.html#EPDG_ADDRESS_PCO"/>
            /// </summary>
            public static int EPDG_ADDRESS_PCO { get { if (!_EPDG_ADDRESS_PCOReady) { _EPDG_ADDRESS_PCOContent = SGetField<int>(LocalBridgeClazz, "EPDG_ADDRESS_PCO"); _EPDG_ADDRESS_PCOReady = true; } return _EPDG_ADDRESS_PCOContent; } }
            private static int _EPDG_ADDRESS_PCOContent = default;
            private static bool _EPDG_ADDRESS_PCOReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Iwlan.html#EPDG_ADDRESS_PLMN"/>
            /// </summary>
            public static int EPDG_ADDRESS_PLMN { get { if (!_EPDG_ADDRESS_PLMNReady) { _EPDG_ADDRESS_PLMNContent = SGetField<int>(LocalBridgeClazz, "EPDG_ADDRESS_PLMN"); _EPDG_ADDRESS_PLMNReady = true; } return _EPDG_ADDRESS_PLMNContent; } }
            private static int _EPDG_ADDRESS_PLMNContent = default;
            private static bool _EPDG_ADDRESS_PLMNReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Iwlan.html#EPDG_ADDRESS_STATIC"/>
            /// </summary>
            public static int EPDG_ADDRESS_STATIC { get { if (!_EPDG_ADDRESS_STATICReady) { _EPDG_ADDRESS_STATICContent = SGetField<int>(LocalBridgeClazz, "EPDG_ADDRESS_STATIC"); _EPDG_ADDRESS_STATICReady = true; } return _EPDG_ADDRESS_STATICContent; } }
            private static int _EPDG_ADDRESS_STATICContent = default;
            private static bool _EPDG_ADDRESS_STATICReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Iwlan.html#EPDG_ADDRESS_VISITED_COUNTRY"/>
            /// </summary>
            public static int EPDG_ADDRESS_VISITED_COUNTRY { get { if (!_EPDG_ADDRESS_VISITED_COUNTRYReady) { _EPDG_ADDRESS_VISITED_COUNTRYContent = SGetField<int>(LocalBridgeClazz, "EPDG_ADDRESS_VISITED_COUNTRY"); _EPDG_ADDRESS_VISITED_COUNTRYReady = true; } return _EPDG_ADDRESS_VISITED_COUNTRYContent; } }
            private static int _EPDG_ADDRESS_VISITED_COUNTRYContent = default;
            private static bool _EPDG_ADDRESS_VISITED_COUNTRYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Iwlan.html#ID_TYPE_FQDN"/>
            /// </summary>
            public static int ID_TYPE_FQDN { get { if (!_ID_TYPE_FQDNReady) { _ID_TYPE_FQDNContent = SGetField<int>(LocalBridgeClazz, "ID_TYPE_FQDN"); _ID_TYPE_FQDNReady = true; } return _ID_TYPE_FQDNContent; } }
            private static int _ID_TYPE_FQDNContent = default;
            private static bool _ID_TYPE_FQDNReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Iwlan.html#ID_TYPE_KEY_ID"/>
            /// </summary>
            public static int ID_TYPE_KEY_ID { get { if (!_ID_TYPE_KEY_IDReady) { _ID_TYPE_KEY_IDContent = SGetField<int>(LocalBridgeClazz, "ID_TYPE_KEY_ID"); _ID_TYPE_KEY_IDReady = true; } return _ID_TYPE_KEY_IDContent; } }
            private static int _ID_TYPE_KEY_IDContent = default;
            private static bool _ID_TYPE_KEY_IDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Iwlan.html#ID_TYPE_RFC822_ADDR"/>
            /// </summary>
            public static int ID_TYPE_RFC822_ADDR { get { if (!_ID_TYPE_RFC822_ADDRReady) { _ID_TYPE_RFC822_ADDRContent = SGetField<int>(LocalBridgeClazz, "ID_TYPE_RFC822_ADDR"); _ID_TYPE_RFC822_ADDRReady = true; } return _ID_TYPE_RFC822_ADDRContent; } }
            private static int _ID_TYPE_RFC822_ADDRContent = default;
            private static bool _ID_TYPE_RFC822_ADDRReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Iwlan.html#KEY_ADD_KE_TO_CHILD_SESSION_REKEY_BOOL"/>
            /// </summary>
            public static Java.Lang.String KEY_ADD_KE_TO_CHILD_SESSION_REKEY_BOOL { get { if (!_KEY_ADD_KE_TO_CHILD_SESSION_REKEY_BOOLReady) { _KEY_ADD_KE_TO_CHILD_SESSION_REKEY_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_ADD_KE_TO_CHILD_SESSION_REKEY_BOOL"); _KEY_ADD_KE_TO_CHILD_SESSION_REKEY_BOOLReady = true; } return _KEY_ADD_KE_TO_CHILD_SESSION_REKEY_BOOLContent; } }
            private static Java.Lang.String _KEY_ADD_KE_TO_CHILD_SESSION_REKEY_BOOLContent = default;
            private static bool _KEY_ADD_KE_TO_CHILD_SESSION_REKEY_BOOLReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Iwlan.html#KEY_CHILD_SA_REKEY_HARD_TIMER_SEC_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_CHILD_SA_REKEY_HARD_TIMER_SEC_INT { get { if (!_KEY_CHILD_SA_REKEY_HARD_TIMER_SEC_INTReady) { _KEY_CHILD_SA_REKEY_HARD_TIMER_SEC_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CHILD_SA_REKEY_HARD_TIMER_SEC_INT"); _KEY_CHILD_SA_REKEY_HARD_TIMER_SEC_INTReady = true; } return _KEY_CHILD_SA_REKEY_HARD_TIMER_SEC_INTContent; } }
            private static Java.Lang.String _KEY_CHILD_SA_REKEY_HARD_TIMER_SEC_INTContent = default;
            private static bool _KEY_CHILD_SA_REKEY_HARD_TIMER_SEC_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Iwlan.html#KEY_CHILD_SA_REKEY_SOFT_TIMER_SEC_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_CHILD_SA_REKEY_SOFT_TIMER_SEC_INT { get { if (!_KEY_CHILD_SA_REKEY_SOFT_TIMER_SEC_INTReady) { _KEY_CHILD_SA_REKEY_SOFT_TIMER_SEC_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CHILD_SA_REKEY_SOFT_TIMER_SEC_INT"); _KEY_CHILD_SA_REKEY_SOFT_TIMER_SEC_INTReady = true; } return _KEY_CHILD_SA_REKEY_SOFT_TIMER_SEC_INTContent; } }
            private static Java.Lang.String _KEY_CHILD_SA_REKEY_SOFT_TIMER_SEC_INTContent = default;
            private static bool _KEY_CHILD_SA_REKEY_SOFT_TIMER_SEC_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Iwlan.html#KEY_CHILD_SESSION_AES_CBC_KEY_SIZE_INT_ARRAY"/>
            /// </summary>
            public static Java.Lang.String KEY_CHILD_SESSION_AES_CBC_KEY_SIZE_INT_ARRAY { get { if (!_KEY_CHILD_SESSION_AES_CBC_KEY_SIZE_INT_ARRAYReady) { _KEY_CHILD_SESSION_AES_CBC_KEY_SIZE_INT_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CHILD_SESSION_AES_CBC_KEY_SIZE_INT_ARRAY"); _KEY_CHILD_SESSION_AES_CBC_KEY_SIZE_INT_ARRAYReady = true; } return _KEY_CHILD_SESSION_AES_CBC_KEY_SIZE_INT_ARRAYContent; } }
            private static Java.Lang.String _KEY_CHILD_SESSION_AES_CBC_KEY_SIZE_INT_ARRAYContent = default;
            private static bool _KEY_CHILD_SESSION_AES_CBC_KEY_SIZE_INT_ARRAYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Iwlan.html#KEY_CHILD_SESSION_AES_CTR_KEY_SIZE_INT_ARRAY"/>
            /// </summary>
            public static Java.Lang.String KEY_CHILD_SESSION_AES_CTR_KEY_SIZE_INT_ARRAY { get { if (!_KEY_CHILD_SESSION_AES_CTR_KEY_SIZE_INT_ARRAYReady) { _KEY_CHILD_SESSION_AES_CTR_KEY_SIZE_INT_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_CHILD_SESSION_AES_CTR_KEY_SIZE_INT_ARRAY"); _KEY_CHILD_SESSION_AES_CTR_KEY_SIZE_INT_ARRAYReady = true; } return _KEY_CHILD_SESSION_AES_CTR_KEY_SIZE_INT_ARRAYContent; } }
            private static Java.Lang.String _KEY_CHILD_SESSION_AES_CTR_KEY_SIZE_INT_ARRAYContent = default;
            private static bool _KEY_CHILD_SESSION_AES_CTR_KEY_SIZE_INT_ARRAYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Iwlan.html#KEY_DIFFIE_HELLMAN_GROUPS_INT_ARRAY"/>
            /// </summary>
            public static Java.Lang.String KEY_DIFFIE_HELLMAN_GROUPS_INT_ARRAY { get { if (!_KEY_DIFFIE_HELLMAN_GROUPS_INT_ARRAYReady) { _KEY_DIFFIE_HELLMAN_GROUPS_INT_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_DIFFIE_HELLMAN_GROUPS_INT_ARRAY"); _KEY_DIFFIE_HELLMAN_GROUPS_INT_ARRAYReady = true; } return _KEY_DIFFIE_HELLMAN_GROUPS_INT_ARRAYContent; } }
            private static Java.Lang.String _KEY_DIFFIE_HELLMAN_GROUPS_INT_ARRAYContent = default;
            private static bool _KEY_DIFFIE_HELLMAN_GROUPS_INT_ARRAYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Iwlan.html#KEY_DPD_TIMER_SEC_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_DPD_TIMER_SEC_INT { get { if (!_KEY_DPD_TIMER_SEC_INTReady) { _KEY_DPD_TIMER_SEC_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_DPD_TIMER_SEC_INT"); _KEY_DPD_TIMER_SEC_INTReady = true; } return _KEY_DPD_TIMER_SEC_INTContent; } }
            private static Java.Lang.String _KEY_DPD_TIMER_SEC_INTContent = default;
            private static bool _KEY_DPD_TIMER_SEC_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Iwlan.html#KEY_EPDG_ADDRESS_IP_TYPE_PREFERENCE_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_EPDG_ADDRESS_IP_TYPE_PREFERENCE_INT { get { if (!_KEY_EPDG_ADDRESS_IP_TYPE_PREFERENCE_INTReady) { _KEY_EPDG_ADDRESS_IP_TYPE_PREFERENCE_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_EPDG_ADDRESS_IP_TYPE_PREFERENCE_INT"); _KEY_EPDG_ADDRESS_IP_TYPE_PREFERENCE_INTReady = true; } return _KEY_EPDG_ADDRESS_IP_TYPE_PREFERENCE_INTContent; } }
            private static Java.Lang.String _KEY_EPDG_ADDRESS_IP_TYPE_PREFERENCE_INTContent = default;
            private static bool _KEY_EPDG_ADDRESS_IP_TYPE_PREFERENCE_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Iwlan.html#KEY_EPDG_ADDRESS_PRIORITY_INT_ARRAY"/>
            /// </summary>
            public static Java.Lang.String KEY_EPDG_ADDRESS_PRIORITY_INT_ARRAY { get { if (!_KEY_EPDG_ADDRESS_PRIORITY_INT_ARRAYReady) { _KEY_EPDG_ADDRESS_PRIORITY_INT_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_EPDG_ADDRESS_PRIORITY_INT_ARRAY"); _KEY_EPDG_ADDRESS_PRIORITY_INT_ARRAYReady = true; } return _KEY_EPDG_ADDRESS_PRIORITY_INT_ARRAYContent; } }
            private static Java.Lang.String _KEY_EPDG_ADDRESS_PRIORITY_INT_ARRAYContent = default;
            private static bool _KEY_EPDG_ADDRESS_PRIORITY_INT_ARRAYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Iwlan.html#KEY_EPDG_AUTHENTICATION_METHOD_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_EPDG_AUTHENTICATION_METHOD_INT { get { if (!_KEY_EPDG_AUTHENTICATION_METHOD_INTReady) { _KEY_EPDG_AUTHENTICATION_METHOD_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_EPDG_AUTHENTICATION_METHOD_INT"); _KEY_EPDG_AUTHENTICATION_METHOD_INTReady = true; } return _KEY_EPDG_AUTHENTICATION_METHOD_INTContent; } }
            private static Java.Lang.String _KEY_EPDG_AUTHENTICATION_METHOD_INTContent = default;
            private static bool _KEY_EPDG_AUTHENTICATION_METHOD_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Iwlan.html#KEY_EPDG_PCO_ID_IPV4_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_EPDG_PCO_ID_IPV4_INT { get { if (!_KEY_EPDG_PCO_ID_IPV4_INTReady) { _KEY_EPDG_PCO_ID_IPV4_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_EPDG_PCO_ID_IPV4_INT"); _KEY_EPDG_PCO_ID_IPV4_INTReady = true; } return _KEY_EPDG_PCO_ID_IPV4_INTContent; } }
            private static Java.Lang.String _KEY_EPDG_PCO_ID_IPV4_INTContent = default;
            private static bool _KEY_EPDG_PCO_ID_IPV4_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Iwlan.html#KEY_EPDG_PCO_ID_IPV6_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_EPDG_PCO_ID_IPV6_INT { get { if (!_KEY_EPDG_PCO_ID_IPV6_INTReady) { _KEY_EPDG_PCO_ID_IPV6_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_EPDG_PCO_ID_IPV6_INT"); _KEY_EPDG_PCO_ID_IPV6_INTReady = true; } return _KEY_EPDG_PCO_ID_IPV6_INTContent; } }
            private static Java.Lang.String _KEY_EPDG_PCO_ID_IPV6_INTContent = default;
            private static bool _KEY_EPDG_PCO_ID_IPV6_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Iwlan.html#KEY_EPDG_STATIC_ADDRESS_ROAMING_STRING"/>
            /// </summary>
            public static Java.Lang.String KEY_EPDG_STATIC_ADDRESS_ROAMING_STRING { get { if (!_KEY_EPDG_STATIC_ADDRESS_ROAMING_STRINGReady) { _KEY_EPDG_STATIC_ADDRESS_ROAMING_STRINGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_EPDG_STATIC_ADDRESS_ROAMING_STRING"); _KEY_EPDG_STATIC_ADDRESS_ROAMING_STRINGReady = true; } return _KEY_EPDG_STATIC_ADDRESS_ROAMING_STRINGContent; } }
            private static Java.Lang.String _KEY_EPDG_STATIC_ADDRESS_ROAMING_STRINGContent = default;
            private static bool _KEY_EPDG_STATIC_ADDRESS_ROAMING_STRINGReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Iwlan.html#KEY_EPDG_STATIC_ADDRESS_STRING"/>
            /// </summary>
            public static Java.Lang.String KEY_EPDG_STATIC_ADDRESS_STRING { get { if (!_KEY_EPDG_STATIC_ADDRESS_STRINGReady) { _KEY_EPDG_STATIC_ADDRESS_STRINGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_EPDG_STATIC_ADDRESS_STRING"); _KEY_EPDG_STATIC_ADDRESS_STRINGReady = true; } return _KEY_EPDG_STATIC_ADDRESS_STRINGContent; } }
            private static Java.Lang.String _KEY_EPDG_STATIC_ADDRESS_STRINGContent = default;
            private static bool _KEY_EPDG_STATIC_ADDRESS_STRINGReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Iwlan.html#KEY_IKE_LOCAL_ID_TYPE_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_IKE_LOCAL_ID_TYPE_INT { get { if (!_KEY_IKE_LOCAL_ID_TYPE_INTReady) { _KEY_IKE_LOCAL_ID_TYPE_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_IKE_LOCAL_ID_TYPE_INT"); _KEY_IKE_LOCAL_ID_TYPE_INTReady = true; } return _KEY_IKE_LOCAL_ID_TYPE_INTContent; } }
            private static Java.Lang.String _KEY_IKE_LOCAL_ID_TYPE_INTContent = default;
            private static bool _KEY_IKE_LOCAL_ID_TYPE_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Iwlan.html#KEY_IKE_REKEY_HARD_TIMER_SEC_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_IKE_REKEY_HARD_TIMER_SEC_INT { get { if (!_KEY_IKE_REKEY_HARD_TIMER_SEC_INTReady) { _KEY_IKE_REKEY_HARD_TIMER_SEC_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_IKE_REKEY_HARD_TIMER_SEC_INT"); _KEY_IKE_REKEY_HARD_TIMER_SEC_INTReady = true; } return _KEY_IKE_REKEY_HARD_TIMER_SEC_INTContent; } }
            private static Java.Lang.String _KEY_IKE_REKEY_HARD_TIMER_SEC_INTContent = default;
            private static bool _KEY_IKE_REKEY_HARD_TIMER_SEC_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Iwlan.html#KEY_IKE_REKEY_SOFT_TIMER_SEC_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_IKE_REKEY_SOFT_TIMER_SEC_INT { get { if (!_KEY_IKE_REKEY_SOFT_TIMER_SEC_INTReady) { _KEY_IKE_REKEY_SOFT_TIMER_SEC_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_IKE_REKEY_SOFT_TIMER_SEC_INT"); _KEY_IKE_REKEY_SOFT_TIMER_SEC_INTReady = true; } return _KEY_IKE_REKEY_SOFT_TIMER_SEC_INTContent; } }
            private static Java.Lang.String _KEY_IKE_REKEY_SOFT_TIMER_SEC_INTContent = default;
            private static bool _KEY_IKE_REKEY_SOFT_TIMER_SEC_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Iwlan.html#KEY_IKE_REMOTE_ID_TYPE_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_IKE_REMOTE_ID_TYPE_INT { get { if (!_KEY_IKE_REMOTE_ID_TYPE_INTReady) { _KEY_IKE_REMOTE_ID_TYPE_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_IKE_REMOTE_ID_TYPE_INT"); _KEY_IKE_REMOTE_ID_TYPE_INTReady = true; } return _KEY_IKE_REMOTE_ID_TYPE_INTContent; } }
            private static Java.Lang.String _KEY_IKE_REMOTE_ID_TYPE_INTContent = default;
            private static bool _KEY_IKE_REMOTE_ID_TYPE_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Iwlan.html#KEY_IKE_SESSION_AES_CBC_KEY_SIZE_INT_ARRAY"/>
            /// </summary>
            public static Java.Lang.String KEY_IKE_SESSION_AES_CBC_KEY_SIZE_INT_ARRAY { get { if (!_KEY_IKE_SESSION_AES_CBC_KEY_SIZE_INT_ARRAYReady) { _KEY_IKE_SESSION_AES_CBC_KEY_SIZE_INT_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_IKE_SESSION_AES_CBC_KEY_SIZE_INT_ARRAY"); _KEY_IKE_SESSION_AES_CBC_KEY_SIZE_INT_ARRAYReady = true; } return _KEY_IKE_SESSION_AES_CBC_KEY_SIZE_INT_ARRAYContent; } }
            private static Java.Lang.String _KEY_IKE_SESSION_AES_CBC_KEY_SIZE_INT_ARRAYContent = default;
            private static bool _KEY_IKE_SESSION_AES_CBC_KEY_SIZE_INT_ARRAYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Iwlan.html#KEY_IKE_SESSION_AES_CTR_KEY_SIZE_INT_ARRAY"/>
            /// </summary>
            public static Java.Lang.String KEY_IKE_SESSION_AES_CTR_KEY_SIZE_INT_ARRAY { get { if (!_KEY_IKE_SESSION_AES_CTR_KEY_SIZE_INT_ARRAYReady) { _KEY_IKE_SESSION_AES_CTR_KEY_SIZE_INT_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_IKE_SESSION_AES_CTR_KEY_SIZE_INT_ARRAY"); _KEY_IKE_SESSION_AES_CTR_KEY_SIZE_INT_ARRAYReady = true; } return _KEY_IKE_SESSION_AES_CTR_KEY_SIZE_INT_ARRAYContent; } }
            private static Java.Lang.String _KEY_IKE_SESSION_AES_CTR_KEY_SIZE_INT_ARRAYContent = default;
            private static bool _KEY_IKE_SESSION_AES_CTR_KEY_SIZE_INT_ARRAYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Iwlan.html#KEY_MAX_RETRIES_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_MAX_RETRIES_INT { get { if (!_KEY_MAX_RETRIES_INTReady) { _KEY_MAX_RETRIES_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_MAX_RETRIES_INT"); _KEY_MAX_RETRIES_INTReady = true; } return _KEY_MAX_RETRIES_INTContent; } }
            private static Java.Lang.String _KEY_MAX_RETRIES_INTContent = default;
            private static bool _KEY_MAX_RETRIES_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Iwlan.html#KEY_MCC_MNCS_STRING_ARRAY"/>
            /// </summary>
            public static Java.Lang.String KEY_MCC_MNCS_STRING_ARRAY { get { if (!_KEY_MCC_MNCS_STRING_ARRAYReady) { _KEY_MCC_MNCS_STRING_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_MCC_MNCS_STRING_ARRAY"); _KEY_MCC_MNCS_STRING_ARRAYReady = true; } return _KEY_MCC_MNCS_STRING_ARRAYContent; } }
            private static Java.Lang.String _KEY_MCC_MNCS_STRING_ARRAYContent = default;
            private static bool _KEY_MCC_MNCS_STRING_ARRAYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Iwlan.html#KEY_NATT_KEEP_ALIVE_TIMER_SEC_INT"/>
            /// </summary>
            public static Java.Lang.String KEY_NATT_KEEP_ALIVE_TIMER_SEC_INT { get { if (!_KEY_NATT_KEEP_ALIVE_TIMER_SEC_INTReady) { _KEY_NATT_KEEP_ALIVE_TIMER_SEC_INTContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_NATT_KEEP_ALIVE_TIMER_SEC_INT"); _KEY_NATT_KEEP_ALIVE_TIMER_SEC_INTReady = true; } return _KEY_NATT_KEEP_ALIVE_TIMER_SEC_INTContent; } }
            private static Java.Lang.String _KEY_NATT_KEEP_ALIVE_TIMER_SEC_INTContent = default;
            private static bool _KEY_NATT_KEEP_ALIVE_TIMER_SEC_INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Iwlan.html#KEY_PREFIX"/>
            /// </summary>
            public static Java.Lang.String KEY_PREFIX { get { if (!_KEY_PREFIXReady) { _KEY_PREFIXContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_PREFIX"); _KEY_PREFIXReady = true; } return _KEY_PREFIXContent; } }
            private static Java.Lang.String _KEY_PREFIXContent = default;
            private static bool _KEY_PREFIXReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Iwlan.html#KEY_RETRANSMIT_TIMER_MSEC_INT_ARRAY"/>
            /// </summary>
            public static Java.Lang.String KEY_RETRANSMIT_TIMER_MSEC_INT_ARRAY { get { if (!_KEY_RETRANSMIT_TIMER_MSEC_INT_ARRAYReady) { _KEY_RETRANSMIT_TIMER_MSEC_INT_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_RETRANSMIT_TIMER_MSEC_INT_ARRAY"); _KEY_RETRANSMIT_TIMER_MSEC_INT_ARRAYReady = true; } return _KEY_RETRANSMIT_TIMER_MSEC_INT_ARRAYContent; } }
            private static Java.Lang.String _KEY_RETRANSMIT_TIMER_MSEC_INT_ARRAYContent = default;
            private static bool _KEY_RETRANSMIT_TIMER_MSEC_INT_ARRAYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Iwlan.html#KEY_SUPPORTED_CHILD_SESSION_ENCRYPTION_ALGORITHMS_INT_ARRAY"/>
            /// </summary>
            public static Java.Lang.String KEY_SUPPORTED_CHILD_SESSION_ENCRYPTION_ALGORITHMS_INT_ARRAY { get { if (!_KEY_SUPPORTED_CHILD_SESSION_ENCRYPTION_ALGORITHMS_INT_ARRAYReady) { _KEY_SUPPORTED_CHILD_SESSION_ENCRYPTION_ALGORITHMS_INT_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SUPPORTED_CHILD_SESSION_ENCRYPTION_ALGORITHMS_INT_ARRAY"); _KEY_SUPPORTED_CHILD_SESSION_ENCRYPTION_ALGORITHMS_INT_ARRAYReady = true; } return _KEY_SUPPORTED_CHILD_SESSION_ENCRYPTION_ALGORITHMS_INT_ARRAYContent; } }
            private static Java.Lang.String _KEY_SUPPORTED_CHILD_SESSION_ENCRYPTION_ALGORITHMS_INT_ARRAYContent = default;
            private static bool _KEY_SUPPORTED_CHILD_SESSION_ENCRYPTION_ALGORITHMS_INT_ARRAYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Iwlan.html#KEY_SUPPORTED_IKE_SESSION_ENCRYPTION_ALGORITHMS_INT_ARRAY"/>
            /// </summary>
            public static Java.Lang.String KEY_SUPPORTED_IKE_SESSION_ENCRYPTION_ALGORITHMS_INT_ARRAY { get { if (!_KEY_SUPPORTED_IKE_SESSION_ENCRYPTION_ALGORITHMS_INT_ARRAYReady) { _KEY_SUPPORTED_IKE_SESSION_ENCRYPTION_ALGORITHMS_INT_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SUPPORTED_IKE_SESSION_ENCRYPTION_ALGORITHMS_INT_ARRAY"); _KEY_SUPPORTED_IKE_SESSION_ENCRYPTION_ALGORITHMS_INT_ARRAYReady = true; } return _KEY_SUPPORTED_IKE_SESSION_ENCRYPTION_ALGORITHMS_INT_ARRAYContent; } }
            private static Java.Lang.String _KEY_SUPPORTED_IKE_SESSION_ENCRYPTION_ALGORITHMS_INT_ARRAYContent = default;
            private static bool _KEY_SUPPORTED_IKE_SESSION_ENCRYPTION_ALGORITHMS_INT_ARRAYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Iwlan.html#KEY_SUPPORTED_INTEGRITY_ALGORITHMS_INT_ARRAY"/>
            /// </summary>
            public static Java.Lang.String KEY_SUPPORTED_INTEGRITY_ALGORITHMS_INT_ARRAY { get { if (!_KEY_SUPPORTED_INTEGRITY_ALGORITHMS_INT_ARRAYReady) { _KEY_SUPPORTED_INTEGRITY_ALGORITHMS_INT_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SUPPORTED_INTEGRITY_ALGORITHMS_INT_ARRAY"); _KEY_SUPPORTED_INTEGRITY_ALGORITHMS_INT_ARRAYReady = true; } return _KEY_SUPPORTED_INTEGRITY_ALGORITHMS_INT_ARRAYContent; } }
            private static Java.Lang.String _KEY_SUPPORTED_INTEGRITY_ALGORITHMS_INT_ARRAYContent = default;
            private static bool _KEY_SUPPORTED_INTEGRITY_ALGORITHMS_INT_ARRAYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Iwlan.html#KEY_SUPPORTED_PRF_ALGORITHMS_INT_ARRAY"/>
            /// </summary>
            public static Java.Lang.String KEY_SUPPORTED_PRF_ALGORITHMS_INT_ARRAY { get { if (!_KEY_SUPPORTED_PRF_ALGORITHMS_INT_ARRAYReady) { _KEY_SUPPORTED_PRF_ALGORITHMS_INT_ARRAYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SUPPORTED_PRF_ALGORITHMS_INT_ARRAY"); _KEY_SUPPORTED_PRF_ALGORITHMS_INT_ARRAYReady = true; } return _KEY_SUPPORTED_PRF_ALGORITHMS_INT_ARRAYContent; } }
            private static Java.Lang.String _KEY_SUPPORTED_PRF_ALGORITHMS_INT_ARRAYContent = default;
            private static bool _KEY_SUPPORTED_PRF_ALGORITHMS_INT_ARRAYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/CarrierConfigManager.Iwlan.html#KEY_SUPPORTS_EAP_AKA_FAST_REAUTH_BOOL"/>
            /// </summary>
            public static Java.Lang.String KEY_SUPPORTS_EAP_AKA_FAST_REAUTH_BOOL { get { if (!_KEY_SUPPORTS_EAP_AKA_FAST_REAUTH_BOOLReady) { _KEY_SUPPORTS_EAP_AKA_FAST_REAUTH_BOOLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "KEY_SUPPORTS_EAP_AKA_FAST_REAUTH_BOOL"); _KEY_SUPPORTS_EAP_AKA_FAST_REAUTH_BOOLReady = true; } return _KEY_SUPPORTS_EAP_AKA_FAST_REAUTH_BOOLContent; } }
            private static Java.Lang.String _KEY_SUPPORTS_EAP_AKA_FAST_REAUTH_BOOLContent = default;
            private static bool _KEY_SUPPORTS_EAP_AKA_FAST_REAUTH_BOOLReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}