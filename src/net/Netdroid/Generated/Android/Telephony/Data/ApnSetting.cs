/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.8.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Telephony.Data
{
    #region ApnSetting
    public partial class ApnSetting
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.html#CREATOR"/>
        /// </summary>
        public static Android.Os.Parcelable.Creator CREATOR { get { if (!_CREATORReady) { _CREATORContent = SGetField<Android.Os.Parcelable.Creator>(LocalBridgeClazz, "CREATOR"); _CREATORReady = true; } return _CREATORContent; } }
        private static Android.Os.Parcelable.Creator _CREATORContent = default;
        private static bool _CREATORReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.html#AUTH_TYPE_CHAP"/>
        /// </summary>
        public static int AUTH_TYPE_CHAP { get { if (!_AUTH_TYPE_CHAPReady) { _AUTH_TYPE_CHAPContent = SGetField<int>(LocalBridgeClazz, "AUTH_TYPE_CHAP"); _AUTH_TYPE_CHAPReady = true; } return _AUTH_TYPE_CHAPContent; } }
        private static int _AUTH_TYPE_CHAPContent = default;
        private static bool _AUTH_TYPE_CHAPReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.html#AUTH_TYPE_NONE"/>
        /// </summary>
        public static int AUTH_TYPE_NONE { get { if (!_AUTH_TYPE_NONEReady) { _AUTH_TYPE_NONEContent = SGetField<int>(LocalBridgeClazz, "AUTH_TYPE_NONE"); _AUTH_TYPE_NONEReady = true; } return _AUTH_TYPE_NONEContent; } }
        private static int _AUTH_TYPE_NONEContent = default;
        private static bool _AUTH_TYPE_NONEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.html#AUTH_TYPE_PAP"/>
        /// </summary>
        public static int AUTH_TYPE_PAP { get { if (!_AUTH_TYPE_PAPReady) { _AUTH_TYPE_PAPContent = SGetField<int>(LocalBridgeClazz, "AUTH_TYPE_PAP"); _AUTH_TYPE_PAPReady = true; } return _AUTH_TYPE_PAPContent; } }
        private static int _AUTH_TYPE_PAPContent = default;
        private static bool _AUTH_TYPE_PAPReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.html#AUTH_TYPE_PAP_OR_CHAP"/>
        /// </summary>
        public static int AUTH_TYPE_PAP_OR_CHAP { get { if (!_AUTH_TYPE_PAP_OR_CHAPReady) { _AUTH_TYPE_PAP_OR_CHAPContent = SGetField<int>(LocalBridgeClazz, "AUTH_TYPE_PAP_OR_CHAP"); _AUTH_TYPE_PAP_OR_CHAPReady = true; } return _AUTH_TYPE_PAP_OR_CHAPContent; } }
        private static int _AUTH_TYPE_PAP_OR_CHAPContent = default;
        private static bool _AUTH_TYPE_PAP_OR_CHAPReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.html#MVNO_TYPE_GID"/>
        /// </summary>
        public static int MVNO_TYPE_GID { get { if (!_MVNO_TYPE_GIDReady) { _MVNO_TYPE_GIDContent = SGetField<int>(LocalBridgeClazz, "MVNO_TYPE_GID"); _MVNO_TYPE_GIDReady = true; } return _MVNO_TYPE_GIDContent; } }
        private static int _MVNO_TYPE_GIDContent = default;
        private static bool _MVNO_TYPE_GIDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.html#MVNO_TYPE_ICCID"/>
        /// </summary>
        public static int MVNO_TYPE_ICCID { get { if (!_MVNO_TYPE_ICCIDReady) { _MVNO_TYPE_ICCIDContent = SGetField<int>(LocalBridgeClazz, "MVNO_TYPE_ICCID"); _MVNO_TYPE_ICCIDReady = true; } return _MVNO_TYPE_ICCIDContent; } }
        private static int _MVNO_TYPE_ICCIDContent = default;
        private static bool _MVNO_TYPE_ICCIDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.html#MVNO_TYPE_IMSI"/>
        /// </summary>
        public static int MVNO_TYPE_IMSI { get { if (!_MVNO_TYPE_IMSIReady) { _MVNO_TYPE_IMSIContent = SGetField<int>(LocalBridgeClazz, "MVNO_TYPE_IMSI"); _MVNO_TYPE_IMSIReady = true; } return _MVNO_TYPE_IMSIContent; } }
        private static int _MVNO_TYPE_IMSIContent = default;
        private static bool _MVNO_TYPE_IMSIReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.html#MVNO_TYPE_SPN"/>
        /// </summary>
        public static int MVNO_TYPE_SPN { get { if (!_MVNO_TYPE_SPNReady) { _MVNO_TYPE_SPNContent = SGetField<int>(LocalBridgeClazz, "MVNO_TYPE_SPN"); _MVNO_TYPE_SPNReady = true; } return _MVNO_TYPE_SPNContent; } }
        private static int _MVNO_TYPE_SPNContent = default;
        private static bool _MVNO_TYPE_SPNReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.html#PROTOCOL_IP"/>
        /// </summary>
        public static int PROTOCOL_IP { get { if (!_PROTOCOL_IPReady) { _PROTOCOL_IPContent = SGetField<int>(LocalBridgeClazz, "PROTOCOL_IP"); _PROTOCOL_IPReady = true; } return _PROTOCOL_IPContent; } }
        private static int _PROTOCOL_IPContent = default;
        private static bool _PROTOCOL_IPReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.html#PROTOCOL_IPV4V6"/>
        /// </summary>
        public static int PROTOCOL_IPV4V6 { get { if (!_PROTOCOL_IPV4V6Ready) { _PROTOCOL_IPV4V6Content = SGetField<int>(LocalBridgeClazz, "PROTOCOL_IPV4V6"); _PROTOCOL_IPV4V6Ready = true; } return _PROTOCOL_IPV4V6Content; } }
        private static int _PROTOCOL_IPV4V6Content = default;
        private static bool _PROTOCOL_IPV4V6Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.html#PROTOCOL_IPV6"/>
        /// </summary>
        public static int PROTOCOL_IPV6 { get { if (!_PROTOCOL_IPV6Ready) { _PROTOCOL_IPV6Content = SGetField<int>(LocalBridgeClazz, "PROTOCOL_IPV6"); _PROTOCOL_IPV6Ready = true; } return _PROTOCOL_IPV6Content; } }
        private static int _PROTOCOL_IPV6Content = default;
        private static bool _PROTOCOL_IPV6Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.html#PROTOCOL_NON_IP"/>
        /// </summary>
        public static int PROTOCOL_NON_IP { get { if (!_PROTOCOL_NON_IPReady) { _PROTOCOL_NON_IPContent = SGetField<int>(LocalBridgeClazz, "PROTOCOL_NON_IP"); _PROTOCOL_NON_IPReady = true; } return _PROTOCOL_NON_IPContent; } }
        private static int _PROTOCOL_NON_IPContent = default;
        private static bool _PROTOCOL_NON_IPReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.html#PROTOCOL_PPP"/>
        /// </summary>
        public static int PROTOCOL_PPP { get { if (!_PROTOCOL_PPPReady) { _PROTOCOL_PPPContent = SGetField<int>(LocalBridgeClazz, "PROTOCOL_PPP"); _PROTOCOL_PPPReady = true; } return _PROTOCOL_PPPContent; } }
        private static int _PROTOCOL_PPPContent = default;
        private static bool _PROTOCOL_PPPReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.html#PROTOCOL_UNSTRUCTURED"/>
        /// </summary>
        public static int PROTOCOL_UNSTRUCTURED { get { if (!_PROTOCOL_UNSTRUCTUREDReady) { _PROTOCOL_UNSTRUCTUREDContent = SGetField<int>(LocalBridgeClazz, "PROTOCOL_UNSTRUCTURED"); _PROTOCOL_UNSTRUCTUREDReady = true; } return _PROTOCOL_UNSTRUCTUREDContent; } }
        private static int _PROTOCOL_UNSTRUCTUREDContent = default;
        private static bool _PROTOCOL_UNSTRUCTUREDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.html#TYPE_BIP"/>
        /// </summary>
        public static int TYPE_BIP { get { if (!_TYPE_BIPReady) { _TYPE_BIPContent = SGetField<int>(LocalBridgeClazz, "TYPE_BIP"); _TYPE_BIPReady = true; } return _TYPE_BIPContent; } }
        private static int _TYPE_BIPContent = default;
        private static bool _TYPE_BIPReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.html#TYPE_CBS"/>
        /// </summary>
        public static int TYPE_CBS { get { if (!_TYPE_CBSReady) { _TYPE_CBSContent = SGetField<int>(LocalBridgeClazz, "TYPE_CBS"); _TYPE_CBSReady = true; } return _TYPE_CBSContent; } }
        private static int _TYPE_CBSContent = default;
        private static bool _TYPE_CBSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.html#TYPE_DEFAULT"/>
        /// </summary>
        public static int TYPE_DEFAULT { get { if (!_TYPE_DEFAULTReady) { _TYPE_DEFAULTContent = SGetField<int>(LocalBridgeClazz, "TYPE_DEFAULT"); _TYPE_DEFAULTReady = true; } return _TYPE_DEFAULTContent; } }
        private static int _TYPE_DEFAULTContent = default;
        private static bool _TYPE_DEFAULTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.html#TYPE_DUN"/>
        /// </summary>
        public static int TYPE_DUN { get { if (!_TYPE_DUNReady) { _TYPE_DUNContent = SGetField<int>(LocalBridgeClazz, "TYPE_DUN"); _TYPE_DUNReady = true; } return _TYPE_DUNContent; } }
        private static int _TYPE_DUNContent = default;
        private static bool _TYPE_DUNReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.html#TYPE_EMERGENCY"/>
        /// </summary>
        public static int TYPE_EMERGENCY { get { if (!_TYPE_EMERGENCYReady) { _TYPE_EMERGENCYContent = SGetField<int>(LocalBridgeClazz, "TYPE_EMERGENCY"); _TYPE_EMERGENCYReady = true; } return _TYPE_EMERGENCYContent; } }
        private static int _TYPE_EMERGENCYContent = default;
        private static bool _TYPE_EMERGENCYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.html#TYPE_ENTERPRISE"/>
        /// </summary>
        public static int TYPE_ENTERPRISE { get { if (!_TYPE_ENTERPRISEReady) { _TYPE_ENTERPRISEContent = SGetField<int>(LocalBridgeClazz, "TYPE_ENTERPRISE"); _TYPE_ENTERPRISEReady = true; } return _TYPE_ENTERPRISEContent; } }
        private static int _TYPE_ENTERPRISEContent = default;
        private static bool _TYPE_ENTERPRISEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.html#TYPE_FOTA"/>
        /// </summary>
        public static int TYPE_FOTA { get { if (!_TYPE_FOTAReady) { _TYPE_FOTAContent = SGetField<int>(LocalBridgeClazz, "TYPE_FOTA"); _TYPE_FOTAReady = true; } return _TYPE_FOTAContent; } }
        private static int _TYPE_FOTAContent = default;
        private static bool _TYPE_FOTAReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.html#TYPE_HIPRI"/>
        /// </summary>
        public static int TYPE_HIPRI { get { if (!_TYPE_HIPRIReady) { _TYPE_HIPRIContent = SGetField<int>(LocalBridgeClazz, "TYPE_HIPRI"); _TYPE_HIPRIReady = true; } return _TYPE_HIPRIContent; } }
        private static int _TYPE_HIPRIContent = default;
        private static bool _TYPE_HIPRIReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.html#TYPE_IA"/>
        /// </summary>
        public static int TYPE_IA { get { if (!_TYPE_IAReady) { _TYPE_IAContent = SGetField<int>(LocalBridgeClazz, "TYPE_IA"); _TYPE_IAReady = true; } return _TYPE_IAContent; } }
        private static int _TYPE_IAContent = default;
        private static bool _TYPE_IAReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.html#TYPE_IMS"/>
        /// </summary>
        public static int TYPE_IMS { get { if (!_TYPE_IMSReady) { _TYPE_IMSContent = SGetField<int>(LocalBridgeClazz, "TYPE_IMS"); _TYPE_IMSReady = true; } return _TYPE_IMSContent; } }
        private static int _TYPE_IMSContent = default;
        private static bool _TYPE_IMSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.html#TYPE_MCX"/>
        /// </summary>
        public static int TYPE_MCX { get { if (!_TYPE_MCXReady) { _TYPE_MCXContent = SGetField<int>(LocalBridgeClazz, "TYPE_MCX"); _TYPE_MCXReady = true; } return _TYPE_MCXContent; } }
        private static int _TYPE_MCXContent = default;
        private static bool _TYPE_MCXReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.html#TYPE_MMS"/>
        /// </summary>
        public static int TYPE_MMS { get { if (!_TYPE_MMSReady) { _TYPE_MMSContent = SGetField<int>(LocalBridgeClazz, "TYPE_MMS"); _TYPE_MMSReady = true; } return _TYPE_MMSContent; } }
        private static int _TYPE_MMSContent = default;
        private static bool _TYPE_MMSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.html#TYPE_RCS"/>
        /// </summary>
        public static int TYPE_RCS { get { if (!_TYPE_RCSReady) { _TYPE_RCSContent = SGetField<int>(LocalBridgeClazz, "TYPE_RCS"); _TYPE_RCSReady = true; } return _TYPE_RCSContent; } }
        private static int _TYPE_RCSContent = default;
        private static bool _TYPE_RCSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.html#TYPE_SUPL"/>
        /// </summary>
        public static int TYPE_SUPL { get { if (!_TYPE_SUPLReady) { _TYPE_SUPLContent = SGetField<int>(LocalBridgeClazz, "TYPE_SUPL"); _TYPE_SUPLReady = true; } return _TYPE_SUPLContent; } }
        private static int _TYPE_SUPLContent = default;
        private static bool _TYPE_SUPLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.html#TYPE_VSIM"/>
        /// </summary>
        public static int TYPE_VSIM { get { if (!_TYPE_VSIMReady) { _TYPE_VSIMContent = SGetField<int>(LocalBridgeClazz, "TYPE_VSIM"); _TYPE_VSIMReady = true; } return _TYPE_VSIMContent; } }
        private static int _TYPE_VSIMContent = default;
        private static bool _TYPE_VSIMReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.html#TYPE_XCAP"/>
        /// </summary>
        public static int TYPE_XCAP { get { if (!_TYPE_XCAPReady) { _TYPE_XCAPContent = SGetField<int>(LocalBridgeClazz, "TYPE_XCAP"); _TYPE_XCAPReady = true; } return _TYPE_XCAPContent; } }
        private static int _TYPE_XCAPContent = default;
        private static bool _TYPE_XCAPReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.html#getMmsc()"/>
        /// </summary>
        /// <returns><see cref="Android.Net.Uri"/></returns>
        public Android.Net.Uri GetMmsc()
        {
            return IExecuteWithSignature<Android.Net.Uri>("getMmsc", "()Landroid/net/Uri;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.html#isAlwaysOn()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsAlwaysOn()
        {
            return IExecuteWithSignature<bool>("isAlwaysOn", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.html#isEnabled()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsEnabled()
        {
            return IExecuteWithSignature<bool>("isEnabled", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.html#isPersistent()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsPersistent()
        {
            return IExecuteWithSignature<bool>("isPersistent", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.html#describeContents()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int DescribeContents()
        {
            return IExecuteWithSignature<int>("describeContents", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.html#getApnTypeBitmask()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetApnTypeBitmask()
        {
            return IExecuteWithSignature<int>("getApnTypeBitmask", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.html#getAuthType()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetAuthType()
        {
            return IExecuteWithSignature<int>("getAuthType", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.html#getCarrierId()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetCarrierId()
        {
            return IExecuteWithSignature<int>("getCarrierId", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.html#getId()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetId()
        {
            return IExecuteWithSignature<int>("getId", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.html#getMmsProxyPort()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetMmsProxyPort()
        {
            return IExecuteWithSignature<int>("getMmsProxyPort", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.html#getMtuV4()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetMtuV4()
        {
            return IExecuteWithSignature<int>("getMtuV4", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.html#getMtuV6()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetMtuV6()
        {
            return IExecuteWithSignature<int>("getMtuV6", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.html#getMvnoType()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetMvnoType()
        {
            return IExecuteWithSignature<int>("getMvnoType", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.html#getNetworkTypeBitmask()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetNetworkTypeBitmask()
        {
            return IExecuteWithSignature<int>("getNetworkTypeBitmask", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.html#getProfileId()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetProfileId()
        {
            return IExecuteWithSignature<int>("getProfileId", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.html#getProtocol()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetProtocol()
        {
            return IExecuteWithSignature<int>("getProtocol", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.html#getProxyPort()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetProxyPort()
        {
            return IExecuteWithSignature<int>("getProxyPort", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.html#getRoamingProtocol()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetRoamingProtocol()
        {
            return IExecuteWithSignature<int>("getRoamingProtocol", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.html#getApnName()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetApnName()
        {
            return IExecuteWithSignature<Java.Lang.String>("getApnName", "()Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.html#getEntryName()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetEntryName()
        {
            return IExecuteWithSignature<Java.Lang.String>("getEntryName", "()Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.html#getMmsProxyAddressAsString()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetMmsProxyAddressAsString()
        {
            return IExecuteWithSignature<Java.Lang.String>("getMmsProxyAddressAsString", "()Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.html#getOperatorNumeric()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetOperatorNumeric()
        {
            return IExecuteWithSignature<Java.Lang.String>("getOperatorNumeric", "()Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.html#getPassword()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetPassword()
        {
            return IExecuteWithSignature<Java.Lang.String>("getPassword", "()Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.html#getProxyAddressAsString()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetProxyAddressAsString()
        {
            return IExecuteWithSignature<Java.Lang.String>("getProxyAddressAsString", "()Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.html#getUser()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetUser()
        {
            return IExecuteWithSignature<Java.Lang.String>("getUser", "()Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.html#getMmsProxyAddress()"/>
        /// </summary>
        /// <returns><see cref="Java.Net.InetAddress"/></returns>
        [global::System.Obsolete()]
        public Java.Net.InetAddress GetMmsProxyAddress()
        {
            return IExecuteWithSignature<Java.Net.InetAddress>("getMmsProxyAddress", "()Ljava/net/InetAddress;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.html#getProxyAddress()"/>
        /// </summary>
        /// <returns><see cref="Java.Net.InetAddress"/></returns>
        [global::System.Obsolete()]
        public Java.Net.InetAddress GetProxyAddress()
        {
            return IExecuteWithSignature<Java.Net.InetAddress>("getProxyAddress", "()Ljava/net/InetAddress;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.html#writeToParcel(android.os.Parcel,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.Parcel"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void WriteToParcel(Android.Os.Parcel arg0, int arg1)
        {
            IExecute("writeToParcel", arg0, arg1);
        }

        #endregion

        #region Nested classes
        #region Builder
        public partial class Builder
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.Builder.html#build()"/>
            /// </summary>
            /// <returns><see cref="Android.Telephony.Data.ApnSetting"/></returns>
            public Android.Telephony.Data.ApnSetting Build()
            {
                return IExecuteWithSignature<Android.Telephony.Data.ApnSetting>("build", "()Landroid/telephony/data/ApnSetting;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.Builder.html#setAlwaysOn(boolean)"/>
            /// </summary>
            /// <param name="arg0"><see cref="bool"/></param>
            /// <returns><see cref="Android.Telephony.Data.ApnSetting.Builder"/></returns>
            public Android.Telephony.Data.ApnSetting.Builder SetAlwaysOn(bool arg0)
            {
                return IExecuteWithSignature<Android.Telephony.Data.ApnSetting.Builder>("setAlwaysOn", "(Z)Landroid/telephony/data/ApnSetting$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.Builder.html#setApnName(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Android.Telephony.Data.ApnSetting.Builder"/></returns>
            public Android.Telephony.Data.ApnSetting.Builder SetApnName(Java.Lang.String arg0)
            {
                return IExecuteWithSignature<Android.Telephony.Data.ApnSetting.Builder>("setApnName", "(Ljava/lang/String;)Landroid/telephony/data/ApnSetting$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.Builder.html#setApnTypeBitmask(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <returns><see cref="Android.Telephony.Data.ApnSetting.Builder"/></returns>
            public Android.Telephony.Data.ApnSetting.Builder SetApnTypeBitmask(int arg0)
            {
                return IExecuteWithSignature<Android.Telephony.Data.ApnSetting.Builder>("setApnTypeBitmask", "(I)Landroid/telephony/data/ApnSetting$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.Builder.html#setAuthType(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <returns><see cref="Android.Telephony.Data.ApnSetting.Builder"/></returns>
            public Android.Telephony.Data.ApnSetting.Builder SetAuthType(int arg0)
            {
                return IExecuteWithSignature<Android.Telephony.Data.ApnSetting.Builder>("setAuthType", "(I)Landroid/telephony/data/ApnSetting$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.Builder.html#setCarrierEnabled(boolean)"/>
            /// </summary>
            /// <param name="arg0"><see cref="bool"/></param>
            /// <returns><see cref="Android.Telephony.Data.ApnSetting.Builder"/></returns>
            public Android.Telephony.Data.ApnSetting.Builder SetCarrierEnabled(bool arg0)
            {
                return IExecuteWithSignature<Android.Telephony.Data.ApnSetting.Builder>("setCarrierEnabled", "(Z)Landroid/telephony/data/ApnSetting$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.Builder.html#setCarrierId(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <returns><see cref="Android.Telephony.Data.ApnSetting.Builder"/></returns>
            public Android.Telephony.Data.ApnSetting.Builder SetCarrierId(int arg0)
            {
                return IExecuteWithSignature<Android.Telephony.Data.ApnSetting.Builder>("setCarrierId", "(I)Landroid/telephony/data/ApnSetting$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.Builder.html#setEntryName(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Android.Telephony.Data.ApnSetting.Builder"/></returns>
            public Android.Telephony.Data.ApnSetting.Builder SetEntryName(Java.Lang.String arg0)
            {
                return IExecuteWithSignature<Android.Telephony.Data.ApnSetting.Builder>("setEntryName", "(Ljava/lang/String;)Landroid/telephony/data/ApnSetting$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.Builder.html#setMmsc(android.net.Uri)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Net.Uri"/></param>
            /// <returns><see cref="Android.Telephony.Data.ApnSetting.Builder"/></returns>
            public Android.Telephony.Data.ApnSetting.Builder SetMmsc(Android.Net.Uri arg0)
            {
                return IExecuteWithSignature<Android.Telephony.Data.ApnSetting.Builder>("setMmsc", "(Landroid/net/Uri;)Landroid/telephony/data/ApnSetting$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.Builder.html#setMmsProxyAddress(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Android.Telephony.Data.ApnSetting.Builder"/></returns>
            public Android.Telephony.Data.ApnSetting.Builder SetMmsProxyAddress(Java.Lang.String arg0)
            {
                return IExecuteWithSignature<Android.Telephony.Data.ApnSetting.Builder>("setMmsProxyAddress", "(Ljava/lang/String;)Landroid/telephony/data/ApnSetting$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.Builder.html#setMmsProxyAddress(java.net.InetAddress)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Net.InetAddress"/></param>
            /// <returns><see cref="Android.Telephony.Data.ApnSetting.Builder"/></returns>
            [global::System.Obsolete()]
            public Android.Telephony.Data.ApnSetting.Builder SetMmsProxyAddress(Java.Net.InetAddress arg0)
            {
                return IExecuteWithSignature<Android.Telephony.Data.ApnSetting.Builder>("setMmsProxyAddress", "(Ljava/net/InetAddress;)Landroid/telephony/data/ApnSetting$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.Builder.html#setMmsProxyPort(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <returns><see cref="Android.Telephony.Data.ApnSetting.Builder"/></returns>
            public Android.Telephony.Data.ApnSetting.Builder SetMmsProxyPort(int arg0)
            {
                return IExecuteWithSignature<Android.Telephony.Data.ApnSetting.Builder>("setMmsProxyPort", "(I)Landroid/telephony/data/ApnSetting$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.Builder.html#setMtuV4(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <returns><see cref="Android.Telephony.Data.ApnSetting.Builder"/></returns>
            public Android.Telephony.Data.ApnSetting.Builder SetMtuV4(int arg0)
            {
                return IExecuteWithSignature<Android.Telephony.Data.ApnSetting.Builder>("setMtuV4", "(I)Landroid/telephony/data/ApnSetting$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.Builder.html#setMtuV6(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <returns><see cref="Android.Telephony.Data.ApnSetting.Builder"/></returns>
            public Android.Telephony.Data.ApnSetting.Builder SetMtuV6(int arg0)
            {
                return IExecuteWithSignature<Android.Telephony.Data.ApnSetting.Builder>("setMtuV6", "(I)Landroid/telephony/data/ApnSetting$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.Builder.html#setMvnoType(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <returns><see cref="Android.Telephony.Data.ApnSetting.Builder"/></returns>
            public Android.Telephony.Data.ApnSetting.Builder SetMvnoType(int arg0)
            {
                return IExecuteWithSignature<Android.Telephony.Data.ApnSetting.Builder>("setMvnoType", "(I)Landroid/telephony/data/ApnSetting$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.Builder.html#setNetworkTypeBitmask(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <returns><see cref="Android.Telephony.Data.ApnSetting.Builder"/></returns>
            public Android.Telephony.Data.ApnSetting.Builder SetNetworkTypeBitmask(int arg0)
            {
                return IExecuteWithSignature<Android.Telephony.Data.ApnSetting.Builder>("setNetworkTypeBitmask", "(I)Landroid/telephony/data/ApnSetting$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.Builder.html#setOperatorNumeric(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Android.Telephony.Data.ApnSetting.Builder"/></returns>
            public Android.Telephony.Data.ApnSetting.Builder SetOperatorNumeric(Java.Lang.String arg0)
            {
                return IExecuteWithSignature<Android.Telephony.Data.ApnSetting.Builder>("setOperatorNumeric", "(Ljava/lang/String;)Landroid/telephony/data/ApnSetting$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.Builder.html#setPassword(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Android.Telephony.Data.ApnSetting.Builder"/></returns>
            public Android.Telephony.Data.ApnSetting.Builder SetPassword(Java.Lang.String arg0)
            {
                return IExecuteWithSignature<Android.Telephony.Data.ApnSetting.Builder>("setPassword", "(Ljava/lang/String;)Landroid/telephony/data/ApnSetting$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.Builder.html#setPersistent(boolean)"/>
            /// </summary>
            /// <param name="arg0"><see cref="bool"/></param>
            /// <returns><see cref="Android.Telephony.Data.ApnSetting.Builder"/></returns>
            public Android.Telephony.Data.ApnSetting.Builder SetPersistent(bool arg0)
            {
                return IExecuteWithSignature<Android.Telephony.Data.ApnSetting.Builder>("setPersistent", "(Z)Landroid/telephony/data/ApnSetting$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.Builder.html#setProfileId(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <returns><see cref="Android.Telephony.Data.ApnSetting.Builder"/></returns>
            public Android.Telephony.Data.ApnSetting.Builder SetProfileId(int arg0)
            {
                return IExecuteWithSignature<Android.Telephony.Data.ApnSetting.Builder>("setProfileId", "(I)Landroid/telephony/data/ApnSetting$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.Builder.html#setProtocol(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <returns><see cref="Android.Telephony.Data.ApnSetting.Builder"/></returns>
            public Android.Telephony.Data.ApnSetting.Builder SetProtocol(int arg0)
            {
                return IExecuteWithSignature<Android.Telephony.Data.ApnSetting.Builder>("setProtocol", "(I)Landroid/telephony/data/ApnSetting$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.Builder.html#setProxyAddress(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Android.Telephony.Data.ApnSetting.Builder"/></returns>
            public Android.Telephony.Data.ApnSetting.Builder SetProxyAddress(Java.Lang.String arg0)
            {
                return IExecuteWithSignature<Android.Telephony.Data.ApnSetting.Builder>("setProxyAddress", "(Ljava/lang/String;)Landroid/telephony/data/ApnSetting$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.Builder.html#setProxyAddress(java.net.InetAddress)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Net.InetAddress"/></param>
            /// <returns><see cref="Android.Telephony.Data.ApnSetting.Builder"/></returns>
            [global::System.Obsolete()]
            public Android.Telephony.Data.ApnSetting.Builder SetProxyAddress(Java.Net.InetAddress arg0)
            {
                return IExecuteWithSignature<Android.Telephony.Data.ApnSetting.Builder>("setProxyAddress", "(Ljava/net/InetAddress;)Landroid/telephony/data/ApnSetting$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.Builder.html#setProxyPort(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <returns><see cref="Android.Telephony.Data.ApnSetting.Builder"/></returns>
            public Android.Telephony.Data.ApnSetting.Builder SetProxyPort(int arg0)
            {
                return IExecuteWithSignature<Android.Telephony.Data.ApnSetting.Builder>("setProxyPort", "(I)Landroid/telephony/data/ApnSetting$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.Builder.html#setRoamingProtocol(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <returns><see cref="Android.Telephony.Data.ApnSetting.Builder"/></returns>
            public Android.Telephony.Data.ApnSetting.Builder SetRoamingProtocol(int arg0)
            {
                return IExecuteWithSignature<Android.Telephony.Data.ApnSetting.Builder>("setRoamingProtocol", "(I)Landroid/telephony/data/ApnSetting$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/data/ApnSetting.Builder.html#setUser(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Android.Telephony.Data.ApnSetting.Builder"/></returns>
            public Android.Telephony.Data.ApnSetting.Builder SetUser(Java.Lang.String arg0)
            {
                return IExecuteWithSignature<Android.Telephony.Data.ApnSetting.Builder>("setUser", "(Ljava/lang/String;)Landroid/telephony/data/ApnSetting$Builder;", arg0);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}