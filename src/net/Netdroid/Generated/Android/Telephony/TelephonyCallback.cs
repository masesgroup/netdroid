/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.1.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Telephony
{
    #region TelephonyCallback
    public partial class TelephonyCallback
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods

        #endregion

        #region Nested classes
        #region ActiveDataSubscriptionIdListener
        public partial class ActiveDataSubscriptionIdListener
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// Handlers initializer for <see cref="ActiveDataSubscriptionIdListener"/>
            /// </summary>
            protected virtual void InitializeHandlers()
            {
                AddEventHandler("onActiveDataSubscriptionIdChanged", new System.EventHandler<CLRListenerEventArgs<CLREventData<int>>>(OnActiveDataSubscriptionIdChangedEventHandler));

            }

            /// <summary>
            /// Handler for <see href="https://developer.android.com/reference/android/telephony/TelephonyCallback.ActiveDataSubscriptionIdListener.html#onActiveDataSubscriptionIdChanged(int)"/>
            /// </summary>
            /// <remarks>If <see cref="OnOnActiveDataSubscriptionIdChanged"/> has a value it takes precedence over corresponding class method</remarks>
            public System.Action<int> OnOnActiveDataSubscriptionIdChanged { get; set; } = null;

            void OnActiveDataSubscriptionIdChangedEventHandler(object sender, CLRListenerEventArgs<CLREventData<int>> data)
            {
                var methodToExecute = (OnOnActiveDataSubscriptionIdChanged != null) ? OnOnActiveDataSubscriptionIdChanged : OnActiveDataSubscriptionIdChanged;
                methodToExecute.Invoke(data.EventData.TypedEventData);
            }

            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/TelephonyCallback.ActiveDataSubscriptionIdListener.html#onActiveDataSubscriptionIdChanged(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            public virtual void OnActiveDataSubscriptionIdChanged(int arg0)
            {
                
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region ActiveDataSubscriptionIdListenerDirect
        public partial class ActiveDataSubscriptionIdListenerDirect
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/TelephonyCallback.ActiveDataSubscriptionIdListener.html#onActiveDataSubscriptionIdChanged(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            public override void OnActiveDataSubscriptionIdChanged(int arg0)
            {
                IExecuteWithSignature("onActiveDataSubscriptionIdChanged", "(I)V", arg0);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region BarringInfoListener
        public partial class BarringInfoListener
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// Handlers initializer for <see cref="BarringInfoListener"/>
            /// </summary>
            protected virtual void InitializeHandlers()
            {
                AddEventHandler("onBarringInfoChanged", new System.EventHandler<CLRListenerEventArgs<CLREventData<Android.Telephony.BarringInfo>>>(OnBarringInfoChangedEventHandler));

            }

            /// <summary>
            /// Handler for <see href="https://developer.android.com/reference/android/telephony/TelephonyCallback.BarringInfoListener.html#onBarringInfoChanged(android.telephony.BarringInfo)"/>
            /// </summary>
            /// <remarks>If <see cref="OnOnBarringInfoChanged"/> has a value it takes precedence over corresponding class method</remarks>
            public System.Action<Android.Telephony.BarringInfo> OnOnBarringInfoChanged { get; set; } = null;

            void OnBarringInfoChangedEventHandler(object sender, CLRListenerEventArgs<CLREventData<Android.Telephony.BarringInfo>> data)
            {
                var methodToExecute = (OnOnBarringInfoChanged != null) ? OnOnBarringInfoChanged : OnBarringInfoChanged;
                methodToExecute.Invoke(data.EventData.TypedEventData);
            }

            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/TelephonyCallback.BarringInfoListener.html#onBarringInfoChanged(android.telephony.BarringInfo)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Telephony.BarringInfo"/></param>
            public virtual void OnBarringInfoChanged(Android.Telephony.BarringInfo arg0)
            {
                
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region BarringInfoListenerDirect
        public partial class BarringInfoListenerDirect
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/TelephonyCallback.BarringInfoListener.html#onBarringInfoChanged(android.telephony.BarringInfo)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Telephony.BarringInfo"/></param>
            public override void OnBarringInfoChanged(Android.Telephony.BarringInfo arg0)
            {
                IExecuteWithSignature("onBarringInfoChanged", "(Landroid/telephony/BarringInfo;)V", arg0);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region CallDisconnectCauseListener
        public partial class CallDisconnectCauseListener
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// Handlers initializer for <see cref="CallDisconnectCauseListener"/>
            /// </summary>
            protected virtual void InitializeHandlers()
            {
                AddEventHandler("onCallDisconnectCauseChanged", new System.EventHandler<CLRListenerEventArgs<CLREventData<int>>>(OnCallDisconnectCauseChangedEventHandler));

            }

            /// <summary>
            /// Handler for <see href="https://developer.android.com/reference/android/telephony/TelephonyCallback.CallDisconnectCauseListener.html#onCallDisconnectCauseChanged(int,int)"/>
            /// </summary>
            /// <remarks>If <see cref="OnOnCallDisconnectCauseChanged"/> has a value it takes precedence over corresponding class method</remarks>
            public System.Action<int, int> OnOnCallDisconnectCauseChanged { get; set; } = null;

            void OnCallDisconnectCauseChangedEventHandler(object sender, CLRListenerEventArgs<CLREventData<int>> data)
            {
                var methodToExecute = (OnOnCallDisconnectCauseChanged != null) ? OnOnCallDisconnectCauseChanged : OnCallDisconnectCauseChanged;
                methodToExecute.Invoke(data.EventData.TypedEventData, data.EventData.GetAt<int>(0));
            }

            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/TelephonyCallback.CallDisconnectCauseListener.html#onCallDisconnectCauseChanged(int,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            public virtual void OnCallDisconnectCauseChanged(int arg0, int arg1)
            {
                
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region CallDisconnectCauseListenerDirect
        public partial class CallDisconnectCauseListenerDirect
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/TelephonyCallback.CallDisconnectCauseListener.html#onCallDisconnectCauseChanged(int,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            public override void OnCallDisconnectCauseChanged(int arg0, int arg1)
            {
                IExecute("onCallDisconnectCauseChanged", arg0, arg1);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region CallForwardingIndicatorListener
        public partial class CallForwardingIndicatorListener
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// Handlers initializer for <see cref="CallForwardingIndicatorListener"/>
            /// </summary>
            protected virtual void InitializeHandlers()
            {
                AddEventHandler("onCallForwardingIndicatorChanged", new System.EventHandler<CLRListenerEventArgs<CLREventData<bool>>>(OnCallForwardingIndicatorChangedEventHandler));

            }

            /// <summary>
            /// Handler for <see href="https://developer.android.com/reference/android/telephony/TelephonyCallback.CallForwardingIndicatorListener.html#onCallForwardingIndicatorChanged(boolean)"/>
            /// </summary>
            /// <remarks>If <see cref="OnOnCallForwardingIndicatorChanged"/> has a value it takes precedence over corresponding class method</remarks>
            public System.Action<bool> OnOnCallForwardingIndicatorChanged { get; set; } = null;

            void OnCallForwardingIndicatorChangedEventHandler(object sender, CLRListenerEventArgs<CLREventData<bool>> data)
            {
                var methodToExecute = (OnOnCallForwardingIndicatorChanged != null) ? OnOnCallForwardingIndicatorChanged : OnCallForwardingIndicatorChanged;
                methodToExecute.Invoke(data.EventData.TypedEventData);
            }

            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/TelephonyCallback.CallForwardingIndicatorListener.html#onCallForwardingIndicatorChanged(boolean)"/>
            /// </summary>
            /// <param name="arg0"><see cref="bool"/></param>
            public virtual void OnCallForwardingIndicatorChanged(bool arg0)
            {
                
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region CallForwardingIndicatorListenerDirect
        public partial class CallForwardingIndicatorListenerDirect
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/TelephonyCallback.CallForwardingIndicatorListener.html#onCallForwardingIndicatorChanged(boolean)"/>
            /// </summary>
            /// <param name="arg0"><see cref="bool"/></param>
            public override void OnCallForwardingIndicatorChanged(bool arg0)
            {
                IExecuteWithSignature("onCallForwardingIndicatorChanged", "(Z)V", arg0);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region CallStateListener
        public partial class CallStateListener
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// Handlers initializer for <see cref="CallStateListener"/>
            /// </summary>
            protected virtual void InitializeHandlers()
            {
                AddEventHandler("onCallStateChanged", new System.EventHandler<CLRListenerEventArgs<CLREventData<int>>>(OnCallStateChangedEventHandler));

            }

            /// <summary>
            /// Handler for <see href="https://developer.android.com/reference/android/telephony/TelephonyCallback.CallStateListener.html#onCallStateChanged(int)"/>
            /// </summary>
            /// <remarks>If <see cref="OnOnCallStateChanged"/> has a value it takes precedence over corresponding class method</remarks>
            public System.Action<int> OnOnCallStateChanged { get; set; } = null;

            void OnCallStateChangedEventHandler(object sender, CLRListenerEventArgs<CLREventData<int>> data)
            {
                var methodToExecute = (OnOnCallStateChanged != null) ? OnOnCallStateChanged : OnCallStateChanged;
                methodToExecute.Invoke(data.EventData.TypedEventData);
            }

            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/TelephonyCallback.CallStateListener.html#onCallStateChanged(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            public virtual void OnCallStateChanged(int arg0)
            {
                
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region CallStateListenerDirect
        public partial class CallStateListenerDirect
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/TelephonyCallback.CallStateListener.html#onCallStateChanged(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            public override void OnCallStateChanged(int arg0)
            {
                IExecuteWithSignature("onCallStateChanged", "(I)V", arg0);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region CarrierNetworkListener
        public partial class CarrierNetworkListener
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// Handlers initializer for <see cref="CarrierNetworkListener"/>
            /// </summary>
            protected virtual void InitializeHandlers()
            {
                AddEventHandler("onCarrierNetworkChange", new System.EventHandler<CLRListenerEventArgs<CLREventData<bool>>>(OnCarrierNetworkChangeEventHandler));

            }

            /// <summary>
            /// Handler for <see href="https://developer.android.com/reference/android/telephony/TelephonyCallback.CarrierNetworkListener.html#onCarrierNetworkChange(boolean)"/>
            /// </summary>
            /// <remarks>If <see cref="OnOnCarrierNetworkChange"/> has a value it takes precedence over corresponding class method</remarks>
            public System.Action<bool> OnOnCarrierNetworkChange { get; set; } = null;

            void OnCarrierNetworkChangeEventHandler(object sender, CLRListenerEventArgs<CLREventData<bool>> data)
            {
                var methodToExecute = (OnOnCarrierNetworkChange != null) ? OnOnCarrierNetworkChange : OnCarrierNetworkChange;
                methodToExecute.Invoke(data.EventData.TypedEventData);
            }

            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/TelephonyCallback.CarrierNetworkListener.html#onCarrierNetworkChange(boolean)"/>
            /// </summary>
            /// <param name="arg0"><see cref="bool"/></param>
            public virtual void OnCarrierNetworkChange(bool arg0)
            {
                
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region CarrierNetworkListenerDirect
        public partial class CarrierNetworkListenerDirect
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/TelephonyCallback.CarrierNetworkListener.html#onCarrierNetworkChange(boolean)"/>
            /// </summary>
            /// <param name="arg0"><see cref="bool"/></param>
            public override void OnCarrierNetworkChange(bool arg0)
            {
                IExecuteWithSignature("onCarrierNetworkChange", "(Z)V", arg0);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region CellInfoListener
        public partial class CellInfoListener
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// Handlers initializer for <see cref="CellInfoListener"/>
            /// </summary>
            protected virtual void InitializeHandlers()
            {
                AddEventHandler("onCellInfoChanged", new System.EventHandler<CLRListenerEventArgs<CLREventData<Java.Util.List<Android.Telephony.CellInfo>>>>(OnCellInfoChangedEventHandler));

            }

            /// <summary>
            /// Handler for <see href="https://developer.android.com/reference/android/telephony/TelephonyCallback.CellInfoListener.html#onCellInfoChanged(java.util.List)"/>
            /// </summary>
            /// <remarks>If <see cref="OnOnCellInfoChanged"/> has a value it takes precedence over corresponding class method</remarks>
            public System.Action<Java.Util.List<Android.Telephony.CellInfo>> OnOnCellInfoChanged { get; set; } = null;

            void OnCellInfoChangedEventHandler(object sender, CLRListenerEventArgs<CLREventData<Java.Util.List<Android.Telephony.CellInfo>>> data)
            {
                var methodToExecute = (OnOnCellInfoChanged != null) ? OnOnCellInfoChanged : OnCellInfoChanged;
                methodToExecute.Invoke(data.EventData.TypedEventData);
            }

            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/TelephonyCallback.CellInfoListener.html#onCellInfoChanged(java.util.List)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Util.List"/></param>
            public virtual void OnCellInfoChanged(Java.Util.List<Android.Telephony.CellInfo> arg0)
            {
                
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region CellInfoListenerDirect
        public partial class CellInfoListenerDirect
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/TelephonyCallback.CellInfoListener.html#onCellInfoChanged(java.util.List)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Util.List"/></param>
            public override void OnCellInfoChanged(Java.Util.List<Android.Telephony.CellInfo> arg0)
            {
                IExecuteWithSignature("onCellInfoChanged", "(Ljava/util/List;)V", arg0);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region CellLocationListener
        public partial class CellLocationListener
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// Handlers initializer for <see cref="CellLocationListener"/>
            /// </summary>
            protected virtual void InitializeHandlers()
            {

            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region CellLocationListenerDirect
        public partial class CellLocationListenerDirect
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region DataActivationStateListener
        public partial class DataActivationStateListener
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// Handlers initializer for <see cref="DataActivationStateListener"/>
            /// </summary>
            protected virtual void InitializeHandlers()
            {
                AddEventHandler("onDataActivationStateChanged", new System.EventHandler<CLRListenerEventArgs<CLREventData<int>>>(OnDataActivationStateChangedEventHandler));

            }

            /// <summary>
            /// Handler for <see href="https://developer.android.com/reference/android/telephony/TelephonyCallback.DataActivationStateListener.html#onDataActivationStateChanged(int)"/>
            /// </summary>
            /// <remarks>If <see cref="OnOnDataActivationStateChanged"/> has a value it takes precedence over corresponding class method</remarks>
            public System.Action<int> OnOnDataActivationStateChanged { get; set; } = null;

            void OnDataActivationStateChangedEventHandler(object sender, CLRListenerEventArgs<CLREventData<int>> data)
            {
                var methodToExecute = (OnOnDataActivationStateChanged != null) ? OnOnDataActivationStateChanged : OnDataActivationStateChanged;
                methodToExecute.Invoke(data.EventData.TypedEventData);
            }

            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/TelephonyCallback.DataActivationStateListener.html#onDataActivationStateChanged(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            public virtual void OnDataActivationStateChanged(int arg0)
            {
                
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region DataActivationStateListenerDirect
        public partial class DataActivationStateListenerDirect
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/TelephonyCallback.DataActivationStateListener.html#onDataActivationStateChanged(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            public override void OnDataActivationStateChanged(int arg0)
            {
                IExecuteWithSignature("onDataActivationStateChanged", "(I)V", arg0);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region DataActivityListener
        public partial class DataActivityListener
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// Handlers initializer for <see cref="DataActivityListener"/>
            /// </summary>
            protected virtual void InitializeHandlers()
            {
                AddEventHandler("onDataActivity", new System.EventHandler<CLRListenerEventArgs<CLREventData<int>>>(OnDataActivityEventHandler));

            }

            /// <summary>
            /// Handler for <see href="https://developer.android.com/reference/android/telephony/TelephonyCallback.DataActivityListener.html#onDataActivity(int)"/>
            /// </summary>
            /// <remarks>If <see cref="OnOnDataActivity"/> has a value it takes precedence over corresponding class method</remarks>
            public System.Action<int> OnOnDataActivity { get; set; } = null;

            void OnDataActivityEventHandler(object sender, CLRListenerEventArgs<CLREventData<int>> data)
            {
                var methodToExecute = (OnOnDataActivity != null) ? OnOnDataActivity : OnDataActivity;
                methodToExecute.Invoke(data.EventData.TypedEventData);
            }

            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/TelephonyCallback.DataActivityListener.html#onDataActivity(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            public virtual void OnDataActivity(int arg0)
            {
                
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region DataActivityListenerDirect
        public partial class DataActivityListenerDirect
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/TelephonyCallback.DataActivityListener.html#onDataActivity(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            public override void OnDataActivity(int arg0)
            {
                IExecuteWithSignature("onDataActivity", "(I)V", arg0);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region DataConnectionStateListener
        public partial class DataConnectionStateListener
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// Handlers initializer for <see cref="DataConnectionStateListener"/>
            /// </summary>
            protected virtual void InitializeHandlers()
            {
                AddEventHandler("onDataConnectionStateChanged", new System.EventHandler<CLRListenerEventArgs<CLREventData<int>>>(OnDataConnectionStateChangedEventHandler));

            }

            /// <summary>
            /// Handler for <see href="https://developer.android.com/reference/android/telephony/TelephonyCallback.DataConnectionStateListener.html#onDataConnectionStateChanged(int,int)"/>
            /// </summary>
            /// <remarks>If <see cref="OnOnDataConnectionStateChanged"/> has a value it takes precedence over corresponding class method</remarks>
            public System.Action<int, int> OnOnDataConnectionStateChanged { get; set; } = null;

            void OnDataConnectionStateChangedEventHandler(object sender, CLRListenerEventArgs<CLREventData<int>> data)
            {
                var methodToExecute = (OnOnDataConnectionStateChanged != null) ? OnOnDataConnectionStateChanged : OnDataConnectionStateChanged;
                methodToExecute.Invoke(data.EventData.TypedEventData, data.EventData.GetAt<int>(0));
            }

            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/TelephonyCallback.DataConnectionStateListener.html#onDataConnectionStateChanged(int,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            public virtual void OnDataConnectionStateChanged(int arg0, int arg1)
            {
                
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region DataConnectionStateListenerDirect
        public partial class DataConnectionStateListenerDirect
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/TelephonyCallback.DataConnectionStateListener.html#onDataConnectionStateChanged(int,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            public override void OnDataConnectionStateChanged(int arg0, int arg1)
            {
                IExecute("onDataConnectionStateChanged", arg0, arg1);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region DisplayInfoListener
        public partial class DisplayInfoListener
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// Handlers initializer for <see cref="DisplayInfoListener"/>
            /// </summary>
            protected virtual void InitializeHandlers()
            {
                AddEventHandler("onDisplayInfoChanged", new System.EventHandler<CLRListenerEventArgs<CLREventData<Android.Telephony.TelephonyDisplayInfo>>>(OnDisplayInfoChangedEventHandler));

            }

            /// <summary>
            /// Handler for <see href="https://developer.android.com/reference/android/telephony/TelephonyCallback.DisplayInfoListener.html#onDisplayInfoChanged(android.telephony.TelephonyDisplayInfo)"/>
            /// </summary>
            /// <remarks>If <see cref="OnOnDisplayInfoChanged"/> has a value it takes precedence over corresponding class method</remarks>
            public System.Action<Android.Telephony.TelephonyDisplayInfo> OnOnDisplayInfoChanged { get; set; } = null;

            void OnDisplayInfoChangedEventHandler(object sender, CLRListenerEventArgs<CLREventData<Android.Telephony.TelephonyDisplayInfo>> data)
            {
                var methodToExecute = (OnOnDisplayInfoChanged != null) ? OnOnDisplayInfoChanged : OnDisplayInfoChanged;
                methodToExecute.Invoke(data.EventData.TypedEventData);
            }

            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/TelephonyCallback.DisplayInfoListener.html#onDisplayInfoChanged(android.telephony.TelephonyDisplayInfo)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Telephony.TelephonyDisplayInfo"/></param>
            public virtual void OnDisplayInfoChanged(Android.Telephony.TelephonyDisplayInfo arg0)
            {
                
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region DisplayInfoListenerDirect
        public partial class DisplayInfoListenerDirect
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/TelephonyCallback.DisplayInfoListener.html#onDisplayInfoChanged(android.telephony.TelephonyDisplayInfo)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Telephony.TelephonyDisplayInfo"/></param>
            public override void OnDisplayInfoChanged(Android.Telephony.TelephonyDisplayInfo arg0)
            {
                IExecuteWithSignature("onDisplayInfoChanged", "(Landroid/telephony/TelephonyDisplayInfo;)V", arg0);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region EmergencyNumberListListener
        public partial class EmergencyNumberListListener
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// Handlers initializer for <see cref="EmergencyNumberListListener"/>
            /// </summary>
            protected virtual void InitializeHandlers()
            {
                AddEventHandler("onEmergencyNumberListChanged", new System.EventHandler<CLRListenerEventArgs<CLREventData<Java.Util.Map<Java.Lang.Integer, Java.Util.List<Android.Telephony.Emergency.EmergencyNumber>>>>>(OnEmergencyNumberListChangedEventHandler));

            }

            /// <summary>
            /// Handler for <see href="https://developer.android.com/reference/android/telephony/TelephonyCallback.EmergencyNumberListListener.html#onEmergencyNumberListChanged(java.util.Map)"/>
            /// </summary>
            /// <remarks>If <see cref="OnOnEmergencyNumberListChanged"/> has a value it takes precedence over corresponding class method</remarks>
            public System.Action<Java.Util.Map<Java.Lang.Integer, Java.Util.List<Android.Telephony.Emergency.EmergencyNumber>>> OnOnEmergencyNumberListChanged { get; set; } = null;

            void OnEmergencyNumberListChangedEventHandler(object sender, CLRListenerEventArgs<CLREventData<Java.Util.Map<Java.Lang.Integer, Java.Util.List<Android.Telephony.Emergency.EmergencyNumber>>>> data)
            {
                var methodToExecute = (OnOnEmergencyNumberListChanged != null) ? OnOnEmergencyNumberListChanged : OnEmergencyNumberListChanged;
                methodToExecute.Invoke(data.EventData.TypedEventData);
            }

            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/TelephonyCallback.EmergencyNumberListListener.html#onEmergencyNumberListChanged(java.util.Map)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Util.Map"/></param>
            public virtual void OnEmergencyNumberListChanged(Java.Util.Map<Java.Lang.Integer, Java.Util.List<Android.Telephony.Emergency.EmergencyNumber>> arg0)
            {
                
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region EmergencyNumberListListenerDirect
        public partial class EmergencyNumberListListenerDirect
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/TelephonyCallback.EmergencyNumberListListener.html#onEmergencyNumberListChanged(java.util.Map)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Util.Map"/></param>
            public override void OnEmergencyNumberListChanged(Java.Util.Map<Java.Lang.Integer, Java.Util.List<Android.Telephony.Emergency.EmergencyNumber>> arg0)
            {
                IExecuteWithSignature("onEmergencyNumberListChanged", "(Ljava/util/Map;)V", arg0);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region ImsCallDisconnectCauseListener
        public partial class ImsCallDisconnectCauseListener
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// Handlers initializer for <see cref="ImsCallDisconnectCauseListener"/>
            /// </summary>
            protected virtual void InitializeHandlers()
            {
                AddEventHandler("onImsCallDisconnectCauseChanged", new System.EventHandler<CLRListenerEventArgs<CLREventData<Android.Telephony.Ims.ImsReasonInfo>>>(OnImsCallDisconnectCauseChangedEventHandler));

            }

            /// <summary>
            /// Handler for <see href="https://developer.android.com/reference/android/telephony/TelephonyCallback.ImsCallDisconnectCauseListener.html#onImsCallDisconnectCauseChanged(android.telephony.ims.ImsReasonInfo)"/>
            /// </summary>
            /// <remarks>If <see cref="OnOnImsCallDisconnectCauseChanged"/> has a value it takes precedence over corresponding class method</remarks>
            public System.Action<Android.Telephony.Ims.ImsReasonInfo> OnOnImsCallDisconnectCauseChanged { get; set; } = null;

            void OnImsCallDisconnectCauseChangedEventHandler(object sender, CLRListenerEventArgs<CLREventData<Android.Telephony.Ims.ImsReasonInfo>> data)
            {
                var methodToExecute = (OnOnImsCallDisconnectCauseChanged != null) ? OnOnImsCallDisconnectCauseChanged : OnImsCallDisconnectCauseChanged;
                methodToExecute.Invoke(data.EventData.TypedEventData);
            }

            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/TelephonyCallback.ImsCallDisconnectCauseListener.html#onImsCallDisconnectCauseChanged(android.telephony.ims.ImsReasonInfo)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Telephony.Ims.ImsReasonInfo"/></param>
            public virtual void OnImsCallDisconnectCauseChanged(Android.Telephony.Ims.ImsReasonInfo arg0)
            {
                
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region ImsCallDisconnectCauseListenerDirect
        public partial class ImsCallDisconnectCauseListenerDirect
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/TelephonyCallback.ImsCallDisconnectCauseListener.html#onImsCallDisconnectCauseChanged(android.telephony.ims.ImsReasonInfo)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Telephony.Ims.ImsReasonInfo"/></param>
            public override void OnImsCallDisconnectCauseChanged(Android.Telephony.Ims.ImsReasonInfo arg0)
            {
                IExecuteWithSignature("onImsCallDisconnectCauseChanged", "(Landroid/telephony/ims/ImsReasonInfo;)V", arg0);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region MessageWaitingIndicatorListener
        public partial class MessageWaitingIndicatorListener
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// Handlers initializer for <see cref="MessageWaitingIndicatorListener"/>
            /// </summary>
            protected virtual void InitializeHandlers()
            {
                AddEventHandler("onMessageWaitingIndicatorChanged", new System.EventHandler<CLRListenerEventArgs<CLREventData<bool>>>(OnMessageWaitingIndicatorChangedEventHandler));

            }

            /// <summary>
            /// Handler for <see href="https://developer.android.com/reference/android/telephony/TelephonyCallback.MessageWaitingIndicatorListener.html#onMessageWaitingIndicatorChanged(boolean)"/>
            /// </summary>
            /// <remarks>If <see cref="OnOnMessageWaitingIndicatorChanged"/> has a value it takes precedence over corresponding class method</remarks>
            public System.Action<bool> OnOnMessageWaitingIndicatorChanged { get; set; } = null;

            void OnMessageWaitingIndicatorChangedEventHandler(object sender, CLRListenerEventArgs<CLREventData<bool>> data)
            {
                var methodToExecute = (OnOnMessageWaitingIndicatorChanged != null) ? OnOnMessageWaitingIndicatorChanged : OnMessageWaitingIndicatorChanged;
                methodToExecute.Invoke(data.EventData.TypedEventData);
            }

            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/TelephonyCallback.MessageWaitingIndicatorListener.html#onMessageWaitingIndicatorChanged(boolean)"/>
            /// </summary>
            /// <param name="arg0"><see cref="bool"/></param>
            public virtual void OnMessageWaitingIndicatorChanged(bool arg0)
            {
                
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region MessageWaitingIndicatorListenerDirect
        public partial class MessageWaitingIndicatorListenerDirect
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/TelephonyCallback.MessageWaitingIndicatorListener.html#onMessageWaitingIndicatorChanged(boolean)"/>
            /// </summary>
            /// <param name="arg0"><see cref="bool"/></param>
            public override void OnMessageWaitingIndicatorChanged(bool arg0)
            {
                IExecuteWithSignature("onMessageWaitingIndicatorChanged", "(Z)V", arg0);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region PhysicalChannelConfigListener
        public partial class PhysicalChannelConfigListener
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// Handlers initializer for <see cref="PhysicalChannelConfigListener"/>
            /// </summary>
            protected virtual void InitializeHandlers()
            {
                AddEventHandler("onPhysicalChannelConfigChanged", new System.EventHandler<CLRListenerEventArgs<CLREventData<Java.Util.List<Android.Telephony.PhysicalChannelConfig>>>>(OnPhysicalChannelConfigChangedEventHandler));

            }

            /// <summary>
            /// Handler for <see href="https://developer.android.com/reference/android/telephony/TelephonyCallback.PhysicalChannelConfigListener.html#onPhysicalChannelConfigChanged(java.util.List)"/>
            /// </summary>
            /// <remarks>If <see cref="OnOnPhysicalChannelConfigChanged"/> has a value it takes precedence over corresponding class method</remarks>
            public System.Action<Java.Util.List<Android.Telephony.PhysicalChannelConfig>> OnOnPhysicalChannelConfigChanged { get; set; } = null;

            void OnPhysicalChannelConfigChangedEventHandler(object sender, CLRListenerEventArgs<CLREventData<Java.Util.List<Android.Telephony.PhysicalChannelConfig>>> data)
            {
                var methodToExecute = (OnOnPhysicalChannelConfigChanged != null) ? OnOnPhysicalChannelConfigChanged : OnPhysicalChannelConfigChanged;
                methodToExecute.Invoke(data.EventData.TypedEventData);
            }

            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/TelephonyCallback.PhysicalChannelConfigListener.html#onPhysicalChannelConfigChanged(java.util.List)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Util.List"/></param>
            public virtual void OnPhysicalChannelConfigChanged(Java.Util.List<Android.Telephony.PhysicalChannelConfig> arg0)
            {
                
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region PhysicalChannelConfigListenerDirect
        public partial class PhysicalChannelConfigListenerDirect
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/TelephonyCallback.PhysicalChannelConfigListener.html#onPhysicalChannelConfigChanged(java.util.List)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Util.List"/></param>
            public override void OnPhysicalChannelConfigChanged(Java.Util.List<Android.Telephony.PhysicalChannelConfig> arg0)
            {
                IExecuteWithSignature("onPhysicalChannelConfigChanged", "(Ljava/util/List;)V", arg0);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region PreciseDataConnectionStateListener
        public partial class PreciseDataConnectionStateListener
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// Handlers initializer for <see cref="PreciseDataConnectionStateListener"/>
            /// </summary>
            protected virtual void InitializeHandlers()
            {
                AddEventHandler("onPreciseDataConnectionStateChanged", new System.EventHandler<CLRListenerEventArgs<CLREventData<Android.Telephony.PreciseDataConnectionState>>>(OnPreciseDataConnectionStateChangedEventHandler));

            }

            /// <summary>
            /// Handler for <see href="https://developer.android.com/reference/android/telephony/TelephonyCallback.PreciseDataConnectionStateListener.html#onPreciseDataConnectionStateChanged(android.telephony.PreciseDataConnectionState)"/>
            /// </summary>
            /// <remarks>If <see cref="OnOnPreciseDataConnectionStateChanged"/> has a value it takes precedence over corresponding class method</remarks>
            public System.Action<Android.Telephony.PreciseDataConnectionState> OnOnPreciseDataConnectionStateChanged { get; set; } = null;

            void OnPreciseDataConnectionStateChangedEventHandler(object sender, CLRListenerEventArgs<CLREventData<Android.Telephony.PreciseDataConnectionState>> data)
            {
                var methodToExecute = (OnOnPreciseDataConnectionStateChanged != null) ? OnOnPreciseDataConnectionStateChanged : OnPreciseDataConnectionStateChanged;
                methodToExecute.Invoke(data.EventData.TypedEventData);
            }

            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/TelephonyCallback.PreciseDataConnectionStateListener.html#onPreciseDataConnectionStateChanged(android.telephony.PreciseDataConnectionState)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Telephony.PreciseDataConnectionState"/></param>
            public virtual void OnPreciseDataConnectionStateChanged(Android.Telephony.PreciseDataConnectionState arg0)
            {
                
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region PreciseDataConnectionStateListenerDirect
        public partial class PreciseDataConnectionStateListenerDirect
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/TelephonyCallback.PreciseDataConnectionStateListener.html#onPreciseDataConnectionStateChanged(android.telephony.PreciseDataConnectionState)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Telephony.PreciseDataConnectionState"/></param>
            public override void OnPreciseDataConnectionStateChanged(Android.Telephony.PreciseDataConnectionState arg0)
            {
                IExecuteWithSignature("onPreciseDataConnectionStateChanged", "(Landroid/telephony/PreciseDataConnectionState;)V", arg0);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region RegistrationFailedListener
        public partial class RegistrationFailedListener
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// Handlers initializer for <see cref="RegistrationFailedListener"/>
            /// </summary>
            protected virtual void InitializeHandlers()
            {
                AddEventHandler("onRegistrationFailed", new System.EventHandler<CLRListenerEventArgs<CLREventData<Android.Telephony.CellIdentity>>>(OnRegistrationFailedEventHandler));

            }

            /// <summary>
            /// Handler for <see href="https://developer.android.com/reference/android/telephony/TelephonyCallback.RegistrationFailedListener.html#onRegistrationFailed(android.telephony.CellIdentity,java.lang.String,int,int,int)"/>
            /// </summary>
            /// <remarks>If <see cref="OnOnRegistrationFailed"/> has a value it takes precedence over corresponding class method</remarks>
            public System.Action<Android.Telephony.CellIdentity, Java.Lang.String, int, int, int> OnOnRegistrationFailed { get; set; } = null;

            void OnRegistrationFailedEventHandler(object sender, CLRListenerEventArgs<CLREventData<Android.Telephony.CellIdentity>> data)
            {
                var methodToExecute = (OnOnRegistrationFailed != null) ? OnOnRegistrationFailed : OnRegistrationFailed;
                methodToExecute.Invoke(data.EventData.TypedEventData, data.EventData.GetAt<Java.Lang.String>(0), data.EventData.GetAt<int>(1), data.EventData.GetAt<int>(2), data.EventData.GetAt<int>(3));
            }

            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/TelephonyCallback.RegistrationFailedListener.html#onRegistrationFailed(android.telephony.CellIdentity,java.lang.String,int,int,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Telephony.CellIdentity"/></param>
            /// <param name="arg1"><see cref="Java.Lang.String"/></param>
            /// <param name="arg2"><see cref="int"/></param>
            /// <param name="arg3"><see cref="int"/></param>
            /// <param name="arg4"><see cref="int"/></param>
            public virtual void OnRegistrationFailed(Android.Telephony.CellIdentity arg0, Java.Lang.String arg1, int arg2, int arg3, int arg4)
            {
                
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region RegistrationFailedListenerDirect
        public partial class RegistrationFailedListenerDirect
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/TelephonyCallback.RegistrationFailedListener.html#onRegistrationFailed(android.telephony.CellIdentity,java.lang.String,int,int,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Telephony.CellIdentity"/></param>
            /// <param name="arg1"><see cref="Java.Lang.String"/></param>
            /// <param name="arg2"><see cref="int"/></param>
            /// <param name="arg3"><see cref="int"/></param>
            /// <param name="arg4"><see cref="int"/></param>
            public override void OnRegistrationFailed(Android.Telephony.CellIdentity arg0, Java.Lang.String arg1, int arg2, int arg3, int arg4)
            {
                IExecute("onRegistrationFailed", arg0, arg1, arg2, arg3, arg4);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region ServiceStateListener
        public partial class ServiceStateListener
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// Handlers initializer for <see cref="ServiceStateListener"/>
            /// </summary>
            protected virtual void InitializeHandlers()
            {
                AddEventHandler("onServiceStateChanged", new System.EventHandler<CLRListenerEventArgs<CLREventData<Android.Telephony.ServiceState>>>(OnServiceStateChangedEventHandler));

            }

            /// <summary>
            /// Handler for <see href="https://developer.android.com/reference/android/telephony/TelephonyCallback.ServiceStateListener.html#onServiceStateChanged(android.telephony.ServiceState)"/>
            /// </summary>
            /// <remarks>If <see cref="OnOnServiceStateChanged"/> has a value it takes precedence over corresponding class method</remarks>
            public System.Action<Android.Telephony.ServiceState> OnOnServiceStateChanged { get; set; } = null;

            void OnServiceStateChangedEventHandler(object sender, CLRListenerEventArgs<CLREventData<Android.Telephony.ServiceState>> data)
            {
                var methodToExecute = (OnOnServiceStateChanged != null) ? OnOnServiceStateChanged : OnServiceStateChanged;
                methodToExecute.Invoke(data.EventData.TypedEventData);
            }

            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/TelephonyCallback.ServiceStateListener.html#onServiceStateChanged(android.telephony.ServiceState)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Telephony.ServiceState"/></param>
            public virtual void OnServiceStateChanged(Android.Telephony.ServiceState arg0)
            {
                
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region ServiceStateListenerDirect
        public partial class ServiceStateListenerDirect
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/TelephonyCallback.ServiceStateListener.html#onServiceStateChanged(android.telephony.ServiceState)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Telephony.ServiceState"/></param>
            public override void OnServiceStateChanged(Android.Telephony.ServiceState arg0)
            {
                IExecuteWithSignature("onServiceStateChanged", "(Landroid/telephony/ServiceState;)V", arg0);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region SignalStrengthsListener
        public partial class SignalStrengthsListener
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// Handlers initializer for <see cref="SignalStrengthsListener"/>
            /// </summary>
            protected virtual void InitializeHandlers()
            {
                AddEventHandler("onSignalStrengthsChanged", new System.EventHandler<CLRListenerEventArgs<CLREventData<Android.Telephony.SignalStrength>>>(OnSignalStrengthsChangedEventHandler));

            }

            /// <summary>
            /// Handler for <see href="https://developer.android.com/reference/android/telephony/TelephonyCallback.SignalStrengthsListener.html#onSignalStrengthsChanged(android.telephony.SignalStrength)"/>
            /// </summary>
            /// <remarks>If <see cref="OnOnSignalStrengthsChanged"/> has a value it takes precedence over corresponding class method</remarks>
            public System.Action<Android.Telephony.SignalStrength> OnOnSignalStrengthsChanged { get; set; } = null;

            void OnSignalStrengthsChangedEventHandler(object sender, CLRListenerEventArgs<CLREventData<Android.Telephony.SignalStrength>> data)
            {
                var methodToExecute = (OnOnSignalStrengthsChanged != null) ? OnOnSignalStrengthsChanged : OnSignalStrengthsChanged;
                methodToExecute.Invoke(data.EventData.TypedEventData);
            }

            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/TelephonyCallback.SignalStrengthsListener.html#onSignalStrengthsChanged(android.telephony.SignalStrength)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Telephony.SignalStrength"/></param>
            public virtual void OnSignalStrengthsChanged(Android.Telephony.SignalStrength arg0)
            {
                
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region SignalStrengthsListenerDirect
        public partial class SignalStrengthsListenerDirect
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/TelephonyCallback.SignalStrengthsListener.html#onSignalStrengthsChanged(android.telephony.SignalStrength)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Telephony.SignalStrength"/></param>
            public override void OnSignalStrengthsChanged(Android.Telephony.SignalStrength arg0)
            {
                IExecuteWithSignature("onSignalStrengthsChanged", "(Landroid/telephony/SignalStrength;)V", arg0);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region UserMobileDataStateListener
        public partial class UserMobileDataStateListener
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// Handlers initializer for <see cref="UserMobileDataStateListener"/>
            /// </summary>
            protected virtual void InitializeHandlers()
            {
                AddEventHandler("onUserMobileDataStateChanged", new System.EventHandler<CLRListenerEventArgs<CLREventData<bool>>>(OnUserMobileDataStateChangedEventHandler));

            }

            /// <summary>
            /// Handler for <see href="https://developer.android.com/reference/android/telephony/TelephonyCallback.UserMobileDataStateListener.html#onUserMobileDataStateChanged(boolean)"/>
            /// </summary>
            /// <remarks>If <see cref="OnOnUserMobileDataStateChanged"/> has a value it takes precedence over corresponding class method</remarks>
            public System.Action<bool> OnOnUserMobileDataStateChanged { get; set; } = null;

            void OnUserMobileDataStateChangedEventHandler(object sender, CLRListenerEventArgs<CLREventData<bool>> data)
            {
                var methodToExecute = (OnOnUserMobileDataStateChanged != null) ? OnOnUserMobileDataStateChanged : OnUserMobileDataStateChanged;
                methodToExecute.Invoke(data.EventData.TypedEventData);
            }

            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/TelephonyCallback.UserMobileDataStateListener.html#onUserMobileDataStateChanged(boolean)"/>
            /// </summary>
            /// <param name="arg0"><see cref="bool"/></param>
            public virtual void OnUserMobileDataStateChanged(bool arg0)
            {
                
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region UserMobileDataStateListenerDirect
        public partial class UserMobileDataStateListenerDirect
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/telephony/TelephonyCallback.UserMobileDataStateListener.html#onUserMobileDataStateChanged(boolean)"/>
            /// </summary>
            /// <param name="arg0"><see cref="bool"/></param>
            public override void OnUserMobileDataStateChanged(bool arg0)
            {
                IExecuteWithSignature("onUserMobileDataStateChanged", "(Z)V", arg0);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}