/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.9.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Telephony.Ims
{
    #region ImsReasonInfo declaration
    /// <summary>
    /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html"/>
    /// </summary>
    public partial class ImsReasonInfo : Android.Os.Parcelable
    {
        const string _bridgeClassName = "android.telephony.ims.ImsReasonInfo";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public ImsReasonInfo() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public ImsReasonInfo(params object[] args) : base(args) { }
    
        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");
    
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;
    
        // TODO: complete the class
    
    }
    #endregion

    #region ImsReasonInfo implementation
    public partial class ImsReasonInfo
    {
        #region Constructors
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#%3Cinit%3E(int,int,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="Java.Lang.String"/></param>
        public ImsReasonInfo(int arg0, int arg1, Java.Lang.String arg2)
            : base(arg0, arg1, arg2)
        {
        }
    
        #endregion
    
        #region Class/Interface conversion operators
    
        #endregion
    
        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CREATOR"/>
        /// </summary>
        public static Android.Os.Parcelable.Creator CREATOR { get { if (!_CREATORReady) { _CREATORContent = SGetField<Android.Os.Parcelable.Creator>(LocalBridgeClazz, "CREATOR"); _CREATORReady = true; } return _CREATORContent; } }
        private static Android.Os.Parcelable.Creator _CREATORContent = default;
        private static bool _CREATORReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_ACCESS_CLASS_BLOCKED"/>
        /// </summary>
        public static int CODE_ACCESS_CLASS_BLOCKED { get { if (!_CODE_ACCESS_CLASS_BLOCKEDReady) { _CODE_ACCESS_CLASS_BLOCKEDContent = SGetField<int>(LocalBridgeClazz, "CODE_ACCESS_CLASS_BLOCKED"); _CODE_ACCESS_CLASS_BLOCKEDReady = true; } return _CODE_ACCESS_CLASS_BLOCKEDContent; } }
        private static int _CODE_ACCESS_CLASS_BLOCKEDContent = default;
        private static bool _CODE_ACCESS_CLASS_BLOCKEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_ANSWERED_ELSEWHERE"/>
        /// </summary>
        public static int CODE_ANSWERED_ELSEWHERE { get { if (!_CODE_ANSWERED_ELSEWHEREReady) { _CODE_ANSWERED_ELSEWHEREContent = SGetField<int>(LocalBridgeClazz, "CODE_ANSWERED_ELSEWHERE"); _CODE_ANSWERED_ELSEWHEREReady = true; } return _CODE_ANSWERED_ELSEWHEREContent; } }
        private static int _CODE_ANSWERED_ELSEWHEREContent = default;
        private static bool _CODE_ANSWERED_ELSEWHEREReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_BLACKLISTED_CALL_ID"/>
        /// </summary>
        public static int CODE_BLACKLISTED_CALL_ID { get { if (!_CODE_BLACKLISTED_CALL_IDReady) { _CODE_BLACKLISTED_CALL_IDContent = SGetField<int>(LocalBridgeClazz, "CODE_BLACKLISTED_CALL_ID"); _CODE_BLACKLISTED_CALL_IDReady = true; } return _CODE_BLACKLISTED_CALL_IDContent; } }
        private static int _CODE_BLACKLISTED_CALL_IDContent = default;
        private static bool _CODE_BLACKLISTED_CALL_IDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_CALL_BARRED"/>
        /// </summary>
        public static int CODE_CALL_BARRED { get { if (!_CODE_CALL_BARREDReady) { _CODE_CALL_BARREDContent = SGetField<int>(LocalBridgeClazz, "CODE_CALL_BARRED"); _CODE_CALL_BARREDReady = true; } return _CODE_CALL_BARREDContent; } }
        private static int _CODE_CALL_BARREDContent = default;
        private static bool _CODE_CALL_BARREDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_CALL_DROP_IWLAN_TO_LTE_UNAVAILABLE"/>
        /// </summary>
        public static int CODE_CALL_DROP_IWLAN_TO_LTE_UNAVAILABLE { get { if (!_CODE_CALL_DROP_IWLAN_TO_LTE_UNAVAILABLEReady) { _CODE_CALL_DROP_IWLAN_TO_LTE_UNAVAILABLEContent = SGetField<int>(LocalBridgeClazz, "CODE_CALL_DROP_IWLAN_TO_LTE_UNAVAILABLE"); _CODE_CALL_DROP_IWLAN_TO_LTE_UNAVAILABLEReady = true; } return _CODE_CALL_DROP_IWLAN_TO_LTE_UNAVAILABLEContent; } }
        private static int _CODE_CALL_DROP_IWLAN_TO_LTE_UNAVAILABLEContent = default;
        private static bool _CODE_CALL_DROP_IWLAN_TO_LTE_UNAVAILABLEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_CALL_END_CAUSE_CALL_PULL"/>
        /// </summary>
        public static int CODE_CALL_END_CAUSE_CALL_PULL { get { if (!_CODE_CALL_END_CAUSE_CALL_PULLReady) { _CODE_CALL_END_CAUSE_CALL_PULLContent = SGetField<int>(LocalBridgeClazz, "CODE_CALL_END_CAUSE_CALL_PULL"); _CODE_CALL_END_CAUSE_CALL_PULLReady = true; } return _CODE_CALL_END_CAUSE_CALL_PULLContent; } }
        private static int _CODE_CALL_END_CAUSE_CALL_PULLContent = default;
        private static bool _CODE_CALL_END_CAUSE_CALL_PULLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_CALL_PULL_OUT_OF_SYNC"/>
        /// </summary>
        public static int CODE_CALL_PULL_OUT_OF_SYNC { get { if (!_CODE_CALL_PULL_OUT_OF_SYNCReady) { _CODE_CALL_PULL_OUT_OF_SYNCContent = SGetField<int>(LocalBridgeClazz, "CODE_CALL_PULL_OUT_OF_SYNC"); _CODE_CALL_PULL_OUT_OF_SYNCReady = true; } return _CODE_CALL_PULL_OUT_OF_SYNCContent; } }
        private static int _CODE_CALL_PULL_OUT_OF_SYNCContent = default;
        private static bool _CODE_CALL_PULL_OUT_OF_SYNCReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_DATA_DISABLED"/>
        /// </summary>
        public static int CODE_DATA_DISABLED { get { if (!_CODE_DATA_DISABLEDReady) { _CODE_DATA_DISABLEDContent = SGetField<int>(LocalBridgeClazz, "CODE_DATA_DISABLED"); _CODE_DATA_DISABLEDReady = true; } return _CODE_DATA_DISABLEDContent; } }
        private static int _CODE_DATA_DISABLEDContent = default;
        private static bool _CODE_DATA_DISABLEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_DATA_LIMIT_REACHED"/>
        /// </summary>
        public static int CODE_DATA_LIMIT_REACHED { get { if (!_CODE_DATA_LIMIT_REACHEDReady) { _CODE_DATA_LIMIT_REACHEDContent = SGetField<int>(LocalBridgeClazz, "CODE_DATA_LIMIT_REACHED"); _CODE_DATA_LIMIT_REACHEDReady = true; } return _CODE_DATA_LIMIT_REACHEDContent; } }
        private static int _CODE_DATA_LIMIT_REACHEDContent = default;
        private static bool _CODE_DATA_LIMIT_REACHEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_DIAL_MODIFIED_TO_DIAL"/>
        /// </summary>
        public static int CODE_DIAL_MODIFIED_TO_DIAL { get { if (!_CODE_DIAL_MODIFIED_TO_DIALReady) { _CODE_DIAL_MODIFIED_TO_DIALContent = SGetField<int>(LocalBridgeClazz, "CODE_DIAL_MODIFIED_TO_DIAL"); _CODE_DIAL_MODIFIED_TO_DIALReady = true; } return _CODE_DIAL_MODIFIED_TO_DIALContent; } }
        private static int _CODE_DIAL_MODIFIED_TO_DIALContent = default;
        private static bool _CODE_DIAL_MODIFIED_TO_DIALReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_DIAL_MODIFIED_TO_DIAL_VIDEO"/>
        /// </summary>
        public static int CODE_DIAL_MODIFIED_TO_DIAL_VIDEO { get { if (!_CODE_DIAL_MODIFIED_TO_DIAL_VIDEOReady) { _CODE_DIAL_MODIFIED_TO_DIAL_VIDEOContent = SGetField<int>(LocalBridgeClazz, "CODE_DIAL_MODIFIED_TO_DIAL_VIDEO"); _CODE_DIAL_MODIFIED_TO_DIAL_VIDEOReady = true; } return _CODE_DIAL_MODIFIED_TO_DIAL_VIDEOContent; } }
        private static int _CODE_DIAL_MODIFIED_TO_DIAL_VIDEOContent = default;
        private static bool _CODE_DIAL_MODIFIED_TO_DIAL_VIDEOReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_DIAL_MODIFIED_TO_SS"/>
        /// </summary>
        public static int CODE_DIAL_MODIFIED_TO_SS { get { if (!_CODE_DIAL_MODIFIED_TO_SSReady) { _CODE_DIAL_MODIFIED_TO_SSContent = SGetField<int>(LocalBridgeClazz, "CODE_DIAL_MODIFIED_TO_SS"); _CODE_DIAL_MODIFIED_TO_SSReady = true; } return _CODE_DIAL_MODIFIED_TO_SSContent; } }
        private static int _CODE_DIAL_MODIFIED_TO_SSContent = default;
        private static bool _CODE_DIAL_MODIFIED_TO_SSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_DIAL_MODIFIED_TO_USSD"/>
        /// </summary>
        public static int CODE_DIAL_MODIFIED_TO_USSD { get { if (!_CODE_DIAL_MODIFIED_TO_USSDReady) { _CODE_DIAL_MODIFIED_TO_USSDContent = SGetField<int>(LocalBridgeClazz, "CODE_DIAL_MODIFIED_TO_USSD"); _CODE_DIAL_MODIFIED_TO_USSDReady = true; } return _CODE_DIAL_MODIFIED_TO_USSDContent; } }
        private static int _CODE_DIAL_MODIFIED_TO_USSDContent = default;
        private static bool _CODE_DIAL_MODIFIED_TO_USSDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_DIAL_VIDEO_MODIFIED_TO_DIAL"/>
        /// </summary>
        public static int CODE_DIAL_VIDEO_MODIFIED_TO_DIAL { get { if (!_CODE_DIAL_VIDEO_MODIFIED_TO_DIALReady) { _CODE_DIAL_VIDEO_MODIFIED_TO_DIALContent = SGetField<int>(LocalBridgeClazz, "CODE_DIAL_VIDEO_MODIFIED_TO_DIAL"); _CODE_DIAL_VIDEO_MODIFIED_TO_DIALReady = true; } return _CODE_DIAL_VIDEO_MODIFIED_TO_DIALContent; } }
        private static int _CODE_DIAL_VIDEO_MODIFIED_TO_DIALContent = default;
        private static bool _CODE_DIAL_VIDEO_MODIFIED_TO_DIALReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_DIAL_VIDEO_MODIFIED_TO_DIAL_VIDEO"/>
        /// </summary>
        public static int CODE_DIAL_VIDEO_MODIFIED_TO_DIAL_VIDEO { get { if (!_CODE_DIAL_VIDEO_MODIFIED_TO_DIAL_VIDEOReady) { _CODE_DIAL_VIDEO_MODIFIED_TO_DIAL_VIDEOContent = SGetField<int>(LocalBridgeClazz, "CODE_DIAL_VIDEO_MODIFIED_TO_DIAL_VIDEO"); _CODE_DIAL_VIDEO_MODIFIED_TO_DIAL_VIDEOReady = true; } return _CODE_DIAL_VIDEO_MODIFIED_TO_DIAL_VIDEOContent; } }
        private static int _CODE_DIAL_VIDEO_MODIFIED_TO_DIAL_VIDEOContent = default;
        private static bool _CODE_DIAL_VIDEO_MODIFIED_TO_DIAL_VIDEOReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_DIAL_VIDEO_MODIFIED_TO_SS"/>
        /// </summary>
        public static int CODE_DIAL_VIDEO_MODIFIED_TO_SS { get { if (!_CODE_DIAL_VIDEO_MODIFIED_TO_SSReady) { _CODE_DIAL_VIDEO_MODIFIED_TO_SSContent = SGetField<int>(LocalBridgeClazz, "CODE_DIAL_VIDEO_MODIFIED_TO_SS"); _CODE_DIAL_VIDEO_MODIFIED_TO_SSReady = true; } return _CODE_DIAL_VIDEO_MODIFIED_TO_SSContent; } }
        private static int _CODE_DIAL_VIDEO_MODIFIED_TO_SSContent = default;
        private static bool _CODE_DIAL_VIDEO_MODIFIED_TO_SSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_DIAL_VIDEO_MODIFIED_TO_USSD"/>
        /// </summary>
        public static int CODE_DIAL_VIDEO_MODIFIED_TO_USSD { get { if (!_CODE_DIAL_VIDEO_MODIFIED_TO_USSDReady) { _CODE_DIAL_VIDEO_MODIFIED_TO_USSDContent = SGetField<int>(LocalBridgeClazz, "CODE_DIAL_VIDEO_MODIFIED_TO_USSD"); _CODE_DIAL_VIDEO_MODIFIED_TO_USSDReady = true; } return _CODE_DIAL_VIDEO_MODIFIED_TO_USSDContent; } }
        private static int _CODE_DIAL_VIDEO_MODIFIED_TO_USSDContent = default;
        private static bool _CODE_DIAL_VIDEO_MODIFIED_TO_USSDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_ECBM_NOT_SUPPORTED"/>
        /// </summary>
        public static int CODE_ECBM_NOT_SUPPORTED { get { if (!_CODE_ECBM_NOT_SUPPORTEDReady) { _CODE_ECBM_NOT_SUPPORTEDContent = SGetField<int>(LocalBridgeClazz, "CODE_ECBM_NOT_SUPPORTED"); _CODE_ECBM_NOT_SUPPORTEDReady = true; } return _CODE_ECBM_NOT_SUPPORTEDContent; } }
        private static int _CODE_ECBM_NOT_SUPPORTEDContent = default;
        private static bool _CODE_ECBM_NOT_SUPPORTEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_EMERGENCY_PERM_FAILURE"/>
        /// </summary>
        public static int CODE_EMERGENCY_PERM_FAILURE { get { if (!_CODE_EMERGENCY_PERM_FAILUREReady) { _CODE_EMERGENCY_PERM_FAILUREContent = SGetField<int>(LocalBridgeClazz, "CODE_EMERGENCY_PERM_FAILURE"); _CODE_EMERGENCY_PERM_FAILUREReady = true; } return _CODE_EMERGENCY_PERM_FAILUREContent; } }
        private static int _CODE_EMERGENCY_PERM_FAILUREContent = default;
        private static bool _CODE_EMERGENCY_PERM_FAILUREReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_EMERGENCY_TEMP_FAILURE"/>
        /// </summary>
        public static int CODE_EMERGENCY_TEMP_FAILURE { get { if (!_CODE_EMERGENCY_TEMP_FAILUREReady) { _CODE_EMERGENCY_TEMP_FAILUREContent = SGetField<int>(LocalBridgeClazz, "CODE_EMERGENCY_TEMP_FAILURE"); _CODE_EMERGENCY_TEMP_FAILUREReady = true; } return _CODE_EMERGENCY_TEMP_FAILUREContent; } }
        private static int _CODE_EMERGENCY_TEMP_FAILUREContent = default;
        private static bool _CODE_EMERGENCY_TEMP_FAILUREReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_EPDG_TUNNEL_ESTABLISH_FAILURE"/>
        /// </summary>
        public static int CODE_EPDG_TUNNEL_ESTABLISH_FAILURE { get { if (!_CODE_EPDG_TUNNEL_ESTABLISH_FAILUREReady) { _CODE_EPDG_TUNNEL_ESTABLISH_FAILUREContent = SGetField<int>(LocalBridgeClazz, "CODE_EPDG_TUNNEL_ESTABLISH_FAILURE"); _CODE_EPDG_TUNNEL_ESTABLISH_FAILUREReady = true; } return _CODE_EPDG_TUNNEL_ESTABLISH_FAILUREContent; } }
        private static int _CODE_EPDG_TUNNEL_ESTABLISH_FAILUREContent = default;
        private static bool _CODE_EPDG_TUNNEL_ESTABLISH_FAILUREReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_EPDG_TUNNEL_LOST_CONNECTION"/>
        /// </summary>
        public static int CODE_EPDG_TUNNEL_LOST_CONNECTION { get { if (!_CODE_EPDG_TUNNEL_LOST_CONNECTIONReady) { _CODE_EPDG_TUNNEL_LOST_CONNECTIONContent = SGetField<int>(LocalBridgeClazz, "CODE_EPDG_TUNNEL_LOST_CONNECTION"); _CODE_EPDG_TUNNEL_LOST_CONNECTIONReady = true; } return _CODE_EPDG_TUNNEL_LOST_CONNECTIONContent; } }
        private static int _CODE_EPDG_TUNNEL_LOST_CONNECTIONContent = default;
        private static bool _CODE_EPDG_TUNNEL_LOST_CONNECTIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_EPDG_TUNNEL_REKEY_FAILURE"/>
        /// </summary>
        public static int CODE_EPDG_TUNNEL_REKEY_FAILURE { get { if (!_CODE_EPDG_TUNNEL_REKEY_FAILUREReady) { _CODE_EPDG_TUNNEL_REKEY_FAILUREContent = SGetField<int>(LocalBridgeClazz, "CODE_EPDG_TUNNEL_REKEY_FAILURE"); _CODE_EPDG_TUNNEL_REKEY_FAILUREReady = true; } return _CODE_EPDG_TUNNEL_REKEY_FAILUREContent; } }
        private static int _CODE_EPDG_TUNNEL_REKEY_FAILUREContent = default;
        private static bool _CODE_EPDG_TUNNEL_REKEY_FAILUREReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_FDN_BLOCKED"/>
        /// </summary>
        public static int CODE_FDN_BLOCKED { get { if (!_CODE_FDN_BLOCKEDReady) { _CODE_FDN_BLOCKEDContent = SGetField<int>(LocalBridgeClazz, "CODE_FDN_BLOCKED"); _CODE_FDN_BLOCKEDReady = true; } return _CODE_FDN_BLOCKEDContent; } }
        private static int _CODE_FDN_BLOCKEDContent = default;
        private static bool _CODE_FDN_BLOCKEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_IKEV2_AUTH_FAILURE"/>
        /// </summary>
        public static int CODE_IKEV2_AUTH_FAILURE { get { if (!_CODE_IKEV2_AUTH_FAILUREReady) { _CODE_IKEV2_AUTH_FAILUREContent = SGetField<int>(LocalBridgeClazz, "CODE_IKEV2_AUTH_FAILURE"); _CODE_IKEV2_AUTH_FAILUREReady = true; } return _CODE_IKEV2_AUTH_FAILUREContent; } }
        private static int _CODE_IKEV2_AUTH_FAILUREContent = default;
        private static bool _CODE_IKEV2_AUTH_FAILUREReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_IMEI_NOT_ACCEPTED"/>
        /// </summary>
        public static int CODE_IMEI_NOT_ACCEPTED { get { if (!_CODE_IMEI_NOT_ACCEPTEDReady) { _CODE_IMEI_NOT_ACCEPTEDContent = SGetField<int>(LocalBridgeClazz, "CODE_IMEI_NOT_ACCEPTED"); _CODE_IMEI_NOT_ACCEPTEDReady = true; } return _CODE_IMEI_NOT_ACCEPTEDContent; } }
        private static int _CODE_IMEI_NOT_ACCEPTEDContent = default;
        private static bool _CODE_IMEI_NOT_ACCEPTEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_IWLAN_DPD_FAILURE"/>
        /// </summary>
        public static int CODE_IWLAN_DPD_FAILURE { get { if (!_CODE_IWLAN_DPD_FAILUREReady) { _CODE_IWLAN_DPD_FAILUREContent = SGetField<int>(LocalBridgeClazz, "CODE_IWLAN_DPD_FAILURE"); _CODE_IWLAN_DPD_FAILUREReady = true; } return _CODE_IWLAN_DPD_FAILUREContent; } }
        private static int _CODE_IWLAN_DPD_FAILUREContent = default;
        private static bool _CODE_IWLAN_DPD_FAILUREReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_LOCAL_CALL_BUSY"/>
        /// </summary>
        public static int CODE_LOCAL_CALL_BUSY { get { if (!_CODE_LOCAL_CALL_BUSYReady) { _CODE_LOCAL_CALL_BUSYContent = SGetField<int>(LocalBridgeClazz, "CODE_LOCAL_CALL_BUSY"); _CODE_LOCAL_CALL_BUSYReady = true; } return _CODE_LOCAL_CALL_BUSYContent; } }
        private static int _CODE_LOCAL_CALL_BUSYContent = default;
        private static bool _CODE_LOCAL_CALL_BUSYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_LOCAL_CALL_CS_RETRY_REQUIRED"/>
        /// </summary>
        public static int CODE_LOCAL_CALL_CS_RETRY_REQUIRED { get { if (!_CODE_LOCAL_CALL_CS_RETRY_REQUIREDReady) { _CODE_LOCAL_CALL_CS_RETRY_REQUIREDContent = SGetField<int>(LocalBridgeClazz, "CODE_LOCAL_CALL_CS_RETRY_REQUIRED"); _CODE_LOCAL_CALL_CS_RETRY_REQUIREDReady = true; } return _CODE_LOCAL_CALL_CS_RETRY_REQUIREDContent; } }
        private static int _CODE_LOCAL_CALL_CS_RETRY_REQUIREDContent = default;
        private static bool _CODE_LOCAL_CALL_CS_RETRY_REQUIREDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_LOCAL_CALL_DECLINE"/>
        /// </summary>
        public static int CODE_LOCAL_CALL_DECLINE { get { if (!_CODE_LOCAL_CALL_DECLINEReady) { _CODE_LOCAL_CALL_DECLINEContent = SGetField<int>(LocalBridgeClazz, "CODE_LOCAL_CALL_DECLINE"); _CODE_LOCAL_CALL_DECLINEReady = true; } return _CODE_LOCAL_CALL_DECLINEContent; } }
        private static int _CODE_LOCAL_CALL_DECLINEContent = default;
        private static bool _CODE_LOCAL_CALL_DECLINEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_LOCAL_CALL_EXCEEDED"/>
        /// </summary>
        public static int CODE_LOCAL_CALL_EXCEEDED { get { if (!_CODE_LOCAL_CALL_EXCEEDEDReady) { _CODE_LOCAL_CALL_EXCEEDEDContent = SGetField<int>(LocalBridgeClazz, "CODE_LOCAL_CALL_EXCEEDED"); _CODE_LOCAL_CALL_EXCEEDEDReady = true; } return _CODE_LOCAL_CALL_EXCEEDEDContent; } }
        private static int _CODE_LOCAL_CALL_EXCEEDEDContent = default;
        private static bool _CODE_LOCAL_CALL_EXCEEDEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_LOCAL_CALL_RESOURCE_RESERVATION_FAILED"/>
        /// </summary>
        public static int CODE_LOCAL_CALL_RESOURCE_RESERVATION_FAILED { get { if (!_CODE_LOCAL_CALL_RESOURCE_RESERVATION_FAILEDReady) { _CODE_LOCAL_CALL_RESOURCE_RESERVATION_FAILEDContent = SGetField<int>(LocalBridgeClazz, "CODE_LOCAL_CALL_RESOURCE_RESERVATION_FAILED"); _CODE_LOCAL_CALL_RESOURCE_RESERVATION_FAILEDReady = true; } return _CODE_LOCAL_CALL_RESOURCE_RESERVATION_FAILEDContent; } }
        private static int _CODE_LOCAL_CALL_RESOURCE_RESERVATION_FAILEDContent = default;
        private static bool _CODE_LOCAL_CALL_RESOURCE_RESERVATION_FAILEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_LOCAL_CALL_TERMINATED"/>
        /// </summary>
        public static int CODE_LOCAL_CALL_TERMINATED { get { if (!_CODE_LOCAL_CALL_TERMINATEDReady) { _CODE_LOCAL_CALL_TERMINATEDContent = SGetField<int>(LocalBridgeClazz, "CODE_LOCAL_CALL_TERMINATED"); _CODE_LOCAL_CALL_TERMINATEDReady = true; } return _CODE_LOCAL_CALL_TERMINATEDContent; } }
        private static int _CODE_LOCAL_CALL_TERMINATEDContent = default;
        private static bool _CODE_LOCAL_CALL_TERMINATEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_LOCAL_CALL_VCC_ON_PROGRESSING"/>
        /// </summary>
        public static int CODE_LOCAL_CALL_VCC_ON_PROGRESSING { get { if (!_CODE_LOCAL_CALL_VCC_ON_PROGRESSINGReady) { _CODE_LOCAL_CALL_VCC_ON_PROGRESSINGContent = SGetField<int>(LocalBridgeClazz, "CODE_LOCAL_CALL_VCC_ON_PROGRESSING"); _CODE_LOCAL_CALL_VCC_ON_PROGRESSINGReady = true; } return _CODE_LOCAL_CALL_VCC_ON_PROGRESSINGContent; } }
        private static int _CODE_LOCAL_CALL_VCC_ON_PROGRESSINGContent = default;
        private static bool _CODE_LOCAL_CALL_VCC_ON_PROGRESSINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_LOCAL_CALL_VOLTE_RETRY_REQUIRED"/>
        /// </summary>
        public static int CODE_LOCAL_CALL_VOLTE_RETRY_REQUIRED { get { if (!_CODE_LOCAL_CALL_VOLTE_RETRY_REQUIREDReady) { _CODE_LOCAL_CALL_VOLTE_RETRY_REQUIREDContent = SGetField<int>(LocalBridgeClazz, "CODE_LOCAL_CALL_VOLTE_RETRY_REQUIRED"); _CODE_LOCAL_CALL_VOLTE_RETRY_REQUIREDReady = true; } return _CODE_LOCAL_CALL_VOLTE_RETRY_REQUIREDContent; } }
        private static int _CODE_LOCAL_CALL_VOLTE_RETRY_REQUIREDContent = default;
        private static bool _CODE_LOCAL_CALL_VOLTE_RETRY_REQUIREDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_LOCAL_ENDED_BY_CONFERENCE_MERGE"/>
        /// </summary>
        public static int CODE_LOCAL_ENDED_BY_CONFERENCE_MERGE { get { if (!_CODE_LOCAL_ENDED_BY_CONFERENCE_MERGEReady) { _CODE_LOCAL_ENDED_BY_CONFERENCE_MERGEContent = SGetField<int>(LocalBridgeClazz, "CODE_LOCAL_ENDED_BY_CONFERENCE_MERGE"); _CODE_LOCAL_ENDED_BY_CONFERENCE_MERGEReady = true; } return _CODE_LOCAL_ENDED_BY_CONFERENCE_MERGEContent; } }
        private static int _CODE_LOCAL_ENDED_BY_CONFERENCE_MERGEContent = default;
        private static bool _CODE_LOCAL_ENDED_BY_CONFERENCE_MERGEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_LOCAL_HO_NOT_FEASIBLE"/>
        /// </summary>
        public static int CODE_LOCAL_HO_NOT_FEASIBLE { get { if (!_CODE_LOCAL_HO_NOT_FEASIBLEReady) { _CODE_LOCAL_HO_NOT_FEASIBLEContent = SGetField<int>(LocalBridgeClazz, "CODE_LOCAL_HO_NOT_FEASIBLE"); _CODE_LOCAL_HO_NOT_FEASIBLEReady = true; } return _CODE_LOCAL_HO_NOT_FEASIBLEContent; } }
        private static int _CODE_LOCAL_HO_NOT_FEASIBLEContent = default;
        private static bool _CODE_LOCAL_HO_NOT_FEASIBLEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_LOCAL_ILLEGAL_ARGUMENT"/>
        /// </summary>
        public static int CODE_LOCAL_ILLEGAL_ARGUMENT { get { if (!_CODE_LOCAL_ILLEGAL_ARGUMENTReady) { _CODE_LOCAL_ILLEGAL_ARGUMENTContent = SGetField<int>(LocalBridgeClazz, "CODE_LOCAL_ILLEGAL_ARGUMENT"); _CODE_LOCAL_ILLEGAL_ARGUMENTReady = true; } return _CODE_LOCAL_ILLEGAL_ARGUMENTContent; } }
        private static int _CODE_LOCAL_ILLEGAL_ARGUMENTContent = default;
        private static bool _CODE_LOCAL_ILLEGAL_ARGUMENTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_LOCAL_ILLEGAL_STATE"/>
        /// </summary>
        public static int CODE_LOCAL_ILLEGAL_STATE { get { if (!_CODE_LOCAL_ILLEGAL_STATEReady) { _CODE_LOCAL_ILLEGAL_STATEContent = SGetField<int>(LocalBridgeClazz, "CODE_LOCAL_ILLEGAL_STATE"); _CODE_LOCAL_ILLEGAL_STATEReady = true; } return _CODE_LOCAL_ILLEGAL_STATEContent; } }
        private static int _CODE_LOCAL_ILLEGAL_STATEContent = default;
        private static bool _CODE_LOCAL_ILLEGAL_STATEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_LOCAL_IMS_SERVICE_DOWN"/>
        /// </summary>
        public static int CODE_LOCAL_IMS_SERVICE_DOWN { get { if (!_CODE_LOCAL_IMS_SERVICE_DOWNReady) { _CODE_LOCAL_IMS_SERVICE_DOWNContent = SGetField<int>(LocalBridgeClazz, "CODE_LOCAL_IMS_SERVICE_DOWN"); _CODE_LOCAL_IMS_SERVICE_DOWNReady = true; } return _CODE_LOCAL_IMS_SERVICE_DOWNContent; } }
        private static int _CODE_LOCAL_IMS_SERVICE_DOWNContent = default;
        private static bool _CODE_LOCAL_IMS_SERVICE_DOWNReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_LOCAL_INTERNAL_ERROR"/>
        /// </summary>
        public static int CODE_LOCAL_INTERNAL_ERROR { get { if (!_CODE_LOCAL_INTERNAL_ERRORReady) { _CODE_LOCAL_INTERNAL_ERRORContent = SGetField<int>(LocalBridgeClazz, "CODE_LOCAL_INTERNAL_ERROR"); _CODE_LOCAL_INTERNAL_ERRORReady = true; } return _CODE_LOCAL_INTERNAL_ERRORContent; } }
        private static int _CODE_LOCAL_INTERNAL_ERRORContent = default;
        private static bool _CODE_LOCAL_INTERNAL_ERRORReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_LOCAL_LOW_BATTERY"/>
        /// </summary>
        public static int CODE_LOCAL_LOW_BATTERY { get { if (!_CODE_LOCAL_LOW_BATTERYReady) { _CODE_LOCAL_LOW_BATTERYContent = SGetField<int>(LocalBridgeClazz, "CODE_LOCAL_LOW_BATTERY"); _CODE_LOCAL_LOW_BATTERYReady = true; } return _CODE_LOCAL_LOW_BATTERYContent; } }
        private static int _CODE_LOCAL_LOW_BATTERYContent = default;
        private static bool _CODE_LOCAL_LOW_BATTERYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_LOCAL_NETWORK_IP_CHANGED"/>
        /// </summary>
        public static int CODE_LOCAL_NETWORK_IP_CHANGED { get { if (!_CODE_LOCAL_NETWORK_IP_CHANGEDReady) { _CODE_LOCAL_NETWORK_IP_CHANGEDContent = SGetField<int>(LocalBridgeClazz, "CODE_LOCAL_NETWORK_IP_CHANGED"); _CODE_LOCAL_NETWORK_IP_CHANGEDReady = true; } return _CODE_LOCAL_NETWORK_IP_CHANGEDContent; } }
        private static int _CODE_LOCAL_NETWORK_IP_CHANGEDContent = default;
        private static bool _CODE_LOCAL_NETWORK_IP_CHANGEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_LOCAL_NETWORK_NO_LTE_COVERAGE"/>
        /// </summary>
        public static int CODE_LOCAL_NETWORK_NO_LTE_COVERAGE { get { if (!_CODE_LOCAL_NETWORK_NO_LTE_COVERAGEReady) { _CODE_LOCAL_NETWORK_NO_LTE_COVERAGEContent = SGetField<int>(LocalBridgeClazz, "CODE_LOCAL_NETWORK_NO_LTE_COVERAGE"); _CODE_LOCAL_NETWORK_NO_LTE_COVERAGEReady = true; } return _CODE_LOCAL_NETWORK_NO_LTE_COVERAGEContent; } }
        private static int _CODE_LOCAL_NETWORK_NO_LTE_COVERAGEContent = default;
        private static bool _CODE_LOCAL_NETWORK_NO_LTE_COVERAGEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_LOCAL_NETWORK_NO_SERVICE"/>
        /// </summary>
        public static int CODE_LOCAL_NETWORK_NO_SERVICE { get { if (!_CODE_LOCAL_NETWORK_NO_SERVICEReady) { _CODE_LOCAL_NETWORK_NO_SERVICEContent = SGetField<int>(LocalBridgeClazz, "CODE_LOCAL_NETWORK_NO_SERVICE"); _CODE_LOCAL_NETWORK_NO_SERVICEReady = true; } return _CODE_LOCAL_NETWORK_NO_SERVICEContent; } }
        private static int _CODE_LOCAL_NETWORK_NO_SERVICEContent = default;
        private static bool _CODE_LOCAL_NETWORK_NO_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_LOCAL_NETWORK_ROAMING"/>
        /// </summary>
        public static int CODE_LOCAL_NETWORK_ROAMING { get { if (!_CODE_LOCAL_NETWORK_ROAMINGReady) { _CODE_LOCAL_NETWORK_ROAMINGContent = SGetField<int>(LocalBridgeClazz, "CODE_LOCAL_NETWORK_ROAMING"); _CODE_LOCAL_NETWORK_ROAMINGReady = true; } return _CODE_LOCAL_NETWORK_ROAMINGContent; } }
        private static int _CODE_LOCAL_NETWORK_ROAMINGContent = default;
        private static bool _CODE_LOCAL_NETWORK_ROAMINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_LOCAL_NO_PENDING_CALL"/>
        /// </summary>
        public static int CODE_LOCAL_NO_PENDING_CALL { get { if (!_CODE_LOCAL_NO_PENDING_CALLReady) { _CODE_LOCAL_NO_PENDING_CALLContent = SGetField<int>(LocalBridgeClazz, "CODE_LOCAL_NO_PENDING_CALL"); _CODE_LOCAL_NO_PENDING_CALLReady = true; } return _CODE_LOCAL_NO_PENDING_CALLContent; } }
        private static int _CODE_LOCAL_NO_PENDING_CALLContent = default;
        private static bool _CODE_LOCAL_NO_PENDING_CALLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_LOCAL_NOT_REGISTERED"/>
        /// </summary>
        public static int CODE_LOCAL_NOT_REGISTERED { get { if (!_CODE_LOCAL_NOT_REGISTEREDReady) { _CODE_LOCAL_NOT_REGISTEREDContent = SGetField<int>(LocalBridgeClazz, "CODE_LOCAL_NOT_REGISTERED"); _CODE_LOCAL_NOT_REGISTEREDReady = true; } return _CODE_LOCAL_NOT_REGISTEREDContent; } }
        private static int _CODE_LOCAL_NOT_REGISTEREDContent = default;
        private static bool _CODE_LOCAL_NOT_REGISTEREDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_LOCAL_POWER_OFF"/>
        /// </summary>
        public static int CODE_LOCAL_POWER_OFF { get { if (!_CODE_LOCAL_POWER_OFFReady) { _CODE_LOCAL_POWER_OFFContent = SGetField<int>(LocalBridgeClazz, "CODE_LOCAL_POWER_OFF"); _CODE_LOCAL_POWER_OFFReady = true; } return _CODE_LOCAL_POWER_OFFContent; } }
        private static int _CODE_LOCAL_POWER_OFFContent = default;
        private static bool _CODE_LOCAL_POWER_OFFReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_LOCAL_SERVICE_UNAVAILABLE"/>
        /// </summary>
        public static int CODE_LOCAL_SERVICE_UNAVAILABLE { get { if (!_CODE_LOCAL_SERVICE_UNAVAILABLEReady) { _CODE_LOCAL_SERVICE_UNAVAILABLEContent = SGetField<int>(LocalBridgeClazz, "CODE_LOCAL_SERVICE_UNAVAILABLE"); _CODE_LOCAL_SERVICE_UNAVAILABLEReady = true; } return _CODE_LOCAL_SERVICE_UNAVAILABLEContent; } }
        private static int _CODE_LOCAL_SERVICE_UNAVAILABLEContent = default;
        private static bool _CODE_LOCAL_SERVICE_UNAVAILABLEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_LOW_BATTERY"/>
        /// </summary>
        public static int CODE_LOW_BATTERY { get { if (!_CODE_LOW_BATTERYReady) { _CODE_LOW_BATTERYContent = SGetField<int>(LocalBridgeClazz, "CODE_LOW_BATTERY"); _CODE_LOW_BATTERYReady = true; } return _CODE_LOW_BATTERYContent; } }
        private static int _CODE_LOW_BATTERYContent = default;
        private static bool _CODE_LOW_BATTERYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_MAXIMUM_NUMBER_OF_CALLS_REACHED"/>
        /// </summary>
        public static int CODE_MAXIMUM_NUMBER_OF_CALLS_REACHED { get { if (!_CODE_MAXIMUM_NUMBER_OF_CALLS_REACHEDReady) { _CODE_MAXIMUM_NUMBER_OF_CALLS_REACHEDContent = SGetField<int>(LocalBridgeClazz, "CODE_MAXIMUM_NUMBER_OF_CALLS_REACHED"); _CODE_MAXIMUM_NUMBER_OF_CALLS_REACHEDReady = true; } return _CODE_MAXIMUM_NUMBER_OF_CALLS_REACHEDContent; } }
        private static int _CODE_MAXIMUM_NUMBER_OF_CALLS_REACHEDContent = default;
        private static bool _CODE_MAXIMUM_NUMBER_OF_CALLS_REACHEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_MEDIA_INIT_FAILED"/>
        /// </summary>
        public static int CODE_MEDIA_INIT_FAILED { get { if (!_CODE_MEDIA_INIT_FAILEDReady) { _CODE_MEDIA_INIT_FAILEDContent = SGetField<int>(LocalBridgeClazz, "CODE_MEDIA_INIT_FAILED"); _CODE_MEDIA_INIT_FAILEDReady = true; } return _CODE_MEDIA_INIT_FAILEDContent; } }
        private static int _CODE_MEDIA_INIT_FAILEDContent = default;
        private static bool _CODE_MEDIA_INIT_FAILEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_MEDIA_NO_DATA"/>
        /// </summary>
        public static int CODE_MEDIA_NO_DATA { get { if (!_CODE_MEDIA_NO_DATAReady) { _CODE_MEDIA_NO_DATAContent = SGetField<int>(LocalBridgeClazz, "CODE_MEDIA_NO_DATA"); _CODE_MEDIA_NO_DATAReady = true; } return _CODE_MEDIA_NO_DATAContent; } }
        private static int _CODE_MEDIA_NO_DATAContent = default;
        private static bool _CODE_MEDIA_NO_DATAReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_MEDIA_NOT_ACCEPTABLE"/>
        /// </summary>
        public static int CODE_MEDIA_NOT_ACCEPTABLE { get { if (!_CODE_MEDIA_NOT_ACCEPTABLEReady) { _CODE_MEDIA_NOT_ACCEPTABLEContent = SGetField<int>(LocalBridgeClazz, "CODE_MEDIA_NOT_ACCEPTABLE"); _CODE_MEDIA_NOT_ACCEPTABLEReady = true; } return _CODE_MEDIA_NOT_ACCEPTABLEContent; } }
        private static int _CODE_MEDIA_NOT_ACCEPTABLEContent = default;
        private static bool _CODE_MEDIA_NOT_ACCEPTABLEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_MEDIA_UNSPECIFIED"/>
        /// </summary>
        public static int CODE_MEDIA_UNSPECIFIED { get { if (!_CODE_MEDIA_UNSPECIFIEDReady) { _CODE_MEDIA_UNSPECIFIEDContent = SGetField<int>(LocalBridgeClazz, "CODE_MEDIA_UNSPECIFIED"); _CODE_MEDIA_UNSPECIFIEDReady = true; } return _CODE_MEDIA_UNSPECIFIEDContent; } }
        private static int _CODE_MEDIA_UNSPECIFIEDContent = default;
        private static bool _CODE_MEDIA_UNSPECIFIEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_MULTIENDPOINT_NOT_SUPPORTED"/>
        /// </summary>
        public static int CODE_MULTIENDPOINT_NOT_SUPPORTED { get { if (!_CODE_MULTIENDPOINT_NOT_SUPPORTEDReady) { _CODE_MULTIENDPOINT_NOT_SUPPORTEDContent = SGetField<int>(LocalBridgeClazz, "CODE_MULTIENDPOINT_NOT_SUPPORTED"); _CODE_MULTIENDPOINT_NOT_SUPPORTEDReady = true; } return _CODE_MULTIENDPOINT_NOT_SUPPORTEDContent; } }
        private static int _CODE_MULTIENDPOINT_NOT_SUPPORTEDContent = default;
        private static bool _CODE_MULTIENDPOINT_NOT_SUPPORTEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_NETWORK_CONGESTION"/>
        /// </summary>
        public static int CODE_NETWORK_CONGESTION { get { if (!_CODE_NETWORK_CONGESTIONReady) { _CODE_NETWORK_CONGESTIONContent = SGetField<int>(LocalBridgeClazz, "CODE_NETWORK_CONGESTION"); _CODE_NETWORK_CONGESTIONReady = true; } return _CODE_NETWORK_CONGESTIONContent; } }
        private static int _CODE_NETWORK_CONGESTIONContent = default;
        private static bool _CODE_NETWORK_CONGESTIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_NETWORK_DETACH"/>
        /// </summary>
        public static int CODE_NETWORK_DETACH { get { if (!_CODE_NETWORK_DETACHReady) { _CODE_NETWORK_DETACHContent = SGetField<int>(LocalBridgeClazz, "CODE_NETWORK_DETACH"); _CODE_NETWORK_DETACHReady = true; } return _CODE_NETWORK_DETACHContent; } }
        private static int _CODE_NETWORK_DETACHContent = default;
        private static bool _CODE_NETWORK_DETACHReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_NETWORK_REJECT"/>
        /// </summary>
        public static int CODE_NETWORK_REJECT { get { if (!_CODE_NETWORK_REJECTReady) { _CODE_NETWORK_REJECTContent = SGetField<int>(LocalBridgeClazz, "CODE_NETWORK_REJECT"); _CODE_NETWORK_REJECTReady = true; } return _CODE_NETWORK_REJECTContent; } }
        private static int _CODE_NETWORK_REJECTContent = default;
        private static bool _CODE_NETWORK_REJECTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_NETWORK_RESP_TIMEOUT"/>
        /// </summary>
        public static int CODE_NETWORK_RESP_TIMEOUT { get { if (!_CODE_NETWORK_RESP_TIMEOUTReady) { _CODE_NETWORK_RESP_TIMEOUTContent = SGetField<int>(LocalBridgeClazz, "CODE_NETWORK_RESP_TIMEOUT"); _CODE_NETWORK_RESP_TIMEOUTReady = true; } return _CODE_NETWORK_RESP_TIMEOUTContent; } }
        private static int _CODE_NETWORK_RESP_TIMEOUTContent = default;
        private static bool _CODE_NETWORK_RESP_TIMEOUTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_NO_CSFB_IN_CS_ROAM"/>
        /// </summary>
        public static int CODE_NO_CSFB_IN_CS_ROAM { get { if (!_CODE_NO_CSFB_IN_CS_ROAMReady) { _CODE_NO_CSFB_IN_CS_ROAMContent = SGetField<int>(LocalBridgeClazz, "CODE_NO_CSFB_IN_CS_ROAM"); _CODE_NO_CSFB_IN_CS_ROAMReady = true; } return _CODE_NO_CSFB_IN_CS_ROAMContent; } }
        private static int _CODE_NO_CSFB_IN_CS_ROAMContent = default;
        private static bool _CODE_NO_CSFB_IN_CS_ROAMReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_NO_VALID_SIM"/>
        /// </summary>
        public static int CODE_NO_VALID_SIM { get { if (!_CODE_NO_VALID_SIMReady) { _CODE_NO_VALID_SIMContent = SGetField<int>(LocalBridgeClazz, "CODE_NO_VALID_SIM"); _CODE_NO_VALID_SIMReady = true; } return _CODE_NO_VALID_SIMContent; } }
        private static int _CODE_NO_VALID_SIMContent = default;
        private static bool _CODE_NO_VALID_SIMReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_OEM_CAUSE_1"/>
        /// </summary>
        public static int CODE_OEM_CAUSE_1 { get { if (!_CODE_OEM_CAUSE_1Ready) { _CODE_OEM_CAUSE_1Content = SGetField<int>(LocalBridgeClazz, "CODE_OEM_CAUSE_1"); _CODE_OEM_CAUSE_1Ready = true; } return _CODE_OEM_CAUSE_1Content; } }
        private static int _CODE_OEM_CAUSE_1Content = default;
        private static bool _CODE_OEM_CAUSE_1Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_OEM_CAUSE_10"/>
        /// </summary>
        public static int CODE_OEM_CAUSE_10 { get { if (!_CODE_OEM_CAUSE_10Ready) { _CODE_OEM_CAUSE_10Content = SGetField<int>(LocalBridgeClazz, "CODE_OEM_CAUSE_10"); _CODE_OEM_CAUSE_10Ready = true; } return _CODE_OEM_CAUSE_10Content; } }
        private static int _CODE_OEM_CAUSE_10Content = default;
        private static bool _CODE_OEM_CAUSE_10Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_OEM_CAUSE_11"/>
        /// </summary>
        public static int CODE_OEM_CAUSE_11 { get { if (!_CODE_OEM_CAUSE_11Ready) { _CODE_OEM_CAUSE_11Content = SGetField<int>(LocalBridgeClazz, "CODE_OEM_CAUSE_11"); _CODE_OEM_CAUSE_11Ready = true; } return _CODE_OEM_CAUSE_11Content; } }
        private static int _CODE_OEM_CAUSE_11Content = default;
        private static bool _CODE_OEM_CAUSE_11Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_OEM_CAUSE_12"/>
        /// </summary>
        public static int CODE_OEM_CAUSE_12 { get { if (!_CODE_OEM_CAUSE_12Ready) { _CODE_OEM_CAUSE_12Content = SGetField<int>(LocalBridgeClazz, "CODE_OEM_CAUSE_12"); _CODE_OEM_CAUSE_12Ready = true; } return _CODE_OEM_CAUSE_12Content; } }
        private static int _CODE_OEM_CAUSE_12Content = default;
        private static bool _CODE_OEM_CAUSE_12Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_OEM_CAUSE_13"/>
        /// </summary>
        public static int CODE_OEM_CAUSE_13 { get { if (!_CODE_OEM_CAUSE_13Ready) { _CODE_OEM_CAUSE_13Content = SGetField<int>(LocalBridgeClazz, "CODE_OEM_CAUSE_13"); _CODE_OEM_CAUSE_13Ready = true; } return _CODE_OEM_CAUSE_13Content; } }
        private static int _CODE_OEM_CAUSE_13Content = default;
        private static bool _CODE_OEM_CAUSE_13Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_OEM_CAUSE_14"/>
        /// </summary>
        public static int CODE_OEM_CAUSE_14 { get { if (!_CODE_OEM_CAUSE_14Ready) { _CODE_OEM_CAUSE_14Content = SGetField<int>(LocalBridgeClazz, "CODE_OEM_CAUSE_14"); _CODE_OEM_CAUSE_14Ready = true; } return _CODE_OEM_CAUSE_14Content; } }
        private static int _CODE_OEM_CAUSE_14Content = default;
        private static bool _CODE_OEM_CAUSE_14Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_OEM_CAUSE_15"/>
        /// </summary>
        public static int CODE_OEM_CAUSE_15 { get { if (!_CODE_OEM_CAUSE_15Ready) { _CODE_OEM_CAUSE_15Content = SGetField<int>(LocalBridgeClazz, "CODE_OEM_CAUSE_15"); _CODE_OEM_CAUSE_15Ready = true; } return _CODE_OEM_CAUSE_15Content; } }
        private static int _CODE_OEM_CAUSE_15Content = default;
        private static bool _CODE_OEM_CAUSE_15Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_OEM_CAUSE_2"/>
        /// </summary>
        public static int CODE_OEM_CAUSE_2 { get { if (!_CODE_OEM_CAUSE_2Ready) { _CODE_OEM_CAUSE_2Content = SGetField<int>(LocalBridgeClazz, "CODE_OEM_CAUSE_2"); _CODE_OEM_CAUSE_2Ready = true; } return _CODE_OEM_CAUSE_2Content; } }
        private static int _CODE_OEM_CAUSE_2Content = default;
        private static bool _CODE_OEM_CAUSE_2Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_OEM_CAUSE_3"/>
        /// </summary>
        public static int CODE_OEM_CAUSE_3 { get { if (!_CODE_OEM_CAUSE_3Ready) { _CODE_OEM_CAUSE_3Content = SGetField<int>(LocalBridgeClazz, "CODE_OEM_CAUSE_3"); _CODE_OEM_CAUSE_3Ready = true; } return _CODE_OEM_CAUSE_3Content; } }
        private static int _CODE_OEM_CAUSE_3Content = default;
        private static bool _CODE_OEM_CAUSE_3Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_OEM_CAUSE_4"/>
        /// </summary>
        public static int CODE_OEM_CAUSE_4 { get { if (!_CODE_OEM_CAUSE_4Ready) { _CODE_OEM_CAUSE_4Content = SGetField<int>(LocalBridgeClazz, "CODE_OEM_CAUSE_4"); _CODE_OEM_CAUSE_4Ready = true; } return _CODE_OEM_CAUSE_4Content; } }
        private static int _CODE_OEM_CAUSE_4Content = default;
        private static bool _CODE_OEM_CAUSE_4Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_OEM_CAUSE_5"/>
        /// </summary>
        public static int CODE_OEM_CAUSE_5 { get { if (!_CODE_OEM_CAUSE_5Ready) { _CODE_OEM_CAUSE_5Content = SGetField<int>(LocalBridgeClazz, "CODE_OEM_CAUSE_5"); _CODE_OEM_CAUSE_5Ready = true; } return _CODE_OEM_CAUSE_5Content; } }
        private static int _CODE_OEM_CAUSE_5Content = default;
        private static bool _CODE_OEM_CAUSE_5Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_OEM_CAUSE_6"/>
        /// </summary>
        public static int CODE_OEM_CAUSE_6 { get { if (!_CODE_OEM_CAUSE_6Ready) { _CODE_OEM_CAUSE_6Content = SGetField<int>(LocalBridgeClazz, "CODE_OEM_CAUSE_6"); _CODE_OEM_CAUSE_6Ready = true; } return _CODE_OEM_CAUSE_6Content; } }
        private static int _CODE_OEM_CAUSE_6Content = default;
        private static bool _CODE_OEM_CAUSE_6Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_OEM_CAUSE_7"/>
        /// </summary>
        public static int CODE_OEM_CAUSE_7 { get { if (!_CODE_OEM_CAUSE_7Ready) { _CODE_OEM_CAUSE_7Content = SGetField<int>(LocalBridgeClazz, "CODE_OEM_CAUSE_7"); _CODE_OEM_CAUSE_7Ready = true; } return _CODE_OEM_CAUSE_7Content; } }
        private static int _CODE_OEM_CAUSE_7Content = default;
        private static bool _CODE_OEM_CAUSE_7Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_OEM_CAUSE_8"/>
        /// </summary>
        public static int CODE_OEM_CAUSE_8 { get { if (!_CODE_OEM_CAUSE_8Ready) { _CODE_OEM_CAUSE_8Content = SGetField<int>(LocalBridgeClazz, "CODE_OEM_CAUSE_8"); _CODE_OEM_CAUSE_8Ready = true; } return _CODE_OEM_CAUSE_8Content; } }
        private static int _CODE_OEM_CAUSE_8Content = default;
        private static bool _CODE_OEM_CAUSE_8Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_OEM_CAUSE_9"/>
        /// </summary>
        public static int CODE_OEM_CAUSE_9 { get { if (!_CODE_OEM_CAUSE_9Ready) { _CODE_OEM_CAUSE_9Content = SGetField<int>(LocalBridgeClazz, "CODE_OEM_CAUSE_9"); _CODE_OEM_CAUSE_9Ready = true; } return _CODE_OEM_CAUSE_9Content; } }
        private static int _CODE_OEM_CAUSE_9Content = default;
        private static bool _CODE_OEM_CAUSE_9Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_RADIO_ACCESS_FAILURE"/>
        /// </summary>
        public static int CODE_RADIO_ACCESS_FAILURE { get { if (!_CODE_RADIO_ACCESS_FAILUREReady) { _CODE_RADIO_ACCESS_FAILUREContent = SGetField<int>(LocalBridgeClazz, "CODE_RADIO_ACCESS_FAILURE"); _CODE_RADIO_ACCESS_FAILUREReady = true; } return _CODE_RADIO_ACCESS_FAILUREContent; } }
        private static int _CODE_RADIO_ACCESS_FAILUREContent = default;
        private static bool _CODE_RADIO_ACCESS_FAILUREReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_RADIO_INTERNAL_ERROR"/>
        /// </summary>
        public static int CODE_RADIO_INTERNAL_ERROR { get { if (!_CODE_RADIO_INTERNAL_ERRORReady) { _CODE_RADIO_INTERNAL_ERRORContent = SGetField<int>(LocalBridgeClazz, "CODE_RADIO_INTERNAL_ERROR"); _CODE_RADIO_INTERNAL_ERRORReady = true; } return _CODE_RADIO_INTERNAL_ERRORContent; } }
        private static int _CODE_RADIO_INTERNAL_ERRORContent = default;
        private static bool _CODE_RADIO_INTERNAL_ERRORReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_RADIO_LINK_FAILURE"/>
        /// </summary>
        public static int CODE_RADIO_LINK_FAILURE { get { if (!_CODE_RADIO_LINK_FAILUREReady) { _CODE_RADIO_LINK_FAILUREContent = SGetField<int>(LocalBridgeClazz, "CODE_RADIO_LINK_FAILURE"); _CODE_RADIO_LINK_FAILUREReady = true; } return _CODE_RADIO_LINK_FAILUREContent; } }
        private static int _CODE_RADIO_LINK_FAILUREContent = default;
        private static bool _CODE_RADIO_LINK_FAILUREReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_RADIO_LINK_LOST"/>
        /// </summary>
        public static int CODE_RADIO_LINK_LOST { get { if (!_CODE_RADIO_LINK_LOSTReady) { _CODE_RADIO_LINK_LOSTContent = SGetField<int>(LocalBridgeClazz, "CODE_RADIO_LINK_LOST"); _CODE_RADIO_LINK_LOSTReady = true; } return _CODE_RADIO_LINK_LOSTContent; } }
        private static int _CODE_RADIO_LINK_LOSTContent = default;
        private static bool _CODE_RADIO_LINK_LOSTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_RADIO_OFF"/>
        /// </summary>
        public static int CODE_RADIO_OFF { get { if (!_CODE_RADIO_OFFReady) { _CODE_RADIO_OFFContent = SGetField<int>(LocalBridgeClazz, "CODE_RADIO_OFF"); _CODE_RADIO_OFFReady = true; } return _CODE_RADIO_OFFContent; } }
        private static int _CODE_RADIO_OFFContent = default;
        private static bool _CODE_RADIO_OFFReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_RADIO_RELEASE_ABNORMAL"/>
        /// </summary>
        public static int CODE_RADIO_RELEASE_ABNORMAL { get { if (!_CODE_RADIO_RELEASE_ABNORMALReady) { _CODE_RADIO_RELEASE_ABNORMALContent = SGetField<int>(LocalBridgeClazz, "CODE_RADIO_RELEASE_ABNORMAL"); _CODE_RADIO_RELEASE_ABNORMALReady = true; } return _CODE_RADIO_RELEASE_ABNORMALContent; } }
        private static int _CODE_RADIO_RELEASE_ABNORMALContent = default;
        private static bool _CODE_RADIO_RELEASE_ABNORMALReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_RADIO_RELEASE_NORMAL"/>
        /// </summary>
        public static int CODE_RADIO_RELEASE_NORMAL { get { if (!_CODE_RADIO_RELEASE_NORMALReady) { _CODE_RADIO_RELEASE_NORMALContent = SGetField<int>(LocalBridgeClazz, "CODE_RADIO_RELEASE_NORMAL"); _CODE_RADIO_RELEASE_NORMALReady = true; } return _CODE_RADIO_RELEASE_NORMALContent; } }
        private static int _CODE_RADIO_RELEASE_NORMALContent = default;
        private static bool _CODE_RADIO_RELEASE_NORMALReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_RADIO_SETUP_FAILURE"/>
        /// </summary>
        public static int CODE_RADIO_SETUP_FAILURE { get { if (!_CODE_RADIO_SETUP_FAILUREReady) { _CODE_RADIO_SETUP_FAILUREContent = SGetField<int>(LocalBridgeClazz, "CODE_RADIO_SETUP_FAILURE"); _CODE_RADIO_SETUP_FAILUREReady = true; } return _CODE_RADIO_SETUP_FAILUREContent; } }
        private static int _CODE_RADIO_SETUP_FAILUREContent = default;
        private static bool _CODE_RADIO_SETUP_FAILUREReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_RADIO_UPLINK_FAILURE"/>
        /// </summary>
        public static int CODE_RADIO_UPLINK_FAILURE { get { if (!_CODE_RADIO_UPLINK_FAILUREReady) { _CODE_RADIO_UPLINK_FAILUREContent = SGetField<int>(LocalBridgeClazz, "CODE_RADIO_UPLINK_FAILURE"); _CODE_RADIO_UPLINK_FAILUREReady = true; } return _CODE_RADIO_UPLINK_FAILUREContent; } }
        private static int _CODE_RADIO_UPLINK_FAILUREContent = default;
        private static bool _CODE_RADIO_UPLINK_FAILUREReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_REGISTRATION_ERROR"/>
        /// </summary>
        public static int CODE_REGISTRATION_ERROR { get { if (!_CODE_REGISTRATION_ERRORReady) { _CODE_REGISTRATION_ERRORContent = SGetField<int>(LocalBridgeClazz, "CODE_REGISTRATION_ERROR"); _CODE_REGISTRATION_ERRORReady = true; } return _CODE_REGISTRATION_ERRORContent; } }
        private static int _CODE_REGISTRATION_ERRORContent = default;
        private static bool _CODE_REGISTRATION_ERRORReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_REJECT_1X_COLLISION"/>
        /// </summary>
        public static int CODE_REJECT_1X_COLLISION { get { if (!_CODE_REJECT_1X_COLLISIONReady) { _CODE_REJECT_1X_COLLISIONContent = SGetField<int>(LocalBridgeClazz, "CODE_REJECT_1X_COLLISION"); _CODE_REJECT_1X_COLLISIONReady = true; } return _CODE_REJECT_1X_COLLISIONContent; } }
        private static int _CODE_REJECT_1X_COLLISIONContent = default;
        private static bool _CODE_REJECT_1X_COLLISIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_REJECT_CALL_ON_OTHER_SUB"/>
        /// </summary>
        public static int CODE_REJECT_CALL_ON_OTHER_SUB { get { if (!_CODE_REJECT_CALL_ON_OTHER_SUBReady) { _CODE_REJECT_CALL_ON_OTHER_SUBContent = SGetField<int>(LocalBridgeClazz, "CODE_REJECT_CALL_ON_OTHER_SUB"); _CODE_REJECT_CALL_ON_OTHER_SUBReady = true; } return _CODE_REJECT_CALL_ON_OTHER_SUBContent; } }
        private static int _CODE_REJECT_CALL_ON_OTHER_SUBContent = default;
        private static bool _CODE_REJECT_CALL_ON_OTHER_SUBReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_REJECT_CALL_TYPE_NOT_ALLOWED"/>
        /// </summary>
        public static int CODE_REJECT_CALL_TYPE_NOT_ALLOWED { get { if (!_CODE_REJECT_CALL_TYPE_NOT_ALLOWEDReady) { _CODE_REJECT_CALL_TYPE_NOT_ALLOWEDContent = SGetField<int>(LocalBridgeClazz, "CODE_REJECT_CALL_TYPE_NOT_ALLOWED"); _CODE_REJECT_CALL_TYPE_NOT_ALLOWEDReady = true; } return _CODE_REJECT_CALL_TYPE_NOT_ALLOWEDContent; } }
        private static int _CODE_REJECT_CALL_TYPE_NOT_ALLOWEDContent = default;
        private static bool _CODE_REJECT_CALL_TYPE_NOT_ALLOWEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_REJECT_CONFERENCE_TTY_NOT_ALLOWED"/>
        /// </summary>
        public static int CODE_REJECT_CONFERENCE_TTY_NOT_ALLOWED { get { if (!_CODE_REJECT_CONFERENCE_TTY_NOT_ALLOWEDReady) { _CODE_REJECT_CONFERENCE_TTY_NOT_ALLOWEDContent = SGetField<int>(LocalBridgeClazz, "CODE_REJECT_CONFERENCE_TTY_NOT_ALLOWED"); _CODE_REJECT_CONFERENCE_TTY_NOT_ALLOWEDReady = true; } return _CODE_REJECT_CONFERENCE_TTY_NOT_ALLOWEDContent; } }
        private static int _CODE_REJECT_CONFERENCE_TTY_NOT_ALLOWEDContent = default;
        private static bool _CODE_REJECT_CONFERENCE_TTY_NOT_ALLOWEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_REJECT_INTERNAL_ERROR"/>
        /// </summary>
        public static int CODE_REJECT_INTERNAL_ERROR { get { if (!_CODE_REJECT_INTERNAL_ERRORReady) { _CODE_REJECT_INTERNAL_ERRORContent = SGetField<int>(LocalBridgeClazz, "CODE_REJECT_INTERNAL_ERROR"); _CODE_REJECT_INTERNAL_ERRORReady = true; } return _CODE_REJECT_INTERNAL_ERRORContent; } }
        private static int _CODE_REJECT_INTERNAL_ERRORContent = default;
        private static bool _CODE_REJECT_INTERNAL_ERRORReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_REJECT_MAX_CALL_LIMIT_REACHED"/>
        /// </summary>
        public static int CODE_REJECT_MAX_CALL_LIMIT_REACHED { get { if (!_CODE_REJECT_MAX_CALL_LIMIT_REACHEDReady) { _CODE_REJECT_MAX_CALL_LIMIT_REACHEDContent = SGetField<int>(LocalBridgeClazz, "CODE_REJECT_MAX_CALL_LIMIT_REACHED"); _CODE_REJECT_MAX_CALL_LIMIT_REACHEDReady = true; } return _CODE_REJECT_MAX_CALL_LIMIT_REACHEDContent; } }
        private static int _CODE_REJECT_MAX_CALL_LIMIT_REACHEDContent = default;
        private static bool _CODE_REJECT_MAX_CALL_LIMIT_REACHEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_REJECT_ONGOING_CALL_SETUP"/>
        /// </summary>
        public static int CODE_REJECT_ONGOING_CALL_SETUP { get { if (!_CODE_REJECT_ONGOING_CALL_SETUPReady) { _CODE_REJECT_ONGOING_CALL_SETUPContent = SGetField<int>(LocalBridgeClazz, "CODE_REJECT_ONGOING_CALL_SETUP"); _CODE_REJECT_ONGOING_CALL_SETUPReady = true; } return _CODE_REJECT_ONGOING_CALL_SETUPContent; } }
        private static int _CODE_REJECT_ONGOING_CALL_SETUPContent = default;
        private static bool _CODE_REJECT_ONGOING_CALL_SETUPReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_REJECT_ONGOING_CALL_TRANSFER"/>
        /// </summary>
        public static int CODE_REJECT_ONGOING_CALL_TRANSFER { get { if (!_CODE_REJECT_ONGOING_CALL_TRANSFERReady) { _CODE_REJECT_ONGOING_CALL_TRANSFERContent = SGetField<int>(LocalBridgeClazz, "CODE_REJECT_ONGOING_CALL_TRANSFER"); _CODE_REJECT_ONGOING_CALL_TRANSFERReady = true; } return _CODE_REJECT_ONGOING_CALL_TRANSFERContent; } }
        private static int _CODE_REJECT_ONGOING_CALL_TRANSFERContent = default;
        private static bool _CODE_REJECT_ONGOING_CALL_TRANSFERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_REJECT_ONGOING_CALL_UPGRADE"/>
        /// </summary>
        public static int CODE_REJECT_ONGOING_CALL_UPGRADE { get { if (!_CODE_REJECT_ONGOING_CALL_UPGRADEReady) { _CODE_REJECT_ONGOING_CALL_UPGRADEContent = SGetField<int>(LocalBridgeClazz, "CODE_REJECT_ONGOING_CALL_UPGRADE"); _CODE_REJECT_ONGOING_CALL_UPGRADEReady = true; } return _CODE_REJECT_ONGOING_CALL_UPGRADEContent; } }
        private static int _CODE_REJECT_ONGOING_CALL_UPGRADEContent = default;
        private static bool _CODE_REJECT_ONGOING_CALL_UPGRADEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_REJECT_ONGOING_CALL_WAITING_DISABLED"/>
        /// </summary>
        public static int CODE_REJECT_ONGOING_CALL_WAITING_DISABLED { get { if (!_CODE_REJECT_ONGOING_CALL_WAITING_DISABLEDReady) { _CODE_REJECT_ONGOING_CALL_WAITING_DISABLEDContent = SGetField<int>(LocalBridgeClazz, "CODE_REJECT_ONGOING_CALL_WAITING_DISABLED"); _CODE_REJECT_ONGOING_CALL_WAITING_DISABLEDReady = true; } return _CODE_REJECT_ONGOING_CALL_WAITING_DISABLEDContent; } }
        private static int _CODE_REJECT_ONGOING_CALL_WAITING_DISABLEDContent = default;
        private static bool _CODE_REJECT_ONGOING_CALL_WAITING_DISABLEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_REJECT_ONGOING_CONFERENCE_CALL"/>
        /// </summary>
        public static int CODE_REJECT_ONGOING_CONFERENCE_CALL { get { if (!_CODE_REJECT_ONGOING_CONFERENCE_CALLReady) { _CODE_REJECT_ONGOING_CONFERENCE_CALLContent = SGetField<int>(LocalBridgeClazz, "CODE_REJECT_ONGOING_CONFERENCE_CALL"); _CODE_REJECT_ONGOING_CONFERENCE_CALLReady = true; } return _CODE_REJECT_ONGOING_CONFERENCE_CALLContent; } }
        private static int _CODE_REJECT_ONGOING_CONFERENCE_CALLContent = default;
        private static bool _CODE_REJECT_ONGOING_CONFERENCE_CALLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_REJECT_ONGOING_CS_CALL"/>
        /// </summary>
        public static int CODE_REJECT_ONGOING_CS_CALL { get { if (!_CODE_REJECT_ONGOING_CS_CALLReady) { _CODE_REJECT_ONGOING_CS_CALLContent = SGetField<int>(LocalBridgeClazz, "CODE_REJECT_ONGOING_CS_CALL"); _CODE_REJECT_ONGOING_CS_CALLReady = true; } return _CODE_REJECT_ONGOING_CS_CALLContent; } }
        private static int _CODE_REJECT_ONGOING_CS_CALLContent = default;
        private static bool _CODE_REJECT_ONGOING_CS_CALLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_REJECT_ONGOING_E911_CALL"/>
        /// </summary>
        public static int CODE_REJECT_ONGOING_E911_CALL { get { if (!_CODE_REJECT_ONGOING_E911_CALLReady) { _CODE_REJECT_ONGOING_E911_CALLContent = SGetField<int>(LocalBridgeClazz, "CODE_REJECT_ONGOING_E911_CALL"); _CODE_REJECT_ONGOING_E911_CALLReady = true; } return _CODE_REJECT_ONGOING_E911_CALLContent; } }
        private static int _CODE_REJECT_ONGOING_E911_CALLContent = default;
        private static bool _CODE_REJECT_ONGOING_E911_CALLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_REJECT_ONGOING_ENCRYPTED_CALL"/>
        /// </summary>
        public static int CODE_REJECT_ONGOING_ENCRYPTED_CALL { get { if (!_CODE_REJECT_ONGOING_ENCRYPTED_CALLReady) { _CODE_REJECT_ONGOING_ENCRYPTED_CALLContent = SGetField<int>(LocalBridgeClazz, "CODE_REJECT_ONGOING_ENCRYPTED_CALL"); _CODE_REJECT_ONGOING_ENCRYPTED_CALLReady = true; } return _CODE_REJECT_ONGOING_ENCRYPTED_CALLContent; } }
        private static int _CODE_REJECT_ONGOING_ENCRYPTED_CALLContent = default;
        private static bool _CODE_REJECT_ONGOING_ENCRYPTED_CALLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_REJECT_ONGOING_HANDOVER"/>
        /// </summary>
        public static int CODE_REJECT_ONGOING_HANDOVER { get { if (!_CODE_REJECT_ONGOING_HANDOVERReady) { _CODE_REJECT_ONGOING_HANDOVERContent = SGetField<int>(LocalBridgeClazz, "CODE_REJECT_ONGOING_HANDOVER"); _CODE_REJECT_ONGOING_HANDOVERReady = true; } return _CODE_REJECT_ONGOING_HANDOVERContent; } }
        private static int _CODE_REJECT_ONGOING_HANDOVERContent = default;
        private static bool _CODE_REJECT_ONGOING_HANDOVERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_REJECT_QOS_FAILURE"/>
        /// </summary>
        public static int CODE_REJECT_QOS_FAILURE { get { if (!_CODE_REJECT_QOS_FAILUREReady) { _CODE_REJECT_QOS_FAILUREContent = SGetField<int>(LocalBridgeClazz, "CODE_REJECT_QOS_FAILURE"); _CODE_REJECT_QOS_FAILUREReady = true; } return _CODE_REJECT_QOS_FAILUREContent; } }
        private static int _CODE_REJECT_QOS_FAILUREContent = default;
        private static bool _CODE_REJECT_QOS_FAILUREReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_REJECT_SERVICE_NOT_REGISTERED"/>
        /// </summary>
        public static int CODE_REJECT_SERVICE_NOT_REGISTERED { get { if (!_CODE_REJECT_SERVICE_NOT_REGISTEREDReady) { _CODE_REJECT_SERVICE_NOT_REGISTEREDContent = SGetField<int>(LocalBridgeClazz, "CODE_REJECT_SERVICE_NOT_REGISTERED"); _CODE_REJECT_SERVICE_NOT_REGISTEREDReady = true; } return _CODE_REJECT_SERVICE_NOT_REGISTEREDContent; } }
        private static int _CODE_REJECT_SERVICE_NOT_REGISTEREDContent = default;
        private static bool _CODE_REJECT_SERVICE_NOT_REGISTEREDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_REJECT_UNKNOWN"/>
        /// </summary>
        public static int CODE_REJECT_UNKNOWN { get { if (!_CODE_REJECT_UNKNOWNReady) { _CODE_REJECT_UNKNOWNContent = SGetField<int>(LocalBridgeClazz, "CODE_REJECT_UNKNOWN"); _CODE_REJECT_UNKNOWNReady = true; } return _CODE_REJECT_UNKNOWNContent; } }
        private static int _CODE_REJECT_UNKNOWNContent = default;
        private static bool _CODE_REJECT_UNKNOWNReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_REJECT_UNSUPPORTED_SDP_HEADERS"/>
        /// </summary>
        public static int CODE_REJECT_UNSUPPORTED_SDP_HEADERS { get { if (!_CODE_REJECT_UNSUPPORTED_SDP_HEADERSReady) { _CODE_REJECT_UNSUPPORTED_SDP_HEADERSContent = SGetField<int>(LocalBridgeClazz, "CODE_REJECT_UNSUPPORTED_SDP_HEADERS"); _CODE_REJECT_UNSUPPORTED_SDP_HEADERSReady = true; } return _CODE_REJECT_UNSUPPORTED_SDP_HEADERSContent; } }
        private static int _CODE_REJECT_UNSUPPORTED_SDP_HEADERSContent = default;
        private static bool _CODE_REJECT_UNSUPPORTED_SDP_HEADERSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_REJECT_UNSUPPORTED_SIP_HEADERS"/>
        /// </summary>
        public static int CODE_REJECT_UNSUPPORTED_SIP_HEADERS { get { if (!_CODE_REJECT_UNSUPPORTED_SIP_HEADERSReady) { _CODE_REJECT_UNSUPPORTED_SIP_HEADERSContent = SGetField<int>(LocalBridgeClazz, "CODE_REJECT_UNSUPPORTED_SIP_HEADERS"); _CODE_REJECT_UNSUPPORTED_SIP_HEADERSReady = true; } return _CODE_REJECT_UNSUPPORTED_SIP_HEADERSContent; } }
        private static int _CODE_REJECT_UNSUPPORTED_SIP_HEADERSContent = default;
        private static bool _CODE_REJECT_UNSUPPORTED_SIP_HEADERSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_REJECT_VT_AVPF_NOT_ALLOWED"/>
        /// </summary>
        public static int CODE_REJECT_VT_AVPF_NOT_ALLOWED { get { if (!_CODE_REJECT_VT_AVPF_NOT_ALLOWEDReady) { _CODE_REJECT_VT_AVPF_NOT_ALLOWEDContent = SGetField<int>(LocalBridgeClazz, "CODE_REJECT_VT_AVPF_NOT_ALLOWED"); _CODE_REJECT_VT_AVPF_NOT_ALLOWEDReady = true; } return _CODE_REJECT_VT_AVPF_NOT_ALLOWEDContent; } }
        private static int _CODE_REJECT_VT_AVPF_NOT_ALLOWEDContent = default;
        private static bool _CODE_REJECT_VT_AVPF_NOT_ALLOWEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_REJECT_VT_TTY_NOT_ALLOWED"/>
        /// </summary>
        public static int CODE_REJECT_VT_TTY_NOT_ALLOWED { get { if (!_CODE_REJECT_VT_TTY_NOT_ALLOWEDReady) { _CODE_REJECT_VT_TTY_NOT_ALLOWEDContent = SGetField<int>(LocalBridgeClazz, "CODE_REJECT_VT_TTY_NOT_ALLOWED"); _CODE_REJECT_VT_TTY_NOT_ALLOWEDReady = true; } return _CODE_REJECT_VT_TTY_NOT_ALLOWEDContent; } }
        private static int _CODE_REJECT_VT_TTY_NOT_ALLOWEDContent = default;
        private static bool _CODE_REJECT_VT_TTY_NOT_ALLOWEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_REJECTED_ELSEWHERE"/>
        /// </summary>
        public static int CODE_REJECTED_ELSEWHERE { get { if (!_CODE_REJECTED_ELSEWHEREReady) { _CODE_REJECTED_ELSEWHEREContent = SGetField<int>(LocalBridgeClazz, "CODE_REJECTED_ELSEWHERE"); _CODE_REJECTED_ELSEWHEREReady = true; } return _CODE_REJECTED_ELSEWHEREContent; } }
        private static int _CODE_REJECTED_ELSEWHEREContent = default;
        private static bool _CODE_REJECTED_ELSEWHEREReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_REMOTE_CALL_DECLINE"/>
        /// </summary>
        public static int CODE_REMOTE_CALL_DECLINE { get { if (!_CODE_REMOTE_CALL_DECLINEReady) { _CODE_REMOTE_CALL_DECLINEContent = SGetField<int>(LocalBridgeClazz, "CODE_REMOTE_CALL_DECLINE"); _CODE_REMOTE_CALL_DECLINEReady = true; } return _CODE_REMOTE_CALL_DECLINEContent; } }
        private static int _CODE_REMOTE_CALL_DECLINEContent = default;
        private static bool _CODE_REMOTE_CALL_DECLINEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_SESSION_MODIFICATION_FAILED"/>
        /// </summary>
        public static int CODE_SESSION_MODIFICATION_FAILED { get { if (!_CODE_SESSION_MODIFICATION_FAILEDReady) { _CODE_SESSION_MODIFICATION_FAILEDContent = SGetField<int>(LocalBridgeClazz, "CODE_SESSION_MODIFICATION_FAILED"); _CODE_SESSION_MODIFICATION_FAILEDReady = true; } return _CODE_SESSION_MODIFICATION_FAILEDContent; } }
        private static int _CODE_SESSION_MODIFICATION_FAILEDContent = default;
        private static bool _CODE_SESSION_MODIFICATION_FAILEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_SIP_ALTERNATE_EMERGENCY_CALL"/>
        /// </summary>
        public static int CODE_SIP_ALTERNATE_EMERGENCY_CALL { get { if (!_CODE_SIP_ALTERNATE_EMERGENCY_CALLReady) { _CODE_SIP_ALTERNATE_EMERGENCY_CALLContent = SGetField<int>(LocalBridgeClazz, "CODE_SIP_ALTERNATE_EMERGENCY_CALL"); _CODE_SIP_ALTERNATE_EMERGENCY_CALLReady = true; } return _CODE_SIP_ALTERNATE_EMERGENCY_CALLContent; } }
        private static int _CODE_SIP_ALTERNATE_EMERGENCY_CALLContent = default;
        private static bool _CODE_SIP_ALTERNATE_EMERGENCY_CALLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_SIP_AMBIGUOUS"/>
        /// </summary>
        public static int CODE_SIP_AMBIGUOUS { get { if (!_CODE_SIP_AMBIGUOUSReady) { _CODE_SIP_AMBIGUOUSContent = SGetField<int>(LocalBridgeClazz, "CODE_SIP_AMBIGUOUS"); _CODE_SIP_AMBIGUOUSReady = true; } return _CODE_SIP_AMBIGUOUSContent; } }
        private static int _CODE_SIP_AMBIGUOUSContent = default;
        private static bool _CODE_SIP_AMBIGUOUSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_SIP_BAD_ADDRESS"/>
        /// </summary>
        public static int CODE_SIP_BAD_ADDRESS { get { if (!_CODE_SIP_BAD_ADDRESSReady) { _CODE_SIP_BAD_ADDRESSContent = SGetField<int>(LocalBridgeClazz, "CODE_SIP_BAD_ADDRESS"); _CODE_SIP_BAD_ADDRESSReady = true; } return _CODE_SIP_BAD_ADDRESSContent; } }
        private static int _CODE_SIP_BAD_ADDRESSContent = default;
        private static bool _CODE_SIP_BAD_ADDRESSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_SIP_BAD_REQUEST"/>
        /// </summary>
        public static int CODE_SIP_BAD_REQUEST { get { if (!_CODE_SIP_BAD_REQUESTReady) { _CODE_SIP_BAD_REQUESTContent = SGetField<int>(LocalBridgeClazz, "CODE_SIP_BAD_REQUEST"); _CODE_SIP_BAD_REQUESTReady = true; } return _CODE_SIP_BAD_REQUESTContent; } }
        private static int _CODE_SIP_BAD_REQUESTContent = default;
        private static bool _CODE_SIP_BAD_REQUESTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_SIP_BUSY"/>
        /// </summary>
        public static int CODE_SIP_BUSY { get { if (!_CODE_SIP_BUSYReady) { _CODE_SIP_BUSYContent = SGetField<int>(LocalBridgeClazz, "CODE_SIP_BUSY"); _CODE_SIP_BUSYReady = true; } return _CODE_SIP_BUSYContent; } }
        private static int _CODE_SIP_BUSYContent = default;
        private static bool _CODE_SIP_BUSYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_SIP_CALL_OR_TRANS_DOES_NOT_EXIST"/>
        /// </summary>
        public static int CODE_SIP_CALL_OR_TRANS_DOES_NOT_EXIST { get { if (!_CODE_SIP_CALL_OR_TRANS_DOES_NOT_EXISTReady) { _CODE_SIP_CALL_OR_TRANS_DOES_NOT_EXISTContent = SGetField<int>(LocalBridgeClazz, "CODE_SIP_CALL_OR_TRANS_DOES_NOT_EXIST"); _CODE_SIP_CALL_OR_TRANS_DOES_NOT_EXISTReady = true; } return _CODE_SIP_CALL_OR_TRANS_DOES_NOT_EXISTContent; } }
        private static int _CODE_SIP_CALL_OR_TRANS_DOES_NOT_EXISTContent = default;
        private static bool _CODE_SIP_CALL_OR_TRANS_DOES_NOT_EXISTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_SIP_CLIENT_ERROR"/>
        /// </summary>
        public static int CODE_SIP_CLIENT_ERROR { get { if (!_CODE_SIP_CLIENT_ERRORReady) { _CODE_SIP_CLIENT_ERRORContent = SGetField<int>(LocalBridgeClazz, "CODE_SIP_CLIENT_ERROR"); _CODE_SIP_CLIENT_ERRORReady = true; } return _CODE_SIP_CLIENT_ERRORContent; } }
        private static int _CODE_SIP_CLIENT_ERRORContent = default;
        private static bool _CODE_SIP_CLIENT_ERRORReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_SIP_EXTENSION_REQUIRED"/>
        /// </summary>
        public static int CODE_SIP_EXTENSION_REQUIRED { get { if (!_CODE_SIP_EXTENSION_REQUIREDReady) { _CODE_SIP_EXTENSION_REQUIREDContent = SGetField<int>(LocalBridgeClazz, "CODE_SIP_EXTENSION_REQUIRED"); _CODE_SIP_EXTENSION_REQUIREDReady = true; } return _CODE_SIP_EXTENSION_REQUIREDContent; } }
        private static int _CODE_SIP_EXTENSION_REQUIREDContent = default;
        private static bool _CODE_SIP_EXTENSION_REQUIREDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_SIP_FORBIDDEN"/>
        /// </summary>
        public static int CODE_SIP_FORBIDDEN { get { if (!_CODE_SIP_FORBIDDENReady) { _CODE_SIP_FORBIDDENContent = SGetField<int>(LocalBridgeClazz, "CODE_SIP_FORBIDDEN"); _CODE_SIP_FORBIDDENReady = true; } return _CODE_SIP_FORBIDDENContent; } }
        private static int _CODE_SIP_FORBIDDENContent = default;
        private static bool _CODE_SIP_FORBIDDENReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_SIP_GLOBAL_ERROR"/>
        /// </summary>
        public static int CODE_SIP_GLOBAL_ERROR { get { if (!_CODE_SIP_GLOBAL_ERRORReady) { _CODE_SIP_GLOBAL_ERRORContent = SGetField<int>(LocalBridgeClazz, "CODE_SIP_GLOBAL_ERROR"); _CODE_SIP_GLOBAL_ERRORReady = true; } return _CODE_SIP_GLOBAL_ERRORContent; } }
        private static int _CODE_SIP_GLOBAL_ERRORContent = default;
        private static bool _CODE_SIP_GLOBAL_ERRORReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_SIP_INTERVAL_TOO_BRIEF"/>
        /// </summary>
        public static int CODE_SIP_INTERVAL_TOO_BRIEF { get { if (!_CODE_SIP_INTERVAL_TOO_BRIEFReady) { _CODE_SIP_INTERVAL_TOO_BRIEFContent = SGetField<int>(LocalBridgeClazz, "CODE_SIP_INTERVAL_TOO_BRIEF"); _CODE_SIP_INTERVAL_TOO_BRIEFReady = true; } return _CODE_SIP_INTERVAL_TOO_BRIEFContent; } }
        private static int _CODE_SIP_INTERVAL_TOO_BRIEFContent = default;
        private static bool _CODE_SIP_INTERVAL_TOO_BRIEFReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_SIP_LOOP_DETECTED"/>
        /// </summary>
        public static int CODE_SIP_LOOP_DETECTED { get { if (!_CODE_SIP_LOOP_DETECTEDReady) { _CODE_SIP_LOOP_DETECTEDContent = SGetField<int>(LocalBridgeClazz, "CODE_SIP_LOOP_DETECTED"); _CODE_SIP_LOOP_DETECTEDReady = true; } return _CODE_SIP_LOOP_DETECTEDContent; } }
        private static int _CODE_SIP_LOOP_DETECTEDContent = default;
        private static bool _CODE_SIP_LOOP_DETECTEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_SIP_METHOD_NOT_ALLOWED"/>
        /// </summary>
        public static int CODE_SIP_METHOD_NOT_ALLOWED { get { if (!_CODE_SIP_METHOD_NOT_ALLOWEDReady) { _CODE_SIP_METHOD_NOT_ALLOWEDContent = SGetField<int>(LocalBridgeClazz, "CODE_SIP_METHOD_NOT_ALLOWED"); _CODE_SIP_METHOD_NOT_ALLOWEDReady = true; } return _CODE_SIP_METHOD_NOT_ALLOWEDContent; } }
        private static int _CODE_SIP_METHOD_NOT_ALLOWEDContent = default;
        private static bool _CODE_SIP_METHOD_NOT_ALLOWEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_SIP_NOT_ACCEPTABLE"/>
        /// </summary>
        public static int CODE_SIP_NOT_ACCEPTABLE { get { if (!_CODE_SIP_NOT_ACCEPTABLEReady) { _CODE_SIP_NOT_ACCEPTABLEContent = SGetField<int>(LocalBridgeClazz, "CODE_SIP_NOT_ACCEPTABLE"); _CODE_SIP_NOT_ACCEPTABLEReady = true; } return _CODE_SIP_NOT_ACCEPTABLEContent; } }
        private static int _CODE_SIP_NOT_ACCEPTABLEContent = default;
        private static bool _CODE_SIP_NOT_ACCEPTABLEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_SIP_NOT_FOUND"/>
        /// </summary>
        public static int CODE_SIP_NOT_FOUND { get { if (!_CODE_SIP_NOT_FOUNDReady) { _CODE_SIP_NOT_FOUNDContent = SGetField<int>(LocalBridgeClazz, "CODE_SIP_NOT_FOUND"); _CODE_SIP_NOT_FOUNDReady = true; } return _CODE_SIP_NOT_FOUNDContent; } }
        private static int _CODE_SIP_NOT_FOUNDContent = default;
        private static bool _CODE_SIP_NOT_FOUNDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_SIP_NOT_REACHABLE"/>
        /// </summary>
        public static int CODE_SIP_NOT_REACHABLE { get { if (!_CODE_SIP_NOT_REACHABLEReady) { _CODE_SIP_NOT_REACHABLEContent = SGetField<int>(LocalBridgeClazz, "CODE_SIP_NOT_REACHABLE"); _CODE_SIP_NOT_REACHABLEReady = true; } return _CODE_SIP_NOT_REACHABLEContent; } }
        private static int _CODE_SIP_NOT_REACHABLEContent = default;
        private static bool _CODE_SIP_NOT_REACHABLEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_SIP_NOT_SUPPORTED"/>
        /// </summary>
        public static int CODE_SIP_NOT_SUPPORTED { get { if (!_CODE_SIP_NOT_SUPPORTEDReady) { _CODE_SIP_NOT_SUPPORTEDContent = SGetField<int>(LocalBridgeClazz, "CODE_SIP_NOT_SUPPORTED"); _CODE_SIP_NOT_SUPPORTEDReady = true; } return _CODE_SIP_NOT_SUPPORTEDContent; } }
        private static int _CODE_SIP_NOT_SUPPORTEDContent = default;
        private static bool _CODE_SIP_NOT_SUPPORTEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_SIP_PROXY_AUTHENTICATION_REQUIRED"/>
        /// </summary>
        public static int CODE_SIP_PROXY_AUTHENTICATION_REQUIRED { get { if (!_CODE_SIP_PROXY_AUTHENTICATION_REQUIREDReady) { _CODE_SIP_PROXY_AUTHENTICATION_REQUIREDContent = SGetField<int>(LocalBridgeClazz, "CODE_SIP_PROXY_AUTHENTICATION_REQUIRED"); _CODE_SIP_PROXY_AUTHENTICATION_REQUIREDReady = true; } return _CODE_SIP_PROXY_AUTHENTICATION_REQUIREDContent; } }
        private static int _CODE_SIP_PROXY_AUTHENTICATION_REQUIREDContent = default;
        private static bool _CODE_SIP_PROXY_AUTHENTICATION_REQUIREDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_SIP_REDIRECTED"/>
        /// </summary>
        public static int CODE_SIP_REDIRECTED { get { if (!_CODE_SIP_REDIRECTEDReady) { _CODE_SIP_REDIRECTEDContent = SGetField<int>(LocalBridgeClazz, "CODE_SIP_REDIRECTED"); _CODE_SIP_REDIRECTEDReady = true; } return _CODE_SIP_REDIRECTEDContent; } }
        private static int _CODE_SIP_REDIRECTEDContent = default;
        private static bool _CODE_SIP_REDIRECTEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_SIP_REQUEST_CANCELLED"/>
        /// </summary>
        public static int CODE_SIP_REQUEST_CANCELLED { get { if (!_CODE_SIP_REQUEST_CANCELLEDReady) { _CODE_SIP_REQUEST_CANCELLEDContent = SGetField<int>(LocalBridgeClazz, "CODE_SIP_REQUEST_CANCELLED"); _CODE_SIP_REQUEST_CANCELLEDReady = true; } return _CODE_SIP_REQUEST_CANCELLEDContent; } }
        private static int _CODE_SIP_REQUEST_CANCELLEDContent = default;
        private static bool _CODE_SIP_REQUEST_CANCELLEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_SIP_REQUEST_ENTITY_TOO_LARGE"/>
        /// </summary>
        public static int CODE_SIP_REQUEST_ENTITY_TOO_LARGE { get { if (!_CODE_SIP_REQUEST_ENTITY_TOO_LARGEReady) { _CODE_SIP_REQUEST_ENTITY_TOO_LARGEContent = SGetField<int>(LocalBridgeClazz, "CODE_SIP_REQUEST_ENTITY_TOO_LARGE"); _CODE_SIP_REQUEST_ENTITY_TOO_LARGEReady = true; } return _CODE_SIP_REQUEST_ENTITY_TOO_LARGEContent; } }
        private static int _CODE_SIP_REQUEST_ENTITY_TOO_LARGEContent = default;
        private static bool _CODE_SIP_REQUEST_ENTITY_TOO_LARGEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_SIP_REQUEST_PENDING"/>
        /// </summary>
        public static int CODE_SIP_REQUEST_PENDING { get { if (!_CODE_SIP_REQUEST_PENDINGReady) { _CODE_SIP_REQUEST_PENDINGContent = SGetField<int>(LocalBridgeClazz, "CODE_SIP_REQUEST_PENDING"); _CODE_SIP_REQUEST_PENDINGReady = true; } return _CODE_SIP_REQUEST_PENDINGContent; } }
        private static int _CODE_SIP_REQUEST_PENDINGContent = default;
        private static bool _CODE_SIP_REQUEST_PENDINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_SIP_REQUEST_TIMEOUT"/>
        /// </summary>
        public static int CODE_SIP_REQUEST_TIMEOUT { get { if (!_CODE_SIP_REQUEST_TIMEOUTReady) { _CODE_SIP_REQUEST_TIMEOUTContent = SGetField<int>(LocalBridgeClazz, "CODE_SIP_REQUEST_TIMEOUT"); _CODE_SIP_REQUEST_TIMEOUTReady = true; } return _CODE_SIP_REQUEST_TIMEOUTContent; } }
        private static int _CODE_SIP_REQUEST_TIMEOUTContent = default;
        private static bool _CODE_SIP_REQUEST_TIMEOUTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_SIP_REQUEST_URI_TOO_LARGE"/>
        /// </summary>
        public static int CODE_SIP_REQUEST_URI_TOO_LARGE { get { if (!_CODE_SIP_REQUEST_URI_TOO_LARGEReady) { _CODE_SIP_REQUEST_URI_TOO_LARGEContent = SGetField<int>(LocalBridgeClazz, "CODE_SIP_REQUEST_URI_TOO_LARGE"); _CODE_SIP_REQUEST_URI_TOO_LARGEReady = true; } return _CODE_SIP_REQUEST_URI_TOO_LARGEContent; } }
        private static int _CODE_SIP_REQUEST_URI_TOO_LARGEContent = default;
        private static bool _CODE_SIP_REQUEST_URI_TOO_LARGEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_SIP_SERVER_ERROR"/>
        /// </summary>
        public static int CODE_SIP_SERVER_ERROR { get { if (!_CODE_SIP_SERVER_ERRORReady) { _CODE_SIP_SERVER_ERRORContent = SGetField<int>(LocalBridgeClazz, "CODE_SIP_SERVER_ERROR"); _CODE_SIP_SERVER_ERRORReady = true; } return _CODE_SIP_SERVER_ERRORContent; } }
        private static int _CODE_SIP_SERVER_ERRORContent = default;
        private static bool _CODE_SIP_SERVER_ERRORReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_SIP_SERVER_INTERNAL_ERROR"/>
        /// </summary>
        public static int CODE_SIP_SERVER_INTERNAL_ERROR { get { if (!_CODE_SIP_SERVER_INTERNAL_ERRORReady) { _CODE_SIP_SERVER_INTERNAL_ERRORContent = SGetField<int>(LocalBridgeClazz, "CODE_SIP_SERVER_INTERNAL_ERROR"); _CODE_SIP_SERVER_INTERNAL_ERRORReady = true; } return _CODE_SIP_SERVER_INTERNAL_ERRORContent; } }
        private static int _CODE_SIP_SERVER_INTERNAL_ERRORContent = default;
        private static bool _CODE_SIP_SERVER_INTERNAL_ERRORReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_SIP_SERVER_TIMEOUT"/>
        /// </summary>
        public static int CODE_SIP_SERVER_TIMEOUT { get { if (!_CODE_SIP_SERVER_TIMEOUTReady) { _CODE_SIP_SERVER_TIMEOUTContent = SGetField<int>(LocalBridgeClazz, "CODE_SIP_SERVER_TIMEOUT"); _CODE_SIP_SERVER_TIMEOUTReady = true; } return _CODE_SIP_SERVER_TIMEOUTContent; } }
        private static int _CODE_SIP_SERVER_TIMEOUTContent = default;
        private static bool _CODE_SIP_SERVER_TIMEOUTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_SIP_SERVICE_UNAVAILABLE"/>
        /// </summary>
        public static int CODE_SIP_SERVICE_UNAVAILABLE { get { if (!_CODE_SIP_SERVICE_UNAVAILABLEReady) { _CODE_SIP_SERVICE_UNAVAILABLEContent = SGetField<int>(LocalBridgeClazz, "CODE_SIP_SERVICE_UNAVAILABLE"); _CODE_SIP_SERVICE_UNAVAILABLEReady = true; } return _CODE_SIP_SERVICE_UNAVAILABLEContent; } }
        private static int _CODE_SIP_SERVICE_UNAVAILABLEContent = default;
        private static bool _CODE_SIP_SERVICE_UNAVAILABLEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_SIP_TEMPRARILY_UNAVAILABLE"/>
        /// </summary>
        public static int CODE_SIP_TEMPRARILY_UNAVAILABLE { get { if (!_CODE_SIP_TEMPRARILY_UNAVAILABLEReady) { _CODE_SIP_TEMPRARILY_UNAVAILABLEContent = SGetField<int>(LocalBridgeClazz, "CODE_SIP_TEMPRARILY_UNAVAILABLE"); _CODE_SIP_TEMPRARILY_UNAVAILABLEReady = true; } return _CODE_SIP_TEMPRARILY_UNAVAILABLEContent; } }
        private static int _CODE_SIP_TEMPRARILY_UNAVAILABLEContent = default;
        private static bool _CODE_SIP_TEMPRARILY_UNAVAILABLEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_SIP_TOO_MANY_HOPS"/>
        /// </summary>
        public static int CODE_SIP_TOO_MANY_HOPS { get { if (!_CODE_SIP_TOO_MANY_HOPSReady) { _CODE_SIP_TOO_MANY_HOPSContent = SGetField<int>(LocalBridgeClazz, "CODE_SIP_TOO_MANY_HOPS"); _CODE_SIP_TOO_MANY_HOPSReady = true; } return _CODE_SIP_TOO_MANY_HOPSContent; } }
        private static int _CODE_SIP_TOO_MANY_HOPSContent = default;
        private static bool _CODE_SIP_TOO_MANY_HOPSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_SIP_TRANSACTION_DOES_NOT_EXIST"/>
        /// </summary>
        public static int CODE_SIP_TRANSACTION_DOES_NOT_EXIST { get { if (!_CODE_SIP_TRANSACTION_DOES_NOT_EXISTReady) { _CODE_SIP_TRANSACTION_DOES_NOT_EXISTContent = SGetField<int>(LocalBridgeClazz, "CODE_SIP_TRANSACTION_DOES_NOT_EXIST"); _CODE_SIP_TRANSACTION_DOES_NOT_EXISTReady = true; } return _CODE_SIP_TRANSACTION_DOES_NOT_EXISTContent; } }
        private static int _CODE_SIP_TRANSACTION_DOES_NOT_EXISTContent = default;
        private static bool _CODE_SIP_TRANSACTION_DOES_NOT_EXISTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_SIP_UNDECIPHERABLE"/>
        /// </summary>
        public static int CODE_SIP_UNDECIPHERABLE { get { if (!_CODE_SIP_UNDECIPHERABLEReady) { _CODE_SIP_UNDECIPHERABLEContent = SGetField<int>(LocalBridgeClazz, "CODE_SIP_UNDECIPHERABLE"); _CODE_SIP_UNDECIPHERABLEReady = true; } return _CODE_SIP_UNDECIPHERABLEContent; } }
        private static int _CODE_SIP_UNDECIPHERABLEContent = default;
        private static bool _CODE_SIP_UNDECIPHERABLEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_SIP_USER_MARKED_UNWANTED"/>
        /// </summary>
        public static int CODE_SIP_USER_MARKED_UNWANTED { get { if (!_CODE_SIP_USER_MARKED_UNWANTEDReady) { _CODE_SIP_USER_MARKED_UNWANTEDContent = SGetField<int>(LocalBridgeClazz, "CODE_SIP_USER_MARKED_UNWANTED"); _CODE_SIP_USER_MARKED_UNWANTEDReady = true; } return _CODE_SIP_USER_MARKED_UNWANTEDContent; } }
        private static int _CODE_SIP_USER_MARKED_UNWANTEDContent = default;
        private static bool _CODE_SIP_USER_MARKED_UNWANTEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_SIP_USER_REJECTED"/>
        /// </summary>
        public static int CODE_SIP_USER_REJECTED { get { if (!_CODE_SIP_USER_REJECTEDReady) { _CODE_SIP_USER_REJECTEDContent = SGetField<int>(LocalBridgeClazz, "CODE_SIP_USER_REJECTED"); _CODE_SIP_USER_REJECTEDReady = true; } return _CODE_SIP_USER_REJECTEDContent; } }
        private static int _CODE_SIP_USER_REJECTEDContent = default;
        private static bool _CODE_SIP_USER_REJECTEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_SUPP_SVC_CANCELLED"/>
        /// </summary>
        public static int CODE_SUPP_SVC_CANCELLED { get { if (!_CODE_SUPP_SVC_CANCELLEDReady) { _CODE_SUPP_SVC_CANCELLEDContent = SGetField<int>(LocalBridgeClazz, "CODE_SUPP_SVC_CANCELLED"); _CODE_SUPP_SVC_CANCELLEDReady = true; } return _CODE_SUPP_SVC_CANCELLEDContent; } }
        private static int _CODE_SUPP_SVC_CANCELLEDContent = default;
        private static bool _CODE_SUPP_SVC_CANCELLEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_SUPP_SVC_FAILED"/>
        /// </summary>
        public static int CODE_SUPP_SVC_FAILED { get { if (!_CODE_SUPP_SVC_FAILEDReady) { _CODE_SUPP_SVC_FAILEDContent = SGetField<int>(LocalBridgeClazz, "CODE_SUPP_SVC_FAILED"); _CODE_SUPP_SVC_FAILEDReady = true; } return _CODE_SUPP_SVC_FAILEDContent; } }
        private static int _CODE_SUPP_SVC_FAILEDContent = default;
        private static bool _CODE_SUPP_SVC_FAILEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_SUPP_SVC_REINVITE_COLLISION"/>
        /// </summary>
        public static int CODE_SUPP_SVC_REINVITE_COLLISION { get { if (!_CODE_SUPP_SVC_REINVITE_COLLISIONReady) { _CODE_SUPP_SVC_REINVITE_COLLISIONContent = SGetField<int>(LocalBridgeClazz, "CODE_SUPP_SVC_REINVITE_COLLISION"); _CODE_SUPP_SVC_REINVITE_COLLISIONReady = true; } return _CODE_SUPP_SVC_REINVITE_COLLISIONContent; } }
        private static int _CODE_SUPP_SVC_REINVITE_COLLISIONContent = default;
        private static bool _CODE_SUPP_SVC_REINVITE_COLLISIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_TIMEOUT_1XX_WAITING"/>
        /// </summary>
        public static int CODE_TIMEOUT_1XX_WAITING { get { if (!_CODE_TIMEOUT_1XX_WAITINGReady) { _CODE_TIMEOUT_1XX_WAITINGContent = SGetField<int>(LocalBridgeClazz, "CODE_TIMEOUT_1XX_WAITING"); _CODE_TIMEOUT_1XX_WAITINGReady = true; } return _CODE_TIMEOUT_1XX_WAITINGContent; } }
        private static int _CODE_TIMEOUT_1XX_WAITINGContent = default;
        private static bool _CODE_TIMEOUT_1XX_WAITINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_TIMEOUT_NO_ANSWER"/>
        /// </summary>
        public static int CODE_TIMEOUT_NO_ANSWER { get { if (!_CODE_TIMEOUT_NO_ANSWERReady) { _CODE_TIMEOUT_NO_ANSWERContent = SGetField<int>(LocalBridgeClazz, "CODE_TIMEOUT_NO_ANSWER"); _CODE_TIMEOUT_NO_ANSWERReady = true; } return _CODE_TIMEOUT_NO_ANSWERContent; } }
        private static int _CODE_TIMEOUT_NO_ANSWERContent = default;
        private static bool _CODE_TIMEOUT_NO_ANSWERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_TIMEOUT_NO_ANSWER_CALL_UPDATE"/>
        /// </summary>
        public static int CODE_TIMEOUT_NO_ANSWER_CALL_UPDATE { get { if (!_CODE_TIMEOUT_NO_ANSWER_CALL_UPDATEReady) { _CODE_TIMEOUT_NO_ANSWER_CALL_UPDATEContent = SGetField<int>(LocalBridgeClazz, "CODE_TIMEOUT_NO_ANSWER_CALL_UPDATE"); _CODE_TIMEOUT_NO_ANSWER_CALL_UPDATEReady = true; } return _CODE_TIMEOUT_NO_ANSWER_CALL_UPDATEContent; } }
        private static int _CODE_TIMEOUT_NO_ANSWER_CALL_UPDATEContent = default;
        private static bool _CODE_TIMEOUT_NO_ANSWER_CALL_UPDATEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_UNSPECIFIED"/>
        /// </summary>
        public static int CODE_UNSPECIFIED { get { if (!_CODE_UNSPECIFIEDReady) { _CODE_UNSPECIFIEDContent = SGetField<int>(LocalBridgeClazz, "CODE_UNSPECIFIED"); _CODE_UNSPECIFIEDReady = true; } return _CODE_UNSPECIFIEDContent; } }
        private static int _CODE_UNSPECIFIEDContent = default;
        private static bool _CODE_UNSPECIFIEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_USER_CANCELLED_SESSION_MODIFICATION"/>
        /// </summary>
        public static int CODE_USER_CANCELLED_SESSION_MODIFICATION { get { if (!_CODE_USER_CANCELLED_SESSION_MODIFICATIONReady) { _CODE_USER_CANCELLED_SESSION_MODIFICATIONContent = SGetField<int>(LocalBridgeClazz, "CODE_USER_CANCELLED_SESSION_MODIFICATION"); _CODE_USER_CANCELLED_SESSION_MODIFICATIONReady = true; } return _CODE_USER_CANCELLED_SESSION_MODIFICATIONContent; } }
        private static int _CODE_USER_CANCELLED_SESSION_MODIFICATIONContent = default;
        private static bool _CODE_USER_CANCELLED_SESSION_MODIFICATIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_USER_DECLINE"/>
        /// </summary>
        public static int CODE_USER_DECLINE { get { if (!_CODE_USER_DECLINEReady) { _CODE_USER_DECLINEContent = SGetField<int>(LocalBridgeClazz, "CODE_USER_DECLINE"); _CODE_USER_DECLINEReady = true; } return _CODE_USER_DECLINEContent; } }
        private static int _CODE_USER_DECLINEContent = default;
        private static bool _CODE_USER_DECLINEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_USER_IGNORE"/>
        /// </summary>
        public static int CODE_USER_IGNORE { get { if (!_CODE_USER_IGNOREReady) { _CODE_USER_IGNOREContent = SGetField<int>(LocalBridgeClazz, "CODE_USER_IGNORE"); _CODE_USER_IGNOREReady = true; } return _CODE_USER_IGNOREContent; } }
        private static int _CODE_USER_IGNOREContent = default;
        private static bool _CODE_USER_IGNOREReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_USER_NOANSWER"/>
        /// </summary>
        public static int CODE_USER_NOANSWER { get { if (!_CODE_USER_NOANSWERReady) { _CODE_USER_NOANSWERContent = SGetField<int>(LocalBridgeClazz, "CODE_USER_NOANSWER"); _CODE_USER_NOANSWERReady = true; } return _CODE_USER_NOANSWERContent; } }
        private static int _CODE_USER_NOANSWERContent = default;
        private static bool _CODE_USER_NOANSWERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_USER_REJECTED_SESSION_MODIFICATION"/>
        /// </summary>
        public static int CODE_USER_REJECTED_SESSION_MODIFICATION { get { if (!_CODE_USER_REJECTED_SESSION_MODIFICATIONReady) { _CODE_USER_REJECTED_SESSION_MODIFICATIONContent = SGetField<int>(LocalBridgeClazz, "CODE_USER_REJECTED_SESSION_MODIFICATION"); _CODE_USER_REJECTED_SESSION_MODIFICATIONReady = true; } return _CODE_USER_REJECTED_SESSION_MODIFICATIONContent; } }
        private static int _CODE_USER_REJECTED_SESSION_MODIFICATIONContent = default;
        private static bool _CODE_USER_REJECTED_SESSION_MODIFICATIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_USER_TERMINATED"/>
        /// </summary>
        public static int CODE_USER_TERMINATED { get { if (!_CODE_USER_TERMINATEDReady) { _CODE_USER_TERMINATEDContent = SGetField<int>(LocalBridgeClazz, "CODE_USER_TERMINATED"); _CODE_USER_TERMINATEDReady = true; } return _CODE_USER_TERMINATEDContent; } }
        private static int _CODE_USER_TERMINATEDContent = default;
        private static bool _CODE_USER_TERMINATEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_USER_TERMINATED_BY_REMOTE"/>
        /// </summary>
        public static int CODE_USER_TERMINATED_BY_REMOTE { get { if (!_CODE_USER_TERMINATED_BY_REMOTEReady) { _CODE_USER_TERMINATED_BY_REMOTEContent = SGetField<int>(LocalBridgeClazz, "CODE_USER_TERMINATED_BY_REMOTE"); _CODE_USER_TERMINATED_BY_REMOTEReady = true; } return _CODE_USER_TERMINATED_BY_REMOTEContent; } }
        private static int _CODE_USER_TERMINATED_BY_REMOTEContent = default;
        private static bool _CODE_USER_TERMINATED_BY_REMOTEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_UT_CB_PASSWORD_MISMATCH"/>
        /// </summary>
        public static int CODE_UT_CB_PASSWORD_MISMATCH { get { if (!_CODE_UT_CB_PASSWORD_MISMATCHReady) { _CODE_UT_CB_PASSWORD_MISMATCHContent = SGetField<int>(LocalBridgeClazz, "CODE_UT_CB_PASSWORD_MISMATCH"); _CODE_UT_CB_PASSWORD_MISMATCHReady = true; } return _CODE_UT_CB_PASSWORD_MISMATCHContent; } }
        private static int _CODE_UT_CB_PASSWORD_MISMATCHContent = default;
        private static bool _CODE_UT_CB_PASSWORD_MISMATCHReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_UT_NETWORK_ERROR"/>
        /// </summary>
        public static int CODE_UT_NETWORK_ERROR { get { if (!_CODE_UT_NETWORK_ERRORReady) { _CODE_UT_NETWORK_ERRORContent = SGetField<int>(LocalBridgeClazz, "CODE_UT_NETWORK_ERROR"); _CODE_UT_NETWORK_ERRORReady = true; } return _CODE_UT_NETWORK_ERRORContent; } }
        private static int _CODE_UT_NETWORK_ERRORContent = default;
        private static bool _CODE_UT_NETWORK_ERRORReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_UT_NOT_SUPPORTED"/>
        /// </summary>
        public static int CODE_UT_NOT_SUPPORTED { get { if (!_CODE_UT_NOT_SUPPORTEDReady) { _CODE_UT_NOT_SUPPORTEDContent = SGetField<int>(LocalBridgeClazz, "CODE_UT_NOT_SUPPORTED"); _CODE_UT_NOT_SUPPORTEDReady = true; } return _CODE_UT_NOT_SUPPORTEDContent; } }
        private static int _CODE_UT_NOT_SUPPORTEDContent = default;
        private static bool _CODE_UT_NOT_SUPPORTEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_UT_OPERATION_NOT_ALLOWED"/>
        /// </summary>
        public static int CODE_UT_OPERATION_NOT_ALLOWED { get { if (!_CODE_UT_OPERATION_NOT_ALLOWEDReady) { _CODE_UT_OPERATION_NOT_ALLOWEDContent = SGetField<int>(LocalBridgeClazz, "CODE_UT_OPERATION_NOT_ALLOWED"); _CODE_UT_OPERATION_NOT_ALLOWEDReady = true; } return _CODE_UT_OPERATION_NOT_ALLOWEDContent; } }
        private static int _CODE_UT_OPERATION_NOT_ALLOWEDContent = default;
        private static bool _CODE_UT_OPERATION_NOT_ALLOWEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_UT_SERVICE_UNAVAILABLE"/>
        /// </summary>
        public static int CODE_UT_SERVICE_UNAVAILABLE { get { if (!_CODE_UT_SERVICE_UNAVAILABLEReady) { _CODE_UT_SERVICE_UNAVAILABLEContent = SGetField<int>(LocalBridgeClazz, "CODE_UT_SERVICE_UNAVAILABLE"); _CODE_UT_SERVICE_UNAVAILABLEReady = true; } return _CODE_UT_SERVICE_UNAVAILABLEContent; } }
        private static int _CODE_UT_SERVICE_UNAVAILABLEContent = default;
        private static bool _CODE_UT_SERVICE_UNAVAILABLEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_UT_SS_MODIFIED_TO_DIAL"/>
        /// </summary>
        public static int CODE_UT_SS_MODIFIED_TO_DIAL { get { if (!_CODE_UT_SS_MODIFIED_TO_DIALReady) { _CODE_UT_SS_MODIFIED_TO_DIALContent = SGetField<int>(LocalBridgeClazz, "CODE_UT_SS_MODIFIED_TO_DIAL"); _CODE_UT_SS_MODIFIED_TO_DIALReady = true; } return _CODE_UT_SS_MODIFIED_TO_DIALContent; } }
        private static int _CODE_UT_SS_MODIFIED_TO_DIALContent = default;
        private static bool _CODE_UT_SS_MODIFIED_TO_DIALReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_UT_SS_MODIFIED_TO_DIAL_VIDEO"/>
        /// </summary>
        public static int CODE_UT_SS_MODIFIED_TO_DIAL_VIDEO { get { if (!_CODE_UT_SS_MODIFIED_TO_DIAL_VIDEOReady) { _CODE_UT_SS_MODIFIED_TO_DIAL_VIDEOContent = SGetField<int>(LocalBridgeClazz, "CODE_UT_SS_MODIFIED_TO_DIAL_VIDEO"); _CODE_UT_SS_MODIFIED_TO_DIAL_VIDEOReady = true; } return _CODE_UT_SS_MODIFIED_TO_DIAL_VIDEOContent; } }
        private static int _CODE_UT_SS_MODIFIED_TO_DIAL_VIDEOContent = default;
        private static bool _CODE_UT_SS_MODIFIED_TO_DIAL_VIDEOReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_UT_SS_MODIFIED_TO_SS"/>
        /// </summary>
        public static int CODE_UT_SS_MODIFIED_TO_SS { get { if (!_CODE_UT_SS_MODIFIED_TO_SSReady) { _CODE_UT_SS_MODIFIED_TO_SSContent = SGetField<int>(LocalBridgeClazz, "CODE_UT_SS_MODIFIED_TO_SS"); _CODE_UT_SS_MODIFIED_TO_SSReady = true; } return _CODE_UT_SS_MODIFIED_TO_SSContent; } }
        private static int _CODE_UT_SS_MODIFIED_TO_SSContent = default;
        private static bool _CODE_UT_SS_MODIFIED_TO_SSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_UT_SS_MODIFIED_TO_USSD"/>
        /// </summary>
        public static int CODE_UT_SS_MODIFIED_TO_USSD { get { if (!_CODE_UT_SS_MODIFIED_TO_USSDReady) { _CODE_UT_SS_MODIFIED_TO_USSDContent = SGetField<int>(LocalBridgeClazz, "CODE_UT_SS_MODIFIED_TO_USSD"); _CODE_UT_SS_MODIFIED_TO_USSDReady = true; } return _CODE_UT_SS_MODIFIED_TO_USSDContent; } }
        private static int _CODE_UT_SS_MODIFIED_TO_USSDContent = default;
        private static bool _CODE_UT_SS_MODIFIED_TO_USSDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#CODE_WIFI_LOST"/>
        /// </summary>
        public static int CODE_WIFI_LOST { get { if (!_CODE_WIFI_LOSTReady) { _CODE_WIFI_LOSTContent = SGetField<int>(LocalBridgeClazz, "CODE_WIFI_LOST"); _CODE_WIFI_LOSTReady = true; } return _CODE_WIFI_LOSTContent; } }
        private static int _CODE_WIFI_LOSTContent = default;
        private static bool _CODE_WIFI_LOSTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#EXTRA_CODE_CALL_RETRY_BY_SETTINGS"/>
        /// </summary>
        public static int EXTRA_CODE_CALL_RETRY_BY_SETTINGS { get { if (!_EXTRA_CODE_CALL_RETRY_BY_SETTINGSReady) { _EXTRA_CODE_CALL_RETRY_BY_SETTINGSContent = SGetField<int>(LocalBridgeClazz, "EXTRA_CODE_CALL_RETRY_BY_SETTINGS"); _EXTRA_CODE_CALL_RETRY_BY_SETTINGSReady = true; } return _EXTRA_CODE_CALL_RETRY_BY_SETTINGSContent; } }
        private static int _EXTRA_CODE_CALL_RETRY_BY_SETTINGSContent = default;
        private static bool _EXTRA_CODE_CALL_RETRY_BY_SETTINGSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#EXTRA_CODE_CALL_RETRY_EMERGENCY"/>
        /// </summary>
        public static int EXTRA_CODE_CALL_RETRY_EMERGENCY { get { if (!_EXTRA_CODE_CALL_RETRY_EMERGENCYReady) { _EXTRA_CODE_CALL_RETRY_EMERGENCYContent = SGetField<int>(LocalBridgeClazz, "EXTRA_CODE_CALL_RETRY_EMERGENCY"); _EXTRA_CODE_CALL_RETRY_EMERGENCYReady = true; } return _EXTRA_CODE_CALL_RETRY_EMERGENCYContent; } }
        private static int _EXTRA_CODE_CALL_RETRY_EMERGENCYContent = default;
        private static bool _EXTRA_CODE_CALL_RETRY_EMERGENCYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#EXTRA_CODE_CALL_RETRY_NORMAL"/>
        /// </summary>
        public static int EXTRA_CODE_CALL_RETRY_NORMAL { get { if (!_EXTRA_CODE_CALL_RETRY_NORMALReady) { _EXTRA_CODE_CALL_RETRY_NORMALContent = SGetField<int>(LocalBridgeClazz, "EXTRA_CODE_CALL_RETRY_NORMAL"); _EXTRA_CODE_CALL_RETRY_NORMALReady = true; } return _EXTRA_CODE_CALL_RETRY_NORMALContent; } }
        private static int _EXTRA_CODE_CALL_RETRY_NORMALContent = default;
        private static bool _EXTRA_CODE_CALL_RETRY_NORMALReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#EXTRA_CODE_CALL_RETRY_SILENT_REDIAL"/>
        /// </summary>
        public static int EXTRA_CODE_CALL_RETRY_SILENT_REDIAL { get { if (!_EXTRA_CODE_CALL_RETRY_SILENT_REDIALReady) { _EXTRA_CODE_CALL_RETRY_SILENT_REDIALContent = SGetField<int>(LocalBridgeClazz, "EXTRA_CODE_CALL_RETRY_SILENT_REDIAL"); _EXTRA_CODE_CALL_RETRY_SILENT_REDIALReady = true; } return _EXTRA_CODE_CALL_RETRY_SILENT_REDIALContent; } }
        private static int _EXTRA_CODE_CALL_RETRY_SILENT_REDIALContent = default;
        private static bool _EXTRA_CODE_CALL_RETRY_SILENT_REDIALReady = false; // this is used because in case of generics 
    
        #endregion
    
        #region Static methods
    
        #endregion
    
        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#describeContents()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int DescribeContents()
        {
            return IExecuteWithSignature<int>("describeContents", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#getCode()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetCode()
        {
            return IExecuteWithSignature<int>("getCode", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#getExtraCode()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetExtraCode()
        {
            return IExecuteWithSignature<int>("getExtraCode", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#getExtraMessage()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetExtraMessage()
        {
            return IExecuteWithSignature<Java.Lang.String>("getExtraMessage", "()Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/telephony/ims/ImsReasonInfo.html#writeToParcel(android.os.Parcel,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.Parcel"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void WriteToParcel(Android.Os.Parcel arg0, int arg1)
        {
            IExecute("writeToParcel", arg0, arg1);
        }
    
        #endregion
    
        #region Nested classes
    
        #endregion
    
        // TODO: complete the class
    }
    #endregion
}