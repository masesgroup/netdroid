/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.2.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Print
{
    #region PrintAttributes
    public partial class PrintAttributes
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.html#CREATOR"/>
        /// </summary>
        public static Android.Os.Parcelable.Creator CREATOR { get { if (!_CREATORReady) { _CREATORContent = SGetField<Android.Os.Parcelable.Creator>(LocalBridgeClazz, "CREATOR"); _CREATORReady = true; } return _CREATORContent; } }
        private static Android.Os.Parcelable.Creator _CREATORContent = default;
        private static bool _CREATORReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.html#COLOR_MODE_COLOR"/>
        /// </summary>
        public static int COLOR_MODE_COLOR { get { if (!_COLOR_MODE_COLORReady) { _COLOR_MODE_COLORContent = SGetField<int>(LocalBridgeClazz, "COLOR_MODE_COLOR"); _COLOR_MODE_COLORReady = true; } return _COLOR_MODE_COLORContent; } }
        private static int _COLOR_MODE_COLORContent = default;
        private static bool _COLOR_MODE_COLORReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.html#COLOR_MODE_MONOCHROME"/>
        /// </summary>
        public static int COLOR_MODE_MONOCHROME { get { if (!_COLOR_MODE_MONOCHROMEReady) { _COLOR_MODE_MONOCHROMEContent = SGetField<int>(LocalBridgeClazz, "COLOR_MODE_MONOCHROME"); _COLOR_MODE_MONOCHROMEReady = true; } return _COLOR_MODE_MONOCHROMEContent; } }
        private static int _COLOR_MODE_MONOCHROMEContent = default;
        private static bool _COLOR_MODE_MONOCHROMEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.html#DUPLEX_MODE_LONG_EDGE"/>
        /// </summary>
        public static int DUPLEX_MODE_LONG_EDGE { get { if (!_DUPLEX_MODE_LONG_EDGEReady) { _DUPLEX_MODE_LONG_EDGEContent = SGetField<int>(LocalBridgeClazz, "DUPLEX_MODE_LONG_EDGE"); _DUPLEX_MODE_LONG_EDGEReady = true; } return _DUPLEX_MODE_LONG_EDGEContent; } }
        private static int _DUPLEX_MODE_LONG_EDGEContent = default;
        private static bool _DUPLEX_MODE_LONG_EDGEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.html#DUPLEX_MODE_NONE"/>
        /// </summary>
        public static int DUPLEX_MODE_NONE { get { if (!_DUPLEX_MODE_NONEReady) { _DUPLEX_MODE_NONEContent = SGetField<int>(LocalBridgeClazz, "DUPLEX_MODE_NONE"); _DUPLEX_MODE_NONEReady = true; } return _DUPLEX_MODE_NONEContent; } }
        private static int _DUPLEX_MODE_NONEContent = default;
        private static bool _DUPLEX_MODE_NONEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.html#DUPLEX_MODE_SHORT_EDGE"/>
        /// </summary>
        public static int DUPLEX_MODE_SHORT_EDGE { get { if (!_DUPLEX_MODE_SHORT_EDGEReady) { _DUPLEX_MODE_SHORT_EDGEContent = SGetField<int>(LocalBridgeClazz, "DUPLEX_MODE_SHORT_EDGE"); _DUPLEX_MODE_SHORT_EDGEReady = true; } return _DUPLEX_MODE_SHORT_EDGEContent; } }
        private static int _DUPLEX_MODE_SHORT_EDGEContent = default;
        private static bool _DUPLEX_MODE_SHORT_EDGEReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.html#getMinMargins()"/>
        /// </summary>
        /// <returns><see cref="Android.Print.PrintAttributes.Margins"/></returns>
        public Android.Print.PrintAttributes.Margins GetMinMargins()
        {
            return IExecuteWithSignature<Android.Print.PrintAttributes.Margins>("getMinMargins", "()Landroid/print/PrintAttributes$Margins;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.html#getMediaSize()"/>
        /// </summary>
        /// <returns><see cref="Android.Print.PrintAttributes.MediaSize"/></returns>
        public Android.Print.PrintAttributes.MediaSize GetMediaSize()
        {
            return IExecuteWithSignature<Android.Print.PrintAttributes.MediaSize>("getMediaSize", "()Landroid/print/PrintAttributes$MediaSize;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.html#getResolution()"/>
        /// </summary>
        /// <returns><see cref="Android.Print.PrintAttributes.Resolution"/></returns>
        public Android.Print.PrintAttributes.Resolution GetResolution()
        {
            return IExecuteWithSignature<Android.Print.PrintAttributes.Resolution>("getResolution", "()Landroid/print/PrintAttributes$Resolution;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.html#describeContents()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int DescribeContents()
        {
            return IExecuteWithSignature<int>("describeContents", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.html#getColorMode()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetColorMode()
        {
            return IExecuteWithSignature<int>("getColorMode", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.html#getDuplexMode()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetDuplexMode()
        {
            return IExecuteWithSignature<int>("getDuplexMode", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.html#writeToParcel(android.os.Parcel,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.Parcel"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void WriteToParcel(Android.Os.Parcel arg0, int arg1)
        {
            IExecute("writeToParcel", arg0, arg1);
        }

        #endregion

        #region Nested classes
        #region Builder
        public partial class Builder
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.Builder.html#build()"/>
            /// </summary>
            /// <returns><see cref="Android.Print.PrintAttributes"/></returns>
            public Android.Print.PrintAttributes Build()
            {
                return IExecuteWithSignature<Android.Print.PrintAttributes>("build", "()Landroid/print/PrintAttributes;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.Builder.html#setColorMode(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <returns><see cref="Android.Print.PrintAttributes.Builder"/></returns>
            public Android.Print.PrintAttributes.Builder SetColorMode(int arg0)
            {
                return IExecuteWithSignature<Android.Print.PrintAttributes.Builder>("setColorMode", "(I)Landroid/print/PrintAttributes$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.Builder.html#setDuplexMode(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <returns><see cref="Android.Print.PrintAttributes.Builder"/></returns>
            public Android.Print.PrintAttributes.Builder SetDuplexMode(int arg0)
            {
                return IExecuteWithSignature<Android.Print.PrintAttributes.Builder>("setDuplexMode", "(I)Landroid/print/PrintAttributes$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.Builder.html#setMediaSize(android.print.PrintAttributes.MediaSize)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Print.PrintAttributes.MediaSize"/></param>
            /// <returns><see cref="Android.Print.PrintAttributes.Builder"/></returns>
            public Android.Print.PrintAttributes.Builder SetMediaSize(Android.Print.PrintAttributes.MediaSize arg0)
            {
                return IExecuteWithSignature<Android.Print.PrintAttributes.Builder>("setMediaSize", "(Landroid/print/PrintAttributes$MediaSize;)Landroid/print/PrintAttributes$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.Builder.html#setMinMargins(android.print.PrintAttributes.Margins)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Print.PrintAttributes.Margins"/></param>
            /// <returns><see cref="Android.Print.PrintAttributes.Builder"/></returns>
            public Android.Print.PrintAttributes.Builder SetMinMargins(Android.Print.PrintAttributes.Margins arg0)
            {
                return IExecuteWithSignature<Android.Print.PrintAttributes.Builder>("setMinMargins", "(Landroid/print/PrintAttributes$Margins;)Landroid/print/PrintAttributes$Builder;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.Builder.html#setResolution(android.print.PrintAttributes.Resolution)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Print.PrintAttributes.Resolution"/></param>
            /// <returns><see cref="Android.Print.PrintAttributes.Builder"/></returns>
            public Android.Print.PrintAttributes.Builder SetResolution(Android.Print.PrintAttributes.Resolution arg0)
            {
                return IExecuteWithSignature<Android.Print.PrintAttributes.Builder>("setResolution", "(Landroid/print/PrintAttributes$Resolution;)Landroid/print/PrintAttributes$Builder;", arg0);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region Margins
        public partial class Margins
        {
            #region Constructors
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.Margins.html#%3Cinit%3E(int,int,int,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            /// <param name="arg2"><see cref="int"/></param>
            /// <param name="arg3"><see cref="int"/></param>
            public Margins(int arg0, int arg1, int arg2, int arg3)
                : base(arg0, arg1, arg2, arg3)
            {
            }

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.Margins.html#NO_MARGINS"/>
            /// </summary>
            public static Android.Print.PrintAttributes.Margins NO_MARGINS { get { if (!_NO_MARGINSReady) { _NO_MARGINSContent = SGetField<Android.Print.PrintAttributes.Margins>(LocalBridgeClazz, "NO_MARGINS"); _NO_MARGINSReady = true; } return _NO_MARGINSContent; } }
            private static Android.Print.PrintAttributes.Margins _NO_MARGINSContent = default;
            private static bool _NO_MARGINSReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.Margins.html#getBottomMils()"/>
            /// </summary>
            /// <returns><see cref="int"/></returns>
            public int GetBottomMils()
            {
                return IExecuteWithSignature<int>("getBottomMils", "()I");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.Margins.html#getLeftMils()"/>
            /// </summary>
            /// <returns><see cref="int"/></returns>
            public int GetLeftMils()
            {
                return IExecuteWithSignature<int>("getLeftMils", "()I");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.Margins.html#getRightMils()"/>
            /// </summary>
            /// <returns><see cref="int"/></returns>
            public int GetRightMils()
            {
                return IExecuteWithSignature<int>("getRightMils", "()I");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.Margins.html#getTopMils()"/>
            /// </summary>
            /// <returns><see cref="int"/></returns>
            public int GetTopMils()
            {
                return IExecuteWithSignature<int>("getTopMils", "()I");
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region MediaSize
        public partial class MediaSize
        {
            #region Constructors
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#%3Cinit%3E(java.lang.String,java.lang.String,int,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <param name="arg1"><see cref="Java.Lang.String"/></param>
            /// <param name="arg2"><see cref="int"/></param>
            /// <param name="arg3"><see cref="int"/></param>
            public MediaSize(Java.Lang.String arg0, Java.Lang.String arg1, int arg2, int arg3)
                : base(arg0, arg1, arg2, arg3)
            {
            }

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#ANSI_C"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize ANSI_C { get { if (!_ANSI_CReady) { _ANSI_CContent = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "ANSI_C"); _ANSI_CReady = true; } return _ANSI_CContent; } }
            private static Android.Print.PrintAttributes.MediaSize _ANSI_CContent = default;
            private static bool _ANSI_CReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#ANSI_D"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize ANSI_D { get { if (!_ANSI_DReady) { _ANSI_DContent = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "ANSI_D"); _ANSI_DReady = true; } return _ANSI_DContent; } }
            private static Android.Print.PrintAttributes.MediaSize _ANSI_DContent = default;
            private static bool _ANSI_DReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#ANSI_E"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize ANSI_E { get { if (!_ANSI_EReady) { _ANSI_EContent = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "ANSI_E"); _ANSI_EReady = true; } return _ANSI_EContent; } }
            private static Android.Print.PrintAttributes.MediaSize _ANSI_EContent = default;
            private static bool _ANSI_EReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#ANSI_F"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize ANSI_F { get { if (!_ANSI_FReady) { _ANSI_FContent = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "ANSI_F"); _ANSI_FReady = true; } return _ANSI_FContent; } }
            private static Android.Print.PrintAttributes.MediaSize _ANSI_FContent = default;
            private static bool _ANSI_FReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#ISO_A0"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize ISO_A0 { get { if (!_ISO_A0Ready) { _ISO_A0Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "ISO_A0"); _ISO_A0Ready = true; } return _ISO_A0Content; } }
            private static Android.Print.PrintAttributes.MediaSize _ISO_A0Content = default;
            private static bool _ISO_A0Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#ISO_A1"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize ISO_A1 { get { if (!_ISO_A1Ready) { _ISO_A1Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "ISO_A1"); _ISO_A1Ready = true; } return _ISO_A1Content; } }
            private static Android.Print.PrintAttributes.MediaSize _ISO_A1Content = default;
            private static bool _ISO_A1Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#ISO_A10"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize ISO_A10 { get { if (!_ISO_A10Ready) { _ISO_A10Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "ISO_A10"); _ISO_A10Ready = true; } return _ISO_A10Content; } }
            private static Android.Print.PrintAttributes.MediaSize _ISO_A10Content = default;
            private static bool _ISO_A10Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#ISO_A2"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize ISO_A2 { get { if (!_ISO_A2Ready) { _ISO_A2Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "ISO_A2"); _ISO_A2Ready = true; } return _ISO_A2Content; } }
            private static Android.Print.PrintAttributes.MediaSize _ISO_A2Content = default;
            private static bool _ISO_A2Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#ISO_A3"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize ISO_A3 { get { if (!_ISO_A3Ready) { _ISO_A3Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "ISO_A3"); _ISO_A3Ready = true; } return _ISO_A3Content; } }
            private static Android.Print.PrintAttributes.MediaSize _ISO_A3Content = default;
            private static bool _ISO_A3Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#ISO_A4"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize ISO_A4 { get { if (!_ISO_A4Ready) { _ISO_A4Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "ISO_A4"); _ISO_A4Ready = true; } return _ISO_A4Content; } }
            private static Android.Print.PrintAttributes.MediaSize _ISO_A4Content = default;
            private static bool _ISO_A4Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#ISO_A5"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize ISO_A5 { get { if (!_ISO_A5Ready) { _ISO_A5Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "ISO_A5"); _ISO_A5Ready = true; } return _ISO_A5Content; } }
            private static Android.Print.PrintAttributes.MediaSize _ISO_A5Content = default;
            private static bool _ISO_A5Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#ISO_A6"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize ISO_A6 { get { if (!_ISO_A6Ready) { _ISO_A6Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "ISO_A6"); _ISO_A6Ready = true; } return _ISO_A6Content; } }
            private static Android.Print.PrintAttributes.MediaSize _ISO_A6Content = default;
            private static bool _ISO_A6Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#ISO_A7"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize ISO_A7 { get { if (!_ISO_A7Ready) { _ISO_A7Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "ISO_A7"); _ISO_A7Ready = true; } return _ISO_A7Content; } }
            private static Android.Print.PrintAttributes.MediaSize _ISO_A7Content = default;
            private static bool _ISO_A7Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#ISO_A8"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize ISO_A8 { get { if (!_ISO_A8Ready) { _ISO_A8Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "ISO_A8"); _ISO_A8Ready = true; } return _ISO_A8Content; } }
            private static Android.Print.PrintAttributes.MediaSize _ISO_A8Content = default;
            private static bool _ISO_A8Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#ISO_A9"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize ISO_A9 { get { if (!_ISO_A9Ready) { _ISO_A9Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "ISO_A9"); _ISO_A9Ready = true; } return _ISO_A9Content; } }
            private static Android.Print.PrintAttributes.MediaSize _ISO_A9Content = default;
            private static bool _ISO_A9Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#ISO_B0"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize ISO_B0 { get { if (!_ISO_B0Ready) { _ISO_B0Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "ISO_B0"); _ISO_B0Ready = true; } return _ISO_B0Content; } }
            private static Android.Print.PrintAttributes.MediaSize _ISO_B0Content = default;
            private static bool _ISO_B0Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#ISO_B1"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize ISO_B1 { get { if (!_ISO_B1Ready) { _ISO_B1Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "ISO_B1"); _ISO_B1Ready = true; } return _ISO_B1Content; } }
            private static Android.Print.PrintAttributes.MediaSize _ISO_B1Content = default;
            private static bool _ISO_B1Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#ISO_B10"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize ISO_B10 { get { if (!_ISO_B10Ready) { _ISO_B10Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "ISO_B10"); _ISO_B10Ready = true; } return _ISO_B10Content; } }
            private static Android.Print.PrintAttributes.MediaSize _ISO_B10Content = default;
            private static bool _ISO_B10Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#ISO_B2"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize ISO_B2 { get { if (!_ISO_B2Ready) { _ISO_B2Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "ISO_B2"); _ISO_B2Ready = true; } return _ISO_B2Content; } }
            private static Android.Print.PrintAttributes.MediaSize _ISO_B2Content = default;
            private static bool _ISO_B2Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#ISO_B3"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize ISO_B3 { get { if (!_ISO_B3Ready) { _ISO_B3Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "ISO_B3"); _ISO_B3Ready = true; } return _ISO_B3Content; } }
            private static Android.Print.PrintAttributes.MediaSize _ISO_B3Content = default;
            private static bool _ISO_B3Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#ISO_B4"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize ISO_B4 { get { if (!_ISO_B4Ready) { _ISO_B4Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "ISO_B4"); _ISO_B4Ready = true; } return _ISO_B4Content; } }
            private static Android.Print.PrintAttributes.MediaSize _ISO_B4Content = default;
            private static bool _ISO_B4Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#ISO_B5"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize ISO_B5 { get { if (!_ISO_B5Ready) { _ISO_B5Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "ISO_B5"); _ISO_B5Ready = true; } return _ISO_B5Content; } }
            private static Android.Print.PrintAttributes.MediaSize _ISO_B5Content = default;
            private static bool _ISO_B5Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#ISO_B6"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize ISO_B6 { get { if (!_ISO_B6Ready) { _ISO_B6Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "ISO_B6"); _ISO_B6Ready = true; } return _ISO_B6Content; } }
            private static Android.Print.PrintAttributes.MediaSize _ISO_B6Content = default;
            private static bool _ISO_B6Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#ISO_B7"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize ISO_B7 { get { if (!_ISO_B7Ready) { _ISO_B7Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "ISO_B7"); _ISO_B7Ready = true; } return _ISO_B7Content; } }
            private static Android.Print.PrintAttributes.MediaSize _ISO_B7Content = default;
            private static bool _ISO_B7Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#ISO_B8"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize ISO_B8 { get { if (!_ISO_B8Ready) { _ISO_B8Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "ISO_B8"); _ISO_B8Ready = true; } return _ISO_B8Content; } }
            private static Android.Print.PrintAttributes.MediaSize _ISO_B8Content = default;
            private static bool _ISO_B8Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#ISO_B9"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize ISO_B9 { get { if (!_ISO_B9Ready) { _ISO_B9Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "ISO_B9"); _ISO_B9Ready = true; } return _ISO_B9Content; } }
            private static Android.Print.PrintAttributes.MediaSize _ISO_B9Content = default;
            private static bool _ISO_B9Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#ISO_C0"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize ISO_C0 { get { if (!_ISO_C0Ready) { _ISO_C0Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "ISO_C0"); _ISO_C0Ready = true; } return _ISO_C0Content; } }
            private static Android.Print.PrintAttributes.MediaSize _ISO_C0Content = default;
            private static bool _ISO_C0Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#ISO_C1"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize ISO_C1 { get { if (!_ISO_C1Ready) { _ISO_C1Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "ISO_C1"); _ISO_C1Ready = true; } return _ISO_C1Content; } }
            private static Android.Print.PrintAttributes.MediaSize _ISO_C1Content = default;
            private static bool _ISO_C1Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#ISO_C10"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize ISO_C10 { get { if (!_ISO_C10Ready) { _ISO_C10Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "ISO_C10"); _ISO_C10Ready = true; } return _ISO_C10Content; } }
            private static Android.Print.PrintAttributes.MediaSize _ISO_C10Content = default;
            private static bool _ISO_C10Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#ISO_C2"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize ISO_C2 { get { if (!_ISO_C2Ready) { _ISO_C2Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "ISO_C2"); _ISO_C2Ready = true; } return _ISO_C2Content; } }
            private static Android.Print.PrintAttributes.MediaSize _ISO_C2Content = default;
            private static bool _ISO_C2Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#ISO_C3"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize ISO_C3 { get { if (!_ISO_C3Ready) { _ISO_C3Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "ISO_C3"); _ISO_C3Ready = true; } return _ISO_C3Content; } }
            private static Android.Print.PrintAttributes.MediaSize _ISO_C3Content = default;
            private static bool _ISO_C3Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#ISO_C4"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize ISO_C4 { get { if (!_ISO_C4Ready) { _ISO_C4Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "ISO_C4"); _ISO_C4Ready = true; } return _ISO_C4Content; } }
            private static Android.Print.PrintAttributes.MediaSize _ISO_C4Content = default;
            private static bool _ISO_C4Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#ISO_C5"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize ISO_C5 { get { if (!_ISO_C5Ready) { _ISO_C5Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "ISO_C5"); _ISO_C5Ready = true; } return _ISO_C5Content; } }
            private static Android.Print.PrintAttributes.MediaSize _ISO_C5Content = default;
            private static bool _ISO_C5Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#ISO_C6"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize ISO_C6 { get { if (!_ISO_C6Ready) { _ISO_C6Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "ISO_C6"); _ISO_C6Ready = true; } return _ISO_C6Content; } }
            private static Android.Print.PrintAttributes.MediaSize _ISO_C6Content = default;
            private static bool _ISO_C6Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#ISO_C7"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize ISO_C7 { get { if (!_ISO_C7Ready) { _ISO_C7Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "ISO_C7"); _ISO_C7Ready = true; } return _ISO_C7Content; } }
            private static Android.Print.PrintAttributes.MediaSize _ISO_C7Content = default;
            private static bool _ISO_C7Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#ISO_C8"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize ISO_C8 { get { if (!_ISO_C8Ready) { _ISO_C8Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "ISO_C8"); _ISO_C8Ready = true; } return _ISO_C8Content; } }
            private static Android.Print.PrintAttributes.MediaSize _ISO_C8Content = default;
            private static bool _ISO_C8Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#ISO_C9"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize ISO_C9 { get { if (!_ISO_C9Ready) { _ISO_C9Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "ISO_C9"); _ISO_C9Ready = true; } return _ISO_C9Content; } }
            private static Android.Print.PrintAttributes.MediaSize _ISO_C9Content = default;
            private static bool _ISO_C9Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#JIS_B0"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize JIS_B0 { get { if (!_JIS_B0Ready) { _JIS_B0Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "JIS_B0"); _JIS_B0Ready = true; } return _JIS_B0Content; } }
            private static Android.Print.PrintAttributes.MediaSize _JIS_B0Content = default;
            private static bool _JIS_B0Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#JIS_B1"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize JIS_B1 { get { if (!_JIS_B1Ready) { _JIS_B1Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "JIS_B1"); _JIS_B1Ready = true; } return _JIS_B1Content; } }
            private static Android.Print.PrintAttributes.MediaSize _JIS_B1Content = default;
            private static bool _JIS_B1Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#JIS_B10"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize JIS_B10 { get { if (!_JIS_B10Ready) { _JIS_B10Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "JIS_B10"); _JIS_B10Ready = true; } return _JIS_B10Content; } }
            private static Android.Print.PrintAttributes.MediaSize _JIS_B10Content = default;
            private static bool _JIS_B10Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#JIS_B2"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize JIS_B2 { get { if (!_JIS_B2Ready) { _JIS_B2Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "JIS_B2"); _JIS_B2Ready = true; } return _JIS_B2Content; } }
            private static Android.Print.PrintAttributes.MediaSize _JIS_B2Content = default;
            private static bool _JIS_B2Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#JIS_B3"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize JIS_B3 { get { if (!_JIS_B3Ready) { _JIS_B3Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "JIS_B3"); _JIS_B3Ready = true; } return _JIS_B3Content; } }
            private static Android.Print.PrintAttributes.MediaSize _JIS_B3Content = default;
            private static bool _JIS_B3Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#JIS_B4"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize JIS_B4 { get { if (!_JIS_B4Ready) { _JIS_B4Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "JIS_B4"); _JIS_B4Ready = true; } return _JIS_B4Content; } }
            private static Android.Print.PrintAttributes.MediaSize _JIS_B4Content = default;
            private static bool _JIS_B4Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#JIS_B5"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize JIS_B5 { get { if (!_JIS_B5Ready) { _JIS_B5Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "JIS_B5"); _JIS_B5Ready = true; } return _JIS_B5Content; } }
            private static Android.Print.PrintAttributes.MediaSize _JIS_B5Content = default;
            private static bool _JIS_B5Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#JIS_B6"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize JIS_B6 { get { if (!_JIS_B6Ready) { _JIS_B6Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "JIS_B6"); _JIS_B6Ready = true; } return _JIS_B6Content; } }
            private static Android.Print.PrintAttributes.MediaSize _JIS_B6Content = default;
            private static bool _JIS_B6Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#JIS_B7"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize JIS_B7 { get { if (!_JIS_B7Ready) { _JIS_B7Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "JIS_B7"); _JIS_B7Ready = true; } return _JIS_B7Content; } }
            private static Android.Print.PrintAttributes.MediaSize _JIS_B7Content = default;
            private static bool _JIS_B7Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#JIS_B8"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize JIS_B8 { get { if (!_JIS_B8Ready) { _JIS_B8Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "JIS_B8"); _JIS_B8Ready = true; } return _JIS_B8Content; } }
            private static Android.Print.PrintAttributes.MediaSize _JIS_B8Content = default;
            private static bool _JIS_B8Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#JIS_B9"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize JIS_B9 { get { if (!_JIS_B9Ready) { _JIS_B9Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "JIS_B9"); _JIS_B9Ready = true; } return _JIS_B9Content; } }
            private static Android.Print.PrintAttributes.MediaSize _JIS_B9Content = default;
            private static bool _JIS_B9Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#JIS_EXEC"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize JIS_EXEC { get { if (!_JIS_EXECReady) { _JIS_EXECContent = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "JIS_EXEC"); _JIS_EXECReady = true; } return _JIS_EXECContent; } }
            private static Android.Print.PrintAttributes.MediaSize _JIS_EXECContent = default;
            private static bool _JIS_EXECReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#JPN_CHOU2"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize JPN_CHOU2 { get { if (!_JPN_CHOU2Ready) { _JPN_CHOU2Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "JPN_CHOU2"); _JPN_CHOU2Ready = true; } return _JPN_CHOU2Content; } }
            private static Android.Print.PrintAttributes.MediaSize _JPN_CHOU2Content = default;
            private static bool _JPN_CHOU2Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#JPN_CHOU3"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize JPN_CHOU3 { get { if (!_JPN_CHOU3Ready) { _JPN_CHOU3Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "JPN_CHOU3"); _JPN_CHOU3Ready = true; } return _JPN_CHOU3Content; } }
            private static Android.Print.PrintAttributes.MediaSize _JPN_CHOU3Content = default;
            private static bool _JPN_CHOU3Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#JPN_CHOU4"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize JPN_CHOU4 { get { if (!_JPN_CHOU4Ready) { _JPN_CHOU4Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "JPN_CHOU4"); _JPN_CHOU4Ready = true; } return _JPN_CHOU4Content; } }
            private static Android.Print.PrintAttributes.MediaSize _JPN_CHOU4Content = default;
            private static bool _JPN_CHOU4Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#JPN_HAGAKI"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize JPN_HAGAKI { get { if (!_JPN_HAGAKIReady) { _JPN_HAGAKIContent = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "JPN_HAGAKI"); _JPN_HAGAKIReady = true; } return _JPN_HAGAKIContent; } }
            private static Android.Print.PrintAttributes.MediaSize _JPN_HAGAKIContent = default;
            private static bool _JPN_HAGAKIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#JPN_KAHU"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize JPN_KAHU { get { if (!_JPN_KAHUReady) { _JPN_KAHUContent = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "JPN_KAHU"); _JPN_KAHUReady = true; } return _JPN_KAHUContent; } }
            private static Android.Print.PrintAttributes.MediaSize _JPN_KAHUContent = default;
            private static bool _JPN_KAHUReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#JPN_KAKU2"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize JPN_KAKU2 { get { if (!_JPN_KAKU2Ready) { _JPN_KAKU2Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "JPN_KAKU2"); _JPN_KAKU2Ready = true; } return _JPN_KAKU2Content; } }
            private static Android.Print.PrintAttributes.MediaSize _JPN_KAKU2Content = default;
            private static bool _JPN_KAKU2Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#JPN_OE_PHOTO_L"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize JPN_OE_PHOTO_L { get { if (!_JPN_OE_PHOTO_LReady) { _JPN_OE_PHOTO_LContent = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "JPN_OE_PHOTO_L"); _JPN_OE_PHOTO_LReady = true; } return _JPN_OE_PHOTO_LContent; } }
            private static Android.Print.PrintAttributes.MediaSize _JPN_OE_PHOTO_LContent = default;
            private static bool _JPN_OE_PHOTO_LReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#JPN_OUFUKU"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize JPN_OUFUKU { get { if (!_JPN_OUFUKUReady) { _JPN_OUFUKUContent = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "JPN_OUFUKU"); _JPN_OUFUKUReady = true; } return _JPN_OUFUKUContent; } }
            private static Android.Print.PrintAttributes.MediaSize _JPN_OUFUKUContent = default;
            private static bool _JPN_OUFUKUReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#JPN_YOU4"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize JPN_YOU4 { get { if (!_JPN_YOU4Ready) { _JPN_YOU4Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "JPN_YOU4"); _JPN_YOU4Ready = true; } return _JPN_YOU4Content; } }
            private static Android.Print.PrintAttributes.MediaSize _JPN_YOU4Content = default;
            private static bool _JPN_YOU4Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#NA_ARCH_A"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize NA_ARCH_A { get { if (!_NA_ARCH_AReady) { _NA_ARCH_AContent = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "NA_ARCH_A"); _NA_ARCH_AReady = true; } return _NA_ARCH_AContent; } }
            private static Android.Print.PrintAttributes.MediaSize _NA_ARCH_AContent = default;
            private static bool _NA_ARCH_AReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#NA_ARCH_B"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize NA_ARCH_B { get { if (!_NA_ARCH_BReady) { _NA_ARCH_BContent = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "NA_ARCH_B"); _NA_ARCH_BReady = true; } return _NA_ARCH_BContent; } }
            private static Android.Print.PrintAttributes.MediaSize _NA_ARCH_BContent = default;
            private static bool _NA_ARCH_BReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#NA_ARCH_C"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize NA_ARCH_C { get { if (!_NA_ARCH_CReady) { _NA_ARCH_CContent = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "NA_ARCH_C"); _NA_ARCH_CReady = true; } return _NA_ARCH_CContent; } }
            private static Android.Print.PrintAttributes.MediaSize _NA_ARCH_CContent = default;
            private static bool _NA_ARCH_CReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#NA_ARCH_D"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize NA_ARCH_D { get { if (!_NA_ARCH_DReady) { _NA_ARCH_DContent = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "NA_ARCH_D"); _NA_ARCH_DReady = true; } return _NA_ARCH_DContent; } }
            private static Android.Print.PrintAttributes.MediaSize _NA_ARCH_DContent = default;
            private static bool _NA_ARCH_DReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#NA_ARCH_E"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize NA_ARCH_E { get { if (!_NA_ARCH_EReady) { _NA_ARCH_EContent = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "NA_ARCH_E"); _NA_ARCH_EReady = true; } return _NA_ARCH_EContent; } }
            private static Android.Print.PrintAttributes.MediaSize _NA_ARCH_EContent = default;
            private static bool _NA_ARCH_EReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#NA_ARCH_E1"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize NA_ARCH_E1 { get { if (!_NA_ARCH_E1Ready) { _NA_ARCH_E1Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "NA_ARCH_E1"); _NA_ARCH_E1Ready = true; } return _NA_ARCH_E1Content; } }
            private static Android.Print.PrintAttributes.MediaSize _NA_ARCH_E1Content = default;
            private static bool _NA_ARCH_E1Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#NA_FOOLSCAP"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize NA_FOOLSCAP { get { if (!_NA_FOOLSCAPReady) { _NA_FOOLSCAPContent = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "NA_FOOLSCAP"); _NA_FOOLSCAPReady = true; } return _NA_FOOLSCAPContent; } }
            private static Android.Print.PrintAttributes.MediaSize _NA_FOOLSCAPContent = default;
            private static bool _NA_FOOLSCAPReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#NA_GOVT_LETTER"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize NA_GOVT_LETTER { get { if (!_NA_GOVT_LETTERReady) { _NA_GOVT_LETTERContent = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "NA_GOVT_LETTER"); _NA_GOVT_LETTERReady = true; } return _NA_GOVT_LETTERContent; } }
            private static Android.Print.PrintAttributes.MediaSize _NA_GOVT_LETTERContent = default;
            private static bool _NA_GOVT_LETTERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#NA_INDEX_3X5"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize NA_INDEX_3X5 { get { if (!_NA_INDEX_3X5Ready) { _NA_INDEX_3X5Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "NA_INDEX_3X5"); _NA_INDEX_3X5Ready = true; } return _NA_INDEX_3X5Content; } }
            private static Android.Print.PrintAttributes.MediaSize _NA_INDEX_3X5Content = default;
            private static bool _NA_INDEX_3X5Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#NA_INDEX_4X6"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize NA_INDEX_4X6 { get { if (!_NA_INDEX_4X6Ready) { _NA_INDEX_4X6Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "NA_INDEX_4X6"); _NA_INDEX_4X6Ready = true; } return _NA_INDEX_4X6Content; } }
            private static Android.Print.PrintAttributes.MediaSize _NA_INDEX_4X6Content = default;
            private static bool _NA_INDEX_4X6Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#NA_INDEX_5X8"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize NA_INDEX_5X8 { get { if (!_NA_INDEX_5X8Ready) { _NA_INDEX_5X8Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "NA_INDEX_5X8"); _NA_INDEX_5X8Ready = true; } return _NA_INDEX_5X8Content; } }
            private static Android.Print.PrintAttributes.MediaSize _NA_INDEX_5X8Content = default;
            private static bool _NA_INDEX_5X8Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#NA_JUNIOR_LEGAL"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize NA_JUNIOR_LEGAL { get { if (!_NA_JUNIOR_LEGALReady) { _NA_JUNIOR_LEGALContent = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "NA_JUNIOR_LEGAL"); _NA_JUNIOR_LEGALReady = true; } return _NA_JUNIOR_LEGALContent; } }
            private static Android.Print.PrintAttributes.MediaSize _NA_JUNIOR_LEGALContent = default;
            private static bool _NA_JUNIOR_LEGALReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#NA_LEDGER"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize NA_LEDGER { get { if (!_NA_LEDGERReady) { _NA_LEDGERContent = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "NA_LEDGER"); _NA_LEDGERReady = true; } return _NA_LEDGERContent; } }
            private static Android.Print.PrintAttributes.MediaSize _NA_LEDGERContent = default;
            private static bool _NA_LEDGERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#NA_LEGAL"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize NA_LEGAL { get { if (!_NA_LEGALReady) { _NA_LEGALContent = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "NA_LEGAL"); _NA_LEGALReady = true; } return _NA_LEGALContent; } }
            private static Android.Print.PrintAttributes.MediaSize _NA_LEGALContent = default;
            private static bool _NA_LEGALReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#NA_LETTER"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize NA_LETTER { get { if (!_NA_LETTERReady) { _NA_LETTERContent = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "NA_LETTER"); _NA_LETTERReady = true; } return _NA_LETTERContent; } }
            private static Android.Print.PrintAttributes.MediaSize _NA_LETTERContent = default;
            private static bool _NA_LETTERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#NA_MONARCH"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize NA_MONARCH { get { if (!_NA_MONARCHReady) { _NA_MONARCHContent = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "NA_MONARCH"); _NA_MONARCHReady = true; } return _NA_MONARCHContent; } }
            private static Android.Print.PrintAttributes.MediaSize _NA_MONARCHContent = default;
            private static bool _NA_MONARCHReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#NA_QUARTO"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize NA_QUARTO { get { if (!_NA_QUARTOReady) { _NA_QUARTOContent = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "NA_QUARTO"); _NA_QUARTOReady = true; } return _NA_QUARTOContent; } }
            private static Android.Print.PrintAttributes.MediaSize _NA_QUARTOContent = default;
            private static bool _NA_QUARTOReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#NA_SUPER_B"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize NA_SUPER_B { get { if (!_NA_SUPER_BReady) { _NA_SUPER_BContent = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "NA_SUPER_B"); _NA_SUPER_BReady = true; } return _NA_SUPER_BContent; } }
            private static Android.Print.PrintAttributes.MediaSize _NA_SUPER_BContent = default;
            private static bool _NA_SUPER_BReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#NA_TABLOID"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize NA_TABLOID { get { if (!_NA_TABLOIDReady) { _NA_TABLOIDContent = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "NA_TABLOID"); _NA_TABLOIDReady = true; } return _NA_TABLOIDContent; } }
            private static Android.Print.PrintAttributes.MediaSize _NA_TABLOIDContent = default;
            private static bool _NA_TABLOIDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#OM_DAI_PA_KAI"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize OM_DAI_PA_KAI { get { if (!_OM_DAI_PA_KAIReady) { _OM_DAI_PA_KAIContent = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "OM_DAI_PA_KAI"); _OM_DAI_PA_KAIReady = true; } return _OM_DAI_PA_KAIContent; } }
            private static Android.Print.PrintAttributes.MediaSize _OM_DAI_PA_KAIContent = default;
            private static bool _OM_DAI_PA_KAIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#OM_JUURO_KU_KAI"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize OM_JUURO_KU_KAI { get { if (!_OM_JUURO_KU_KAIReady) { _OM_JUURO_KU_KAIContent = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "OM_JUURO_KU_KAI"); _OM_JUURO_KU_KAIReady = true; } return _OM_JUURO_KU_KAIContent; } }
            private static Android.Print.PrintAttributes.MediaSize _OM_JUURO_KU_KAIContent = default;
            private static bool _OM_JUURO_KU_KAIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#OM_PA_KAI"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize OM_PA_KAI { get { if (!_OM_PA_KAIReady) { _OM_PA_KAIContent = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "OM_PA_KAI"); _OM_PA_KAIReady = true; } return _OM_PA_KAIContent; } }
            private static Android.Print.PrintAttributes.MediaSize _OM_PA_KAIContent = default;
            private static bool _OM_PA_KAIReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#PRC_1"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize PRC_1 { get { if (!_PRC_1Ready) { _PRC_1Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "PRC_1"); _PRC_1Ready = true; } return _PRC_1Content; } }
            private static Android.Print.PrintAttributes.MediaSize _PRC_1Content = default;
            private static bool _PRC_1Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#PRC_10"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize PRC_10 { get { if (!_PRC_10Ready) { _PRC_10Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "PRC_10"); _PRC_10Ready = true; } return _PRC_10Content; } }
            private static Android.Print.PrintAttributes.MediaSize _PRC_10Content = default;
            private static bool _PRC_10Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#PRC_16K"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize PRC_16K { get { if (!_PRC_16KReady) { _PRC_16KContent = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "PRC_16K"); _PRC_16KReady = true; } return _PRC_16KContent; } }
            private static Android.Print.PrintAttributes.MediaSize _PRC_16KContent = default;
            private static bool _PRC_16KReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#PRC_2"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize PRC_2 { get { if (!_PRC_2Ready) { _PRC_2Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "PRC_2"); _PRC_2Ready = true; } return _PRC_2Content; } }
            private static Android.Print.PrintAttributes.MediaSize _PRC_2Content = default;
            private static bool _PRC_2Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#PRC_3"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize PRC_3 { get { if (!_PRC_3Ready) { _PRC_3Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "PRC_3"); _PRC_3Ready = true; } return _PRC_3Content; } }
            private static Android.Print.PrintAttributes.MediaSize _PRC_3Content = default;
            private static bool _PRC_3Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#PRC_4"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize PRC_4 { get { if (!_PRC_4Ready) { _PRC_4Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "PRC_4"); _PRC_4Ready = true; } return _PRC_4Content; } }
            private static Android.Print.PrintAttributes.MediaSize _PRC_4Content = default;
            private static bool _PRC_4Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#PRC_5"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize PRC_5 { get { if (!_PRC_5Ready) { _PRC_5Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "PRC_5"); _PRC_5Ready = true; } return _PRC_5Content; } }
            private static Android.Print.PrintAttributes.MediaSize _PRC_5Content = default;
            private static bool _PRC_5Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#PRC_6"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize PRC_6 { get { if (!_PRC_6Ready) { _PRC_6Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "PRC_6"); _PRC_6Ready = true; } return _PRC_6Content; } }
            private static Android.Print.PrintAttributes.MediaSize _PRC_6Content = default;
            private static bool _PRC_6Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#PRC_7"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize PRC_7 { get { if (!_PRC_7Ready) { _PRC_7Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "PRC_7"); _PRC_7Ready = true; } return _PRC_7Content; } }
            private static Android.Print.PrintAttributes.MediaSize _PRC_7Content = default;
            private static bool _PRC_7Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#PRC_8"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize PRC_8 { get { if (!_PRC_8Ready) { _PRC_8Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "PRC_8"); _PRC_8Ready = true; } return _PRC_8Content; } }
            private static Android.Print.PrintAttributes.MediaSize _PRC_8Content = default;
            private static bool _PRC_8Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#PRC_9"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize PRC_9 { get { if (!_PRC_9Ready) { _PRC_9Content = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "PRC_9"); _PRC_9Ready = true; } return _PRC_9Content; } }
            private static Android.Print.PrintAttributes.MediaSize _PRC_9Content = default;
            private static bool _PRC_9Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#ROC_16K"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize ROC_16K { get { if (!_ROC_16KReady) { _ROC_16KContent = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "ROC_16K"); _ROC_16KReady = true; } return _ROC_16KContent; } }
            private static Android.Print.PrintAttributes.MediaSize _ROC_16KContent = default;
            private static bool _ROC_16KReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#ROC_8K"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize ROC_8K { get { if (!_ROC_8KReady) { _ROC_8KContent = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "ROC_8K"); _ROC_8KReady = true; } return _ROC_8KContent; } }
            private static Android.Print.PrintAttributes.MediaSize _ROC_8KContent = default;
            private static bool _ROC_8KReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#UNKNOWN_LANDSCAPE"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize UNKNOWN_LANDSCAPE { get { if (!_UNKNOWN_LANDSCAPEReady) { _UNKNOWN_LANDSCAPEContent = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "UNKNOWN_LANDSCAPE"); _UNKNOWN_LANDSCAPEReady = true; } return _UNKNOWN_LANDSCAPEContent; } }
            private static Android.Print.PrintAttributes.MediaSize _UNKNOWN_LANDSCAPEContent = default;
            private static bool _UNKNOWN_LANDSCAPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#UNKNOWN_PORTRAIT"/>
            /// </summary>
            public static Android.Print.PrintAttributes.MediaSize UNKNOWN_PORTRAIT { get { if (!_UNKNOWN_PORTRAITReady) { _UNKNOWN_PORTRAITContent = SGetField<Android.Print.PrintAttributes.MediaSize>(LocalBridgeClazz, "UNKNOWN_PORTRAIT"); _UNKNOWN_PORTRAITReady = true; } return _UNKNOWN_PORTRAITContent; } }
            private static Android.Print.PrintAttributes.MediaSize _UNKNOWN_PORTRAITContent = default;
            private static bool _UNKNOWN_PORTRAITReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#asLandscape()"/>
            /// </summary>
            /// <returns><see cref="Android.Print.PrintAttributes.MediaSize"/></returns>
            public Android.Print.PrintAttributes.MediaSize AsLandscape()
            {
                return IExecuteWithSignature<Android.Print.PrintAttributes.MediaSize>("asLandscape", "()Landroid/print/PrintAttributes$MediaSize;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#asPortrait()"/>
            /// </summary>
            /// <returns><see cref="Android.Print.PrintAttributes.MediaSize"/></returns>
            public Android.Print.PrintAttributes.MediaSize AsPortrait()
            {
                return IExecuteWithSignature<Android.Print.PrintAttributes.MediaSize>("asPortrait", "()Landroid/print/PrintAttributes$MediaSize;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#isPortrait()"/>
            /// </summary>
            /// <returns><see cref="bool"/></returns>
            public bool IsPortrait()
            {
                return IExecuteWithSignature<bool>("isPortrait", "()Z");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#getHeightMils()"/>
            /// </summary>
            /// <returns><see cref="int"/></returns>
            public int GetHeightMils()
            {
                return IExecuteWithSignature<int>("getHeightMils", "()I");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#getWidthMils()"/>
            /// </summary>
            /// <returns><see cref="int"/></returns>
            public int GetWidthMils()
            {
                return IExecuteWithSignature<int>("getWidthMils", "()I");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#getId()"/>
            /// </summary>
            /// <returns><see cref="Java.Lang.String"/></returns>
            public Java.Lang.String GetId()
            {
                return IExecuteWithSignature<Java.Lang.String>("getId", "()Ljava/lang/String;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html#getLabel(android.content.pm.PackageManager)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Content.Pm.PackageManager"/></param>
            /// <returns><see cref="Java.Lang.String"/></returns>
            public Java.Lang.String GetLabel(Android.Content.Pm.PackageManager arg0)
            {
                return IExecuteWithSignature<Java.Lang.String>("getLabel", "(Landroid/content/pm/PackageManager;)Ljava/lang/String;", arg0);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region Resolution
        public partial class Resolution
        {
            #region Constructors
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.Resolution.html#%3Cinit%3E(java.lang.String,java.lang.String,int,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <param name="arg1"><see cref="Java.Lang.String"/></param>
            /// <param name="arg2"><see cref="int"/></param>
            /// <param name="arg3"><see cref="int"/></param>
            public Resolution(Java.Lang.String arg0, Java.Lang.String arg1, int arg2, int arg3)
                : base(arg0, arg1, arg2, arg3)
            {
            }

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.Resolution.html#getHorizontalDpi()"/>
            /// </summary>
            /// <returns><see cref="int"/></returns>
            public int GetHorizontalDpi()
            {
                return IExecuteWithSignature<int>("getHorizontalDpi", "()I");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.Resolution.html#getVerticalDpi()"/>
            /// </summary>
            /// <returns><see cref="int"/></returns>
            public int GetVerticalDpi()
            {
                return IExecuteWithSignature<int>("getVerticalDpi", "()I");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.Resolution.html#getId()"/>
            /// </summary>
            /// <returns><see cref="Java.Lang.String"/></returns>
            public Java.Lang.String GetId()
            {
                return IExecuteWithSignature<Java.Lang.String>("getId", "()Ljava/lang/String;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintAttributes.Resolution.html#getLabel()"/>
            /// </summary>
            /// <returns><see cref="Java.Lang.String"/></returns>
            public Java.Lang.String GetLabel()
            {
                return IExecuteWithSignature<Java.Lang.String>("getLabel", "()Ljava/lang/String;");
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}