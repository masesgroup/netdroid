/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.1.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Print
{
    #region PrinterCapabilitiesInfo
    public partial class PrinterCapabilitiesInfo
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/print/PrinterCapabilitiesInfo.html#CREATOR"/>
        /// </summary>
        public static Android.Os.Parcelable.Creator CREATOR { get { if (!_CREATORReady) { _CREATORContent = SGetField<Android.Os.Parcelable.Creator>(LocalBridgeClazz, "CREATOR"); _CREATORReady = true; } return _CREATORContent; } }
        private static Android.Os.Parcelable.Creator _CREATORContent = default;
        private static bool _CREATORReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/print/PrinterCapabilitiesInfo.html#getColorModes()"/> 
        /// </summary>
        public int ColorModes
        {
            get { return IExecuteWithSignature<int>("getColorModes", "()I"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/print/PrinterCapabilitiesInfo.html#getDefaults()"/> 
        /// </summary>
        public Android.Print.PrintAttributes Defaults
        {
            get { return IExecuteWithSignature<Android.Print.PrintAttributes>("getDefaults", "()Landroid/print/PrintAttributes;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/print/PrinterCapabilitiesInfo.html#getDuplexModes()"/> 
        /// </summary>
        public int DuplexModes
        {
            get { return IExecuteWithSignature<int>("getDuplexModes", "()I"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/print/PrinterCapabilitiesInfo.html#getMediaSizes()"/> 
        /// </summary>
        public Java.Util.List<Android.Print.PrintAttributes.MediaSize> MediaSizes
        {
            get { return IExecuteWithSignature<Java.Util.List<Android.Print.PrintAttributes.MediaSize>>("getMediaSizes", "()Ljava/util/List;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/print/PrinterCapabilitiesInfo.html#getMinMargins()"/> 
        /// </summary>
        public Android.Print.PrintAttributes.Margins MinMargins
        {
            get { return IExecuteWithSignature<Android.Print.PrintAttributes.Margins>("getMinMargins", "()Landroid/print/PrintAttributes$Margins;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/print/PrinterCapabilitiesInfo.html#getResolutions()"/> 
        /// </summary>
        public Java.Util.List<Android.Print.PrintAttributes.Resolution> Resolutions
        {
            get { return IExecuteWithSignature<Java.Util.List<Android.Print.PrintAttributes.Resolution>>("getResolutions", "()Ljava/util/List;"); }
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/print/PrinterCapabilitiesInfo.html#describeContents()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int DescribeContents()
        {
            return IExecuteWithSignature<int>("describeContents", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/print/PrinterCapabilitiesInfo.html#writeToParcel(android.os.Parcel,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Os.Parcel"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void WriteToParcel(Android.Os.Parcel arg0, int arg1)
        {
            IExecute("writeToParcel", arg0, arg1);
        }

        #endregion

        #region Nested classes
        #region Builder
        public partial class Builder
        {
            #region Constructors
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrinterCapabilitiesInfo.Builder.html#%3Cinit%3E(android.print.PrinterId)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Print.PrinterId"/></param>
            public Builder(Android.Print.PrinterId arg0)
                : base(arg0)
            {
            }

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrinterCapabilitiesInfo.Builder.html#build()"/>
            /// </summary>
            /// <returns><see cref="Android.Print.PrinterCapabilitiesInfo"/></returns>
            public Android.Print.PrinterCapabilitiesInfo Build()
            {
                return IExecuteWithSignature<Android.Print.PrinterCapabilitiesInfo>("build", "()Landroid/print/PrinterCapabilitiesInfo;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrinterCapabilitiesInfo.Builder.html#addMediaSize(android.print.PrintAttributes.MediaSize,boolean)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Print.PrintAttributes.MediaSize"/></param>
            /// <param name="arg1"><see cref="bool"/></param>
            /// <returns><see cref="Android.Print.PrinterCapabilitiesInfo.Builder"/></returns>
            public Android.Print.PrinterCapabilitiesInfo.Builder AddMediaSize(Android.Print.PrintAttributes.MediaSize arg0, bool arg1)
            {
                return IExecute<Android.Print.PrinterCapabilitiesInfo.Builder>("addMediaSize", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrinterCapabilitiesInfo.Builder.html#addResolution(android.print.PrintAttributes.Resolution,boolean)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Print.PrintAttributes.Resolution"/></param>
            /// <param name="arg1"><see cref="bool"/></param>
            /// <returns><see cref="Android.Print.PrinterCapabilitiesInfo.Builder"/></returns>
            public Android.Print.PrinterCapabilitiesInfo.Builder AddResolution(Android.Print.PrintAttributes.Resolution arg0, bool arg1)
            {
                return IExecute<Android.Print.PrinterCapabilitiesInfo.Builder>("addResolution", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrinterCapabilitiesInfo.Builder.html#setColorModes(int,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            /// <returns><see cref="Android.Print.PrinterCapabilitiesInfo.Builder"/></returns>
            public Android.Print.PrinterCapabilitiesInfo.Builder SetColorModes(int arg0, int arg1)
            {
                return IExecute<Android.Print.PrinterCapabilitiesInfo.Builder>("setColorModes", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrinterCapabilitiesInfo.Builder.html#setDuplexModes(int,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            /// <returns><see cref="Android.Print.PrinterCapabilitiesInfo.Builder"/></returns>
            public Android.Print.PrinterCapabilitiesInfo.Builder SetDuplexModes(int arg0, int arg1)
            {
                return IExecute<Android.Print.PrinterCapabilitiesInfo.Builder>("setDuplexModes", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrinterCapabilitiesInfo.Builder.html#setMinMargins(android.print.PrintAttributes.Margins)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Print.PrintAttributes.Margins"/></param>
            /// <returns><see cref="Android.Print.PrinterCapabilitiesInfo.Builder"/></returns>
            public Android.Print.PrinterCapabilitiesInfo.Builder SetMinMargins(Android.Print.PrintAttributes.Margins arg0)
            {
                return IExecuteWithSignature<Android.Print.PrinterCapabilitiesInfo.Builder>("setMinMargins", "(Landroid/print/PrintAttributes$Margins;)Landroid/print/PrinterCapabilitiesInfo$Builder;", arg0);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}