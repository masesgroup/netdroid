/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.9.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Print
{
    #region PrintDocumentAdapter declaration
    /// <summary>
    /// <see href="https://developer.android.com/reference/android/print/PrintDocumentAdapter.html"/>
    /// </summary>
    public partial class PrintDocumentAdapter : MASES.JCOBridge.C2JBridge.JVMBridgeBase<PrintDocumentAdapter>
    {
        const string _bridgeClassName = "android.print.PrintDocumentAdapter";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        [global::System.Obsolete("PrintDocumentAdapter class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public PrintDocumentAdapter() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        [global::System.Obsolete("PrintDocumentAdapter class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public PrintDocumentAdapter(params object[] args) : base(args) { }

        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => true;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class
        #region LayoutResultCallback declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/print/PrintDocumentAdapter.LayoutResultCallback.html"/>
        /// </summary>
        public partial class LayoutResultCallback : MASES.JCOBridge.C2JBridge.JVMBridgeBase<LayoutResultCallback>
        {
            const string _bridgeClassName = "android.print.PrintDocumentAdapter$LayoutResultCallback";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            [global::System.Obsolete("LayoutResultCallback class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public LayoutResultCallback() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            [global::System.Obsolete("LayoutResultCallback class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public LayoutResultCallback(params object[] args) : base(args) { }

            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => true;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;

            // TODO: complete the class

        }
        #endregion

        #region WriteResultCallback declaration
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/print/PrintDocumentAdapter.WriteResultCallback.html"/>
        /// </summary>
        public partial class WriteResultCallback : MASES.JCOBridge.C2JBridge.JVMBridgeBase<WriteResultCallback>
        {
            const string _bridgeClassName = "android.print.PrintDocumentAdapter$WriteResultCallback";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            [global::System.Obsolete("WriteResultCallback class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public WriteResultCallback() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            [global::System.Obsolete("WriteResultCallback class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public WriteResultCallback(params object[] args) : base(args) { }

            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => true;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;

            // TODO: complete the class

        }
        #endregion

    
    }
    #endregion

    #region PrintDocumentAdapter implementation
    public partial class PrintDocumentAdapter
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/print/PrintDocumentAdapter.html#EXTRA_PRINT_PREVIEW"/>
        /// </summary>
        public static Java.Lang.String EXTRA_PRINT_PREVIEW { get { if (!_EXTRA_PRINT_PREVIEWReady) { _EXTRA_PRINT_PREVIEWContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "EXTRA_PRINT_PREVIEW"); _EXTRA_PRINT_PREVIEWReady = true; } return _EXTRA_PRINT_PREVIEWContent; } }
        private static Java.Lang.String _EXTRA_PRINT_PREVIEWContent = default;
        private static bool _EXTRA_PRINT_PREVIEWReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/print/PrintDocumentAdapter.html#onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter.LayoutResultCallback,android.os.Bundle)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Print.PrintAttributes"/></param>
        /// <param name="arg1"><see cref="Android.Print.PrintAttributes"/></param>
        /// <param name="arg2"><see cref="Android.Os.CancellationSignal"/></param>
        /// <param name="arg3"><see cref="Android.Print.PrintDocumentAdapter.LayoutResultCallback"/></param>
        /// <param name="arg4"><see cref="Android.Os.Bundle"/></param>
        public void OnLayout(Android.Print.PrintAttributes arg0, Android.Print.PrintAttributes arg1, Android.Os.CancellationSignal arg2, Android.Print.PrintDocumentAdapter.LayoutResultCallback arg3, Android.Os.Bundle arg4)
        {
            IExecuteWithSignature("onLayout", "(Landroid/print/PrintAttributes;Landroid/print/PrintAttributes;Landroid/os/CancellationSignal;Landroid/print/PrintDocumentAdapter$LayoutResultCallback;Landroid/os/Bundle;)V", arg0, arg1, arg2, arg3, arg4);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/print/PrintDocumentAdapter.html#onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter.WriteResultCallback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Android.Print.PageRange"/></param>
        /// <param name="arg1"><see cref="Android.Os.ParcelFileDescriptor"/></param>
        /// <param name="arg2"><see cref="Android.Os.CancellationSignal"/></param>
        /// <param name="arg3"><see cref="Android.Print.PrintDocumentAdapter.WriteResultCallback"/></param>
        public void OnWrite(Android.Print.PageRange[] arg0, Android.Os.ParcelFileDescriptor arg1, Android.Os.CancellationSignal arg2, Android.Print.PrintDocumentAdapter.WriteResultCallback arg3)
        {
            IExecuteWithSignature("onWrite", "([Landroid/print/PageRange;Landroid/os/ParcelFileDescriptor;Landroid/os/CancellationSignal;Landroid/print/PrintDocumentAdapter$WriteResultCallback;)V", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/print/PrintDocumentAdapter.html#onFinish()"/>
        /// </summary>
        public void OnFinish()
        {
            IExecuteWithSignature("onFinish", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/print/PrintDocumentAdapter.html#onStart()"/>
        /// </summary>
        public void OnStart()
        {
            IExecuteWithSignature("onStart", "()V");
        }

        #endregion

        #region Nested classes
        #region LayoutResultCallback implementation
        public partial class LayoutResultCallback
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintDocumentAdapter.LayoutResultCallback.html#onLayoutCancelled()"/>
            /// </summary>
            public void OnLayoutCancelled()
            {
                IExecuteWithSignature("onLayoutCancelled", "()V");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintDocumentAdapter.LayoutResultCallback.html#onLayoutFailed(java.lang.CharSequence)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.CharSequence"/></param>
            public void OnLayoutFailed(Java.Lang.CharSequence arg0)
            {
                IExecuteWithSignature("onLayoutFailed", "(Ljava/lang/CharSequence;)V", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintDocumentAdapter.LayoutResultCallback.html#onLayoutFinished(android.print.PrintDocumentInfo,boolean)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Print.PrintDocumentInfo"/></param>
            /// <param name="arg1"><see cref="bool"/></param>
            public void OnLayoutFinished(Android.Print.PrintDocumentInfo arg0, bool arg1)
            {
                IExecuteWithSignature("onLayoutFinished", "(Landroid/print/PrintDocumentInfo;Z)V", arg0, arg1);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region WriteResultCallback implementation
        public partial class WriteResultCallback
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintDocumentAdapter.WriteResultCallback.html#onWriteCancelled()"/>
            /// </summary>
            public void OnWriteCancelled()
            {
                IExecuteWithSignature("onWriteCancelled", "()V");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintDocumentAdapter.WriteResultCallback.html#onWriteFailed(java.lang.CharSequence)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.CharSequence"/></param>
            public void OnWriteFailed(Java.Lang.CharSequence arg0)
            {
                IExecuteWithSignature("onWriteFailed", "(Ljava/lang/CharSequence;)V", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/android/print/PrintDocumentAdapter.WriteResultCallback.html#onWriteFinished(android.print.PageRange[])"/>
            /// </summary>
            /// <param name="arg0"><see cref="Android.Print.PageRange"/></param>
            public void OnWriteFinished(Android.Print.PageRange[] arg0)
            {
                IExecuteWithSignature("onWriteFinished", "([Landroid/print/PageRange;)V", new object[] { arg0 });
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}