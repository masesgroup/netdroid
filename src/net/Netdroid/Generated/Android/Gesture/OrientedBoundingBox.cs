/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.2.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Android.Gesture
{
    #region OrientedBoundingBox
    public partial class OrientedBoundingBox
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/gesture/OrientedBoundingBox.html#centerX"/>
        /// </summary>
        public float centerX { get { if (!_centerXReady) { _centerXContent = IGetField<float>("centerX"); _centerXReady = true; } return _centerXContent; } }
        private float _centerXContent = default;
        private bool _centerXReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/gesture/OrientedBoundingBox.html#centerY"/>
        /// </summary>
        public float centerY { get { if (!_centerYReady) { _centerYContent = IGetField<float>("centerY"); _centerYReady = true; } return _centerYContent; } }
        private float _centerYContent = default;
        private bool _centerYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/gesture/OrientedBoundingBox.html#height"/>
        /// </summary>
        public float height { get { if (!_heightReady) { _heightContent = IGetField<float>("height"); _heightReady = true; } return _heightContent; } }
        private float _heightContent = default;
        private bool _heightReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/gesture/OrientedBoundingBox.html#orientation"/>
        /// </summary>
        public float orientation { get { if (!_orientationReady) { _orientationContent = IGetField<float>("orientation"); _orientationReady = true; } return _orientationContent; } }
        private float _orientationContent = default;
        private bool _orientationReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/gesture/OrientedBoundingBox.html#squareness"/>
        /// </summary>
        public float squareness { get { if (!_squarenessReady) { _squarenessContent = IGetField<float>("squareness"); _squarenessReady = true; } return _squarenessContent; } }
        private float _squarenessContent = default;
        private bool _squarenessReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://developer.android.com/reference/android/gesture/OrientedBoundingBox.html#width"/>
        /// </summary>
        public float width { get { if (!_widthReady) { _widthContent = IGetField<float>("width"); _widthReady = true; } return _widthContent; } }
        private float _widthContent = default;
        private bool _widthReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}