/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.1.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Java.Net
{
    #region ServerSocket
    public partial class ServerSocket
    {
        #region Constructors
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/net/ServerSocket.html#%3Cinit%3E(int,int,java.net.InetAddress)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="Java.Net.InetAddress"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public ServerSocket(int arg0, int arg1, Java.Net.InetAddress arg2)
            : base(arg0, arg1, arg2)
        {
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/net/ServerSocket.html#%3Cinit%3E(int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public ServerSocket(int arg0, int arg1)
            : base(arg0, arg1)
        {
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/net/ServerSocket.html#%3Cinit%3E(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public ServerSocket(int arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/net/ServerSocket.html#setSocketFactory(java.net.SocketImplFactory)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Net.SocketImplFactory"/></param>
        /// <exception cref="Java.Io.IOException"/>
        [global::System.Obsolete()]
        public static void SetSocketFactory(Java.Net.SocketImplFactory arg0)
        {
            SExecuteWithSignature(LocalBridgeClazz, "setSocketFactory", "(Ljava/net/SocketImplFactory;)V", arg0);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/net/ServerSocket.html#setOption(java.net.SocketOption,java.lang.Object)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Net.SocketOption"/></param>
        /// <param name="arg1"><typeparamref name="T"/></param>
        /// <typeparam name="T"></typeparam>
        /// <returns><see cref="Java.Net.ServerSocket"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public Java.Net.ServerSocket SetOption<T>(Java.Net.SocketOption<T> arg0, T arg1)
        {
            return IExecute<Java.Net.ServerSocket>("setOption", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/net/ServerSocket.html#getOption(java.net.SocketOption)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Net.SocketOption"/></param>
        /// <typeparam name="T"></typeparam>
        /// <returns><typeparamref name="T"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public T GetOption<T>(Java.Net.SocketOption<T> arg0)
        {
            return IExecuteWithSignature<T>("getOption", "(Ljava/net/SocketOption;)Ljava/lang/Object;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/net/ServerSocket.html#getReuseAddress()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        /// <exception cref="Java.Net.SocketException"/>
        public bool GetReuseAddress()
        {
            return IExecuteWithSignature<bool>("getReuseAddress", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/net/ServerSocket.html#isBound()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsBound()
        {
            return IExecuteWithSignature<bool>("isBound", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/net/ServerSocket.html#isClosed()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsClosed()
        {
            return IExecuteWithSignature<bool>("isClosed", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/net/ServerSocket.html#getLocalPort()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int GetLocalPort()
        {
            return IExecuteWithSignature<int>("getLocalPort", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/net/ServerSocket.html#getInetAddress()"/>
        /// </summary>
        /// <returns><see cref="Java.Net.InetAddress"/></returns>
        public Java.Net.InetAddress GetInetAddress()
        {
            return IExecuteWithSignature<Java.Net.InetAddress>("getInetAddress", "()Ljava/net/InetAddress;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/net/ServerSocket.html#accept()"/>
        /// </summary>
        /// <returns><see cref="Java.Net.Socket"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public Java.Net.Socket Accept()
        {
            return IExecuteWithSignature<Java.Net.Socket>("accept", "()Ljava/net/Socket;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/net/ServerSocket.html#getLocalSocketAddress()"/>
        /// </summary>
        /// <returns><see cref="Java.Net.SocketAddress"/></returns>
        public Java.Net.SocketAddress GetLocalSocketAddress()
        {
            return IExecuteWithSignature<Java.Net.SocketAddress>("getLocalSocketAddress", "()Ljava/net/SocketAddress;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/net/ServerSocket.html#getChannel()"/>
        /// </summary>
        /// <returns><see cref="Java.Nio.Channels.ServerSocketChannel"/></returns>
        public Java.Nio.Channels.ServerSocketChannel GetChannel()
        {
            return IExecuteWithSignature<Java.Nio.Channels.ServerSocketChannel>("getChannel", "()Ljava/nio/channels/ServerSocketChannel;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/net/ServerSocket.html#supportedOptions()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.Set"/></returns>
        public Java.Util.Set<Java.Net.SocketOption<object>> SupportedOptions()
        {
            return IExecuteWithSignature<Java.Util.Set<Java.Net.SocketOption<object>>>("supportedOptions", "()Ljava/util/Set;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/net/ServerSocket.html#getReceiveBufferSize()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        /// <exception cref="Java.Net.SocketException"/>
        public int GetReceiveBufferSize()
        {
            return IExecuteWithSignature<int>("getReceiveBufferSize", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/net/ServerSocket.html#getSoTimeout()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public int GetSoTimeout()
        {
            return IExecuteWithSignature<int>("getSoTimeout", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/net/ServerSocket.html#setReceiveBufferSize(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <exception cref="Java.Net.SocketException"/>
        public void SetReceiveBufferSize(int arg0)
        {
            IExecuteWithSignature("setReceiveBufferSize", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/net/ServerSocket.html#setSoTimeout(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <exception cref="Java.Net.SocketException"/>
        public void SetSoTimeout(int arg0)
        {
            IExecuteWithSignature("setSoTimeout", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/net/ServerSocket.html#bind(java.net.SocketAddress,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Net.SocketAddress"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public void Bind(Java.Net.SocketAddress arg0, int arg1)
        {
            IExecute("bind", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/net/ServerSocket.html#bind(java.net.SocketAddress)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Net.SocketAddress"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public void Bind(Java.Net.SocketAddress arg0)
        {
            IExecuteWithSignature("bind", "(Ljava/net/SocketAddress;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/net/ServerSocket.html#close()"/>
        /// </summary>
        /// <exception cref="Java.Io.IOException"/>
        public void Close()
        {
            IExecuteWithSignature("close", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/net/ServerSocket.html#setPerformancePreferences(int,int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        public void SetPerformancePreferences(int arg0, int arg1, int arg2)
        {
            IExecute("setPerformancePreferences", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/net/ServerSocket.html#setReuseAddress(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        /// <exception cref="Java.Net.SocketException"/>
        public void SetReuseAddress(bool arg0)
        {
            IExecuteWithSignature("setReuseAddress", "(Z)V", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}