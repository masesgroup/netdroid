/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.5.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Java.Security.Cert
{
    #region PKIXRevocationChecker
    public partial class PKIXRevocationChecker
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/security/cert/PKIXRevocationChecker.html#getSoftFailExceptions()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.List"/></returns>
        public Java.Util.List<Java.Security.Cert.CertPathValidatorException> GetSoftFailExceptions()
        {
            return IExecuteWithSignature<Java.Util.List<Java.Security.Cert.CertPathValidatorException>>("getSoftFailExceptions", "()Ljava/util/List;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/security/cert/PKIXRevocationChecker.html#getOcspResponder()"/>
        /// </summary>
        /// <returns><see cref="Java.Net.URI"/></returns>
        public Java.Net.URI GetOcspResponder()
        {
            return IExecuteWithSignature<Java.Net.URI>("getOcspResponder", "()Ljava/net/URI;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/security/cert/PKIXRevocationChecker.html#getOcspResponderCert()"/>
        /// </summary>
        /// <returns><see cref="Java.Security.Cert.X509Certificate"/></returns>
        public Java.Security.Cert.X509Certificate GetOcspResponderCert()
        {
            return IExecuteWithSignature<Java.Security.Cert.X509Certificate>("getOcspResponderCert", "()Ljava/security/cert/X509Certificate;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/security/cert/PKIXRevocationChecker.html#getOcspExtensions()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.List"/></returns>
        public Java.Util.List<Java.Security.Cert.Extension> GetOcspExtensions()
        {
            return IExecuteWithSignature<Java.Util.List<Java.Security.Cert.Extension>>("getOcspExtensions", "()Ljava/util/List;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/security/cert/PKIXRevocationChecker.html#getOcspResponses()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.Map"/></returns>
        public Java.Util.Map<Java.Security.Cert.X509Certificate, byte[]> GetOcspResponses()
        {
            return IExecuteWithSignature<Java.Util.Map<Java.Security.Cert.X509Certificate, byte[]>>("getOcspResponses", "()Ljava/util/Map;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/security/cert/PKIXRevocationChecker.html#getOptions()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.Set"/></returns>
        public Java.Util.Set<Java.Security.Cert.PKIXRevocationChecker.Option> GetOptions()
        {
            return IExecuteWithSignature<Java.Util.Set<Java.Security.Cert.PKIXRevocationChecker.Option>>("getOptions", "()Ljava/util/Set;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/security/cert/PKIXRevocationChecker.html#setOcspExtensions(java.util.List)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.List"/></param>
        public void SetOcspExtensions(Java.Util.List<Java.Security.Cert.Extension> arg0)
        {
            IExecuteWithSignature("setOcspExtensions", "(Ljava/util/List;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/security/cert/PKIXRevocationChecker.html#setOcspResponder(java.net.URI)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Net.URI"/></param>
        public void SetOcspResponder(Java.Net.URI arg0)
        {
            IExecuteWithSignature("setOcspResponder", "(Ljava/net/URI;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/security/cert/PKIXRevocationChecker.html#setOcspResponderCert(java.security.cert.X509Certificate)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Security.Cert.X509Certificate"/></param>
        public void SetOcspResponderCert(Java.Security.Cert.X509Certificate arg0)
        {
            IExecuteWithSignature("setOcspResponderCert", "(Ljava/security/cert/X509Certificate;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/security/cert/PKIXRevocationChecker.html#setOcspResponses(java.util.Map)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        public void SetOcspResponses(Java.Util.Map<Java.Security.Cert.X509Certificate, byte[]> arg0)
        {
            IExecuteWithSignature("setOcspResponses", "(Ljava/util/Map;)V", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/security/cert/PKIXRevocationChecker.html#setOptions(java.util.Set)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Set"/></param>
        public void SetOptions(Java.Util.Set<Java.Security.Cert.PKIXRevocationChecker.Option> arg0)
        {
            IExecuteWithSignature("setOptions", "(Ljava/util/Set;)V", arg0);
        }

        #endregion

        #region Nested classes
        #region Option
        public partial class Option
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://developer.android.com/reference/java/security/cert/PKIXRevocationChecker.Option.html#NO_FALLBACK"/>
            /// </summary>
            public static Java.Security.Cert.PKIXRevocationChecker.Option NO_FALLBACK { get { if (!_NO_FALLBACKReady) { _NO_FALLBACKContent = SGetField<Java.Security.Cert.PKIXRevocationChecker.Option>(LocalBridgeClazz, "NO_FALLBACK"); _NO_FALLBACKReady = true; } return _NO_FALLBACKContent; } }
            private static Java.Security.Cert.PKIXRevocationChecker.Option _NO_FALLBACKContent = default;
            private static bool _NO_FALLBACKReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/java/security/cert/PKIXRevocationChecker.Option.html#ONLY_END_ENTITY"/>
            /// </summary>
            public static Java.Security.Cert.PKIXRevocationChecker.Option ONLY_END_ENTITY { get { if (!_ONLY_END_ENTITYReady) { _ONLY_END_ENTITYContent = SGetField<Java.Security.Cert.PKIXRevocationChecker.Option>(LocalBridgeClazz, "ONLY_END_ENTITY"); _ONLY_END_ENTITYReady = true; } return _ONLY_END_ENTITYContent; } }
            private static Java.Security.Cert.PKIXRevocationChecker.Option _ONLY_END_ENTITYContent = default;
            private static bool _ONLY_END_ENTITYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/java/security/cert/PKIXRevocationChecker.Option.html#PREFER_CRLS"/>
            /// </summary>
            public static Java.Security.Cert.PKIXRevocationChecker.Option PREFER_CRLS { get { if (!_PREFER_CRLSReady) { _PREFER_CRLSContent = SGetField<Java.Security.Cert.PKIXRevocationChecker.Option>(LocalBridgeClazz, "PREFER_CRLS"); _PREFER_CRLSReady = true; } return _PREFER_CRLSContent; } }
            private static Java.Security.Cert.PKIXRevocationChecker.Option _PREFER_CRLSContent = default;
            private static bool _PREFER_CRLSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://developer.android.com/reference/java/security/cert/PKIXRevocationChecker.Option.html#SOFT_FAIL"/>
            /// </summary>
            public static Java.Security.Cert.PKIXRevocationChecker.Option SOFT_FAIL { get { if (!_SOFT_FAILReady) { _SOFT_FAILContent = SGetField<Java.Security.Cert.PKIXRevocationChecker.Option>(LocalBridgeClazz, "SOFT_FAIL"); _SOFT_FAILReady = true; } return _SOFT_FAILContent; } }
            private static Java.Security.Cert.PKIXRevocationChecker.Option _SOFT_FAILContent = default;
            private static bool _SOFT_FAILReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/java/security/cert/PKIXRevocationChecker.Option.html#valueOf(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Java.Security.Cert.PKIXRevocationChecker.Option"/></returns>
            public static Java.Security.Cert.PKIXRevocationChecker.Option ValueOf(Java.Lang.String arg0)
            {
                return SExecuteWithSignature<Java.Security.Cert.PKIXRevocationChecker.Option>(LocalBridgeClazz, "valueOf", "(Ljava/lang/String;)Ljava/security/cert/PKIXRevocationChecker$Option;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/java/security/cert/PKIXRevocationChecker.Option.html#values()"/>
            /// </summary>
            /// <returns><see cref="Java.Security.Cert.PKIXRevocationChecker.Option"/></returns>
            public static Java.Security.Cert.PKIXRevocationChecker.Option[] Values()
            {
                return SExecuteWithSignatureArray<Java.Security.Cert.PKIXRevocationChecker.Option>(LocalBridgeClazz, "values", "()[Ljava/security/cert/PKIXRevocationChecker$Option;");
            }

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}