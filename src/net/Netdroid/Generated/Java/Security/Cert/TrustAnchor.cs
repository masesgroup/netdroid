/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.9.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Java.Security.Cert
{
    #region TrustAnchor declaration
    /// <summary>
    /// <see href="https://developer.android.com/reference/java/security/cert/TrustAnchor.html"/>
    /// </summary>
    public partial class TrustAnchor : MASES.JCOBridge.C2JBridge.JVMBridgeBase<TrustAnchor>
    {
        const string _bridgeClassName = "java.security.cert.TrustAnchor";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public TrustAnchor() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public TrustAnchor(params object[] args) : base(args) { }

        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region TrustAnchor implementation
    public partial class TrustAnchor
    {
        #region Constructors
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/security/cert/TrustAnchor.html#%3Cinit%3E(java.lang.String,java.security.PublicKey,byte[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Java.Security.PublicKey"/></param>
        /// <param name="arg2"><see cref="byte"/></param>
        public TrustAnchor(Java.Lang.String arg0, Java.Security.PublicKey arg1, byte[] arg2)
            : base(arg0, arg1, arg2)
        {
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/security/cert/TrustAnchor.html#%3Cinit%3E(java.security.cert.X509Certificate,byte[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Security.Cert.X509Certificate"/></param>
        /// <param name="arg1"><see cref="byte"/></param>
        public TrustAnchor(Java.Security.Cert.X509Certificate arg0, byte[] arg1)
            : base(arg0, arg1)
        {
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/security/cert/TrustAnchor.html#%3Cinit%3E(javax.security.auth.x500.X500Principal,java.security.PublicKey,byte[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Javax.Security.Auth.X500.X500Principal"/></param>
        /// <param name="arg1"><see cref="Java.Security.PublicKey"/></param>
        /// <param name="arg2"><see cref="byte"/></param>
        public TrustAnchor(Javax.Security.Auth.X500.X500Principal arg0, Java.Security.PublicKey arg1, byte[] arg2)
            : base(arg0, arg1, arg2)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/security/cert/TrustAnchor.html#getNameConstraints()"/>
        /// </summary>
        /// <returns><see cref="byte"/></returns>
        public byte[] GetNameConstraints()
        {
            return IExecuteWithSignatureArray<byte>("getNameConstraints", "()[B");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/security/cert/TrustAnchor.html#getCAName()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetCAName()
        {
            return IExecuteWithSignature<Java.Lang.String>("getCAName", "()Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/security/cert/TrustAnchor.html#getTrustedCert()"/>
        /// </summary>
        /// <returns><see cref="Java.Security.Cert.X509Certificate"/></returns>
        public Java.Security.Cert.X509Certificate GetTrustedCert()
        {
            return IExecuteWithSignature<Java.Security.Cert.X509Certificate>("getTrustedCert", "()Ljava/security/cert/X509Certificate;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/security/cert/TrustAnchor.html#getCAPublicKey()"/>
        /// </summary>
        /// <returns><see cref="Java.Security.PublicKey"/></returns>
        public Java.Security.PublicKey GetCAPublicKey()
        {
            return IExecuteWithSignature<Java.Security.PublicKey>("getCAPublicKey", "()Ljava/security/PublicKey;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/security/cert/TrustAnchor.html#getCA()"/>
        /// </summary>
        /// <returns><see cref="Javax.Security.Auth.X500.X500Principal"/></returns>
        public Javax.Security.Auth.X500.X500Principal GetCA()
        {
            return IExecuteWithSignature<Javax.Security.Auth.X500.X500Principal>("getCA", "()Ljavax/security/auth/x500/X500Principal;");
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}