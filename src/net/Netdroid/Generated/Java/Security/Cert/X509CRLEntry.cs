/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.5.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Java.Security.Cert
{
    #region X509CRLEntry
    public partial class X509CRLEntry
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/security/cert/X509CRLEntry.html#hasExtensions()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool HasExtensions()
        {
            return IExecuteWithSignature<bool>("hasExtensions", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/security/cert/X509CRLEntry.html#getEncoded()"/>
        /// </summary>
        /// <returns><see cref="byte"/></returns>
        /// <exception cref="Java.Security.Cert.CRLException"/>
        public byte[] GetEncoded()
        {
            return IExecuteWithSignatureArray<byte>("getEncoded", "()[B");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/security/cert/X509CRLEntry.html#getSerialNumber()"/>
        /// </summary>
        /// <returns><see cref="Java.Math.BigInteger"/></returns>
        public Java.Math.BigInteger GetSerialNumber()
        {
            return IExecuteWithSignature<Java.Math.BigInteger>("getSerialNumber", "()Ljava/math/BigInteger;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/security/cert/X509CRLEntry.html#getRevocationDate()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.Date"/></returns>
        public Java.Util.Date GetRevocationDate()
        {
            return IExecuteWithSignature<Java.Util.Date>("getRevocationDate", "()Ljava/util/Date;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/security/cert/X509CRLEntry.html#getRevocationReason()"/>
        /// </summary>
        /// <returns><see cref="Java.Security.Cert.CRLReason"/></returns>
        public Java.Security.Cert.CRLReason GetRevocationReason()
        {
            return IExecuteWithSignature<Java.Security.Cert.CRLReason>("getRevocationReason", "()Ljava/security/cert/CRLReason;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/security/cert/X509CRLEntry.html#getCertificateIssuer()"/>
        /// </summary>
        /// <returns><see cref="Javax.Security.Auth.X500.X500Principal"/></returns>
        public Javax.Security.Auth.X500.X500Principal GetCertificateIssuer()
        {
            return IExecuteWithSignature<Javax.Security.Auth.X500.X500Principal>("getCertificateIssuer", "()Ljavax/security/auth/x500/X500Principal;");
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}