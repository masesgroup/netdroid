/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.8.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Java.Util.RandomNs
{
    #region IRandomGenerator
    /// <summary>
    /// .NET interface for TO BE DEFINED FROM USER
    /// </summary>
    public partial interface IRandomGenerator
    {
        #region Instance methods

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion

    #region RandomGenerator
    public partial class RandomGenerator : Java.Util.RandomNs.IRandomGenerator
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.html#getDefault()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.RandomNs.RandomGenerator"/></returns>
        public static Java.Util.RandomNs.RandomGenerator GetDefault()
        {
            return SExecuteWithSignature<Java.Util.RandomNs.RandomGenerator>(LocalBridgeClazz, "getDefault", "()Ljava/util/random/RandomGenerator;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.html#of(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Java.Util.RandomNs.RandomGenerator"/></returns>
        public static Java.Util.RandomNs.RandomGenerator Of(Java.Lang.String arg0)
        {
            return SExecuteWithSignature<Java.Util.RandomNs.RandomGenerator>(LocalBridgeClazz, "of", "(Ljava/lang/String;)Ljava/util/random/RandomGenerator;", arg0);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.html#nextLong()"/>
        /// </summary>
        /// <returns><see cref="long"/></returns>
        public long NextLong()
        {
            return IExecuteWithSignature<long>("nextLong", "()J");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.html#isDeprecated()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsDeprecated()
        {
            return IExecuteWithSignature<bool>("isDeprecated", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.html#nextBoolean()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool NextBoolean()
        {
            return IExecuteWithSignature<bool>("nextBoolean", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.html#nextDouble()"/>
        /// </summary>
        /// <returns><see cref="double"/></returns>
        public double NextDouble()
        {
            return IExecuteWithSignature<double>("nextDouble", "()D");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.html#nextDouble(double,double)"/>
        /// </summary>
        /// <param name="arg0"><see cref="double"/></param>
        /// <param name="arg1"><see cref="double"/></param>
        /// <returns><see cref="double"/></returns>
        public double NextDouble(double arg0, double arg1)
        {
            return IExecute<double>("nextDouble", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.html#nextDouble(double)"/>
        /// </summary>
        /// <param name="arg0"><see cref="double"/></param>
        /// <returns><see cref="double"/></returns>
        public double NextDouble(double arg0)
        {
            return IExecuteWithSignature<double>("nextDouble", "(D)D", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.html#nextExponential()"/>
        /// </summary>
        /// <returns><see cref="double"/></returns>
        public double NextExponential()
        {
            return IExecuteWithSignature<double>("nextExponential", "()D");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.html#nextGaussian()"/>
        /// </summary>
        /// <returns><see cref="double"/></returns>
        public double NextGaussian()
        {
            return IExecuteWithSignature<double>("nextGaussian", "()D");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.html#nextGaussian(double,double)"/>
        /// </summary>
        /// <param name="arg0"><see cref="double"/></param>
        /// <param name="arg1"><see cref="double"/></param>
        /// <returns><see cref="double"/></returns>
        public double NextGaussian(double arg0, double arg1)
        {
            return IExecute<double>("nextGaussian", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.html#nextFloat()"/>
        /// </summary>
        /// <returns><see cref="float"/></returns>
        public float NextFloat()
        {
            return IExecuteWithSignature<float>("nextFloat", "()F");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.html#nextFloat(float,float)"/>
        /// </summary>
        /// <param name="arg0"><see cref="float"/></param>
        /// <param name="arg1"><see cref="float"/></param>
        /// <returns><see cref="float"/></returns>
        public float NextFloat(float arg0, float arg1)
        {
            return IExecute<float>("nextFloat", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.html#nextFloat(float)"/>
        /// </summary>
        /// <param name="arg0"><see cref="float"/></param>
        /// <returns><see cref="float"/></returns>
        public float NextFloat(float arg0)
        {
            return IExecuteWithSignature<float>("nextFloat", "(F)F", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.html#nextInt()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int NextInt()
        {
            return IExecuteWithSignature<int>("nextInt", "()I");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.html#nextInt(int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public int NextInt(int arg0, int arg1)
        {
            return IExecute<int>("nextInt", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.html#nextInt(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public int NextInt(int arg0)
        {
            return IExecuteWithSignature<int>("nextInt", "(I)I", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.html#doubles()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.Stream.DoubleStream"/></returns>
        public Java.Util.Stream.DoubleStream Doubles()
        {
            return IExecuteWithSignature<Java.Util.Stream.DoubleStream>("doubles", "()Ljava/util/stream/DoubleStream;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.html#doubles(double,double)"/>
        /// </summary>
        /// <param name="arg0"><see cref="double"/></param>
        /// <param name="arg1"><see cref="double"/></param>
        /// <returns><see cref="Java.Util.Stream.DoubleStream"/></returns>
        public Java.Util.Stream.DoubleStream Doubles(double arg0, double arg1)
        {
            return IExecute<Java.Util.Stream.DoubleStream>("doubles", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.html#doubles(long,double,double)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <param name="arg1"><see cref="double"/></param>
        /// <param name="arg2"><see cref="double"/></param>
        /// <returns><see cref="Java.Util.Stream.DoubleStream"/></returns>
        public Java.Util.Stream.DoubleStream Doubles(long arg0, double arg1, double arg2)
        {
            return IExecute<Java.Util.Stream.DoubleStream>("doubles", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.html#doubles(long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <returns><see cref="Java.Util.Stream.DoubleStream"/></returns>
        public Java.Util.Stream.DoubleStream Doubles(long arg0)
        {
            return IExecuteWithSignature<Java.Util.Stream.DoubleStream>("doubles", "(J)Ljava/util/stream/DoubleStream;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.html#ints()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.Stream.IntStream"/></returns>
        public Java.Util.Stream.IntStream Ints()
        {
            return IExecuteWithSignature<Java.Util.Stream.IntStream>("ints", "()Ljava/util/stream/IntStream;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.html#ints(int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="Java.Util.Stream.IntStream"/></returns>
        public Java.Util.Stream.IntStream Ints(int arg0, int arg1)
        {
            return IExecute<Java.Util.Stream.IntStream>("ints", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.html#ints(long,int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <returns><see cref="Java.Util.Stream.IntStream"/></returns>
        public Java.Util.Stream.IntStream Ints(long arg0, int arg1, int arg2)
        {
            return IExecute<Java.Util.Stream.IntStream>("ints", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.html#ints(long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <returns><see cref="Java.Util.Stream.IntStream"/></returns>
        public Java.Util.Stream.IntStream Ints(long arg0)
        {
            return IExecuteWithSignature<Java.Util.Stream.IntStream>("ints", "(J)Ljava/util/stream/IntStream;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.html#longs()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.Stream.LongStream"/></returns>
        public Java.Util.Stream.LongStream Longs()
        {
            return IExecuteWithSignature<Java.Util.Stream.LongStream>("longs", "()Ljava/util/stream/LongStream;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.html#longs(long,long,long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <param name="arg1"><see cref="long"/></param>
        /// <param name="arg2"><see cref="long"/></param>
        /// <returns><see cref="Java.Util.Stream.LongStream"/></returns>
        public Java.Util.Stream.LongStream Longs(long arg0, long arg1, long arg2)
        {
            return IExecute<Java.Util.Stream.LongStream>("longs", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.html#longs(long,long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <param name="arg1"><see cref="long"/></param>
        /// <returns><see cref="Java.Util.Stream.LongStream"/></returns>
        public Java.Util.Stream.LongStream Longs(long arg0, long arg1)
        {
            return IExecute<Java.Util.Stream.LongStream>("longs", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.html#longs(long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <returns><see cref="Java.Util.Stream.LongStream"/></returns>
        public Java.Util.Stream.LongStream Longs(long arg0)
        {
            return IExecuteWithSignature<Java.Util.Stream.LongStream>("longs", "(J)Ljava/util/stream/LongStream;", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.html#nextLong(long,long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <param name="arg1"><see cref="long"/></param>
        /// <returns><see cref="long"/></returns>
        public long NextLong(long arg0, long arg1)
        {
            return IExecute<long>("nextLong", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.html#nextLong(long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <returns><see cref="long"/></returns>
        public long NextLong(long arg0)
        {
            return IExecuteWithSignature<long>("nextLong", "(J)J", arg0);
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.html#nextBytes(byte[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="byte"/></param>
        public void NextBytes(byte[] arg0)
        {
            IExecuteWithSignature("nextBytes", "([B)V", new object[] { arg0 });
        }

        #endregion

        #region Nested classes
        #region ArbitrarilyJumpableGenerator
        public partial class ArbitrarilyJumpableGenerator
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.ArbitrarilyJumpableGenerator.html#jump(double)"/>
            /// </summary>
            /// <param name="arg0"><see cref="double"/></param>
            public void Jump(double arg0)
            {
                IExecuteWithSignature("jump", "(D)V", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.ArbitrarilyJumpableGenerator.html#jumpPowerOfTwo(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            public void JumpPowerOfTwo(int arg0)
            {
                IExecuteWithSignature("jumpPowerOfTwo", "(I)V", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.ArbitrarilyJumpableGenerator.html#copyAndJump(double)"/>
            /// </summary>
            /// <param name="arg0"><see cref="double"/></param>
            /// <returns><see cref="Java.Util.RandomNs.RandomGenerator.ArbitrarilyJumpableGenerator"/></returns>
            public Java.Util.RandomNs.RandomGenerator.ArbitrarilyJumpableGenerator CopyAndJump(double arg0)
            {
                return IExecuteWithSignature<Java.Util.RandomNs.RandomGenerator.ArbitrarilyJumpableGenerator>("copyAndJump", "(D)Ljava/util/random/RandomGenerator$ArbitrarilyJumpableGenerator;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.ArbitrarilyJumpableGenerator.html#copy()"/>
            /// </summary>
            /// <returns><see cref="Java.Util.RandomNs.RandomGenerator.LeapableGenerator"/></returns>
            public Java.Util.RandomNs.RandomGenerator.LeapableGenerator Copy()
            {
                return IExecuteWithSignature<Java.Util.RandomNs.RandomGenerator.LeapableGenerator>("copy", "()Ljava/util/random/RandomGenerator$LeapableGenerator;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.ArbitrarilyJumpableGenerator.html#jumps(double)"/>
            /// </summary>
            /// <param name="arg0"><see cref="double"/></param>
            /// <returns><see cref="Java.Util.Stream.Stream"/></returns>
            public Java.Util.Stream.Stream<Java.Util.RandomNs.RandomGenerator.ArbitrarilyJumpableGenerator> Jumps(double arg0)
            {
                return IExecuteWithSignature<Java.Util.Stream.Stream<Java.Util.RandomNs.RandomGenerator.ArbitrarilyJumpableGenerator>>("jumps", "(D)Ljava/util/stream/Stream;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.ArbitrarilyJumpableGenerator.html#jumps(long,double)"/>
            /// </summary>
            /// <param name="arg0"><see cref="long"/></param>
            /// <param name="arg1"><see cref="double"/></param>
            /// <returns><see cref="Java.Util.Stream.Stream"/></returns>
            public Java.Util.Stream.Stream<Java.Util.RandomNs.RandomGenerator.ArbitrarilyJumpableGenerator> Jumps(long arg0, double arg1)
            {
                return IExecute<Java.Util.Stream.Stream<Java.Util.RandomNs.RandomGenerator.ArbitrarilyJumpableGenerator>>("jumps", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.ArbitrarilyJumpableGenerator.html#jump()"/>
            /// </summary>
            public void Jump()
            {
                IExecuteWithSignature("jump", "()V");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.ArbitrarilyJumpableGenerator.html#leap()"/>
            /// </summary>
            public void Leap()
            {
                IExecuteWithSignature("leap", "()V");
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region JumpableGenerator
        public partial class JumpableGenerator
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.JumpableGenerator.html#jumpDistance()"/>
            /// </summary>
            /// <returns><see cref="double"/></returns>
            public double JumpDistance()
            {
                return IExecuteWithSignature<double>("jumpDistance", "()D");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.JumpableGenerator.html#copy()"/>
            /// </summary>
            /// <returns><see cref="Java.Util.RandomNs.RandomGenerator.JumpableGenerator"/></returns>
            public Java.Util.RandomNs.RandomGenerator.JumpableGenerator Copy()
            {
                return IExecuteWithSignature<Java.Util.RandomNs.RandomGenerator.JumpableGenerator>("copy", "()Ljava/util/random/RandomGenerator$JumpableGenerator;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.JumpableGenerator.html#jump()"/>
            /// </summary>
            public void Jump()
            {
                IExecuteWithSignature("jump", "()V");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.JumpableGenerator.html#copyAndJump()"/>
            /// </summary>
            /// <returns><see cref="Java.Util.RandomNs.RandomGenerator"/></returns>
            public Java.Util.RandomNs.RandomGenerator CopyAndJump()
            {
                return IExecuteWithSignature<Java.Util.RandomNs.RandomGenerator>("copyAndJump", "()Ljava/util/random/RandomGenerator;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.JumpableGenerator.html#jumps()"/>
            /// </summary>
            /// <returns><see cref="Java.Util.Stream.Stream"/></returns>
            public Java.Util.Stream.Stream<Java.Util.RandomNs.RandomGenerator> Jumps()
            {
                return IExecuteWithSignature<Java.Util.Stream.Stream<Java.Util.RandomNs.RandomGenerator>>("jumps", "()Ljava/util/stream/Stream;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.JumpableGenerator.html#jumps(long)"/>
            /// </summary>
            /// <param name="arg0"><see cref="long"/></param>
            /// <returns><see cref="Java.Util.Stream.Stream"/></returns>
            public Java.Util.Stream.Stream<Java.Util.RandomNs.RandomGenerator> Jumps(long arg0)
            {
                return IExecuteWithSignature<Java.Util.Stream.Stream<Java.Util.RandomNs.RandomGenerator>>("jumps", "(J)Ljava/util/stream/Stream;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.JumpableGenerator.html#rngs()"/>
            /// </summary>
            /// <returns><see cref="Java.Util.Stream.Stream"/></returns>
            public Java.Util.Stream.Stream<Java.Util.RandomNs.RandomGenerator> Rngs()
            {
                return IExecuteWithSignature<Java.Util.Stream.Stream<Java.Util.RandomNs.RandomGenerator>>("rngs", "()Ljava/util/stream/Stream;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.JumpableGenerator.html#rngs(long)"/>
            /// </summary>
            /// <param name="arg0"><see cref="long"/></param>
            /// <returns><see cref="Java.Util.Stream.Stream"/></returns>
            public Java.Util.Stream.Stream<Java.Util.RandomNs.RandomGenerator> Rngs(long arg0)
            {
                return IExecuteWithSignature<Java.Util.Stream.Stream<Java.Util.RandomNs.RandomGenerator>>("rngs", "(J)Ljava/util/stream/Stream;", arg0);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region LeapableGenerator
        public partial class LeapableGenerator
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.LeapableGenerator.html#leapDistance()"/>
            /// </summary>
            /// <returns><see cref="double"/></returns>
            public double LeapDistance()
            {
                return IExecuteWithSignature<double>("leapDistance", "()D");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.LeapableGenerator.html#leap()"/>
            /// </summary>
            public void Leap()
            {
                IExecuteWithSignature("leap", "()V");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.LeapableGenerator.html#copy()"/>
            /// </summary>
            /// <returns><see cref="Java.Util.RandomNs.RandomGenerator.JumpableGenerator"/></returns>
            public Java.Util.RandomNs.RandomGenerator.JumpableGenerator Copy()
            {
                return IExecuteWithSignature<Java.Util.RandomNs.RandomGenerator.JumpableGenerator>("copy", "()Ljava/util/random/RandomGenerator$JumpableGenerator;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.LeapableGenerator.html#copyAndLeap()"/>
            /// </summary>
            /// <returns><see cref="Java.Util.RandomNs.RandomGenerator.JumpableGenerator"/></returns>
            public Java.Util.RandomNs.RandomGenerator.JumpableGenerator CopyAndLeap()
            {
                return IExecuteWithSignature<Java.Util.RandomNs.RandomGenerator.JumpableGenerator>("copyAndLeap", "()Ljava/util/random/RandomGenerator$JumpableGenerator;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.LeapableGenerator.html#leaps()"/>
            /// </summary>
            /// <returns><see cref="Java.Util.Stream.Stream"/></returns>
            public Java.Util.Stream.Stream<Java.Util.RandomNs.RandomGenerator.JumpableGenerator> Leaps()
            {
                return IExecuteWithSignature<Java.Util.Stream.Stream<Java.Util.RandomNs.RandomGenerator.JumpableGenerator>>("leaps", "()Ljava/util/stream/Stream;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.LeapableGenerator.html#leaps(long)"/>
            /// </summary>
            /// <param name="arg0"><see cref="long"/></param>
            /// <returns><see cref="Java.Util.Stream.Stream"/></returns>
            public Java.Util.Stream.Stream<Java.Util.RandomNs.RandomGenerator.JumpableGenerator> Leaps(long arg0)
            {
                return IExecuteWithSignature<Java.Util.Stream.Stream<Java.Util.RandomNs.RandomGenerator.JumpableGenerator>>("leaps", "(J)Ljava/util/stream/Stream;", arg0);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region SplittableGenerator
        public partial class SplittableGenerator
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.SplittableGenerator.html#split()"/>
            /// </summary>
            /// <returns><see cref="Java.Util.RandomNs.RandomGenerator.SplittableGenerator"/></returns>
            public Java.Util.RandomNs.RandomGenerator.SplittableGenerator Split()
            {
                return IExecuteWithSignature<Java.Util.RandomNs.RandomGenerator.SplittableGenerator>("split", "()Ljava/util/random/RandomGenerator$SplittableGenerator;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.SplittableGenerator.html#split(java.util.random.RandomGenerator.SplittableGenerator)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Util.RandomNs.RandomGenerator.SplittableGenerator"/></param>
            /// <returns><see cref="Java.Util.RandomNs.RandomGenerator.SplittableGenerator"/></returns>
            public Java.Util.RandomNs.RandomGenerator.SplittableGenerator Split(Java.Util.RandomNs.RandomGenerator.SplittableGenerator arg0)
            {
                return IExecuteWithSignature<Java.Util.RandomNs.RandomGenerator.SplittableGenerator>("split", "(Ljava/util/random/RandomGenerator$SplittableGenerator;)Ljava/util/random/RandomGenerator$SplittableGenerator;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.SplittableGenerator.html#splits(java.util.random.RandomGenerator.SplittableGenerator)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Util.RandomNs.RandomGenerator.SplittableGenerator"/></param>
            /// <returns><see cref="Java.Util.Stream.Stream"/></returns>
            public Java.Util.Stream.Stream<Java.Util.RandomNs.RandomGenerator.SplittableGenerator> Splits(Java.Util.RandomNs.RandomGenerator.SplittableGenerator arg0)
            {
                return IExecuteWithSignature<Java.Util.Stream.Stream<Java.Util.RandomNs.RandomGenerator.SplittableGenerator>>("splits", "(Ljava/util/random/RandomGenerator$SplittableGenerator;)Ljava/util/stream/Stream;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.SplittableGenerator.html#splits(long,java.util.random.RandomGenerator.SplittableGenerator)"/>
            /// </summary>
            /// <param name="arg0"><see cref="long"/></param>
            /// <param name="arg1"><see cref="Java.Util.RandomNs.RandomGenerator.SplittableGenerator"/></param>
            /// <returns><see cref="Java.Util.Stream.Stream"/></returns>
            public Java.Util.Stream.Stream<Java.Util.RandomNs.RandomGenerator.SplittableGenerator> Splits(long arg0, Java.Util.RandomNs.RandomGenerator.SplittableGenerator arg1)
            {
                return IExecute<Java.Util.Stream.Stream<Java.Util.RandomNs.RandomGenerator.SplittableGenerator>>("splits", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.SplittableGenerator.html#splits(long)"/>
            /// </summary>
            /// <param name="arg0"><see cref="long"/></param>
            /// <returns><see cref="Java.Util.Stream.Stream"/></returns>
            public Java.Util.Stream.Stream<Java.Util.RandomNs.RandomGenerator.SplittableGenerator> Splits(long arg0)
            {
                return IExecuteWithSignature<Java.Util.Stream.Stream<Java.Util.RandomNs.RandomGenerator.SplittableGenerator>>("splits", "(J)Ljava/util/stream/Stream;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.SplittableGenerator.html#rngs()"/>
            /// </summary>
            /// <returns><see cref="Java.Util.Stream.Stream"/></returns>
            public Java.Util.Stream.Stream<Java.Util.RandomNs.RandomGenerator> Rngs()
            {
                return IExecuteWithSignature<Java.Util.Stream.Stream<Java.Util.RandomNs.RandomGenerator>>("rngs", "()Ljava/util/stream/Stream;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.SplittableGenerator.html#rngs(long)"/>
            /// </summary>
            /// <param name="arg0"><see cref="long"/></param>
            /// <returns><see cref="Java.Util.Stream.Stream"/></returns>
            public Java.Util.Stream.Stream<Java.Util.RandomNs.RandomGenerator> Rngs(long arg0)
            {
                return IExecuteWithSignature<Java.Util.Stream.Stream<Java.Util.RandomNs.RandomGenerator>>("rngs", "(J)Ljava/util/stream/Stream;", arg0);
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.SplittableGenerator.html#splits()"/>
            /// </summary>
            /// <returns><see cref="Java.Util.Stream.Stream"/></returns>
            public Java.Util.Stream.Stream<Java.Util.RandomNs.RandomGenerator.SplittableGenerator> Splits()
            {
                return IExecuteWithSignature<Java.Util.Stream.Stream<Java.Util.RandomNs.RandomGenerator.SplittableGenerator>>("splits", "()Ljava/util/stream/Stream;");
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region StreamableGenerator
        public partial class StreamableGenerator
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.StreamableGenerator.html#rngs()"/>
            /// </summary>
            /// <returns><see cref="Java.Util.Stream.Stream"/></returns>
            public Java.Util.Stream.Stream<Java.Util.RandomNs.RandomGenerator> Rngs()
            {
                return IExecuteWithSignature<Java.Util.Stream.Stream<Java.Util.RandomNs.RandomGenerator>>("rngs", "()Ljava/util/stream/Stream;");
            }
            /// <summary>
            /// <see href="https://developer.android.com/reference/java/util/random/RandomGenerator.StreamableGenerator.html#rngs(long)"/>
            /// </summary>
            /// <param name="arg0"><see cref="long"/></param>
            /// <returns><see cref="Java.Util.Stream.Stream"/></returns>
            public Java.Util.Stream.Stream<Java.Util.RandomNs.RandomGenerator> Rngs(long arg0)
            {
                return IExecuteWithSignature<Java.Util.Stream.Stream<Java.Util.RandomNs.RandomGenerator>>("rngs", "(J)Ljava/util/stream/Stream;", arg0);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}