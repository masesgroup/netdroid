/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.8.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Javax.Security.Auth.Callback
{
    #region PasswordCallback
    public partial class PasswordCallback : Javax.Security.Auth.Callback.ICallback, Java.Io.ISerializable
    {
        #region Constructors
        /// <summary>
        /// <see href="https://developer.android.com/reference/javax/security/auth/callback/PasswordCallback.html#%3Cinit%3E(java.lang.String,boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="bool"/></param>
        public PasswordCallback(Java.Lang.String arg0, bool arg1)
            : base(arg0, arg1)
        {
        }

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Javax.Security.Auth.Callback.PasswordCallback"/> to <see cref="Javax.Security.Auth.Callback.Callback"/>
        /// </summary>
        public static implicit operator Javax.Security.Auth.Callback.Callback(Javax.Security.Auth.Callback.PasswordCallback t) => t.Cast<Javax.Security.Auth.Callback.Callback>();
        /// <summary>
        /// Converter from <see cref="Javax.Security.Auth.Callback.PasswordCallback"/> to <see cref="Java.Io.Serializable"/>
        /// </summary>
        public static implicit operator Java.Io.Serializable(Javax.Security.Auth.Callback.PasswordCallback t) => t.Cast<Java.Io.Serializable>();

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/javax/security/auth/callback/PasswordCallback.html#isEchoOn()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsEchoOn()
        {
            return IExecuteWithSignature<bool>("isEchoOn", "()Z");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/javax/security/auth/callback/PasswordCallback.html#getPassword()"/>
        /// </summary>
        /// <returns><see cref="char"/></returns>
        public char[] GetPassword()
        {
            return IExecuteWithSignatureArray<char>("getPassword", "()[C");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/javax/security/auth/callback/PasswordCallback.html#getPrompt()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetPrompt()
        {
            return IExecuteWithSignature<Java.Lang.String>("getPrompt", "()Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/javax/security/auth/callback/PasswordCallback.html#clearPassword()"/>
        /// </summary>
        public void ClearPassword()
        {
            IExecuteWithSignature("clearPassword", "()V");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/javax/security/auth/callback/PasswordCallback.html#setPassword(char[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="char"/></param>
        public void SetPassword(char[] arg0)
        {
            IExecuteWithSignature("setPassword", "([C)V", new object[] { arg0 });
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}