/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.1.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Javax.Net.Ssl
{
    #region HandshakeCompletedEvent
    public partial class HandshakeCompletedEvent
    {
        #region Constructors
        /// <summary>
        /// <see href="https://developer.android.com/reference/javax/net/ssl/HandshakeCompletedEvent.html#%3Cinit%3E(javax.net.ssl.SSLSocket,javax.net.ssl.SSLSession)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Javax.Net.Ssl.SSLSocket"/></param>
        /// <param name="arg1"><see cref="Javax.Net.Ssl.SSLSession"/></param>
        public HandshakeCompletedEvent(Javax.Net.Ssl.SSLSocket arg0, Javax.Net.Ssl.SSLSession arg1)
            : base(arg0, arg1)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/javax/net/ssl/HandshakeCompletedEvent.html#getCipherSuite()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetCipherSuite()
        {
            return IExecuteWithSignature<Java.Lang.String>("getCipherSuite", "()Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/javax/net/ssl/HandshakeCompletedEvent.html#getLocalCertificates()"/>
        /// </summary>
        /// <returns><see cref="Java.Security.Cert.Certificate"/></returns>
        public Java.Security.Cert.Certificate[] GetLocalCertificates()
        {
            return IExecuteWithSignatureArray<Java.Security.Cert.Certificate>("getLocalCertificates", "()[Ljava/security/cert/Certificate;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/javax/net/ssl/HandshakeCompletedEvent.html#getPeerCertificates()"/>
        /// </summary>
        /// <returns><see cref="Java.Security.Cert.Certificate"/></returns>
        /// <exception cref="Javax.Net.Ssl.SSLPeerUnverifiedException"/>
        public Java.Security.Cert.Certificate[] GetPeerCertificates()
        {
            return IExecuteWithSignatureArray<Java.Security.Cert.Certificate>("getPeerCertificates", "()[Ljava/security/cert/Certificate;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/javax/net/ssl/HandshakeCompletedEvent.html#getLocalPrincipal()"/>
        /// </summary>
        /// <returns><see cref="Java.Security.Principal"/></returns>
        public Java.Security.Principal GetLocalPrincipal()
        {
            return IExecuteWithSignature<Java.Security.Principal>("getLocalPrincipal", "()Ljava/security/Principal;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/javax/net/ssl/HandshakeCompletedEvent.html#getPeerPrincipal()"/>
        /// </summary>
        /// <returns><see cref="Java.Security.Principal"/></returns>
        /// <exception cref="Javax.Net.Ssl.SSLPeerUnverifiedException"/>
        public Java.Security.Principal GetPeerPrincipal()
        {
            return IExecuteWithSignature<Java.Security.Principal>("getPeerPrincipal", "()Ljava/security/Principal;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/javax/net/ssl/HandshakeCompletedEvent.html#getSession()"/>
        /// </summary>
        /// <returns><see cref="Javax.Net.Ssl.SSLSession"/></returns>
        public Javax.Net.Ssl.SSLSession GetSession()
        {
            return IExecuteWithSignature<Javax.Net.Ssl.SSLSession>("getSession", "()Ljavax/net/ssl/SSLSession;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/javax/net/ssl/HandshakeCompletedEvent.html#getSocket()"/>
        /// </summary>
        /// <returns><see cref="Javax.Net.Ssl.SSLSocket"/></returns>
        public Javax.Net.Ssl.SSLSocket GetSocket()
        {
            return IExecuteWithSignature<Javax.Net.Ssl.SSLSocket>("getSocket", "()Ljavax/net/ssl/SSLSocket;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/javax/net/ssl/HandshakeCompletedEvent.html#getPeerCertificateChain()"/>
        /// </summary>
        /// <returns><see cref="Javax.Security.Cert.X509Certificate"/></returns>
        /// <exception cref="Javax.Net.Ssl.SSLPeerUnverifiedException"/>
        [global::System.Obsolete()]
        public Javax.Security.Cert.X509Certificate[] GetPeerCertificateChain()
        {
            return IExecuteWithSignatureArray<Javax.Security.Cert.X509Certificate>("getPeerCertificateChain", "()[Ljavax/security/cert/X509Certificate;");
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}