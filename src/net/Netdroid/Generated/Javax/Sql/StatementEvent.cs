/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.2.0)
*  using android.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Javax.Sql
{
    #region StatementEvent
    public partial class StatementEvent
    {
        #region Constructors
        /// <summary>
        /// <see href="https://developer.android.com/reference/javax/sql/StatementEvent.html#%3Cinit%3E(javax.sql.PooledConnection,java.sql.PreparedStatement,java.sql.SQLException)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Javax.Sql.PooledConnection"/></param>
        /// <param name="arg1"><see cref="Java.Sql.PreparedStatement"/></param>
        /// <param name="arg2"><see cref="Java.Sql.SQLException"/></param>
        public StatementEvent(Javax.Sql.PooledConnection arg0, Java.Sql.PreparedStatement arg1, Java.Sql.SQLException arg2)
            : base(arg0, arg1, arg2)
        {
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/javax/sql/StatementEvent.html#%3Cinit%3E(javax.sql.PooledConnection,java.sql.PreparedStatement)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Javax.Sql.PooledConnection"/></param>
        /// <param name="arg1"><see cref="Java.Sql.PreparedStatement"/></param>
        public StatementEvent(Javax.Sql.PooledConnection arg0, Java.Sql.PreparedStatement arg1)
            : base(arg0, arg1)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://developer.android.com/reference/javax/sql/StatementEvent.html#getStatement()"/>
        /// </summary>
        /// <returns><see cref="Java.Sql.PreparedStatement"/></returns>
        public Java.Sql.PreparedStatement GetStatement()
        {
            return IExecuteWithSignature<Java.Sql.PreparedStatement>("getStatement", "()Ljava/sql/PreparedStatement;");
        }
        /// <summary>
        /// <see href="https://developer.android.com/reference/javax/sql/StatementEvent.html#getSQLException()"/>
        /// </summary>
        /// <returns><see cref="Java.Sql.SQLException"/></returns>
        public Java.Sql.SQLException GetSQLException()
        {
            var obj = IExecuteWithSignature<MASES.JCOBridge.C2JBridge.JVMInterop.IJavaObject>("getSQLException", "()Ljava/sql/SQLException;"); return MASES.JCOBridge.C2JBridge.JVMBridgeException.New<Java.Sql.SQLException>(obj);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}